,code
0,synchronized void register State Handler (  State Handler state Handler ) { m Pending State Handlers . add ( state Handler )  ; }
1,"public static  Object Animator of Float ( T target,  Property<T,  Float> property, float .  .  .  values ) {  Object Animator anim = new  Object Animator ( target, property )  ;  anim . set Float Values ( values )  ;  return anim ; }"
2,public static  Firebase Config< Firebase Module> builder (  ) { return instance . config ; }
3,"public  Group Prop Single Supported Attribute Model View Model_ title ( @ Non Null  Object title ) { if  ( title == null )  {     throw new  Illegal Argument Exception ( ""title cannot be null"" )  ;  } assigned Attributes_epoxy Generated Model . set ( 1 )  ;  assigned Attributes_epoxy Generated Model . clear ( 0 )  ;  this . title_ String = null ;  on Mutation (  )  ;  this . title_ Object = title ;  return this ; }"
4,private static  Collection<V> unmodifiable Value Collection (  Collection<V> collection ) { if  ( collection instanceof  Sorted Set )  {     return  Collections . unmodifiable Sorted Set (  (  Sorted Set<V> )  collection )  ;  } else if  ( collection instanceof  Set )  {     return  Collections . unmodifiable Set (  (  Set<V> )  collection )  ;  } else if  ( collection instanceof  List )  {     return  Collections . unmodifiable List (  (  List<V> )  collection )  ;  } return  Collections . unmodifiable Collection ( collection )  ; }
5,"public com . anychart . charts .  Sunburst radius (  String radius ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . radius ( %s )  ; "", wrap Quotes ( radius )  )  )  ;  return this ; }"
6,public void set Expanded ( final  String id ) { if  ( m Expanded Ids != null )  {     if  ( m Expanded Ids . contains ( id )  )  {         return ;      }     m Expanded Ids . add ( id )  ;  }}
7,"public void test Get Final Position (  ) {  Spruce Spring Animation animation = new  Spruce Spring Animation ( m View1,  Spruce Dynamics . TRANSLATION_X, 20 )  ;  assert Equals ( 20, animation . get Spring (  )  . get Final Position (  ) , 0 )  ;   Spring Force spring = new  Spring Force (  )  ;  spring . set Final Position ( 25 . 0f )  ;  assert Equals ( 25 . 0f, spring . get Final Position (  ) , 0 . 0f )  ; }"
8,"public static  Unbinder bind ( @ Non Null  Object target, @ Non Null  Activity source ) {  View source View = source . get Window (  )  . get Decor View (  )  ;  return bind ( target, source View )  ; }"
9,public static void check Argument ( @ Nullable  Boolean expression ) { if  ( expression != null && !expression )  {     throw new  Illegal Argument Exception (  )  ;  }}
10,"public void marker Annotate (  String annotation Key, boolean annotation Value ) { m Annotations . put ( annotation Key, annotation Value )  ; }"
11,"private void init Crop Frame Style ( @ Non Null  Typed Array a ) { int crop Frame Stroke Size = a . get Dimension Pixel Size ( R . styleable . ucrop_U Crop View_ucrop_frame_stroke_size, get Resources (  )  . get Dimension Pixel Size ( R . dimen . ucrop_default_crop_frame_stoke_width )  )  ;  int crop Frame Color = a . get Color ( R . styleable . ucrop_U Crop View_ucrop_frame_color, get Resources (  )  . get Color ( R . color . ucrop_color_default_crop_frame )  )  ;  m Crop Frame Paint . set Stroke Width ( crop Frame Stroke Size )  ;  m Crop Frame Paint . set Color ( crop Frame Color )  ;  m Crop Frame Paint . set Style (  Paint .  Style . STROKE )  ;  m Crop Frame Corners Paint . set Stroke Width ( crop Frame Stroke Size * 3 )  ;  m Crop Frame Corners Paint . set Color ( crop Frame Color )  ;  m Crop Frame Corners Paint . set Style (  Paint .  Style . STROKE )  ; }"
12,"public com . anychart . charts .  Pareto background (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
13,"Auto Size Config init (  Application application, boolean is Base On Width ) { return init ( application, is Base On Width, null )  ; }"
14,"public static void put ( @ Non Null final  String key, @ Nullable final byte [  ]  value, @ Non Null final  Cache Disk Utils cache Disk Utils ) { cache Disk Utils . put ( key, value )  ; }"
15,"public void put (  String name,  Scriptable start,  Object value ) { if  ( put Impl ( name, 0, start, value, EMPTY )  )      return ;  if  ( start == this )      throw  Kit . code Bug (  )  ;  start . put ( name, start, value )  ; }"
16,public boolean is Friend Feature Supported (  ) { switch ( friend )  {     case UNSUPPORTED:         return false ;      case ENABLED:     case DISABLED:     default:         return true ;  }}
17,"public void dont_test Http (  )  throws  Exception{  String content = "" Log . d ( ' Rhino Test', ' Http Test, js' )  ; "" ;  // http server content += ""var srv = http . create Server ( NCC, function ( req, res ) {"" + ""   Log . d ( ' Rhino Test', 'req . url:'+req . url (  ) +',headers:'+req . headers (  )  )  ; "" + ""  res . set Header ( 'from', ' Rhino js http' )  ; "" + ""  res . write Head ( 200 )  ; "" + ""  res . end ( 'http from js', 'utf-8', null )  ; "" + ""} )  ; "" ;  content += ""srv . listen ( 51669, '0 . 0 . 0 . 0', function (  ) {"" + ""   Log . d ( ' Rhino Test', ' Http server listening on 0 . 0 . 0 . 0:51669' )  ; "" + ""} )  ; "" ;  // http request content += ""NCC . set Timeout ( function (  ) {"" + ""   Log . d ( ' Rhino Test', 'http get  .  .  . ' )  ; "" ;  content += ""  NCC . set Interval ( function (  ) {"" + ""     Log . d ( ' Rhino Test', 'http get iteration ' )  ; "" ;  content += ""    http . get ( NCC, 'http://localhost:51669', function ( res ) {"" + ""       Log . d ( ' Rhino Test', 'http got response, headers:'+res . headers (  )  )  ; "" + """" + ""      res . set Encoding ( 'utf-8' )  ; "" + """" + ""      res . on ( 'data', function ( data ) {"" + ""         Log . d ( ' Rhino Test', 'http:'+data . to String (  )  )  ; "" + ""      } )  ; "" + ""    } )  ; "" ;  content += ""  }, 2000 )  ; "" ;  content += ""}, 2000 )  ; "" ;  run Script ( content )  ; }"
18,"public void detach Root View (  React Root react Root ) {  Ui Thread Util . assert On Ui Thread (  )  ;  synchronized  ( m Attached React Roots )  {     if  ( m Attached React Roots . contains ( react Root )  )  {          React Context current Context = get Current React Context (  )  ;          m Attached React Roots . remove ( react Root )  ;          if  ( current Context != null && current Context . has Active React Instance (  )  )  {             detach View From Instance ( react Root, current Context . get Catalyst Instance (  )  )  ;          }     } }}"
19,"public static int read Packed Int (  Input Stream is, int num Bytes, boolean is Little Endian )  throws IO Exception{ int value = 0 ;  for  ( int i = 0 ;  i < num Bytes ;  i++ )  {     int b = is . read (  )  ;      if  ( b == -1 )  {         throw new IO Exception ( ""no more bytes"" )  ;      }     if  ( is Little Endian )  {         value |=  ( b & 0x FF )  <<  ( i * 8 )  ;      } else {         value =  ( value << 8 )  |  ( b & 0x FF )  ;      } } return value ; }"
20,"public com . anychart . core . gantt . elements .  Connector Element fill ( com . anychart . graphics . vector .  Gradient Key color,  Number cx,  Number cy, com . anychart . graphics . math .  Rect opacity Or Mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, cx, cy,  ( opacity Or Mode != null )  ? opacity Or Mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
21,"public com . anychart . core . stock . scrollerseries .  Stick stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
22,"private void replace Def (  Ssa Insn def,  Ssa Insn prev, int length,  Array List< Register Spec> new Regs ) {  Type result Type = def . get Result (  )  . get Type (  )  ;  //  Create new zeroed out registers for each element in the array for  ( int i = 0 ;  i < length ;  i++ )  {      Constant new Zero =  Zeroes . zero For ( result Type . get Component Type (  )  )  ;       Typed Constant typed Zero =  (  Typed Constant )  new Zero ;       Register Spec new Reg =  Register Spec . make ( ssa Meth . make New Ssa Reg (  ) , typed Zero )  ;      new Regs . add ( new Reg )  ;      insert Plain Insn Before ( def,  Register Spec List . EMPTY, new Reg,  Reg Ops . CONST, new Zero )  ;  }}"
23,"public com . anychart . core . annotations .  Fibonacci Base left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
24,public void tick ( int sec Delta ) { mock System Reader . tick ( sec Delta )  ; }
25,"public  Map Joiner use For Null (  String null Text ) { return new  Map Joiner ( joiner . use For Null ( null Text ) , key Value Separator )  ; }"
26,"public com . anychart . scales .  Geo y Minor Ticks (  String [  ]  settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Minor Ticks ( %s )  ; "", array To String Wrap Quotes ( settings )  )  )  ;  return this ; }"
27,"public com . anychart . charts .  Cartesian y Minor Grid (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Minor Grid ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
28,"public com . anychart . core . cartesian . series .  Column3d bounds (  Number x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
29,"public com . anychart . core . gantt . elements .  Progress Element stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
30,"public com . anychart . standalones .  Project Timeline range Marker (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . range Marker ( %s )  ; "", value )  )  ;  return this ; }"
31,"public static void assert Shell Commands (  String user Message,  List< String> expected,  List< Step> observed,  Execution Context context ) {  Iterator< String> expected Iter = expected . iterator (  )  ;   Iterator< Step> observed Iter = observed . iterator (  )  ;   Joiner joiner =  Joiner . on ( "" "" )  ;  while  ( expected Iter . has Next (  )  && observed Iter . has Next (  )  )  {      String expected Shell Command = expected Iter . next (  )  ;       Step observed Step = observed Iter . next (  )  ;      if  ( ! ( observed Step instanceof  Shell Step )  )  {         fail With ( user Message, "" Observed command must be a shell command: "" + observed Step )  ;      }      Shell Step shell Command =  (  Shell Step )  observed Step ;       String observed Shell Command = joiner . join ( shell Command . get Shell Command ( context )  )  ;      assert Equals ( user Message, expected Shell Command, observed Shell Command )  ;  } if  ( expected Iter . has Next (  )  )  {     fail With ( user Message, "" Extra expected command: "" + expected Iter . next (  )  )  ;  } if  ( observed Iter . has Next (  )  )  {     fail With ( user Message, "" Extra observed command: "" + observed Iter . next (  )  )  ;  }}"
32,"public com . anychart . core . ui .  Legend legend (  ) { return new com . anychart . core . ui .  Legend ( js Base + "" . legend (  ) "" )  ; }"
33,"public  To String Builder append (  String field Name,  Object [  ]  array ) { style . append ( buffer, field Name, array, null )  ;  return this ; }"
34,public  Params persist (  ) { this . persistent = true ;  return this ; }
35,"public com . anychart . graphics . vector .  Pattern Fill layer (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . layer (  )  ; "" )  ;  return this ; }"
36,public T12 get Value12 (  ) { return value12 ; }
37,"public  String int Write (  ) { return ""array Write Int"" ; }"
38,public  String get Action (  ) { return  Native Protocol . ACTION_OGACTIONPUBLISH_DIALOG ; }
39,"public com . anychart . core . stock . scrollerseries .  Range Step Area container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
40,"public com . anychart . charts .  Radar x Axis (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Axis ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
41,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
42,"static void register (  ) {  Filter Command Registry . register ( org . eclipse . jgit . lib .  Constants . BUILTIN_FILTER_PREFIX +  Constants . ATTR_FILTER_DRIVER_PREFIX + org . eclipse . jgit . lib .  Constants . ATTR_FILTER_TYPE_CLEAN, FACTORY )  ; }"
43,"public  Litho View Rule use Litho View (  Litho View litho View ) { m Litho View = litho View ;  if  ( m Litho View . get Component Context (  )  != m Context )  {     throw new  Runtime Exception ( "" You must use the same  Component Context for the  Litho View as what is on the  Litho View Rule @ Rule!"" )  ;  } if  ( m Component Tree != null )  {     m Litho View . set Component Tree ( m Component Tree )  ;  } return this ; }"
44,"public void play (  )  throws  Cast Exception,  Transient Network Disconnection Exception,  No Connection Exception{ play ( null )  ; }"
45,public boolean contains ( @ Null T item ) { if  ( item == null )      return false ;  return selected . contains ( item )  ; }
46,public  Wait For Read Request split ( @ Non Null final  Write Progress Callback callback ) { this . data Splitter = MTU_SPLITTER ;  this . progress Callback = callback ;  return this ; }
47,public  Cst Type get This Class (  ) { return this Class ; }
48,public void close (  ) { try {     connection . close (  )  ;  } catch  (  Exception e )  {      ;  }}
49,"private static boolean full Compatible With GLES2 (  ) { // see https://www . opengl . org/registry/specs/ARB/ES2_compatibility . txt return gl Version . is Version Equal To Or Higher ( 4, 1 )  || extensions . contains ( ""GL_ARB_ES2_compatibility"", false )  ; }"
50,private  Optional< Thrift Rule Key Logger> create Rule Key Logger (  )  throws IO Exception{ if  ( rule Key Log Path == null )  {     return  Optional . empty (  )  ;  } else {     return  Optional . of (  Thrift Rule Key Logger . create (  Paths . get ( rule Key Log Path )  )  )  ;  }}
51,"public boolean remove Index ( int index ) { if  ( index >= size )      throw new  Index Out Of Bounds Exception ( ""index can't be >= size: "" + index + "" >= "" + size )  ;  boolean [  ]  items = this . items ;  boolean value = items [ index ]  ;  size-- ;  if  ( ordered )       System . arraycopy ( items, index + 1, items, index, size - index )  ;  else     items [ index ]  = items [ size ]  ;  return value ; }"
52,public void set Show Legend ( boolean show Legend ) { m Show Legend = show Legend ; }
53,"static boolean retain All Impl (  Multiset<?> self,  Collection<?> elements To Retain ) { check Not Null ( elements To Retain )  ;   Collection<?> collection =  ( elements To Retain instanceof  Multiset )  ?  (  (  Multiset<?> )  elements To Retain )  . element Set (  )  : elements To Retain ;  return self . element Set (  )  . retain All ( collection )  ; }"
54,"public static  String get Lunar Year Text ( int lunar Year ) { return  Gan [  ( lunar Year - 4 )  % 10 ]  +  Zhi [  ( lunar Year - 4 )  % 12 ]  + ""年"" ; }"
55,"public com . anychart . core . stock . scrollerseries .  Range Area hatch Fill ( com . anychart . graphics . vector . hatchfill .  Hatch Fill Type type,  String color,  Number thickness,  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s, %s, %s, %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null, wrap Quotes ( color ) , thickness, size )  )  ;  return this ; }"
56,"public void test Acquire Token Cache Lookup Return Wrong User Id (  )  throws  Interrupted Exception{ final  File Mock Context mock Context = new  File Mock Context ( get Instrumentation (  )  . get Context (  )  )  ;  final  String resource = "" Resource"" + UUID . random UUID (  )  ;  final  String client Id = ""clientid"" + UUID . random UUID (  )  ;  final I Token Cache Store mock Cache = new  Default Token Cache Store ( mock Context )  ;  mock Cache . remove All (  )  ;  final  Calendar time Ahead = new  Gregorian Calendar (  )  ;  time Ahead . add (  Calendar . MINUTE, EXPIRES_ON_ADJUST_MINS )  ;   Token Cache Item refresh Item = new  Token Cache Item (  )  ;  refresh Item . set Authority ( VALID_AUTHORITY )  ;  refresh Item . set Resource ( resource )  ;  refresh Item . set Client Id ( client Id )  ;  refresh Item . set Access Token ( ""token"" )  ;  refresh Item . set Refresh Token ( ""refresh Token"" )  ;  refresh Item . set Expires On ( time Ahead . get Time (  )  )  ;  refresh Item . set Is Multi Resource Refresh Token ( false )  ;  final  User Info userinfo = new  User Info ( ""user2"", ""test"", ""test"", ""idp"", ""user2"" )  ;  refresh Item . set User Info ( userinfo )  ;  final  String key =  Cache Key . create Cache Key For RT Entry ( VALID_AUTHORITY, resource, client Id, ""user1"" )  ;  mock Cache . set Item ( key, refresh Item )  ;  final  Token Cache Item item = mock Cache . get Item ( key )  ;  assert Not Null ( ""item is in cache"", item )  ;  final  Authentication Context context = get Authentication Context ( mock Context, VALID_AUTHORITY, false, mock Cache )  ;  final  Mock Activity test Activity = new  Mock Activity (  )  ;  final  Count Down Latch signal = new  Count Down Latch ( 1 )  ;  test Activity . m Signal = signal ;  final  Mock Authentication Callback callback = new  Mock Authentication Callback ( signal )  ;  //  Acquire token call will return from cache context . acquire Token Silent Async ( resource, client Id, ""user1"", callback )  ;  signal . await ( CONTEXT_REQUEST_TIME_OUT,  Time Unit . MILLISECONDS )  ;  assert Not Null ( "" Error is not null"", callback . get Exception (  )  )  ;  assert True ( "" Error is related to user mismatch"", callback . get Exception (  )  . get Message (  )  . contains ( "" User returned by service does not match the one in the request"" )  )  ;  clear Cache ( context )  ; }"
57,"public  Binary Bitmap crop ( int left, int top, int width, int height ) {  Luminance Source new Source = binarizer . get Luminance Source (  )  . crop ( left, top, width, height )  ;  return new  Binary Bitmap ( binarizer . create Binarizer ( new Source )  )  ; }"
58,"public void update Manifest (  Dash Manifest manifest, int period Index ) { this . manifest = manifest ;  this . period Index = period Index ;  player Emsg Handler . update Manifest ( manifest )  ;  if  ( sample Streams != null )  {     for  (  Chunk Sample Stream< Dash Chunk Source> sample Stream : sample Streams )  {         sample Stream . get Chunk Source (  )  . update Manifest ( manifest, period Index )  ;      }     callback . on Continue Loading Requested ( this )  ;  } event Streams = manifest . get Period ( period Index )  . event Streams ;  for  (  Event Sample Stream event Sample Stream : event Sample Streams )  {     for  (  Event Stream event Stream : event Streams )  {         if  ( event Stream . id (  )  . equals ( event Sample Stream . event Stream Id (  )  )  )  {             int last Period Index = manifest . get Period Count (  )  - 1 ;              event Sample Stream . update Event Stream ( event Stream, /* event Stream Appendable= */             manifest . dynamic && period Index == last Period Index )  ;              break ;          }     } }}"
59,public  Builder thread Pool Configuration ( @ Nullable  Layout Thread Pool Configuration thread Pool Configuration ) { if  ( thread Pool Configuration != null )  {     m Thread Pool Configuration = thread Pool Configuration ;  } else {     m Thread Pool Configuration = DEFAULT_THREAD_POOL_CONFIG ;  } return this ; }
60,public boolean is Next To Right Bound (  ) { return  ( get View (  )  . get Left (  )  - get Margin Right (  )  )  > get Parent View (  )  . get Width (  )  * 0 . 75 ; }
61,"public static  Immutable Double Array of ( double e0, double e1, double e2, double e3 ) { return new  Immutable Double Array ( new double [  ]  { e0, e1, e2, e3 } )  ; }"
62,public void set Selected Pref Width ( boolean selected Pref Width ) { this . selected Pref Width = selected Pref Width ; }
63,"public static boolean has Always Denied Permission (  Activity activity,  List< String> denied Permissions ) { return has Always Denied Permission ( new  Activity Source ( activity ) , denied Permissions )  ; }"
64,"public  File get Files Dir (  ) { return prepare ( new  File ( context . get Files Dir (  ) , FILES_PATH )  )  ; }"
65,"private int get Margin ( int gravity, int margin, int minimum Margin ) { switch ( gravity )  {     case  Gravity . CENTER:         return  ( margin == INVALID )  ? minimum Margin : margin ;      default:         return  ( margin == INVALID )  ? 0 : margin ;  }}"
66,"private static boolean is Heif Header ( final byte [  ]  image Header Bytes, final int header Size ) { if  ( header Size < HEIF_HEADER_LENGTH )  {     return false ;  } final byte box Length = image Header Bytes [ 3 ]  ;  if  ( box Length < 8 )  {     return false ;  } if  ( ! Image Format Checker Utils . has Pattern At ( image Header Bytes, HEIF_HEADER_PREFIX, 4 )  )  {     return false ;  } for  ( final byte [  ]  heif Ftype : HEIF_HEADER_SUFFIXES )  {     if  (  Image Format Checker Utils . has Pattern At ( image Header Bytes, heif Ftype, 8 )  )  {         return true ;      } } return false ; }"
67,"public void include Point (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . include Point ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ; }"
68,"public void align (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . align (  )  ; "" )  ; }"
69,"private static void apply Texture View Rotation (  Texture View texture View, int texture View Rotation ) { float texture View Width = texture View . get Width (  )  ;  float texture View Height = texture View . get Height (  )  ;  if  ( texture View Width == 0 || texture View Height == 0 || texture View Rotation == 0 )  {     texture View . set Transform ( null )  ;  } else {      Matrix transform Matrix = new  Matrix (  )  ;      float pivot X = texture View Width / 2 ;      float pivot Y = texture View Height / 2 ;      transform Matrix . post Rotate ( texture View Rotation, pivot X, pivot Y )  ;      //  After rotation, scale the rotated texture to fit the  Texture View size .       Rect F original Texture Rect = new  Rect F ( 0, 0, texture View Width, texture View Height )  ;       Rect F rotated Texture Rect = new  Rect F (  )  ;      transform Matrix . map Rect ( rotated Texture Rect, original Texture Rect )  ;      transform Matrix . post Scale ( texture View Width / rotated Texture Rect . width (  ) , texture View Height / rotated Texture Rect . height (  ) , pivot X, pivot Y )  ;      texture View . set Transform ( transform Matrix )  ;  }}"
70,"public static void sync Cookie (  String url,  String cookies ) {  Cookie Manager m Cookie Manager =  Cookie Manager . get Instance (  )  ;  if  ( m Cookie Manager != null )  {     m Cookie Manager . set Cookie ( url, cookies )  ;      to Sync Cookies (  )  ;  }}"
71,public  List< Integer> get Bound App Key Indexes (  ) { return  Collections . unmodifiable List ( m Bound App Key Indexes )  ; }
72,"public com . anychart . core . gauge .  Cap stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
73,"public com . anychart . graphics . vector .  Element desc (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . desc ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
74,"public void test Drawable Children Layout Direction (  ) { final  Simple Mount Spec Tester child1 =  Simple Mount Spec Tester . create ( m Context )  . build (  )  ;  final  Simple Mount Spec Tester child2 =  Simple Mount Spec Tester . create ( m Context )  . build (  )  ;  final  Litho View litho View = mount Component ( m Context, new  Inline Layout Spec (  )  {     @ Override     protected  Component on Create Layout (  Component Context c )  {         return  Row . create ( c )  . layout Direction ( LTR )  . child (  Wrapper . create ( c )  . delegate ( child1 )  . width Px ( 10 )  . height Px ( 10 )  )  . child (  Wrapper . create ( c )  . delegate ( child2 )  . width Px ( 10 )  . height Px ( 10 )  )  . build (  )  ;      } }, 20, 10 )  ;   Drawable drawable1 = litho View . get Drawables (  )  . get ( 0 )  ;   Drawable drawable2 = litho View . get Drawables (  )  . get ( 1 )  ;  assert That ( drawable1 . get Bounds (  )  )  . is Equal To ( new  Rect ( 0, 0, 10, 10 )  )  ;  assert That ( drawable2 . get Bounds (  )  )  . is Equal To ( new  Rect ( 10, 0, 20, 10 )  )  ;  mount Component ( m Context, litho View, new  Inline Layout Spec (  )  {     @ Override     protected  Component on Create Layout (  Component Context c )  {         return  Row . create ( c )  . layout Direction ( RTL )  . child (  Wrapper . create ( c )  . delegate ( child1 )  . width Px ( 10 )  . height Px ( 10 )  )  . child (  Wrapper . create ( c )  . delegate ( child2 )  . width Px ( 10 )  . height Px ( 10 )  )  . build (  )  ;      } }, 20, 10 )  ;  drawable1 = litho View . get Drawables (  )  . get ( 0 )  ;  drawable2 = litho View . get Drawables (  )  . get ( 1 )  ;  assert That ( drawable1 . get Bounds (  )  )  . is Equal To ( new  Rect ( 10, 0, 20, 10 )  )  ;  assert That ( drawable2 . get Bounds (  )  )  . is Equal To ( new  Rect ( 0, 0, 10, 10 )  )  ; }"
75,"public static  Mixpanel API get Instance (  Context context,  String token ) { return get Instance ( context, token, false, null )  ; }"
76,"public void start (  Sensor Manager manager ) {  Assertions . assert Not Null ( manager )  ;   Sensor accelerometer = manager . get Default Sensor (  Sensor . TYPE_ACCELEROMETER )  ;  if  ( accelerometer != null )  {     m Sensor Manager = manager ;      m Last Timestamp = -1 ;      m Sensor Manager . register Listener ( this, accelerometer,  Sensor Manager . SENSOR_DELAY_UI )  ;      m Last Shake Timestamp = 0 ;      reset (  )  ;  }}"
77,"public void consume Async (  List< Purchase> purchases,  On Consume Multi Finished Listener listener ) { check Not Disposed (  )  ;  check Setup Done ( ""consume"" )  ;  consume Async Internal ( purchases, null, listener )  ; }"
78,"public void disable (  ) { if  ( disabled )  {     return ;  } disabled = true ;  try {     for  (  Region region : regions )  {         beacon Manager . stop Monitoring Beacons In Region ( region )  ;      } } catch  (  Remote Exception e )  {      Log Manager . e ( e, TAG, "" Can't stop bootstrap regions"" )  ;  } beacon Manager . unbind ( beacon Consumer )  ; }"
79,"public com . anychart . core . ui .  Crosshair container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
80,public static  Account get Account ( int account No ) { return  Optional . of ( account No )  . map ( accounts::get )  . map (  Account::copy )  . or Else ( null )  ; }
81,"public static  Custom Zip Output Stream new Output Stream (  Path zip File )  throws IO Exception{ return new Output Stream ( new  Buffered Output Stream (  Files . new Output Stream ( zip File ) , FILE_BUFFER_SIZE )  )  ; }"
82,public void set Text Color ( int text Color ) { this . text Color = text Color ;  setup Text Colors (  )  ; }
83,"public  Callback Prop Model View Model_ on Visibility State Changed (  On Model Visibility State Changed Listener< Callback Prop Model View Model_,  Callback Prop Model View> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
84,"private static void add Password (  List<char [  ] > passwords, char [  ]  password ) { for  ( char [  ]  existing Password : passwords )  {     if  (  Arrays . equals ( password, existing Password )  )  {         return ;      } } passwords . add ( password )  ; }"
85,"public void set Connect Timeout ( int timeout ) {  Assert . is True ( timeout >= 0, "" Timeout must be a non-negative value"" )  ;  this . connect Timeout = timeout ;  set Legacy Connection Timeout ( get Http Client (  ) , timeout )  ; }"
86,private int get Registers Size (  ) { return code . get Insns (  )  . get Registers Size (  )  ; }
87,"public com . anychart . charts .  Radar y Minor Grid (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Minor Grid ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
88,public void set Forever ( boolean is Forever ) { this . is Forever = is Forever ; }
89,"public com . anychart . core . venn .  Intersections fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
90,"private void do Copy ( final int offset, final  Memory Chunk other, final int other Offset, final int count ) { if  ( ! ( other instanceof  Ashmem Memory Chunk )  )  {     throw new  Illegal Argument Exception ( "" Cannot copy two incompatible  Memory Chunks"" )  ;  }  Preconditions . check State ( !is Closed (  )  )  ;   Preconditions . check State ( !other . is Closed (  )  )  ;   Memory Chunk Util . check Bounds ( offset, other . get Size (  ) , other Offset, count, get Size (  )  )  ;  m Byte Buffer . position ( offset )  ;  //  Byte Buffer can't be null at this point other . get Byte Buffer (  )  . position ( other Offset )  ;  //  Recover the necessary part to be copied as a byte array .  //  This requires a copy, for now there is not a more efficient alternative .  byte [  ]  b = new byte [ count ]  ;  m Byte Buffer . get ( b, 0, count )  ;  other . get Byte Buffer (  )  . put ( b, 0, count )  ; }"
91,"public static int to Int Value ( char ch, int default Value ) { if  ( is Ascii Numeric ( ch )  == false )  {     return default Value ;  } return ch - 48 ; }"
92,"public com . anychart . charts .  Circular Gauge select Marquee Fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
93,"public  List< String> get Images (  Async Task async Task,  Document document,  Hash Map< String,  String> meta Tags ) {  List< String> images = get Meta Image ( meta Tags )  ;  if  ( images . is Empty (  )  )  {     images . add All ( get Images From Img Tags ( async Task, document )  )  ;  } return images ; }"
94,protected void init (  ) { m Selected Day = new  Calendar Day (  System . current Time Millis (  )  )  ; }
95,"public com . anychart . standalones .  Data Grid column Stroke (  String color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . column Stroke ( %s )  ; "", wrap Quotes ( color )  )  )  ;  return this ; }"
96,"public com . anychart . standalones .  Resource List parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
97,"public  Generate Default Layout Method Parent Layout$ No Layout_ on Visibility Changed (  On Model Visibility Changed Listener< Generate Default Layout Method Parent Layout$ No Layout_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
98,"public static void do Clip View Width ( final  View view, int src Width, int end Width, int duration ) {  Value Animator value Animator =  Value Animator . of Int ( src Width, end Width )  . set Duration ( duration )  ;  value Animator . add Update Listener ( new  Value Animator .  Animator Update Listener (  )  {     @ Override     public void on Animation Update (  Value Animator value Animator )  {         int width =  ( int )  value Animator . get Animated Value (  )  ;           View Group .  Layout Params layout Params = view . get Layout Params (  )  ;          layout Params . width = width ;          view . set Layout Params ( layout Params )  ;      } } )  ;  value Animator . set Interpolator ( new  Accelerate Interpolator (  )  )  ;  value Animator . start (  )  ; }"
99,"public void get Selected Points (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Selected Points (  )  ; "" )  ; }"
100,"public void scroll To Group ( int group Position, int child Item Height, int top Margin, int bottom Margin,  Adapter Path path ) { int total Children Height = get Child Count ( group Position )  * child Item Height ;  scroll To Group With Total Children Height ( group Position, total Children Height, top Margin, bottom Margin, path )  ; }"
101,"public com . anychart . core . stock . scrollerseries .  Range Area bounds (  Number x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
102,"public com . anychart . core .  State Settings normal (  ) { return new com . anychart . core .  State Settings ( js Base + "" . normal (  ) "" )  ; }"
103,public void set Apply New Delay To Group ( boolean apply Delay To Group ) { this . apply New Delay To Group = apply Delay To Group ; }
104,"public  Tap Target description Typeface (  Typeface description Typeface ) { if  ( description Typeface == null )      throw new  Illegal Argument Exception ( "" Cannot use a null typeface"" )  ;  this . description Typeface = description Typeface ;  return this ; }"
105,"public void add Actor At ( int index,  Actor actor ) { if  ( actor . parent != null )  {     if  ( actor . parent == this )          return ;      actor . parent . remove Actor ( actor, false )  ;  } if  ( index >= children . size )      children . add ( actor )  ;  else     children . insert ( index, actor )  ;  actor . set Parent ( this )  ;  actor . set Stage ( get Stage (  )  )  ;  children Changed (  )  ; }"
106,"public void init (  Attribute Set attrs ) { int swipe Mode = SWIPE_MODE_BOTH ;  boolean swipe Open On Long Press = true ;  boolean swipe Close All Items When Move List = true ;  boolean only One Opened When Swipe = false ;  long swipe Animation Time = 0 ;  float swipe Offset Left = 0 ;  float swipe Offset Right = 0 ;  int swipe Drawable Checked = 0 ;  int swipe Drawable Unchecked = 0 ;  int swipe Action Left = SWIPE_ACTION_REVEAL ;  int swipe Action Right = SWIPE_ACTION_REVEAL ;  if  ( attrs != null )  {      Typed Array styled = get Context (  )  . obtain Styled Attributes ( attrs, R . styleable .  Swipe List View )  ;      swipe Mode = styled . get Int ( R . styleable .  Swipe List View_swipe Mode, SWIPE_MODE_BOTH )  ;      swipe Action Left = styled . get Int ( R . styleable .  Swipe List View_swipe Action Left, SWIPE_ACTION_REVEAL )  ;      swipe Action Right = styled . get Int ( R . styleable .  Swipe List View_swipe Action Right, SWIPE_ACTION_REVEAL )  ;      only One Opened When Swipe = styled . get Boolean ( R . styleable .  Swipe List View_only One Opened When Swipe, false )  ;      swipe Offset Left = styled . get Dimension ( R . styleable .  Swipe List View_swipe Offset Left, 0 )  ;      swipe Offset Right = styled . get Dimension ( R . styleable .  Swipe List View_swipe Offset Right, 0 )  ;      swipe Open On Long Press = styled . get Boolean ( R . styleable .  Swipe List View_swipe Open On Long Press, true )  ;      swipe Animation Time = styled . get Integer ( R . styleable .  Swipe List View_swipe Animation Time, 0 )  ;      swipe Close All Items When Move List = styled . get Boolean ( R . styleable .  Swipe List View_swipe Close All Items When Move List, true )  ;      swipe Drawable Checked = styled . get Resource Id ( R . styleable .  Swipe List View_swipe Drawable Checked, 0 )  ;      swipe Drawable Unchecked = styled . get Resource Id ( R . styleable .  Swipe List View_swipe Drawable Unchecked, 0 )  ;      swipe Front View = styled . get Resource Id ( R . styleable .  Swipe List View_swipe Front View, 0 )  ;      swipe Back View = styled . get Resource Id ( R . styleable .  Swipe List View_swipe Back View, 0 )  ;      styled . recycle (  )  ;  } if  ( swipe Front View == 0 || swipe Back View == 0 )  {     swipe Front View = get Context (  )  . get Resources (  )  . get Identifier ( SWIPE_DEFAULT_FRONT_VIEW, ""id"", get Context (  )  . get Package Name (  )  )  ;      swipe Back View = get Context (  )  . get Resources (  )  . get Identifier ( SWIPE_DEFAULT_BACK_VIEW, ""id"", get Context (  )  . get Package Name (  )  )  ;      if  ( swipe Front View == 0 || swipe Back View == 0 )  {         throw new  Runtime Exception (  String . format ( "" You forgot the attributes swipe Front View or swipe Back View .   You can add this attributes or use '%s' and '%s' identifiers"", SWIPE_DEFAULT_FRONT_VIEW, SWIPE_DEFAULT_BACK_VIEW )  )  ;      } } final  View Configuration configuration =  View Configuration . get ( get Context (  )  )  ;  touch Slop =  View Configuration Compat . get Scaled Paging Touch Slop ( configuration )  ;  touch Listener = new  Swipe List View Touch Listener ( this, swipe Front View, swipe Back View )  ;  if  ( swipe Animation Time > 0 )  {     touch Listener . set Animation Time ( swipe Animation Time )  ;  } touch Listener . set Right Offset ( swipe Offset Right )  ;  touch Listener . set Left Offset ( swipe Offset Left )  ;  touch Listener . set Swipe Action Left ( swipe Action Left )  ;  touch Listener . set Swipe Action Right ( swipe Action Right )  ;  touch Listener . set Swipe Mode ( swipe Mode )  ;  touch Listener . set Only One Opened When Swipe ( only One Opened When Swipe )  ;  touch Listener . set Swipe Closes All Items When List Moves ( swipe Close All Items When Move List )  ;  touch Listener . set Swipe Open On Long Press ( swipe Open On Long Press )  ;  touch Listener . set Swipe Drawable Checked ( swipe Drawable Checked )  ;  touch Listener . set Swipe Drawable Unchecked ( swipe Drawable Unchecked )  ;  set On Touch Listener ( touch Listener )  ;  set On Scroll Listener ( touch Listener . make Scroll Listener (  )  )  ; }"
107,"public void test Add Annotation Processor Java Binary (  )  throws  Exception{  Test Java Plugin Scenario scenario = new  Test Java Plugin Scenario (  )  ;  scenario . add Annotation Processor Target ( valid Java Binary, "" My Processor"" )  ;   Immutable List< String> parameters = scenario . build And Get Compile Parameters (  )  ;  assert Correct Annotation Processor Parameters ( parameters )  ;  assert Equals ( "" Expected '-processor  My Processor' parameters"", parameters . index Of ( ""-processor"" )  + 1, parameters . index Of ( "" My Processor"" )  )  ;  assert Equals ( "" Expected '-s "" + annotation Scenario Gen Path + ""' parameters"", parameters . index Of ( ""-s"" )  + 1, parameters . index Of ( annotation Scenario Gen Path )  )  ;  for  (  String parameter : parameters )  {     assert That ( "" Expected no custom annotation options . "", parameter . starts With ( ""-A"" ) , is ( false )  )  ;  }}"
108,"public void test To String (  ) { final  String s = uuid . to String (  )  ;  assert Not Null ( "" The uuid string value should not be null"", s )  ;  assert Equals ( "" The uuid string value should be 32 chars long"", 32, s . length (  )  )  ; }"
109,"static synchronized void clear (  ) { SQ Lite Database db =  Sonic DB Helper . get Instance (  )  . get Writable Database (  )  ;  db . delete (  Sonic_SESSION_TABLE_NAME, null, null )  ; }"
110,"public com . anychart . core . gantt . edit .  Element Edit start (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . start ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
111,"public static void drop Table (  Database db, boolean if Exists ) {  String sql = ""DROP TABLE "" +  ( if Exists ? ""IF EXISTS "" : """" )  + ""\""DATE_ENTITY\"""" ;  db . exec SQL ( sql )  ; }"
112,"private static  Gender get Gender (  Element element ) {  Gender gender =  Gender . unknown ;  boolean has Gender = element . has Attribute ( ""gender"" )  ;  if  ( has Gender )  {     gender =  Gender . value Of ( element . get Attribute ( ""gender"" )  )  ;  } return gender ; }"
113,"public void on Create (  Bundle saved Instance State ) { super . on Create ( saved Instance State )  ;  _int Stream =  Publish Processor . create (  )  ;  _life Cycle Stream =  Publish Processor . create (  )  ;  //  Retain this fragment across configuration changes .  set Retain Instance ( true )  ;  _int Stream . take Until ( _life Cycle Stream )  ;   Flowable . interval ( 1,  Time Unit . SECONDS )  . map (  Long::int Value )  . take ( 20 )  . subscribe ( _int Stream )  ; }"
114,"public void commit_multiple Times (  ) {  Shared Preferences shared Preferences =  Preference Manager . get Default Shared Preferences ( context )  ;  shared Preferences . edit (  )  . put Boolean ( ""foo"", true )  . apply (  )  ;  shared Preferences . edit (  )  . put Boolean ( ""bar"", true )  . commit (  )  ;  assert True ( shared Preferences . get Boolean ( ""foo"", false )  )  ;  assert True ( shared Preferences . get Boolean ( ""bar"", false )  )  ; }"
115,"public  View Tree Assert has Visible Text ( final  String text ) { final  Immutable List< View> path = get Path To Visible Text ( text )  ;   Java6 Assertions . assert That ( path )  . overriding Error Message ( path == null ? get Has Visible Text Error Message ( text )  : """" )  . is Not Null (  )  ;  return this ; }"
116,"public static  Object name (  Context cx,  Scriptable scope,  String name ) {  Scriptable parent = scope . get Parent Scope (  )  ;  if  ( parent == null )  {      Object result = top Scope Name ( cx, scope, name )  ;      if  ( result ==  Scriptable . NOT_FOUND )  {         throw not Found Error ( scope, name )  ;      }     return result ;  } return name Or Function ( cx, scope, parent, name, false )  ; }"
117,"protected void populate Address From Cache (  Http Request http Request ) {  String server Host = get Host ( http Request )  ;  if  ( server Host != null && !server Host . is Empty (  )  )  {      String resolved Address =  Resolved Hostname Cache Filter . get Previously Resolved Address For Host ( server Host )  ;      if  ( resolved Address != null )  {         har Entry . set Server IP Address ( resolved Address )  ;      } else {         // the resolved Address may be null if the  Resolved Hostname Cache Filter has expired the entry  ( which is unlikely ) ,         // or in the far more common case that the proxy is using a chained proxy to connect to connect to the         // remote host .  since the chained proxy handles IP address resolution, the IP address in the HAR must be blank .          log . trace ( "" Unable to find cached IP address for host: {} .  IP address in HAR entry will be blank . "", server Host )  ;      } } else {     log . warn ( "" Unable to identify host from request uri: {}"", http Request . get Uri (  )  )  ;  }}"
118,"public com . anychart . core . axismarkers .  Circular Range parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
119,"public com . anychart . core . resource .  Grid odd Fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . odd Fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
120,"private static long maybe Adjust Seek Offset (  Track Sample Table sample Table, long seek Time Us, long offset ) { int sample Index = get Synchronization Sample Index ( sample Table, seek Time Us )  ;  if  ( sample Index == C . INDEX_UNSET )  {     return offset ;  } long sample Offset = sample Table . offsets [ sample Index ]  ;  return  Math . min ( sample Offset, offset )  ; }"
121,public void set Address (  String address ) { this . address = address ; }
122,"public com . anychart . charts .  Pert right (  Number right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", right )  )  ;  return this ; }"
123,"public com . anychart . core . grids .  Map Settings fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
124,"public com . anychart . core . resource .  Logo top Stroke (  String color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top Stroke ( %s )  ; "", wrap Quotes ( color )  )  )  ;  return this ; }"
125,private static int available Capacity (  Buffer buffer ) { return buffer . capacity (  )  - buffer . limit (  )  ; }
126,"public T rotation ( float .  .  .  vals ) { transit Float ( ROTATION, vals )  ;  return self (  )  ; }"
127,public boolean clear Plugins (  ) { final A Frame Task task = new A Frame Task (  )  {     @ Override     protected void do Task (  )  {         m Plugins . clear (  )  ;      } } ;  return internal Offer Task ( task )  ; }
128,"public void on Create Application (  ) { if  ( DEBUG )       Log . d ( TAG, "" >  Android Live Wallpaper Service - on Create Application (  ) "" )  ; }"
129,"public com . anychart . core . resource . resourcelist .  Tags Settings padding (  String value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
130,"public static void create Table ( SQ Lite Database db,  Class<?> table Class ) {  String sql = generate Create DDL ( table Class )  ;  db . exec SQL ( sql )  ; }"
131,"void compact (  Const Pool cp ) { name = cp . add Utf8 Info ( get Name (  )  )  ;  descriptor = cp . add Utf8 Info ( get Descriptor (  )  )  ;  attribute =  Attribute Info . copy All ( attribute, cp )  ;  const Pool = cp ; }"
132,public void ensure Capacity ( int additional ) { final int needed = size + additional ;  if  ( values . length < needed )  {     resize ( needed )  ;  }}
133,public void on Create (  Bundle saved Instance State ) { super . on Create ( saved Instance State )  ;  set Content View ( R . layout . animation_cloning )  ;   Linear Layout container =  (  Linear Layout )  find View By Id ( R . id . container )  ;  final  My Animation View anim View = new  My Animation View ( this )  ;  container . add View ( anim View )  ;   Button starter =  (  Button )  find View By Id ( R . id . start Button )  ;  starter . set On Click Listener ( new  View .  On Click Listener (  )  {     public void on Click (  View v )  {         anim View . start Animation (  )  ;      } } )  ; }
134,"public com . anychart . core . ui .  Label rising Label (  ) { return new com . anychart . core . ui .  Label ( js Base + "" . rising Label (  ) "" )  ; }"
135,"public com . anychart . core .  Series Point get Point (  Number index ) { return new com . anychart . core .  Series Point (  String . format (  Locale . US, js Base + "" . get Point ( %s ) "", index )  )  ; }"
136,public boolean is Common (  ) { return ID3v22 Frames . get Instance Of (  )  . is Common ( get Id (  )  )  ; }
137,"protected void on Resume (  ) { super . on Resume (  )  ;  LOG . d ( TAG, "" Resumed the activity . "" )  ;  if  ( this . app View == null )  {     return ;  } if  ( !this . get Window (  )  . get Decor View (  )  . has Focus (  )  )  {     //  Force window to have focus, so application always     // receive user input .   Workaround for some devices  (  Samsung  Galaxy  Note 3 at least )      this . get Window (  )  . get Decor View (  )  . request Focus (  )  ;  } this . app View . handle Resume ( this . keep Running )  ; }"
138,"public  Confetti Manager set Initial Rotation ( int initial Rotation ) { return set Initial Rotation ( initial Rotation, 0 )  ; }"
139,public static  Device Login Manager get Instance (  ) { if  ( instance == null )  {     synchronized  (  Device Login Manager . class )  {         if  ( instance == null )  {             instance = new  Device Login Manager (  )  ;          }     } } return instance ; }
140,public void remove Cached Width ( int position ) { m Cached Width List . remove At ( position )  ; }
141,"public void add Song Id ( final long song Id ) { final SQ Lite Database database = m Music Database . get Writable Database (  )  ;  database . begin Transaction (  )  ;  try {      Cursor most Recent Item = null ;      try {         most Recent Item = query Recent Ids ( ""1"" )  ;          if  ( most Recent Item != null && most Recent Item . move To First (  )  )  {             if  ( song Id == most Recent Item . get Long ( 0 )  )  {                 return ;              }         }     } finally {         if  ( most Recent Item != null )  {             most Recent Item . close (  )  ;              most Recent Item = null ;          }     }     final  Content Values values = new  Content Values ( 2 )  ;      values . put (  Recent Store Columns . ID, song Id )  ;      values . put (  Recent Store Columns . TIMEPLAYED,  System . current Time Millis (  )  )  ;      database . insert (  Recent Store Columns . NAME, null, values )  ;       Cursor oldest = null ;      try {         oldest = database . query (  Recent Store Columns . NAME, new  String [  ]  {  Recent Store Columns . TIMEPLAYED }, null, null, null, null,  Recent Store Columns . TIMEPLAYED + "" ASC"" )  ;          if  ( oldest != null && oldest . get Count (  )  > MAX_ITEMS_IN_DB )  {             oldest . move To Position ( oldest . get Count (  )  - MAX_ITEMS_IN_DB )  ;              long time Of Record To Keep = oldest . get Long ( 0 )  ;              database . delete (  Recent Store Columns . NAME,  Recent Store Columns . TIMEPLAYED + "" < ?"", new  String [  ]  {  String . value Of ( time Of Record To Keep )  } )  ;          }     } finally {         if  ( oldest != null )  {             oldest . close (  )  ;              oldest = null ;          }     } } finally {     database . set Transaction Successful (  )  ;      database . end Transaction (  )  ;  }}"
142,"public com . anychart . core . annotations .  Fibonacci Timezones selected (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
143,"public com . anychart . charts .  Scatter bounds (  Number x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, height )  )  ;  return this ; }"
144,public static  Char Source concat (  Iterable<? extends  Char Source> sources ) { return new  Concatenated Char Source ( sources )  ; }
145,"public com . anychart . charts .  Pert padding (  String value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
146,"public static void add Cxx Toolchain To Workspace (  Abstract Workspace workspace )  throws IO Exception{ workspace . add Template To Workspace (  Test Data Helper . get Test Data Scenario ( new  Cxx Toolchain Helper (  ) , ""cxx_toolchain"" )  )  ; }"
147,"public  Tap Target icon (  Drawable icon, boolean has Set Bounds ) { if  ( icon == null )      throw new  Illegal Argument Exception ( "" Cannot use null drawable"" )  ;  this . icon = icon ;  if  ( !has Set Bounds )  {     this . icon . set Bounds ( new  Rect ( 0, 0, this . icon . get Intrinsic Width (  ) , this . icon . get Intrinsic Height (  )  )  )  ;  } return this ; }"
148,public void icon Name (  String res Name ) { icon Names . add ( res Name )  ; }
149,"protected  Middleware Web Client Base get Middleware Web Client (  ) { return this . m Middle Ware Web Client = new  Middleware Web View Client (  )  {     /**			 *			 * @param view			 * @param url			 * @return			 */     @ Override     public boolean should Override Url Loading (  Web View view,  String url )  {          Log . e ( TAG, "" Middleware Web Client Base#should Override Url Loading url:"" + url )  ;          if  ( super . should Override Url Loading ( view, url )  )  {             // 执行  Default Web Client#should Override Url Loading             return true ;          }         // do you work         return false ;      }     @ Override     public boolean should Override Url Loading (  Web View view,  Web Resource Request request )  {          Log . e ( TAG, "" Middleware Web Client Base#should Override Url Loading request url:"" + request . get Url (  )  . to String (  )  )  ;          return super . should Override Url Loading ( view, request )  ;      }     @ Override     public void on Received Error (  Web View view,  Web Resource Request request,  Web Resource Error error )  {         if  ( request . is For Main Frame (  )  && error . get Error Code (  )  != -1 )  {             super . on Received Error ( view, request, error )  ;          }     } } ; }"
150,public void close (  ) {  Closeable Reference . close Safely ( m Buf Ref )  ;  m Buf Ref = null ;  m Count = -1 ;  super . close (  )  ; }
151,public  String get Identifier (  ) { return original Frame Body . get Identifier (  )  ; }
152,"public com . anychart . charts .  Venn width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", width )  )  ;  return this ; }"
153,"public com . anychart . core . cartesian . series .  Bar3d height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
154,public void set Video Player (  Video Exo Player2 player ) { synchronized  ( video Player Lock )  {     this . video Player = player ;      if  ( player != null )  {         this . gvr Audio Processor = player . get Gvr Audio Processor (  )  ;      } else {         this . gvr Audio Processor = null ;      } }}
155,public boolean is Duration Read Finished (  ) { return is Duration Read ; }
156,public boolean on Back Pressed Support (  ) { return m Delegate . on Back Pressed Support (  )  ; }
157,"public  Builder add Layout ( @ Non Null final  Layout Presenter presenter ) { parts . add ( new  Layout Part ( static Item Count, presenter )  )  ;  static Item Count++ ;  return this ; }"
158,"public com . anychart . core . axes .  Circular ticks (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . ticks ( %s )  ; "", settings )  )  ;  return this ; }"
159,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
160,public static synchronized boolean is Fully Initialized (  ) { return sdk Fully Initialized ; }
161,public  Drawable new Drawable (  String name ) { return new Drawable ( get Drawable ( name )  )  ; }
162,"public  Context create Activity Context (  Activity activity,  Context new Base ) { //         Plugin Containers .  Activity State state = m Plugin Mgr . m Client . m ACM . lookup Last Loading ( activity . get Class (  )  . get Name (  )  )  ;  //        if  ( state == null )  { //            if  ( LOG )  { //                 Log Debug . w ( PLUGIN_TAG, ""PACM: create Activity Context: can't found plugin activity: activity="" + activity . get Class (  )  . get Name (  )  )  ;  //            } //            return null ;  //        } //         Plugin plugin = m Plugin Mgr . load App Plugin ( state . m CN . get Package Name (  )  )  ;  // 此时插件必须被加载，因此通过class loader一定能找到对应的PLUGIN对象  Plugin plugin = m Plugin Mgr . lookup Plugin ( activity . get Class (  )  . get Class Loader (  )  )  ;  if  ( plugin == null )  {     if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, ""PACM: create Activity Context: can't found plugin object for activity="" + activity . get Class (  )  . get Name (  )  )  ;      }     return null ;  } return plugin . m Loader . create Base Context ( new Base )  ; }"
163,"public void set Current Hour ( int current Hour ) { if  ( m Initial Hour Of Day == current Hour )  {     return ;  } m Initial Hour Of Day = current Hour ;  update Header Hour ( current Hour, true )  ;  update Header Am Pm (  )  ;  m Radial Time Picker View . set Current Hour ( current Hour )  ;  m Radial Time Picker View . set Am Or Pm ( m Initial Hour Of Day < 12 ? AM : PM )  ;  invalidate (  )  ;  on Time Changed (  )  ; }"
164,"public static  Pix read Mem ( byte [  ]  encoded Data ) { if  ( encoded Data == null )      throw new  Illegal Argument Exception ( "" Image data byte array must be non-null"" )  ;  final  Bitmap Factory .  Options opts = new  Bitmap Factory .  Options (  )  ;  opts . in Preferred Config =  Bitmap .  Config . ARGB_8888 ;  final  Bitmap bmp =  Bitmap Factory . decode Byte Array ( encoded Data, 0, encoded Data . length, opts )  ;  final  Pix pix = read Bitmap ( bmp )  ;  bmp . recycle (  )  ;  return pix ; }"
165,"public static  Bsh Class Manager create Class Manager (  Interpreter interpreter ) {  Bsh Class Manager manager ;  //  Do we have the necessary jdk1 . 2 packages and optional package? if  (  Capabilities . class Exists ( ""java . lang . ref .  Weak Reference"" )  &&  Capabilities . class Exists ( ""java . util .  Hash Map"" )  &&  Capabilities . class Exists ( ""bsh . classpath .  Class Manager Impl"" )  )      try {         //  Try to load the module         // don't refer to it directly here or we're dependent upon it          Class clas =  Class . for Name ( ""bsh . classpath .  Class Manager Impl"" )  ;          manager =  (  Bsh Class Manager )  clas . new Instance (  )  ;      } catch  (  Exception e )  {         throw new  Interpreter Error ( "" Error loading classmanager: "" + e )  ;      } else     manager = new  Bsh Class Manager (  )  ;  if  ( interpreter == null )      interpreter = new  Interpreter (  )  ;  manager . declaring Interpreter = interpreter ;  return manager ; }"
166,"public com . anychart . core . cartesian . series .  Base With Markers height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
167,public boolean has Buck Info (  ) { return buck Info Builder_ != null || buck Info_ != null ; }
168,"public void on Received Error (  Web View view, int error Code,  String description,  String failing Url ) {  Log Utils . i ( TAG, ""on Received Error："" + description + ""  CODE:"" + error Code )  ;  on Main Frame Error ( view, error Code, description, failing Url )  ; }"
169,"public  Shader Var add (  Shader Var value ) {  Shader Var v = get Return Type For Operation ( m Data Type, value . get Data Type (  )  )  ;  v . set Value ( this . m Name + "" + "" + value . get Name (  )  )  ;  v . set Name ( v . get Value (  )  )  ;  return v ; }"
170,private static AS Tree get Constant Field Value (  Member mem ) { return get Constant Field Value ( mem . get Field (  )  )  ; }
171,"public com . anychart . charts .  Waterfall z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
172,public  Immutable Set< Binding Declaration> all Binding Declarations (  ) { return  Immutable Set . < Binding Declaration>builder (  )  . add All ( bindings (  )  )  . add All ( delegate Declarations (  )  )  . add All ( multibinding Declarations (  )  )  . add All ( optional Declarations (  )  )  . add All ( subcomponent Declarations (  )  )  . build (  )  ; }
173,void set Publish Ttl ( final int publish Ttl ) { this . publish Ttl = publish Ttl ; }
174,public static boolean is Valid ( @ Nullable  Closeable Reference<?> ref ) { return ref != null && ref . is Valid (  )  ; }
175,"public  String get Module Qualified Path (  Path path,  Ij Module module ) {  String relative Path =  Path Formatter . path With Unix Separators ( get Module Relative Path ( path, module )  )  ;  if  ( relative Path . is Empty (  )  )  {     return MODULE_DIR ;  } else {     return MODULE_DIR + ""/"" + relative Path ;  }}"
176,"public float get Angle For Point ( float x, float y ) { MP Point F c = get Center Offsets (  )  ;  double tx = x - c . x, ty = y - c . y ;  double length =  Math . sqrt ( tx * tx + ty * ty )  ;  double r =  Math . acos ( ty / length )  ;  float angle =  ( float )   Math . to Degrees ( r )  ;  if  ( x > c . x )      angle = 360f - angle ;  // add 90° because chart starts EAST angle = angle + 90f ;  // neutralize overflow if  ( angle > 360f )      angle = angle - 360f ;  MP Point F . recycle Instance ( c )  ;  return angle ; }"
177,"public com . anychart . core . gauge .  Cap parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
178,Initial State Container get Initial State Container (  ) { return m Initial State Container ; }
179,"public com . anychart . core . ui .  Crosshair Label padding (  Number value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
180,public int get Height (  ) { return height ; }
181,public boolean needs Swap (  ) { return m Needs Swap ; }
182,"public com . anychart . core . stock . scrollerseries .  Candlestick falling Stroke (  String value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( value ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
183,"Method Builder get Methodd Builder (  Element element ) {  Method Builder method Builder = new  Method Builder ( messager, element )  ;  method Builder . set Binding Manager ( this )  ;  return method Builder ; }"
184,"private void add Section (  Section section ) { m Sections . append ( m Sections . size (  ) , section )  ; }"
185,public int get File Pos (  ) { return id ; }
186,"public void copy Current Content (  )  throws IO Exception{ require Lock (  )  ;  try  (  File Output Stream out = get Stream (  )  )  {     try  (  File Input Stream fis = new  File Input Stream ( ref )  )  {         if  ( fsync )  {              File Channel in = fis . get Channel (  )  ;              long pos = 0 ;              long cnt = in . size (  )  ;              while  ( 0 < cnt )  {                 long r = out . get Channel (  )  . transfer From ( in, pos, cnt )  ;                  pos += r ;                  cnt -= r ;              }         } else {             final byte [  ]  buf = new byte [ 2048 ]  ;              int r ;              while  (  ( r = fis . read ( buf )  )  >= 0 )  {                 out . write ( buf, 0, r )  ;              }         }     } catch  (  File Not Found Exception fnfe )  {         if  ( ref . exists (  )  )  {             throw fnfe ;          }     //  Don't worry about a file that doesn't exist yet, it     // conceptually has no current content to copy .      } } catch  ( IO Exception |  Runtime Exception |  Error ioe )  {     unlock (  )  ;      throw ioe ;  }}"
187,"public  List< Packed Object Info> get Sorted Object List (  Comparator< Packed Object Info> cmp ) {  Arrays . sort ( entries, 0, entry Count, cmp )  ;   List< Packed Object Info> list =  Arrays . as List ( entries )  ;  if  ( entry Count < entries . length )      list = list . sub List ( 0, entry Count )  ;  return list ; }"
188,String representation For Rule Key (  ) { return to String (  )  ; }
189,"public static  Build Target get Library Target (  Build Target abi Target ) {  Preconditions . check Argument ( is Abi Target ( abi Target )  )  ;  return abi Target . without Flavors ( CLASS_ABI_FLAVOR, SOURCE_ABI_FLAVOR, SOURCE_ONLY_ABI_FLAVOR, VERIFIED_SOURCE_ABI_FLAVOR )  ; }"
190,"public  View Transition Builder delay Translation X As Fraction Of Width ( float fraction ) { get Delayed Processor (  )  . add Process ( TRANSLATION_X_AS_FRACTION_OF_WIDTH, fraction )  ;  return self (  )  ; }"
191,public  Countly Config set App Key (  String app Key ) { this . app Key = app Key ;  return this ; }
192,"public static char constrain To Range ( char value, char min, char max ) { check Argument ( min <= max, ""min  ( %s )  must be less than or equal to max  ( %s ) "", min, max )  ;  return value < min ? min : value < max ? value : max ; }"
193,"public com . anychart . core . axismarkers .  Current Price Indicator falling Stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
194,"public com . anychart . core . resource . resourcelist .  Text Settings font Decoration (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Decoration ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
195,"public com . anychart . core . ui .  Labels Factory min Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . min Labels (  ) "" )  ; }"
196,public void invalidate Extension (  Label extension ) { extension To Rules . remove ( extension )  ; }
197,public void set On Set Image Uri Complete Listener (  On Set Image Uri Complete Listener listener ) { m On Set Image Uri Complete Listener = listener ; }
198,"public com . anychart . core . cartesian . series .  Step Area step Area (  String data, com . anychart . data .  Text Parsing Settings csv Settings ) { return new com . anychart . core . cartesian . series .  Step Area (  String . format (  Locale . US, js Base + "" . step Area ( %s, %s ) "", wrap Quotes ( data ) ,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
199,"public void start (  ) {  Public Query Message message = message Factory . obtain (  Public Query Message . class )  ;  message . set (  Public Query Message . START, null )  ;  message Queue . post ( message )  ; }"
200,"public static  Excluded Refs .  Builder create Android Defaults ( int sdk Version,  String manufacturer ) { return create Builder (  Enum Set . of ( SOFT_REFERENCES, FINALIZER_WATCHDOG_DAEMON, MAIN, EVENT_RECEIVER__MMESSAGE_QUEUE ) , sdk Version, manufacturer )  ; }"
201,"public com . anychart . charts .  Pareto bottom (  Number bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", bottom )  )  ;  return this ; }"
202,public  Drawable get Drawable (  ) { return drawable ; }
203,protected boolean should Notify Parent On Click (  ) { //default=false return true ; }
204,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
205,private void init Values ( GL Surface View m Gl Surface View ) { m Width = m Gl Surface View . get Width (  )  ;  m Height = m Gl Surface View . get Height (  )  ;  m Random = new  Random ( new  Date (  )  . get Time (  )  )  ; }
206,public final void is At Least ( int other ) { is At Least (  ( long )  other )  ; }
207,"public  Complete Builder<T> with Query ( @ Non Null  Raw Query raw Query ) { check Not Null ( raw Query, "" Please specify raw Query"" )  ;  return new  Complete Builder<T> ( stor IOSQ Lite, type, raw Query )  ; }"
208,"public  String format (  Object value ) { return format ( value,  (  String )  null,  (  Locale )  null )  ; }"
209,public static boolean is Xcode Target Test Build Rule (  Build Rule rule ) { return XCODE_TARGET_BUILD_RULE_TEST_TYPES . contains ( rule . get Class (  )  )  ; }
210,public long get Data Limit (  ) { return has Data Bounds (  )  ?  ( data Start Position + data Size )  : C . POSITION_UNSET ; }
211,"public static  Stack Trace Element na Instance (  ) { return new  Stack Trace Element ( NA, NA, NA, LINE_NA )  ; }"
212,"public  Test Field Prop Generate String Overloads Option View Model_ on Unbind (  On Model Unbound Listener< Test Field Prop Generate String Overloads Option View Model_,  Test Field Prop Generate String Overloads Option View> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
213,"public final  Wrapper<S> wrap ( @ Parametric Nullness S reference ) { return new  Wrapper<S> ( this, reference )  ; }"
214,"public  Builder throw Playback Exception (  Exo Playback Exception exception ) { return apply ( new  Throw Playback Exception ( tag, exception )  )  ; }"
215,"public com . anychart . core . resource .  Conflicts fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
216,"public static boolean put (  String key, T value ) { return hawk Facade . put ( key, value )  ; }"
217,public  Reflog Command set Ref (  String ref ) { check Callable (  )  ;  this . ref = ref ;  return this ; }
218,"public void check Behavior Of Flowable (  ) { if  ( flowable == null || expected Number Of Emissions == null || test Action == null )  {     throw new  Null Pointer Exception ( "" Please specify fields"" )  ;  } final  Iterable<T> iterable Emission = flowable . blocking Iterable (  )  ;  int number Of Emissions = 0 ;  for  ( T emission : iterable Emission )  {     number Of Emissions++ ;      if  ( number Of Emissions > expected Number Of Emissions )  {         throw new  Illegal State Exception ( "" Flowable should emit result once"" )  ;      }     try {         test Action . accept ( emission )  ;      } catch  (  Exception e )  {         throw new  Runtime Exception ( e )  ;      } }}"
219,"private void generate Single ML Bytecode Compilation (  Map< Path,  Immutable Sorted Set< Build Rule>> source To Rule,  Immutable List .  Builder< Source Path> cmo Files,  Path ml Source,  Immutable Map< Path,  Immutable List< Path>> sources,  Immutable List< Path> cycle Detector ) {  Immutable List< Path> new Cycle Detector =  Immutable List . < Path>builder (  )  . add All ( cycle Detector )  . add ( ml Source )  . build (  )  ;  if  ( cycle Detector . contains ( ml Source )  )  {     throw new  Human Readable Exception ( "" Dependency cycle detected: %s"",  Joiner . on ( "" -> "" )  . join ( new Cycle Detector )  )  ;  } if  ( source To Rule . contains Key ( ml Source )  )  {     return ;  }  Immutable Sorted Set .  Builder< Build Rule> deps Builder =  Immutable Sorted Set . natural Order (  )  ;  if  ( sources . contains Key ( ml Source )  )  {     for  (  Path dep :  Objects . require Non Null ( sources . get ( ml Source )  )  )  {         generate Single ML Bytecode Compilation ( source To Rule, cmo Files, dep, sources, new Cycle Detector )  ;          deps Builder . add All (  Objects . require Non Null ( source To Rule . get ( dep )  )  )  ;      } }  Immutable Sorted Set< Build Rule> deps = deps Builder . build (  )  ;   String name = ml Source . to File (  )  . get Name (  )  ;   Build Rule Params compile Params = params . with Declared Deps (  Suppliers . of Instance (  Immutable Sorted Set . < Build Rule>natural Order (  )  . add ( this . clean Rule )  . add All ( params . get Declared Deps (  )  . get (  )  )  . add All ( deps )  . add All ( ocaml Context . get Bytecode Compile Deps (  )  )  . add All (  Buildable Support . get Deps Collection ( c Compiler, graph Builder )  )  . build (  )  )  )  ;   String output File Name = get ML Bytecode Output Name ( name )  ;   Path output Path = ocaml Context . get Compile Bytecode Output Dir (  )  . resolve ( output File Name )  ;   Immutable List< Arg> compile Flags = get Compile Flags ( /* is Bytecode */ true, /* exclude Deps */ false )  ;   Build Rule compile Bytecode = new  Ocaml ML Compile ( create ML Bytecode Compile Build Target ( build Target, name ) , project Filesystem, compile Params, new  Ocaml ML Compile Step .  Args ( c Compiler . get Environment ( path Resolver ) , c Compiler . get Command Prefix ( path Resolver ) , ocaml Context . get Ocaml Bytecode Compiler (  )  . get (  ) , ocaml Context . get Ocaml Interop Includes Dir (  ) , output Path, ml Source, compile Flags )  )  ;  graph Builder . add To Index ( compile Bytecode )  ;  source To Rule . put ( ml Source,  Immutable Sorted Set . < Build Rule>natural Order (  )  . add ( compile Bytecode )  . add All ( deps )  . build (  )  )  ;  if  ( !output File Name . ends With (  Ocaml Compilables . OCAML_CMI )  )  {     cmo Files . add ( compile Bytecode . get Source Path To Output (  )  )  ;  }}"
220,public final int get S Width (  ) { return s Width ; }
221,"public com . anychart . core . ui .  Chart Credits credits (  ) { return new com . anychart . core . ui .  Chart Credits ( js Base + "" . credits (  ) "" )  ; }"
222,"public static void fatal ( @ Nullable  Throwable throwable, @ Nullable  String message,  Object .  .  .  args ) { log (  Log Level . FATAL, throwable, message, args )  ; }"
223,"public  Multimap With Proto Values Fluent Assertion<M> using Float Tolerance For Field Descriptors For Values ( float tolerance,  Field Descriptor first Field Descriptor,  Field Descriptor .  .  .  rest ) { return using Config ( config . using Float Tolerance For Field Descriptors ( tolerance, as List ( first Field Descriptor, rest )  )  )  ; }"
224,public  List< Geometry> get Geometry Object (  ) { return m Geometries ; }
225,public  Builder set Schedule Type ( java . lang .  String value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } schedule Type_ = value ;  on Changed (  )  ;  return this ; }
226,"public void remove Action ( @ Null  Action action ) { if  ( action != null && actions . remove Value ( action, true )  )      action . set Actor ( null )  ; }"
227,public  Invoker with Features (  Feature .  .  .  features ) { m Features Builder . add ( features )  ;  return this As T (  )  ; }
228,"public com . anychart . core . stock . scrollerseries .  Candlestick bounds (  Number x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
229,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
230,public static void main (  String [  ]  args )  throws IO Exception{ var app Client = new  App Client (  )  ;  app Client . start (  )  ; }
231,public static boolean is Valid ( @ Nullable  Encoded Image encoded Image ) { return encoded Image != null && encoded Image . is Valid (  )  ; }
232,public boolean get Lyrics3 Save Field (  String id ) { return lyrics3 Save Field Map . get ( id )  ; }
233,"private  String get Https Request Host And Port (  )  throws  Illegal State Exception{ if  ( !is Https (  )  )  {     throw new  Illegal State Exception ( "" Request is not HTTPS .   Cannot get host and port on non-HTTPS request using this method . "" )  ;  }  Attribute< String> hostname Attr = ctx . attr (  Attribute Key . < String>value Of ( HOST_ATTRIBUTE_NAME )  )  ;  return hostname Attr . get (  )  ; }"
234,"static  Context Selector dynamical Context Selector (  Logger Context default Logger Context,  String context Selector Str )  throws  Class Not Found Exception,  Security Exception,  No Such Method Exception,  Illegal Argument Exception,  Instantiation Exception,  Illegal Access Exception,  Invocation Target Exception{  Class<?> context Selector Class =  Loader . load Class ( context Selector Str )  ;   Constructor cons = context Selector Class . get Constructor ( new  Class [  ]  {  Logger Context . class } )  ;  return  (  Context Selector )  cons . new Instance ( default Logger Context )  ; }"
235,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
236,"public  Immutable Set< Entry<K, V>> entries (  ) {  Immutable Set< Entry<K, V>> result = entries ;  return result == null ?  ( entries = new  Entry Set<> ( this )  )  : result ; }"
237,"public static  String get Entry Comment (  Zip Entry entry ) { try {     return new  String ( entry . get Comment (  )  . get Bytes ( ""GB2312"" ) , ""8859_1"" )  ;  } catch  (  Unsupported Encoding Exception e )  {     e . print Stack Trace (  )  ;  } return null ; }"
238,protected int get Child Top ( final int position ) { int count = get Child Count (  )  ;  int padding Top = 0 ;  if  ( m Clip To Padding )  {     padding Top = get List Padding Top (  )  ;  } return count > 0 ? get Child At ( count - 1 )  . get Bottom (  )  : padding Top ; }
239,public void set Underline Color ( int color ) { this . underline Color = color ;  post Invalidate (  )  ; }
240,private void set Original (  ) { is Original =  ( mpeg Bytes [ BYTE_4 ]  & MASK_MP3_HOME )  != 0 ; }
241,"protected int schedule As Package (  Job Info job,  String package Name, int user Id,  String tag ) { return schedule ( job )  ; }"
242,public  Builder set Keyboard ( com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Keyboard value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } keyboard_ = value . get Number (  )  ;  on Changed (  )  ;  return this ; }
243,"public void bottom (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . bottom (  )  ; "" )  ; }"
244,"public  String get Or Fail (  ) {  Path path = get Python Interpreter ( parser Config . get Parser Python Interpreter Path (  )  )  ;  if  ( ! (  Files . is Executable ( path )  && ! Files . is Directory ( path )  )  )  {     throw new  Human Readable Exception ( "" Not a python executable: "" + path )  ;  } return path . to String (  )  ; }"
245,"public com . anychart . charts .  Sankey min Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", height )  )  ;  return this ; }"
246,public void finish (  ) { finished = true ; }
247,"public  Identify pre Insert (  String property, long value ) { add To User Properties (  Constants . AMP_OP_PREINSERT, property, value )  ;  return this ; }"
248,"public com . anychart . core . stock . series .  Base max Labels (  String settings ) { return new com . anychart . core . stock . series .  Base (  String . format (  Locale . US, js Base + "" . max Labels ( %s ) "", wrap Quotes ( settings )  )  )  ; }"
249,"public static boolean is Well Formed ( byte [  ]  bytes ) { return is Well Formed ( bytes, 0, bytes . length )  ; }"
250,"public static  Object Filter or (  Object Filter .  .  .  filters ) { not Null ( filters, error Message ( ""filters can not be null"", VE_OBJ_FILTER_NULL_OR_FILTERS )  )  ;  return new  Or Object Filter ( filters )  ; }"
251,"public com . anychart . charts .  Scatter hatch Fill Palette (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill Palette ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
252,"public  Single< Integer> as Rx Single (  ) { return  Rx Java Utils . create Single ( stor IOSQ Lite, this )  ; }"
253,"public void set (  Vector2 [  ]  vertices ) { float [  ]  verts = new float [ vertices . length * 2 ]  ;  for  ( int i = 0, j = 0 ;  i < vertices . length * 2 ;  i += 2, j++ )  {     verts [ i ]  = vertices [ j ]  . x ;      verts [ i + 1 ]  = vertices [ j ]  . y ;  } jni Set ( addr, verts, 0, verts . length )  ; }"
254,"public void set Content View (  View view ) { this . m Content View = view ;   View Group .  Layout Params params = view . get Layout Params (  )  ;  if  ( params == null )  {     params = new  View Group .  Layout Params ( -1, -2 )  ;  } else {     params . width = -1 ;      params . height = -2 ;  } this . m Content View . set Layout Params ( params )  ; }"
255,"public A append To ( A appendable,  Iterator<?> parts )  throws IO Exception{ check Not Null ( appendable )  ;  if  ( parts . has Next (  )  )  {     appendable . append ( to String ( parts . next (  )  )  )  ;      while  ( parts . has Next (  )  )  {         appendable . append ( separator )  ;          appendable . append ( to String ( parts . next (  )  )  )  ;      } } return appendable ; }"
256,boolean matches (  Build Target build Target ) { return matches ( build Target . get Unflavored Build Target (  )  )  ; }
257,"public  Rx Inserter< Category> prepare Insert Into Category (  ) { return prepare Insert Into Category (  On Conflict . NONE, true )  ; }"
258,public void set Force Update ( boolean b ) { force = b ; }
259,public  String get Token (  ) { return token ; }
260,public  Postcard add Flags ( int flags ) { this . flags |= flags ;  return this ; }
261,"public void authority With Multiple Colons (  )  throws  Exception{  Http Url http Url = parse ( ""http://foo:pass1@bar:pass2@baz/path"" )  ;  assert That ( http Url . username (  )  )  . is Equal To ( ""foo"" )  ;  assert That ( http Url . password (  )  )  . is Equal To ( ""pass1@bar:pass2"" )  ;  assert That ( http Url )  . is Equal To ( parse ( ""http://foo:pass1%40bar%3 Apass2@baz/path"" )  )  ; }"
262,"static void install Dex Jars (  Class Loader app Class Loader,  File optimized Directory,  List< File> dex Jars ) {  System Class Loader Adder class Loader Adder = new  System Class Loader Adder (  )  ;  for  (  File dex Jar : dex Jars )  {      Dex Class Loader new Class Loader = new  Dex Class Loader ( dex Jar . get Absolute Path (  ) , optimized Directory . get Absolute Path (  ) , null, app Class Loader )  ;      class Loader Adder . add Paths Of Class Loader To System Class Loader ( new Class Loader,  (  Path Class Loader )  app Class Loader )  ;  }}"
263,"public com . anychart . core . ui .  Crosshair crosshair (  ) { return new com . anychart . core . ui .  Crosshair ( js Base + "" . crosshair (  ) "" )  ; }"
264,"public void share With Linked In (  String caption Or Options,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Linked In ( %s, %s )  ; "", wrap Quotes ( caption Or Options ) , wrap Quotes ( description )  )  )  ; }"
265,public  Namespace get JDOM Namespace (  ) { return jdom Namespace ; }
266,"public void set Parent Ids (  Any Object Id parent1,  Any Object Id parent2 ) { parent Ids = new  Object Id [  ]  { parent1 . copy (  ) , parent2 . copy (  )  } ; }"
267,public  String get Type (  ) { return GEOMETRY_TYPE ; }
268,public boolean contains Value ( float value ) { if  ( has Zero Value && zero Value == value )      return true ;  int [  ]  key Table = this . key Table ;  float [  ]  value Table = this . value Table ;  for  ( int i = value Table . length - 1 ;  i >= 0 ;  i-- )  if  ( key Table [ i ]  != 0 && value Table [ i ]  == value )      return true ;  return false ; }
269,public int get Advertise Mode (  ) { return m Advertise Mode ; }
270,"public com . anychart . scales .  Scatter Base y Scale (  ) { return new com . anychart . scales .  Scatter Base ( js Base + "" . y Scale (  ) "" )  ; }"
271,"public com . anychart . core . ui .  Paginator font Color (  String color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Color ( %s )  ; "", wrap Quotes ( color )  )  )  ;  return this ; }"
272,public final void is Equal To ( @ Nullable  Object other ) { super . is Equal To ( other )  ; }
273,public  List< String> get Languages (  ) { return new  Array List< String> ( this . languages )  ; }
274,public void set Failure Image ( int resource Id ) { set Failure Image ( m Resources . get Drawable ( resource Id )  )  ; }
275,protected boolean restore Sub Window When Drag Back (  ) { return true ; }
276,"public void init (  String prefix,  String suffix,  Hash Map< String,  Plugin Containers .  Activity State> all States,  Hash Set< String> containers ) { // 外层循环为组数，内层循环为每组的坑的数量 for  ( int i = 0 ;  i < GROUP_COUNT ;  i++ )  {     if  ( m Launch Mode States [ i ]  == null )  {         m Launch Mode States [ i ]  = new  Launch Mode States (  )  ;      }      Launch Mode States states = m Launch Mode States [ i ]  ;      /*  Standard */     states . add States ( all States, containers, prefix + suffix + ""TA"" + i, LAUNCH_MULTIPLE, true,  Host Config Helper . ACTIVITY_PIT_COUNT_TS_STANDARD )  ;      states . add States ( all States, containers, prefix + suffix + ""TA"" + i, LAUNCH_MULTIPLE, false,  Host Config Helper . ACTIVITY_PIT_COUNT_NTS_STANDARD )  ;      /*  Single Top */     states . add States ( all States, containers, prefix + suffix + ""TA"" + i, LAUNCH_SINGLE_TOP, true,  Host Config Helper . ACTIVITY_PIT_COUNT_TS_SINGLE_TOP )  ;      states . add States ( all States, containers, prefix + suffix + ""TA"" + i, LAUNCH_SINGLE_TOP, false,  Host Config Helper . ACTIVITY_PIT_COUNT_NTS_SINGLE_TOP )  ;      /*  Single Task */     states . add States ( all States, containers, prefix + suffix + ""TA"" + i, LAUNCH_SINGLE_TASK, true,  Host Config Helper . ACTIVITY_PIT_COUNT_TS_SINGLE_TASK )  ;      states . add States ( all States, containers, prefix + suffix + ""TA"" + i, LAUNCH_SINGLE_TASK, false,  Host Config Helper . ACTIVITY_PIT_COUNT_NTS_SINGLE_TASK )  ;      /*  Single Instance */     states . add States ( all States, containers, prefix + suffix + ""TA"" + i, LAUNCH_SINGLE_INSTANCE, true,  Host Config Helper . ACTIVITY_PIT_COUNT_TS_SINGLE_INSTANCE )  ;      states . add States ( all States, containers, prefix + suffix + ""TA"" + i, LAUNCH_SINGLE_INSTANCE, false,  Host Config Helper . ACTIVITY_PIT_COUNT_NTS_SINGLE_INSTANCE )  ;  }}"
277,"public void steal (  ) { var target = pick Target (  )  ;  LOGGER . info ( "" The target has been chosen as {} . "", target )  ;  confuse Target ( target )  ;  steal The Item ( target )  ; }"
278,public static  Byte Source concat (  Byte Source .  .  .  sources ) { return concat (  Immutable List . copy Of ( sources )  )  ; }
279,"public static int d (  String tag,  String msg ) { return  Log . d ( tag, msg )  ; }"
280,"private  Immutable Sorted Map< String,  Immutable Sorted Map< String,  Object>> get Attributes With Rank Metadata (  Command Runner Params params,  Buck Query Environment env,  Set< Query Build Target> query Result )  throws  Query Exception{  Immutable Set< Target Node<?>> nodes = env . get Nodes From Query Targets ( query Result )  ;   Map< Unflavored Build Target,  Integer> rank Entries = compute Ranks By Target ( env . get Target Graph (  ) , nodes::contains )  ;   Immutable Collection< Merged Target Node> merged Nodes =  Merged Target Node . group ( nodes )  . values (  )  ;   Patterns Matcher patterns Matcher = new  Patterns Matcher ( output Attributes (  )  )  ;  // since some nodes differ in their flavors but ultimately have the same attributes, immutable // resulting map is created only after duplicates are merged by using regular  Hash Map  Map< String,  Integer> rank Index = rank Entries . entry Set (  )  . stream (  )  . collect (  Collectors . to Map (  entry -> to Presentation Form ( entry . get Key (  )  ) ,  Map .  Entry::get Value )  )  ;  return  Immutable Sorted Map . copy Of ( merged Nodes . stream (  )  . collect (  Collectors . to Map (  Abstract Query Command::to Presentation Form,  node -> {      String label = to Presentation Form ( node )  ;       Sorted Map< String,  Object> attributes = get Attributes ( params, env, patterns Matcher, node,  Dependency Stack . top ( node . get Build Target (  )  ) , which Query Command (  )  )  . or Else Get (  Tree Map::new )  ;      return  Immutable Sorted Map . < String,  Object>natural Order (  )  . put All ( attributes )  . put ( sort Output Format . name (  )  . to Lower Case (  ) , rank Index . get ( label )  )  . build (  )  ;  } )  ) ,  Comparator . < String>comparing Int ( rank Index::get )  . then Comparing (  Comparator . natural Order (  )  )  )  ; }"
281,"public static boolean is ID Card (  String to Check Str ) { //  String pattern Str = // ""/^ (  ( 1 [ 1-5 ]  ) | ( 2 [ 1-3 ]  ) | ( 3 [ 0-7 ]  ) | ( 4 [ 1-6 ]  ) | ( 5 [ 0-4 ]  ) | ( 6 [ 0-9 ]  ) | ( 7 [ 12 ]  ) | ( 8 [ 0-9 ]  ) | ( 9 [ 0-9 ]  ) | ( 10 [ 0-9 ]  ) | ( 11 [ 0-1 ]  ) | ( 12 [ 0-9 ]  ) | ( 13 [ 0-3 ]  ) | ( 14 [ 0-9 ]  )  ) "" // + ""\\d{4} ( "" // + "" ( 19\\d{2} ( 0 [ 13-9 ] |1 [ 012 ]  )  ( 0 [ 1-9 ] | [ 12 ] \\d|30 )  ) "" // + ""| ( 19\\d{2} ( 0 [ 13578 ] |1 [ 02 ]  ) 31 ) "" // + ""| ( 19\\d{2}02 ( 0 [ 1-9 ] |1\\d|2 [ 0-8 ]  )  ) "" // + ""| ( 19 (  [ 13579 ]  [ 26 ] | [ 2468 ]  [ 048 ] |0 [ 48 ]  ) 0229 ) "" // + "" ) \\d{3} ( \\d|X|x ) ?$/"" ;  //  String pattern Str1 = // ""/^ (  ( 1 [ 1-5 ]  ) | ( 2 [ 1-3 ]  ) | ( 3 [ 0-7 ]  ) | ( 4 [ 1-6 ]  ) | ( 5 [ 0-4 ]  ) | ( 6 [ 0-9 ]  ) | ( 7 [ 0-9 ]  ) | ( 8 [ 0-9 ]  ) | ( 9 [ 0-1 ]  ) | ( 10 [ 0-9 ]  ) | ( 11 [ 0-3 ]  ) | ( 12 [ 0-9 ]  )  ) "" // + ""\\d{4} ( "" // + "" ( 16\\d{2} ( 0 [ 13-9 ] |1 [ 012 ]  )  ( 0 [ 1-9 ] | [ 12 ] \\d|30 )  ) "" // + ""| ( 16\\d{2} ( 0 [ 13578 ] |1 [ 02 ]  ) 31 ) "" // + ""| ( 16\\d{2}02 ( 0 [ 1-9 ] |1\\d|2 [ 0-8 ]  )  ) "" // + ""| ( 16 (  [ 13579 ]  [ 26 ] | [ 2468 ]  [ 048 ] |0 [ 48 ]  ) 0229 ) "" // + "" ) \\d{3} ( \\d|X|x ) ?$/"" ;   String is ID Card1 = ""^ (  (  [ 0-9 ] {14} [ x0-9 ] {1} ) | (  [ 0-9 ] {17} [ x0-9 ] {1} )  ) $"" ;  // || can Match ( to Check Str, return can Match ( to Check Str, is ID Card1 )  ; // is ID Card2 )  ; }"
282,"public  Register Spec List subset (  Bit Set exclusion Set ) { int new Size = size (  )  - exclusion Set . cardinality (  )  ;  if  ( new Size == 0 )  {     return EMPTY ;  }  Register Spec List result = new  Register Spec List ( new Size )  ;  int new Index = 0 ;  for  ( int old Index = 0 ;  old Index < size (  )  ;  old Index++ )  {     if  ( !exclusion Set . get ( old Index )  )  {         result . set0 ( new Index, get0 ( old Index )  )  ;          new Index++ ;      } } if  ( is Immutable (  )  )  {     result . set Immutable (  )  ;  } return result ; }"
283,public  Registration Response get Last Registration Response (  ) { return m Last Registration Response ; }
284,"public void auto Redraw (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . auto Redraw (  )  ; "" )  ; }"
285,"public  Path get Library Xml File Path (  Ij Library library ) { return get Libraries Dir (  )  . resolve (  Util . normalize Intelli J Name ( library . get Name (  )  )  + "" . xml"" )  ; }"
286,"public com . anychart . core . resource . resourcelist .  Image Settings margin (  String value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
287,"private static  Xml Pull Parser create Xml Parser (  Input Stream stream )  throws  Xml Pull Parser Exception{  Xml Pull Parser Factory factory =  Xml Pull Parser Factory . new Instance (  )  ;  factory . set Namespace Aware ( true )  ;   Xml Pull Parser parser = factory . new Pull Parser (  )  ;  parser . set Input ( stream, null )  ;  return parser ; }"
288,"public com . anychart . core . utils .  Padding set (  String [  ]  value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
289,"public void set Type ( int type ) { put ( PI_TYPE, type )  ; }"
290,"public com . anychart . core . utils .  Bounds bounds (  ) { return new com . anychart . core . utils .  Bounds ( js Base + "" . bounds (  ) "" )  ; }"
291,"public com . anychart . data .  Table Mapping add Field (  String name,  Number column, com . anychart . enums .  Aggregation Type type,  Number weights Column ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . add Field ( %s, %s, %s, %s )  ; "", wrap Quotes ( name ) , column,  ( type != null )  ? type . get Js Base (  )  : null, weights Column )  )  ;  return this ; }"
292,public boolean should Infer Run Info (  ) { return should Infer Run Info ; }
293,public static boolean is Sync Word ( int word ) { return word == SYNC_VALUE_BE || word == SYNC_VALUE_LE || word == SYNC_VALUE_14 B_BE || word == SYNC_VALUE_14 B_LE ; }
294,public void assert No Position Discontinuities (  ) { assert That ( discontinuity Reasons )  . is Empty (  )  ; }
295,public E element (  ) { return get First (  )  ; }
296,"public void send Vendor Model Message ( final int opcode, final byte [  ]  parameters, final boolean acknowledged ) { final  Element element = m View Model . get Selected Element (  )  . get Value (  )  ;  if  ( element != null )  {     final  Vendor Model model =  (  Vendor Model )  m View Model . get Selected Model (  )  . get Value (  )  ;      if  ( model != null )  {         final int app Key Index = model . get Bound App Key Indexes (  )  . get ( 0 )  ;          final  Application Key app Key = m View Model . get Network Live Data (  )  . get Mesh Network (  )  . get App Key ( app Key Index )  ;          if  ( acknowledged )  {             send Message ( element . get Element Address (  ) , new  Vendor Model Message Acked ( app Key, model . get Model Id (  ) , model . get Company Identifier (  ) , opcode, parameters )  )  ;          } else {             send Message ( element . get Element Address (  ) , new  Vendor Model Message Unacked ( app Key, model . get Model Id (  ) , model . get Company Identifier (  ) , opcode, parameters )  )  ;          }     } }}"
297,"private int read Command ( boolean charstring ) { while  ( true )  {     int t = read Next ( charstring )  ;      if  ( t == CMD )  {         /*              System . out . print ( ""CMD= ""+num+"", args="" )  ;              for  ( int i=0 ;  i<stackptr ;  i++ )  {              System . out . print ( "" ""+stack [ i ]  )  ;              }              System . out . println (  )  ;               */         return num ;      } else {         stack [ stackptr++ ]  =  ( t == NUM )  ?  ( float )  num : fnum ;      } }}"
298,"public static  Firebase App initialize App ( @ Non Null  Context context, @ Non Null  Firebase Options options, @ Non Null  String name ) {  Global Background State Listener . ensure Background State Listener Registered ( context )  ;   String normalized Name = normalize ( name )  ;  final  Firebase App firebase App ;   Context application Context ;  if  ( context . get Application Context (  )  == null )  {     //  In shared processes' content providers get Application Context (  )  can return null .      application Context = context ;  } else {     application Context = context . get Application Context (  )  ;  } synchronized  ( LOCK )  {      Preconditions . check State ( !INSTANCES . contains Key ( normalized Name ) , "" Firebase App name "" + normalized Name + "" already exists!"" )  ;       Preconditions . check Not Null ( application Context, "" Application context cannot be null . "" )  ;      firebase App = new  Firebase App ( application Context, normalized Name, options )  ;      INSTANCES . put ( normalized Name, firebase App )  ;  } firebase App . initialize All Apis (  )  ;  return firebase App ; }"
299,public  String get Date Year (  ) { return date Year ; }
300,"public void load Library ( final  Context context, final  String library ) { load Library ( context, library, null, null )  ; }"
301,"private static  Class<? extends  Activity> get Launcher Activity ( @ Non Null  Context context ) {  Intent intent = context . get Package Manager (  )  . get Launch Intent For Package ( context . get Package Name (  )  )  ;  if  ( intent != null && intent . get Component (  )  != null )  {     try {         return  (  Class<? extends  Activity> )   Class . for Name ( intent . get Component (  )  . get Class Name (  )  )  ;      } catch  (  Class Not Found Exception e )  {         // Should not happen, print it to the log!          Log . e ( TAG, "" Failed when resolving the restart activity class via get Launch Intent For Package, stack trace follows!"", e )  ;      } } return null ; }"
302,"public com . anychart . core . ui .  Legend Item font Decoration (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Decoration ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
303,"public com . anychart . charts .  Venn hover (  Number index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hover ( %s )  ; "", index )  )  ;  return this ; }"
304,public  Certificate Generation Statistics get Statistics (  ) { return this . statistics ; }
305,"public void log In With Read Permissions (  Fragment fragment,  Collection< String> permissions ) { log In With Read Permissions ( new  Fragment Wrapper ( fragment ) , permissions )  ; }"
306,"public com . anychart . core . polar . series .  Range Column stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
307,"public void access (  Http Servlet Request req,  Repository db )  throws  Service Not Enabled Exception,  Service Not Authorized Exception{ if  ( !is Enabled ( db )  )      throw new  Service Not Enabled Exception (  )  ; }"
308,"public void is Vertical (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . is Vertical (  )  ; "" )  ; }"
309,public void add Constructor (  Ct Constructor c )  throws  Cannot Compile Exception{ check Modify (  )  ; }
310,public void update (  ) { update (  Gdx . graphics . get Delta Time (  )  )  ; }
311,"public  Drawable new Drawable (  Drawable drawable,  Color tint ) {  Drawable new Drawable ;  if  ( drawable instanceof  Texture Region Drawable )      new Drawable =  (  (  Texture Region Drawable )  drawable )  . tint ( tint )  ;  else if  ( drawable instanceof  Nine Patch Drawable )      new Drawable =  (  (  Nine Patch Drawable )  drawable )  . tint ( tint )  ;  else if  ( drawable instanceof  Sprite Drawable )      new Drawable =  (  (  Sprite Drawable )  drawable )  . tint ( tint )  ;  else     throw new  Gdx Runtime Exception ( "" Unable to copy, unknown drawable type: "" + drawable . get Class (  )  )  ;  if  ( new Drawable instanceof  Base Drawable )  {      Base Drawable named =  (  Base Drawable )  new Drawable ;      if  ( drawable instanceof  Base Drawable )          named . set Name (  (  (  Base Drawable )  drawable )  . get Name (  )  + ""  ( "" + tint + "" ) "" )  ;      else         named . set Name ( ""  ( "" + tint + "" ) "" )  ;  } return new Drawable ; }"
312,"protected void setup Main View (  ) { if  ( m Internal Content Layout != null )  {      View Group m Parent Group = null ;      try {         m Parent Group =  (  View Group )  m Internal Content Layout ;      } catch  (  Exception e )  {         set Recycle ( false )  ;      }     // It can happen in a list View, and improves performances     if  ( !is Recycle (  )  || is Force Replace Inner Layout (  )  )  {         if  ( is Force Replace Inner Layout (  )  && m Internal Content Layout != null && m Internal Inner View != null )               (  (  View Group )  m Internal Content Layout )  . remove View ( m Internal Inner View )  ;          m Internal Inner View = m Card . get Inner View ( get Context (  ) ,  (  View Group )  m Internal Content Layout )  ;      } else {         // Only setup  Inner  Elements         if  ( m Card . get Inner Layout (  )  > -1 )              m Card . setup Inner View Elements ( m Parent Group, m Internal Inner View )  ;      } }}"
313,public long ref Count (  ) { return ref Cnt ; }
314,"public final  String get Screen Display ID (  ) {  Window Manager wm =  (  Window Manager )  context . get System Service (  Context . WINDOW_SERVICE )  ;  if  ( wm != null )  {      Display display = wm . get Default Display (  )  ;      return  Check Validity Util . check Valid Data (  String . value Of ( display . get Display Id (  )  )  )  ;  } return  Check Validity Util . check Valid Data ( """" )  ; }"
315,"public void set Color ( int color, int alpha ) { set Color (  Color . argb ( alpha,  Color . red ( color ) ,  Color . green ( color ) ,  Color . blue ( color )  )  )  ; }"
316,"public com . anychart . core . cartesian . series .  Line3d bounds (  String x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
317,"public static  String unicode Escaped ( char ch ) { if  ( ch < 0x10 )  {     return ""\\u000"" +  Integer . to Hex String ( ch )  ;  } else if  ( ch < 0x100 )  {     return ""\\u00"" +  Integer . to Hex String ( ch )  ;  } else if  ( ch < 0x1000 )  {     return ""\\u0"" +  Integer . to Hex String ( ch )  ;  } return ""\\u"" +  Integer . to Hex String ( ch )  ; }"
318,"public com . anychart . charts .  Scatter left (  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", wrap Quotes ( left )  )  )  ;  return this ; }"
319,"public  Fragment Manager get Fragment Manager (  ) { throw new  Unsupported Operation Exception ( ""STUB!"" )  ; }"
320,public  Ummalqura Calendar [  ]  get Highlighted Days (  ) { if  ( highlighted Days . is Empty (  )  )      return null ;   Ummalqura Calendar [  ]  output = highlighted Days . to Array ( new  Ummalqura Calendar [ 0 ]  )  ;   Arrays . sort ( output )  ;  return output ; }
321,"public void before Body Write Internal (  Mapping Fast Json Value body Container,  Media Type content Type,  Method Parameter return Type,  Server Http Request request,  Server Http Response response ) {  Http Servlet Request servlet Request =  (  (  Servlet Server Http Request )  request )  . get Servlet Request (  )  ;  for  (  String name : this . jsonp Query Param Names )  {      String value = servlet Request . get Parameter ( name )  ;      if  ( value != null )  {         if  ( !is Valid Jsonp Query Param ( value )  )  {             continue ;          }         //  Media Type content Type To Use = get Content Type ( content Type, request, response )  ;          // response . get Headers (  )  . set Content Type ( content Type To Use )  ;          body Container . set Jsonp Function ( value )  ;          break ;      } }}"
322,"public void invalidate Filesystem (  Project Filesystem filesystem ) { cache . invalidate Filesystem ( filesystem, stats Tracker )  ; }"
323,public double get Annotation Y ( int index ) { return m String XY . get Y By Index ( index )  ; }
324,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
325,protected void on Processed Output Buffer ( long presentation Time Us ) { buffers In Codec Count-- ; }
326,public void set Group Strategy (  Group Strategy group Strategy ) { this . group Strategy = group Strategy ; }
327,"public com . anychart . charts .  Sparkline fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
328,public boolean is Set Type (  ) { return this . type != null ; }
329,"public com . anychart . charts .  Pareto select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
330,"public static void unmount (  View v ) { unmount ( v, true )  ; }"
331,public void set Actual Image Focus Point (  Point F focus Point ) {  Preconditions . check Not Null ( focus Point )  ;  get Scale Type Drawable At Index ( ACTUAL_IMAGE_INDEX )  . set Focus Point ( focus Point )  ; }
332,"protected boolean get Profile Proxy (  Context context,  Bluetooth Profile .  Service Listener listener, int profile ) { if  ( !is Overriding Proxy Behavior )  {     return directly On ( real Adapter,  Bluetooth Adapter . class )  . get Profile Proxy ( context, listener, profile )  ;  }  Bluetooth Profile proxy = profile Proxies . get ( profile )  ;  if  ( proxy == null )  {     return false ;  } else {     listener . on Service Connected ( profile, proxy )  ;      return true ;  }}"
333,"public com . anychart . core . annotations .  Triangle x Scale ( com . anychart . scales .  Stock Scatter Date Time settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
334,"public void set Uniformf (  String name,  Color values ) { set Uniformf ( name, values . r, values . g, values . b, values . a )  ; }"
335,"public void target Needs Reapplication (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . target Needs Reapplication (  )  ; "" )  ; }"
336,"public void font Color (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Color (  )  ; "" )  ; }"
337,"public  File Handle [  ]  list (  ) { if  ( type ==  File Type .  Classpath )      throw new  Gdx Runtime Exception ( "" Cannot list a classpath directory: "" + file )  ;   String [  ]  relative Paths = file (  )  . list (  )  ;  if  ( relative Paths == null )      return new  File Handle [ 0 ]  ;   File Handle [  ]  handles = new  File Handle [ relative Paths . length ]  ;  for  ( int i = 0, n = relative Paths . length ;  i < n ;  i++ )  handles [ i ]  = child ( relative Paths [ i ]  )  ;  return handles ; }"
338,"public com . anychart . standalones .  Data Grid bounds ( com . anychart . core . utils .  Bounds bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
339,"public static void show Rewarded Video (  Context context, @ Nullable JSON Object parameters,  Daemon Request .  Callback callback ) {  Daemon Request . execute Async ( context, parameters, callback, SDK Message Enum . SHOW_REWARDED_VIDEO )  ; }"
340,"private boolean read Module ( int row, int column, int num Rows, int num Columns ) { //  Adjust the row and column indices based on boundary wrapping if  ( row < 0 )  {     row += num Rows ;      column += 4 -  (  ( num Rows + 4 )  & 0x07 )  ;  } if  ( column < 0 )  {     column += num Columns ;      row += 4 -  (  ( num Columns + 4 )  & 0x07 )  ;  } if  ( row >= num Rows )  {     row -= num Rows ;  } read Mapping Matrix . set ( column, row )  ;  return mapping Bit Matrix . get ( column, row )  ; }"
341,"public com . anychart . core . annotations .  Triangle markers (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", settings )  )  ;  return this ; }"
342,public static void set Default Save Root Path ( final  String path ) { default Save Root Path = path ; }
343,public  Base Slider View set On Slider Click Listener (  On Slider Click Listener l ) { m On Slider Click Listener = l ;  return this ; }
344,public static _ Fields find By Name ( java . lang .  String name ) { return by Name . get ( name )  ; }
345,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
346,"static  Kotlin Metadata from (  Type Element type Element ) { return new  Auto Value_ Kotlin Metadata ( type Element,  Class Visitor . create Class Metadata ( metadata Of ( type Element )  )  )  ; }"
347,"private void on Image Inited (  Bitmap bitmap, int s Width, int s Height, int s Orientation ) { this . s Width = s Width ;  this . s Height = s Height ;  this . s Orientation = s Orientation ;  this . bitmap = bitmap ;  force Center On Next Draw (  )  ;  request Layout (  )  ;  invalidate (  )  ; }"
348,public final  Iterator< Attribute> iterator (  ) { return attributes . iterator (  )  ; }
349,"public  Stopwatch stop (  ) { long tick = ticker . read (  )  ;  check State ( is Running, "" This stopwatch is already stopped . "" )  ;  is Running = false ;  elapsed Nanos += tick - start Tick ;  return this ; }"
350,public static void cancel All (  ) {  Download Request Queue . get Instance (  )  . cancel All (  )  ; }
351,"public static  Fragment Controller<T> build Fragment (  Class<T> fragment Class,  Intent intent,  Bundle arguments ) { return  Fragment Controller . of (  Reflection Helpers . call Constructor ( fragment Class ) , intent, arguments )  ; }"
352,"public void set Scroll Perf Tag (  React Horizontal Scroll View view,  String scroll Perf Tag ) { view . set Scroll Perf Tag ( scroll Perf Tag )  ; }"
353,"public com . anychart . charts .  Sparkline padding (  String value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
354,public static  Optional< Hash Code> to Fingerprint (  String identifier ) {  Matcher matcher = STRICT_HASH_PATTERN . matcher ( identifier )  ;  if  ( matcher . matches (  )  )  {     return  Optional . of (  Hash Code . from String ( identifier . to Lower Case (  )  )  )  ;  } else {     return  Optional . empty (  )  ;  }}
355,public boolean is Set Debug Info (  ) { return this . debug Info != null ; }
356,"public com . anychart . charts .  Sparkline a11y (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . a11y ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
357,"public com . anychart . core . axismarkers .  Circular Range start Size (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . start Size ( %s )  ; "", value )  )  ;  return this ; }"
358,public int get Denom (  ) { return denom ; }
359,"public  Dir Cache Builder builder (  ) { return new  Dir Cache Builder ( this, entry Cnt + 16 )  ; }"
360,protected void set Samples ( int [  ]  [  ]  samples ) { this . samples = samples ; }
361,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings padding (  Number value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, value3, value4 )  )  ;  return this ; }"
362,public float get Joint Translation (  ) { return jni Get Joint Translation ( addr )  ; }
363,"public  Transition<R> build (  Data Source data Source, boolean is First Resource ) { if  ( data Source ==  Data Source . MEMORY_CACHE || !is First Resource )  {     return  No Transition . get (  )  ;  } if  ( animation == null )  {     animation = new  View Property Transition<> ( animator )  ;  } return animation ; }"
364,boolean is Missing Synthetic Annotation Method (  Variable Element field Element ) { return get Annotation Method ( field Element )  . map (  method For Annotations -> method For Annotations ==  Method For Annotations . MISSING )  . or Else ( false )  ; }
365,"public static  List< Buck Identifier> find Identifiers (  Project project ) {  List< Buck Identifier> result = new  Array List<> (  )  ;   Collection< Virtual File> virtual Files =  File Type Index . get Files (  Buck File Type . INSTANCE,  Global Search Scope . all Scope ( project )  )  ;  for  (  Virtual File virtual File : virtual Files )  {      Psi File psi File =  Psi Manager . get Instance ( project )  . find File ( virtual File )  ;      if  ( psi File instanceof  Buck File )  {          Buck File buck File =  (  Buck File )  psi File ;           Buck Identifier [  ]  identifiers =  Psi Tree Util . get Children Of Type ( buck File,  Buck Identifier . class )  ;          if  ( identifiers != null )  {              Collections . add All ( result, identifiers )  ;          }     } } return result ; }"
366,"public  Rectangle fit Outside (  Rectangle rect ) { float ratio = get Aspect Ratio (  )  ;  if  ( ratio > rect . get Aspect Ratio (  )  )  {     //  Wider than tall     set Size ( rect . height * ratio, rect . height )  ;  } else {     //  Taller than wide     set Size ( rect . width, rect . width / ratio )  ;  } set Position (  ( rect . x + rect . width / 2 )  - width / 2,  ( rect . y + rect . height / 2 )  - height / 2 )  ;  return this ; }"
367,"private static  Collection<IO Exception> add Exception ( @ Check For Null  Collection<IO Exception> exceptions, IO Exception e ) { if  ( exceptions == null )  {     // don't need  Set semantics     exceptions = new  Array List<> (  )  ;  } exceptions . add ( e )  ;  return exceptions ; }"
368,"public  Map< Integer,  Integer> get Selection Args Back References (  ) { if  (  Runtime Environment . get Api Level (  )  >= R )  {     throw new  Unsupported Operation Exception ( ""unsupported on  Android R"" )  ;  } return get Field Reflectively ( ""m Selection Args Back References"",  Map . class )  ; }"
369,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
370,public  Hms Picker Builder set Fragment Manager (  Fragment Manager manager ) { this . manager = manager ;  return this ; }
371,"public com . anychart . charts .  Scatter bounds ( com . anychart . core . utils .  Bounds bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
372,"public  Media Type with Parameter (  String attribute,  String value ) { return with Parameters ( attribute,  Immutable Set . of ( value )  )  ; }"
373,"public com . anychart . core . lineargauge . pointers .  Led hovered (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hovered ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
374,static  Array Value .  Builder coerced Field Values Array ( @ Nullable  Value value ) { if  (  Values . is Array ( value )  )  {     return value . get Array Value (  )  . to Builder (  )  ;  } else {     // coerce to empty array .      return  Array Value . new Builder (  )  ;  }}
375,public com . facebook . buck . remoteexecution . proto .  Executed Action Info get Executed Action Info (  ) { if  ( executed Action Info Builder_ == null )  {     return executed Action Info_ == null ? com . facebook . buck . remoteexecution . proto .  Executed Action Info . get Default Instance (  )  : executed Action Info_ ;  } else {     return executed Action Info Builder_ . get Message (  )  ;  }}
376,"public com . anychart . core .  State Settings negative Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . negative Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
377,"public com . anychart . scales .  Linear Color colors (  String var_args ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . colors ( %s )  ; "", wrap Quotes ( var_args )  )  )  ;  return this ; }"
378,"public com . anychart . core . stock . scrollerseries .  Range Area bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
379,"public static  Grouped Source of Source Group (  String source Group Name,  Path source Group Path Relative To Target,  Collection< Grouped Source> source Group ) { return  Immutable Grouped Source . of (  Type . SOURCE_GROUP,  Optional . empty (  ) ,  Optional . empty (  ) ,  Optional . of ( source Group Name ) ,  Optional . of ( source Group Path Relative To Target ) ,  Optional . of (  (  List< Grouped Source> )   Immutable List . copy Of ( source Group )  )  )  ; }"
380,public boolean is Scroll X (  ) { return scroll X ; }
381,public void set Depart Org Code (  String depart Org Code ) { this . depart Org Code = depart Org Code ; }
382,public void remove Pan Listener (  Pan Listener listener ) { m Touch Handler . remove Pan Listener ( listener )  ; }
383,public void set Popup Menu Prepare Listener (  On Prepare Card Header Popup Menu Listener popup Menu Listener ) { m Popup Menu Prepare Listener = popup Menu Listener ; }
384,"public static  Content Metadata Mutations set Content Length (  Content Metadata Mutations mutations, long length ) { return mutations . set (  Content Metadata . KEY_CONTENT_LENGTH, length )  ; }"
385,"public void on Create (  Bundle saved Instance State ) { super . on Create ( saved Instance State )  ;  set Title ( R . string . diff_title )  ;  set Content View ( R . layout . title_layout )  ;  view Flow =  (  View Flow )  find View By Id ( R . id . viewflow )  ;   Diff Adapter adapter = new  Diff Adapter ( this )  ;  view Flow . set Adapter ( adapter )  ;   Title Flow Indicator indicator =  (  Title Flow Indicator )  find View By Id ( R . id . viewflowindic )  ;  indicator . set Title Provider ( adapter )  ;  view Flow . set Flow Indicator ( indicator )  ;  /**  To populate  List View in diff_view1 . xml */ list View =  (  List View )  find View By Id ( R . id . list View1 )  ;   String [  ]  names = new  String [  ]  { "" Cupcake"", "" Donut"", "" Eclair"", "" Froyo"", "" Gingerbread"", "" Honeycomb"", "" Ice Cream  Sandwich"" } ;  //  Create an  Array Adapter, that will actually make the  Strings above // appear in the  List View list View . set Adapter ( new  Array Adapter< String> ( this, android . R . layout . simple_list_item_1, names )  )  ; }"
386,"public void min Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Height (  )  ; "" )  ; }"
387,public  Cst Type get Enclosing Class (  ) { return type ; }
388,"public void write (  Random Access File file )  throws IO Exception{ int offset = 0 ;  long size ;  long file Pointer ;  byte [  ]  buffer = new byte [ 6 + 9 ]  ;   String str ;   Lyrics3v2 Field field ;   Iterator< Lyrics3v2 Field> iterator ;  ID3v1 Tag id3v1tag ;  new ID3v1 Tag (  )  ;  id3v1tag = null ;  delete ( file )  ;  file . seek ( file . length (  )  )  ;  file Pointer = file . get File Pointer (  )  ;  str = ""LYRICSBEGIN"" ;  for  ( int i = 0 ;  i < str . length (  )  ;  i++ )  {     buffer [ i ]  =  ( byte )  str . char At ( i )  ;  } file . write ( buffer, 0, str . length (  )  )  ;  // IND needs to go first .  lets create Field/update it and write it first .  update Field ( ""IND"" )  ;  field = field Map . get ( ""IND"" )  ;  field . write ( file )  ;  iterator = field Map . values (  )  . iterator (  )  ;  while  ( iterator . has Next (  )  )  {     field = iterator . next (  )  ;       String id = field . get Identifier (  )  ;      boolean save =  Tag Option Singleton . get Instance (  )  . get Lyrics3 Save Field ( id )  ;      if  (  ( !id . equals ( ""IND"" )  )  && save )  {         field . write ( file )  ;      } } size = file . get File Pointer (  )  - file Pointer ;  if  ( this . get Size (  )  != size )  { //logger . config ( "" Lyrics3v2 size didn't match up while writing . "" )  ;  //logger . config ( ""this . getsize (  )      = "" + this . get Size (  )  )  ;  //logger . config ( ""size  ( file Pointer )  = "" + size )  ;  } str =  Long . to String ( size )  ;  for  ( int i = 0 ;  i <  ( 6 - str . length (  )  )  ;  i++ )  {     buffer [ i ]  =  ( byte )  '0' ;  } offset +=  ( 6 - str . length (  )  )  ;  for  ( int i = 0 ;  i < str . length (  )  ;  i++ )  {     buffer [ i + offset ]  =  ( byte )  str . char At ( i )  ;  } offset += str . length (  )  ;  str = ""LYRICS200"" ;  for  ( int i = 0 ;  i < str . length (  )  ;  i++ )  {     buffer [ i + offset ]  =  ( byte )  str . char At ( i )  ;  } offset += str . length (  )  ;  file . write ( buffer, 0, offset )  ;  if  ( id3v1tag != null )  {     id3v1tag . write ( file )  ;  }}"
389,"public static  Bitmap create Drawable Bitmap ( @ Non Null  Drawable drawable ) { int width = drawable . get Intrinsic Width (  )  ;  int height = drawable . get Intrinsic Height (  )  ;  if  ( width <= 0 || height <= 0 )  {     return null ;  } float scale =  Math . min ( 1f,  (  ( float )  MAX_IMAGE_SIZE )  /  ( width * height )  )  ;  if  ( drawable instanceof  Bitmap Drawable && scale == 1f )  {     // return same bitmap if scale down not needed     return  (  (  Bitmap Drawable )  drawable )  . get Bitmap (  )  ;  } int bitmap Width =  ( int )   ( width * scale )  ;  int bitmap Height =  ( int )   ( height * scale )  ;   Bitmap bitmap =  Bitmap . create Bitmap ( bitmap Width, bitmap Height,  Bitmap .  Config . ARGB_8888 )  ;   Canvas canvas = new  Canvas ( bitmap )  ;   Rect existing Bounds = drawable . get Bounds (  )  ;  int left = existing Bounds . left ;  int top = existing Bounds . top ;  int right = existing Bounds . right ;  int bottom = existing Bounds . bottom ;  drawable . set Bounds ( 0, 0, bitmap Width, bitmap Height )  ;  drawable . draw ( canvas )  ;  drawable . set Bounds ( left, top, right, bottom )  ;  return bitmap ; }"
390,"public void react To Null Parameters (  Object first,  Object second ) { if  ( first == null )  {     action When First Param Is Null . act (  )  ;  } if  ( second == null )  {     action When Second Param Is Null . act (  )  ;  }}"
391,"public com . anychart . core . utils .  Bounds bounds (  ) { return new com . anychart . core . utils .  Bounds ( js Base + "" . bounds (  ) "" )  ; }"
392,"private void expand Sub Items With Animation ( float starting Pos ) { if  ( m Base Sub List Layout != null )  {     final int total Height =  ( m Sub Item Height * m Sub Item Count )  ;       Value Animator animation = m Sub Items Shown ?  Value Animator . of Float ( starting Pos, total Height )  :  Value Animator . of Float ( total Height, starting Pos )  ;      animation . set Interpolator ( new  Accelerate Decelerate Interpolator (  )  )  ;      animation . set Duration ( m Animation Duration )  ;      animation . add Update Listener ( new  Value Animator .  Animator Update Listener (  )  {         @ Override         public void on Animation Update (  Value Animator animation )  {             float val =  ( float )  animation . get Animated Value (  )  ;               Custom View Utils . set View Height ( m Base Sub List Layout,  ( int )  val )  ;          }     } )  ;      animation . add Listener ( new  Animator Listener Adapter (  )  {         @ Override         public void on Animation End (  Animator animation )  {             super . on Animation End ( animation )  ;              if  ( m Sub Items Shown )  {                 adjust Item Pos If Hidden (  )  ;              }         }     } )  ;      animation . start (  )  ;  }}"
393,public boolean is Set Artifact Payload Crc32 (  ) { return this . artifact Payload Crc32 != null ; }
394,public synchronized  State Handler acquire State Handler (  ) { return  State Handler . create New Instance ( m State Handler )  ; }
395,public  List< Character> order (  List< Character> insertion Order ) { return insertion Order ; }
396,"public boolean content Equals (  Insn b ) { return opcode == b . get Opcode (  )  && position . equals ( b . get Position (  )  )  &&  ( get Class (  )  == b . get Class (  )  )  && equals Handle Nulls ( result, b . get Result (  )  )  && equals Handle Nulls ( sources, b . get Sources (  )  )  &&  Std Type List . equal Contents ( get Catches (  ) , b . get Catches (  )  )  ; }"
397,"public static int divide ( int dividend, int divisor ) { return  ( int )   ( to Long ( dividend )  / to Long ( divisor )  )  ; }"
398,"public com . anychart . core . stock . scrollerseries .  Step Line bounds (  String x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
399,private  Path get Path To All Libs Dir (  ) { return get Bin Path (  )  ; }
400,"public  Null Pointer Tester set Default (  Class<T> type, T value ) { defaults . put Instance ( type, check Not Null ( value )  )  ;  return this ; }"
401,public java . lang .  String get Resource Name (  ) { java . lang .  Object ref = resource Name_ ;  if  ( ref instanceof java . lang .  String )  {     return  ( java . lang .  String )  ref ;  } else {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      resource Name_ = s ;      return s ;  }}
402,"public  To String Builder append (  String field Name, int [  ]  array ) { style . append ( buffer, field Name, array, null )  ;  return this ; }"
403,"public void save As Png (  String width,  Number height,  Number quality,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Png ( %s, %s, %s, %s )  ; "", wrap Quotes ( width ) , height, quality, wrap Quotes ( filename )  )  )  ; }"
404,public  Path to Path Default File System (  ) { return to Path (  File Systems . get Default (  )  )  ; }
405,public final T external Compute (  ) { complete ( compute (  )  )  ;  return get Raw Result (  )  ; }
406,public  List Iterator<E> list Iterator ( int location ) { return new  Realm Collection List Iterator ( location )  ; }
407,"public static  Builder<K, V> builder (  ) { return new  Builder<> (  )  ; }"
408,"public com . anychart . core . stock . scrollerseries .  Range Spline Area left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
409,"public  Download Controller get (  String store File Path,  String url ) { synchronized  ( m Task Queue )  {     for  (  Download Controller controller : m Task Queue )  {         if  ( controller . equals Request ( store File Path, url )  )              return controller ;      } } return null ; }"
410,"public  Track Selection Parameters build (  ) { return new  Track Selection Parameters ( //  Audio preferred Audio Language, //  Text preferred Text Language, select Undetermined Text Language, disabled Text Track Selection Flags )  ; }"
411,"public com . anychart . standalones .  Resource List height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
412,public void set Animated ( boolean animated ) { this . animated = animated ;  for  ( int i = 0 ;  i < get Child Count (  )  ;  i++ )  {     retrieve Child ( i )  . set Animated ( animated )  ;  }}
413,"public com . anychart . charts .  Mekko bottom (  String bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", wrap Quotes ( bottom )  )  )  ;  return this ; }"
414,public void fallback Flag_after Applying Via Other Request Options_is Set (  ) { assert That ( options . fallback ( android . R . drawable . star_on )  . apply ( new  Request Options (  )  . apply ( new  Request Options (  )  . fallback ( new  Color Drawable (  Color . RED )  )  )  )  . get Fallback Id (  )  )  . is Equal To ( 0 )  ; }
415,public void switch Camera (  Camera camera ) { synchronized  ( m Next Camera Lock )  {     m Next Camera = camera ;  }}
416,"public void check Mode Merge Conflict In Virtual Ancestor (  Merge Strategy strategy )  throws  Exception{ if  ( !strategy . equals (  Merge Strategy . RECURSIVE )  )  {     return ;  }  Git git =  Git . wrap ( db )  ;  // master write Trash File ( ""c"", ""initial file"" )  ;  git . add (  )  . add Filepattern ( ""c"" )  . call (  )  ;   Rev Commit commit I = git . commit (  )  . set Message ( "" Initial commit"" )  . call (  )  ;   File a = write Trash File ( ""a"", ""content in  Ancestor"" )  ;  git . add (  )  . add Filepattern ( ""a"" )  . call (  )  ;   Rev Commit commit A1 = git . commit (  )  . set Message ( "" Ancestor 1"" )  . call (  )  ;  a = write Trash File ( ""a"", ""content in  Child 1  ( commited on master ) "" )  ;  git . add (  )  . add Filepattern ( ""a"" )  . call (  )  ;  // commit C1 M git . commit (  )  . set Message ( "" Child 1 on master"" )  . call (  )  ;  git . checkout (  )  . set Create Branch ( true )  . set Start Point ( commit I )  . set Name ( ""branch-to-merge"" )  . call (  )  ;  // ""a"" becomes executable in A2 a = write Trash File ( ""a"", ""content in  Ancestor"" )  ;  a . set Executable ( true )  ;  git . add (  )  . add Filepattern ( ""a"" )  . call (  )  ;   Rev Commit commit A2 = git . commit (  )  . set Message ( "" Ancestor 2"" )  . call (  )  ;  // second branch git . checkout (  )  . set Create Branch ( true )  . set Start Point ( commit A1 )  . set Name ( ""second-branch"" )  . call (  )  ;  a = write Trash File ( ""a"", ""content in  Child 2  ( commited on second-branch ) "" )  ;  git . add (  )  . add Filepattern ( ""a"" )  . call (  )  ;  // commit C2 S git . commit (  )  . set Message ( "" Child 2 on second-branch"" )  . call (  )  ;  //  Merge branch-to-merge into second-branch  Merge Result merge Result = git . merge (  )  . include ( commit A2 )  . set Strategy ( strategy )  . call (  )  ;  assert Equals ( merge Result . get New Head (  ) , null )  ;  assert Equals ( merge Result . get Merge Status (  ) ,  Merge Status . CONFLICTING )  ;  //  Resolve the conflict manually, merge ""a"" as non-executable a = write Trash File ( ""a"", ""merge conflict resolution"" )  ;  a . set Executable ( false )  ;  git . add (  )  . add Filepattern ( ""a"" )  . call (  )  ;   Rev Commit commit C3 S = git . commit (  )  . set Message ( "" Child 3 on second bug - resolve merge conflict"" )  . call (  )  ;  //  Merge branch-to-merge into master git . checkout (  )  . set Name ( ""master"" )  . call (  )  ;  merge Result = git . merge (  )  . include ( commit A2 )  . set Strategy ( strategy )  . call (  )  ;  assert Equals ( merge Result . get New Head (  ) , null )  ;  assert Equals ( merge Result . get Merge Status (  ) ,  Merge Status . CONFLICTING )  ;  //  Resolve the conflict manually - merge ""a"" as non-executable a = write Trash File ( ""a"", ""merge conflict resolution"" )  ;  a . set Executable ( false )  ;  git . add (  )  . add Filepattern ( ""a"" )  . call (  )  ;  // commit C4 M git . commit (  )  . set Message ( "" Child 4 on master - resolve merge conflict"" )  . call (  )  ;  //  Merge C4 M  ( second-branch )  into master  ( C3 S )  //  Conflict in virtual base should be here, but there are no conflicts in // children merge Result = git . merge (  )  . include ( commit C3 S )  . call (  )  ;  assert Equals ( merge Result . get Merge Status (  ) ,  Merge Status . MERGED )  ; }"
417,"public com . anychart . standalones .  Title letter Spacing (  String spacing ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . letter Spacing ( %s )  ; "", wrap Quotes ( spacing )  )  )  ;  return this ; }"
418,"public com . anychart . charts .  Tag Cloud bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
419,"public com . anychart . core . polar . series .  Range Column max Labels (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Labels ( %s )  ; "", settings )  )  ;  return this ; }"
420,"public static  Icy Headers parse (  Map< String,  List< String>> response Headers ) { boolean icy Headers Present = false ;  int bitrate =  Format . NO_VALUE ;   String genre = null ;   String name = null ;   String url = null ;  boolean is Public = false ;  int metadata Interval = C . LENGTH_UNSET ;   List< String> headers = response Headers . get ( RESPONSE_HEADER_BITRATE )  ;  if  ( headers != null )  {      String bitrate Header = headers . get ( 0 )  ;      try {         bitrate =  Integer . parse Int ( bitrate Header )  * 1000 ;          if  ( bitrate > 0 )  {             icy Headers Present = true ;          } else {              Log . w ( TAG, "" Invalid bitrate: "" + bitrate Header )  ;              bitrate =  Format . NO_VALUE ;          }     } catch  (  Number Format Exception e )  {          Log . w ( TAG, "" Invalid bitrate header: "" + bitrate Header )  ;      } } headers = response Headers . get ( RESPONSE_HEADER_GENRE )  ;  if  ( headers != null )  {     genre = headers . get ( 0 )  ;      icy Headers Present = true ;  } headers = response Headers . get ( RESPONSE_HEADER_NAME )  ;  if  ( headers != null )  {     name = headers . get ( 0 )  ;      icy Headers Present = true ;  } headers = response Headers . get ( RESPONSE_HEADER_URL )  ;  if  ( headers != null )  {     url = headers . get ( 0 )  ;      icy Headers Present = true ;  } headers = response Headers . get ( RESPONSE_HEADER_PUB )  ;  if  ( headers != null )  {     is Public = headers . get ( 0 )  . equals ( ""1"" )  ;      icy Headers Present = true ;  } headers = response Headers . get ( RESPONSE_HEADER_METADATA_INTERVAL )  ;  if  ( headers != null )  {      String metadata Interval Header = headers . get ( 0 )  ;      try {         metadata Interval =  Integer . parse Int ( metadata Interval Header )  ;          if  ( metadata Interval > 0 )  {             icy Headers Present = true ;          } else {              Log . w ( TAG, "" Invalid metadata interval: "" + metadata Interval Header )  ;              metadata Interval = C . LENGTH_UNSET ;          }     } catch  (  Number Format Exception e )  {          Log . w ( TAG, "" Invalid metadata interval: "" + metadata Interval Header )  ;      } } return icy Headers Present ? new  Icy Headers ( bitrate, genre, name, url, is Public, metadata Interval )  : null ; }"
421,"public void h Align (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . h Align (  )  ; "" )  ; }"
422,"public com . anychart . core . ui .  Data Area z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
423,public static int get Ac3 Syncframe Audio Sample Count (  ) { return AC3_SYNCFRAME_AUDIO_SAMPLE_COUNT ; }
424,"public com . anychart . core . resource .  Conflicts parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
425,"public void opt In Tracking (  ) { opt In Tracking ( null, null )  ; }"
426,public  Column get Column By Field Name (  String field Name ) {  List< Column> columns = get Child Columns (  )  ;  for  (  Column column : columns )  {     if  ( column . get Field Name (  )  . equals ( field Name )  )  {         return column ;      } } return null ; }
427,"public  Color lerp ( final float r, final float g, final float b, final float a, final float t ) { this . r += t *  ( r - this . r )  ;  this . g += t *  ( g - this . g )  ;  this . b += t *  ( b - this . b )  ;  this . a += t *  ( a - this . a )  ;  return clamp (  )  ; }"
428,"private void set Alpha Adapter (  ) {  Animation Adapter anim Card Array Adapter = new  Alpha In Animation Adapter ( m Card Array Adapter )  ;  anim Card Array Adapter . set Abs List View ( m List View )  ;  if  ( m List View != null )  {     m List View . set External Adapter ( anim Card Array Adapter, m Card Array Adapter )  ;  }}"
429,public void set Shell Path (  String shell Path ) { this . shell Path = shell Path ; }
430,public boolean is Allow Half Open (  ) { return allow Half Open ; }
431,"public com . anychart . core . cartesian . series .  Continuous Range Base fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
432,"public  Listenable Future<T> submit Async ( final  Async Callable<T> callable, final  Executor executor ) { check Not Null ( callable )  ;  check Not Null ( executor )  ;  final  Task Non Reentrant Executor task Executor = new  Task Non Reentrant Executor ( executor, this )  ;  final  Async Callable<T> task = new  Async Callable<T> (  )  {     @ Override     public  Listenable Future<T> call (  )  throws  Exception {         if  ( !task Executor . try Set Started (  )  )  {             return immediate Cancelled Future (  )  ;          }         return callable . call (  )  ;      }     @ Override     public  String to String (  )  {         return callable . to String (  )  ;      } } ;  /*  *  Four futures are at play here:  * task Future is the future tracking the result of the callable .   * new Future is a future that completes after this and all prior tasks are done .   * old Future is the previous task's new Future .   * output Future is the future we return to the caller, a non Cancellation Propagating task Future .   *  * new Future is guaranteed to only complete once all tasks previously submitted to this instance  * have completed - namely after old Future is done, and task Future has either completed or been  * cancelled before the callable started execution .   */ final  Settable Future<@ Nullable  Void> new Future =  Settable Future . create (  )  ;  final  Listenable Future<@ Nullable  Void> old Future = ref . get And Set ( new Future )  ;  //  Invoke our task once the previous future completes .  final  Trusted Listenable Future Task<T> task Future =  Trusted Listenable Future Task . create ( task )  ;  old Future . add Listener ( task Future, task Executor )  ;  final  Listenable Future<T> output Future =  Futures . non Cancellation Propagating ( task Future )  ;  // new Future's lifetime is determined by task Future, which can't complete before old Future // unless task Future is cancelled, in which case it falls back to old Future .   This ensures that // if the future we return is cancelled, we don't begin execution of the next task until after // old Future completes .   Runnable listener = new  Runnable (  )  {     @ Override     public void run (  )  {         if  ( task Future . is Done (  )  )  {             //  Since the value of old Future can only ever be immediate Future ( null )  or set Future of             // a future that eventually came from immediate Future ( null ) , this doesn't leak             // throwables or completion values .              new Future . set Future ( old Future )  ;          } else if  ( output Future . is Cancelled (  )  && task Executor . try Set Cancelled (  )  )  {             //  If this CAS succeeds, we know that the provided callable will never be invoked,             // so when old Future completes it is safe to allow the next submitted task to             // proceed .   Doing this immediately here lets the next task run without waiting for             // the cancelled task's executor to run the noop  Async Callable .              //             // ---             //             //  If the CAS fails, the provided callable already started running  ( or it is about             // to )  .   Our contract promises:             //             // 1 .  not to execute a new callable until the old one has returned             //             //  If we were to cancel task Future, that would let the next task start while the old             // one is still running .              //             //  Now, maybe we could tweak our implementation to not start the next task until the             // callable actually completes .   (  We could detect completion in our wrapper             // ` Async Callable task` .  )   However, our contract also promises:             //             // 2 .  not to cancel any  Future the user returned from an  Async Callable             //             //  We promise this because, once we cancel that  Future, we would no longer be able to             // tell when any underlying work it is doing is done .   Thus, we might start a new task             // while that underlying work is still running .              //             //  So that is why we cancel only in the case of CAS success .              task Future . cancel ( false )  ;          }     } } ;  //  Adding the listener to both futures guarantees that new Future will aways be set .   Adding to // task Future guarantees completion if the callable is invoked, and adding to output Future // propagates cancellation if the callable has not yet been invoked .  output Future . add Listener ( listener, direct Executor (  )  )  ;  task Future . add Listener ( listener, direct Executor (  )  )  ;  return output Future ; }"
433,public void set Last Update Time Key (  String key ) { if  (  Text Utils . is Empty ( key )  )  {     return ;  } m Last Update Time Key = key ; }
434,protected void delete (  ) { c Pointer = 0 ; }
435,"public void test Select Tracks Within Capabilities Select Higher Num Channel (  )  throws  Exception{  Format higher Channel Format =  Format . create Audio Sample Format ( ""audio Format"",  Mime Types . AUDIO_AAC, null,  Format . NO_VALUE,  Format . NO_VALUE, 6, 44100, null, null, 0, null )  ;   Format lower Channel Format =  Format . create Audio Sample Format ( ""audio Format"",  Mime Types . AUDIO_AAC, null,  Format . NO_VALUE,  Format . NO_VALUE, 2, 44100, null, null, 0, null )  ;   Track Group Array track Groups = wrap Formats ( higher Channel Format, lower Channel Format )  ;   Track Selector Result result = track Selector . select Tracks ( new  Renderer Capabilities [  ]  { ALL_AUDIO_FORMAT_SUPPORTED_RENDERER_CAPABILITIES }, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, higher Channel Format )  ; }"
436,public  String get Obj C Generated Header File Name (  ) { return header Path . get File Name (  )  . to String (  )  ; }
437,"public void set Mask Width ( float mask Width ) { if  ( mask Width <= MIN_MASK_WIDTH_VALUE || MAX_MASK_WIDTH_VALUE < mask Width )  {     throw new  Illegal Argument Exception (  String . format ( ""mask Width value must be higher than %d and less or equal to %d"", MIN_MASK_WIDTH_VALUE, MAX_MASK_WIDTH_VALUE )  )  ;  } this . mask Width = mask Width ;  reset If Started (  )  ; }"
438,"public com . anychart . core . ui .  Chart Credits credits (  ) { return new com . anychart . core . ui .  Chart Credits ( js Base + "" . credits (  ) "" )  ; }"
439,public void set Reuse Addr ( boolean reuse Addr ) { this . reuse Addr = reuse Addr ; }
440,"public com . anychart . charts .  Mekko points Padding (  Number padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . points Padding ( %s )  ; "", padding )  )  ;  return this ; }"
441,"private int hash Cached Content (  Cached Content cached Content, int version ) { int result = cached Content . id ;  result = 31 * result + cached Content . key . hash Code (  )  ;  if  ( version < VERSION_METADATA_INTRODUCED )  {     long length =  Content Metadata . get Content Length ( cached Content . get Metadata (  )  )  ;      result = 31 * result +  ( int )   ( length ^  ( length >>> 32 )  )  ;  } else {     result = 31 * result + cached Content . get Metadata (  )  . hash Code (  )  ;  } return result ; }"
442,"private static void calc Checksum ( byte [  ]  bytes ) {  Adler32 a32 = new  Adler32 (  )  ;  a32 . update ( bytes, 12, bytes . length - 12 )  ;  int sum =  ( int )  a32 . get Value (  )  ;  bytes [ 8 ]  =  ( byte )  sum ;  bytes [ 9 ]  =  ( byte )   ( sum >> 8 )  ;  bytes [ 10 ]  =  ( byte )   ( sum >> 16 )  ;  bytes [ 11 ]  =  ( byte )   ( sum >> 24 )  ; }"
443,"public com . anychart . standalones . axes .  Radial parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
444,public static  Float Buffer create Buffer ( float [  ]  data ) { return  (  Float Buffer )  create Buffer ( data . length )  . put ( data )  . flip (  )  ; }
445,"public  Reftable Reader open (  Dfs Reader ctx )  throws IO Exception{ return new  Reftable Reader ( new  Cache Source ( this, cache, ctx )  )  ; }"
446,"public static void show Hide ( @ Non Null final  Fragment show, @ Non Null final  Fragment .  .  .  hide ) { show Hide ( show,  Arrays . as List ( hide )  )  ; }"
447,public boolean is Set ( _ Fields field ) { if  ( field == null )  {     throw new java . lang .  Illegal Argument Exception (  )  ;  } switch ( field )  {     case RESULTS:         return is Set Results (  )  ;  } throw new java . lang .  Illegal State Exception (  )  ; }
448,public int get View Type Count (  ) { int count = m Adapter == null ? 1 : m Adapter . get View Type Count (  )  ;  if  ( m Cache Place Hold View )  {     int offset = m Header View Infos . size (  )  + 1 + m Footer View Infos . size (  )  ;      if  ( m Cache First Header View )  {         offset += 1 ;      }     count += offset ;  } return count ; }
449,public com . facebook . buck . remoteexecution . proto .  Cas Client Info .  Builder get Cas Client Info Builder (  ) { on Changed (  )  ;  return get Cas Client Info Field Builder (  )  . get Builder (  )  ; }
450,"public com . anychart . core . ui .  Separator margin (  String [  ]  space Or Top Or Top And Bottom,  String right Or Right And Left,  Number bottom,  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( space Or Top Or Top And Bottom ) , wrap Quotes ( right Or Right And Left ) , bottom, wrap Quotes ( left )  )  )  ;  return this ; }"
451,public  Mapped Track Info get Mapped Track Info ( int period Index ) { assert Prepared With Media (  )  ;  return mapped Track Infos [ period Index ]  ; }
452,"public com . anychart . core . stock . scrollerseries .  Spline Area bounds (  Number x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
453,"public static  Object apply Or Call ( boolean is Apply,  Context cx,  Scriptable scope,  Scriptable this Obj,  Object [  ]  args ) { int L = args . length ;   Callable function = get Callable ( this Obj )  ;   Scriptable call This = null ;  if  ( L != 0 )  {     call This = to Object Or Null ( cx, args [ 0 ]  )  ;  } if  ( call This == null )  {     //  This covers the case of args [ 0 ]  ==  ( null|undefined )  as well .      call This = get Top Call Scope ( cx )  ;  }  Object [  ]  call Args ;  if  ( is Apply )  {     //  Follow  Ecma 15 . 3 . 4 . 3     call Args = L <= 1 ?  Script Runtime . empty Args : get Apply Arguments ( cx, args [ 1 ]  )  ;  } else {     //  Follow  Ecma 15 . 3 . 4 . 4     if  ( L <= 1 )  {         call Args =  Script Runtime . empty Args ;      } else {         call Args = new  Object [ L - 1 ]  ;           System . arraycopy ( args, 1, call Args, 0, L - 1 )  ;      } } return function . call ( cx, scope, call This, call Args )  ; }"
454,private void init_custom_card_expand_clicking_image (  ) { // Create a  Card  Card card = new  Card ( get Activity (  )  )  ;  // This provides a simple  ( and useless )  expand area  Card Expand expand = new  Card Expand ( get Activity (  )  )  ;  // Set inner title in  Expand  Area expand . set Title ( get String ( R . string . demo_expand_customtitle3 )  )  ;  card . add Card Expand ( expand )  ;   Custom Thumbnail thumb = new  Custom Thumbnail ( get Activity (  )  )  ;  thumb . set Drawable Resource ( R . drawable . ic_smile )  ;  card . add Card Thumbnail ( thumb )  ;  // Set card in the card View  Card View card View =  (  Card View )  get Activity (  )  . find View By Id ( R . id . carddemo_example_card_expand4 )  ;  card View . set Card ( card )  ; }
455,"public com . anychart . charts .  Venn hovered (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hovered ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
456,public float get Bubble Scale (  ) { return bubble Scale ; }
457,protected  List<? extends  Base Model> get Legend Data (  ) { return m Data ; }
458,protected  Material Dialog .  Builder create Dialog Builder (  ) { return new  Material Dialog .  Builder ( get Activity (  )  )  . title ( get Title (  )  )  . content ( get Message (  )  )  . cancelable ( true )  . cancel Listener ( this )  ; }
459,"public com . anychart . core . utils .  Padding padding (  ) { return new com . anychart . core . utils .  Padding ( js Base + "" . padding (  ) "" )  ; }"
460,public  Generic Drawee Hierarchy Builder set Actual Image Scale Type ( @ Nullable  Scaling Utils .  Scale Type actual Image Scale Type ) { m Actual Image Scale Type = actual Image Scale Type ;  m Actual Image Matrix = null ;  return this ; }
461,public long estimate Bytes Used (  ) { return bytes Used ; }
462,"public void layout (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . layout (  )  ; "" )  ; }"
463,"public void count (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . count (  )  ; "" )  ; }"
464,"public int index Of ( long value ) { if  ( size == 0 )      return -1 ;  long [  ]  values = this . values ;  final int head = this . head, tail = this . tail ;  if  ( head < tail )  {     for  ( int i = head ;  i < tail ;  i++ )  if  ( values [ i ]  == value )          return i - head ;  } else {     for  ( int i = head, n = values . length ;  i < n ;  i++ )  if  ( values [ i ]  == value )          return i - head ;      for  ( int i = 0 ;  i < tail ;  i++ )  if  ( values [ i ]  == value )          return i + values . length - head ;  } return -1 ; }"
465,public  Factory set Load Error Handling Policy (  Load Error Handling Policy load Error Handling Policy ) {  Assertions . check State ( !is Create Called )  ;  this . load Error Handling Policy = load Error Handling Policy ;  return this ; }
466,"public com . anychart . core . cartesian . series .  Step Area step Area (  String [  ]  data, com . anychart . enums .  Text Parsing Mode csv Settings ) { return new com . anychart . core . cartesian . series .  Step Area (  String . format (  Locale . US, js Base + "" . step Area ( %s, %s ) "", array To String Wrap Quotes ( data ) ,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
467,"public  Double Buffer get ( double [  ]  dest ) { return get ( dest, 0, dest . length )  ; }"
468,"public com . anychart . charts .  Linear Gauge parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
469,public int get Transition Steps (  ) { return m Transition Steps ; }
470,"public com . anychart . standalones . axismarkers .  Line scale Range Mode ( com . anychart . enums .  Scale Range Mode mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . scale Range Mode ( %s )  ; "",  ( mode != null )  ? mode . get Js Base (  )  : null )  )  ;  return this ; }"
471,"public  Storage Task< Result T> add On Paused Listener ( @ Non Null  On Paused Listener<? super  Result T> listener ) {  Preconditions . check Not Null ( listener )  ;  paused Manager . add Listener ( null, null, listener )  ;  return this ; }"
472,"public  Calendar Day get Day From Location ( float x, float y ) { int day Start = m Padding ;  if  ( x < day Start || x > m Width - m Padding )  {     return null ;  } //  Selection is  ( x - start )  /  ( pixels/day )  ==  ( x -s )  * day / pixels int row =  ( int )   ( y - MONTH_HEADER_SIZE )  / m Row Height ;  int column =  ( int )   (  ( x - day Start )  * m Num Days /  ( m Width - day Start - m Padding )  )  ;  int day = column - find Day Offset (  )  + 1 ;  day += row * m Num Days ;  if  ( day < 1 || day > m Num Cells )  {     return null ;  } return new  Calendar Day ( m Year, m Month, day )  ; }"
473,public int get Bottom Margin (  ) { return bottom Margin ; }
474,"public  Optional< Build Target> get Build Target (  String section,  String field,  Target Configuration target Configuration ) { try {      Optional< String> target = get Value ( section, field )  ;      return target . map (  target Name -> get Build Target For Fully Qualified Target ( target Name, target Configuration )  )  ;  } catch  (  Exception e )  {     throw new  Buck Unchecked Execution Exception ( e, "" When trying to parse configuration %s . %s as a build target . "", section, field )  ;  }}"
475,"public void remove Segment ( short start Code, short end Code ) {  Segment s = new  Segment ( start Code, end Code, true )  ;  segments . remove ( s )  ; }"
476,"public void initialize Message Queue Threads (  React Queue Configuration queue Config ) { if  ( m Ui Message Queue Thread != null || m Native Modules Message Queue Thread != null || m JS Message Queue Thread != null )  {     throw new  Illegal State Exception ( "" Message queue threads already initialized"" )  ;  } m Ui Message Queue Thread = queue Config . get UI Queue Thread (  )  ;  m Native Modules Message Queue Thread = queue Config . get Native Modules Queue Thread (  )  ;  m JS Message Queue Thread = queue Config . get JS Queue Thread (  )  ;  /** TODO ( T85807990 ) :  Fail fast if any of the threads is null .  */ if  ( m Ui Message Queue Thread == null )  {     throw new  Illegal State Exception ( ""UI thread is null"" )  ;  } if  ( m Native Modules Message Queue Thread == null )  {     throw new  Illegal State Exception ( "" Native Modules thread is null"" )  ;  } if  ( m JS Message Queue Thread == null )  {     throw new  Illegal State Exception ( "" Java Script thread is null"" )  ;  } m Is Initialized = true ; }"
477,public static  Character Set ECI get Character Set ECI By Value ( int value )  throws  Format Exception{ if  ( value < 0 || value >= 900 )  {     throw  Format Exception . get Format Instance (  )  ;  } return VALUE_TO_ECI . get ( value )  ; }
478,"public com . anychart . charts .  Venn fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
479,public  Bluetooth Class get Bluetooth Class (  ) { return bluetooth Class ; }
480,"public static void verify ( boolean expression,  String error Message Template, char p1, int p2 ) { if  ( !expression )  {     throw new  Verify Exception ( lenient Format ( error Message Template, p1, p2 )  )  ;  }}"
481,"public com . anychart . charts .  Tree Map stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
482,"static void validate Uris (  Immutable List<URI> uris,  Build Target target )  throws  Human Readable Exception{ if  ( uris . is Empty (  )  )  {     throw new  Human Readable Exception ( "" At least one url must be provided for %s"", target . get Unflavored Build Target (  )  . get Fully Qualified Name (  )  )  ;  } for  ( URI uri : uris )  {     if  ( !uri . get Scheme (  )  . equals ( ""http"" )  && !uri . get Scheme (  )  . equals ( ""https"" )  && !uri . get Scheme (  )  . equals ( ""mvn"" )  )  {         throw new  Human Readable Exception ( "" Unsupported protocol '%s' for url %s in %s .   Must be http or https"", uri . get Scheme (  ) , uri . to String (  ) , target . get Unflavored Build Target (  )  . get Fully Qualified Name (  )  )  ;      } }}"
483,"public void set ( float [  ]  vertices ) { jni Set ( addr, vertices, 0, vertices . length )  ; }"
484,"protected void show Wifi Dialog (  ) { if  ( ! Network Utils . is Available ( m Context )  )  {     start Play Logic (  )  ;      return ;  }  Alert Dialog .  Builder builder = new  Alert Dialog .  Builder ( get Activity Context (  )  )  ;  builder . set Message ( get Resources (  )  . get String ( R . string . tips_not_wifi )  )  ;  builder . set Positive Button ( get Resources (  )  . get String ( R . string . tips_not_wifi_confirm ) , new  Dialog Interface .  On Click Listener (  )  {     @ Override     public void on Click (  Dialog Interface dialog, int which )  {         dialog . dismiss (  )  ;          start Play Logic (  )  ;      } } )  ;  builder . set Negative Button ( get Resources (  )  . get String ( R . string . tips_not_wifi_cancel ) , new  Dialog Interface .  On Click Listener (  )  {     @ Override     public void on Click (  Dialog Interface dialog, int which )  {         dialog . dismiss (  )  ;      } } )  ;  builder . create (  )  . show (  )  ; }"
485,public void set Success ( boolean success ) { this . success = success ; }
486,public final  Integer get Target Lightness (  ) { return m Target Lightness ; }
487,public  Data Gate Client read Timeout ( long milliseconds ) { this . read Timeout = milliseconds ;  return this ; }
488,"private static  Result Point [  ]  find Vertices (  Bit Matrix matrix, int start Row, int start Column ) { int height = matrix . get Height (  )  ;  int width = matrix . get Width (  )  ;   Result Point [  ]  result = new  Result Point [ 8 ]  ;  copy To Result ( result, find Rows With Pattern ( matrix, height, width, start Row, start Column, START_PATTERN ) , INDEXES_START_PATTERN )  ;  if  ( result [ 4 ]  != null )  {     start Column =  ( int )  result [ 4 ]  . get X (  )  ;      start Row =  ( int )  result [ 4 ]  . get Y (  )  ;  } copy To Result ( result, find Rows With Pattern ( matrix, height, width, start Row, start Column, STOP_PATTERN ) , INDEXES_STOP_PATTERN )  ;  return result ; }"
489,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_TITLE_REFINEMENT ; }
490,public  Garbage Collect Command set Expire (  Date expire ) { this . expire = expire ;  return this ; }
491,"public char [  ]  to Char Array (  ) { if  ( this . writer != null )  {     throw new  Unsupported Operation Exception ( ""writer not null"" )  ;  } char [  ]  new Value = new char [ count ]  ;   System . arraycopy ( buf, 0, new Value, 0, count )  ;  return new Value ; }"
492,"public static  Completable update User Async (  String name,  String avatar URL ) {  User current User =  Chat SDK . core (  )  . current User (  )  ;  current User . set Name ( name )  ;  current User . set Avatar URL ( avatar URL )  ;  return  Chat SDK . core (  )  . push User (  )  ; }"
493,public static P Stream Provider as Updates ( int sensor Delay ) { return new  Acceleration Updates Provider ( sensor Delay )  ; }
494,"public com . anychart . core . stock .  Grouping scroller Grouping (  ) { return new com . anychart . core . stock .  Grouping ( js Base + "" . scroller Grouping (  ) "" )  ; }"
495,"public final  Fluent Future<V> with Timeout (  Duration timeout,  Scheduled Executor Service scheduled Executor ) { return with Timeout ( to Nanos Saturated ( timeout ) ,  Time Unit . NANOSECONDS, scheduled Executor )  ; }"
496,"protected  Comparator< Dfs Reftable> reftable Comparator (  ) { return  Comparator . comparing (  Dfs Reftable::get Pack Description,  Dfs Pack Description . reftable Comparator (  )  )  ; }"
497,"public  Mongo Collection< Document T> with Codec Registry ( final  Codec Registry codec Registry ) { return new  Mongo Collection<> ( name Space, os Mongo Collection . with Codec Registry ( codec Registry )  )  ; }"
498,"public void test Branch Reflog (  )  throws  Exception{  Collection< Reflog Entry> reflog = git . reflog (  )  . set Ref (  Constants . R_HEADS + ""b1"" )  . call (  )  ;  assert Not Null ( reflog )  ;  assert Equals ( 2, reflog . size (  )  )  ;   Reflog Entry [  ]  reflogs = reflog . to Array ( new  Reflog Entry [ 0 ]  )  ;  assert Equals ( reflogs [ 0 ]  . get Comment (  ) , ""commit:  Removed file"" )  ;  assert Equals ( reflogs [ 0 ]  . get New Id (  ) , commit2 . get Id (  )  )  ;  assert Equals ( reflogs [ 0 ]  . get Old Id (  ) , commit1 . get Id (  )  )  ;  assert Equals ( reflogs [ 1 ]  . get Comment (  ) , ""branch:  Created from commit  Initial commit"" )  ;  assert Equals ( reflogs [ 1 ]  . get New Id (  ) , commit1 . get Id (  )  )  ;  assert Equals ( reflogs [ 1 ]  . get Old Id (  ) ,  Object Id . zero Id (  )  )  ; }"
499,"public com . anychart . scales .  Base y Scale (  ) { return new com . anychart . scales .  Base ( js Base + "" . y Scale (  ) "" )  ; }"
500,public void set Name (  String newname ) { declaring Class . check Modify (  )  ;  method Info . set Name ( newname )  ; }
501,"public com . anychart . charts .  Circular Gauge enclose With Straight Line (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enclose With Straight Line ( %s )  ; "", enabled )  )  ;  return this ; }"
502,public  Object next (  ) { if  ( has Next (  )  )  {     this . seen = true ;      return this . object ;  } throw new  No Such Element Exception (  )  ; }
503,"public  Paginate build (  ) { if  ( loading Item == null )  {     loading Item =  Loading Item . DEFAULT ;  } if  ( error Item == null )  {     error Item =  Error Item . DEFAULT ;  } return new  Paginate ( recycler View, paginate Callback, load More Listener, loading Trigger Threshold, loading Item, error Item )  ; }"
504,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
505,public  Container<T> fill (  ) { fill X = 1f ;  fill Y = 1f ;  return this ; }
506,"public void slow Period (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . slow Period (  )  ; "" )  ; }"
507,boolean move To First (  ) { return move To Position ( 0 )  ; }
508,"public void initialize From Intent (  Intent intent ) { //  Scan the formats the intent requested, and return the result to the calling activity .   Set< Barcode Format> decode Formats =  Decode Format Manager . parse Decode Formats ( intent )  ;   Map< Decode Hint Type,  Object> decode Hints =  Decode Hint Manager . parse Decode Hints ( intent )  ;   Camera Settings settings = new  Camera Settings (  )  ;  if  ( intent . has Extra (  Intents .  Scan . CAMERA_ID )  )  {     int camera Id = intent . get Int Extra (  Intents .  Scan . CAMERA_ID, -1 )  ;      if  ( camera Id >= 0 )  {         settings . set Requested Camera Id ( camera Id )  ;      } } if  ( intent . has Extra (  Intents .  Scan . TORCH_ENABLED )  )  {     if  ( intent . get Boolean Extra (  Intents .  Scan . TORCH_ENABLED, false )  )  {         this . set Torch On (  )  ;      } }  String custom Prompt Message = intent . get String Extra (  Intents .  Scan . PROMPT_MESSAGE )  ;  if  ( custom Prompt Message != null )  {     set Status Text ( custom Prompt Message )  ;  } //  Check what type of scan .   Default: normal scan int scan Type = intent . get Int Extra (  Intents .  Scan . SCAN_TYPE, 0 )  ;   String character Set = intent . get String Extra (  Intents .  Scan . CHARACTER_SET )  ;   Multi Format Reader reader = new  Multi Format Reader (  )  ;  reader . set Hints ( decode Hints )  ;  barcode View . set Camera Settings ( settings )  ;  barcode View . set Decoder Factory ( new  Default Decoder Factory ( decode Formats, decode Hints, character Set, scan Type )  )  ; }"
509,"public com . anychart . core . stock . scrollerseries .  Candlestick bounds (  Number x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, height )  )  ;  return this ; }"
510,"public void write Contents To Path (  String contents,  Path path,  Open Option .  .  .  options )  throws IO Exception{  Files . write ( path, contents . get Bytes ( UTF_8 ) , options )  ; }"
511,"public static boolean supports Format (  String mime Type, @C .  Pcm Encoding int encoding ) { if  ( !is Available (  )  )  {     return false ;  }  String codec Name = get Codec Name ( mime Type, encoding )  ;  if  ( codec Name == null )  {     return false ;  } if  ( !ffmpeg Has Decoder ( codec Name )  )  {      Log . w ( TAG, "" No "" + codec Name + "" decoder available .   Check the F Fmpeg build configuration . "" )  ;      return false ;  } return true ; }"
512,"public void check Tree ( byte [  ]  raw )  throws  Corrupt Object Exception{ check Tree ( id For ( OBJ_TREE, raw ) , raw )  ; }"
513,public  String get Url Prefix (  ) { return sync Url Prefix ; }
514,"private static  Path append Extension If Needed (  Path path ) { if  (  Platform . detect (  )  . get Type (  )  ==  Platform Type . WINDOWS )  {     return path . resolve Sibling ( path . get File Name (  )  + "" . exe"" )  ;  } return path ; }"
515,"public void orientation (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . orientation (  )  ; "" )  ; }"
516,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
517,private void update Seek Bars For Spring Config (  Spring Config spring Config ) { float tension =  ( float )   Origami Value Converter . origami Value From Tension ( spring Config . tension )  ;  float tension Range = MAX_TENSION - MIN_TENSION ;  int scaled Tension =  Math . round (  (  ( tension - MIN_TENSION )  * MAX_SEEKBAR_VAL )  / tension Range )  ;  float friction =  ( float )   Origami Value Converter . origami Value From Friction ( spring Config . friction )  ;  float friction Range = MAX_FRICTION - MIN_FRICTION ;  int scaled Friction =  Math . round (  (  ( friction - MIN_FRICTION )  * MAX_SEEKBAR_VAL )  / friction Range )  ;  m Tension Seek Bar . set Progress ( scaled Tension )  ;  m Friction Seek Bar . set Progress ( scaled Friction )  ; }
518,"public void add Rule (  Element Selector element Selector,  Action action ) { action . set Context ( context )  ;   List< Action> a4p = rules . get ( element Selector )  ;  if  ( a4p == null )  {     a4p = new  Array List< Action> (  )  ;      rules . put ( element Selector, a4p )  ;  } a4p . add ( action )  ; }"
519,"void test Write (  )  throws  Exception{ var execute Service =  Executors . new Fixed Thread Pool ( 2 )  ;  var lock = new  Reader Writer Lock (  )  ;  var writer1 = spy ( new  Writer ( "" Writer 1"", lock . write Lock (  )  )  )  ;  var writer2 = spy ( new  Writer ( "" Writer 2"", lock . write Lock (  )  )  )  ;  execute Service . submit ( writer1 )  ;  //  Let write1 execute first  Thread . sleep ( 150 )  ;  execute Service . submit ( writer2 )  ;  execute Service . shutdown (  )  ;  try {     execute Service . await Termination ( 10,  Time Unit . SECONDS )  ;  } catch  (  Interrupted Exception e )  {     LOGGER . error ( "" Error waiting for  Executor Service shutdown"", e )  ;  } //  Write operation will hold the write lock 250 milliseconds, so here we verify that when two // writer execute concurrently, the second writer can only writes only when the first one is // finished .  assert True ( appender . log Contains ( "" Writer 1 begin"" )  )  ;  assert True ( appender . log Contains ( "" Writer 1 finish"" )  )  ;  assert True ( appender . log Contains ( "" Writer 2 begin"" )  )  ;  assert True ( appender . log Contains ( "" Writer 2 finish"" )  )  ; }"
520,"protected item Grid Cell Binder new View Holder (  View view ) { return new item Grid Cell Binder ( view, true )  ; }"
521,public void use Program (  ) { if  ( m Is Dirty )  {     create Shaders (  )  ;  } GLES20 . gl Use Program ( m Program Handle )  ; }
522,public  String get Decl Class Name (  ) { return m Decl Class ; }
523,"public  Constraint Value get Constraint Value (  Build Target build Target,  Dependency Stack dependency Stack ) { throw new  Unsupported Operation Exception (  )  ; }"
524,"String read String (  )  throws IO Exception{ int utf16len = read Unsigned Leb128 (  )  ;  // worst case byte [  ]  in Buf = new byte [ utf16len * 3 ]  ;  int idx ;  for  ( idx = 0 ;  idx < in Buf . length ;  idx++ )  {     byte val = read Byte (  )  ;      if  ( val == 0 )  {         break ;      }     in Buf [ idx ]  = val ;  } return new  String ( in Buf, 0, idx, ""UTF-8"" )  ; }"
525,public static byte [  ]  extract Readable Bytes (  Byte Buf content ) { byte [  ]  binary Content = new byte [ content . readable Bytes (  )  ]  ;  content . mark Reader Index (  )  ;  content . read Bytes ( binary Content )  ;  content . reset Reader Index (  )  ;  return binary Content ; }
526,"private static void save Session Data ( SQ Lite Database db,  String session Id,  Session Data session Data ) { session Data . session Id = session Id ;   Session Data stored Session Data = get Session Data ( db, session Id )  ;  if  ( stored Session Data != null )  {     session Data . cache Hit Count = stored Session Data . cache Hit Count ;      update Session Data ( db, session Id, session Data )  ;  } else {     insert Session Data ( db, session Id, session Data )  ;  }}"
527,public  Find Options projection ( @ Nullable final  Bson projection ) { this . projection = projection ;  return this ; }
528,"private static  String get Device Serial Number (  ) { // since API  Level 9  (  Gingerbread,  Android 2 . 3 )  .  try {     return  (  String )   Build . class . get Field ( ""SERIAL"" )  . get ( null )  ;  } catch  (  Exception ignored )  {     return null ;  }}"
529,"public com . anychart . core . stock . scrollerseries .  Step Area min Point Length (  String length ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Point Length ( %s )  ; "", wrap Quotes ( length )  )  )  ;  return this ; }"
530,"public com . anychart . charts .  Pareto y Minor Grid (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Minor Grid ( %s )  ; "", settings )  )  ;  return this ; }"
531,protected boolean is View Expandable On Click (  ) { return true ; }
532,public  Proto Fluent Assertion comparing Expected Fields Only (  ) { return using Config ( config . comparing Expected Fields Only (  )  )  ; }
533,public  Builder item View Will Be Provided (  ) { item View Will Be Provided = true ;  return this ; }
534,public static  Producer<T> immediate Failed Producer (  Throwable throwable ) { return dagger . producers .  Producers . immediate Failed Producer ( throwable )  ; }
535,"public void set Brand (  String brand ) { content . put ( FIELD_BRAND, brand )  ; }"
536,"public void update Remote User (  User Account user Account ) {  String url = data Gate Client . get Server Base Url (  )  + user Url + ""/update"" ;   Ok Http Client http Client = data Gate Client . get Http Client (  )  ;   Response response = null ;  try {      String json User = object Mapper . write Value As String ( user Account )  ;       Request request = new  Request .  Builder (  )  . url ( url )  . put (  Request Body . create ( JSON, json User )  )  . build (  )  ;      response = http Client . new Call ( request )  . execute (  )  ;      if  ( !response . is Successful (  )  )  {         throw new  Sync Exception ( error Message ( error Response ( response ) , SYE_UPDATE_ACCOUNT_FAILED )  )  ;      } } catch  (  Sync Exception se )  {     throw se ;  } catch  (  Exception e )  {     log . error ( "" Remote error while updating user"", e )  ;      throw new  Sync Exception ( SYNC_ACCOUNT_UPDATE_REMOTE_ERROR, e )  ;  } finally {     if  ( response != null )  {         response . close (  )  ;      } }}"
537,public  Recent Repositories add ( final  Repository repo ) { return repo != null ? add ( repo . id (  )  )  : this ; }
538,"public void skip Holidays (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . skip Holidays (  )  ; "" )  ; }"
539,"public  Builder encryption Key ( byte [  ]  key ) { //noinspection  Constant Conditions if  ( key == null )  {     throw new  Illegal Argument Exception ( ""A non-null key must be provided"" )  ;  } if  ( key . length !=  Realm . ENCRYPTION_KEY_LENGTH )  {     throw new  Illegal Argument Exception (  String . format (  Locale . US, "" The provided key must be %s bytes .   Yours was: %s"",  Realm . ENCRYPTION_KEY_LENGTH, key . length )  )  ;  } this . key =  Arrays . copy Of ( key, key . length )  ;  return this ; }"
540,public boolean starts With (  Abbreviated Object Id abbr ) { return abbr . prefix Compare ( this )  == 0 ; }
541,"public final  Vec2 solve ( final  Vec2 b ) { final float a11 = ex . x, a12 = ey . x, a21 = ex . y, a22 = ey . y ;  float det = a11 * a22 - a12 * a21 ;  if  ( det != 0 . 0f )  {     det = 1 . 0f / det ;  } final  Vec2 x = new  Vec2 ( det *  ( a22 * b . x - a12 * b . y ) , det *  ( a11 * b . y - a21 * b . x )  )  ;  return x ; }"
542,"public  Object eval ( BSH Type type Node,  Call Stack callstack,  Interpreter interpreter )  throws  Eval Error{ // null value means no value  Object value = null ;  if  ( jjt Get Num Children (  )  > 0 )  {      Simple Node initializer =  (  Simple Node )  jjt Get Child ( 0 )  ;      /*				 If we have type info and the child is an array initializer				pass it along .  .  .    Else use the default eval style . 				 (  This allows array initializer to handle the problem .  .  .  				allowing for future enhancements in loosening types there )  . 				*/     if  (  ( type Node != null )  && initializer instanceof BSH Array Initializer )          value =  (  ( BSH Array Initializer )  initializer )  . eval ( type Node . get Base Type (  ) , type Node . get Array Dims (  ) , callstack, interpreter )  ;      else         value = initializer . eval ( callstack, interpreter )  ;  } if  ( value ==  Primitive . VOID )      throw new  Eval Error ( "" Void initializer . "", this, callstack )  ;  return value ; }"
543,"public com . anychart . standalones .  Resource Timeline baseline Bar Anchor (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . baseline Bar Anchor ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
544,"void smooth Scroll To ( int x, int y, int velocity ) { if  ( get Child Count (  )  == 0 )  {     //  Nothing to do .      set Scrolling Cache Enabled ( false )  ;      return ;  } int sx = get Scroll X (  )  ;  int sy = get Scroll Y (  )  ;  int dx = x - sx ;  int dy = y - sy ;  if  ( dx == 0 && dy == 0 )  {     complete Scroll (  )  ;      set Scroll State ( SCROLL_STATE_IDLE )  ;      return ;  } set Scrolling Cache Enabled ( true )  ;  m Scrolling = true ;  set Scroll State ( SCROLL_STATE_SETTLING )  ;  final float page Delta =  ( float )   Math . abs ( dx )  /  ( get Width (  )  + m Page Margin )  ;  int duration =  ( int )   ( page Delta * 100 )  ;  velocity =  Math . abs ( velocity )  ;  if  ( velocity > 0 )  {     duration +=  ( duration /  ( velocity / m Base Line Fling Velocity )  )  * m Fling Velocity Influence ;  } else {     duration += 100 ;  } duration =  Math . min ( duration, MAX_SETTLE_DURATION )  ;  m Scroller . start Scroll ( sx, sy, dx, dy, duration )  ;  invalidate (  )  ; }"
545,"public com . anychart . core . ui .  Chart Scroller orientation ( com . anychart . enums .  Orientation orientation ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . orientation ( %s )  ; "",  ( orientation != null )  ? orientation . get Js Base (  )  : null )  )  ;  return this ; }"
546,"public void test Message Id Server (  ) {  Bundle bundle = new  Bundle (  )  ;  bundle . put String ( ""message_id"", ""abc123"" )  ;   Remote Message message = new  Remote Message ( bundle )  ;  assert Equals ( ""abc123"", message . get Message Id (  )  )  ; }"
547,"public void min Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Height (  )  ; "" )  ; }"
548,"private byte [  ]  get Advertised Hash ( final byte [  ]  service Data ) { if  ( service Data == null )      return null ;  final  Byte Buffer expected Buffer Hash =  Byte Buffer . allocate ( ADVERTISED_HASH_LENGTH )  . order (  Byte Order . BIG_ENDIAN )  ;  expected Buffer Hash . put ( service Data, ADVERTISED_HASH_OFFSET, ADVERTISED_HASH_LENGTH )  ;  return expected Buffer Hash . array (  )  ; }"
549,public static  Request Manager with ( @ Non Null android . app .  Fragment fragment ) { return get Retriever ( fragment . get Activity (  )  )  . get ( fragment )  ; }
550,"protected  Properties get Config Properties (  String package Name ) {  List< String> package Parts = new  Array List<> (  Arrays . as List ( package Name . split ( ""\\ . "" )  )  )  ;  package Parts . add (  Robolectric Test Runner . CONFIG_PROPERTIES )  ;  final  String resource Name =  Join . join ( ""/"", package Parts )  ;  try  (  Input Stream resource As Stream = get Resource As Stream ( resource Name )  )  {     if  ( resource As Stream == null )          return null ;       Properties properties = new  Properties (  )  ;      properties . load ( resource As Stream )  ;      return properties ;  } catch  ( IO Exception e )  {     throw new  Runtime Exception ( e )  ;  }}"
551,"protected  Resolve Info resolve Activity As User (  Intent intent, int flags, int user Id ) { return resolve Activity ( intent, flags )  ; }"
552,"public void set Data ( T data1, U data2 ) { this . data1 = data1 ;  this . data2 = data2 ;  allow Model Build Requests = true ;  request Model Build (  )  ;  allow Model Build Requests = false ; }"
553,public boolean get Follow Redirects (  ) { return follow Redirects ; }
554,"public com . anychart . core . polar . series .  Range Column fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
555,"public  Uri load Plugin Provider (  String plugin,  String target, int process ) {  Plugin Binder Info info = new  Plugin Binder Info (  Plugin Binder Info . PROVIDER_REQUEST )  ;  try {     // 容器选择     I Plugin Client client = MP . start Plugin Process ( plugin, process, info )  ;      if  ( client == null )  {         return null ;      }      String auth = IPC . get Package Name (  )  + CONTAINER_PROVIDER_AUTHORITY_PART + info . index ;      // 直接分配     return new  Uri .  Builder (  )  . scheme ( ""content"" )  . encoded Authority ( auth )  . encoded Path ( ""main"" )  . build (  )  ;  } catch  (  Throwable e )  {     if  ( LOGR )  {          Log Release . e ( PLUGIN_TAG, ""l . p . p spp: "" + e . get Message (  ) , e )  ;      } } return null ; }"
556,"public com . anychart . core . gauge .  Cap parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
557,"public void close Drawer (  View drawer View ) { if  ( !is Drawer View ( drawer View )  )  {     throw new  Illegal Argument Exception ( "" View "" + drawer View + "" is not a sliding drawer"" )  ;  } if  ( m First Layout )  {     final  Layout Params lp =  (  Layout Params )  drawer View . get Layout Params (  )  ;      lp . on Screen = 0 . f ;      lp . known Open = false ;  } else {     if  ( check Drawer View Absolute Gravity ( drawer View,  Gravity . LEFT )  )  {         m Left Dragger . smooth Slide View To ( drawer View, -drawer View . get Width (  ) , drawer View . get Top (  )  )  ;      } else {         m Right Dragger . smooth Slide View To ( drawer View, get Width (  ) , drawer View . get Top (  )  )  ;      } } invalidate (  )  ; }"
558,"public com . anychart . core . map . series .  Choropleth hatch Fill ( com . anychart . graphics . vector .  Pattern Fill pattern Fill ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "",  ( pattern Fill != null )  ? pattern Fill . get Js Base (  )  : null )  )  ;  return this ; }"
559,protected final void set Extended Flag ( int flag ) { flags |=  ( flag & EXT_MASK )  << EXT_SHIFT ; }
560,public  Float Buffer put (  Float Buffer src ) { if  ( src == this )  {     throw new  Illegal Argument Exception (  )  ;  } if  ( src . remaining (  )  > remaining (  )  )  {     throw new  Buffer Overflow Exception (  )  ;  } float [  ]  contents = new float [ src . remaining (  )  ]  ;  src . get ( contents )  ;  put ( contents )  ;  return this ; }
561,"public void shapes (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . shapes (  )  ; "" )  ; }"
562,"public com . anychart . core . gauge . pointers .  Knob id (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . id (  )  ; "" )  ;  return this ; }"
563,"public void transform UV ( final  Matrix3 matrix ) { transform UV ( matrix, 0, get Num Vertices (  )  )  ; }"
564,public  Crop Image View .  Crop Shape get Crop Shape (  ) { return m Crop Shape ; }
565,public void set Mesh Uuid ( final  String mesh Uuid ) { this . mesh Uuid = mesh Uuid ; }
566,"public com . anychart . charts .  Cartesian max Bubble Size (  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Bubble Size ( %s )  ; "", size )  )  ;  return this ; }"
567,"public com . anychart . charts .  Scatter bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
568,"public void set ( int index, long n ) { if  ( count < index )      throw new  Array Index Out Of Bounds Exception ( index )  ;  else if  ( count == index )      add ( n )  ;  else     entries [ index ]  = n ; }"
569,public  Radial Time Picker Dialog Fragment set Theme Custom ( int style Res Id ) { m Style Res Id = style Res Id ;  return this ; }
570,"public static boolean is Section Index Valid (  Section Context c,  String key String, int index ) { final  Section scoped Section = c . get Section Scope (  )  ;  final  Section Tree section Tree = c . get Section Tree (  )  ;  if  ( scoped Section == null || section Tree == null )  {     return false ;  } final  String global Key = scoped Section . get Global Key (  )  + key String ;  return section Tree . is Section Index Valid ( global Key, index )  ; }"
571,"protected  Http Context create Http Context (  Http Method http Method, URI uri ) { return null ; }"
572,public  User find User By User Name (  String user Name ) { if  ( !user Name2 User . contains Key ( user Name )  )  {     return null ;  } return user Name2 User . get ( user Name )  ; }
573,"public void min Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Height (  )  ; "" )  ; }"
574,"public com . anychart . core . utils .  Quarter left Stroke (  String value,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( value ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
575,"public static byte [  ]  to JSON Bytes With Fast Json Config (  Charset charset,  Object object,  Serialize Config config,  Serialize Filter [  ]  filters,  String date Format, int default Features,  Serializer Feature .  .  .  features ) {  Serialize Writer out = new  Serialize Writer ( null, default Features, features )  ;  try {     JSON Serializer serializer = new JSON Serializer ( out, config )  ;      if  ( date Format != null && date Format . length (  )  != 0 )  {         serializer . set Fast Json Config Date Format Pattern ( date Format )  ;          serializer . config (  Serializer Feature .  Write Date Use Date Format, true )  ;      }     if  ( filters != null )  {         for  (  Serialize Filter filter : filters )  {             serializer . add Filter ( filter )  ;          }     }     serializer . write ( object )  ;      return out . to Bytes ( charset )  ;  } finally {     out . close (  )  ;  }}"
576,public  Parameters Builder set Allow Audio Mixed Mime Type Adaptiveness ( boolean allow Audio Mixed Mime Type Adaptiveness ) { this . allow Audio Mixed Mime Type Adaptiveness = allow Audio Mixed Mime Type Adaptiveness ;  return this ; }
577,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
578,"public static  Immutable Sorted Multiset<E> of ( E e1, E e2, E e3, E e4, E e5 ) { return copy Of (  Ordering . natural (  ) ,  Arrays . as List ( e1, e2, e3, e4, e5 )  )  ; }"
579,"public  Stopwatch start (  ) { check State ( !is Running, "" This stopwatch is already running . "" )  ;  is Running = true ;  start Tick = ticker . read (  )  ;  return this ; }"
580,"public boolean process (  Set<? extends  Type Element> annotations,  Round Environment round Env ) { if  (  Collection Utils . is Not Empty ( annotations )  )  {      Set<? extends  Element> route Elements = round Env . get Elements Annotated With (  Route . class )  ;      try {         logger . info ( "">>>  Found routes, start .  .  .  <<<"" )  ;          this . parse Routes ( route Elements )  ;      } catch  (  Exception e )  {         logger . error ( e )  ;      }     return true ;  } return false ; }"
581,"public com . anychart . core .  State Settings normal (  ) { return new com . anychart . core .  State Settings ( js Base + "" . normal (  ) "" )  ; }"
582,"public void reset ( int menu, int avail Width ) { m Menu = menu ;  if  ( m Menu == -1 )  {     return ;  } m Action Show Always Items = new  Array List<> (  )  ;  m Action Items = new  Array List<> (  )  ;  m Menu Items = new  Array List<> (  )  ;  m Menu Builder = new  Menu Builder ( get Context (  )  )  ;  m Menu Popup Helper = new  Menu Popup Helper ( get Context (  ) , m Menu Builder, this )  ;  //clean view and re-inflate remove All Views (  )  ;  get Menu Inflater (  )  . inflate ( m Menu, m Menu Builder )  ;  m Menu Items = m Menu Builder . get Action Items (  )  ;  m Menu Items . add All ( m Menu Builder . get Non Action Items (  )  )  ;   Collections . sort ( m Menu Items, new  Comparator< Menu Item Impl> (  )  {     @ Override     public int compare (  Menu Item Impl lhs,  Menu Item Impl rhs )  {         return  (  (  Integer )  lhs . get Order (  )  )  . compare To ( rhs . get Order (  )  )  ;      } } )  ;   List< Menu Item Impl> local Action Items = filter ( m Menu Items, new  Menu Item Impl Predicate (  )  {     @ Override     public boolean apply (  Menu Item Impl menu Item )  {         return menu Item . get Icon (  )  != null &&  ( menu Item . requires Action Button (  )  || menu Item . requests Action Button (  )  )  ;      } } )  ;  int avail Item Room = avail Width /  ( int )  ACTION_DIMENSION_PX ;  //determine if to show overflow menu boolean add Overflow At The End = false ;  if  (  (  ( local Action Items . size (  )  < m Menu Items . size (  )  )  || avail Item Room < local Action Items . size (  )  )  )  {     add Overflow At The End = true ;      avail Item Room-- ;  }  Array List< Integer> action Items Ids = new  Array List<> (  )  ;  if  ( avail Item Room > 0 )  {     for  ( int i = 0 ;  i < local Action Items . size (  )  ;  i++ )  {         final  Menu Item Impl menu Item = local Action Items . get ( i )  ;          if  ( menu Item . get Icon (  )  != null )  {              Image View action = create Action View (  )  ;              action . set Content Description ( menu Item . get Title (  )  )  ;              action . set Image Drawable ( menu Item . get Icon (  )  )  ;               Util . set Icon Color ( action, m Action Icon Color )  ;              add View ( action )  ;              m Action Items . add ( menu Item )  ;              action Items Ids . add ( menu Item . get Item Id (  )  )  ;              action . set On Click Listener ( new  On Click Listener (  )  {                 @ Override                 public void on Click (  View v )  {                     if  ( m Menu Callback != null )  {                         m Menu Callback . on Menu Item Selected ( m Menu Builder, menu Item )  ;                      }                 }             } )  ;              avail Item Room-- ;              if  ( avail Item Room == 0 )  {                 break ;              }         }     } } m Has Overflow = add Overflow At The End ;  if  ( add Overflow At The End )  {      Image View overflow Action = get Overflow Action View (  )  ;      overflow Action . set Image Resource ( R . drawable . ic_more_vert_black_24dp )  ;       Util . set Icon Color ( overflow Action, m Overflow Icon Color )  ;      add View ( overflow Action )  ;      overflow Action . set On Click Listener ( new  On Click Listener (  )  {         @ Override         public void on Click (  View v )  {             m Menu Popup Helper . show (  )  ;          }     } )  ;      m Menu Builder . set Callback ( m Menu Callback )  ;  } //remove all menu items that will be shown as icons  ( the action items )  from the overflow menu for  ( int id : action Items Ids )  {     m Menu Builder . remove Item ( id )  ;  } action Items Ids = null ;  if  ( m On Visible Width Changed Listener != null )  {     m Visible Width =  (  ( int )  ACTION_DIMENSION_PX * get Child Count (  )  )  -  ( m Has Overflow ?  Util . dp To Px ( 8 )  : 0 )  ;      m On Visible Width Changed Listener . on Items Menu Visible Width Changed ( m Visible Width )  ;  }}"
583,private void execute Asynchronously (  Runnable runnable ) { this . thread Executor . execute ( runnable )  ; }
584,public  String get Url Link At Index ( int index ) {  Text Encoded String Size Terminated text =  (  Text Encoded String Size Terminated )  get Object (  Data Types . OBJ_URLLINK )  ;  return text . get Value At Index ( index )  ; }
585,"public com . anychart . core . stock .  Plot x Grid (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Grid ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
586,public boolean is Playing (  ) { return  Assertions . check Not Null ( audio Track )  . get Play State (  )  == PLAYSTATE_PLAYING ; }
587,"public static void install View Model Binding ( final  Scope scope, final  Fragment fragment, final  Class<T> view Model Class, final  Factory factory ) { scope . install Modules ( new  Module (  )  {     {         bind ( view Model Class )  . to Provider Instance ( new  View Model Provider<> ( scope, fragment, factory, view Model Class )  )  ;      } } )  ; }"
588,"public void added (  Parsed Rule Key File file,  Value value )  throws  Max Differences Exception{ validate And Update State (  )  ;  print Add ( file, value )  ; }"
589,"public void socket Exception While Writing Headers (  )  throws  Exception{ // SYN_STREAM .  peer . accept Frame (  )  ;  peer . play (  )  ;   String long String = repeat ( 'a',  Http2 . INITIAL_MAX_FRAME_SIZE + 1 )  ;   Socket socket = peer . open Socket (  )  ;   Http2 Connection connection = new  Http2 Connection .  Builder ( true,  Task Runner . INSTANCE )  . socket ( socket )  . push Observer ( IGNORE )  . build (  )  ;  connection . start ( /* send Connection Preface = */ false )  ;  socket . shutdown Output (  )  ;  try {     connection . new Stream ( header Entries ( ""a"", long String ) , false )  ;      fail (  )  ;  } catch  ( IO Exception expected )  { } try {     connection . new Stream ( header Entries ( ""b"", long String ) , false )  ;      fail (  )  ;  } catch  ( IO Exception expected )  { }}"
590,"public com . anychart . core . venn .  Intersections stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
591,"private  Map< String,  Object> parse Map ( JSON Object obj )  throws JSON Exception{  Map< String,  Object> values = new  Hash Map<> (  )  ;   Iterator< String> keys = obj . keys (  )  ;  while  ( keys . has Next (  )  )  {      String key = keys . next (  )  ;      values . put ( key, parse Object ( obj . get ( key )  )  )  ;  } return values ; }"
592,"public com . anychart . charts .  Circular Gauge select Marquee Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
593,"public com . anychart . core . gantt . elements .  Baselines Element stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
594,"public com . anychart . charts .  Heat Map margin (  String value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
595,public float get Bar Margin (  ) { return m Bar Margin ; }
596,"public com . anychart . ui .  Context Menu context Menu (  ) { return new com . anychart . ui .  Context Menu ( js Base + "" . context Menu (  ) "" )  ; }"
597,"public void force Hover Labels (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . force Hover Labels (  )  ; "" )  ; }"
598,public void set Guidelines (  Crop Image View .  Guidelines guidelines ) { if  ( m Guidelines != guidelines )  {     m Guidelines = guidelines ;      if  ( initialized Crop Window )  {         invalidate (  )  ;      } }}
599,"public com . anychart . core . lineargauge . pointers .  Led stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
600,"static  Immutable List Multimap<K, V> from Map Entries (  Collection<? extends  Map .  Entry<? extends K, ? extends  Collection<? extends V>>> map Entries, @ Nullable  Comparator<? super V> value Comparator ) { if  ( map Entries . is Empty (  )  )  {     return of (  )  ;  }  Immutable Map .  Builder<K,  Immutable List<V>> builder = new  Immutable Map .  Builder<> ( map Entries . size (  )  )  ;  int size = 0 ;  for  (  Entry<? extends K, ? extends  Collection<? extends V>> entry : map Entries )  {     K key = entry . get Key (  )  ;       Collection<? extends V> values = entry . get Value (  )  ;       Immutable List<V> list =  ( value Comparator == null )  ?  Immutable List . copy Of ( values )  :  Immutable List . sorted Copy Of ( value Comparator, values )  ;      if  ( !list . is Empty (  )  )  {         builder . put ( key, list )  ;          size += list . size (  )  ;      } } return new  Immutable List Multimap<> ( builder . build (  ) , size )  ; }"
601,"public static synchronized void log (  String text ) { if  (  Ed Xp Config Global . get Config (  )  . is No Module Log Enabled (  )  )  {     return ;  }  Log . i ( TAG, text )  ; }"
602,public void set Last Measured Width ( float last Measured Width ) { m Last Measured Width = last Measured Width ; }
603,"public  Value parse Query Value (  Object input, boolean allow Arrays ) {  Parse Accumulator accumulator = new  Parse Accumulator ( allow Arrays ?  User Data .  Source .  Array Argument :  User Data .  Source .  Argument )  ;  @ Nullable  Value parsed = convert And Parse Field Data ( input, accumulator . root Context (  )  )  ;  hard Assert ( parsed != null, "" Parsed data should not be null . "" )  ;  hard Assert ( accumulator . get Field Transforms (  )  . is Empty (  ) , "" Field transforms should have been disallowed . "" )  ;  return parsed ; }"
604,"public com . anychart . standalones .  Resource List top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
605,public  File Snapshot get Commit Snapshot (  ) { return commit Snapshot ; }
606,"public boolean is Same Node (  Node other ) { boolean a = this . is Equal Node ( other )  ;  // a bit flaky  ( should really be  // this . get Parent Node (  )  . is Equal ( other . get Parent Node (  )  )  // but we want this to compile in  Java 1 . 4 without problems //  Note that this will mess up code coverage since you can't cover both // branches in the same VM boolean b ;   Node this Parent = this . get Parent Node (  )  ;   Node that Parent = other . get Parent Node (  )  ;  try {      Class clazz =  Node . class ;       Class [  ]  args = { clazz } ;       Method is Equal = clazz . get Method ( ""is Equal"", args )  ;       Object [  ]  args2 = new  Object [ 1 ]  ;      args2 [ 0 ]  = that Parent ;       Boolean result =  (  Boolean )  is Equal . invoke ( this Parent, args2 )  ;      b = result . boolean Value (  )  ;  } catch  (  No Such Method Exception ex )  {     b = this Parent . equals ( that Parent )  ;  } catch  (  Invocation Target Exception ex )  {     b = this Parent . equals ( that Parent )  ;  } catch  (  Illegal Access Exception ex )  {     b = this Parent . equals ( that Parent )  ;  } return a && b ; }"
607,public static int pixels To Dp ( float pixels ) { return  ( int )   ( pixels /  Resources . get System (  )  . get Display Metrics (  )  . density )  ; }
608,"public com . anychart . charts .  Polar right (  Number right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", right )  )  ;  return this ; }"
609,public int get Methodref Name And Type ( int index ) {  Memberref Info minfo =  (  Memberref Info )  get Item ( index )  ;  return minfo . name And Type Index ; }
610,public  List< Address Array> get Addresses (  ) { return addresses ; }
611,public  Subunits get Support Subunits (  ) { return m Support Subunits ; }
612,public int get Publication Steps (  ) { return publication Steps ; }
613,protected void on Create (  ) {}
614,"private void log Error For Inconsistent Size (  Component Context c ) { final  String Builder message = new  String Builder (  )  ;  message . append ( "" Inconsistent size between m Placeholders ( "" )  . append ( m Placeholders . size (  )  )  . append ( "" )  and m Next Data ( "" )  . append ( m Next Data . size (  )  )  . append ( "" )  ;  "" )  ;  message . append ( ""m Operations:  [ "" )  ;  for  ( int i = 0, size = m Operations . size (  )  ;  i < size ;  i++ )  {     final  Operation operation = m Operations . get ( i )  ;      message . append ( "" [ type="" )  . append ( operation . get Type (  )  )  . append ( "", index="" )  . append ( operation . get Index (  )  )  . append ( "", to Index="" )  . append ( operation . get To Index (  )  )  ;      if  ( operation . m Component Containers != null )  {         message . append ( "", count="" )  . append ( operation . m Component Containers . size (  )  )  ;      }     message . append ( "" ] , "" )  ;  } message . append ( "" ]  ;  "" )  ;  message . append ( ""m Next Data:  [ "" )  ;  for  ( int i = 0, size = m Next Data . size (  )  ;  i < size ;  i++ )  {     message . append ( "" [ "" )  . append ( m Next Data . get ( i )  )  . append ( "" ] , "" )  ;  } message . append ( "" ] "" )  ;   Components Reporter . emit Message (  Components Reporter .  Log Level . ERROR, INCONSISTENT_SIZE, message . to String (  )  )  ; }"
615,public final void skew (  Vec2 out ) { out . x = -y ;  out . y = x ; }
616,"public boolean get Console Log Build Rule Failures Inline (  ) { return get Delegate (  )  . get Boolean ( ""build"", ""console_log_build_rule_failures_inline"" )  . or Else ( false )  ; }"
617,public void set Maximum Range ( float range ) { maximum Range = range ; }
618,public static int get Open Files (  ) { return  ( int )   Window Cache . get Instance (  )  . get Stats (  )  . get Open File Count (  )  ; }
619,"public com . anychart . charts .  Pareto bottom (  String bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", wrap Quotes ( bottom )  )  )  ;  return this ; }"
620,"public static void copy Stream (  Input Stream input,  Output Stream output )  throws IO Exception{ copy Stream ( input, output, new byte [ DEFAULT_BUFFER_SIZE ]  )  ; }"
621,"private static  String encode Structs Arrays Offsets (  Array<T> value ) {  String Builder result = new  String Builder (  )  ;  long offset = value . get Value (  )  . size (  )  ;   List< String> tails Encoding = value . get Value (  )  . stream (  )  . map (  Type Encoder::encode )  . collect (  Collectors . to List (  )  )  ;  for  ( int i = 0 ;  i < value . get Value (  )  . size (  )  ;  i++ )  {     if  ( i == 0 )  {         offset = offset * MAX_BYTE_LENGTH ;      } else {         offset += tails Encoding . get ( i - 1 )  . length (  )  / 2 ;      }     result . append (  Numeric . to Hex String No Prefix (  Numeric . to Bytes Padded ( new  Big Integer (  Long . to String ( offset )  ) , MAX_BYTE_LENGTH )  )  )  ;  } return result . to String (  )  ; }"
622,"public void set Request Properties (  Map< String,  String> request Properties ) { this . request Properties = request Properties ; }"
623,"private void download T Path And Unzip (  String http Url,  File save File,  File tmp Unzip Folder )  throws IO Exception{ if  ( !save File . exists (  )  || !save File . is File (  )  )  {     download File ( http Url, save File )  ;  } //         Zip Utils . unzip ( save File, tmp Unzip Folder . get Absolute Path (  )  )  ;   Command Utils . exec ( t Patch Tmp Folder, ""unzip "" + save File . get Absolute Path (  )  + "" -d "" + tmp Unzip Folder . get Absolute Path (  )  )  ; }"
624,"public com . anychart . core . gantt . edit .  Structure Edit fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
625,"static  Method Spec generate Dispatch On Entered Range Method (  Spec Model spec Model ) { final  Method Spec .  Builder method Builder =  Method Spec . method Builder ( ""dispatch On Entered Range"" )  . add Modifiers (  Modifier . PUBLIC )  . add Annotation (  Override . class )  . returns (  Type Name . VOID )  . add Parameter ( spec Model . get Context Class (  ) , ""c"" )  . add Parameter (  Class Names . STRING, ""name"" )  ;  method Builder . begin Control Flow ( ""switch  ( name ) "" )  ;  for  (  Working Range Method Model model : spec Model . get Working Range Methods (  )  )  {     if  ( model . entered Range Model != null && model . entered Range Model . type Model != null )  {         final  String name In Annotation = model . entered Range Model . type Model . name ;          method Builder . begin Control Flow ( ""case \""$L\"":"", name In Annotation )  ;          method Builder . add Statement ( ""$L ( c ) "", model . entered Range Model . name )  ;          method Builder . add Statement ( ""return"" )  ;          method Builder . end Control Flow (  )  ;      } } return method Builder . end Control Flow (  )  . build (  )  ; }"
626,"public com . anychart . charts .  Tree Map parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
627,"protected  Archive Output Stream apply Format Options (  Archive Output Stream s,  Map< String,  Object> o )  throws IO Exception{ for  (  Map .  Entry< String,  Object> p : o . entry Set (  )  )  {     try {         if  ( p . get Key (  )  . equals ( COMPRESSION_LEVEL )  )  {             continue ;          }         new //$NON-NLS-1$          Statement ( //$NON-NLS-1$         s, //$NON-NLS-1$         ""set"" +  String Utils . capitalize ( p . get Key (  )  ) , new  Object [  ]  { p . get Value (  )  } )  . execute (  )  ;      } catch  (  Exception e )  {         throw new IO Exception (  Message Format . format (  Archive Text . get (  )  . cannot Set Option, p . get Key (  )  ) , e )  ;      } } return s ; }"
628,"public final double get And Set ( int i, double new Value ) { long next = double To Raw Long Bits ( new Value )  ;  return long Bits To Double ( longs . get And Set ( i, next )  )  ; }"
629,"public com . anychart . core . resource . resourcelist .  Tags Settings text Direction (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Direction ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
630,"public void select Marquee Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . select Marquee Fill (  )  ; "" )  ; }"
631,"public void get Stat ( com . anychart . enums .  Statistics key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Stat ( %s )  ; "",  ( key != null )  ? key . get Js Base (  )  : null )  )  ; }"
632,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
633,"public  Optional< String> install Bundle (  String device Udid,  Path bundle Path )  throws IO Exception,  Interrupted Exception{  Immutable List< String> command =  Immutable List . of ( idb Path . to String (  ) , ""install"", ""--udid"", device Udid, bundle Path . to String (  )  )  ;   Process Executor Params process Executor Params =  Process Executor Params . builder (  )  . set Command ( command )  . build (  )  ;   Set< Process Executor .  Option> options =  Enum Set . of (  Process Executor .  Option . EXPECTING_STD_OUT )  ;   Process Executor .  Result result = process Executor . launch And Execute ( process Executor Params, options, /* stdin */  Optional . empty (  ) , /* time Out Ms */  Optional . empty (  ) , /* time Out Handler */  Optional . empty (  )  )  ;  if  ( result . get Exit Code (  )  != 0 )  {     LOG . error ( result . get Message For Unexpected Result ( command . to String (  )  )  )  ;      return  Optional . empty (  )  ;  } if  ( !result . get Stdout (  )  . is Present (  )  )  {     LOG . error ( "" Could not get the bundle id of the installed app"" )  ;      return  Optional . empty (  )  ;  }  String [  ]  output = result . get Stdout (  )  . get (  )  . split ( "" "" )  ;  return  Optional . of ( output [ 1 ]  )  ; }"
634,"public com . anychart . charts .  Tree Map fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
635,"public void zoom To Point ( float scale,  Point F image Point,  Point F view Point ) { zoom To Point ( scale, image Point, view Point, LIMIT_ALL, 0, null )  ; }"
636,"public void add Menu Item (  Reside Menu Item menu Item, int direction ) { if  ( direction == DIRECTION_LEFT )  {     this . left Menu Items . add ( menu Item )  ;      layout Left Menu . add View ( menu Item )  ;  } else {     this . right Menu Items . add ( menu Item )  ;      layout Right Menu . add View ( menu Item )  ;  }}"
637,public float get Scroll Multiplier (  ) { return this . m Scroll Multiplier ; }
638,public  No Paginate Builder set Loading Trigger Threshold ( @ Int Range ( from = 0 )  int loading Trigger Threshold ) { this . loading Trigger Threshold = loading Trigger Threshold ;  return this ; }
639,private void init_custom_card (  ) { // Create a  Card  Card card = new  Custom Card ( get Activity (  )  )  ;  // Set card in the card View  Card View card View =  (  Card View )  get Activity (  )  . find View By Id ( R . id . carddemo_example_card3 )  ;  card View . set Card ( card )  ; }
640,"private boolean tinker Fast Crash Protect (  ) {  Application Like application Like =  Tinker Manager . get Tinker Application Like (  )  ;  if  ( application Like == null || application Like . get Application (  )  == null )  {     return false ;  } if  ( ! Tinker Application Helper . is Tinker Load Success ( application Like )  )  {     return false ;  } final long elapsed Time =  System Clock . elapsed Realtime (  )  - application Like . get Application Start Elapsed Time (  )  ;  //this process may not install tinker, so we use  Tinker Application Helper api if  ( elapsed Time < QUICK_CRASH_ELAPSE )  {      String current Version =  Tinker Application Helper . get Current Version ( application Like )  ;      if  (  Share Tinker Internals . is Null Or Nil ( current Version )  )  {         return false ;      }      Shared Preferences sp = application Like . get Application (  )  . get Shared Preferences (  Share Constants . TINKER_SHARE_PREFERENCE_CONFIG,  Context . MODE_MULTI_PROCESS )  ;      int fast Crash Count = sp . get Int ( current Version, 0 )  + 1 ;      if  ( fast Crash Count >= MAX_CRASH_COUNT )  {          Sample Tinker Report . on Fast Crash Protect (  )  ;           Tinker Application Helper . clean Patch ( application Like )  ;           Tinker Log . e ( TAG, ""tinker has fast crash more than %d, we just clean patch!"", fast Crash Count )  ;          return true ;      } else {         sp . edit (  )  . put Int ( current Version, fast Crash Count )  . commit (  )  ;           Tinker Log . e ( TAG, ""tinker has fast crash %d times"", fast Crash Count )  ;      } } return false ; }"
641,public  Json Primitive deep Copy (  ) { return this ; }
642,"public com . anychart . core . axes .  Radar y Axis (  ) { return new com . anychart . core . axes .  Radar ( js Base + "" . y Axis (  ) "" )  ; }"
643,public T use Animation Pool ( boolean flag ) { if  ( is Auto Clone Enabled )  {     return clone (  )  . use Animation Pool ( flag )  ;  } use Animation Pool = flag ;  fields |= USE_ANIMATION_POOL ;  return self Or Throw If Locked (  )  ; }
644,protected void on Pre Get (  ) {}
645,"public static  Flexible Item Provider< Model,  Flexible> with ( @ Non Null  Flexible Item Provider .  Factory< Model,  Flexible> factory ) { return new  Flexible Item Provider<> ( factory )  ; }"
646,"public final  String get Path (  ) { return  Json Scope . get Path ( stack Size, scopes, path Names, path Indices )  ; }"
647,"public static void add Encoder (  String type,  Codec Config config ) { encoders . put ( type, config )  ; }"
648,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
649,public boolean is Active Now (  ) { if  ( !is Valid (  )  )  {     return false ;  } long now = new  Date (  )  . get Time (  )  / 1000 ;  if  ( now < st )  {     return false ;  } if  ( now > et )  {     return false ;  } if  ( !is Images Ready (  )  )  {     return false ;  } return true ; }
650,public int get Count (  ) { return count ; }
651,"public com . anychart . core . cartesian . series .  Width Based unselect (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unselect ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ;  return this ; }"
652,public  String get Value For Id ( int id ) { return id To Value . get ( id )  ; }
653,"private  Bitmap get Masked Image (  Bitmap bi ) { // get the color of the current paint int col = state . fill Paint . get Paint (  )  . get Color (  )  ;  // format as 8 bits each of ARGB int paint Color =  Color . alpha ( col )  << 24 ;  paint Color |=  Color . red ( col )  << 16 ;  paint Color |=  Color . green ( col )  << 8 ;  paint Color |=  Color . blue ( col )  ;  // transparent  ( alpha = 1 )  int no Color = 0 ;  // get the coordinates of the source image int start X = 0 ;  int start Y = 0 ;  int width = bi . get Width (  )  ;  int height = bi . get Height (  )  ;  // create a destion image of the same size  Bitmap dst Image =  Bitmap . create Bitmap ( width, height,  Config . ARGB_8888 )  ;  // copy the pixels row by row for  ( int i = 0 ;  i < height ;  i++ )  {     int [  ]  src Pixels = new int [ width ]  ;      int [  ]  dst Pixels = new int [ src Pixels . length ]  ;      // read a row of pixels from the source     bi . get Pixels ( src Pixels, 0, 0, start X, start Y + i, width, 1 )  ;      // figure out which ones should get painted     for  ( int j = 0 ;  j < src Pixels . length ;  j++ )  {         if  ( src Pixels [ j ]  == 0xff000000 )  {             dst Pixels [ j ]  = paint Color ;          } else {             dst Pixels [ j ]  = no Color ;          }     }     // write the destination image     //            dst Image . set RGB ( start X, start Y + i, width, 1, dst Pixels, 0, height )  ;      dst Image . set Pixels ( dst Pixels, 0, 0, start X, start Y + i, width, 1 )  ;  } return dst Image ; }"
654,"public com . anychart . core . stock . scrollerseries .  Step Line stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
655,public static int get Level (  ) { return native Get Log Level (  )  ; }
656,public  Immutable List<T> get Values (  Build Target build Target ) { return get Values ( build Target . get Flavors (  )  )  ; }
657,static  String [  ]  search Jar For Classes ( URL jar )  throws IO Exception{  Vector v = new  Vector (  )  ;   Input Stream in = jar . open Stream (  )  ;   Zip Input Stream zin = new  Zip Input Stream ( in )  ;   Zip Entry ze ;  while  (  ( ze = zin . get Next Entry (  )  )  != null )  {      String name = ze . get Name (  )  ;      if  ( is Class File Name ( name )  )          v . add Element ( canonicalize Class Name ( name )  )  ;  } zin . close (  )  ;   String [  ]  sa = new  String [ v . size (  )  ]  ;  v . copy Into ( sa )  ;  return sa ; }
658,"public static void set Translucent For Image View (  Activity activity,  View need Offset View ) { set Translucent For Image View ( activity, DEFAULT_STATUS_BAR_ALPHA, need Offset View )  ; }"
659,"public C new Collection (  String id ) { if  ( m Named Collections . get ( id )  != null )  {     throw new  Illegal Argument Exception ( ""collection id is not unique: "" + id )  ;  } C collection = new Collection (  )  ;  m Named Collections . put ( id, collection )  ;  return collection ; }"
660,"public com . anychart . charts .  Heat Map padding (  String value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
661,private void on Time Update (  Long time To Takeoff ) { //  Update the countdown m Countdown . set Time Remaining ( time To Takeoff )  ; }
662,public static boolean is Power Of Two ( int x ) { return x > 0 &  ( x &  ( x - 1 )  )  == 0 ; }
663,"public void warn (  Throwable exception,  String message ) { logger . log ( WARNING, message, exception )  ; }"
664,public void set Dispatch Gzipped ( boolean dispatch Gzipped ) { m Dispatch Gzipped = dispatch Gzipped ;  m Packet Sender . set Gzip Data ( m Dispatch Gzipped )  ; }
665,public  String get Text (  ) { return text ; }
666,public boolean is Set ( _ Fields field ) { if  ( field == null )  {     throw new java . lang .  Illegal Argument Exception (  )  ;  } switch ( field )  {     case PATH:         return is Set Path (  )  ;  } throw new java . lang .  Illegal State Exception (  )  ; }
667,public void set Max List Count ( int max List Count ) { select Box List . max List Count = max List Count ; }
668,public static int size ( long value ) { int group Count = 0 ;  long value To Size = value ;  do {     group Count++ ;      value To Size >>>= 7 ;  } while  ( value To Size != 0 )  ;  return group Count ; }
669,public boolean find File (  String name )  throws  Corrupt Object Exception{ return find File (  Constants . encode ( name )  )  ; }
670,"public  To String Builder append (  String field Name, boolean value ) { style . append ( buffer, field Name, value )  ;  return this ; }"
671,private void add Empty Progress Bar (  ) { int where Is Empty = -1 ;  for  ( int i = 0 ;  i < get Child Count (  )  ;  i++ )  {     if  ( retrieve Child ( i )  != null && retrieve Child ( i )  . equals ( empty Progress Bar )  )  {         where Is Empty = i ;      } } if  ( where Is Empty != get Child Count (  )  - 1 )  {     if  ( where Is Empty != -1 )  {         //the flowing true/false is to stop empty progressbar being added more than once as remove View and add View indirectly call this method         is Empty Being Added = true ;          remove View ( empty Progress Bar )  ;          is Empty Being Added = false ;      }     if  ( !is Empty Being Added )  {         add View ( empty Progress Bar )  ;      } }}
672,"public  All Types Model View Model_ on Click Listener ( @ Non Null  View .  On Click Listener on Click Listener ) { if  ( on Click Listener == null )  {     throw new  Illegal Argument Exception ( ""on Click Listener cannot be null"" )  ;  } assigned Attributes_epoxy Generated Model . set ( 11 )  ;  on Mutation (  )  ;  this . on Click Listener_ On Click Listener = on Click Listener ;  return this ; }"
673,protected void rebuild Indentation Buf (  ) { if  ( do Indent == false )      return ;  // hardcoded maximum indentation size in characters final int max Indent = 65 ;  int buf Size = 0 ;  offset New Line = 0 ;  if  ( write Line Separtor )  {     offset New Line = line Separator . length (  )  ;      buf Size += offset New Line ;  } max Indent Level = 0 ;  if  ( write Indentation )  {     indentation Jump = indentation String . length (  )  ;      max Indent Level = max Indent / indentation Jump ;      buf Size += max Indent Level * indentation Jump ;  } if  ( indentation Buf == null || indentation Buf . length < buf Size )  {     indentation Buf = new char [ buf Size + 8 ]  ;  } int buf Pos = 0 ;  if  ( write Line Separtor )  {     for  ( int i = 0 ;  i < line Separator . length (  )  ;  i++ )  {         indentation Buf [ buf Pos++ ]  = line Separator . char At ( i )  ;      } } if  ( write Indentation )  {     for  ( int i = 0 ;  i < max Indent Level ;  i++ )  {         for  ( int j = 0 ;  j < indentation String . length (  )  ;  j++ )  {             indentation Buf [ buf Pos++ ]  = indentation String . char At ( j )  ;          }     } }}
674,public long get Content Length (  ) { return content Length ; }
675,public  List< Reside Menu Item> get Menu Items (  ) { return left Menu Items ; }
676,"public void share With Pinterest (  String link Or Options,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Pinterest ( %s, %s )  ; "", wrap Quotes ( link Or Options ) , wrap Quotes ( description )  )  )  ; }"
677,public boolean get Boolean (  ) { return this . content . length > 0 && this . content [ 0 ]  != 0 ; }
678,"public static long compose Expandable Group Id ( @ Int Range ( from = MIN_GROUP_ID, to = MAX_GROUP_ID )  long group Id ) { if  ( group Id < MIN_GROUP_ID || group Id > MAX_GROUP_ID )  {     throw new  Illegal Argument Exception ( "" Group ID value is out of range .   ( group Id = "" + group Id + "" ) "" )  ;  } //noinspection  Pointless Bitwise Expression return  (  ( group Id << BIT_OFFSET_GROUP_ID )  & BIT_MASK_GROUP_ID )  |  (  (  Recycler View . NO_ID << BIT_OFFSET_CHILD_ID )  & BIT_MASK_CHILD_ID )  ; }"
679,"static  Filter Spec with Blob Limit ( long blob Limit ) { if  ( blob Limit < 0 )  {     throw new  Illegal Argument Exception ( //$NON-NLS-1$     ""blob Limit cannot be negative: "" + blob Limit )  ;  } return new  Filter Spec (  Object Types . ALL, blob Limit, -1 )  ; }"
680,public void on Support Visible (  ) { m Delegate . on Support Visible (  )  ; }
681,"private static  Java Context get Java Context (  ) { try {     return new  Java Context (  )  ;  } catch  (  Throwable th )  {      Matrix Log . print Err Stack Trace ( TAG, th, ""get javacontext exception"" )  ;  } return null ; }"
682,"public void remove Views ( int start, int count ) { throw new  Unsupported Operation Exception ( "" Removing  Views manually within  Litho Views is not supported"" )  ; }"
683,public boolean get Delete After Delivery (  ) { return delete After Delivery ; }
684,"public com . anychart . core . ui .  Legend Item word Break ( com . anychart . enums .  Word Break mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . word Break ( %s )  ; "",  ( mode != null )  ? mode . get Js Base (  )  : null )  )  ;  return this ; }"
685,"protected  Status Bar Notification [  ]  get Active Notifications (  String [  ]  keys, int trim ) { if  ( keys == null )  {     return active Notifications . to Array ( new  Status Bar Notification [ 0 ]  )  ;  }  Immutable Set< String> key Set =  Immutable Set . copy Of ( keys )  ;  return active Notifications . stream (  )  . filter (  notification -> key Set . contains ( notification . get Key (  )  )  )  . collect ( to Collection (  Array List::new )  )  . to Array ( new  Status Bar Notification [ 0 ]  )  ; }"
686,"public T get Value ( @ Non Null  Generic Type Indicator<T> t ) {  Object value = get Node (  )  . get Value (  )  ;  return  Custom Class Mapper . convert To Custom Class ( value, t )  ; }"
687,"public static JSON Object resolve Object ( JSON Object object,  String path )  throws  Json Path Exception{ boolean is_root_path =  ( path == null )  || path . is Empty (  )  ;  if  ( is_root_path )  {     return object ;  }  String [  ]  elements = path . split ( ""\\ . "" )  ;  JSON Object current = object ;  int last_index = elements . length - 1 ;  for  ( int i = 0 ;  i < elements . length ;  ++i )  {      Object child_object ;      try {         child_object = current . get ( elements [ i ]  )  ;      } catch  (  Exception e )  {         throw new  Json Path Exception (  String . format ( ""failed to fetch element \""%s\"""", elements [ i ]  )  )  ;      }     if  ( JSON Array . class . is Assignable From ( child_object . get Class (  )  )  )  {         if  ( i == last_index )  {             throw new  Json Path Exception ( ""last element "" + elements [ i ]  + "" is an array and not an object"" )  ;          } else {             throw new  Json Path Exception ( ""array element for "" + elements [ i ]  + "" cannot be parsed at "" + path )  ;          }     } else if  ( JSON Object . class . is Assignable From ( child_object . get Class (  )  )  )  {         if  ( i == last_index )  {             return  ( JSON Object )  child_object ;          } else {             current =  ( JSON Object )  child_object ;          }     } else {         throw new  Json Path Exception ( ""can't parse element for "" + elements [ i ]  + "" on path "" + path + "" because the type "" + child_object . get Class (  )  . get Name (  )  + "" is not supported"" )  ;      } } throw new  Json Path Exception ( ""json path mapping failed"" )  ; }"
688,"public void update Sub Adapter Visible Range ( int first Visible Position, int last Visible Position ) { if  ( !m Is Sub Adapter )  {     throw new  Runtime Exception ( ""update Sub Adapter Visible Range can only be called in sub adapter mode"" )  ;  } on New Visible Range ( first Visible Position, last Visible Position )  ; }"
689,"public  Network Capabilities add Capability ( int capability ) { return directly On ( real Network Capabilities,  Network Capabilities . class, ""add Capability"",  Class Parameter . from ( int . class, capability )  )  ; }"
690,"public com . anychart . standalones .  Data Grid end Index (  Number index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . end Index ( %s )  ; "", index )  )  ;  return this ; }"
691,protected void setup List Fragment (  View root ) { m List Container = root . find View By Id ( R . id . carddemo_list Container )  ;  m Progress Container = root . find View By Id ( R . id . carddemo_progress Container )  ;  m List Shown = true ; }
692,public void update (  ) { if  ( m Start Dx == m Target X )  {     m X = m View Holder . item View . get Translation X (  )  ;  } else {     m X = m Start Dx + m Fraction *  ( m Target X - m Start Dx )  ;  } if  ( m Start Dy == m Target Y )  {     m Y = m View Holder . item View . get Translation Y (  )  ;  } else {     m Y = m Start Dy + m Fraction *  ( m Target Y - m Start Dy )  ;  }}
693,"public void get Absolute Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Absolute Width (  )  ; "" )  ; }"
694,"static  Media Type create Video Type (  String subtype ) { return create ( VIDEO_TYPE, subtype )  ; }"
695,"private static sun . misc .  Unsafe get Unsafe (  ) { try {     return sun . misc .  Unsafe . get Unsafe (  )  ;  } catch  (  Security Exception try Reflection Instead )  { //  We'll try reflection instead .  } try {     return java . security .  Access Controller . do Privileged ( new java . security .  Privileged Exception Action<sun . misc .  Unsafe> (  )  {         @ Override         public sun . misc .  Unsafe run (  )  throws  Exception {              Class<sun . misc .  Unsafe> k = sun . misc .  Unsafe . class ;              for  ( java . lang . reflect .  Field f : k . get Declared Fields (  )  )  {                 f . set Accessible ( true )  ;                   Object x = f . get ( null )  ;                  if  ( k . is Instance ( x )  )  {                     return k . cast ( x )  ;                  }             }             throw new  No Such Field Error ( ""the  Unsafe"" )  ;          }     } )  ;  } catch  ( java . security .  Privileged Action Exception e )  {     throw new  Runtime Exception ( "" Could not initialize intrinsics"", e . get Cause (  )  )  ;  }}"
696,public final  Optional<E> first (  ) {  Iterator<E> iterator = get Delegate (  )  . iterator (  )  ;  return iterator . has Next (  )  ?  Optional . of ( iterator . next (  )  )  :  Optional . <E>absent (  )  ; }
697,public  Boolean is Force Ref Log (  ) { return force Ref Log ; }
698,"public com . anychart . core . cartesian . series .  Base With Markers max Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
699,"public void to Html Table (  String title,  Boolean as String ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Html Table ( %s, %s )  ; "", wrap Quotes ( title ) , as String )  )  ; }"
700,public boolean is Use Cached Packs (  ) { return use Cached Packs ; }
701,"public  Builder set Cache Size Bytes ( long value ) { if  ( value != CACHE_SIZE_UNLIMITED && value < MINIMUM_CACHE_BYTES )  {     throw new  Illegal Argument Exception ( "" Cache size must be set to at least "" + MINIMUM_CACHE_BYTES + "" bytes"" )  ;  } this . cache Size Bytes = value ;  return this ; }"
702,"public com . anychart . charts .  Tree Map markers (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
703,public static T min (  List<T> num List ) { if  ( valid Length ( num List )  == 0 )      return null ;  T result = null ;  for  ( T num : num List )  {     if  ( num == null )          continue ;      if  ( result == null )          result = num ;      else if  ( num . double Value (  )  < result . double Value (  )  )          result = num ;  } return result ; }
704,"public void point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . point Width (  )  ; "" )  ; }"
705,public void set Transform Callback (  Transform Callback transform Callback ) { m Transform Callback = transform Callback ; }
706,"public  Rect get Box Rect ( int index ) { int [  ]  dimensions = get Box Geometry ( index )  ;  if  ( dimensions == null )  {     return null ;  } int x = dimensions [  Box . INDEX_X ]  ;  int y = dimensions [  Box . INDEX_Y ]  ;  int w = dimensions [  Box . INDEX_W ]  ;  int h = dimensions [  Box . INDEX_H ]  ;   Rect bound = new  Rect ( x, y, x + w, y + h )  ;  return bound ; }"
707,"public com . anychart . core . ui .  Chart Scroller x Scroller (  ) { return new com . anychart . core . ui .  Chart Scroller ( js Base + "" . x Scroller (  ) "" )  ; }"
708,"List< Resource Set> compute Resource Set List (  ) {  List< Resource Set> source Folder Sets = res Set Supplier . get (  )  ;  int size = source Folder Sets . size (  )  + 4 ;  if  ( libraries != null )  {     size += libraries . size (  )  ;  }  List< Resource Set> resource Set List =  Lists . new Array List With Expected Size ( size )  ;  // get the dependencies first if  ( libraries != null )  {     // the order of the artifact is descending order, so we need to reverse it .      for  (  Android Library artifact : libraries )  {          Resource Set resource Set = new  Resource Set ( artifact . get Name (  ) , null, null, validate Enabled )  ;          resource Set . set From Dependency ( true )  ;          resource Set . add Source ( artifact . get Res Folder (  )  )  ;          // add to 0 always, since we need to reverse the order .          resource Set List . add ( 0, resource Set )  ;      } }  Resource Set resource Set = new  Resource Set ( awb Bundle . get Name (  ) , null, null, validate Enabled )  ;  resource Set . set From Dependency ( true )  ;  resource Set . add Source ( awb Bundle . get Android Library (  )  . get Res Folder (  )  )  ;  // add the folder based next resource Set List . add All ( source Folder Sets )  ;  resource Set List . add ( resource Set )  ;  //  We add the generated folders to the main set  List< File> generated Res Folders =  Lists . new Array List (  )  ;  generated Res Folders . add All ( renderscript Res Output Dir . get Files (  )  )  ;  generated Res Folders . add All ( generated Res Output Dir . get Files (  )  )  ;   File Collection extra Folders = get Extra Generated Res Folders (  )  ;  if  ( extra Folders != null )  {     generated Res Folders . add All ( extra Folders . get Files (  )  )  ;  } if  ( micro Apk Res Directory != null )  {     generated Res Folders . add All ( micro Apk Res Directory . get Files (  )  )  ;  } return resource Set List ; }"
709,"private void transform Annotation Set (  Index Map index Map,  Dex .  Section set In ) { contents Out . annotation Sets . size++ ;  annotation Set Out . assert Four Byte Aligned (  )  ;  index Map . put Annotation Set Offset ( set In . get Position (  ) , annotation Set Out . get Position (  )  )  ;  int size = set In . read Int (  )  ;  annotation Set Out . write Int ( size )  ;  for  ( int j = 0 ;  j < size ;  j++ )  {     annotation Set Out . write Int ( index Map . adjust Annotation ( set In . read Int (  )  )  )  ;  }}"
710,"public  Object call ( int objectid, int methodid,  Object [  ]  args )  throws  Remote Exception{ boolean result ;   Object rvalue ;   String errmsg ;  try {     /*  This method establishes a raw tcp connection for sending          * a POST message .    Thus the object cannot communicate a          * remote object beyond a fire wall .    To avoid this problem,          * the connection should be established with a mechanism          * collaborating a proxy server .    Unfortunately, java . lang . URL          * does not seem to provide such a mechanism .           *          *  You might think that using  Http URL Connection is a better          * way than constructing a raw tcp connection .    Unfortunately,          * URL . open Connection (  )  does not return an  Http URL Connection          * object in  Netscape's JVM .    It returns a          * netscape . net . URL Connection object .           *          * lookup Object (  )  has the same problem .           */      Socket sock = new  Socket ( servername, port )  ;       Output Stream out = new  Buffered Output Stream ( sock . get Output Stream (  )  )  ;      out . write ( rmi Command )  ;      out . write ( endofline )  ;      out . write ( endofline )  ;       Object Output Stream dout = new  Object Output Stream ( out )  ;      dout . write Int ( objectid )  ;      dout . write Int ( methodid )  ;      write Parameters ( dout, args )  ;      dout . flush (  )  ;       Input Stream ins = new  Buffered Input Stream ( sock . get Input Stream (  )  )  ;      skip Header ( ins )  ;       Object Input Stream din = new  Object Input Stream ( ins )  ;      result = din . read Boolean (  )  ;      rvalue = null ;      errmsg = null ;      if  ( result )          rvalue = din . read Object (  )  ;      else         errmsg = din . read UTF (  )  ;      din . close (  )  ;      dout . close (  )  ;      sock . close (  )  ;      if  ( rvalue instanceof  Remote Ref )  {          Remote Ref ref =  (  Remote Ref )  rvalue ;          rvalue = create Proxy ( ref . oid, ref . classname )  ;      } } catch  (  Class Not Found Exception e )  {     throw new  Remote Exception ( e )  ;  } catch  ( IO Exception e )  {     throw new  Remote Exception ( e )  ;  } catch  (  Exception e )  {     throw new  Remote Exception ( e )  ;  } if  ( result )      return rvalue ;  throw new  Remote Exception ( errmsg )  ; }"
711,"public  Identify set Once (  String property, int [  ]  values ) { add To User Properties (  Constants . AMP_OP_SET_ONCE, property, int Array To JSON Array ( values )  )  ;  return this ; }"
712,public  Verify Signature Command set Mode ( @ Non Null  Verify Mode mode ) { check Callable (  )  ;  this . mode = mode ;  return this ; }
713,"public com . anychart . core . resource . resourcelist .  Tags Settings line Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
714,"public int last Index Of (  String sub String, int start ) { int sub Count = sub String . length (  )  ;  if  ( sub Count <= length && start >= 0 )  {     if  ( sub Count > 0 )  {         if  ( start > length - sub Count )  {             // count and sub Count are both             start = length - sub Count ;          }         // >= 1         char first Char = sub String . char At ( 0 )  ;          while  ( true )  {             int i = start ;              boolean found = false ;              for  (  ;  i >= 0 ;  --i )  {                 if  ( chars [ i ]  == first Char )  {                     found = true ;                      break ;                  }             }             if  ( !found )  {                 return -1 ;              }             int o1 = i, o2 = 0 ;              while  ( ++o2 < sub Count && chars [ ++o1 ]  == sub String . char At ( o2 )  )  {             //  Intentionally empty             }             if  ( o2 == sub Count )  {                 return i ;              }             start = i - 1 ;          }     }     return start < length ? start : length ;  } return -1 ; }"
715,public int get Legend Shape Width ( int series Index ) { return SHAPE_WIDTH ; }
716,public static X509 Certificate get Server Certificate ( SSL Session ssl Session ) {  Certificate [  ]  peer Certificates ;  try {     peer Certificates = ssl Session . get Peer Certificates (  )  ;  } catch  ( SSL Peer Unverified Exception e )  {     peer Certificates = null ;  } if  ( peer Certificates != null && peer Certificates . length > 0 )  {      Certificate peer Certificate = peer Certificates [ 0 ]  ;      if  ( peer Certificate != null && peer Certificate instanceof X509 Certificate )  {         return  ( X509 Certificate )  peer Certificates [ 0 ]  ;      } } // no X . 509 certificate was found for this server return null ; }
717,public  Throwable get Exception (  ) { return ex ; }
718,public float get C0 ( int index ) { return c0 [ index ]  ; }
719,boolean is Started (  String node ) { return futures . contains Key ( node )  && futures . get ( node )  . is Started (  )  ; }
720,"public com . anychart . charts .  Tree Map bounds ( com . anychart . core . utils .  Bounds bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
721,"public void test Extension (  )  throws  Exception{  String content = "" Log . d ( ' Rhino Test', ' Extension Test, js' )  ; "" ;  /*			 * js> // test non-empty constructor with protected field			 * js> x =  Java Adapter ( java . util .  Vector, {test: function (  )  {return this . element Data . length ; }}, 20 )  ; 			 *  [  ] 			 * js> x . test (  ) 			 *			 * 20			 * */ content += ""var x = new  Java Adapter ( java . util .  Vector, {test: function (  )  {return this . element Data . length ; }}, 20 )  ; "" + "" Log . d ( ' Rhino Test', 'extension test:'+x . test (  )  )  ; "" ;  run Script ( content )  ; }"
722,"public void add Println (  String message ) { add Getstatic ( ""java . lang .  System"", ""err"", "" Ljava/io/ Print Stream ; "" )  ;  add Ldc ( message )  ;  add Invokevirtual ( ""java . io .  Print Stream"", ""println"", "" (  Ljava/lang/ String ;  ) V"" )  ; }"
723,public  Factory set Use Session Keys ( boolean use Session Keys ) { this . use Session Keys = use Session Keys ;  return this ; }
724,"public void on Create (  Bundle saved Instance State ) { super . on Create ( saved Instance State )  ;  set Content View ( R . layout . activity_ptr_grid )  ;  m Pull Refresh Grid View =  (  Pull To Refresh Grid View )  find View By Id ( R . id . pull_refresh_grid )  ;  m Grid View = m Pull Refresh Grid View . get Refreshable View (  )  ;  //  Set a listener to be invoked when the list should be refreshed .  m Pull Refresh Grid View . set On Refresh Listener ( new  On Refresh Listener2< Grid View> (  )  {     @ Override     public void on Pull Down To Refresh (  Pull To Refresh Base< Grid View> refresh View )  {          Toast . make Text (  Pull To Refresh Grid Activity . this, "" Pull  Down!"",  Toast . LENGTH_SHORT )  . show (  )  ;          new  Get Data Task (  )  . execute (  )  ;      }     @ Override     public void on Pull Up To Refresh (  Pull To Refresh Base< Grid View> refresh View )  {          Toast . make Text (  Pull To Refresh Grid Activity . this, "" Pull  Up!"",  Toast . LENGTH_SHORT )  . show (  )  ;          new  Get Data Task (  )  . execute (  )  ;      } } )  ;  m List Items = new  Linked List< String> (  )  ;   Text View tv = new  Text View ( this )  ;  tv . set Gravity (  Gravity . CENTER )  ;  tv . set Text ( "" Empty  View,  Pull  Down/ Up to  Add  Items"" )  ;  m Pull Refresh Grid View . set Empty View ( tv )  ;  m Adapter = new  Array Adapter< String> ( this, android . R . layout . simple_list_item_1, m List Items )  ;  m Grid View . set Adapter ( m Adapter )  ; }"
725,"public static  Immutable Set Multimap<K, V> of ( K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5 ) {  Immutable Set Multimap .  Builder<K, V> builder =  Immutable Set Multimap . builder (  )  ;  builder . put ( k1, v1 )  ;  builder . put ( k2, v2 )  ;  builder . put ( k3, v3 )  ;  builder . put ( k4, v4 )  ;  builder . put ( k5, v5 )  ;  return builder . build (  )  ; }"
726,public static void shut Down (  ) { s Drawee Controller Builder Supplier = null ;   Simple Drawee View . shut Down (  )  ;   Image Pipeline Factory . shut Down (  )  ; }
727,"public int get Wrap Index (  Array< Glyph> glyphs, int start ) { int i = start - 1 ;   Object [  ]  glyphs Items = glyphs . items ;  char ch =  ( char )   (  (  Glyph )  glyphs Items [ i ]  )  . id ;  if  ( is Whitespace ( ch )  )      return i ;  if  ( is Break Char ( ch )  )      i-- ;  for  (  ;  i > 0 ;  i-- )  {     ch =  ( char )   (  (  Glyph )  glyphs Items [ i ]  )  . id ;      if  ( is Whitespace ( ch )  || is Break Char ( ch )  )          return i + 1 ;  } return 0 ; }"
728,"protected  Mount Content Pool on Create Mount Content Pool (  ) { return new  Default Mount Content Pool ( get Class (  )  . get Simple Name (  ) , pool Size (  ) , true )  ; }"
729,"public static boolean is Token Expired ( final  Date expires On ) {  Calendar calendar With Buffer =  Calendar . get Instance (  )  ;  calendar With Buffer . add (  Calendar . SECOND,  Authentication Settings . INSTANCE . get Expiration Buffer (  )  )  ;   Date validity = calendar With Buffer . get Time (  )  ;   Logger . i ( TAG, "" Check token expiration time . "", ""expires On:"" + expires On + "" time With Buffer:"" + calendar With Buffer . get Time (  )  + ""  Buffer:"" +  Authentication Settings . INSTANCE . get Expiration Buffer (  )  )  ;  return expires On != null && expires On . before ( validity )  ; }"
730,public  Lat Lng Bounds get Lat Lng Box (  ) { return m Lat Lng Box ; }
731,"public com . anychart . core . stock . scrollerseries .  Step Area step Direction (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . step Direction ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
732,"public com . anychart . standalones .  Resource Timeline row Odd Fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Odd Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
733,"public void put ( @ Non Null final  String key, final  Object value ) { put ( key, value, -1 )  ; }"
734,public  Parser Kind get Parser Kind (  ) { return parser Kind ; }
735,"private static void encode List (  Dex File file,  Annotated Output out,  String label,  Array List<? extends  Encoded Member> list ) { int size = list . size (  )  ;  int last Index = 0 ;  if  ( size == 0 )  {     return ;  } if  ( out . annotates (  )  )  {     out . annotate ( 0, ""  "" + label + "":"" )  ;  } for  ( int i = 0 ;  i < size ;  i++ )  {     last Index = list . get ( i )  . encode ( file, out, last Index, i )  ;  }}"
736,public  Set< String> get Paths With Index Mode (  File Mode mode ) {  Set< String> paths = file Modes . get ( mode )  ;  if  ( paths == null )      paths = new  Hash Set<> (  )  ;  return paths ; }
737,void set On Refresh Listener (  On Refresh Listener listener ) { m On Refresh Listener = listener ; }
738,protected boolean in Keyguard Restricted Input Mode (  ) { return in Restricted Input Mode ; }
739,public float get Value (  ) { return  Float . int Bits To Float ( get Int Bits (  )  )  ; }
740,"public void insert (  Managed Object object ) { if  ( object . get Entity (  )  == null || object . get ID (  )  == null )  {     throw new  Illegal State Exception ( "" Managed object "" + object + "" must be created through a context"" )  ;  } // check that the object is not associated with another context if  ( object . get Object Context (  )  != this && object . get Object Context (  )  != null )  {     throw new  Illegal State Exception ( "" Object already associated with another context"" )  ;  } changed Objects . object Inserted ( object )  ;  register Object ( object )  ;  objects Changed Since Last Notification . object Inserted ( object )  ;  send Objects Changed Notification (  )  ; }"
741,protected final boolean is Source Ready (  ) { return has Read Stream To End (  )  ? stream Is Final : stream . is Ready (  )  ; }
742,"public com . anychart . charts .  Venn data Separator (  String separator ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . data Separator ( %s )  ; "", wrap Quotes ( separator )  )  )  ;  return this ; }"
743,public int get Created From Res Id (  ) { return created From Res Id ; }
744,"public com . anychart . core . cartesian . series .  Bar3d parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
745,public  Track Selection get ( int index ) { return track Selections [ index ]  ; }
746,public static void set Total Tx Bytes ( int total Tx Bytes ) {  Shadow Traffic Stats . total Tx Bytes = total Tx Bytes ; }
747,"public  Model With Annotation_ on Visibility State Changed (  On Model Visibility State Changed Listener< Model With Annotation_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
748,"public static  Multimap Builder With Keys<K0> tree Keys ( final  Comparator<K0> comparator ) { check Not Null ( comparator )  ;  return new  Multimap Builder With Keys<K0> (  )  {     @ Override     <K extends K0, V>  Map<K,  Collection<V>> create Map (  )  {         return new  Tree Map<> ( comparator )  ;      } } ; }"
749,public int get Row Header Width (  ) { return m Row Header Width ; }
750,public void set Crashlytics Collection Enabled ( @ Nullable  Boolean enabled ) { core . set Crashlytics Collection Enabled ( enabled )  ; }
751,"public com . anychart . core . stock . scrollerseries .  Range Area high Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . high Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
752,"public static void set View Components (  Wenku Reader Loader wrl,  Wenku Reader Setting V1 wrs, boolean force Mode ) { m Loader = wrl ;  m Setting = wrs ;  // 行间距 px Line Distance =  Light Tool . dip2px (  My App . get Context (  ) , m Setting . get Line Distance (  )  )  ;  // 段落间距 px Paragraph Distance =  Light Tool . dip2px (  My App . get Context (  ) , m Setting . get Paragraph Distance (  )  )  ;  // 页面边距 px Page Edge Distance =  Light Tool . dip2px (  My App . get Context (  ) , m Setting . get Page Edge Distance (  )  )  ;  // calc general var try {     // custom font     if  ( m Setting . get Use Custom Font (  )  )          typeface =  Typeface . create From File ( m Setting . get Custom Font Path (  )  )  ;  } catch  (  Exception e )  {      Toast . make Text (  My App . get Context (  ) , e . to String (  )  + ""\n可能的原因有：字体文件不在内置SD卡；内存太小字体太大，请使用简体中文字体，而不是CJK或GBK，谢谢，此功能为试验性功能；"",  Toast . LENGTH_SHORT )  . show (  )  ;  } text Paint = new  Text Paint (  )  ;  text Paint . set Color ( get In Day Mode (  )  ? m Setting . font Color Dark : m Setting . font Color Light )  ;  text Paint . set Text Size (  Light Tool . sp2px (  My App . get Context (  ) ,  ( float )  m Setting . get Font Size (  )  )  )  ;  if  ( typeface != null )      text Paint . set Typeface ( typeface )  ;  text Paint . set Anti Alias ( true )  ;  // in ""px"" font Height =  ( int )  text Paint . measure Text ( sample Text )  ;  widget Text Paint = new  Text Paint (  )  ;  widget Text Paint . set Color ( get In Day Mode (  )  ? m Setting . font Color Dark : m Setting . font Color Light )  ;  widget Text Paint . set Text Size (  Light Tool . sp2px (  My App . get Context (  ) ,  ( float )  m Setting . widget Text Size )  )  ;  widget Text Paint . set Anti Alias ( true )  ;  widget Font Heihgt =  ( int )  text Paint . measure Text ( sample Text )  ;  //  Update widget height .  // default .  px Widget Height =  Light Tool . dip2px (  My App . get Context (  ) , m Setting . widget Height )  ;  // 2/3 font height px Widget Height = 3 * widget Font Heihgt / 2 ;  // load bitmap if  ( force Mode || !is Background Set )  {     screen Size =  Light Tool . get Real Screen Size (  My App . get Context (  )  )  ;      if  (  Build . VERSION . SDK_INT < 19 )  {         screen Size . y -=  Light Tool . get Status Bar Height Value (  My App . get Context (  )  )  ;      }     if  ( m Setting . get Page Background Type (  )  ==  Wenku Reader Setting V1 . PAGE_BACKGROUND_TYPE . CUSTOM )  {         try {             bm Background Yellow =  Bitmap Factory . decode File ( m Setting . get Page Backgroun Custom Path (  )  )  ;          } catch  (  Out Of Memory Error oome )  {             try {                  Bitmap Factory .  Options options = new  Bitmap Factory .  Options (  )  ;                  options . in Sample Size = 2 ;                  bm Background Yellow =  Bitmap Factory . decode File ( m Setting . get Page Backgroun Custom Path (  ) , options )  ;              } catch  (  Exception e )  {                 e . print Stack Trace (  )  ;                  return ;              }         }         bmd Background = null ;      }     if  ( m Setting . get Page Background Type (  )  ==  Wenku Reader Setting V1 . PAGE_BACKGROUND_TYPE . SYSTEM_DEFAULT || bm Background Yellow == null )  {         // use system default         bm Background Yellow =  Bitmap Factory . decode Resource (  My App . get Context (  )  . get Resources (  ) , R . drawable . reader_bg_yellow_edge )  ;          bm Texture Yellow = new  Bitmap [ 3 ]  ;          bm Texture Yellow [ 0 ]  =  Bitmap Factory . decode Resource (  My App . get Context (  )  . get Resources (  ) , R . drawable . reader_bg_yellow1 )  ;          bm Texture Yellow [ 1 ]  =  Bitmap Factory . decode Resource (  My App . get Context (  )  . get Resources (  ) , R . drawable . reader_bg_yellow2 )  ;          bm Texture Yellow [ 2 ]  =  Bitmap Factory . decode Resource (  My App . get Context (  )  . get Resources (  ) , R . drawable . reader_bg_yellow3 )  ;          bmd Background = new  Bitmap Drawable (  My App . get Context (  )  . get Resources (  ) , bm Texture Yellow [ random . next Int ( bm Texture Yellow . length )  ]  )  ;          bmd Background . set Tile Mode XY (  Shader .  Tile Mode . REPEAT,  Shader .  Tile Mode . REPEAT )  ;          bmd Background . set Bounds ( 0, 0, screen Size . x, screen Size . y )  ;      }     is Background Set = true ;  }}"
753,"public  Dependency Stack child (  Element where ) { return new  Dependency Stack ( this, where )  ; }"
754,public void set Scale Enabled ( boolean enabled ) { this . m Scale X Enabled = enabled ;  this . m Scale Y Enabled = enabled ; }
755,private  Array List< Integer> get Typed Times (  ) { return m Typed Times ; }
756,public  Cell Relative Path get Cell Relative Base Path (  ) { return get Unflavored Build Target (  )  . get Cell Relative Base Path (  )  ; }
757,public void change Charset (  String charset Name )  throws IO Exception{ this . charset Name = charset Name ;  reader . change Charset ( charset Name )  ;  writer . change Charset ( charset Name )  ; }
758,"public void time Collections Default ( int reps ) { for  ( int i = 0 ;  i < reps ;  ++i )  {     gson . from Json ( json, LIST_TYPE )  ;  }}"
759,public void set Applying Opacity To Layers Enabled ( boolean is Applying Opacity To Layers Enabled ) { lottie Drawable . set Applying Opacity To Layers Enabled ( is Applying Opacity To Layers Enabled )  ; }
760,public float get Pad Bottom (  ) { if  ( pad Bottom == -1 )      return get Bottom Height (  )  ;  return pad Bottom ; }
761,"public com . anychart . core . stock . indicators . KDJ kdj ( com . anychart . data .  Table Mapping mapping,  Number k Period,  Number k MA Period,  Number d Period,  String k MA Type,  String d MA Type,  Number k Multiplier,  Number d Multiplier, com . anychart . enums .  Stock Series Type k Series Type,  String d Series Type,  String j Series Type ) { return new com . anychart . core . stock . indicators . KDJ (  String . format (  Locale . US, js Base + "" . kdj ( %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, k Period, k MA Period, d Period, wrap Quotes ( k MA Type ) , wrap Quotes ( d MA Type ) , k Multiplier, d Multiplier,  ( k Series Type != null )  ? k Series Type . get Js Base (  )  : null, wrap Quotes ( d Series Type ) , wrap Quotes ( j Series Type )  )  )  ; }"
762,public static  Edit List singleton (  Edit edit ) {  Edit List res = new  Edit List ( 1 )  ;  res . add ( edit )  ;  return res ; }
763,"private void assert Read End Of Stream ( boolean format Required ) { clear Format Holder And Input Buffer (  )  ;  int result = sample Queue . read ( format Holder, input Buffer, format Required, true, 0 )  ;  assert That ( result )  . is Equal To ( RESULT_BUFFER_READ )  ;  // format Holder should not be populated .  assert That ( format Holder . format )  . is Null (  )  ;  // input Buffer should not contain sample data, but end of stream flag should be set .  assert Input Buffer Contains No Sample Data (  )  ;  assert That ( input Buffer . is End Of Stream (  )  )  . is True (  )  ;  assert That ( input Buffer . is Decode Only (  )  )  . is False (  )  ;  assert That ( input Buffer . is Encrypted (  )  )  . is False (  )  ; }"
764,protected  Optional< Long> get Timeout (  ) { return  Optional . empty (  )  ; }
765,public static void on Low Memory (  ) { // API>14采用注册回调的方式执行插件中该方法 if  (  Build . VERSION . SDK_INT >= 14 )  {     return ;  } // 遍历插件的 Application对象，并调用其on Low Memory  Plugin Application Client . notify On Low Memory (  )  ; }
766,"public static void await Done (  Finalization Predicate predicate ) { if  ( predicate . is Done (  )  )  {     return ;  } final long timeout Seconds = timeout Seconds (  )  ;  final long deadline =  System . nano Time (  )  + SECONDS . to Nanos ( timeout Seconds )  ;  do {      System . run Finalization (  )  ;      if  ( predicate . is Done (  )  )  {         return ;      }      Count Down Latch done = new  Count Down Latch ( 1 )  ;      create Unreachable Latch Finalizer ( done )  ;      await ( done )  ;      if  ( predicate . is Done (  )  )  {         return ;      } } while  (  System . nano Time (  )  - deadline < 0 )  ;  throw format Runtime Exception ( "" Predicate did not become true within %d second timeout"", timeout Seconds )  ; }"
767,public int get Ancestor Vertical Padding (  ) { return  ( m Parent != null ? m Parent . get Ancestor Vertical Padding (  )  + m Parent . get Vertical Padding (  )  : 0 )  ; }
768,public boolean remove Range ( @ Non Null final  Range range ) { if  ( range instanceof  Allocated Unicast Range )  {     return allocated Unicast Ranges . remove ( range )  ;  } else if  ( range instanceof  Allocated Group Range )  {     return allocated Group Ranges . remove ( range )  ;  } else if  ( range instanceof  Allocated Scene Range )  {     return allocated Scene Ranges . remove ( range )  ;  } return false ; }
769,"public com . anychart . core . stock . scrollerseries .  Range Area color Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
770,public synchronized void clear Annotations (  ) { m Annotations . clear (  )  ;  m String XY . clear (  )  ; }
771,public  Submodule Add Command set Name (  String name ) { this . name = name ;  return this ; }
772,private static  String get Column Name For Week ( final int week ) { return  Song Play Count Columns . WEEK_PLAY_COUNT +  String . value Of ( week )  ; }
773,public static  List< Object [  ] > parameters (  ) { return  Buffered Source Factory .  Companion . get PARAMETERIZED_TEST_VALUES (  )  ; }
774,"public void update Rssi Reading ( final long timestamp, final int rssi Reading ) { add To Rssi Log ( timestamp, rssi Reading )  ; }"
775,"public void test Static Field Getter Setter (  )  throws  Exception{  Ct Class clazz = pool . make Class ( "" Has Static Field Getter Setter"" )  ;  clazz . set Superclass ( pool . get ( ""java . lang .  Object"" )  )  ;   Ct Field field = new  Ct Field (  Ct Class . boolean Type, ""broken"", clazz )  ;  field . set Modifiers (  Modifier . STATIC )  ;  clazz . add Field ( field, ""true"" )  ;  clazz . add Method (  Ct New Method . getter ( ""is Broken"", field )  )  ;  clazz . add Method (  Ct New Method . setter ( ""set Broken"", field )  )  ;   Class _class = clazz . to Class ( capability )  ;   Object object = _class . get Constructor (  )  . new Instance (  )  ;  set ( _class, object, false )  ;  check ( _class, object, false )  ; }"
776,public static  String get User Data (  ) { return  User Data Store . get Hashed User Data (  )  ; }
777,"public com . anychart . charts .  Scatter enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
778,public synchronized int get Queued Assets (  ) { return load Queue . size + tasks . size ; }
779,public final int get S Height (  ) { return s Height ; }
780,"public void reset ( long new Position ) { flac Reset ( native Decoder Context, new Position )  ; }"
781,public  Verify Signature Command add Names (  Collection< String> names ) { check Callable (  )  ;  names To Check . add All ( names )  ;  return this ; }
782,public float get Stack Space (  ) { return m Stack Space ; }
783,public static void set Application Name (  String application Name ) {  Facebook Sdk . application Name = application Name ; }
784,"public void end (  Interpretation Context ec,  String name ) {}"
785,"public static boolean set Auto Brightness Enabled ( final boolean enabled ) { return  Settings .  System . put Int (  Utils . get App (  )  . get Content Resolver (  ) ,  Settings .  System . SCREEN_BRIGHTNESS_MODE, enabled ?  Settings .  System . SCREEN_BRIGHTNESS_MODE_AUTOMATIC :  Settings .  System . SCREEN_BRIGHTNESS_MODE_MANUAL )  ; }"
786,"public void to Json (  Boolean stringify ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Json ( %s )  ; "", stringify )  )  ; }"
787,"public int process File (  Uri selected File Uri,  Al Customization Settings al Customization Settings,  Pre Post UI Methods pre Post UI Methods ) { if  ( selected File Uri != null )  {      String file Name ;      try {         long max File Size = al Customization Settings . get Max Attachment Size Allowed (  )  * 1024 * 1024 ;           Cursor return Cursor = context . get Content Resolver (  )  . query ( selected File Uri, null, null, null, null )  ;          if  ( return Cursor != null )  {             int size Index = return Cursor . get Column Index (  Openable Columns . SIZE )  ;              return Cursor . move To First (  )  ;               Long file Size = return Cursor . get Long ( size Index )  ;              return Cursor . close (  )  ;              if  ( file Size > max File Size )  {                  Utils . print Log ( context, TAG, context . get Resources (  )  . get String ( R . string . info_attachment_max_allowed_file_size )  )  ;                  return MAX_SIZE_EXCEEDED ;              }         }          String mime Type =  File Utils . get Mime Type By Content Uri Or Other ( context, selected File Uri )  ;          if  (  Text Utils . is Empty ( mime Type )  )  {             return MIME_TYPE_EMPTY ;          }         if  ( !check Mime Type ( mime Type, al Customization Settings )  )  {             // Toast . make Text ( this, R . string . info_file_attachment_mime_type_not_supported,  Toast . LENGTH_LONG )  . show (  )  ;              return MIME_TYPE_NOT_SUPPORTED ;          }          String time Stamp = new  Simple Date Format ( ""yyyy M Mdd_H Hmmss"" )  . format ( new  Date (  )  )  ;          //because images are selected multiple and quickly  ( milliseconds better in such a situation )          time Stamp = time Stamp + ""_"" +  System . current Time Millis (  )  ;          file Name =  File Utils . get File Name ( context, selected File Uri )  ;           String file Format =  File Utils . get File Format ( file Name )  ;           String file Name To Write ;          if  (  Text Utils . is Empty ( file Format )  )  {              String format =  File Utils . get File Format (  File Utils . get File ( context, selected File Uri )  . get Absolute Path (  )  )  ;              if  (  Text Utils . is Empty ( format )  )  {                 return FORMAT_EMPTY ;              }             file Name To Write = time Stamp + "" . "" + format ;          } else {             file Name To Write = time Stamp + "" . "" + file Format ;          }          File media File =  File Client Service . get File Path ( file Name To Write, context . get Application Context (  ) , mime Type )  ;          new  File Task Async ( media File, selected File Uri, context, pre Post UI Methods )  . execute On Executor (  Async Task . THREAD_POOL_EXECUTOR )  ;      } catch  (  Exception e )  {         e . print Stack Trace (  )  ;          return EXCEPTION_OCCURED ;      } } return FILE_PROCESSING_DONE ; }"
788,"public  Attribute Info copy (  Const Pool new Cp,  Map< String,  String> classnames ) {  Bootstrap Method [  ]  methods = get Methods (  )  ;   Const Pool this Cp = get Const Pool (  )  ;  for  ( int i = 0 ;  i < methods . length ;  i++ )  {      Bootstrap Method m = methods [ i ]  ;      m . method Ref = this Cp . copy ( m . method Ref, new Cp, classnames )  ;      for  ( int k = 0 ;  k < m . arguments . length ;  k++ )  m . arguments [ k ]  = this Cp . copy ( m . arguments [ k ] , new Cp, classnames )  ;  } return new  Bootstrap Methods Attribute ( new Cp, methods )  ; }"
789,public double [  ]  get Initial Range (  ) { return get Initial Range ( 0 )  ; }
790,public int read Annotation (  ) { check Type ( ENCODED_ANNOTATION )  ;  type = MUST_READ ;  annotation Type =  Leb128 . read Unsigned Leb128 ( in )  ;  return  Leb128 . read Unsigned Leb128 ( in )  ; }
791,"public boolean matches (  Object node,  Context context ) { short type = context . get Navigator (  )  . get Node Type ( node )  ;  return type == ELEMENT_NODE || type == TEXT_NODE || type == COMMENT_NODE || type == PROCESSING_INSTRUCTION_NODE ; }"
792,"private void set Alpha Adapter (  ) {  Animation Adapter anim Card Array Adapter = new  Alpha In Animation Adapter ( m Card Array Adapter )  ;  anim Card Array Adapter . set Abs List View ( m List View )  ;  m List View . set External Adapter ( anim Card Array Adapter, m Card Array Adapter )  ; }"
793,public int get SMTP Port (  ) { return get Smtp Port (  )  ; }
794,"private boolean is ASCII ( byte [  ]  data, int start ) { // look at the first 4 bytes for  ( int i = start ;  i < start + 4 ;  i++ )  {     // get the byte as a character     char c =  ( char )   ( data [ i ]  & 0xff )  ;      if  ( c >= '0' && c <= '9' )  {         continue ;      } else if  ( c >= 'a' && c <= 'f' )  {         continue ;      } else if  ( c >= 'A' && c <= 'F' )  {         continue ;      } else {         // out of range         return false ;      } } // all were in range, so it is ASCII return true ; }"
795,public  Matrix4 set To Scale ( @ Non Null  Vector3 vec ) { identity (  )  ;  m [ M00 ]  = vec . x ;  m [ M11 ]  = vec . y ;  m [ M22 ]  = vec . z ;  return this ; }
796,"public static  Map Table Data create (  String table Name,  List< Object> map List ) { return create ( table Name, map List, null )  ; }"
797,protected final  Context get Context (  ) { return context ; }
798,"private  String find Remote Tracking Branch (  String remote,  String merge Ref ) {  Remote Config remote Config ;  try {     remote Config = new  Remote Config ( config, remote )  ;  } catch  ( URI Syntax Exception e )  {     return null ;  } for  (  Ref Spec ref Spec : remote Config . get Fetch Ref Specs (  )  )  {     if  ( ref Spec . match Source ( merge Ref )  )  {          Ref Spec expanded = ref Spec . expand From Source ( merge Ref )  ;          return expanded . get Destination (  )  ;      } } return null ; }"
799,private void setup Arrays (  Rop Method method ) {  Basic Block List blocks = method . get Blocks (  )  ;  int sz = blocks . size (  )  ;  for  ( int i = 0 ;  i < sz ;  i++ )  {      Basic Block one = blocks . get ( i )  ;      int label = one . get Label (  )  ;       Insn insn = one . get Insns (  )  . get ( 0 )  ;      starts [ label ]  = new  Code Address ( insn . get Position (  )  )  ;       Source Position pos = one . get Last Insn (  )  . get Position (  )  ;      lasts [ label ]  = new  Code Address ( pos )  ;      ends [ label ]  = new  Code Address ( pos )  ;  }}
800,public  Zero Top Padding Text View get Month (  ) { return m Month ; }
801,"private  Publication Settings deserialize Publication Settings ( final  Json Object json Object ) { if  ( !json Object . has ( ""publish"" )  )      return null ;  final  Json Object publish = json Object . get ( ""publish"" )  . get As Json Object (  )  ;  final  String hex Address = publish . get ( ""address"" )  . get As String (  )  ;  final int publish Address ;  UUID uuid = null ;  if  (  Mesh Parser Utils . is Uuid Pattern ( hex Address )  )  {     uuid = UUID . from String (  Mesh Parser Utils . format Uuid ( hex Address )  )  ;      publish Address =  Mesh Address . generate Virtual Address ( uuid )  ;  } else {     publish Address =  Integer . parse Int ( hex Address, 16 )  ;  } final int index = publish . get ( ""index"" )  . get As Int (  )  ;  final int ttl = publish . get ( ""ttl"" )  . get As Byte (  )  ;  // Previous version stored the publication period as resolution and steps .  // Now it's stored as an interval in ms final int publication Resolution ;  final int publication Steps ;  if  ( !publish . get ( ""period"" )  . is Json Object (  )  )  {     final int period = publish . get ( ""period"" )  . get As Int (  )  ;      if  ( period % 600000 == 0 )  {         publication Resolution = RESOLUTION_10_M ;          publication Steps = period / 600000 ;      } else if  ( period % 10000 == 0 )  {         publication Resolution = RESOLUTION_10_S ;          publication Steps = period / 10000 ;      } else if  ( period % 1000 == 0 )  {         publication Resolution = RESOLUTION_1_S ;          publication Steps = period / 1000 ;      } else if  ( period % 100 == 0 )  {         publication Resolution = RESOLUTION_100_MS ;          publication Steps = period / 100 ;      } else {         //  This is to maintain backward compatibility between older json files         publication Resolution = period & 0x03 ;          publication Steps = period >> 6 ;      } } else {     final  Json Object period Json = publish . get ( ""period"" )  . get As Json Object (  )  ;      publication Steps = period Json . get ( ""number Of Steps"" )  . get As Int (  )  ;      publication Resolution =  Publication Settings . deserialize Publication Resolution ( period Json . get ( ""resolution"" )  . get As Int (  )  )  ;  } final int publish Retransmit Count = publish . get ( ""retransmit"" )  . get As Json Object (  )  . get ( ""count"" )  . get As Int (  )  ;  //  Here we should import the interval in to retransmit interval steps to maintain compatibility with i OS // as well as the internal publication api int publish Retransmit Interval Steps = publish . get ( ""retransmit"" )  . get As Json Object (  )  . get ( ""interval"" )  . get As Int (  )  ;  if  ( publish Retransmit Interval Steps >= 50 )  {     publish Retransmit Interval Steps =  Publication Settings . parse Retransmit Interval Steps ( publish Retransmit Interval Steps )  ;  } final boolean credentials = publish . get ( ""credentials"" )  . get As Int (  )  == 1 ;  // Set the values final  Publication Settings publication Settings = new  Publication Settings (  )  ;  publication Settings . set Publish Address ( publish Address )  ;  publication Settings . set Label UUID ( uuid )  ;  publication Settings . set Publish Ttl ( ttl )  ;  publication Settings . set Publication Steps ( publication Steps )  ;  publication Settings . set Publication Resolution ( publication Resolution )  ;  publication Settings . set Publish Retransmit Count ( publish Retransmit Count )  ;  publication Settings . set Publish Retransmit Interval Steps ( publish Retransmit Interval Steps )  ;  publication Settings . set Credential Flag ( credentials )  ;  return publication Settings ; }"
802,"protected void draw Dimmed Layer ( @ Non Null  Canvas canvas ) { canvas . save (  )  ;  if  ( m Circle Dimmed Layer )  {     canvas . clip Path ( m Circular Path,  Region .  Op . DIFFERENCE )  ;  } else {     canvas . clip Rect ( m Crop View Rect,  Region .  Op . DIFFERENCE )  ;  } canvas . draw Color ( m Dimmed Color )  ;  canvas . restore (  )  ;  if  ( m Circle Dimmed Layer )  {     //  Draw 1px stroke to fix antialias     canvas . draw Circle ( m Crop View Rect . center X (  ) , m Crop View Rect . center Y (  ) ,  Math . min ( m Crop View Rect . width (  ) , m Crop View Rect . height (  )  )  / 2 . f, m Dimmed Stroke Paint )  ;  }}"
803,"public void test Eviction_max Weight_zero (  ) {  Counting Removal Listener< Integer,  Integer> removal Listener = counting Removal Listener (  )  ;   Identity Loader< Integer> loader = identity Loader (  )  ;  //  Even numbers are free, odd are too expensive  Weigher< Integer,  Integer> evens Only = new  Weigher< Integer,  Integer> (  )  {     @ Override     public int weigh (  Integer k,  Integer v )  {         return k % 2 ;      } } ;   Loading Cache< Integer,  Integer> cache =  Cache Builder . new Builder (  )  . concurrency Level ( 1 )  . maximum Weight ( 0 )  . weigher ( evens Only )  . removal Listener ( removal Listener )  . build ( loader )  ;  // 1 won't be cached assert That ( cache . get Unchecked ( 1 )  )  . is Equal To ( 1 )  ;  assert That ( cache . as Map (  )  . key Set (  )  )  . is Empty (  )  ;   Cache Testing . process Pending Notifications ( cache )  ;  assert That ( removal Listener . get Count (  )  )  . is Equal To ( 1 )  ;  // 2 will be cached assert That ( cache . get Unchecked ( 2 )  )  . is Equal To ( 2 )  ;  assert That ( cache . as Map (  )  . key Set (  )  )  . contains Exactly ( 2 )  ;   Cache Testing . process Pending Notifications ( cache )  ;   Cache Testing . check Valid State ( cache )  ;  assert That ( removal Listener . get Count (  )  )  . is Equal To ( 1 )  ;  // 4 will be cached assert That ( cache . get Unchecked ( 4 )  )  . is Equal To ( 4 )  ;  assert That ( cache . as Map (  )  . key Set (  )  )  . contains Exactly ( 2, 4 )  ;   Cache Testing . process Pending Notifications ( cache )  ;  assert That ( removal Listener . get Count (  )  )  . is Equal To ( 1 )  ;  // 5 won't be cached, won't dump cache assert That ( cache . get Unchecked ( 5 )  )  . is Equal To ( 5 )  ;  assert That ( cache . as Map (  )  . key Set (  )  )  . contains Exactly ( 2, 4 )  ;   Cache Testing . process Pending Notifications ( cache )  ;  assert That ( removal Listener . get Count (  )  )  . is Equal To ( 2 )  ;  //  Should we pepper more of these calls throughout the above?  Where?  Cache Testing . check Valid State ( cache )  ; }"
804,"private static  Geometry create Geometry (  String geometry Type, JSON Array geometry Array )  throws JSON Exception{ switch ( geometry Type )  {     case POINT:         return create Point ( geometry Array )  ;      case MULTIPOINT:         return create Multi Point ( geometry Array )  ;      case LINESTRING:         return create Line String ( geometry Array )  ;      case MULTILINESTRING:         return create Multi Line String ( geometry Array )  ;      case POLYGON:         return create Polygon ( geometry Array )  ;      case MULTIPOLYGON:         return create Multi Polygon ( geometry Array )  ;      case GEOMETRY_COLLECTION:         return create Geometry Collection ( geometry Array )  ;  } return null ; }"
805,"public  Instant instant (  ) { long usec = micros (  )  ;  long secs = usec / 1000000 L ;  long nanos =  ( usec % 1000000 L )  * 1000 L ;  return  Instant . of Epoch Second ( secs, nanos )  ; }"
806,"public com . anychart . core . grids .  Map Settings horizontal (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . horizontal ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
807,"private void read Scratch (  Extractor Input input, int required Length )  throws IO Exception,  Interrupted Exception{ if  ( scratch . limit (  )  >= required Length )  {     return ;  } if  ( scratch . capacity (  )  < required Length )  {     scratch . reset (  Arrays . copy Of ( scratch . data,  Math . max ( scratch . data . length * 2, required Length )  ) , scratch . limit (  )  )  ;  } input . read Fully ( scratch . data, scratch . limit (  ) , required Length - scratch . limit (  )  )  ;  scratch . set Limit ( required Length )  ; }"
808,public void spy Activity_has Same Base Context (  ) {  Activity activity =  Robolectric . setup Activity (  Activity . class )  ;   Activity spy Activity = spy ( activity )  ;  assert That ( activity . get Base Context (  )  )  . is Equal To ( spy Activity . get Base Context (  )  )  ; }
809,"public T delay Rotation Y ( float end ) { get Delayed Processor (  )  . add Process ( ROTATION_Y, end )  ;  return self (  )  ; }"
810,"public  Task<T Continuation Result> on Success Task ( @ Non Null  Executor executor, @ Non Null  Success Continuation< Load Bundle Task Progress, T Continuation Result> success Continuation ) { return delegate . on Success Task ( executor, success Continuation )  ; }"
811,public void set Vertex Data (  ) { if  ( use GPU )  {     current Attributes = GPU_ATTRIBUTES ;      current Vertex Size = GPU_VERTEX_SIZE ;  /*			 * if ( mode ==  Align Mode .  Particle Direction ) { current Attributes = GPU_EXT_ATTRIBUTES ;  current Vertex Size =			 * GPU_EXT_VERTEX_SIZE ;  } else{ current Attributes = GPU_ATTRIBUTES ;  current Vertex Size = GPU_VERTEX_SIZE ;  }			 */ } else {     current Attributes = CPU_ATTRIBUTES ;      current Vertex Size = CPU_VERTEX_SIZE ;  }}
812,public void set Scale Type (  Scale Type scale Type ) { if  ( scale Type != m Scale Type )  {     m Scale Type = scale Type ;      m Zoom = 1 ;      m Zoom Offset X = m Zoom Offset Y = 0 ;      m Crop Overlay View . reset Crop Overlay View (  )  ;      request Layout (  )  ;  }}
813,"public  Abstract Header Footer Wrapper Adapter set Adapter ( @ Non Null  Recycler View .  Adapter<? extends  Recycler View .  View Holder> adapter ) { if  ( m Wrapped Adapter != null )  {     throw new  Illegal State Exception ( ""set Adapter (  )  can call only once"" )  ;  } m Wrapped Adapter = adapter ;  m Header Adapter = on Create Header Adapter (  )  ;  m Footer Adapter = on Create Footer Adapter (  )  ;  final boolean has Stable Ids = adapter . has Stable Ids (  )  ;  m Header Adapter . set Has Stable Ids ( has Stable Ids )  ;  m Footer Adapter . set Has Stable Ids ( has Stable Ids )  ;  set Has Stable Ids ( has Stable Ids )  ;  m Header Adapter Tag = add Adapter ( m Header Adapter )  ;  m Wrapped Adapter Tag = add Adapter ( m Wrapped Adapter )  ;  m Footer Adapter Tag = add Adapter ( m Footer Adapter )  ;  return this ; }"
814,public long get Bit Rate As Number (  ) { return  (  (  Integer )  content . get ( FIELD_BITRATE )  )  . long Value (  )  ; }
815,"public void process (  Postcard postcard,  Interceptor Callback callback ) { callback . on Continue ( postcard )  ; }"
816,"public  Realm Query<E> less Than Or Equal To (  String field Name, int value ) { realm . check If Valid (  )  ;   Field Descriptor fd = schema . get Field Descriptors ( field Name,  Realm Field Type . INTEGER )  ;  this . query . less Than Or Equal ( fd . get Column Keys (  ) , fd . get Native Table Pointers (  ) , value )  ;  return this ; }"
817,"public static  Immutable List< String> expand At Files (  Iterable< String> args,  Immutable Map< Cell Name,  Abs Path> cell Mapping ) { //  Linked Hash Set is used to preserve insertion order, so that a path can be printed  Set< String> expansion Path = new  Linked Hash Set<> (  )  ;  return expand Flag Files Recursively ( args, cell Mapping, expansion Path )  ; }"
818,"public  Remote Operation Result<T> execute (  Account account,  Context context ) { if  ( account == null )  {     throw new  Illegal Argument Exception ( "" Trying to execute a remote operation with a NULL  Account"" )  ;  } if  ( context == null )  {     throw new  Illegal Argument Exception ( "" Trying to execute a remote operation with a NULL  Context"" )  ;  } m Account = account ;  m Context = context . get Application Context (  )  ;  return run Operation (  )  ; }"
819,public int get Rop Result Reg (  ) { return rop Result Reg ; }
820,"public static boolean equal ( @ Nullable  Object a, @ Nullable  Object b ) { return a == b ||  ( a != null && a . equals ( b )  )  ; }"
821,"public com . anychart . core . lineargauge .  Scale Bar parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
822,"public void object Adapter Delegates String Names And Values (  )  throws  Exception{  Json Adapter< String> string Adapter = new  Json Adapter< String> (  )  {     @ Override     public  String from Json (  Json Reader reader )  throws IO Exception {         return reader . next String (  )  . to Upper Case (  Locale . US )  ;      }     @ Override     public void to Json (  Json Writer writer, @ Nullable  String value )  {         throw new  Unsupported Operation Exception (  )  ;      } } ;   Moshi moshi = new  Moshi .  Builder (  )  . add (  String . class, string Adapter )  . build (  )  ;   Json Adapter< Object> object Adapter = moshi . adapter (  Object . class )  ;   Map< String,  String> value =  (  Map< String,  String> )  object Adapter . from Json ( ""{\""a\"":\""b\"", \""c\"":\""d\""}"" )  ;  assert That ( value )  . contains Exactly ( ""A"", ""B"", ""C"", ""D"" )  ; }"
823,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
824,"public void on Received Client Cert Request (  Web View view,  Client Cert Request request ) { //  Check if there is some plugin which can resolve this certificate request  Plugin Manager plugin Manager = this . parent Engine . plugin Manager ;  if  ( plugin Manager != null && plugin Manager . on Received Client Cert Request ( null, new  Cordova Client Cert Request ( request )  )  )  {     parent Engine . client . clear Load Timeout Timer (  )  ;      return ;  } //  By default pass to  Web View Client super . on Received Client Cert Request ( view, request )  ; }"
825,"private void handle Variants Received ( JSON Array variants ) { persist Variants ( variants )  ;  load Variants ( variants . to String (  ) , true )  ;  apply Variants And Event Bindings (  )  ; }"
826,"public  Builder set Back Buffer ( int back Buffer Duration Ms, boolean retain Back Buffer From Keyframe ) {  Assertions . check State ( !create Default Load Control Called )  ;  assert Greater Or Equal ( back Buffer Duration Ms, 0, ""back Buffer Duration Ms"", ""0"" )  ;  this . back Buffer Duration Ms = back Buffer Duration Ms ;  this . retain Back Buffer From Keyframe = retain Back Buffer From Keyframe ;  return this ; }"
827,"public com . anychart . charts .  Sparkline first Labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . first Labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
828,"static  Function< Optional< Descriptor>,  String> field Scope Function ( final  String fmt, final  Field Scope field Scope ) { return new  Function< Optional< Descriptor>,  String> (  )  {     @ Override     public  String apply (  Optional< Descriptor> opt Descriptor )  {         return  String . format ( fmt, field Scope . using Correspondence String ( opt Descriptor )  )  ;      } } ; }"
829,public  String get Property Name (  ) { return property Name ; }
830,public float get Right (  ) { return right ; }
831,"public  Quaternion look At ( @ Non Null  Vector3 look At, @ Non Null  Vector3 up Direction ) { m Tmp Vec1 . set All ( look At )  ;  m Tmp Vec2 . set All ( up Direction )  ;  //  Vectors are parallel/anti-parallel if their dot product magnitude and length product are equal final double dot Product =  Vector3 . dot ( look At, up Direction )  ;  final double dot Error =  Math . abs (  Math . abs ( dot Product )  -  ( look At . length (  )  * up Direction . length (  )  )  )  ;  if  ( dot Error <= PARALLEL_TOLERANCE )  {     //  The look and up vectors are parallel     m Tmp Vec2 . normalize (  )  ;      if  ( dot Product < 0 )  {         m Tmp Vec1 . inverse (  )  ;      }     from Rotation Between (  World Parameters . FORWARD_AXIS, m Tmp Vec1 )  ;      return this ;  } //  Find the forward and up vectors  Vector3 . ortho Normalize ( m Tmp Vec1, m Tmp Vec2 )  ;  //  Create the right vector m Tmp Vec3 . cross And Set ( m Tmp Vec2, m Tmp Vec1 )  ;  from Axes ( m Tmp Vec3, m Tmp Vec2, m Tmp Vec1 )  ;  return this ; }"
832,public static  Joiner on (  String separator ) { return new  Joiner ( separator )  ; }
833,public static  Internet Domain Name from (  String domain ) { return new  Internet Domain Name ( check Not Null ( domain )  )  ; }
834,"protected void handle Flow_ Load Local Cache (  String cache Html ) {  Message msg = main Handler . obtain Message ( CLIENT_CORE_MSG_PRE_LOAD )  ;  if  ( ! Text Utils . is Empty ( cache Html )  )  {     msg . arg1 = PRE_LOAD_WITH_CACHE ;      msg . obj = cache Html ;  } else {      Sonic Utils . log ( TAG,  Log . INFO, ""session ( "" + s Id + "" )  run Sonic Flow has no cache, do first load flow . "" )  ;      msg . arg1 = PRE_LOAD_NO_CACHE ;  } main Handler . send Message ( msg )  ;  for  (  Weak Reference< Sonic Session Callback> ref : session Callback List )  {      Sonic Session Callback callback = ref . get (  )  ;      if  ( callback != null )  {         callback . on Session Load Local Cache ( cache Html )  ;      } }}"
835,public  Entity<?> get Entity (  ) { return entity ; }
836,protected void set Min Y ( short min Y ) { this . min Y = min Y ; }
837,protected  List< Subscription Info> get Active Subscription Info List (  ) { return subscription List ; }
838,"private  Tok next Token (  ) { final int slen = stream . length ;  if  ( resend )  {     resend = false ;      return tok ;  } else {     tok = new  Tok (  )  ;      // skip whitespace     while  ( loc < slen && PDF File . is White Space ( stream [ loc ]  )  )  {         loc++ ;      }     if  ( loc >= slen )  {         tok . type =  Tok . EOF ;          return tok ;      } else {         int c = stream [ loc++ ]  ;          // examine the character:         while  ( c == '%' )  {             // skip comments             final  String Buffer comment = new  String Buffer (  )  ;              while  ( loc < slen && c != '\n' )  {                 comment . append (  ( char )  c )  ;                  c = stream [ loc++ ]  ;              }             if  ( loc < slen )  {                 // eat the newline                 c = stream [ loc++ ]  ;                  if  ( c == '\r' )  {                     // eat a following return                     c = stream [ loc++ ]  ;                  }             }             if  ( !RELEASE )  {                 debug ( "" Read comment: "" + comment . to String (  ) , -1 )  ;              }         }         switch ( c )  {             case ' [ ':                 tok . type =  Tok . ARYB ;                  break ;              case ' ] ':                 tok . type =  Tok . ARYE ;                  break ;              case ' ( ':                 // read a string                 tok . type =  Tok . STR ;                  tok . name = read String (  )  ;                  break ;              case '{':                 tok . type =  Tok . BRCB ;                  break ;              case '}':                 tok . type =  Tok . BRCE ;                  break ;              case '<':                 if  ( stream [ loc++ ]  == '<' )  {                     tok . type =  Tok . BRKB ;                  } else {                     loc-- ;                      tok . type =  Tok . STR ;                      tok . name = read Byte Array (  )  ;                  }                 break ;              case '/':                 tok . type =  Tok . NAME ;                  tok . name = read Name (  )  ;                  break ;              case ' . ':             case '-':             case '0':             case '1':             case '2':             case '3':             case '4':             case '5':             case '6':             case '7':             case '8':             case '9':                 loc-- ;                  tok . type =  Tok . NUM ;                  tok . value = read Num (  )  ;                  break ;              default:                 if  ( c == '>' && stream [ loc++ ]  == '>' )  {                     tok . type =  Tok . BRKE ;                  } else if  (  ( c >= 'a' && c <= 'z' )  ||  ( c >= 'A' && c <= 'Z' )  || c == '\'' || c == '""' )  {                     loc-- ;                      tok . type =  Tok . CMD ;                      tok . name = read Name (  )  ;                  } else {                      System . out . println ( "" Encountered character: "" + c + ""  ( "" +  ( char )  c + "" ) "" )  ;                      tok . type =  Tok . UNK ;                  }         }         if  ( !RELEASE )  {             debug ( "" Read token: "" + tok, -1 )  ;          }         return tok ;      } }}"
839,public void start After Prepared (  ) { if  ( !m Had Prepared )  {     prepare Video (  )  ;  } try {     if  ( get GSY Video Manager (  )  != null )  {         get GSY Video Manager (  )  . start (  )  ;      }     set State And Ui ( CURRENT_STATE_PLAYING )  ;      if  ( get GSY Video Manager (  )  != null && m Seek On Start > 0 )  {         get GSY Video Manager (  )  . seek To ( m Seek On Start )  ;          m Seek On Start = 0 ;      } } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  } add Texture View (  )  ;  create Net Work State (  )  ;  listener Net Work State (  )  ;  m Had Play = true ;  if  ( m Texture View != null )  {     m Texture View . on Resume (  )  ;  } if  ( m Pause Before Prepared )  {     on Video Pause (  )  ;      m Pause Before Prepared = false ;  }}
840,public void set Ambient Color ( float [  ]  color ) { m Ambient Color [ 0 ]  = color [ 0 ]  ;  m Ambient Color [ 1 ]  = color [ 1 ]  ;  m Ambient Color [ 2 ]  = color [ 2 ]  ;  if  ( m Lights Vertex Shader Fragment != null )      m Lights Vertex Shader Fragment . set Ambient Color ( m Ambient Color )  ; }
841,boolean request Landscape Lock (  ) { int requested Orientation = activity . get Requested Orientation (  )  ;  if  ( requested Orientation == SCREEN_ORIENTATION_SENSOR_LANDSCAPE )  {     //  We're already locked .      return false ;  } activity . set Requested Orientation ( SCREEN_ORIENTATION_SENSOR_LANDSCAPE )  ;  // if we're not already landscape .  return is Portrait (  )  ; }
842,public boolean key Typed ( char character ) {  Actor target = keyboard Focus == null ? root : keyboard Focus ;   Input Event event =  Pools . obtain (  Input Event . class )  ;  event . set Stage ( this )  ;  event . set Type (  Input Event .  Type . key Typed )  ;  event . set Character ( character )  ;  target . fire ( event )  ;  boolean handled = event . is Handled (  )  ;   Pools . free ( event )  ;  return handled ; }
843,public void clear ( boolean keep Front Period Uid ) {  Media Period Holder front = get Front Period (  )  ;  if  ( front != null )  {     old Front Period Uid = keep Front Period Uid ? front . uid : null ;      old Front Period Window Sequence Number = front . info . id . window Sequence Number ;      front . release (  )  ;      remove After ( front )  ;  } else if  ( !keep Front Period Uid )  {     old Front Period Uid = null ;  } playing = null ;  loading = null ;  reading = null ;  length = 0 ; }
844,"public static byte [  ]  decode (  String s, int options )  throws java . io . IO Exception{ if  ( s == null )  {     throw new  Null Pointer Exception ( "" Input string was null . "" )  ;  } // end if byte [  ]  bytes ;  try {     bytes = s . get Bytes ( PREFERRED_ENCODING )  ;  }// end try  catch  ( java . io .  Unsupported Encoding Exception uee )  {     bytes = s . get Bytes (  )  ;  } // end catch //</change> //  Decode bytes = decode ( bytes, 0, bytes . length, options )  ;  //  Check to see if it's gzip-compressed // GZIP  Magic  Two- Byte  Number: 0x8b1f  ( 35615 )  boolean dont Gunzip =  ( options & DONT_GUNZIP )  != 0 ;  if  (  ( bytes != null )  &&  ( bytes . length >= 4 )  &&  ( !dont Gunzip )  )  {     int head =  (  ( int )  bytes [ 0 ]  & 0xff )  |  (  ( bytes [ 1 ]  << 8 )  & 0xff00 )  ;      if  ( java . util . zip . GZIP Input Stream . GZIP_MAGIC == head )  {         java . io .  Byte Array Input Stream bais = null ;          java . util . zip . GZIP Input Stream gzis = null ;          java . io .  Byte Array Output Stream baos = null ;          byte [  ]  buffer = new byte [ 2048 ]  ;          int length = 0 ;          try {             baos = new java . io .  Byte Array Output Stream (  )  ;              bais = new java . io .  Byte Array Input Stream ( bytes )  ;              gzis = new java . util . zip . GZIP Input Stream ( bais )  ;              while  (  ( length = gzis . read ( buffer )  )  >= 0 )  {                 baos . write ( buffer, 0, length )  ;              }             // end while: reading input             //  No error?  Get new bytes .              bytes = baos . to Byte Array (  )  ;          }// end try          catch  ( java . io . IO Exception e )  {             e . print Stack Trace (  )  ;          //  Just return originally-decoded bytes         } finally // end catch         {             try {                 baos . close (  )  ;              } catch  (  Exception e )  {             }             try {                 gzis . close (  )  ;              } catch  (  Exception e )  {             }             try {                 bais . close (  )  ;              } catch  (  Exception e )  {             }         }     // end finally     } // end if: gzipped } return bytes ; }"
845,"public com . anychart . data .  Table Selectable select (  String start Date,  Number end Date,  String interval Unit,  Number interval Count ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select ( %s, %s, %s, %s )  ; "", wrap Quotes ( start Date ) , end Date, wrap Quotes ( interval Unit ) , interval Count )  )  ;  return this ; }"
846,"public void set Adapter (  Card Stack Adapter adapter ) { this . m Adapter = adapter ;  m Adapter . set Adapter Params ( this )  ;  for  ( int i = 0 ;  i < m Adapter . get Count (  )  ;  i++ )  {     m Adapter . add View ( i )  ;  } if  ( m Show Init Animation )  {     post Delayed ( this::restore Cards, 500 )  ;  }}"
847,"public T get Tree ( final int nth, final  Class<T> clazz ) { final  Abstract Tree Iterator t = trees [ nth ]  ;  return t . matches == current Head ?  ( T )  t : null ; }"
848,"void deserialize ( final  String serialized Blob )  throws  Authentication Exception{ if  (  String Extensions . is Null Or Blank ( serialized Blob )  )  {     throw new  Illegal Argument Exception ( ""serialized Blob"" )  ;  } if  ( m Broker Proxy . can Switch To Broker ( m Authority )  !=  Broker Proxy .  Switch To Broker . CANNOT_SWITCH_TO_BROKER )  {     throw new  Usage Authentication Exception ( ADAL Error . FAIL_TO_IMPORT, "" Failed to import the serialized blob "" + ""because broker is enabled . "" )  ;  } //  If the serialized blob is from an app which already integrates ADAL having authority migration support, the token cache // item already has the authority updated with preferred cache location  ( login . windows . net is the preferred cache location )  ;  //  If the blob is from an old version of ADAL, the token cache item contains the passed in authority  (  Note: most of microsoft first // party app uses  Token  Share  Library today are using login . windows . net )  .  //  If the app receives the blob has the version of adal supporting authority migration, lookup will always go to preferred location // first, we'll fall back to passed in authority host and all the aliased hosts if necessary ;   If app receives the blob has the old // version of adal, since all the apps using token share library are using login . windows . net, token lookup will keep working .  final  Token Cache Item token Cache Item = SSO State Serializer . deserialize ( serialized Blob )  ;  if  (  String Extensions . is Null Or Blank ( token Cache Item . get Authority (  )  )  ||  (  String Extensions . is Null Or Blank ( token Cache Item . get Client Id (  )  )  &&  String Extensions . is Null Or Blank ( token Cache Item . get Family Client Id (  )  )  )  )  {     throw new  Deserialization Authentication Exception ( "" Failed to deserialize the blob because authority or client id is null/empty . "" )  ;  } final  String cache Key =  Cache Key . create Cache Key ( token Cache Item )  ;  this . get Cache (  )  . set Item ( cache Key, token Cache Item )  ; }"
849,"public static byte [  ]  encode Integer (  Big Integer big Int ) { if  ( big Int == null )  {     throw new  Null Pointer Exception ( ""encode Integer called with null parameter"" )  ;  } return encode Base64 ( to Integer Bytes ( big Int ) , false )  ; }"
850,"public  Inserter< Model> inserter ( @ On Conflict int on Conflict Algorithm, boolean without Auto Id ) { return new  Inserter<> ( conn, get Schema (  ) , on Conflict Algorithm, without Auto Id )  ; }"
851,"public  Realm Query<E> less Than (  String field Name,  Date value ) { realm . check If Valid (  )  ;   Field Descriptor fd = schema . get Field Descriptors ( field Name,  Realm Field Type . DATE )  ;  this . query . less Than ( fd . get Column Keys (  ) , fd . get Native Table Pointers (  ) , value )  ;  return this ; }"
852,"public void set Sampling Rate ( int sampling Rate ) { content . put ( FIELD_SAMPLERATE, sampling Rate )  ; }"
853,"public static void retain Matching (  Collection< String> values,  Collection< String> patterns ) { if  ( patterns . is Empty (  )  )      return ;   List< String> matches = new  Array List< String> ( values . size (  )  )  ;  for  (  String p : patterns )  {      Pattern pattern =  Pattern . compile ( p )  ;      for  (  String value : values )  {         if  ( pattern . matcher ( value )  . matches (  )  )  {             matches . add ( value )  ;          }     } } values . retain All ( matches )  ; }"
854,"private  Listenable Future< Target Node Maybe Incompatible> configure Requested Target (  Cell cell,  Unconfigured Build Target unconfigured Target,  Optional< Target Configuration> global Target Configuration,  Unconfigured Target Node unconfigured Target Node ) {  Target Configuration target Configuration ;  if  ( unconfigured Target Node . get Rule Type (  )  . get Kind (  )  ==  Rule Type .  Kind . CONFIGURATION )  {     target Configuration =  Configuration For Configuration Targets . INSTANCE ;  } else {     target Configuration = target Configuration For Build Target ( unconfigured Target, global Target Configuration, unconfigured Target Node )  ;  }  Build Target configured Target = unconfigured Target . configure ( target Configuration )  ;  return get Node Job With Raw Node ( cell, configured Target,  Dependency Stack . top ( configured Target ) ,  Optional . of ( unconfigured Target Node )  )  ; }"
855,"public void test Build Rule Locally With Cache Miss (  )  throws  Interrupted Exception,  Execution Exception{ //  Create a dep for the build rule .   Build Target dep Target =  Build Target Factory . new Instance ( ""//src/com/facebook/orca:lib"" )  ;   Fake Build Rule dep = new  Fake Build Rule ( dep Target )  ;  //  The  Event Bus should be updated with events indicating how the rule was built .   Buck Event Bus buck Event Bus =  Buck Event Bus For Tests . new Instance (  )  ;   Fake Buck Event Listener listener = new  Fake Buck Event Listener (  )  ;  buck Event Bus . register ( listener )  ;  //  Replay the mocks to instantiate the  Abstract Caching Build Rule .  replay All (  )  ;   String path To Output File = ""buck-out/gen/src/com/facebook/orca/some_file"" ;   List< Step> build Steps = new  Array List<> (  )  ;   Build Rule rule To Test = create Rule ( filesystem, graph Builder,  Immutable Sorted Set . of ( dep ) , build Steps, /* post Build Steps */  Immutable List . of (  ) , path To Output File,  Immutable List . of (  )  )  ;  verify All (  )  ;  reset All (  )  ;  //  The  Build Context that will be used by the rule's build (  )  method .   Build Engine Build Context build Context = this . build Context . with Build Context ( this . build Context . get Build Context (  )  . with Event Bus ( buck Event Bus )  )  ;   Caching Build Engine caching Build Engine = caching Build Engine Factory (  )  . build (  )  ;  //  Add a build step so we can verify that the steps are executed .  build Steps . add ( new  Abstract Execution Step ( "" Some  Short  Name"" )  {     @ Override     public  Step Execution Result execute (  Execution Context context )  throws IO Exception {          Path output Path = path Resolver . get Relative Path ( rule To Test . get Source Path To Output (  )  )  ;          filesystem . mkdirs ( output Path . get Parent (  )  )  ;          filesystem . touch ( output Path )  ;          return  Step Execution Results . SUCCESS ;      } } )  ;  //  Attempting to build the rule should force a rebuild due to a cache miss .  replay All (  )  ;  caching Build Engine . set Build Rule Result ( dep,  Build Rule Success Type . FETCHED_FROM_CACHE,  Cache Result . miss (  )  )  ;   Build Result result = caching Build Engine . build ( build Context,  Test Execution Context . new Instance (  ) , rule To Test )  . get Result (  )  . get (  )  ;  assert Equals (  Build Rule Success Type . BUILT_LOCALLY, result . get Success (  )  )  ;  buck Event Bus . post (  Command Event . finished (  Command Event . started ( ""build"",  Immutable List . of (  ) ,  Paths . get ( """" ) ,  Optional Long . empty (  ) , 23 L ) ,  Exit Code . SUCCESS )  )  ;  verify All (  )  ;   Rule Key rule To Test Key = default Rule Key Factory . build ( rule To Test )  ;  assert True ( cache . has Artifact ( rule To Test Key )  )  ;  //  Verify the events logged to the  Buck Event Bus .   List< Buck Event> events = listener . get Events (  )  ;  assert That ( events, has Item (  Build Rule Event . rule Key Calculation Started ( dep, duration Tracker )  )  )  ;   Build Rule Event .  Started started =  Test Event Configurator . configure Test Event (  Build Rule Event . rule Key Calculation Started ( rule To Test, duration Tracker )  )  ;  assert That ( listener . get Events (  ) ,  Matchers . contains In Relative Order ( started,  Build Rule Event . finished ( started,  Build Rule Keys . of ( rule To Test Key ) ,  Build Rule Status . SUCCESS,  Cache Result . miss (  ) ,  Optional . empty (  ) ,  Optional . of (  Build Rule Success Type . BUILT_LOCALLY ) ,  Upload To Cache Result Type . UNCACHEABLE,  Optional . empty (  ) ,  Optional . empty (  ) ,  Optional . empty (  ) ,  Optional . empty (  ) ,  Optional . empty (  ) ,  Optional . empty (  ) ,  Optional . empty (  ) ,  Optional . empty (  ) ,  Optional . empty (  ) ,  Optional . empty (  )  )  )  )  ; }"
856,public static  Builder<E> natural Order (  ) { return new  Builder<E> (  Ordering . natural (  )  )  ; }
857,public void set Returnordrate90 (  Double returnordrate90 ) { this . returnordrate90 = returnordrate90 ; }
858,"public void set Prompt Minimums ( int min Launches Until Initial Prompt, int min Days Until Initial Prompt, int min Launches Until Next Prompt, int min Days Until Next Prompt ) { this . m Min Launches Until Initial Prompt = min Launches Until Initial Prompt ;  this . m Min Days Until Initial Prompt = min Days Until Initial Prompt ;  this . m Min Launches Until Next Prompt = min Launches Until Next Prompt ;  this . m Min Days Until Next Prompt = min Days Until Next Prompt ; }"
859,"public com . anychart . core . utils .  Series A11y a11y (  ) { return new com . anychart . core . utils .  Series A11y ( js Base + "" . a11y (  ) "" )  ; }"
860,"public com . anychart . core . cartesian . series .  Range Bar max Point Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Point Width ( %s )  ; "", width )  )  ;  return this ; }"
861,"protected  String get Relative Path (  Virtual File base,  Virtual File target ) { return  Vfs Util Core . find Relative Path ( base, target, '/' )  ; }"
862,"void rename Class (  String oldname,  String newname ) {  Map< String,  String> map = new  Hash Map< String,  String> (  )  ;  map . put ( oldname, newname )  ;  rename Class ( map )  ; }"
863,"private byte [  ]  encrypt Upper Transport PDU ( @ Non Null final  Access Message message ) { final byte [  ]  access PDU = message . get Access Pdu (  )  ;  final int akf = message . get Akf (  )  ;  // upper transport layer will always have the aszmic as 0 because the mic is always 32bit final int aszmic = message . get Aszmic (  )  ;  final byte [  ]  sequence Number = message . get Sequence Number (  )  ;  final int src = message . get Src (  )  ;  final int dst = message . get Dst (  )  ;  final byte [  ]  iv Index = message . get Iv Index (  )  ;  final byte [  ]  key ;  byte [  ]  nonce ;  if  ( akf == APPLICATION_KEY_IDENTIFIER )  {     key = message . get Device Key (  )  ;      nonce = create Device Nonce ( aszmic, sequence Number, src, dst, iv Index )  ;       Log . v ( TAG, "" Device nonce: "" +  Mesh Parser Utils . bytes To Hex ( nonce, false )  )  ;  } else {     key = message . get Application Key (  )  . get Key (  )  ;      nonce = create Application Nonce ( aszmic, sequence Number, src, dst, iv Index )  ;       Log . v ( TAG, "" Application nonce: "" +  Mesh Parser Utils . bytes To Hex ( nonce, false )  )  ;  } int trans Mic Length ;  final int encrypted Pdu Length = access PDU . length + MINIMUM_TRANSMIC_LENGTH ;  if  ( encrypted Pdu Length <= MAX_UNSEGMENTED_ACCESS_PAYLOAD_LENGTH )  {     trans Mic Length =  Secure Utils . get Trans Mic Length ( message . get Ctl (  )  )  ;  } else {     trans Mic Length =  Secure Utils . get Trans Mic Length ( message . get Aszmic (  )  )  ;  } if  (  Mesh Address . is Valid Virtual Address ( dst )  )  {     return  Secure Utils . encrypt CCM ( access PDU, key, nonce,  Mesh Parser Utils . uuid To Bytes ( message . get Label (  )  ) , trans Mic Length )  ;  } else {     return  Secure Utils . encrypt CCM ( access PDU, key, nonce, trans Mic Length )  ;  }}"
864,public void set Is Miles ( boolean miles ) { if  ( miles )      miles Only (  )  ;  else     meters And Miles (  )  ; }
865,"public void on Edit End (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . on Edit End (  )  ; "" )  ; }"
866,"public static void init (  ) { init ( """" )  ; }"
867,"public void test Pre With All Whitepsace (  ) {  String html = ""a<pre>\nb\tc </pre>d"" ;  assert Equals ( ""a<pre><br>b&nbsp ; &nbsp ; &nbsp ; &nbsp ; c&nbsp ; </pre>d"", format ( html )  )  ; }"
868,"public com . anychart . core . stock . indicators . MFI mfi ( com . anychart . data .  Table Mapping mapping,  Number period, com . anychart . enums .  Stock Series Type series Type ) { return new com . anychart . core . stock . indicators . MFI (  String . format (  Locale . US, js Base + "" . mfi ( %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, period,  ( series Type != null )  ? series Type . get Js Base (  )  : null )  )  ; }"
869,public  Input create Input (  ) { return null ; }
870,"public void set Am Or Pm ( int am Or Pm ) { m Am Pm Circles View . set Am Or Pm ( am Or Pm )  ;  m Am Pm Circles View . invalidate (  )  ;  set Value For Item ( AMPM_INDEX, am Or Pm )  ; }"
871,public  Builder disk Usage (  Disk Usage disk Usage ) { this . disk Usage = check Not Null ( disk Usage )  ;  return this ; }
872,"public void background Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . background Fill (  )  ; "" )  ; }"
873,"protected void on Populate Accessibility Node (  Component Context c,  View host,  Accessibility Node Info Compat accessibility Node ) {}"
874,"private  Immutable List< Arg> get Linker Args (  Action Graph Builder graph Builder,  Immutable List< Build Rule> rules,  Optional< Pattern> filter ) {  Immutable List .  Builder< Arg> args =  Immutable List . builder (  )  ;  args . add All ( cxx Platform . get Ldflags (  )  )  ;  if  ( dep Type ==  Linker .  Linkable Dep Type . SHARED )  {     args . add All ( get Shared Link Args ( graph Builder, rules )  )  ;  } args . add All ( get Native Linkable Input ( graph Builder, rules, filter )  . get Args (  )  )  ;  return args . build (  )  ; }"
875,"public  Completable clear Impressions (  Fetch Eligible Campaigns Response response ) {  Hash Set< String> ids To Clear = new  Hash Set<> (  )  ;  for  (  Campaign Proto .  Thick Content content : response . get Messages List (  )  )  {      String id = content . get Payload Case (  )  . equals (  Campaign Proto .  Thick Content .  Payload Case . VANILLA_PAYLOAD )  ? content . get Vanilla Payload (  )  . get Campaign Id (  )  : content . get Experimental Payload (  )  . get Campaign Id (  )  ;      ids To Clear . add ( id )  ;  }  Logging . logd ( "" Potential impressions to clear: "" + ids To Clear . to String (  )  )  ;  return get All Impressions (  )  . default If Empty ( EMPTY_IMPRESSIONS )  . flat Map Completable (  (  stored Impressions )  -> {      Logging . logd ( "" Existing impressions: "" + stored Impressions . to String (  )  )  ;       Campaign Impression List .  Builder cleared Impression List Builder =  Campaign Impression List . new Builder (  )  ;      for  (  Campaign Impression stored Impression : stored Impressions . get Already Seen Campaigns List (  )  )  {         if  ( !ids To Clear . contains ( stored Impression . get Campaign Id (  )  )  )  {             cleared Impression List Builder . add Already Seen Campaigns ( stored Impression )  ;          }     }      Campaign Impression List cleared Impression List = cleared Impression List Builder . build (  )  ;       Logging . logd ( "" New cleared impression list: "" + cleared Impression List . to String (  )  )  ;      return storage Client . write ( cleared Impression List )  . do On Complete (  (  )  -> init In Mem Cache ( cleared Impression List )  )  ;  } )  ; }"
876,public static void set Time Supplier (  Supplier< String> supplier ) { time Supplier = supplier ; }
877,"public com . anychart . charts .  Venn height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
878,"public void items (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . items (  )  ; "" )  ; }"
879,public  Texture Wrap get V Wrap (  ) { return v Wrap ; }
880,public UI Config<T> set Username Hint (  String username Hint ) { this . username Hint = username Hint ;  return this ; }
881,"public static void gl Scissor ( int x, int y, int width, int height ) { if  ( mode ==  Hdpi Mode .  Logical &&  (  Gdx . graphics . get Width (  )  !=  Gdx . graphics . get Back Buffer Width (  )  ||  Gdx . graphics . get Height (  )  !=  Gdx . graphics . get Back Buffer Height (  )  )  )  {      Gdx . gl . gl Scissor ( to Back Buffer X ( x ) , to Back Buffer Y ( y ) , to Back Buffer X ( width ) , to Back Buffer Y ( height )  )  ;  } else {      Gdx . gl . gl Scissor ( x, y, width, height )  ;  }}"
882,public  Builder show Image On Fail ( int image Res ) { image Res On Fail = image Res ;  return this ; }
883,"public void set Enabled ( boolean flag ) { jni Set Enabled ( addr, flag )  ; }"
884,public void set Default Devices For Attributes ( @ Non Null  Immutable List< Object> devices ) { default Devices For Attributes = devices ; }
885,"public  Gson Builder register Type Hierarchy Adapter (  Class<?> base Type,  Object type Adapter ) { $ Gson$ Preconditions . check Argument ( type Adapter instanceof  Json Serializer<?> || type Adapter instanceof  Json Deserializer<?> || type Adapter instanceof  Type Adapter<?> )  ;  if  ( type Adapter instanceof  Json Deserializer || type Adapter instanceof  Json Serializer )  {     hierarchy Factories . add (  Tree Type Adapter . new Type Hierarchy Factory ( base Type, type Adapter )  )  ;  } if  ( type Adapter instanceof  Type Adapter<?> )  {     factories . add (  Type Adapters . new Type Hierarchy Factory ( base Type,  (  Type Adapter )  type Adapter )  )  ;  } return this ; }"
886,public  Transition Config on Fetch Transition Config (  ) { return SLIDE_TRANSITION_CONFIG ; }
887,"public com . anychart . core . resource .  Conflicts stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
888,public  Camera get Camera (  ) { return this . m Camera ; }
889,public int size (  ) { return size ; }
890,public  String get Parser Identifier (  ) { return m Parser Identifier ; }
891,"public com . anychart . charts .  Pie hatch Fill (  String type,  String color,  Number thickness,  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s, %s, %s, %s )  ; "", wrap Quotes ( type ) , wrap Quotes ( color ) , thickness, size )  )  ;  return this ; }"
892,"public void max Point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Point Width (  )  ; "" )  ; }"
893,"public com . anychart . charts .  Tag Cloud color Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
894,"private void fill Depencies Map ( I Logger logger,  Dependency Node node,  Multimap< String,  String> dependencies Map,  Map< String,  String> identifier Map, int indent ) {  String Builder sb = new  String Builder (  )  ;  for  ( int i = 0 ;  i < indent ;  i++ )  {     sb . append ( "" "" )  ;  } sb . append ( node . name )  ;  if  ( null != logger )  {     logger . verbose ( sb . to String (  )  )  ;  } dependencies Map . put ( node . name, node . identifier )  ;  identifier Map . put ( node . identifier, node . name )  ;  for  (  Dependency Node child : node . children )  {     fill Depencies Map ( logger, child, dependencies Map, identifier Map, indent + 1 )  ;  }}"
895,"public com . anychart . core . stock . scrollerseries .  Hilo stroke (  String value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( value ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
896,public void set Load SQL Cipher Native Libs ( boolean load SQL Cipher Native Libs ) { this . load SQL Cipher Native Libs = load SQL Cipher Native Libs ; }
897,"public com . anychart . core .  State Settings whisker Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . whisker Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
898,"public void remove Class Name (  String class Name ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove Class Name ( %s )  ; "", wrap Quotes ( class Name )  )  )  ; }"
899,public void clear (  ) { chunk = null ;  end Of Stream = false ; }
900,public float get Legend Height (  ) { return m Legend Height ; }
901,"public static  String ping Gate Way In Wifi (  Context context ) {  String gate Way = null ;   Wifi Manager wifi Manager =  (  Wifi Manager )  context . get System Service (  Context . WIFI_SERVICE )  ;  if  ( wifi Manager == null )  {     return ""wifi Manager not found"" ;  }  Dhcp Info dhcp Info = wifi Manager . get Dhcp Info (  )  ;  if  ( dhcp Info != null )  {     int tmp = dhcp Info . gateway ;      gate Way =  String . format ( ""%d . %d . %d . %d"",  ( tmp & 0xff ) ,  ( tmp >> 8 & 0xff ) ,  ( tmp >> 16 & 0xff ) ,  ( tmp >> 24 & 0xff )  )  ;  } return gate Way ; }"
902,"public void baseline (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . baseline (  )  ; "" )  ; }"
903,"public com . anychart . charts .  Pert margin (  String value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
904,public  Porter Duff .  Mode get Support Progress Background Tint Mode (  ) { return m Progress Tint Info . m Progress Background Tint Mode ; }
905,"public  Identify prepend (  String property, float [  ]  values ) { add To User Properties (  Constants . AMP_OP_PREPEND, property, float Array To JSON Array ( values )  )  ;  return this ; }"
906,"public static void print If Errors Occured (  Context context ) { if  ( context == null )  {     throw new  Illegal Argument Exception ( "" Context argument cannot be null"" )  ;  }  Status Manager sm = context . get Status Manager (  )  ;  if  ( sm == null )  {     ps . println ( ""WARN:  Context named \"""" + context . get Name (  )  + ""\"" has no status manager"" )  ;  } else {      Status Util status Util = new  Status Util ( context )  ;      if  ( status Util . get Highest Level ( 0 )  ==  Error Status . ERROR )  {         print ( sm )  ;      } }}"
907,public  Hash Code Builder append ( double value ) { return append (  Double . double To Long Bits ( value )  )  ; }
908,public static boolean is Flashlight On (  ) { if  ( !init (  )  )      return false ;   Camera .  Parameters parameters = m Camera . get Parameters (  )  ;  return FLASH_MODE_TORCH . equals ( parameters . get Flash Mode (  )  )  ; }
909,protected boolean skin Status Bar Color Enable (  ) { return true ; }
910,"public com . anychart . charts .  Pert credits (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . credits ( %s )  ; "", value )  )  ;  return this ; }"
911,protected final void cancel Queue (  ) { request Handler . cancel Queue (  )  ; }
912,public static void set Is64 Bit ( boolean is64 Bit ) {  Shadow VM Runtime . is64 Bit = is64 Bit ; }
913,"public com . anychart . charts .  Tree Map bounds (  Number x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
914,"public int read Duration (  Extractor Input input,  Position Holder seek Position Holder, int pcr Pid )  throws IO Exception,  Interrupted Exception{ if  ( pcr Pid <= 0 )  {     return finish Read Duration ( input )  ;  } if  ( !is Last Pcr Value Read )  {     return read Last Pcr Value ( input, seek Position Holder, pcr Pid )  ;  } if  ( last Pcr Value == C . TIME_UNSET )  {     return finish Read Duration ( input )  ;  } if  ( !is First Pcr Value Read )  {     return read First Pcr Value ( input, seek Position Holder, pcr Pid )  ;  } if  ( first Pcr Value == C . TIME_UNSET )  {     return finish Read Duration ( input )  ;  } long min Pcr Position Us = pcr Timestamp Adjuster . adjust Ts Timestamp ( first Pcr Value )  ;  long max Pcr Position Us = pcr Timestamp Adjuster . adjust Ts Timestamp ( last Pcr Value )  ;  duration Us = max Pcr Position Us - min Pcr Position Us ;  return finish Read Duration ( input )  ; }"
915,"public boolean is Plugin Blocked (  Plugin Info plugin Info ) { //  Nothing, allow all return false ; }"
916,"public static boolean is Lower Case ( char c ) { // and found to perform at least as well, or better .  return  ( c >= 'a' )  &&  ( c <= 'z' )  ; }"
917,"public  Mesh update Instance Data ( int target Offset,  Float Buffer source ) { return update Instance Data ( target Offset, source, 0, source . limit (  )  )  ; }"
918,"private static int convert Audio Attributes To Focus Gain ( @ Nullable  Audio Attributes audio Attributes ) { if  ( audio Attributes == null )  {     // want to have more finer grained control .   ( e . g .  adding audio focus listener )      return C . AUDIOFOCUS_NONE ;  } switch ( audio Attributes . usage )  {     //  Don't request audio focus here .      case C . USAGE_VOICE_COMMUNICATION_SIGNALLING:         return C . AUDIOFOCUS_NONE ;      // playback, for a game or a video player'     case C . USAGE_GAME:     case C . USAGE_MEDIA:         return C . AUDIOFOCUS_GAIN ;      // multiple media playback happen at the same time .      case C . USAGE_UNKNOWN:          Log . w ( TAG, "" Specify a proper usage in the audio attributes for audio focus"" + "" handling .   Using AUDIOFOCUS_GAIN by default . "" )  ;          return C . AUDIOFOCUS_GAIN ;      // during a  Vo IP call'     case C . USAGE_ALARM:     case C . USAGE_VOICE_COMMUNICATION:         return C . AUDIOFOCUS_GAIN_TRANSIENT ;      // driving directions or notifications'     case C . USAGE_ASSISTANCE_NAVIGATION_GUIDANCE:     case C . USAGE_ASSISTANCE_SONIFICATION:     case C . USAGE_NOTIFICATION:     case C . USAGE_NOTIFICATION_COMMUNICATION_DELAYED:     case C . USAGE_NOTIFICATION_COMMUNICATION_INSTANT:     case C . USAGE_NOTIFICATION_COMMUNICATION_REQUEST:     case C . USAGE_NOTIFICATION_EVENT:     case C . USAGE_NOTIFICATION_RINGTONE:         return C . AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK ;      //  Assistant is considered as both recording and notifying developer     case C . USAGE_ASSISTANT:         if  (  Util . SDK_INT >= 19 )  {             return C . AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE ;          } else {             return C . AUDIOFOCUS_GAIN_TRANSIENT ;          }     //  Special usages:     case C . USAGE_ASSISTANCE_ACCESSIBILITY:         if  ( audio Attributes . content Type == C . CONTENT_TYPE_SPEECH )  {             //  Voice shouldn't be interrupted by other playback .              return C . AUDIOFOCUS_GAIN_TRANSIENT ;          }         return C . AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK ;      default:          Log . w ( TAG, "" Unidentified audio usage: "" + audio Attributes . usage )  ;          return C . AUDIOFOCUS_NONE ;  }}"
919,"public void transform (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . transform ( %s )  ; "", wrap Quotes ( value )  )  )  ; }"
920,"public void left (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . left (  )  ; "" )  ; }"
921,"public com . anychart . charts .  Cartesian margin (  String value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
922,public void clear (  ) { clear Actions (  )  ;  clear Listeners (  )  ; }
923,public  List< String> get Acr Values Supported (  ) { return get ( ACR_VALUES_SUPPORTED )  ; }
924,public final void set TSUID (  String tsuid ) { this . tsuid = tsuid ; }
925,public  High Light Guide View set High Light Style ( int style ) { this . high Light Style = style ;  return this ; }
926,"public com . anychart . charts .  Mekko bounds (  Number x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
927,"public double get Angle (  Point screen Point ) { double dx = screen Point . get X (  )  - m Center X ;  //  Minus to correct for coord re-mapping double dy = - ( screen Point . get Y (  )  - m Center Y )  ;  double in Rads =  Math . atan2 ( dy, dx )  ;  // O'clock if  ( in Rads < 0 )      in Rads =  Math . abs ( in Rads )  ;  else     in Rads = 2 *  Math . PI - in Rads ;  return  Math . to Degrees ( in Rads )  ; }"
928,"public LHS to LHS (  Call Stack callstack,  Interpreter interpreter )  throws  Eval Error{  Object obj = eval ( true, callstack, interpreter )  ;  if  ( ! ( obj instanceof LHS )  )      throw new  Eval Error ( "" Can't assign to:"", this, callstack )  ;  else     return  ( LHS )  obj ; }"
929,public long get Next Pending Command Delay (  ) { if  ( get Pending Count (  )  == 0 )  {     throw new  Illegal State Exception (  )  ;  } return delta Queue . delay (  )  ; }
930,"public static  String uuid To Hex ( @ Non Null final UUID uuid ) { return uuid . to String (  )  . replace ( ""-"", """" )  . to Upper Case (  Locale . US )  ; }"
931,"public void test Iterator Invalidating Iterator Remove2 (  ) {  Min Max Priority Queue< Integer> mm Heap =  Min Max Priority Queue . create (  )  ;  mm Heap . add All (  Lists . new Array List ( 1, 20, 1000, 2, 3, 30, 40, 10, 11, 12, 13, 200, 300, 500, 400 )  )  ;  assert True ( "" Heap is not intact initially"", mm Heap . is Intact (  )  )  ;   Iterator< Integer> it = mm Heap . iterator (  )  ;  assert Equals (  (  Integer )  1, it . next (  )  )  ;  assert Equals (  (  Integer )  20, it . next (  )  )  ;  assert Equals (  (  Integer )  1000, it . next (  )  )  ;  assert Equals (  (  Integer )  2, it . next (  )  )  ;  it . remove (  )  ;  //  After this remove, 400 has moved up and 20 down past cursor assert True ( "" Heap is not intact after remove"", mm Heap . is Intact (  )  )  ;  assert Equals (  (  Integer )  10, it . next (  )  )  ;  assert Equals (  (  Integer )  3, it . next (  )  )  ;  it . remove (  )  ;  //  After this remove, 400 moved down again and 500 up past the cursor assert True ( "" Heap is not intact after remove"", mm Heap . is Intact (  )  )  ;  assert Equals (  (  Integer )  12, it . next (  )  )  ;  assert Equals (  (  Integer )  30, it . next (  )  )  ;  assert Equals (  (  Integer )  40, it . next (  )  )  ;  //  Skipping 20 assert Equals (  (  Integer )  11, it . next (  )  )  ;  //  Not skipping 400, because it moved back down assert Equals (  (  Integer )  400, it . next (  )  )  ;  assert Equals (  (  Integer )  13, it . next (  )  )  ;  assert Equals (  (  Integer )  200, it . next (  )  )  ;  assert Equals (  (  Integer )  300, it . next (  )  )  ;  //  Last from forget Me Not .  assert Equals (  (  Integer )  500, it . next (  )  )  ; }"
932,boolean is Use System Library Loader (  ) { return false ; }
933,"public float float Value (  ) { if  ( value >= 0 )  {     return  ( float )  value ;  } //  So we can ignore the bottom 8, except for rounding .   See double Value (  )  for more .  return  ( float )   (  ( value >>> 1 )  |  ( value & 1 )  )  * 2f ; }"
934,public void loop ( boolean loop ) { animator . set Repeat Count ( loop ?  Value Animator . INFINITE : 0 )  ; }
935,"public com . anychart . core . cartesian . series .  Area3d color Scale ( com . anychart . scales .  Ordinal Color settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
936,"public void set Uniform Matrix (  String name,  Matrix4 matrix ) { set Uniform Matrix ( name, matrix, false )  ; }"
937,public  Builder set Show Minute (  Boolean is Show Minute ) { this . is Show Minute = is Show Minute ;  return this ; }
938,"private void set Compound Drawables With Intrinsic Bounds (  Drawable left,  Drawable top,  Drawable right,  Drawable bottom ) { if  ( skip Next Apply (  )  )      return ;  m View . set Compound Drawables With Intrinsic Bounds ( left, top, right, bottom )  ; }"
939,"public  Hash Map< String,  String> get Meta Tags (  ) { return meta Tags ; }"
940,public  Collection< User Model> transform (  Collection< User> users Collection ) {  Collection< User Model> user Models Collection ;  if  ( users Collection != null && !users Collection . is Empty (  )  )  {     user Models Collection = new  Array List<> (  )  ;      for  (  User user : users Collection )  {         user Models Collection . add ( transform ( user )  )  ;      } } else {     user Models Collection =  Collections . empty List (  )  ;  } return user Models Collection ; }
941,"public  String pretty Print ( final  String prefix, final  String container Info ) { final  String Builder result = new  String Builder ( super . pretty Print ( prefix )  )  ;  result . append ( container Info )  ;  result . append ( prefix )  . append ( ""  |"" )  . append (  Utils . LINE_SEPARATOR )  ;  final  Array List< Chunk> list = new  Array List< Chunk> ( get Chunks (  )  )  ;   Collections . sort ( list, new  Chunk Position Comparator (  )  )  ;  for  (  Chunk curr : list )  {     result . append ( curr . pretty Print ( prefix + ""  |"" )  )  ;      result . append ( prefix )  . append ( ""  |"" )  . append (  Utils . LINE_SEPARATOR )  ;  } return result . to String (  )  ; }"
942,"public void reject (  Throwable throwable,  Writable Map user Info ) { reject ( /* Code*/ null, /* Message*/ null, throwable, user Info )  ; }"
943,private void assign Addresses (  ) { int address = 0 ;  int size = insns . size (  )  ;  for  ( int i = 0 ;  i < size ;  i++ )  {      Dalv Insn insn = insns . get ( i )  ;      insn . set Address ( address )  ;      address += insn . code Size (  )  ;  }}
944,public final void set Quick Scale Enabled ( boolean quick Scale Enabled ) { this . quick Scale Enabled = quick Scale Enabled ; }
945,"public void share With Linked In (  String caption Or Options,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Linked In ( %s, %s )  ; "", wrap Quotes ( caption Or Options ) , wrap Quotes ( description )  )  )  ; }"
946,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
947,"private void debug (  String message,  Object .  .  .  args ) { if  ( debug )  {      Log . d ( TAG,  String . format ( message, args )  )  ;  }}"
948,public UI Config<T> set Profile Header Image ( int profile Header Image ) { this . profile Header Image = profile Header Image ;  return this ; }
949,"private void draw Bezier Curve (  Canvas canvas ) { m Path . reset (  )  ;  float y = get Height (  )  - m Y Offset - m Max Circle Radius ;  m Path . move To ( m Right Circle X, y )  ;  m Path . line To ( m Right Circle X, y - m Right Circle Radius )  ;  m Path . quad To ( m Right Circle X +  ( m Left Circle X - m Right Circle X )  / 2 . 0f, y, m Left Circle X, y - m Left Circle Radius )  ;  m Path . line To ( m Left Circle X, y + m Left Circle Radius )  ;  m Path . quad To ( m Right Circle X +  ( m Left Circle X - m Right Circle X )  / 2 . 0f, y, m Right Circle X, y + m Right Circle Radius )  ;  // 闭合 m Path . close (  )  ;  canvas . draw Path ( m Path, m Paint )  ; }"
950,"private boolean is Valid Mesh Object ( @ Non Null final  Json Object mesh ) { //  Partial, groups and scenes are commented out to maintain backward compatibility .  return mesh . has ( ""$schema"" )  && mesh . has ( ""id"" )  && mesh . has ( ""version"" )  && mesh . has ( ""mesh UUID"" )  && mesh . has ( ""mesh Name"" )  && mesh . has ( ""timestamp"" )  && /*mesh . has ( ""partial"" )  &&*/ mesh . has ( ""provisioners"" )  && mesh . has ( ""net Keys"" )  && mesh . has ( ""app Keys"" )  && mesh . has ( ""nodes"" )  ; }"
951,"private static  Path get Parent Path (  Path path ) {  Path parent = path . get Parent (  )  ;  //  Paths that have a parent: if  ( parent != null )  {     // ""C:foo""  ( ""C:"" - working dir of drive C on  Windows )      return parent ;  } //  Paths that don't have a parent: if  ( path . get Name Count (  )  == 0 )  {     //      worrying about a symlink .      return null ;  } else {     // ""foo""  ( working dir )      return path . get File System (  )  . get Path ( "" . "" )  ;  }}"
952,public int get Nav Hidden Value (  ) { return nav Hidden_ ; }
953,"protected void do Up Line ( byte [  ]  cur Line, byte [  ]  prev Line ) { if  ( prev Line == null )  {     // do nothing if this is the first line     return ;  } for  ( int i = 0 ;  i < cur Line . length ;  i++ )  {     cur Line [ i ]  += prev Line [ i ]  ;  }}"
954,"public  Nullness Hint on Dataflow Visit Method Invocation (  Method Invocation Node node,  Types types,  Context context,  Access Path Nullness Propagation .  Sub Node Values inputs,  Access Path Nullness Propagation .  Updates then Updates,  Access Path Nullness Propagation .  Updates else Updates,  Access Path Nullness Propagation .  Updates both Updates ) { if  ( node . get Tree (  )  == null )  {     // safer to do a null check here .      return super . on Dataflow Visit Method Invocation ( node, types, context, inputs, then Updates, else Updates, both Updates )  ;  }  Symbol .  Method Symbol method Symbol = AST Helpers . get Symbol ( node . get Tree (  )  )  ;   Preconditions . check Not Null ( method Symbol )  ;   Set< String> field Names = get Annotation Value Array ( method Symbol, annot Name, false )  ;  if  ( field Names != null )  {     field Names =  Contract Utils . trim Receivers ( field Names )  ;      for  (  String field Name : field Names )  {          Variable Element field = get Instance Field Of Class ( AST Helpers . enclosing Class ( method Symbol ) , field Name )  ;          if  ( field == null )  {             //  Invalid annotation, will result in an error during validation .   For now, skip field .              continue ;          }          Access Path access Path =  Access Path . from Base And Element ( node . get Target (  )  . get Receiver (  ) , field )  ;          if  ( access Path == null )  {             continue ;          }         both Updates . set ( access Path,  Nullness . NONNULL )  ;      } } return super . on Dataflow Visit Method Invocation ( node, types, context, inputs, then Updates, else Updates, both Updates )  ; }"
955,"public T finish Loading Asset (  String file Name ) { log . debug ( "" Waiting for asset to be loaded: "" + file Name )  ;  while  ( true )  {     synchronized  ( this )  {          Class<T> type = asset Types . get ( file Name )  ;          if  ( type != null )  {              Object Map< String,  Ref Counted Container> assets By Type = assets . get ( type )  ;              if  ( assets By Type != null )  {                  Ref Counted Container asset Container = assets By Type . get ( file Name )  ;                  if  ( asset Container != null )  {                     log . debug ( "" Asset loaded: "" + file Name )  ;                      return  ( T )  asset Container . object ;                  }             }         }         update (  )  ;      }      Thread Utils . yield (  )  ;  }}"
956,public  Countly Config set Star Rating Callback (  Star Rating Callback star Rating Callback ) { this . star Rating Callback = star Rating Callback ;  return this ; }
957,"public  List< Ssa Insn> get Phi Insns (  ) { return insns . sub List ( 0, get Count Phi Insns (  )  )  ; }"
958,public  List< String> get Userinfo Signing Algorithm Values Supported (  ) { return get ( USERINFO_SIGNING_ALG_VALUES_SUPPORTED )  ; }
959,"public void write Array (  Cst Array array, boolean top Level ) { boolean annotates = top Level && out . annotates (  )  ;   Cst Array .  List list =  (  (  Cst Array )  array )  . get List (  )  ;  int size = list . size (  )  ;  if  ( annotates )  {     out . annotate ( ""  size: "" +  Hex . u4 ( size )  )  ;  } out . write Uleb128 ( size )  ;  for  ( int i = 0 ;  i < size ;  i++ )  {      Constant cst = list . get ( i )  ;      if  ( annotates )  {         out . annotate ( ""   [ "" +  Integer . to Hex String ( i )  + "" ]  "" + constant To Human ( cst )  )  ;      }     write Constant ( cst )  ;  } if  ( annotates )  {     out . end Annotation (  )  ;  }}"
960,"public  String render Short Status ( boolean is Active, boolean render Subtle, long elapsed Time Ms ) { if  ( !is Active )  {     return ansi . as Subtle Text ( THREAD_SHORT_IDLE_STATUS )  ;  } int offset =  ( int )   (  ( current Time Ms / 400 )  % THREAD_SHORT_STATUS_ANIMATION . length (  )  )  ;   String status =  String . format ( THREAD_SHORT_STATUS_FORMAT, THREAD_SHORT_STATUS_ANIMATION . char At ( offset )  )  ;  if  ( render Subtle )  {     return ansi . as Subtle Text ( status )  ;  } if  ( elapsed Time Ms > ERROR_THRESHOLD_MS )  {     return ansi . as Error Text ( status )  ;  } if  ( elapsed Time Ms > WARNING_THRESHOLD_MS )  {     return ansi . as Warning Text ( status )  ;  } return status ; }"
961,"public void set Fragment Result ( int result Code,  Bundle bundle ) { m Delegate . set Fragment Result ( result Code, bundle )  ; }"
962,"public void flush (  )  throws IO Exception{ if  ( pos > 0 )  {     encode ( buffer, 0, pos )  ;      pos = 0 ;  } out . flush (  )  ; }"
963,"static JSON Object invalid Geometry No Coordinates (  )  throws JSON Exception{ return new JSON Object ( ""{ \""type\"": \"" Line String\"",\n"" + ""    \""banana\"":  [   [ 100 . 0, 0 . 0 ] ,  [ 101 . 0, 1 . 0 ]   ] \n"" + ""    }"" )  ; }"
964,"public  Table Query get Query (  ) { return new  Table Query ( context, target Table, native Get Query ( native Ptr )  )  ; }"
965,"public void test Should Export Delivery Metrics To Big Query_false Manifest True Setter (  )  throws  Exception{ edit Manifest Application Metadata (  )  . put Boolean ( MANIFEST_DELIVERY_METRICS_EXPORT_TO_BIG_QUERY_ENABLED, false )  ;  assert Manifest Field With Value ( MANIFEST_DELIVERY_METRICS_EXPORT_TO_BIG_QUERY_ENABLED, false )  ;  assert Preferences Field With Value ( DELIVERY_METRICS_EXPORT_TO_BIG_QUERY_PREF, null )  ;  //  Ack  Messaging Analytics . set Delivery Metrics Export To Big Query ( true )  ;  //  Verify assert That (  Messaging Analytics . delivery Metrics Export To Big Query Enabled (  )  )  . is True (  )  ;  assert Manifest Field With Value ( MANIFEST_DELIVERY_METRICS_EXPORT_TO_BIG_QUERY_ENABLED, false )  ;  assert Preferences Field With Value ( DELIVERY_METRICS_EXPORT_TO_BIG_QUERY_PREF, true )  ; }"
966,"public com . anychart . core .  Visual Base With Bounds container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
967,public boolean is File Mode (  ) { return file Mode ; }
968,public java . util .  Iterator< Node<E>> iterator (  ) { if  (  Collections . allocate Iterators )      return new  Iterator (  )  ;  if  ( iterator == null )      iterator = new  Iterator (  )  ;  return iterator . reset (  )  ; }
969,"public void set Byte (  String field Name, byte value ) { proxy State . get Realm$realm (  )  . check If Valid (  )  ;  check Is Primary Key ( field Name )  ;  long column Key = proxy State . get Row$realm (  )  . get Column Key ( field Name )  ;  proxy State . get Row$realm (  )  . set Long ( column Key, value )  ; }"
970,"public  Optional< Buck Cell> find Buck Cell (  Virtual File source File,  String cell Name ) { if  ( """" . equals ( cell Name )  )  {     return find Buck Cell ( source File )  ;  } else {     return find Buck Cell By Name ( cell Name )  ;  }}"
971,"static  Paired Stats Accumulator create Partitioned Filled Paired Stats Accumulator (  List< Double> x Values,  List< Double> y Values, int partition Size ) { check Argument ( x Values . size (  )  == y Values . size (  )  )  ;  check Argument ( partition Size > 0 )  ;   Paired Stats Accumulator accumulator = new  Paired Stats Accumulator (  )  ;   List< List< Double>> x Partitions =  Lists . partition ( x Values, partition Size )  ;   List< List< Double>> y Partitions =  Lists . partition ( y Values, partition Size )  ;  for  ( int index = 0 ;  index < x Partitions . size (  )  ;  index++ )  {     accumulator . add All ( create Paired Stats Of ( x Partitions . get ( index ) , y Partitions . get ( index )  )  )  ;  } return accumulator ; }"
972,"public  Shader Var get Global ( I Global Shader Var var, int index ) {  Shader Var v = get Instance For Data Type ( var . get Var String (  )  +  Integer . to String ( index ) , var . get Data Type (  )  )  ;  v . m Initialized = true ;  return v ; }"
973,public  Live Data< List< Adapter Item>> get Live Items (  ) { return live Items ; }
974,"public void text Indent (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . text Indent (  )  ; "" )  ; }"
975,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
976,"public void max Font Size (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Font Size (  )  ; "" )  ; }"
977,"public static  String extract Activity Name ( @ Nullable  String full Activity Name, @ Nullable  String package Name ) { if  ( package Name != null && full Activity Name != null )  {     if  ( !package Name . is Empty (  )  && full Activity Name . starts With ( package Name )  )  {          String name = full Activity Name . substring ( package Name . length (  )  )  ;          if  ( !name . is Empty (  )  && name . char At ( 0 )  == ' . ' )  {             return name ;          }     } } return full Activity Name ; }"
978,"public static void validate Limit (  Find Options find Options, long total Size ) { if  ( find Options . get Size (  )  < 0 )  {     throw new  Validation Exception ( PAGINATION_SIZE_CAN_NOT_BE_NEGATIVE )  ;  } if  ( find Options . get Offset (  )  < 0 )  {     throw new  Validation Exception ( PAGINATION_OFFSET_CAN_NOT_BE_NEGATIVE )  ;  } if  ( total Size < find Options . get Offset (  )  )  {     throw new  Validation Exception ( PAGINATION_OFFSET_GREATER_THAN_SIZE )  ;  }}"
979,public  Grid Point3 sub (  Grid Point3 other ) { x -= other . x ;  y -= other . y ;  z -= other . z ;  return this ; }
980,public  Builder set Keys Hidden ( com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Keys Hidden value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } keys Hidden_ = value . get Number (  )  ;  on Changed (  )  ;  return this ; }
981,public float get Ascent (  ) { return data . ascent ; }
982,"public com . anychart . charts .  Polar min Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", height )  )  ;  return this ; }"
983,"public com . anychart . charts .  Pert padding (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
984,public static boolean barycoord Inside Triangle (  Vector2 barycentric ) { return barycentric . x >= 0 && barycentric . y >= 0 && barycentric . x + barycentric . y <= 1 ; }
985,"public com . anychart . charts .  Pert select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
986,"public void test Changing Pages (  )  throws  Throwable{ final  View Pager pager = activity Test Rule . get Activity (  )  . find View By Id ( id . vp_pages )  ;  assert Equals ( 0, pager . get Current Item (  )  )  ;  activity Test Rule . run On Ui Thread (  (  )  -> pager . set Current Item ( 1, true )  )  ;  assert Equals ( 1, pager . get Current Item (  )  )  ;  activity Test Rule . run On Ui Thread (  (  )  -> pager . set Current Item ( 0, true )  )  ;  assert Equals ( 0, pager . get Current Item (  )  )  ; }"
987,"public  Task< Load Bundle Task Progress> add On Success Listener ( @ Non Null  Executor executor, @ Non Null  On Success Listener<? super  Load Bundle Task Progress> on Success Listener ) { return delegate . add On Success Listener ( executor, on Success Listener )  ; }"
988,"public  Buck Target relativize (  Buck Target other ) { if  ( other . cell Name != null && !other . cell Name . equals ( cell Name )  )  {     return other ;  } else if  ( other . cell Path != null && !other . cell Path . equals ( cell Path )  )  {     return new  Buck Target ( null, other . cell Path, other . rule Name )  ;  } else {     return new  Buck Target ( null, null, other . rule Name )  ;  }}"
989,public static boolean is Valid Proxy Filter Address ( @ Non Null final byte [  ]  address ) { if  ( !is Address In Range ( address )  )      return false ;  return is Valid Proxy Filter Address (  ( address [ 0 ]  & 0x FF )  << 8 | address [ 1 ]  & 0x FF )  ; }
990,"public T migration Step ( @ Int Range ( from = 1 )  int schema Version, @ Non Null  Manual Step Migration .  Step step ) { prepare Orma Migration Builder (  )  . step ( schema Version, step )  ;  return  ( T )  this ; }"
991,"public void connect Missing Points (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . connect Missing Points (  )  ; "" )  ; }"
992,"public static  Condition any ( @ Non Null final  Condition .  .  .  conditions ) { return composite ( conditions, false Condition (  ) , true Condition (  )  )  ; }"
993,"private static void write Spaces (  Writer out, int amt )  throws IO Exception{ while  ( amt > 0 )  {     out . write ( ' ' )  ;      amt-- ;  }}"
994,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
995,"public float get Pivot X (  ) { return calc Average ( m Detector . get Start X (  ) , m Detector . get Pointer Count (  )  )  ; }"
996,public static void set Enabled ( boolean enabled ) {  Shadow Trace . is Enabled = enabled ; }
997,"public  Map< Integer,  Double> compute (  Collection<? extends  Number> dataset ) { return compute In Place (  Doubles . to Array ( dataset )  )  ; }"
998,"public com . anychart . core . cartesian . series .  Line3d min Labels (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Labels ( %s )  ; "", settings )  )  ;  return this ; }"
999,public void close (  )  throws IO Exception{ zip File . close (  )  ; }
1000,public  Input Stream get Stream (  ) { return  Stream Download Task . this . input Stream ; }
1001,private void handle Cancellation (  ) { maybe Finish ( true )  ;  get Consumer (  )  . on Cancellation (  )  ; }
1002,"public void call And Assert Returns ( boolean expected,  String method Name,  Object .  .  .  arguments )  throws  Exception{ check Not Null ( method Name )  ;  check Not Null ( arguments )  ;  send Request ( method Name, arguments )  ;  assert Equals ( expected, get Response ( method Name )  . get Result (  )  )  ; }"
1003,"protected void create File Window (  Dim .  Source Info source Info, int line ) { boolean activate = true ;   String url = source Info . url (  )  ;   File Window w = new  File Window ( this, source Info )  ;  file Windows . put ( url, w )  ;  if  ( line != -1 )  {     if  ( current Window != null )  {         current Window . set Position ( -1 )  ;      }     try {         w . set Position ( w . text Area . get Line Start Offset ( line - 1 )  )  ;      } catch  (  Bad Location Exception exc )  {         try {             w . set Position ( w . text Area . get Line Start Offset ( 0 )  )  ;          } catch  (  Bad Location Exception ee )  {             w . set Position ( -1 )  ;          }     } } desk . add ( w )  ;  if  ( line != -1 )  {     current Window = w ;  } menubar . add File ( url )  ;  w . set Visible ( true )  ;  if  ( activate )  {     try {         w . set Maximum ( true )  ;          w . set Selected ( true )  ;          w . move To Front (  )  ;      } catch  (  Exception exc )  {     } }}"
1004,public  Builder set Content Encoding ( @ Nullable  String content Encoding ) { m Metadata . m Content Encoding =  Metadata Value . with User Value ( content Encoding )  ;  return this ; }
1005,public void on Load Started ( @ Nullable  Drawable placeholder ) { super . on Load Started ( placeholder )  ;  set Resource Internal ( null )  ;  set Drawable ( placeholder )  ; }
1006,public  Set< Corrupt Index> get Corrupt Indices (  ) { return corrupt Indices ; }
1007,"public static int parse Retransmit Interval Steps ( final int retransmit Interval ) { if  ( retransmit Interval >= 0 && retransmit Interval <= get Max Retransmission Interval (  )  )  {     return  (  ( retransmit Interval / 50 )  - 1 )  ;  } throw new  Illegal Argument Exception ( "" Invalid retransmit interval"" )  ; }"
1008,"public com . anychart . charts .  Sparkline select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
1009,"public com . anychart . charts .  Stock select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
1010,public  Iterable Of Protos Fluent Assertion<M> using Double Tolerance ( double tolerance ) { return using Config ( config . using Double Tolerance ( tolerance )  )  ; }
1011,"public static void try Accessibility Announce (  View view,  Char Sequence text ) { if  ( is Jellybean Or Later (  )  && view != null && text != null )  {     view . announce For Accessibility ( text )  ;  }}"
1012,"private void recycle Views From Start Expose (  Recycler View .  Recycler recycler, int dt ) { if  ( dt < 0 )  {     if  ( DEBUG )  {          Log . d ( TAG, "" Called recycle from start with a negative value .   This might happen"" + "" during layout changes but may be sign of a bug"" )  ;      }     return ;  } // ignore padding,  View Group may not clip children .  final int limit = dt ;  final int child Count = get Child Count (  )  ;  if  ( m Should Reverse Layout Expose )  {     for  ( int i = child Count - 1 ;  i >= 0 ;  i-- )  {          View child = get Child At ( i )  ;          if  ( m Orientation Helper . get Decorated End ( child )  + recycle Offset > limit )  {             // stop here             recycle Children ( recycler, child Count - 1, i )  ;              return ;          }     } } else {     for  ( int i = 0 ;  i < child Count ;  i++ )  {          View child = get Child At ( i )  ;          if  ( m Orientation Helper . get Decorated End ( child )  + recycle Offset > limit )  {             // stop here             recycle Children ( recycler, 0, i )  ;              return ;          }     } }}"
1013,"public T delay Scale X ( @ Float Range ( from = 0 . 0 )  float end ) { get Delayed Processor (  )  . add Process ( SCALE_X, end )  ;  return self (  )  ; }"
1014,"void test Missing Profession (  ) { assert Throws (  Illegal Argument Exception . class,  (  )  -> new  Hero .  Builder ( null, "" Sir without a job"" )  )  ; }"
1015,public final void refresh Locations (  ) { synchronized  ( classpath Locations )  {     classpath Locations = get Classpath Locations (  )  ;  }}
1016,"public com . anychart . scales .  Ordinal x Scale (  ) { return new com . anychart . scales .  Ordinal ( js Base + "" . x Scale (  ) "" )  ; }"
1017,"public void handle State (  Attachment Task photo Task, int state ) { switch ( state )  {     //  The task finished downloading and decoding the image     case TASK_COMPLETE:         //  Puts the image into cache         if  ( photo Task . is Cache Enabled (  )  )  {             // successfully decoded into the cache             if  ( photo Task != null && photo Task . get Image (  )  != null && ! Text Utils . is Empty ( photo Task . get Message (  )  . get Key String (  )  )  )  {                 m Photo Cache . put ( photo Task . get Message (  )  . get Key String (  ) , photo Task . get Image (  )  )  ;              }         }         //  Gets a  Message object, stores the state in it, and sends it to the  Handler          Message complete Message = m Handler . obtain Message ( state, photo Task )  ;          complete Message . send To Target (  )  ;          break ;      //  The task finished downloading the image     case DOWNLOAD_COMPLETE:         /*              *  If it is a image than decodes the image, by queuing the decoder object to run in the decoder              *              */         if  ( photo Task . get Photo View (  )  != null && photo Task . get Content Type (  )  != null && photo Task . get Content Type (  )  . contains ( ""image"" )  )  {             m Decode Thread Pool . execute ( photo Task . get Photo Decode Runnable (  )  )  ;          } else {             // We need not to cache the  Data here  .  . as we have nothing to load             //  .  .  . directly sending TASK complete message is enough             m Handler . obtain Message ( TASK_COMPLETE, photo Task )  . send To Target (  )  ;              if  ( photo Task . get Download Handler (  )  != null )  {                 m Handler . obtain Message ( DOWNLOAD_COMPLETE, photo Task )  . send To Target (  )  ;              }         }         break ;      //  In all other cases, pass along the message without any other action .      case DOWNLOAD_PROGRESS:          Message msg = m Handler . obtain Message ( DOWNLOAD_PROGRESS, photo Task )  ;          msg . arg1 = photo Task . get Progress (  )  ;          msg . send To Target (  )  ;          break ;      default:         m Handler . obtain Message ( state, photo Task )  . send To Target (  )  ;          break ;  }}"
1018,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
1019,public  On Prepare Card Header Popup Menu Listener get Popup Menu Prepare Listener (  ) { return m Popup Menu Prepare Listener ; }
1020,"public void flush Base64 (  )  throws java . io . IO Exception{ if  ( position > 0 )  {     if  ( encode )  {         out . write ( encode3to4 ( b4, buffer, position, options )  )  ;          position = 0 ;      } else // end if: encoding     {         throw new java . io . IO Exception ( "" Base64 input not properly padded . "" )  ;      } // end else: decoding }// end if: buffer partially full}"
1021,"JSON Object handle Response (  Http Response http Response ) { final int status Code = http Response . code (  )  ;  logger . v ( "" Settings response code was: "" + status Code )  ;  final JSON Object to Return ;  if  ( request Was Successful ( status Code )  )  {     to Return = get Json Object From ( http Response . body (  )  )  ;  } else {     logger . e ( "" Settings request failed ;   ( status: "" + status Code + "" )  from "" + url )  ;      to Return = null ;  } return to Return ; }"
1022,"public void select Marquee Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . select Marquee Fill (  )  ; "" )  ; }"
1023,"public  Identify set Once (  String property, JSON Object values ) { add To User Properties (  Constants . AMP_OP_SET_ONCE, property, values )  ;  return this ; }"
1024,"public com . anychart . standalones .  Labels Factory letter Spacing (  Number spacing ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . letter Spacing ( %s )  ; "", spacing )  )  ;  return this ; }"
1025,public  Intent get Next Started Activity (  ) { return get Shadow Instrumentation (  )  . get Next Started Activity (  )  ; }
1026,public T typeface (  Typeface typeface ) { this . typeface = typeface ;  return  ( T )  this ; }
1027,"static  Elf Header parse (  Byte Buffer buffer ) { byte [  ]  e_ident = new byte [ EI_NIDENT ]  ;  buffer . get ( e_ident )  ;  //  Read the data field to determine endian-ness .    We use this to set the byte order // for the underlying buffer .  EI Data ei_data = EI Data . value Of ( e_ident [ EI_DATA ]  )  ;  ei_data . set Order ( buffer )  ;  //  Read the class field to determine whether we're parsing for 32-bit or 64-bit .  EI Class ei_class = EI Class . value Of ( e_ident [ EI_CLASS ]  )  ;  return ei_class . parse Header ( ei_data, e_ident, buffer )  ; }"
1028,"public synchronized void send Mail (  String subject,  String body,  String sender,  String [  ]  recipients )  throws  Messaging Exception{ try {     message = new  Mime Message ( session )  ;       Data Handler handler = new  Data Handler ( new  Byte Array Data Source ( body . get Bytes (  ) , ""text/plain"" )  )  ;      message . set Sender ( new  Internet Address ( sender )  )  ;      message . set Subject ( subject )  ;      message . set Data Handler ( handler )  ;       String resp = get Email Strings ( recipients )  ;      if  ( resp . index Of ( ',' )  > 0 )          message . set Recipients (  Message .  Recipient Type . TO,  Internet Address . parse ( resp )  )  ;      else         message . set Recipient (  Message .  Recipient Type . TO, new  Internet Address ( resp )  )  ;      new send Email On Background (  )  . execute (  )  ;  } catch  (  Messaging Exception e )  {     throw e ;  }}"
1029,"public com . anychart . core . resource .  Logo fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
1030,public  React Root View get View (  ) { return m View ; }
1031,"public com . anychart . core . cartesian . series .  Area3d hatch Fill (  String type,  String color,  Number thickness,  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s, %s, %s, %s )  ; "", wrap Quotes ( type ) , wrap Quotes ( color ) , thickness, size )  )  ;  return this ; }"
1032,private float view To Source Y ( float vy ) { if  ( v Translate == null )  {     return  Float .  Na N ;  } return  ( vy - v Translate . y )  / scale ; }
1033,"public com . anychart . core . stock . indicators . MACD macd ( com . anychart . data .  Table Mapping mapping,  Number fast Period,  Number slow Period,  Number signal Period, com . anychart . enums .  Stock Series Type macd Series Type, com . anychart . enums .  Stock Series Type signal Series Type, com . anychart . enums .  Stock Series Type histogram Series Type ) { return new com . anychart . core . stock . indicators . MACD (  String . format (  Locale . US, js Base + "" . macd ( %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, fast Period, slow Period, signal Period,  ( macd Series Type != null )  ? macd Series Type . get Js Base (  )  : null,  ( signal Series Type != null )  ? signal Series Type . get Js Base (  )  : null,  ( histogram Series Type != null )  ? histogram Series Type . get Js Base (  )  : null )  )  ; }"
1034,public boolean is Zero ( double margin ) { return  ( length2 (  )  <= margin * margin )  ; }
1035,"public  List< Read Receipt User Link> load All Deep From Cursor (  Cursor cursor ) { int count = cursor . get Count (  )  ;   List< Read Receipt User Link> list = new  Array List< Read Receipt User Link> ( count )  ;  if  ( cursor . move To First (  )  )  {     if  ( identity Scope != null )  {         identity Scope . lock (  )  ;          identity Scope . reserve Room ( count )  ;      }     try {         do {             list . add ( load Current Deep ( cursor, false )  )  ;          } while  ( cursor . move To Next (  )  )  ;      } finally {         if  ( identity Scope != null )  {             identity Scope . unlock (  )  ;          }     } } return list ; }"
1036,public static  Logd Service Blocking Stub new Blocking Stub ( io . grpc .  Channel channel ) { return new  Logd Service Blocking Stub ( channel )  ; }
1037,public void update ( float delta Time ) { set Time Step ( delta Time )  ;  emitter . update (  )  ;  for  (  Influencer influencer : influencers )  influencer . update (  )  ; }
1038,"static  String compress Packages In Message (  String input ) {  Matcher matcher = CLASSNAME_PATTERN . matcher ( input )  ;   Set< String> names = new  Hash Set<> (  )  ;  // classname is left in the full form, which is a fine fallback .  while  ( matcher . find (  )  )  {      String name = matcher . group ( 1 )  ;      names . add ( name )  ;  } //  Now dedupe any conflicts .   Use a  Tree Map since we're going to need the legend sorted anyway .  //  This map is from short name to full name .   Map< String,  String> replacement Map = shorten Names ( names )  ;  //  If we have nothing to replace, just return the original .  if  ( replacement Map . is Empty (  )  )  {     return input ;  } //  Find the longest key for building the legend int longest Key = replacement Map . key Set (  )  . stream (  )  . max ( comparing (  String::length )  )  . get (  )  . length (  )  ;   String replaced String = input ;   String Builder legend Builder = new  String Builder (  )  ;  for  (  Map .  Entry< String,  String> entry : replacement Map . entry Set (  )  )  {      String short Name = entry . get Key (  )  ;       String full Name = entry . get Value (  )  ;      //  Do the replacements in the message     replaced String = replaced String . replace ( full Name, short Name )  ;      //  Skip certain prefixes .   We need to check the short Name for a  .  though in case     // there was some type of conflict like java . util . concurrent .  Future and     // java . util . foo .  Future that got shortened to concurrent .  Future and foo .  Future .      //  In those cases we do not want to skip the legend .   We only skip if the class     // is directly in that package .       String prefix = full Name . substring ( 0, full Name . length (  )  - short Name . length (  )  )  ;      if  ( PACKAGES_SKIPPED_IN_LEGEND . contains ( prefix )  && !short Name . contains ( "" . "" )  )  {         continue ;      }     //  Add to the legend     legend Builder . append ( short Name )  . append ( "": "" )  . append (  Strings . repeat ( "" "", longest Key - short Name . length (  )  )  )  . append ( full Name )  . append ( ""\n"" )  ;  } return legend Builder . length (  )  == 0 ? replaced String : replaced String + LEGEND_HEADER + legend Builder + LEGEND_FOOTER ; }"
1039,"private static int [  ]  append ( int [  ]  array, int current Size, int element ) { if  ( current Size + 1 > array . length )  {     int [  ]  new Array = new int [ grow Size ( current Size )  ]  ;       System . arraycopy ( array, 0, new Array, 0, current Size )  ;      array = new Array ;  } array [ current Size ]  = element ;  return array ; }"
1040,"public static  String android Cmd Name (  ) { //$NON-NLS-1$  String os =  System . get Property ( ""os . name"" )  ;  //$NON-NLS-1$  String cmd = ""android"" ;  if  ( os . starts With ( "" Windows"" )  )  {     //$NON-NLS-1$     //$NON-NLS-1$     cmd += "" . bat"" ;  } return cmd ; }"
1041,Reference Queue<K> get Key Reference Queue For Testing (  ) { throw new  Assertion Error (  )  ; }
1042,void on Enter Foreground ( final long timestamp ) { run On Log Thread ( new  Runnable (  )  {     @ Override     public void run (  )  {         if  (  Utils . is Empty String ( api Key )  )  {             return ;          }         if  ( use Dynamic Config )  {              Config Manager . get Instance (  )  . refresh ( new  Config Manager .  Refresh Listener (  )  {                 @ Override                 public void on Finished (  )  {                     url =  Config Manager . get Instance (  )  . get Ingestion Endpoint (  )  ;                  }             } )  ;          }         start New Session If Needed ( timestamp )  ;          in Foreground = true ;      } } )  ; }
1043,public  String get Database Url (  ) { return database Url ; }
1044,"public static  Projection create Equirectangular ( float radius, int latitudes, int longitudes, float vertical Fov Degrees, float horizontal Fov Degrees, @C .  Stereo Mode int stereo Mode ) {  Assertions . check Argument ( radius > 0 )  ;   Assertions . check Argument ( latitudes >= 1 )  ;   Assertions . check Argument ( longitudes >= 1 )  ;   Assertions . check Argument ( vertical Fov Degrees > 0 && vertical Fov Degrees <= 180 )  ;   Assertions . check Argument ( horizontal Fov Degrees > 0 && horizontal Fov Degrees <= 360 )  ;  //  Compute angular size in radians of each UV quad .  float vertical Fov Rads =  ( float )   Math . to Radians ( vertical Fov Degrees )  ;  float horizontal Fov Rads =  ( float )   Math . to Radians ( horizontal Fov Degrees )  ;  float quad Height Rads = vertical Fov Rads / latitudes ;  float quad Width Rads = horizontal Fov Rads / longitudes ;  //  Each latitude strip has 2 *  ( longitudes quads + extra edge )  vertices + 2 degenerate vertices .  int vertex Count =  ( 2 *  ( longitudes + 1 )  + 2 )  * latitudes ;  //  Buffer to return .  float [  ]  vertex Data = new float [ vertex Count * POSITION_COORDS_PER_VERTEX ]  ;  float [  ]  texture Data = new float [ vertex Count * TEXTURE_COORDS_PER_VERTEX ]  ;  //  Generate the data for the sphere which is a set of triangle strips representing each // latitude band .  //  Offset into the vertex Data array .  int v Offset = 0 ;  //  Offset into the texture Data array .  int t Offset = 0 ;  //  ( i, j )  represents a quad in the equirectangular sphere .  for  ( int j = 0 ;  j < latitudes ;  ++j )  {     //  For each horizontal triangle strip .      //  Each latitude band lies between the two phi values .   Each vertical edge on a band lies on     // a theta value .      float phi Low = quad Height Rads * j - vertical Fov Rads / 2 ;      float phi High = quad Height Rads *  ( j + 1 )  - vertical Fov Rads / 2 ;      for  ( int i = 0 ;  i < longitudes + 1 ;  ++i )  {         //  For each vertical edge in the band .          for  ( int k = 0 ;  k < 2 ;  ++k )  {             //  For low and high points on an edge .              //  For each point, determine it's position in polar coordinates .              float phi = k == 0 ? phi Low : phi High ;              float theta = quad Width Rads * i +  ( float )   Math . PI - horizontal Fov Rads / 2 ;              //  Set vertex position data as  Cartesian coordinates .              vertex Data [ v Offset++ ]  = - ( float )   ( radius *  Math . sin ( theta )  *  Math . cos ( phi )  )  ;              vertex Data [ v Offset++ ]  =  ( float )   ( radius *  Math . sin ( phi )  )  ;              vertex Data [ v Offset++ ]  =  ( float )   ( radius *  Math . cos ( theta )  *  Math . cos ( phi )  )  ;              texture Data [ t Offset++ ]  = i * quad Width Rads / horizontal Fov Rads ;              texture Data [ t Offset++ ]  =  ( j + k )  * quad Height Rads / vertical Fov Rads ;              //  Break up the triangle strip with degenerate vertices by copying first and last points .              if  (  ( i == 0 && k == 0 )  ||  ( i == longitudes && k == 1 )  )  {                  System . arraycopy ( vertex Data, v Offset - POSITION_COORDS_PER_VERTEX, vertex Data, v Offset, POSITION_COORDS_PER_VERTEX )  ;                  v Offset += POSITION_COORDS_PER_VERTEX ;                   System . arraycopy ( texture Data, t Offset - TEXTURE_COORDS_PER_VERTEX, texture Data, t Offset, TEXTURE_COORDS_PER_VERTEX )  ;                  t Offset += TEXTURE_COORDS_PER_VERTEX ;              }         }     //  Move on to the next vertical edge in the triangle strip .      } //  Move on to the next triangle strip .  }  Sub Mesh sub Mesh = new  Sub Mesh (  Sub Mesh . VIDEO_TEXTURE_ID, vertex Data, texture Data, DRAW_MODE_TRIANGLES_STRIP )  ;  return new  Projection ( new  Mesh ( sub Mesh ) , stereo Mode )  ; }"
1045,public boolean has Masks (  ) { return lottie Drawable . has Masks (  )  ; }
1046,"public static void disable Ssl Verify (  Http Connection conn )  throws IO Exception{  Trust Manager [  ]  trust All Certs = { new  No Check X509 Trust Manager (  )  } ;  try {     conn . configure ( null, trust All Certs, null )  ;      conn . set Hostname Verifier (  (  name,  session )  -> true )  ;  } catch  (  Key Management Exception |  No Such Algorithm Exception e )  {     throw new IO Exception ( e . get Message (  ) , e )  ;  }}"
1047,"public void set Write Timeout ( int write Timeout ) { this . client . set Write Timeout ( write Timeout,  Time Unit . MILLISECONDS )  ; }"
1048,"public  Model With Field Annotation_ on Visibility State Changed (  On Model Visibility State Changed Listener< Model With Field Annotation_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
1049,"public com . anychart . core . gantt . edit .  Structure Edit stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1050,public  Immersion Bar bar Color Int ( @ Color Int int bar Color ) { m Bar Params . status Bar Color = bar Color ;  m Bar Params . navigation Bar Color = bar Color ;  return this ; }
1051,"private  List< Event> apply Operation Helper (  Operation operation,  Immutable Tree< Sync Point> sync Point Tree,  Node server Cache,  Write Tree Ref writes Cache ) { if  ( operation . get Path (  )  . is Empty (  )  )  {     return this . apply Operation Descendants Helper ( operation, sync Point Tree, server Cache, writes Cache )  ;  } else {      Sync Point sync Point = sync Point Tree . get Value (  )  ;      //  If we don't have cached server data, see if we can get it from this  Sync Point .      if  ( server Cache == null && sync Point != null )  {         server Cache = sync Point . get Complete Server Cache (  Path . get Empty Path (  )  )  ;      }      List< Event> events = new  Array List< Event> (  )  ;       Child Key child Key = operation . get Path (  )  . get Front (  )  ;       Operation child Operation = operation . operation For Child ( child Key )  ;       Immutable Tree< Sync Point> child Tree = sync Point Tree . get Children (  )  . get ( child Key )  ;      if  ( child Tree != null && child Operation != null )  {          Node child Server Cache =  ( server Cache != null )  ? server Cache . get Immediate Child ( child Key )  : null ;           Write Tree Ref child Writes Cache = writes Cache . child ( child Key )  ;          events . add All ( this . apply Operation Helper ( child Operation, child Tree, child Server Cache, child Writes Cache )  )  ;      }     if  ( sync Point != null )  {         events . add All ( sync Point . apply Operation ( operation, writes Cache, server Cache )  )  ;      }     return events ;  }}"
1052,"public com . anychart . charts .  Heat Map container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
1053,"static void remote Verify (  )  throws  Exception{  Properties props =  Props . discover (  )  ;   String bucket = props . get Property (  Names . TEST_BUCKET )  ;   Amazon S3 s3 = new  Amazon S3 ( props )  ;   String file = JGIT_USER + ""-"" + UUID . random UUID (  )  . to String (  )  ;   String path = JGIT_REMOTE_DIR + ""/"" + file ;  s3 . put ( bucket, path, file . get Bytes ( UTF_8 )  )  ;  s3 . delete ( bucket, path )  ; }"
1054,"public com . anychart . core . annotations .  Trend Channel fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
1055,public  Conditional Wait Request<T> negate (  ) { expected = true ;  return this ; }
1056,"public static  File Key lenient (  File directory, FS fs ) { final  File gitdir = resolve ( directory, fs )  ;  return new  File Key ( gitdir != null ? gitdir : directory, fs )  ; }"
1057,"public synchronized void remove (  )  throws IO Exception{ if  ( is Empty (  )  )  {     throw new  No Such Element Exception (  )  ;  } if  ( element Count == 1 )  {     clear (  )  ;  } else {     // assert element Count > 1     int new First Position = wrap Position ( first . position +  Element . HEADER_LENGTH + first . length )  ;      ring Read ( new First Position, buffer, 0,  Element . HEADER_LENGTH )  ;      int length = read Int ( buffer, 0 )  ;      write Header ( file Length, element Count - 1, new First Position, last . position )  ;      element Count-- ;      first = new  Element ( new First Position, length )  ;  }}"
1058,"public com . anychart . core .  Series Base bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
1059,"private void invalidate (  ) { for  ( int i = 0, n = nodes . size ;  i < n ;  ++i )  {     invalidate ( nodes . get ( i )  )  ;  }}"
1060,public void set Chart Values Text Align (  Align align ) { m Chart Values Text Align = align ; }
1061,public void dispatch Tag Discovered (  Tag tag ) { if  ( reader Callback != null )  {     reader Callback . on Tag Discovered ( tag )  ;  }}
1062,public boolean is Finished (  ) { return finished ; }
1063,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
1064,"public  Fake Data Set set Random Data (  Uri uri, int length ) { return set Data ( uri,  Test Util . build Test Data ( length )  )  ; }"
1065,protected  String get Summary Object End Text (  ) { return summary Object End Text ; }
1066,public void set Custom (  List< Legend Entry> entries ) { m Entries = entries . to Array ( new  Legend Entry [ entries . size (  )  ]  )  ;  m Is Legend Custom = true ; }
1067,public I Pie Data Set get Data Set By Index ( int index ) { return index == 0 ? get Data Set (  )  : null ; }
1068,"public com . anychart . core . gantt . elements .  Milestones Element stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
1069,public com . facebook . buck . remoteexecution . proto .  Manifold Bucket .  Builder get Manifold Bucket Builder (  ) { on Changed (  )  ;  return get Manifold Bucket Field Builder (  )  . get Builder (  )  ; }
1070,"public static  String read String (  Byte Buffer buffer, int str Len ) {  String Builder sb = new  String Builder ( str Len )  ;  for  ( int i = 0 ;  i < str Len ;  i++ )  {     sb . append ( buffer . get Char (  )  )  ;  } return sb . to String (  )  ; }"
1071,"public com . anychart . core . ui .  Paginator padding (  String space Or Top Or Top And Bottom,  String right Or Right And Left,  Number bottom,  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( space Or Top Or Top And Bottom ) , wrap Quotes ( right Or Right And Left ) , bottom, wrap Quotes ( left )  )  )  ;  return this ; }"
1072,"public com . anychart . charts .  Radar select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
1073,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
1074,"public com . anychart . standalones .  Resource Timeline background Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
1075,"private int parse Int (  String v, int default Value ) { try {     return  Integer . parse Int ( v )  ;  } catch  (  Number Format Exception nfe )  {      Gdx . app . error ( "" Lib GDX GL"", "" Error parsing number: "" + v + "", assuming: "" + default Value )  ;      return default Value ;  }}"
1076,"public void on Item Pinned ( int position ) { final  Dialog Fragment dialog =  Item Pinned Message Dialog Fragment . new Instance ( position )  ;  get Support Fragment Manager (  )  . begin Transaction (  )  . add ( dialog, FRAGMENT_TAG_ITEM_PINNED_DIALOG )  . commit (  )  ; }"
1077,"public final void set Selection Override ( int renderer Index,  Track Group Array groups,  Selection Override override ) { set Parameters ( build Upon Parameters (  )  . set Selection Override ( renderer Index, groups, override )  )  ; }"
1078,"public static  List< String> get Spelling Suggestions (  String input,  Collection< String> options, int max Distance ) { return options . stream (  )  . map (  option -> new  Pair<> ( option,  More Strings . get Levenshtein Distance ( input, option )  )  )  . filter (  pair -> pair . get Second (  )  <= max Distance )  . sorted (  Comparator . comparing (  Pair::get Second )  )  . map (  Pair::get First )  . collect (  Immutable List . to Immutable List (  )  )  ; }"
1079,public boolean matches Any Of (  Char Sequence sequence ) { return !matches None Of ( sequence )  ; }
1080,public byte [  ]  get Raw Bytes (  ) { return raw Bytes ; }
1081,public float get Time (  ) { return m Time ; }
1082,public  Attributes Node Provider get Attributes Node Provider (  ) { return attributes Node Provider ; }
1083,"public static  Double evaluate (  Object obj,  Navigator nav ) {  Double value =  Number Function . evaluate ( obj, nav )  ;  return new  Double (  Math . ceil ( value . double Value (  )  )  )  ; }"
1084,"public com . anychart . core . gauge . pointers .  Needle middle Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . middle Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
1085,public static  Executor Service new Single Thread Executor (  String thread Name ) { return new Single Thread Executor ( new  Named Thread Factory ( thread Name )  )  ; }
1086,"public static boolean is Tele No (  String to Check Str ) {  String pattern Str = "" ( ^ [ 0-9 ] {3,4}\\- [ 0-9 ] {3,8}$ ) | ( ^ [ 0-9 ] {3,8}$ ) | ( ^\\ (  [ 0-9 ] {3,4}\\ )  [ 0-9 ] {3,8}$ ) | ( ^0{0,1}13 [ 0-9 ] {9}$ ) "" ;  return can Match ( to Check Str, pattern Str )  ; }"
1087,public  String get Date Format (  ) { return this . fast Json Config . get Date Format (  )  ; }
1088,"private void update Display ( boolean allow Empty Display ) { if  ( !allow Empty Display && m Typed Times . is Empty (  )  )  {     int hour = m Time Picker . get Hours (  )  ;      int minute = m Time Picker . get Minutes (  )  ;      set Hour ( hour, true )  ;      set Minute ( minute )  ;      if  ( !m Is24 Hour Mode )  {         update Am Pm Display ( hour < 12 ? AM : PM )  ;      }     set Current Item Showing ( m Time Picker . get Current Item Showing (  ) , true, true, true )  ;      m Done Button . set Enabled ( true )  ;  } else {      Boolean [  ]  entered Zeros = { false, false } ;      int [  ]  values = get Entered Time ( entered Zeros )  ;       String hour Format = entered Zeros [ 0 ]  ? ""%02d"" : ""%2d"" ;       String minute Format =  ( entered Zeros [ 1 ]  )  ? ""%02d"" : ""%2d"" ;       String hour Str =  ( values [ 0 ]  == -1 )  ? m Double Placeholder Text :  String . format ( hour Format, values [ 0 ]  )  . replace ( ' ', m Placeholder Text )  ;       String minute Str =  ( values [ 1 ]  == -1 )  ? m Double Placeholder Text :  String . format ( minute Format, values [ 1 ]  )  . replace ( ' ', m Placeholder Text )  ;      m Hour View . set Text ( hour Str )  ;      m Hour Space View . set Text ( hour Str )  ;      m Hour View . set Text Color ( m Unselected Color )  ;      m Minute View . set Text ( minute Str )  ;      m Minute Space View . set Text ( minute Str )  ;      m Minute View . set Text Color ( m Unselected Color )  ;      if  ( !m Is24 Hour Mode )  {         update Am Pm Display ( values [ 2 ]  )  ;      } }}"
1089,"public void set Variable Or Property (  String name,  Object value, boolean strict Java )  throws  Util Eval Error{ // if localscoping switch follow strict Java, else recurse boolean recurse =  Interpreter . LOCALSCOPING ? strict Java : true ;  set Variable Or Property ( name, value, strict Java, recurse )  ; }"
1090,"public static  Collector<T, ?,  Immutable Map<K, V>> to Immutable Map (  Function<? super T, ? extends K> key Function,  Function<? super T, ? extends V> value Function ) { throw new  Unsupported Operation Exception (  )  ; }"
1091,"public com . anychart . charts .  Sunburst padding (  Number value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
1092,public  Immersion Bar bar Enable ( boolean bar Enable ) { m Bar Params . bar Enable = bar Enable ;  return this ; }
1093,public boolean has Parent (  ) { return parts . size (  )  > 1 ; }
1094,"public  String Builder to String ( final  String Builder sb ) { sb . append ( name )  . append ( "":  [ time: "" )  . append ( time . value )  . append ( "", load: "" )  . append ( load . value )  . append ( "" ] "" )  ;  return sb ; }"
1095,"public static void pop All ( @ Non Null final  Fragment Manager fm ) { pop All ( fm, true )  ; }"
1096,"public com . anychart . charts .  Cartesian3d x Grid (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Grid ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
1097,"private  Pair< Object,  Long> resolve Seek Position (  Seek Position seek Position, boolean try Subsequent Periods ) {  Timeline timeline = playback Info . timeline ;   Timeline seek Timeline = seek Position . timeline ;  if  ( timeline . is Empty (  )  )  {     //  We don't have a valid timeline yet, so we can't resolve the position .      return null ;  } if  ( seek Timeline . is Empty (  )  )  {     //  The application performed a blind seek with an empty timeline  ( most likely based on     // knowledge of what the future timeline will be )  .   Use the internal timeline .      seek Timeline = timeline ;  } //  Map the  Seek Position to a position in the corresponding timeline .   Pair< Object,  Long> period Position ;  try {     period Position = seek Timeline . get Period Position ( window, period, seek Position . window Index, seek Position . window Position Us )  ;  } catch  (  Index Out Of Bounds Exception e )  {     //  The window index of the seek position was outside the bounds of the timeline .      return null ;  } if  ( timeline == seek Timeline )  {     //  Our internal timeline is the seek timeline, so the mapped position is correct .      return period Position ;  } //  Attempt to find the mapped period in the internal timeline .  int period Index = timeline . get Index Of Period ( period Position . first )  ;  if  ( period Index != C . INDEX_UNSET )  {     //  We successfully located the period in the internal timeline .      return period Position ;  } if  ( try Subsequent Periods )  {     //  Try and find a subsequent period from the seek timeline in the internal timeline .       Object period Uid = resolve Subsequent Period ( period Position . first, seek Timeline, timeline )  ;      if  ( period Uid != null )  {         //  We found one .   Map the  Seek Position onto the corresponding default position .          return get Period Position ( timeline, timeline . get Period ( period Index, period )  . window Index, C . TIME_UNSET )  ;      } } //  We didn't find one .   Give up .  return null ; }"
1098,"public void finalize Sessions ( long timestamp, @ Nullable  String current Session Id ) { report Persistence . finalize Reports ( current Session Id, timestamp )  ; }"
1099,"public com . anychart . core . cartesian . series .  Area3d right (  String right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", wrap Quotes ( right )  )  )  ;  return this ; }"
1100,"public void translate Header ( float of ) { float of Calculated = of * m Scroll Multiplier ;  if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . HONEYCOMB && of < m Header . get Height (  )  )  {     m Header . set Translation Y ( of Calculated )  ;  } else if  ( of < m Header . get Height (  )  )  {      Translate Animation anim = new  Translate Animation ( 0, 0, of Calculated, of Calculated )  ;      anim . set Fill After ( true )  ;      anim . set Duration ( 0 )  ;      m Header . start Animation ( anim )  ;  } m Header . set Clip Y (  Math . round ( of Calculated )  )  ;  if  ( m Parallax Scroll != null )  {     final  Recycler View .  View Holder holder = m Recycler View . find View Holder For Adapter Position ( 0 )  ;      float left ;      if  ( holder != null )  {         left =  Math . min ( 1,  (  ( of Calculated )  /  ( m Header . get Height (  )  * m Scroll Multiplier )  )  )  ;      } else {         left = 1 ;      }     m Parallax Scroll . on Parallax Scroll ( left, of, m Header )  ;  }}"
1101,"public com . anychart . core .  Visual Base With Bounds height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
1102,"public com . anychart . charts .  Linear Gauge exports (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . exports ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1103,"public com . anychart . core . gantt .  Time Line Header padding (  String value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
1104,"private static long remaining Nanos ( long start Time, long timeout Nanos ) { return  ( timeout Nanos <= 0 L )  ? 0 L : timeout Nanos -  (  System . nano Time (  )  - start Time )  ; }"
1105,"public void id (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . id (  )  ; "" )  ; }"
1106,"private boolean remove Listeners Of Cached Request To Launch ( final  Spice Request<?> request ) { synchronized  ( map Request To Launch To Request Listener )  {     for  ( final  Cached Spice Request<?> cached Spice Request : map Request To Launch To Request Listener . key Set (  )  )  {         if  ( match ( cached Spice Request, request )  )  {             final  Set< Request Listener<?>> set Request Listeners = map Request To Launch To Request Listener . get ( cached Spice Request )  ;              set Request Listeners . clear (  )  ;              return true ;          }     }     return false ;  }}"
1107,"public void set Skip Button Visible (  ) { back Button . set Visibility ( GONE )  ;  skip Button . set Visibility (  View . VISIBLE )  ;  skip Button . set On Click Listener ( new  View .  On Click Listener (  )  {     @ Override     public void on Click (  View v )  {         for  ( int position = view Pager . get Current Item (  )  ;  position < adapter . get Count (  )  ;  position++ )  {             if  ( !adapter . get Item ( position )  . can Move Further (  )  )  {                 view Pager . set Current Item ( position, true )  ;                  show Error ( adapter . get Item ( position )  . cant Move Further Error Message (  )  )  ;                  return ;              }         }         view Pager . set Current Item ( adapter . get Last Item Position (  ) , true )  ;      } } )  ; }"
1108,"public static void set Translucent (  Activity activity, @ Int Range ( from = 0, to = 255 )  int status Bar Alpha ) { if  (  Build . VERSION . SDK_INT <  Build . VERSION_CODES . KITKAT )  {     return ;  } set Transparent ( activity )  ;  add Translucent View ( activity, status Bar Alpha )  ; }"
1109,"public static  Code Block make Parameters Code Block (  Iterable< Code Block> code Blocks ) { return stream ( code Blocks . spliterator (  ) , false )  . collect ( to Parameters Code Block (  )  )  ; }"
1110,"public void get Absolute X (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Absolute X (  )  ; "" )  ; }"
1111,public  Builder set Element Size ( float indicator Element Size ) { m Element Size = indicator Element Size ;  return this ; }
1112,"public com . anychart . core . stock . scrollerseries .  Range Area high Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . high Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
1113,"public static void pop ( @ Non Null final  Fragment Manager fm ) { pop ( fm, true )  ; }"
1114,"public U Crop with Max Result Size ( @ Int Range ( from = MIN_SIZE )  int width, @ Int Range ( from = MIN_SIZE )  int height ) { if  ( width < MIN_SIZE )  {     width = MIN_SIZE ;  } if  ( height < MIN_SIZE )  {     height = MIN_SIZE ;  } m Crop Options Bundle . put Int ( EXTRA_MAX_SIZE_X, width )  ;  m Crop Options Bundle . put Int ( EXTRA_MAX_SIZE_Y, height )  ;  return this ; }"
1115,"public com . anychart . charts .  Gantt scroll To (  Number px Offset ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . scroll To ( %s )  ; "", px Offset )  )  ;  return this ; }"
1116,"public com . anychart . charts .  Venn draw (  Boolean async ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . draw ( %s )  ; "", async )  )  ;  return this ; }"
1117,"public static void remove Device Token (  String token ) { if  ( has Setup User (  )  )  {      Qiscus Api . get Instance (  )  . remove Device Token ( token )  . subscribe On (  Schedulers . io (  )  )  . observe On (  Android Schedulers . main Thread (  )  )  . subscribe (  a Void -> {     },  throwable ->  Qiscus Error Logger . print ( "" Set FCM Token"", throwable )  )  ;  } local Data Manager . set Fcm Token ( null )  ; }"
1118,"public byte [  ]  decompress ( int desired Width, int pitch, int desired Height, int pixel Format, int flags )  throws  Exception{ if  ( desired Width < 0 || pitch < 0 || desired Height < 0 || pixel Format < 0 || pixel Format >= TJ . NUMPF || flags < 0 )      throw new  Exception ( "" Invalid argument in decompress (  ) "" )  ;  int pixel Size = TJ . get Pixel Size ( pixel Format )  ;  int scaled Width = get Scaled Width ( desired Width, desired Height )  ;  int scaled Height = get Scaled Height ( desired Width, desired Height )  ;  if  ( pitch == 0 )      pitch = scaled Width * pixel Size ;  byte [  ]  buf = new byte [ pitch * scaled Height ]  ;  decompress ( buf, desired Width, pitch, desired Height, pixel Format, flags )  ;  return buf ; }"
1119,"public void web Socket Connection Is Released (  )  throws  Exception{ //  This test assumes HTTP/1 . 1 pooling semantics .  client = client . new Builder (  )  . protocols ( as List (  Protocol . HTTP_1_1 )  )  . build (  )  ;  web Server . enqueue ( new  Mock Response (  )  . set Response Code (  Http URL Connection . HTTP_NOT_FOUND )  . set Body ( ""not found!"" )  )  ;  web Server . enqueue ( new  Mock Response (  )  )  ;  new Web Socket (  )  ;  client Listener . assert Failure (  )  ;   Request regular Request = new  Request .  Builder (  )  . url ( web Server . url ( ""/"" )  )  . build (  )  ;   Response response = client . new Call ( regular Request )  . execute (  )  ;  response . close (  )  ;  assert That ( web Server . take Request (  )  . get Sequence Number (  )  )  . is Equal To ( 0 )  ;  assert That ( web Server . take Request (  )  . get Sequence Number (  )  )  . is Equal To ( 1 )  ; }"
1120,public synchronized void allow Thread Decoding (  Thread Set threads ) { for  (  Thread t : threads )  {     allow Thread Decoding ( t )  ;  }}
1121,"public static  Javac Provider get Provider For Spec (  Javac Spec spec ) {  String compiler Class Name = spec . get Compiler Class Name (  )  . or Else ( COM_SUN_TOOLS_JAVAC_API_JAVAC_TOOL )  ;   Javac .  Source javac Source = spec . get Javac Source (  )  ;  switch ( javac Source )  {     case EXTERNAL:          Preconditions . check State ( spec . get Javac Path (  )  . is Present (  )  )  ;          return new  External Javac Provider ( spec . get Javac Path (  )  . get (  )  )  ;      case JAR:          Preconditions . check State ( spec . get Javac Jar Path (  )  . is Present (  )  )  ;          return new  Jar Backed Javac Provider ( spec . get Javac Jar Path (  )  . get (  ) , compiler Class Name )  ;      case JDK:         return new  Constant Javac Provider ( new  Jdk Provided In Memory Javac (  )  )  ;  } throw new  Assertion Error ( "" Unknown javac source: "" + javac Source )  ; }"
1122,public int compare To (  Object obj ) { if  ( ! ( obj instanceof  Name Record )  )  {     return -1 ;  }  Name Record rec =  (  Name Record )  obj ;  if  ( platform ID > rec . platform ID )  {     return 1 ;  } else if  ( platform ID < rec . platform ID )  {     return -1 ;  } else if  ( platform Specific ID > rec . platform Specific ID )  {     return 1 ;  } else if  ( platform Specific ID < rec . platform Specific ID )  {     return -1 ;  } else if  ( language ID > rec . language ID )  {     return 1 ;  } else if  ( language ID < rec . language ID )  {     return -1 ;  } else if  ( name ID > rec . name ID )  {     return 1 ;  } else if  ( name ID < rec . name ID )  {     return -1 ;  } else {     return 0 ;  }}
1123,"public com . anychart . core .  State Settings dummy Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . dummy Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1124,"public synchronized  Type Id Item intern (  Cst Type type ) { if  ( type == null )  {     throw new  Null Pointer Exception ( ""type == null"" )  ;  } throw If Prepared (  )  ;   Type type Per Se = type . get Class Type (  )  ;   Type Id Item result = type Ids . get ( type Per Se )  ;  if  ( result == null )  {     result = new  Type Id Item ( type )  ;      type Ids . put ( type Per Se, result )  ;  } return result ; }"
1125,"String process (  String .  .  .  lines ) {  Stream< String> stream =  Arrays . stream ( lines )  ;  if  ( creator Kind . equals ( FACTORY )  )  {     stream = stream . map (  line -> line . replace ( "" Builder"", "" Factory"" )  . replace ( ""builder"", ""factory"" )  . replace ( ""build"", ""create"" )  )  ;  } return stream . collect ( joining ( ""\n"" )  )  ; }"
1126,"public com . anychart . core . stock . series .  Base series (  ) { return new com . anychart . core . stock . series .  Base ( js Base + "" . series (  ) "" )  ; }"
1127,"public void add Context (  String str ) { if  ( str == null )  {     throw new  Null Pointer Exception ( ""str == null"" )  ;  } context . append ( str )  ;  if  ( !str . ends With ( ""\n"" )  )  {     context . append ( '\n' )  ;  }}"
1128,"public  Request Creator load ( @ Nullable  String path ) { if  ( path == null )  {     return new  Request Creator ( this, null, 0 )  ;  } if  ( path . trim (  )  . length (  )  == 0 )  {     throw new  Illegal Argument Exception ( "" Path must not be empty . "" )  ;  } return load (  Uri . parse ( path )  )  ; }"
1129,public boolean is Set Multi Fetch Response (  ) { return this . multi Fetch Response != null ; }
1130,protected static void begin Section (  String section Name ) { if  ( ! Trace . is Tag Enabled ( TRACE_TAG_APP )  )  {     return ;  } if  ( !check Valid Section Name ( section Name )  )  {     return ;  } current Sections . get (  )  . add First ( section Name )  ; }
1131,public  Vector3 get Up (  Vector3 out ) { return out . set ( up )  ; }
1132,private void check Common (  ) { this . common = id . equals ( TITLE . get Field Name (  )  )  || id . equals ( ALBUM . get Field Name (  )  )  || id . equals ( ARTIST . get Field Name (  )  )  || id . equals ( GENRE . get Field Name (  )  )  || id . equals ( TRACKNUMBER . get Field Name (  )  )  || id . equals ( DATE . get Field Name (  )  )  || id . equals ( DESCRIPTION . get Field Name (  )  )  || id . equals ( COMMENT . get Field Name (  )  )  ; }
1133,"public com . anychart . core . gauge . pointers .  Base id (  String id ) { return new com . anychart . core . gauge . pointers .  Base (  String . format (  Locale . US, js Base + "" . id ( %s ) "", wrap Quotes ( id )  )  )  ; }"
1134,"public com . anychart . core . map . series .  Choropleth left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
1135,"public void set Animation (  Input Stream stream, @ Nullable  String cache Key ) { set Composition Task (  Lottie Composition Factory . from Json Input Stream ( stream, cache Key )  )  ; }"
1136,"public com . anychart . core . stock . scrollerseries .  Range Step Area step Direction (  String direction ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . step Direction ( %s )  ; "", wrap Quotes ( direction )  )  )  ;  return this ; }"
1137,"private  Native Animated Nodes Manager get Nodes Manager (  ) { if  ( m Nodes Manager . get (  )  == null )  {      React Application Context react Application Context = get React Application Context If Active Or Warn (  )  ;      if  ( react Application Context != null )  {         m Nodes Manager . compare And Set ( null, new  Native Animated Nodes Manager ( react Application Context )  )  ;      } } return m Nodes Manager . get (  )  ; }"
1138,public UB Json Writer array (  String name )  throws IO Exception{ name ( name )  . array (  )  ;  return this ; }
1139,public boolean is Highlighted (  ) { return m Highlighted ; }
1140,"public static  Icon Set retrieve Registered Icon Set (  String font Path, boolean edit Mode ) { final  Icon Set icon Set = REGISTERED_ICON_SETS . get ( font Path )  ;  if  ( icon Set == null && !edit Mode )  {     throw new  Runtime Exception (  String . format ( "" Font '%s' not properly registered, please"" + "" see the README at https://github . com/ Bearded- Hen/ Android- Bootstrap"", font Path )  )  ;  } return icon Set ; }"
1141,public boolean is Set Fetch Request (  ) { return this . fetch Request != null ; }
1142,public void on Resume (  ) { super . on Resume (  )  ;  _master Frag . set Stream ( _int Stream )  ; }
1143,"public static  Immutable Multimap<K, V> of ( K k1, V v1, K k2, V v2 ) { return  Immutable List Multimap . of ( k1, v1, k2, v2 )  ; }"
1144,"Immutable List< Source Path> create Merged Header Map (  Immutable Set< Build Target> targets In Required Projects )  throws IO Exception{  Header Map .  Builder header Map Builder = new  Header Map .  Builder (  )  ;   Immutable List .  Builder< Source Path> source Paths To Build Builder =  Immutable List . builder (  )  ;   Set< Target Node<? extends  Cxx Library Description .  Common Arg>> processed Nodes = new  Hash Set<> (  )  ;  for  (  Target Node<?> target Node : target Graph . get All ( targets In Required Projects )  )  {     //  Includes the public headers of the dependencies in the merged header map .       Node Helper . get Apple Native Node ( target Graph, target Node )  . if Present (  arg Target Node -> visit Recursive Header Symlink Trees ( arg Target Node,  (  dep Native Node,  header Visibility )  -> {         if  ( processed Nodes . contains ( dep Native Node )  || header Visibility !=  Header Visibility . PUBLIC )  {             return ;          }         add To Merged Header Map ( dep Native Node, header Map Builder, source Paths To Build Builder )  ;          processed Nodes . add ( dep Native Node )  ;      } )  )  ;  } //  Write the resulting header map .   Path merged Header Map Root = get Path To Merged Header Map (  )  ;   Path header Map Location = get Header Map Location From Symlink Tree Root ( merged Header Map Root )  ;  project Filesystem . mkdirs ( merged Header Map Root )  ;  project Filesystem . write Bytes To Path ( header Map Builder . build (  )  . get Bytes (  ) , header Map Location )  ;  return source Paths To Build Builder . build (  )  ; }"
1145,"public void share With Twitter (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . share With Twitter (  )  ; "" )  ; }"
1146,public static  Rounding Params as Circle (  ) { return  ( new  Rounding Params (  )  )  . set Round As Circle ( true )  ; }
1147,"public void show Feedback (  Context context,  Km Feedback feedback ) { constraint Layout Feedback Top Layout . set Visibility ( VISIBLE )  ;  int rating Value = feedback . get Rating (  )  ;  switch ( rating Value )  {     case  Feedback Input Fragment . RATING_POOR:         image View Feedback Rating . set Image Drawable (  Context Compat . get Drawable ( context, R . drawable . ic_sad_1 )  )  ;          break ;      case  Feedback Input Fragment . RATING_AVERAGE:         image View Feedback Rating . set Image Drawable (  Context Compat . get Drawable ( context, R . drawable . ic_confused )  )  ;          break ;      case  Feedback Input Fragment . RATING_GOOD:         image View Feedback Rating . set Image Drawable (  Context Compat . get Drawable ( context, R . drawable . ic_happy )  )  ;          break ;      default:         image View Feedback Rating . set Image Drawable (  Context Compat . get Drawable ( context, R . drawable . ic_confused )  )  ;  } if  ( feedback . get Comments (  )  != null )  {     scroll View Feedback Comment Wrap . set Visibility ( VISIBLE )  ;      text View Feedback Comment . set Text ( ""\"""" + feedback . get Comments (  )  [ 0 ]  + ""\"""" )  ;  }}"
1148,public static boolean is Local Contact Uri (  Uri uri ) { if  ( uri . get Path (  )  == null )  {     return false ;  } return is Local Content Uri ( uri )  &&  Contacts Contract . AUTHORITY . equals ( uri . get Authority (  )  )  && !uri . get Path (  )  . starts With ( assume Not Null ( LOCAL_CONTACT_IMAGE_URI . get Path (  )  )  )  ; }
1149,public boolean should Clip Rect (  ) { return m Should Clip Rect ; }
1150,"void resize Entries ( int new Capacity ) { this . entries =  Arrays . copy Of ( entries, new Capacity )  ;  this . keys =  Arrays . copy Of ( keys, new Capacity )  ;  this . values =  Arrays . copy Of ( values, new Capacity )  ; }"
1151,public static void set Global Duplicate Filtering Default ( boolean filter Duplicates By Default ) {  Epoxy Controller . filter Duplicates Default = filter Duplicates By Default ; }
1152,public  Activity Builder set Max Zoom ( int max Zoom ) { m Options . max Zoom = max Zoom ;  return this ; }
1153,public  Object Filter get Object Filter (  ) { return object Filter ; }
1154,"public void add ( int value, int target ) { throw If Immutable (  )  ;  if  ( target < 0 )  {     throw new  Illegal Argument Exception ( ""target < 0"" )  ;  } values . add ( value )  ;  targets . add ( target )  ; }"
1155,public void scroll To Position ( int position ) { m Pending Scroll Position = position ;  m Pending Scroll Position Offset = INVALID_OFFSET ;  request Layout (  )  ; }
1156,"protected void reload Scenes (  ) { synchronized  ( m Scenes )  {     for  ( int i = 0, j = m Scenes . size (  )  ;  i < j ;  ++i )  {         m Scenes . get ( i )  . reload (  )  ;      } }}"
1157,"public static  Object call Method (  Context Factory factory, final  Scriptable this Obj, final  Function f, final  Object [  ]  args, final long args To Wrap ) { if  ( f == null )  {     //  See comments in get Function     return  Undefined . instance ;  } if  ( factory == null )  {     factory =  Context Factory . get Global (  )  ;  } final  Scriptable scope = f . get Parent Scope (  )  ;  if  ( args To Wrap == 0 )  {     return  Context . call ( factory, f, scope, this Obj, args )  ;  }  Context cx =  Context . get Current Context (  )  ;  if  ( cx != null )  {     return do Call ( cx, scope, this Obj, f, args, args To Wrap )  ;  } else {     return factory . call ( new  Context Action (  )  {         public  Object run (  Context cx )  {             return do Call ( cx, scope, this Obj, f, args, args To Wrap )  ;          }     } )  ;  }}"
1158,public bt Triangle Index Vertex Array add Mesh Parts ( final  Mesh Part .  .  .  mesh Parts ) { for  ( int i = 0 ;  i < mesh Parts . length ;  i++ )  add Mesh Part ( mesh Parts [ i ]  )  ;  return this ; }
1159,"protected final void animate View ( final  Recycler View .  View Holder holder, final int position ) { if  ( m Recycler View == null )  {     return ;  } //  Use always the max child count reached if  ( m Max Child Views < m Recycler View . get Child Count (  )  )  {     m Max Child Views = m Recycler View . get Child Count (  )  ;  } //  Animate only during initial loading? if  ( only Entry Animation && m Last Animated Position >= m Max Child Views )  {     is Forward Enabled = false ;  } int last Visible Position = get Flexible Layout Manager (  )  . find Last Visible Item Position (  )  ;  //         )  ;  if  (  ( is Forward Enabled || is Reverse Enabled )  && !is Fast Scroll && holder instanceof  Flexible View Holder &&  ( !m Animator Notifier Observer . is Position Notified (  )  || is Scrollable Header Or Footer ( position )  )  &&  ( is Scrollable Header Or Footer ( position )  ||  ( is Forward Enabled && position > last Visible Position )  ||  ( is Reverse Enabled && position < last Visible Position )  ||  ( position == 0 && m Max Child Views == 0 )  )  )  {     //  Cancel animation is necessary when fling     int hash Code = holder . item View . hash Code (  )  ;      cancel Existing Animation ( hash Code )  ;      //  User animators      List< Animator> animators = new  Array List<> (  )  ;       Flexible View Holder flexible View Holder =  (  Flexible View Holder )  holder ;      flexible View Holder . scroll Animators ( animators, position, position >= last Visible Position )  ;      //  Execute the animations together      Animator Set set = new  Animator Set (  )  ;      set . play Together ( animators )  ;      set . set Interpolator ( m Interpolator )  ;      //  Single view duration     long duration = m Duration ;      for  (  Animator animator : animators )  {         if  ( animator . get Duration (  )  != DEFAULT_DURATION )  {             duration = animator . get Duration (  )  ;          }     }     set . set Duration ( duration )  ;      set . add Listener ( new  Helper Animator Listener ( hash Code )  )  ;      if  ( m Entry Step )  {         //  Stop step Delay when screen is filled         set . set Start Delay ( calculate Animation Delay ( holder, position )  )  ;      }     set . start (  )  ;      m Animators . put ( hash Code, set )  ;  //log . v ( ""animate View     Scroll animation on position %s"", position )  ;  } m Animator Notifier Observer . clear Notified (  )  ;  //  Update last animated position m Last Animated Position = position ; }"
1160,public float get Percentile ( float percentile ) { ensure Sorted By Value (  )  ;  float desired Weight = percentile * total Weight ;  int accumulated Weight = 0 ;  for  ( int i = 0 ;  i < samples . size (  )  ;  i++ )  {      Sample current Sample = samples . get ( i )  ;      accumulated Weight += current Sample . weight ;      if  ( accumulated Weight >= desired Weight )  {         return current Sample . value ;      } } //  Clamp to maximum value or  Na N if no values .  return samples . is Empty (  )  ?  Float .  Na N : samples . get ( samples . size (  )  - 1 )  . value ; }
1161,public void enable Update (  ) { enabled = true ; }
1162,"public com . anychart . graphics . vector .  Element set Transformation Matrix (  Number m00,  Number m10,  Number m01,  Number m11,  Number m02,  Number m12 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set Transformation Matrix ( %s, %s, %s, %s, %s, %s )  ; "", m00, m10, m01, m11, m02, m12 )  )  ;  return this ; }"
1163,public  Monotonic Clock get Clock (  ) { return new  Monotonic System Clock (  )  ; }
1164,"public static boolean is Android OS (  ) {  String osname =  Option Helper . get System Property ( ""os . name"" )  ;   String root =  Option Helper . get Env ( ""ANDROID_ROOT"" )  ;   String data =  Option Helper . get Env ( ""ANDROID_DATA"" )  ;  return osname != null && osname . contains ( "" Linux"" )  && root != null && root . contains ( ""/system"" )  && data != null && data . contains ( ""/data"" )  ; }"
1165,"private static void remove Archs Value (  List< String> cxx Flags,  Map< String,  String> appended Settings ) {  String value = appended Settings . get ( ARCHS )  ;  if  ( value == null )  {     int index Of Arch = cxx Flags . index Of ( ""-arch"" )  ;      if  ( index Of Arch != -1 )  {         value = cxx Flags . get ( index Of Arch + 1 )  ;          cxx Flags . remove ( index Of Arch + 1 )  ;          cxx Flags . remove ( index Of Arch )  ;      } else {         LOG . debug ( "" Can't determine ARCH value"" )  ;      } } appended Settings . remove ( ARCHS )  ; }"
1166,private long get Time Us For Table Index ( int table Index ) { return  ( duration Us * table Index )  / 100 ; }
1167,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
1168,public int get Model Identifier (  ) { return m Model Identifier ; }
1169,"public com . anychart . charts .  Pareto remove Series (  Number id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove Series ( %s )  ; "", id )  )  ;  return this ; }"
1170,public int get Max Points (  ) { return this . max Points & 0x FFFF ; }
1171,public synchronized void clear (  ) { super . clear (  )  ;  m Max Values . clear (  )  ; }
1172,"public void write (  Tag tag,  Random Access File raf,  Random Access File raf Temp )  throws  Cannot Write Exception, IO Exception{ logger . config ( "" Writing tag"" )  ;   Metadata Block Info block Info = new  Metadata Block Info (  )  ;  // Read existing data  Flac Stream Reader flac Stream = new  Flac Stream Reader ( raf )  ;  try {     flac Stream . find Stream (  )  ;  } catch  (  Cannot Read Exception cre )  {     throw new  Cannot Write Exception ( cre . get Message (  )  )  ;  } boolean is Last Block = false ;  while  ( !is Last Block )  {     try {          Metadata Block Header mbh =  Metadata Block Header . read Header ( raf )  ;          if  ( mbh . get Block Type (  )  != null )  {             switch ( mbh . get Block Type (  )  )  {                 case STREAMINFO:                     {                         block Info . stream Info Block = new  Metadata Block ( mbh, new  Metadata Block Data Stream Info ( mbh, raf )  )  ;                          break ;                      }                 case VORBIS_COMMENT:                 case PADDING:                 case PICTURE:                     {                         // All these will be replaced by the new metadata so we just treat as padding in order                         //to determine how much space is already allocated in the file                         raf . seek ( raf . get File Pointer (  )  + mbh . get Data Length (  )  )  ;                           Metadata Block Data mbd = new  Metadata Block Data Padding ( mbh . get Data Length (  )  )  ;                          block Info . metadata Block Padding . add ( new  Metadata Block ( mbh, mbd )  )  ;                          break ;                      }                 case APPLICATION:                     {                          Metadata Block Data mbd = new  Metadata Block Data Application ( mbh, raf )  ;                          block Info . metadata Block Application . add ( new  Metadata Block ( mbh, mbd )  )  ;                          break ;                      }                 case SEEKTABLE:                     {                          Metadata Block Data mbd = new  Metadata Block Data Seek Table ( mbh, raf )  ;                          block Info . metadata Block Seek Table . add ( new  Metadata Block ( mbh, mbd )  )  ;                          break ;                      }                 case CUESHEET:                     {                          Metadata Block Data mbd = new  Metadata Block Data Cue Sheet ( mbh, raf )  ;                          block Info . metadata Block Cue Sheet . add ( new  Metadata Block ( mbh, mbd )  )  ;                          break ;                      }                 default:                     {                         // What are the consequences of doing this                         raf . seek ( raf . get File Pointer (  )  + mbh . get Data Length (  )  )  ;                          break ;                      }             }         }         is Last Block = mbh . is Last Block (  )  ;      } catch  (  Cannot Read Exception cre )  {         throw new  Cannot Write Exception ( cre . get Message (  )  )  ;      } } // Number of bytes in the existing file available before audio data int available Room = compute Available Room ( block Info )  ;  // Minimum  Size of the  New tag data without padding          int new Tag Size = tc . convert ( tag )  . limit (  )  ;  // Number of bytes required for new tagdata and other metadata blocks int needed Room = new Tag Size + compute Needed Room ( block Info )  ;  // Go to start of  Flac within file raf . seek ( flac Stream . get Start Of Flac In File (  )  )  ;  logger . config ( "" Writing tag available bytes:"" + available Room + "":needed bytes:"" + needed Room )  ;  //adjust padding accordingly need to allow space for padding header if padding required if  (  ( available Room == needed Room )  ||  ( available Room > needed Room +  Metadata Block Header . HEADER_LENGTH )  )  {     // Jump over  Id3  ( if exists )   Flac and  Stream Info Block     raf . seek ( flac Stream . get Start Of Flac In File (  )  +  Flac Stream Reader . FLAC_STREAM_IDENTIFIER_LENGTH )  ;      // Write  Stream Info, we always write this first even if wasn't first in original spec     raf . write ( block Info . stream Info Block . get Header (  )  . get Bytes Without Is Last Block Flag (  )  )  ;      raf . write ( block Info . stream Info Block . get Data (  )  . get Bytes (  )  )  ;      // Write  Application  Blocks     for  (  Metadata Block a Metadata Block Application : block Info . metadata Block Application )  {         raf . write ( a Metadata Block Application . get Header (  )  . get Bytes Without Is Last Block Flag (  )  )  ;          raf . write ( a Metadata Block Application . get Data (  )  . get Bytes (  )  )  ;      }     // Write  Seek  Table  Blocks     for  (  Metadata Block a Metadata Block Seek Table : block Info . metadata Block Seek Table )  {         raf . write ( a Metadata Block Seek Table . get Header (  )  . get Bytes Without Is Last Block Flag (  )  )  ;          raf . write ( a Metadata Block Seek Table . get Data (  )  . get Bytes (  )  )  ;      }     // Write  Cue sheet  Blocks     for  (  Metadata Block a Metadata Block Cue Sheet : block Info . metadata Block Cue Sheet )  {         raf . write ( a Metadata Block Cue Sheet . get Header (  )  . get Bytes Without Is Last Block Flag (  )  )  ;          raf . write ( a Metadata Block Cue Sheet . get Data (  )  . get Bytes (  )  )  ;      }     // Write tag  ( and padding )      raf . get Channel (  )  . write ( tc . convert ( tag, available Room - needed Room )  )  ;  } else // Need to move audio {     // If  Flac tag contains ID3header or something before start of official  Flac header copy it over     if  ( flac Stream . get Start Of Flac In File (  )  > 0 )  {         raf . seek ( 0 )  ;          raf Temp . get Channel (  )  . transfer From ( raf . get Channel (  ) , 0, flac Stream . get Start Of Flac In File (  )  )  ;          raf Temp . seek ( flac Stream . get Start Of Flac In File (  )  )  ;      }     raf Temp . write Bytes (  Flac Stream Reader . FLAC_STREAM_IDENTIFIER )  ;      // To ensure never set  Last-metadata-block flag even if was before     raf Temp . write Byte ( 0 )  ;      int upto Stream Header Size = flac Stream . get Start Of Flac In File (  )  +  Flac Stream Reader . FLAC_STREAM_IDENTIFIER_LENGTH +  Metadata Block Header . BLOCK_TYPE_LENGTH ;      raf Temp . seek ( upto Stream Header Size )  ;      raf . seek ( upto Stream Header Size )  ;      raf Temp . get Channel (  )  . transfer From ( raf . get Channel (  ) , upto Stream Header Size,  Metadata Block Header . BLOCK_LENGTH +  Metadata Block Data Stream Info . STREAM_INFO_DATA_LENGTH )  ;      int data Start Size = flac Stream . get Start Of Flac In File (  )  +  Flac Stream Reader . FLAC_STREAM_IDENTIFIER_LENGTH +  Metadata Block Header . HEADER_LENGTH +  Metadata Block Data Stream Info . STREAM_INFO_DATA_LENGTH ;      raf Temp . seek ( data Start Size )  ;      // Write all the metadatablocks     for  (  Metadata Block a Metadata Block Application : block Info . metadata Block Application )  {         raf Temp . write ( a Metadata Block Application . get Header (  )  . get Bytes Without Is Last Block Flag (  )  )  ;          raf Temp . write ( a Metadata Block Application . get Data (  )  . get Bytes (  )  )  ;      }     for  (  Metadata Block a Metadata Block Seek Table : block Info . metadata Block Seek Table )  {         raf Temp . write ( a Metadata Block Seek Table . get Header (  )  . get Bytes Without Is Last Block Flag (  )  )  ;          raf Temp . write ( a Metadata Block Seek Table . get Data (  )  . get Bytes (  )  )  ;      }     for  (  Metadata Block a Metadata Block Cue Sheet : block Info . metadata Block Cue Sheet )  {         raf Temp . write ( a Metadata Block Cue Sheet . get Header (  )  . get Bytes Without Is Last Block Flag (  )  )  ;          raf Temp . write ( a Metadata Block Cue Sheet . get Data (  )  . get Bytes (  )  )  ;      }     // Write tag data use default padding     raf Temp . write ( tc . convert ( tag,  Flac Tag Creator . DEFAULT_PADDING )  . array (  )  )  ;      // Write audio to new file     raf . seek ( data Start Size + available Room )  ;      // Issue #385     // Transfer 'size' bytes from raf at its current position to raf Temp at position but do it in batches     //to prevent  Out Of Memory exceptions     long amount To Be Written = raf . get Channel (  )  . size (  )  - raf . get Channel (  )  . position (  )  ;      long written = 0 ;      long chunksize =  Tag Option Singleton . get Instance (  )  . get Write Chunk Size (  )  ;      long count = amount To Be Written / chunksize ;      long mod = amount To Be Written % chunksize ;      for  ( int i = 0 ;  i < count ;  i++ )  {         written += raf Temp . get Channel (  )  . transfer From ( raf . get Channel (  ) , raf Temp . get Channel (  )  . position (  ) , chunksize )  ;          raf Temp . get Channel (  )  . position ( raf Temp . get Channel (  )  . position (  )  + chunksize )  ;      }     written += raf Temp . get Channel (  )  . transfer From ( raf . get Channel (  ) , raf Temp . get Channel (  )  . position (  ) , mod )  ;      if  ( written != amount To Be Written )  {         throw new  Cannot Write Exception ( "" Was meant to write "" + amount To Be Written + "" bytes but only written "" + written + "" bytes"" )  ;      } }}"
1173,public  Bit Set get Checked Item Record (  ) { return  (  Bit Set )  m Checked Items . clone (  )  ; }
1174,"protected void auto Scale (  ) { final float from X = get Lowest Visible X (  )  ;  final float to X = get Highest Visible X (  )  ;  m Data . calc Min Max Y ( from X, to X )  ;  m X Axis . calculate ( m Data . get X Min (  ) , m Data . get X Max (  )  )  ;  if  ( m Axis Left . is Enabled (  )  )      m Axis Left . calculate ( m Data . get Y Min (  Axis Dependency . LEFT ) , m Data . get Y Max (  Axis Dependency . LEFT )  )  ;  if  ( m Axis Right . is Enabled (  )  )      m Axis Right . calculate ( m Data . get Y Min (  Axis Dependency . RIGHT ) , m Data . get Y Max (  Axis Dependency . RIGHT )  )  ;  calculate Offsets (  )  ; }"
1175,"public static  Beacon Manager get Instance For Application ( @ Non Null  Context context ) { /*      *  Follow double check pattern from  Effective  Java v2  Item 71 .       *      *  Bloch recommends using the local variable for this for performance reasons:      *      * >  What this variable does is ensure that `field` is read only once in the common case      * > where it's already initialized .   While not strictly necessary, this may improve      * > performance and is more elegant by the standards applied to low-level concurrent      * > programming .   On my machine,  [ this ]  is about 25 percent faster than the obvious      * > version without a local variable .       *      *  Joshua  Bloch .   Effective  Java,  Second  Edition .   Addison- Wesley, 2008 .  pages 283-284      */  Beacon Manager instance = s Instance ;  if  ( instance == null )  {     synchronized  ( SINGLETON_LOCK )  {         instance = s Instance ;          if  ( instance == null )  {             s Instance = instance = new  Beacon Manager ( context )  ;          }     } } return instance ; }"
1176,"public com . anychart . core . cartesian . series .  Base With Markers hover (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . hover (  )  ; "" )  ;  return this ; }"
1177,public void on Pause (  ) { gl Thread . on Pause (  )  ; }
1178,public void set Top ( float top ) { this . top = top ; }
1179,"public static  Person Ident parse Person Ident (  String in ) { return parse Person Ident (  Constants . encode ( in ) , 0 )  ; }"
1180,"public int read ( char [  ]  buff, int off, int len )  throws IO Exception{ int b = read (  )  ;  if  ( b == -1 )      // EOF, not zero read apparently     return -1 ;  else {     buff [ off ]  =  ( char )  b ;      return 1 ;  }}"
1181,"public com . anychart . charts .  Polar left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
1182,"public com . didiglobal . booster . aapt2 .  Resources .  File Reference .  Type get Type (  ) { @ Suppress Warnings ( ""deprecation"" )  com . didiglobal . booster . aapt2 .  Resources .  File Reference .  Type result = com . didiglobal . booster . aapt2 .  Resources .  File Reference .  Type . value Of ( type_ )  ;  return result == null ? com . didiglobal . booster . aapt2 .  Resources .  File Reference .  Type . UNRECOGNIZED : result ; }"
1183,public void hide (  ) {  Layout Params lp =  (  Layout Params )  m Content View . get Layout Params (  )  ;  lp . height = 0 ;  m Content View . set Layout Params ( lp )  ; }
1184,"public com . anychart . core . gantt . elements .  Connector Element preview Stroke (  String value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . preview Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( value ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
1185,"public  Intent get Intent ( @ Non Null  Context context ) { m Preview Intent . set Class ( context,  Photo Pager Activity . class )  ;  m Preview Intent . put Extras ( m Preview Options Bundle )  ;  return m Preview Intent ; }"
1186,"public com . anychart . core . ui .  Circular Labels Factory offset Y (  String offset ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . offset Y ( %s )  ; "", wrap Quotes ( offset )  )  )  ;  return this ; }"
1187,"public static int get Dts Frame Size ( byte [  ]  data ) { int fsize ;  boolean uses14 Bit Per Word = false ;  switch ( data [ 0 ]  )  {     case FIRST_BYTE_14 B_BE:         fsize =  (  (  ( data [ 6 ]  & 0x03 )  << 12 )  |  (  ( data [ 7 ]  & 0x FF )  << 4 )  |  (  ( data [ 8 ]  & 0x3 C )  >> 2 )  )  + 1 ;          uses14 Bit Per Word = true ;          break ;      case FIRST_BYTE_LE:         fsize =  (  (  ( data [ 4 ]  & 0x03 )  << 12 )  |  (  ( data [ 7 ]  & 0x FF )  << 4 )  |  (  ( data [ 6 ]  & 0x F0 )  >> 4 )  )  + 1 ;          break ;      case FIRST_BYTE_14 B_LE:         fsize =  (  (  ( data [ 7 ]  & 0x03 )  << 12 )  |  (  ( data [ 6 ]  & 0x FF )  << 4 )  |  (  ( data [ 9 ]  & 0x3 C )  >> 2 )  )  + 1 ;          uses14 Bit Per Word = true ;          break ;      default:         //  We blindly assume FIRST_BYTE_BE if none of the others match .          fsize =  (  (  ( data [ 5 ]  & 0x03 )  << 12 )  |  (  ( data [ 6 ]  & 0x FF )  << 4 )  |  (  ( data [ 7 ]  & 0x F0 )  >> 4 )  )  + 1 ;  } //  If the frame is stored in 14-bit mode, adjust the frame size to reflect the actual byte size .  return uses14 Bit Per Word ? fsize * 16 / 14 : fsize ; }"
1188,"public void get Excluded Points (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Excluded Points (  )  ; "" )  ; }"
1189,public void stop (  ) { if  ( m Non Blocking Executor != null )  {     m Non Blocking Executor . shutdown Now (  )  ;      m Non Blocking Executor = null ;  } if  ( m Blocking Executor != null )  {     m Blocking Executor . shutdown Now (  )  ;      m Blocking Executor = null ;  } if  ( m Non Blocking Scheduled Executor != null )  {     m Non Blocking Scheduled Executor . shutdown Now (  )  ;      m Non Blocking Scheduled Executor = null ;  }}
1190,"public  Build Target create Optimize Build Target (  String name ) {  String output Name =  Cxx Flavor Sanitizer . sanitize ( get Compile Flavor Suffix ( name )  )  ;  return get Base Build Target (  )  . with Appended Flavors ( get Cxx Platform (  )  . get Flavor (  ) ,  Internal Flavor . of (  String . format ( OPTIMIZE_FLAVOR_PREFIX + ""%s%s"", get Pic Type (  )  ==  Pic Type . PIC ? ""pic-"" : """", output Name )  )  )  ; }"
1191,"public com . anychart . charts .  Circular Gauge start Angle (  String angle ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . start Angle ( %s )  ; "", wrap Quotes ( angle )  )  )  ;  return this ; }"
1192,public  Builder clear Re Session Id (  ) { if  ( re Session Id Builder_ == null )  {     re Session Id_ = null ;      on Changed (  )  ;  } else {     re Session Id_ = null ;      re Session Id Builder_ = null ;  } return this ; }
1193,"public void use Source Image Aspect Ratio (  ) { m Option Bundle . put Float ( EXTRA_ASPECT_RATIO_X, 0 )  ;  m Option Bundle . put Float ( EXTRA_ASPECT_RATIO_Y, 0 )  ; }"
1194,"private void log Event Async (  In App Message message,  String event, boolean update Conversion Tracking ) {  String campaign Id = message . get Campaign Metadata (  )  . get Campaign Id (  )  ;   String campaign Name = message . get Campaign Metadata (  )  . get Campaign Name (  )  ;   Bundle params = collect Analytics Params ( campaign Name, campaign Id )  ;   Logging . logd ( "" Sending event="" + event + "" params="" + params )  ;  if  ( analytics Connector != null )  {     analytics Connector . log Event (  Analytics Constants . ORIGIN_FIAM, event, params )  ;      if  ( update Conversion Tracking )  {         //  Use USER_PROPERTY_FIREBASE_LAST_NOTIFICATION for conversion tracking, prefix the         // campaign Id with         // ""fiam:""         analytics Connector . set User Property (  Analytics Constants . ORIGIN_FIAM,  Analytics Constants . USER_PROPERTY_FIREBASE_LAST_NOTIFICATION, ""fiam:"" + campaign Id )  ;      } } else {      Logging . logw ( "" Unable to log event: analytics library is missing"" )  ;  }}"
1195,public  File [  ]  get Alternate Object Directories (  ) { final  List< File> alts = alternate Object Directories ;  if  ( alts == null )      return null ;  return alts . to Array ( new  File [ 0 ]  )  ; }
1196,"public void date To Pix (  Number date ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . date To Pix ( %s )  ; "", date )  )  ; }"
1197,"public com . anychart . standalones .  Markers Factory stroke (  String color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( color )  )  )  ;  return this ; }"
1198,"void attach Extensions (  Context context, MOUNT_CONTENT content, @ Nullable  Object layout Data ) { bind (  (  List )  m Attach Detach Extensions, context, content, layout Data )  ; }"
1199,public  Comparator<? super E> comparator (  ) { return min Heap . ordering ; }
1200,"public com . anychart . math .  Rect get Pixel Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . get Pixel Bounds (  ) "" )  ; }"
1201,"public  Animation get Animation ( final  String id, boolean ignore Case ) { final int n = animations . size ;   Animation animation ;  if  ( ignore Case )  {     for  ( int i = 0 ;  i < n ;  i++ )  if  (  ( animation = animations . get ( i )  )  . id . equals Ignore Case ( id )  )          return animation ;  } else {     for  ( int i = 0 ;  i < n ;  i++ )  if  (  ( animation = animations . get ( i )  )  . id . equals ( id )  )          return animation ;  } return null ; }"
1202,"protected void check Auto Full With Size And Adaptation ( final GSY Base Video Player gsy Video Player ) { if  ( gsy Video Player != null )  {     //判断是否自动选择；判断是否是竖直的视频；判断是否隐藏状态栏     if  ( is Need Auto Adaptation && is Auto Full With Size (  )  && is Vertical Video (  )  && is Full Hide Status Bar (  )  )  {         m Inner Handler . post Delayed ( new  Runnable (  )  {             @ Override             public void run (  )  {                 gsy Video Player . get Current Player (  )  . auto Adaptation (  )  ;              }         }, 100 )  ;      } }}"
1203,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
1204,"public com . anychart . core . ui .  Crosshair Label font Decoration (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Decoration ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
1205,"final boolean is Dynamic Class (  String plugin,  String class Name ) { if  ( ! Text Utils . is Empty ( class Name )  && ! Text Utils . is Empty ( plugin )  )  {      Dynamic Class dc = m Dynamic Classes . get ( class Name )  ;      if  ( dc != null )  {         return plugin . equals ( dc . plugin )  ;      } } return false ; }"
1206,"public int get Current Versions Session Count (  ) { synchronized  ( _cly )  {     int session Count = get Current Versions Session Count Internal ( _cly . connection Queue_ . get Countly Store (  )  )  ;      L . i ( "" [  Ratings ]   Getting star rating current version session count:  [ "" + session Count + "" ] "" )  ;      return session Count ;  }}"
1207,public static P Stream Transformation keep Changes (  String field Name ) { return new  Keep Field Changes Filter ( field Name )  ; }
1208,"public com . anychart . core . polar . series .  Continuous Base y Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1209,"public com . anychart . charts .  Scatter max Labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1210,"public boolean enter When (  Guard guard,  Duration time )  throws  Interrupted Exception{ return enter When ( guard, to Nanos Saturated ( time ) ,  Time Unit . NANOSECONDS )  ; }"
1211,"void test Equality (  )  throws  Exception{ /*  Create some students */ final var first Student = new  Student ( 1, "" Adam"", 'A' )  ;  final var second Student = new  Student ( 2, "" Donald"", 'B' )  ;  final var second Same Student = new  Student ( 2, "" Donald"", 'B' )  ;  /*  Check equals functionality: should return 'true' */ assert Equals ( first Student, first Student )  ;  /*  Check equals functionality: should return 'false' */ assert Not Equals ( first Student, second Student )  ;  /*  Check equals functionality: should return 'true' */ assert Equals ( second Student, second Same Student )  ; }"
1212,public boolean try Set Result ( T Result result ) { return task . try Set Result ( result )  ; }
1213,"public static void start Activity (  Context context,  Intent intent,  Bundle options ) {  Theme Manager . start Activity ( context, intent, -1, options )  ; }"
1214,"public  Cache Builder<K, V> refresh After Write ( java . time .  Duration duration ) { return refresh After Write ( to Nanos Saturated ( duration ) ,  Time Unit . NANOSECONDS )  ; }"
1215,public  Complete Builder affects Tags ( @ Nullable  Collection< String> tags ) { affects Tags = non Null Set ( tags )  ;  return this ; }
1216,"private void handle Client Core Message_ Pre Load (  Message msg ) { switch ( msg . arg1 )  {     case PRE_LOAD_NO_CACHE:         {             if  ( was Load Url Invoked . compare And Set ( false, true )  )  {                  Sonic Utils . log ( TAG,  Log . INFO, ""session ( "" + s Id + "" )  handle Client Core Message_ Pre Load:PRE_LOAD_NO_CACHE load url . "" )  ;                  session Client . load Url ( src Url, null )  ;              } else {                  Sonic Utils . log ( TAG,  Log . ERROR, ""session ( "" + s Id + "" )  handle Client Core Message_ Pre Load:was Load Url Invoked = true . "" )  ;              }         }         break ;      case PRE_LOAD_WITH_CACHE:         {             if  ( was Load Data Invoked . compare And Set ( false, true )  )  {                  Sonic Utils . log ( TAG,  Log . INFO, ""session ( "" + s Id + "" )  handle Client Core Message_ Pre Load:PRE_LOAD_WITH_CACHE load data . "" )  ;                   String html =  (  String )  msg . obj ;                  session Client . load Data With Base Url And Header ( src Url, html, ""text/html"",  Sonic Utils . DEFAULT_CHARSET, src Url, get Cache Headers (  )  )  ;              } else {                  Sonic Utils . log ( TAG,  Log . ERROR, ""session ( "" + s Id + "" )  handle Client Core Message_ Pre Load:was Load Data Invoked = true . "" )  ;              }         }         break ;  }}"
1217,"public com . anychart . standalones .  Labels Factory padding (  Number value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, value3, value4 )  )  ;  return this ; }"
1218,public  Insn get Original Rop Insn (  ) { return null ; }
1219,"protected void update Debug Overlay ( @ Nullable  Closeable Image image,  Debug Controller Overlay Drawable debug Overlay ) { debug Overlay . set Controller Id ( get Id (  )  )  ;  final  Drawee Hierarchy drawee Hierarchy = get Hierarchy (  )  ;   Scale Type scale Type = null ;  if  ( drawee Hierarchy != null )  {     final  Scale Type Drawable scale Type Drawable =  Scaling Utils . get Active Scale Type Drawable ( drawee Hierarchy . get Top Level Drawable (  )  )  ;      scale Type = scale Type Drawable != null ? scale Type Drawable . get Scale Type (  )  : null ;  } debug Overlay . set Scale Type ( scale Type )  ;  // fill in image origin text and color hint final int origin = m Debug Overlay Image Origin Listener . get Image Origin (  )  ;  final  String origin Text =  Image Origin Utils . to String ( origin )  ;  final int origin Color =  Debug Overlay Image Origin Color . get Image Origin Color ( origin )  ;  debug Overlay . set Origin ( origin Text, origin Color )  ;  if  ( image != null )  {     debug Overlay . set Dimensions ( image . get Width (  ) , image . get Height (  )  )  ;      debug Overlay . set Image Size ( image . get Size In Bytes (  )  )  ;  } else {     debug Overlay . reset (  )  ;  }}"
1220,"public com . anychart . charts .  Sankey margin (  String value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
1221,public  Rebase Command set Operation (  Operation operation ) { this . operation = operation ;  return this ; }
1222,"public com . anychart . core . ui .  Tooltip tooltip (  ) { return new com . anychart . core . ui .  Tooltip ( js Base + "" . tooltip (  ) "" )  ; }"
1223,"public  String get Cpu Rate Info (  ) {  String Builder sb = new  String Builder (  )  ;  synchronized  ( m Cpu Info Entries )  {     for  (  Map .  Entry< Long,  String> entry : m Cpu Info Entries . entry Set (  )  )  {         long time = entry . get Key (  )  ;          sb . append (  Block Info . TIME_FORMATTER . format ( time )  )  . append ( ' ' )  . append ( entry . get Value (  )  )  . append (  Block Info . SEPARATOR )  ;      } } return sb . to String (  )  ; }"
1224,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
1225,"public void test Audience All Accounts (  ) { final  Public Client Application Configuration config = load Config ( R . raw . test_pcaconfig_aud_allaccts )  ;  assert Not Null ( config )  ;  assert Equals ( 1, config . get Authorities (  )  . size (  )  )  ;  final  Authority authority = config . get Authorities (  )  . get ( 0 )  ;  assert True ( authority instanceof  Azure Active Directory Authority )  ;  final  Azure Active Directory Authority azure Active Directory Authority =  (  Azure Active Directory Authority )  authority ;  assert True ( azure Active Directory Authority . m Audience instanceof  All Accounts )  ; }"
1226,public void add Tree Model Listener (  Tree Model Listener l ) {}
1227,"private void read Header Flags (  Byte Buffer byte Buffer )  throws  Tag Exception{ // Flags byte flags = byte Buffer . get (  )  ;  unsynchronization =  ( flags & MASK_V22_UNSYNCHRONIZATION )  != 0 ;  compression =  ( flags & MASK_V22_COMPRESSION )  != 0 ;  if  ( unsynchronization )  {     logger . config (  Error Message . ID3_TAG_UNSYNCHRONIZED . get Msg ( get Logging Filename (  )  )  )  ;  } if  ( compression )  {     logger . config (  Error Message . ID3_TAG_COMPRESSED . get Msg ( get Logging Filename (  )  )  )  ;  } // Not allowable/ Unknown  Flags if  (  ( flags &  File Constants . BIT5 )  != 0 )  {     logger . warning (  Error Message . ID3_INVALID_OR_UNKNOWN_FLAG_SET . get Msg ( get Logging Filename (  ) ,  File Constants . BIT5 )  )  ;  } if  (  ( flags &  File Constants . BIT4 )  != 0 )  {     logger . warning (  Error Message . ID3_INVALID_OR_UNKNOWN_FLAG_SET . get Msg ( get Logging Filename (  ) ,  File Constants . BIT4 )  )  ;  } if  (  ( flags &  File Constants . BIT3 )  != 0 )  {     logger . warning (  Error Message . ID3_INVALID_OR_UNKNOWN_FLAG_SET . get Msg ( get Logging Filename (  ) ,  File Constants . BIT3 )  )  ;  } if  (  ( flags &  File Constants . BIT2 )  != 0 )  {     logger . warning (  Error Message . ID3_INVALID_OR_UNKNOWN_FLAG_SET . get Msg ( get Logging Filename (  ) ,  File Constants . BIT2 )  )  ;  } if  (  ( flags &  File Constants . BIT1 )  != 0 )  {     logger . warning (  Error Message . ID3_INVALID_OR_UNKNOWN_FLAG_SET . get Msg ( get Logging Filename (  ) ,  File Constants . BIT1 )  )  ;  } if  (  ( flags &  File Constants . BIT0 )  != 0 )  {     logger . warning (  Error Message . ID3_INVALID_OR_UNKNOWN_FLAG_SET . get Msg ( get Logging Filename (  ) ,  File Constants . BIT3 )  )  ;  }}"
1228,public  Optional< Immutable List< String>> get Independent Shlib Interfaces Ldflags (  ) { return get Flags ( INDEPENDENT_SHLIB_INTERFACE_LDFLAGS )  ; }
1229,"public  Attribute Info copy (  Const Pool new Cp,  Map< String,  String> classnames ) { byte [  ]  src = info ;  int num = src . length ;  byte [  ]  dest = new byte [ num ]  ;  for  ( int i = 0 ;  i < num ;  ++i )  dest [ i ]  = src [ i ]  ;   Line Number Attribute attr = new  Line Number Attribute ( new Cp, dest )  ;  return attr ; }"
1230,"private void initialize (  Attribute Set attrs ) { //  Get attributes set on view  Typed Array attributes = get Context (  )  . obtain Styled Attributes ( attrs, R . styleable . zxing_view )  ;  int scanner Layout = attributes . get Resource Id ( R . styleable . zxing_view_zxing_scanner_layout, R . layout . zxing_barcode_scanner )  ;  attributes . recycle (  )  ;  inflate ( get Context (  ) , scanner Layout, this )  ;  barcode View = find View By Id ( R . id . zxing_barcode_surface )  ;  if  ( barcode View == null )  {     throw new  Illegal Argument Exception ( "" There is no a com . journeyapps . barcodescanner .  Barcode View on provided layout "" + ""with the id \""zxing_barcode_surface\"" . "" )  ;  } //  Pass on any preview-related attributes barcode View . initialize Attributes ( attrs )  ;  view Finder = find View By Id ( R . id . zxing_viewfinder_view )  ;  if  ( view Finder == null )  {     throw new  Illegal Argument Exception ( "" There is no a com . journeyapps . barcodescanner .  Viewfinder View on provided layout "" + ""with the id \""zxing_viewfinder_view\"" . "" )  ;  } view Finder . set Camera Preview ( barcode View )  ;  // status View is optional status View = find View By Id ( R . id . zxing_status_view )  ; }"
1231,public void start (  ) { for  (  Animator animator : m Animator Set . get Child Animations (  )  )  {     if  ( animator instanceof  Value Animator )  {          (  (  Value Animator )  animator )  . set Repeat Count ( m Repeat Times )  ;           (  (  Value Animator )  animator )  . set Repeat Mode ( m Repeat Mode )  ;      } } m Animator Set . set Duration ( m Duration )  ;  m Animator Set . start (  )  ; }
1232,public http_errno get Http_errno (  ) { return http_errno ; }
1233,public static boolean regular Exist Freeline Class Path (  Virtual File file ) { try {     if  ( file . exists (  )  )  {          String content =  File Utils . read File To String ( new  File ( file . get Path (  )  )  )  ;           Matcher matcher = PATTERN_CLASSPATH . matcher ( content )  ;          return matcher . find (  )  ;      } } catch  ( IO Exception e )  {     e . print Stack Trace (  )  ;  } return false ; }
1234,"public  String name Without Extension (  ) {  String name = file . get Name (  )  ;  int dot Index = name . last Index Of ( ' . ' )  ;  if  ( dot Index == -1 )      return name ;  return name . substring ( 0, dot Index )  ; }"
1235,"public static void build (  Mesh Part Builder builder,  Vertex Info corner000,  Vertex Info corner010,  Vertex Info corner100,  Vertex Info corner110,  Vertex Info corner001,  Vertex Info corner011,  Vertex Info corner101,  Vertex Info corner111 ) { builder . ensure Vertices ( 8 )  ;  final short i000 = builder . vertex ( corner000 )  ;  final short i100 = builder . vertex ( corner100 )  ;  final short i110 = builder . vertex ( corner110 )  ;  final short i010 = builder . vertex ( corner010 )  ;  final short i001 = builder . vertex ( corner001 )  ;  final short i101 = builder . vertex ( corner101 )  ;  final short i111 = builder . vertex ( corner111 )  ;  final short i011 = builder . vertex ( corner011 )  ;  final int primitive Type = builder . get Primitive Type (  )  ;  if  ( primitive Type == GL20 . GL_LINES )  {     builder . ensure Indices ( 24 )  ;      builder . rect ( i000, i100, i110, i010 )  ;      builder . rect ( i101, i001, i011, i111 )  ;      builder . index ( i000, i001, i010, i011, i110, i111, i100, i101 )  ;  } else if  ( primitive Type == GL20 . GL_POINTS )  {     builder . ensure Rectangle Indices ( 2 )  ;      builder . rect ( i000, i100, i110, i010 )  ;      builder . rect ( i101, i001, i011, i111 )  ;  } else {     // GL20 . GL_TRIANGLES     builder . ensure Rectangle Indices ( 6 )  ;      builder . rect ( i000, i100, i110, i010 )  ;      builder . rect ( i101, i001, i011, i111 )  ;      builder . rect ( i000, i010, i011, i001 )  ;      builder . rect ( i101, i111, i110, i100 )  ;      builder . rect ( i101, i100, i000, i001 )  ;      builder . rect ( i110, i111, i011, i010 )  ;  }}"
1236,"public static void add Frame (  String path, long time,  Bitmap bitmap ) { add Frame ( to Data Source ( path ) , time, bitmap )  ; }"
1237,public int get Sub Items Count (  ) { return m Sub Item Count ; }
1238,"private static void install Freeline ( final  Project project, final  Freeline Status status, final  Psi File psi File ) {  Application Manager . get Application (  )  . execute On Pooled Thread ( new  Update Action .  Get Server Version ( new  Get Server Callback (  )  {     @ Override     public void on Success ( final  Gradle Dependency Entity entity )  {          Log Util . d ( ""获取版本号成功:"" + entity )  ;           Application Manager . get Application (  )  . invoke Later ( new  Runnable (  )  {             @ Override             public void run (  )  {                 install Freeline ( project, status, psi File, entity )  ;              }         } )  ;      }     @ Override     public void on Failure (  String err Msg )  {          Log Util . d ( ""获取版本号失败:"" + err Msg )  ;           Notification Utils . error Notification ( "" Get  Freeline  Version  Failure: "" + err Msg )  ;      } } )  )  ; }"
1239,public static void set Max Texture Size ( int tex Size ) { max Texture Size = tex Size ; }
1240,"public void initialize (  Context context,  String user Agent ) {}"
1241,"public  Test tests For Synchronized Navigable Set (  ) { return  Navigable Set Test Suite Builder . using ( new  Test String Sorted Set Generator (  )  {     @ Override     public  Sorted Set< String> create (  String [  ]  elements )  {          Navigable Set< String> delegate = new  Tree Set<> (  Minimal Collection . of ( elements )  )  ;          return  Collections . synchronized Navigable Set ( delegate )  ;      } } )  . named ( ""synchronized Navigable Set/ Tree Set, natural"" )  . with Features (  Set Feature . GENERAL_PURPOSE,  Collection Feature . SERIALIZABLE,  Collection Feature . KNOWN_ORDER,  Collection Feature . FAILS_FAST_ON_CONCURRENT_MODIFICATION,  Collection Size . ANY )  . suppressing ( suppress For Synchronized Navigable Set (  )  )  . create Test Suite (  )  ; }"
1242,public boolean has Matte (  ) { return lottie Drawable . has Matte (  )  ; }
1243,"public com . anychart . charts .  Waterfall marker Palette ( com . anychart . palettes .  Markers settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . marker Palette ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
1244,public void set Data (  Byte Buffer data ) { for  ( int i = 0 ;  i < offsets . length ;  i++ )  {     if  ( is Long Format (  )  )  {         offsets [ i ]  = data . get Int (  )  ;      } else {         offsets [ i ]  = 2 *  ( 0x FFFF &  ( int )  data . get Short (  )  )  ;      } }}
1245,"public void save As Png (  String width,  Number height,  Number quality,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Png ( %s, %s, %s, %s )  ; "", wrap Quotes ( width ) , height, quality, wrap Quotes ( filename )  )  )  ; }"
1246,"public static  Format parse Ac4 Annex E Format (  Parsable Byte Array data,  String track Id,  String language,  Drm Init Data drm Init Data ) { // ac4_dsi_version, bitstream_version [ 0:5 ]  data . skip Bytes ( 1 )  ;  int sample Rate =  (  ( data . read Unsigned Byte (  )  & 0x20 )  >> 5 == 1 )  ? 48000 : 44100 ;  return  Format . create Audio Sample Format ( track Id,  Mime Types . AUDIO_AC4, /* codecs= */ null, /* bitrate= */  Format . NO_VALUE, /* max Input Size= */  Format . NO_VALUE, CHANNEL_COUNT_2, sample Rate, /* initialization Data= */ null, drm Init Data, /* selection Flags= */ 0, language )  ; }"
1247,"public static  String preserve Slash Encode ( @ Nullable  String s ) { if  (  Text Utils . is Empty ( s )  )  {     return """" ;  } return slashize (  Uri . encode ( s )  )  ; }"
1248,"protected void serialize Prefixes (  Xml Serializer serializer )  throws IO Exception{ for  (  String key : declared Prefixes . key Set (  )  )  {     serializer . set Prefix ( key, declared Prefixes . get ( key )  )  ;  }}"
1249,"public void ssl Fallback Not Used When Recycled Connection Fails (  )  throws  Exception{ server . use Https ( handshake Certificates . ssl Socket Factory (  ) , false )  ;  server . enqueue ( new  Mock Response (  )  . set Body ( ""abc"" )  . set Socket Policy ( DISCONNECT_AT_END )  )  ;  server . enqueue ( new  Mock Response (  )  . set Body ( ""def"" )  )  ;  client = client . new Builder (  )  . hostname Verifier ( new  Recording Hostname Verifier (  )  )  . ssl Socket Factory ( suppress Tls Fallback Client Socket Factory (  ) , handshake Certificates . trust Manager (  )  )  . build (  )  ;  assert Content ( ""abc"", get Response ( new Request ( ""/"" )  )  )  ;  //  Give the server time to disconnect .   Thread . sleep ( 500 )  ;  assert Content ( ""def"", get Response ( new Request ( ""/"" )  )  )  ;   Set< Tls Version> tls Versions =  Enum Set . of (  Tls Version . TLS_1_0,  Tls Version . TLS_1_2, // v1 . 2 on  Open JDK 8 .   Tls Version . TLS_1_3 )  ;   Recorded Request request1 = server . take Request (  )  ;  assert That ( tls Versions )  . contains ( request1 . get Tls Version (  )  )  ;   Recorded Request request2 = server . take Request (  )  ;  assert That ( tls Versions )  . contains ( request2 . get Tls Version (  )  )  ; }"
1250,public synchronized int get Size In Bytes (  ) { return m Size In Bytes ; }
1251,public static  Listenable Future< Void> immediate Void Future (  ) { return  (  Listenable Future< Void> )   Immediate Future . NULL ; }
1252,"public void get Stat ( com . anychart . enums .  Statistics key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Stat ( %s )  ; "",  ( key != null )  ? key . get Js Base (  )  : null )  )  ; }"
1253,public void reset Tracking (  ) { total Time = 0 ;  draw Cycles = 0 ; }
1254,static  String get Disk Total (  ) { if  ( android . os .  Build . VERSION . SDK_INT < 18 )  {      Stat Fs stat Fs = new  Stat Fs (  Environment . get Root Directory (  )  . get Absolute Path (  )  )  ;      long total =  (  ( long )  stat Fs . get Block Count (  )  *  ( long )  stat Fs . get Block Size (  )  )  ;      return  Long . to String ( total / 1048576 L )  ;  } else {      Stat Fs stat Fs = new  Stat Fs (  Environment . get Root Directory (  )  . get Absolute Path (  )  )  ;      long total =  ( stat Fs . get Block Count Long (  )  * stat Fs . get Block Size Long (  )  )  ;      return  Long . to String ( total / 1048576 L )  ;  }}
1255,"protected void start Fold Animation (  Array List< Folding Cell View> folding Cell Elements,  View Group folding Layout, int part90degree Animation Duration,  Animation End Listener animation End Listener ) { for  (  Folding Cell View folding Cell Element : folding Cell Elements )  folding Layout . add View ( folding Cell Element )  ;   Collections . reverse ( folding Cell Elements )  ;  int next Delay = 0 ;  for  ( int i = 0 ;  i < folding Cell Elements . size (  )  ;  i++ )  {      Folding Cell View cell = folding Cell Elements . get ( i )  ;      cell . set Visibility ( VISIBLE )  ;      // not FIRST ( BOTTOM )  element - animate front view     if  ( i != 0 )  {          Fold Animation fold Animation = new  Fold Animation (  Fold Animation .  Fold Animation Mode . UNFOLD_UP, m Camera Height, part90degree Animation Duration )  . with Start Offset ( next Delay )  . with Interpolator ( new  Decelerate Interpolator (  )  )  ;          // if last ( top )  element - add end listener         if  ( i == folding Cell Elements . size (  )  - 1 )  {             fold Animation . set Animation Listener ( animation End Listener )  ;          }         cell . animate Front View ( fold Animation )  ;          next Delay = next Delay + part90degree Animation Duration ;      }     // if not last ( top )  element - animate whole view     if  ( i != folding Cell Elements . size (  )  - 1 )  {         cell . start Animation ( new  Fold Animation (  Fold Animation .  Fold Animation Mode . FOLD_UP, m Camera Height, part90degree Animation Duration )  . with Start Offset ( next Delay )  . with Interpolator ( new  Decelerate Interpolator (  )  )  )  ;          next Delay = next Delay + part90degree Animation Duration ;      } }}"
1256,"public  Completable forward Message (  Thread thread,  Message message ) { return  Completable . defer (  (  )  -> {      Message new Message = new Message ( message . get Type (  ) , thread )  ;      new Message . set Meta Values ( message . get Meta Values As Map (  )  )  ;      return new  Message Send Rig ( new Message, thread )  . run (  )  ;  } )  . subscribe On ( RX . db (  )  )  ; }"
1257,public float get Point Stroke Width (  ) { return m Point Stroke Width ; }
1258,"public void is Equal To ( @ Nullable  Object expected ) { // TODO ( user ) :  Do better here when  Message Lite descriptors are available .  if  (  Objects . equal ( actual, expected )  )  {     return ;  } if  ( actual == null || expected == null )  {     super . is Equal To ( expected )  ;  } else if  ( actual . get Class (  )  != expected . get Class (  )  )  {     fail Without Actual ( simple Fact ( lenient Format ( "" Not true that  ( %s )  proto is equal to the expected  ( %s )  object .  "" + "" They are not of the same class . "", actual . get Class (  )  . get Name (  ) , expected . get Class (  )  . get Name (  )  )  )  )  ;  } else {     /*    * TODO ( cpovirk ) :  If we someday let subjects override format Actual Or Expected (  ) , change this    * class to do so, and make this code path always delegate to super . is Equal To (  )  .     */      String our String = get Trimmed To String ( actual )  ;       String their String = get Trimmed To String (  (  Message Lite )  expected )  ;      if  ( !our String . equals ( their String )  )  {         // fails         new  Lite Proto As String Subject ( metadata, our String )  . is Equal To ( their String )  ;      } else {         //  This will include the  Object . to String (  )  headers .          super . is Equal To ( expected )  ;      } }}"
1259,"public com . anychart . core . stock .  Plot range Marker (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . range Marker ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
1260,public static boolean is Array ( @ Nullable  Value value ) { return value != null && value . get Value Type Case (  )  ==  Value .  Value Type Case . ARRAY_VALUE ; }
1261,public  Builder set Navigation Info Parameters ( @ Non Null  Navigation Info Parameters navigation Info Parameters ) { fdl Parameters . put All ( navigation Info Parameters . parameters )  ;  return this ; }
1262,"public float [  ]  calculate ( float [  ]  inputs ) { float [  ]  outputs = new float [ get Num Outputs (  )  ]  ;  calculate ( inputs, 0, outputs, 0 )  ;  return outputs ; }"
1263,"private static  String info (  String file Name,  Writer writer ) {  Print Writer pw = new  Print Writer ( writer, true )  ;  if  ( ! File Path . get ( file Name )  . exists (  )  )  {     pw . println ( "" File not found: "" + file Name )  ;      return "" File not found: "" + file Name ;  } long file Length =  File Utils . size ( file Name )  ;  MV Store store = new MV Store .  Builder (  )  . file Name ( file Name )  . read Only (  )  . open (  )  ;  try {     MV Map< String,  String> meta = store . get Meta Map (  )  ;       Map< String,  Object> header = store . get Store Header (  )  ;      long file Created =  Data Utils . read Hex Long ( header, ""created"", 0 L )  ;       Tree Map< Integer,  Chunk> chunks = new  Tree Map<> (  )  ;      long chunk Length = 0 ;      long max Length = 0 ;      long max Length Live = 0 ;      long max Length Not Empty = 0 ;      for  (  Map .  Entry< String,  String> e : meta . entry Set (  )  )  {          String k = e . get Key (  )  ;          if  ( k . starts With ( ""chunk . "" )  )  {              Chunk c =  Chunk . from String ( e . get Value (  )  )  ;              chunks . put ( c . id, c )  ;              chunk Length += c . len * BLOCK_SIZE ;              max Length += c . max Len ;              max Length Live += c . max Len Live ;              if  ( c . max Len Live > 0 )  {                 max Length Not Empty += c . max Len ;              }         }     }     pw . printf ( "" Created: %s\n"", format Timestamp ( file Created, file Created )  )  ;      pw . printf ( "" Last modified: %s\n"", format Timestamp (  File Utils . last Modified ( file Name ) , file Created )  )  ;      pw . printf ( "" File length: %d\n"", file Length )  ;      pw . printf ( "" The last chunk is not listed\n"" )  ;      pw . printf ( "" Chunk length: %d\n"", chunk Length )  ;      pw . printf ( "" Chunk count: %d\n"", chunks . size (  )  )  ;      pw . printf ( "" Used space: %d%%\n"", get Percent ( chunk Length, file Length )  )  ;      pw . printf ( "" Chunk fill rate: %d%%\n"", max Length == 0 ? 100 : get Percent ( max Length Live, max Length )  )  ;      pw . printf ( "" Chunk fill rate excluding empty chunks: %d%%\n"", max Length Not Empty == 0 ? 100 : get Percent ( max Length Live, max Length Not Empty )  )  ;      for  (  Map .  Entry< Integer,  Chunk> e : chunks . entry Set (  )  )  {          Chunk c = e . get Value (  )  ;          long created = file Created + c . time ;          pw . printf ( ""   Chunk %d: %s, %d%% used, %d blocks"", c . id, format Timestamp ( created, file Created ) , get Percent ( c . max Len Live, c . max Len ) , c . len )  ;          if  ( c . max Len Live == 0 )  {             pw . printf ( "", unused: %s"", format Timestamp ( file Created + c . unused, file Created )  )  ;          }         pw . printf ( ""\n"" )  ;      }     pw . printf ( ""\n"" )  ;  } catch  (  Exception e )  {     pw . println ( ""ERROR: "" + e )  ;      e . print Stack Trace ( pw )  ;      return e . get Message (  )  ;  } finally {     store . close (  )  ;  } pw . flush (  )  ;  return null ; }"
1264,"public  Test After Bind Props View Model_ on Visibility Changed (  On Model Visibility Changed Listener< Test After Bind Props View Model_,  Test After Bind Props View> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
1265,public  Config<T> set Firebase Storage URL (  String firebase Storage ) { this . firebase Storage Url = firebase Storage ;  return this ; }
1266,"public com . anychart . core . stock . indicators . PSAR acceleration Factor Maximum (  Number factor ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . acceleration Factor Maximum ( %s )  ; "", factor )  )  ;  return this ; }"
1267,"public void add Serialize Filter (  Serialize Filter filter ) { if  ( filter == null )  {     return ;  } int length = this . fast Json Config . get Serialize Filters (  )  . length ;   Serialize Filter [  ]  filters = new  Serialize Filter [ length + 1 ]  ;   System . arraycopy ( this . fast Json Config . get Serialize Filters (  ) , 0, filters, 0, length )  ;  filters [ filters . length - 1 ]  = filter ;  this . fast Json Config . set Serialize Filters ( filters )  ; }"
1268,"public void test Cancel On Non Animation Handler Thread (  )  throws  Interrupted Exception{ m Expected Exception . expect (  Android Runtime Exception . class )  ;   Spruce Spring Animation anim = new  Spruce Spring Animation ( m View1,  Spruce Dynamics . ALPHA, 0f )  ;   Instrumentation Registry . get Instrumentation (  )  . run On Main Sync (  (  )  -> {     anim . set Animation Handler ( anim . get Animation Handler (  )  )  ;  } )  ;  run Runnable On New Thread ( anim::cancel )  ; }"
1269,"public int find Custom Position ( int section Index, int custom Item Index, boolean un Fold Target Section ) { int item Index = QMUI Section . ITEM_INDEX_CUSTOM_OFFSET + custom Item Index ;  return find Position ( section Index, item Index, un Fold Target Section )  ; }"
1270,"public com . anychart . core . cartesian . series .  Line3d bounds (  Number x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
1271,"private  Size choose Optimal Size (  ) { int surface Longer, surface Shorter ;  final int surface Width = m Preview . get Width (  )  ;  final int surface Height = m Preview . get Height (  )  ;  if  ( surface Width < surface Height )  {     surface Longer = surface Height ;      surface Shorter = surface Width ;  } else {     surface Longer = surface Width ;      surface Shorter = surface Height ;  }  Sorted Set< Size> candidates = m Preview Sizes . sizes ( m Aspect Ratio )  ;  //  Pick the smallest of those big enough for  (  Size size : candidates )  {     if  ( size . get Width (  )  >= surface Longer && size . get Height (  )  >= surface Shorter )  {         return size ;      } } //  If no size is big enough, pick the largest one .  return candidates . last (  )  ; }"
1272,"private void handle Breakpoint Hit (  Stack Frame frame,  Context cx ) { break Flag = false ;  interrupted ( cx, frame, null )  ; }"
1273,private boolean has Namespace (  String uri ) { return  ( uri != null && uri . length (  )  > 0 )  ; }
1274,"public com . anychart . core . ui .  Circular Labels Factory text Settings (  String name,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Settings ( %s, %s )  ; "", wrap Quotes ( name ) , settings )  )  ;  return this ; }"
1275,"public long finish (  Output Stream out )  throws IO Exception{  Preconditions . check State ( deflater != null )  ;  if  ( method ==  Method . STORE )  {      Preconditions . check State ( entry . get Size (  )  == length && entry . get Compressed Size (  )  == length, "" Number of bytes written differs from what is specified in the entry . "" )  ;       Preconditions . check State ( entry . get Crc (  )  == calculate Crc (  ) , ""CRC of bytes written differs from what is specified in the entry . "" )  ;  } else if  ( method ==  Method . DEFLATE )  {     deflater . finish (  )  ;      while  ( !deflater . finished (  )  )  {         deflate ( out )  ;      }     entry . set Size ( deflater . get Bytes Read (  )  )  ;      entry . set Compressed Size ( deflater . get Bytes Written (  )  )  ;      entry . set Crc ( calculate Crc (  )  )  ;  } // write the data descriptor if required long data Descriptor Length = write Data Descriptor ( out )  ;  // regardless of the method used, end the deflater to free native resources .  deflater . end (  )  ;  deflater = null ;  buffer = null ;  return entry . get Compressed Size (  )  + data Descriptor Length ; }"
1276,"public com . anychart . core . stock . indicators .  Stochastic k MA Type ( com . anychart . enums .  Moving Average Type type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . k MA Type ( %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
1277,"public com . anychart . core . stock . scrollerseries .  Spline container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
1278,"public static  Drawable get Drawable ( @ Non Null final  String key, final  Drawable default Value ) { return get Drawable ( key, default Value, get Default Cache Double Utils (  )  )  ; }"
1279,"public static  Fragment get Top Show ( @ Non Null final  Fragment Manager fm ) { return get Top Show Is In Stack ( fm, null, false )  ; }"
1280,public  String get Signature (  ) { return field Info . get Descriptor (  )  ; }
1281,"public  Immersion Bar title Bar Margin Top ( @ Id Res int view Id,  View root View ) { return title Bar Margin Top ( root View . find View By Id ( view Id )  )  ; }"
1282,"public void get Series Count (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Series Count (  )  ; "" )  ; }"
1283,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
1284,"public com . anychart . charts .  Scatter text Marker (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Marker ( %s )  ; "", settings )  )  ;  return this ; }"
1285,public  Attribute Operation Type get Attribute Operation Type (  Node Name attribute Name ) { return m Attributes Operation Types . contains Key ( attribute Name )  ? m Attributes Operation Types . get ( attribute Name )  :  Attribute Operation Type . STRICT ; }
1286,public boolean is Reverse Dns Type (  ) { return identifier . starts With (  Mp4 Tag Reverse Dns Field . IDENTIFIER )  ; }
1287,"public com . anychart . core . cartesian . series .  Width Based hovered (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hovered ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1288,"private void read ASCII ( final  Buffered Reader buffer )  throws  Number Format Exception, IO Exception{  Raj Log . i ( "" Stl Paser:  Reading ASCII"" )  ;  final  List< Float> vertices = new  Array List< Float> (  )  ;  final  List< Float> normals = new  Array List< Float> (  )  ;  final float [  ]  temp Norms = new float [ 3 ]  ;  int next Offset, prev Offset, i, insert ;   String line ;  //  Skip the first line line = buffer . read Line (  )  ;  //  Read the facet while  (  ( line = buffer . read Line (  )  )  != null )  {     if  ( line . contains ( ""facet normal "" )  )  {         next Offset = line . last Index Of ( "" "" )  ;          temp Norms [ 2 ]  =  Float . parse Float ( line . substring ( next Offset + 1 )  )  ;          prev Offset = next Offset ;          next Offset = line . last Index Of ( "" "", prev Offset - 1 )  ;          temp Norms [ 1 ]  =  Float . parse Float ( line . substring ( next Offset + 1, prev Offset )  )  ;          prev Offset = next Offset ;          next Offset = line . last Index Of ( "" "", prev Offset - 1 )  ;          temp Norms [ 0 ]  =  Float . parse Float ( line . substring ( next Offset + 1, prev Offset )  )  ;          //  Need to duplicate the normal for each vertex of the triangle         for  ( i = 0 ;  i < 3 ;  i++ )  {             normals . add ( temp Norms [ 0 ]  )  ;              normals . add ( temp Norms [ 1 ]  )  ;              normals . add ( temp Norms [ 2 ]  )  ;          }     } else if  ( line . contains ( ""vertex "" )  )  {         insert = vertices . size (  )  ;          next Offset = line . last Index Of ( "" "" )  ;          vertices . add (  Float . parse Float ( line . substring ( next Offset + 1 )  )  )  ;          prev Offset = next Offset ;          next Offset = line . last Index Of ( "" "", prev Offset - 1 )  ;          vertices . add ( insert,  Float . parse Float ( line . substring ( next Offset + 1, prev Offset )  )  )  ;          prev Offset = next Offset ;          next Offset = line . last Index Of ( "" "", prev Offset - 1 )  ;          vertices . add ( insert,  Float . parse Float ( line . substring ( next Offset + 1, prev Offset )  )  )  ;      } } float [  ]  vertices Arr = new float [ vertices . size (  )  ]  ;  float [  ]  normals Arr = new float [ normals . size (  )  ]  ;  for  ( i = 0 ;  i < vertices Arr . length ;  i++ )  {     vertices Arr [ i ]  = vertices . get ( i )  ;      normals Arr [ i ]  = normals . get ( i )  ;  } //  Cleanup vertices . clear (  )  ;  normals . clear (  )  ;  int [  ]  indices Arr = new int [ vertices Arr . length / 3 ]  ;  for  ( i = 0 ;  i < indices Arr . length ;  i++ )  indices Arr [ i ]  = i ;  m Root Object . set Data ( vertices Arr, normals Arr, null, null, indices Arr, false )  ; }"
1289,"public static void print Short Description (  Command command,  Print Stream print Stream ) { print Stream . println ( "" Description: "" )  ;  print Stream . println ( ""  "" + command . get Short Description (  )  )  ;  print Stream . println (  )  ; }"
1290,public static int get Theme (  Activity activity ) { return get Theme ( activity . get Intent (  )  )  ; }
1291,public  Object [  ]  lookup Cflow (  String name ) { if  ( cflow == null )      cflow = new  Hashtable (  )  ;  return  (  Object [  ]  )  cflow . get ( name )  ; }
1292,"public void set Channel Number ( int chan Nb ) { content . put ( FIELD_CHANNEL, chan Nb )  ; }"
1293,"public T set Minimum Visible Change ( @ Float Range ( from = 0 . 0, from Inclusive = false )  float minimum Visible Change ) { if  ( minimum Visible Change <= 0 )  {     throw new  Illegal Argument Exception ( "" Minimum visible change must be positive . "" )  ;  } m Min Visible Change = minimum Visible Change ;  set Value Threshold ( minimum Visible Change * THRESHOLD_MULTIPLIER )  ;  return  ( T )  this ; }"
1294,"public com . anychart . core . cartesian . series .  Width Based min Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", width )  )  ;  return this ; }"
1295,"public com . anychart . charts .  Venn margin (  String value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
1296,public void reset (  ) { m Gesture In Progress = false ;  m Pointer Count = 0 ;  for  ( int i = 0 ;  i < MAX_POINTERS ;  i++ )  {     m Id [ i ]  =  Motion Event . INVALID_POINTER_ID ;  }}
1297,public void set This Method (  Method Info m ) { this Method = m ; }
1298,Intent get Next Started Service (  ) { if  ( started Services . is Empty (  )  )  {     return null ;  } else {     return started Services . remove ( 0 )  . get Intent (  )  ;  }}
1299,"public com . anychart . core . ui .  Title title (  ) { return new com . anychart . core . ui .  Title ( js Base + "" . title (  ) "" )  ; }"
1300,public  Immutable List< String> read Lines (  )  throws IO Exception{  Closer closer =  Closer . create (  )  ;  try {      Buffered Reader reader = closer . register ( open Buffered Stream (  )  )  ;       List< String> result =  Lists . new Array List (  )  ;       String line ;      while  (  ( line = reader . read Line (  )  )  != null )  {         result . add ( line )  ;      }     return  Immutable List . copy Of ( result )  ;  } catch  (  Throwable e )  {     throw closer . rethrow ( e )  ;  } finally {     closer . close (  )  ;  }}
1301,public T previous (  ) { if  ( iter == null )      return null ;  T payload = iter . payload ;  curr = iter ;  iter = iter . prev ;  return payload ; }
1302,public void set Share Content ( final  Share Content share Content ) { this . share Content = share Content ;  if  ( !enabled Explicitly Set )  {     internal Set Enabled ( can Share (  )  )  ;  }}
1303,public boolean has Labels Only For Selected (  ) { return has Labels Only For Selected ; }
1304,public  String get Subject (  ) { return payload . sub ; }
1305,public final void await Running (  ) { delegate . await Running (  )  ; }
1306,"public  Realm Query<E> greater Than (  String field Name, int value ) { realm . check If Valid (  )  ;   Field Descriptor fd = schema . get Field Descriptors ( field Name,  Realm Field Type . INTEGER )  ;  this . query . greater Than ( fd . get Column Keys (  ) , fd . get Native Table Pointers (  ) , value )  ;  return this ; }"
1307,"protected void assert Arguments (  Command Runner Params params ) { if  ( !get Arguments (  )  . is Empty (  )  )  {     return ;  }  String message = "" Must specify at least one build target .   See https://buck . build/concept/build_target_pattern . html"" ;   Immutable Set< String> aliases =  Alias Config . from ( params . get Buck Config (  )  )  . get Aliases (  )  . key Set (  )  ;  if  ( !aliases . is Empty (  )  )  {     //  If there are aliases defined in  . buckconfig, suggest that the user     // build one of them .   We show the user only the first 10 aliases .      message +=  String . format ( ""%n Try building one of the following targets:%n%s"",  Joiner . on ( ' ' )  . join (  Iterators . limit ( aliases . iterator (  ) , 10 )  )  )  ;  } throw new  Command Line Exception ( message )  ; }"
1308,"public  Units Manager set Design Height ( float design Height ) {  Preconditions . check Argument ( design Height > 0, ""design Height must be > 0"" )  ;  m Design Height = design Height ;  return this ; }"
1309,public java . lang .  String get Locale (  ) { java . lang .  Object ref = locale_ ;  if  ( ref instanceof java . lang .  String )  {     return  ( java . lang .  String )  ref ;  } else {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      locale_ = s ;      return s ;  }}
1310,public boolean is Set Results (  ) { return this . results != null ; }
1311,"public static  String convert Generic To ID3v24 Genre (  String value ) { try {     // If passed id and known value use it     int genre Id =  Integer . parse Int ( value )  ;      if  ( genre Id <  Genre Types . get Max Genre Id (  )  )  {         return  String . value Of ( genre Id )  ;      } else {         return value ;      } } catch  (  Number Format Exception nfe )  {     // If passed  String, use matching intregral value if can      Integer genre Id =  Genre Types . get Instance Of (  )  . get Id For Name ( value )  ;      if  ( genre Id != null )  {         return  String . value Of ( genre Id )  ;      }     // Covert special string values     if  ( value . equals Ignore Case ( ID3 V2 Extended Genre Types . RX . get Description (  )  )  )  {         value = ID3 V2 Extended Genre Types . RX . name (  )  ;      } else if  ( value . equals Ignore Case ( ID3 V2 Extended Genre Types . CR . get Description (  )  )  )  {         value = ID3 V2 Extended Genre Types . CR . name (  )  ;      } else if  ( value . equals Ignore Case ( ID3 V2 Extended Genre Types . RX . name (  )  )  )  {         value = ID3 V2 Extended Genre Types . RX . name (  )  ;      } else if  ( value . equals Ignore Case ( ID3 V2 Extended Genre Types . CR . name (  )  )  )  {         value = ID3 V2 Extended Genre Types . CR . name (  )  ;      } } return value ; }"
1312,public  Gson Builder new Builder (  ) { return new  Gson Builder ( this )  ; }
1313,"public void bottom (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . bottom (  )  ; "" )  ; }"
1314,public boolean is Re Boomed (  ) { return boom State Enum ==  Boom State Enum .  Did Reboom ; }
1315,"public static  Date smart Parse (  String date )  throws  Parse Exception{ // replace 'Z' with '+0000' to confirm to ISO8601 standard, as a workaround to limitations with  Simple Date Format // not parsing date correctly  String date Str = date . replace ( ""Z"", ""+0000"" )  ;  // parse different formats in turn, until one succeeds  String [  ]  date Formats = {  Date Util . ISO8601,  Date Util . RFC822,  Date Util . UTC,  Date Util . SIMPLE,  Date Util . DATE_TO_STRING, ""MM/dd/yyyy"" } ;  for  (  String format : date Formats )  {     try {         return  Date Util . parse ( format, date Str )  ;      } catch  (  Parse Exception e )  {     // ignore, try the next date format     } } throw new  Parse Exception ( "" Unable to parse date "" + date, 0 )  ; }"
1316,"private void optimize Tasks Locked (  ) { // noinspection deprecation  Array List< Activity Manager .  Recent Task Info> recent Task = new  Array List<> ( m AM . get Recent Tasks (  Integer . MAX_VALUE,  Activity Manager . RECENT_WITH_EXCLUDED |  Activity Manager . RECENT_IGNORE_UNAVAILABLE )  )  ;  int N = m History . size (  )  ;  while  ( N-- > 0 )  {      Task Record task = m History . value At ( N )  ;       List Iterator< Activity Manager .  Recent Task Info> iterator = recent Task . list Iterator (  )  ;      boolean task Alive = false ;      while  ( iterator . has Next (  )  )  {          Activity Manager .  Recent Task Info info = iterator . next (  )  ;          if  ( info . id == task . task Id )  {             task Alive = true ;              iterator . remove (  )  ;              break ;          }     }     if  ( !task Alive )  {         m History . remove At ( N )  ;      } }}"
1317,"public  String get Chart Type (  ) { return "" Combined"" ; }"
1318,"public com . anychart . core . polar . series .  Range Column z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
1319,"public com . anychart . charts .  Scatter marker Palette ( com . anychart . enums .  Marker Type value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . marker Palette ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
1320,"public void write ( URL url )  throws IO Exception,  Interrupted Exception{ try {     byte [  ]  cookie File Content = get File Content If Modified (  )  ;      if  ( cookie File Content != null )  {         LOG . debug ( //$NON-NLS-1$         "" Reading the underlying cookie file '{}' "" + //$NON-NLS-1$         ""as it has been modified since "" + //$NON-NLS-1$         ""the last access"", path )  ;          // reread new changes if necessary          Set< Http Cookie> cookies From File =  Netscape Cookie File . parse Cookie File ( cookie File Content, created At )  ;          this . cookies = merge Cookies ( cookies From File, cookies )  ;      } } catch  (  File Not Found Exception e )  { // ignore if file previously did not exist yet! }  Byte Array Output Stream output = new  Byte Array Output Stream (  )  ;  try  (  Writer writer = new  Output Stream Writer ( output,  Standard Charsets . US_ASCII )  )  {     write ( writer, cookies, url, created At )  ;  }  Lock File lock File = new  Lock File ( path . to File (  )  )  ;  for  ( int retry Count = 0 ;  retry Count < LOCK_ACQUIRE_MAX_RETRY_COUNT ;  retry Count++ )  {     if  ( lock File . lock (  )  )  {         try {             lock File . set Need Snapshot ( true )  ;              lock File . write ( output . to Byte Array (  )  )  ;              if  ( !lock File . commit (  )  )  {                 throw new IO Exception (  Message Format . format ( J Git Text . get (  )  . cannot Commit Write To, path )  )  ;              }         } finally {             lock File . unlock (  )  ;          }         return ;      }      Thread . sleep ( LOCK_ACQUIRE_RETRY_SLEEP )  ;  } throw new IO Exception (  Message Format . format ( J Git Text . get (  )  . cannot Lock, lock File )  )  ; }"
1321,"public void add Static Field (  Encoded Field field,  Constant value ) { if  ( field == null )  {     throw new  Null Pointer Exception ( ""field == null"" )  ;  } if  ( static Values Constant != null )  {     throw new  Unsupported Operation Exception ( ""static fields already sorted"" )  ;  } static Fields . add ( field )  ;  static Values . put ( field, value )  ; }"
1322,"public static synchronized void register Module (  String name ) { if  ( registered Modules . add ( name )  )  {     registered Modules String = registered Modules String + "", "" + name ;  }}"
1323,"public static final  String get Device Key Name ( final  Usb Device device, final boolean use New API ) { return get Device Key Name ( device, null, use New API )  ; }"
1324,public final  Throwable failure Cause (  ) { return delegate . failure Cause (  )  ; }
1325,public void clear (  ) { length = 0 ; }
1326,public int get Ee (  ) { return eeval ; }
1327,"public  Set Multimap Builder<K0,  Object> linked Hash Set Values ( final int expected Values Per Key ) { check Nonnegative ( expected Values Per Key, ""expected Values Per Key"" )  ;  return new  Set Multimap Builder<K0,  Object> (  )  {     @ Override     public <K extends K0, V>  Set Multimap<K, V> build (  )  {         return  Multimaps . new Set Multimap (  Multimap Builder With Keys . this . <K, V>create Map (  ) , new  Linked Hash Set Supplier<V> ( expected Values Per Key )  )  ;      } } ; }"
1328,public int get Brightness (  ) { return brightness ; }
1329,public void submit (  Intent data ) { handle File Data ( data )  ; }
1330,"public  Builder after ( long delay ) { // setup dummy  Value Animator just to run the clock  Value Animator anim =  Value Animator . of Float ( 0f, 1f )  ;  anim . set Duration ( delay )  ;  after ( anim )  ;  return this ; }"
1331,public void set Debug Table Under Mouse ( boolean debug Table Under Mouse ) { set Debug Table Under Mouse ( debug Table Under Mouse ?  Debug . all :  Debug . none )  ; }
1332,"public com . anychart . core . axismarkers .  Gantt Text font Size (  String size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Size ( %s )  ; "", wrap Quotes ( size )  )  )  ;  return this ; }"
1333,public void set On Specific (  Collection< Integer> on Specific ) { this . on Specific = on Specific ; }
1334,protected void remove Animation ( final  Animation animation ) { for  ( final  Node Animation node Anim : animation . node Animations )  {     node Anim . node . is Animated = false ;  }}
1335,"public void test Should Export Delivery Metrics To Big Query_true Manifest False Setter (  )  throws  Exception{ edit Manifest Application Metadata (  )  . put Boolean ( MANIFEST_DELIVERY_METRICS_EXPORT_TO_BIG_QUERY_ENABLED, true )  ;  assert Manifest Field With Value ( MANIFEST_DELIVERY_METRICS_EXPORT_TO_BIG_QUERY_ENABLED, true )  ;  assert Preferences Field With Value ( DELIVERY_METRICS_EXPORT_TO_BIG_QUERY_PREF, null )  ;  //  Ack  Messaging Analytics . set Delivery Metrics Export To Big Query ( false )  ;  //  Verify assert That (  Messaging Analytics . delivery Metrics Export To Big Query Enabled (  )  )  . is False (  )  ;  assert Manifest Field With Value ( MANIFEST_DELIVERY_METRICS_EXPORT_TO_BIG_QUERY_ENABLED, true )  ;  assert Preferences Field With Value ( DELIVERY_METRICS_EXPORT_TO_BIG_QUERY_PREF, false )  ; }"
1336,public boolean should Save View State (  ) { return false ; }
1337,"protected boolean has Matching Media Type (  Media Type media Type ) { if  ( media Type != null )  {      String subtype = media Type . get Subtype (  )  ;      return  ( //      ( ""json"" . equals Ignore Case ( subtype )  )  || //      ( subtype . ends With ( ""+json"" )  )  || //      ( ""javascript"" . equals ( subtype )  )  || //      ( ""x-javascript"" . equals ( subtype )  )  || //      ( ""x-json"" . equals ( subtype )  )  || //      ( ""x-www-form-urlencoded"" . equals Ignore Case ( subtype )  )  ||  ( subtype . ends With ( ""x-www-form-urlencoded"" )  )  )  ;  } return true ; }"
1338,public static void set Default (  Gpg Signature Verifier Factory factory ) { default Factory = factory ; }
1339,"public com . anychart . core . stock . scrollerseries .  Range Spline Area width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", width )  )  ;  return this ; }"
1340,public  String [  ]  get Attributes (  ) { return attribute Names ; }
1341,"private char read Escape Character (  )  throws IO Exception{ if  ( !source . request ( 1 )  )  {     throw syntax Error ( "" Unterminated escape sequence"" )  ;  } byte escaped = buffer . read Byte (  )  ;  switch ( escaped )  {     case 'u':         if  ( !source . request ( 4 )  )  {             throw new EOF Exception ( "" Unterminated escape sequence at path "" + get Path (  )  )  ;          }         //  Equivalent to  Integer . parse Int ( string Pool . get ( buffer, pos, 4 ) , 16 )  ;          char result = 0 ;          for  ( int i = 0, end = i + 4 ;  i < end ;  i++ )  {             byte c = buffer . get Byte ( i )  ;              result <<= 4 ;              if  ( c >= '0' && c <= '9' )  {                 result +=  ( c - '0' )  ;              } else if  ( c >= 'a' && c <= 'f' )  {                 result +=  ( c - 'a' + 10 )  ;              } else if  ( c >= 'A' && c <= 'F' )  {                 result +=  ( c - 'A' + 10 )  ;              } else {                 throw syntax Error ( ""\\u"" + buffer . read Utf8 ( 4 )  )  ;              }         }         buffer . skip ( 4 )  ;          return result ;      case 't':         return '\t' ;      case 'b':         return '\b' ;      case 'n':         return '\n' ;      case 'r':         return '\r' ;      case 'f':         return '\f' ;      case '\n':     case '\'':     case '""':     case '\\':     case '/':         return  ( char )  escaped ;      default:         if  ( !lenient )              throw syntax Error ( "" Invalid escape sequence: \\"" +  ( char )  escaped )  ;          return  ( char )  escaped ;  }}"
1342,public  List<V> remove All ( @ Nullable  Object key ) { return  (  List<V> )  super . remove All ( key )  ; }
1343,public static  Long Array with ( long .  .  .  array ) { return new  Long Array ( array )  ; }
1344,public static boolean is End (  String s ) { return s == END ; }
1345,"public static  Dash Manifest load Manifest (  Data Source data Source,  Uri uri )  throws IO Exception{ return  Parsing Loadable . load ( data Source, new  Dash Manifest Parser (  ) , uri, C . DATA_TYPE_MANIFEST )  ; }"
1346,"public com . anychart . core . stock . scrollerseries .  Range Area bounds (  String x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
1347,"public synchronized void manage Children ( final int tag, @ Nullable int [  ]  indices To Remove, @ Nullable  View At Index [  ]  views To Add, @ Nullable int [  ]  tags To Delete ) { if  ( DEBUG_MODE )  {     F Log . d ( TAG, ""create View [ %d ] : %s %s %s"", tag,  ( indices To Remove != null ? indices To Remove . to String (  )  : ""<null>"" ) ,  ( views To Add != null ? views To Add . to String (  )  : ""<null>"" ) ,  ( tags To Delete != null ? tags To Delete . to String (  )  : ""<null>"" )  )  ;  }  Ui Thread Util . assert On Ui Thread (  )  ;  final  Set< Integer> pending Deletion Tags = get Pending Deletions For Tag ( tag )  ;  final  View Group view To Manage =  (  View Group )  m Tags To Views . get ( tag )  ;  final  View Group Manager view Manager =  (  View Group Manager )  resolve View Manager ( tag )  ;  if  ( view To Manage == null )  {     throw new  Illegal View Operation Exception ( "" Trying to manage Children view with tag "" + tag + "" which doesn't exist\n detail: "" + construct Manage Children Error Message ( view To Manage, view Manager, indices To Remove, views To Add, tags To Delete )  )  ;  } int last Index To Remove = view Manager . get Child Count ( view To Manage )  ;  if  ( indices To Remove != null )  {     for  ( int i = indices To Remove . length - 1 ;  i >= 0 ;  i-- )  {         int index To Remove = indices To Remove [ i ]  ;          if  ( index To Remove < 0 )  {             throw new  Illegal View Operation Exception ( "" Trying to remove a negative view index:"" + index To Remove + "" view tag: "" + tag + ""\n detail: "" + construct Manage Children Error Message ( view To Manage, view Manager, indices To Remove, views To Add, tags To Delete )  )  ;          }         if  ( view Manager . get Child At ( view To Manage, index To Remove )  == null )  {             if  ( m Root Tags . get ( tag )  && view Manager . get Child Count ( view To Manage )  == 0 )  {                 // async js execution )  .   Ignore this root removal .                  return ;              }             throw new  Illegal View Operation Exception ( "" Trying to remove a view index above child "" + ""count "" + index To Remove + "" view tag: "" + tag + ""\n detail: "" + construct Manage Children Error Message ( view To Manage, view Manager, indices To Remove, views To Add, tags To Delete )  )  ;          }         if  ( index To Remove >= last Index To Remove )  {             throw new  Illegal View Operation Exception ( "" Trying to remove an out of order view index:"" + index To Remove + "" view tag: "" + tag + ""\n detail: "" + construct Manage Children Error Message ( view To Manage, view Manager, indices To Remove, views To Add, tags To Delete )  )  ;          }          View view To Remove = view Manager . get Child At ( view To Manage, index To Remove )  ;          if  ( m Layout Animation Enabled && m Layout Animator . should Animate Layout ( view To Remove )  && array Contains ( tags To Delete, view To Remove . get Id (  )  )  )  {         //  The view will be removed and dropped by the 'delete' layout animation         // instead, so do nothing         } else {             view Manager . remove View At ( view To Manage, index To Remove )  ;          }         last Index To Remove = index To Remove ;      } } if  ( tags To Delete != null )  {     for  ( int i = 0 ;  i < tags To Delete . length ;  i++ )  {         int tag To Delete = tags To Delete [ i ]  ;          final  View view To Destroy = m Tags To Views . get ( tag To Delete )  ;          if  ( view To Destroy == null )  {             throw new  Illegal View Operation Exception ( "" Trying to destroy unknown view tag: "" + tag To Delete + ""\n detail: "" + construct Manage Children Error Message ( view To Manage, view Manager, indices To Remove, views To Add, tags To Delete )  )  ;          }         if  ( m Layout Animation Enabled && m Layout Animator . should Animate Layout ( view To Destroy )  )  {             pending Deletion Tags . add ( tag To Delete )  ;              m Layout Animator . delete View ( view To Destroy, new  Layout Animation Listener (  )  {                 @ Override                 public void on Animation End (  )  {                     //  This should be called only on the UI thread, because                     // on Animation End is called  ( indirectly )  by  Android  View  Animation .                       Ui Thread Util . assert On Ui Thread (  )  ;                      view Manager . remove View ( view To Manage, view To Destroy )  ;                      drop View ( view To Destroy )  ;                      pending Deletion Tags . remove ( view To Destroy . get Id (  )  )  ;                      if  ( pending Deletion Tags . is Empty (  )  )  {                         m Pending Deletions For Tag . remove ( tag )  ;                      }                 }             } )  ;          } else {             drop View ( view To Destroy )  ;          }     } } if  ( views To Add != null )  {     for  ( int i = 0 ;  i < views To Add . length ;  i++ )  {          View At Index view At Index = views To Add [ i ]  ;           View view To Add = m Tags To Views . get ( view At Index . m Tag )  ;          if  ( view To Add == null )  {             throw new  Illegal View Operation Exception ( "" Trying to add unknown view tag: "" + view At Index . m Tag + ""\n detail: "" + construct Manage Children Error Message ( view To Manage, view Manager, indices To Remove, views To Add, tags To Delete )  )  ;          }         int normalized Index = view At Index . m Index ;          if  ( !pending Deletion Tags . is Empty (  )  )  {             normalized Index = 0 ;              int counter = 0 ;              while  ( normalized Index < view To Manage . get Child Count (  )  )  {                 if  ( counter == view At Index . m Index )  {                     break ;                  }                  View v = view To Manage . get Child At ( normalized Index )  ;                  if  ( !pending Deletion Tags . contains ( v . get Id (  )  )  )  {                     counter++ ;                  }                 normalized Index++ ;              }         }         view Manager . add View ( view To Manage, view To Add, normalized Index )  ;      } } if  ( pending Deletion Tags . is Empty (  )  )  {     m Pending Deletions For Tag . remove ( tag )  ;  }}"
1348,public static boolean is Empty (  List<V> source List ) { return  ( source List == null || source List . size (  )  == 0 )  ; }
1349,"protected void wake Screen (  Context context ) { //  Waking the screen so the user will see the notification  Power Manager pm =  (  Power Manager )  context . get System Service (  Context . POWER_SERVICE )  ;  boolean is Screen On ;  if  (  Build . VERSION . SDK_INT <=  Build . VERSION_CODES . KITKAT_WATCH )      is Screen On = pm . is Screen On (  )  ;  else     is Screen On = pm . is Interactive (  )  ;  if  ( !is Screen On )  {      Power Manager .  Wake Lock wl = pm . new Wake Lock (  Power Manager . FULL_WAKE_LOCK |  Power Manager . ON_AFTER_RELEASE |  Power Manager . ACQUIRE_CAUSES_WAKEUP, ""chat-sdk: My Lock"" )  ;      wl . acquire ( 5000 )  ;      wl . release (  )  ;  }}"
1350,URL get Domain (  ) { return m Domain ; }
1351,public  Dependency Json get Dependency Json (  ) { if  ( dependency Json == null )  {     dependency Json = create Dependency Json ( false )  ;  } return dependency Json ; }
1352,"private static boolean is Bridged Candidate For (  Method candidate Method,  Method bridge Method ) { return  ( !candidate Method . is Bridge (  )  && !candidate Method . equals ( bridge Method )  && candidate Method . get Name (  )  . equals ( bridge Method . get Name (  )  )  && candidate Method . get Parameter Types (  )  . length == bridge Method . get Parameter Types (  )  . length )  ; }"
1353,"private boolean is Safe To Multiply ( int a, int b ) { return a >= 0 && b >= 0 && ! ( b > 0 && a >=  Integer . MAX_VALUE / b )  ; }"
1354,"public void add Invokestatic (  Ct Class clazz,  String name,  Ct Class return Type,  Ct Class [  ]  param Types ) {  String desc =  Descriptor . of Method ( return Type, param Types )  ;  add Invokestatic ( clazz, name, desc )  ; }"
1355,public  Optional< String> get Platform Build Version (  ) { return get Platform (  )  . get Build Version (  )  ; }
1356,"public void font Family (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Family (  )  ; "" )  ; }"
1357,"private int get Next Position ( final boolean force ) { if  ( m Playlist == null || m Playlist . is Empty (  )  )  {     return -1 ;  } if  ( !force && m Repeat Mode == REPEAT_CURRENT )  {     //如果是循环播放则返回当前     if  ( m Play Pos < 0 )  {         return 0 ;      }     return m Play Pos ;  } else if  ( force && m Repeat Mode == REPEAT_CURRENT )  {     if  ( m Play Pos >= m Playlist . size (  )  - 1 )  {         return 0 ;      } else {         return m Play Pos + 1 ;      } } else if  ( m Shuffle Mode == SHUFFLE_NORMAL )  {     //该模式在当前播放列表中不断循环     final int num Tracks = m Playlist . size (  )  ;      //用来记录每首歌播放的次数     final int [  ]  track Num Plays = new int [ num Tracks ]  ;      for  ( int i = 0 ;  i < num Tracks ;  i++ )  {         track Num Plays [ i ]  = 0 ;      }     final int num History = m History . size (  )  ;      for  ( int i = 0 ;  i < num History ;  i++ )  {         //遍历历史记录,记录每首歌播放的次数         final int idx = m History . get ( i )  . int Value (  )  ;          if  ( idx >= 0 && idx < num Tracks )  {             track Num Plays [ idx ] ++ ;          }     }     if  ( m Play Pos >= 0 && m Play Pos < num Tracks )  {         track Num Plays [ m Play Pos ] ++ ;      }     //所有歌曲中播放次数最少的数目     int min Num Plays =  Integer . MAX_VALUE ;      //播放次数一样最少的歌曲的数目     int num Tracks With Min Num Plays = 0 ;      for  ( int track Num Play : track Num Plays )  {         if  ( track Num Play < min Num Plays )  {             min Num Plays = track Num Play ;              num Tracks With Min Num Plays = 1 ;          } else if  ( track Num Play == min Num Plays )  {             num Tracks With Min Num Plays++ ;          }     }     if  ( min Num Plays > 0 && num Tracks With Min Num Plays == num Tracks && m Repeat Mode != REPEAT_ALL && !force )  {         //当前模式为不循环,不选取下一首歌曲         return -1 ;      }     int skip = m Shuffler . next Int ( num Tracks With Min Num Plays )  ;      for  ( int i = 0 ;  i < track Num Plays . length ;  i++ )  {         //遍历,根据随机数字选取对应的歌曲         if  ( track Num Plays [ i ]  == min Num Plays )  {             if  ( skip == 0 )  {                 return i ;              } else {                 skip-- ;              }         }     }     if  ( D )           Log . e ( TAG, "" Getting the next position resulted did not get a result when it should have"" )  ;      return -1 ;  } else if  ( m Shuffle Mode == SHUFFLE_AUTO )  {     //该随机模式不限于当前播放队列,会自动更新播放列表     do Auto Shuffle Update (  )  ;      return m Play Pos + 1 ;  } else {     if  ( m Play Pos >= m Playlist . size (  )  - 1 )  {         if  ( m Repeat Mode == REPEAT_NONE && !force )  {             return -1 ;          } else if  ( m Repeat Mode == REPEAT_ALL || force )  {             return 0 ;          }         return -1 ;      } else {         return m Play Pos + 1 ;      } }}"
1358,"public com . anychart . scales .  Linear Color color Scale (  ) { return new com . anychart . scales .  Linear Color ( js Base + "" . color Scale (  ) "" )  ; }"
1359,"public void set Behind Content View (  View view,  Layout Params layout Params ) { m View Behind = view ;  m Sliding Menu . set Menu ( m View Behind )  ; }"
1360,"private boolean correspond In Order Exactly (  Iterator<? extends A> actual,  Iterator<? extends E> expected ) {  Correspondence .  Exception Store exceptions =  Correspondence .  Exception Store . for Iterable (  )  ;  while  ( actual . has Next (  )  && expected . has Next (  )  )  {     A actual Element = actual . next (  )  ;      E expected Element = expected . next (  )  ;      // exception .   We'll fall back on the any-order assertion in this case .      if  ( !correspondence . safe Compare ( actual Element, expected Element, exceptions )  )  {         return false ;      } } //  No need to check the  Exception Store, as we'll already have returned false on any exception .  return ! ( actual . has Next (  )  || expected . has Next (  )  )  ; }"
1361,"public void dialog Set Single Choice Items ( @ Rpc Parameter ( name = ""items"" )  JSON Array items, @ Rpc Parameter ( name = ""selected"", description = ""selected item index"" )  @ Rpc Default ( ""0"" )   Integer selected ) { if  ( m Dialog Task != null && m Dialog Task instanceof  Alert Dialog Task )  {      (  (  Alert Dialog Task )  m Dialog Task )  . set Single Choice Items ( items, selected )  ;  } else {     throw new  Android Runtime Exception ( "" No dialog to add list to . "" )  ;  }}"
1362,public void set Ascending Order ( int index ) { this . comparators . get ( index )  . set Ascending ( true )  ; }
1363,"public static void send Message ( final  Context context, final  String subject, final  String body, final  String to Address ) { final  Intent intent ;  if  ( to Address != null && !"""" . equals ( to Address )  )  {     intent = new  Intent (  Intent . ACTION_SENDTO,  Uri . from Parts ( ""mailto"", to Address, null )  )  ;  } else {     intent = new  Intent (  Intent . ACTION_SEND )  ;  } intent . set Type ( ""text/plain"" )  ;  if  ( subject != null && !"""" . equals ( subject )  )  {     intent . put Extra (  Intent . EXTRA_SUBJECT, subject )  ;  } if  ( body != null && !"""" . equals ( body )  )  {     intent . put Extra (  Intent . EXTRA_TEXT, body )  ;  } context . start Activity (  Intent . create Chooser ( intent, "" Send message .  .  . "" )  )  ; }"
1364,public  View Transition Builder add Setup ( @ Non Null  View Transition .  Setup setup ) { check Modifiability (  )  ;  m Setup List . add ( setup )  ;  return self (  )  ; }
1365,public static void apply (  ) { apply Open SSL Fix (  )  ;  install Linux PRNG Secure Random (  )  ; }
1366,"boolean remove ( final  Remote Device remote Device ) { return remove ( remote Device, false )  ; }"
1367,"public  To String Builder append (  String field Name,  Object [  ]  array, boolean full Detail ) { style . append ( buffer, field Name, array,  Boolean . value Of ( full Detail )  )  ;  return this ; }"
1368,"private void update All (  Config config )  throws  Config Invalid Exception, IO Exception{ if  ( config == null )  {     return ;  } update All ( config . get Base Config (  )  )  ;  if  ( config instanceof  File Based Config )  {      File Based Config cfg =  (  File Based Config )  config ;      if  ( cfg . is Outdated (  )  )  {         //$NON-NLS-1$         LOG . debug ( ""loading config {}"", cfg )  ;          cfg . load (  )  ;      } }}"
1369,"private static  String read First Line ( final  String file ) {  String first Line = null ;  try  ( var buffered Reader = new  Buffered Reader ( new  File Reader ( file )  )  )  {     while  ( buffered Reader . ready (  )  )  {         /*  Read the line */         first Line = buffered Reader . read Line (  )  ;      }     LOGGER . info ( "" Module Test::read First Line (  )  : first Line : "" + first Line )  ;  } catch  ( final IO Exception e )  {     LOGGER . error ( "" Module Test::read First Line (  ) "", e )  ;  } return first Line ; }"
1370,"public static void put ( @ Non Null final  String key, final  Set< String> value ) { put ( key, value, get Default SP Utils (  )  )  ; }"
1371,"public void height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . height (  )  ; "" )  ; }"
1372,"public com . anychart . core . resource . resourcelist .  Tags Settings margin (  Number [  ]  margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "",  Arrays . to String ( margin )  )  )  ;  return this ; }"
1373,public int get Existing (  Object key ) { if  ( key == null )  {     key =  Unique Tag . NULL_VALUE ;  } int index = find Index ( key )  ;  if  ( 0 <= index )  {     return values [ index ]  ;  } //  Key must exist  Kit . code Bug (  )  ;  return 0 ; }
1374,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
1375,public static boolean is Jvm Language Target Node (  Target Node<?> target Node ) {  Base Description<?> description = target Node . get Description (  )  ;  return description instanceof  Java Library Description || description instanceof  Android Library Description || description instanceof  Scala Library Description || description instanceof  Groovy Library Description || description instanceof  Kotlin Library Description ; }
1376,"public void contains Cell ( @ Nullable  Object row Key, @ Nullable  Object col Key, @ Nullable  Object value ) { contains Cell (  Tables . < Object,  Object,  Object>immutable Cell ( row Key, col Key, value )  )  ; }"
1377,public boolean is Matches Any (  ) { return matches Any ; }
1378,public boolean is Set Name (  ) { return this . name != null ; }
1379,"private static int prefer Signature (  Object [  ]  args,  Class<?> [  ]  sig1, boolean vararg1,  Class<?> [  ]  sig2, boolean vararg2 ) { // TODO:  This test is pretty primitive .   It basically prefers // a matching no vararg method over a vararg method independent // of the type conversion cost .   This can lead to unexpected results .  int alength = args . length ;  if  ( !vararg1 && vararg2 )  {     // prefer the no vararg signature     return PREFERENCE_FIRST_ARG ;  } else if  ( vararg1 && !vararg2 )  {     // prefer the no vararg signature     return PREFERENCE_SECOND_ARG ;  } else if  ( vararg1 && vararg2 )  {     if  ( sig1 . length < sig2 . length )  {         // prefer the signature with more explicit types         return PREFERENCE_SECOND_ARG ;      } else if  ( sig1 . length > sig2 . length )  {         // prefer the signature with more explicit types         return PREFERENCE_FIRST_ARG ;      } else {         //  Both are varargs and have the same length, so make the         // decision with the explicit args .           alength =  Math . min ( args . length, sig1 . length - 1 )  ;      } } int total Preference = 0 ;  for  ( int j = 0 ;  j < alength ;  j++ )  {      Class<?> type1 = sig1 [ j ]  ;       Class<?> type2 = sig2 [ j ]  ;      if  ( type1 == type2 )  {         continue ;      }      Object arg = args [ j ]  ;      //  Determine which of type1, type2 is easier to convert from arg .      int rank1 =  Native Java Object . get Conversion Weight ( arg, type1 )  ;      int rank2 =  Native Java Object . get Conversion Weight ( arg, type2 )  ;      int preference ;      if  ( rank1 < rank2 )  {         preference = PREFERENCE_FIRST_ARG ;      } else if  ( rank1 > rank2 )  {         preference = PREFERENCE_SECOND_ARG ;      } else {         //  Equal ranks         if  ( rank1 ==  Native Java Object . CONVERSION_NONTRIVIAL )  {             if  ( type1 . is Assignable From ( type2 )  )  {                 preference = PREFERENCE_SECOND_ARG ;              } else if  ( type2 . is Assignable From ( type1 )  )  {                 preference = PREFERENCE_FIRST_ARG ;              } else {                 preference = PREFERENCE_AMBIGUOUS ;              }         } else {             preference = PREFERENCE_AMBIGUOUS ;          }     }     total Preference |= preference ;      if  ( total Preference == PREFERENCE_AMBIGUOUS )  {         break ;      } } return total Preference ; }"
1380,"public  Immersion Bar keyboard Enable ( boolean enable, int keyboard Mode ) { m Bar Params . keyboard Enable = enable ;  m Bar Params . keyboard Mode = keyboard Mode ;  m Keyboard Temp Enable = enable ;  return this ; }"
1381,"public static  Border Options create ( @ Color Int int color, float width, float padding ) { return new  Border Options ( color, width, padding )  ; }"
1382,"public static  Method get Merge Null Value Method (  ) { return  Helpers . get Method (  Map Merge Tester . class, ""test Merge Null Value"" )  ; }"
1383,public void run (  ) { super . run (  )  ; }
1384,"public boolean has Newer Bundle (  Bundle Metadata bundle Metadata ) { return persistence . run Transaction ( "" Has newer bundle"",  (  )  -> {      Bundle Metadata cached Metadata = bundle Cache . get Bundle Metadata ( bundle Metadata . get Bundle Id (  )  )  ;      return cached Metadata != null && cached Metadata . get Create Time (  )  . compare To ( bundle Metadata . get Create Time (  )  )  >= 0 ;  } )  ; }"
1385,"public com . anychart . core . annotations .  Fibonacci Fan second Value Anchor (  String  Second ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . second Value Anchor ( %s )  ; "", wrap Quotes (  Second )  )  )  ;  return this ; }"
1386,public boolean can Handle Class (  Class<?> clazz ) { if  ( list Handled Classes == null )  {     return true ;  } else {     return list Handled Classes . contains ( clazz )  ;  }}
1387,"public void write File (  File input File,  String jar Path )  throws IO Exception{ //  Get an input stream on the file .   File Input Stream fis = new  File Input Stream ( input File )  ;  try {     // create the zip entry      Jar Entry entry = new  Jar Entry ( jar Path )  ;      entry . set Time ( input File . last Modified (  )  )  ;      write Entry ( fis, entry )  ;  } finally {     // close the file stream used to read the file     fis . close (  )  ;  }}"
1388,public byte get Byte Type (  ) { return byte Type ; }
1389,public  Input Stream get Input Stream For Relative Path (  Path path )  throws IO Exception{  Path file = get Path For Relative Path ( path )  ;  return  Files . new Input Stream ( file )  ; }
1390,public  Class Loader get Class Loader (  ) { return get Context Class Loader (  )  ; }
1391,protected  Executor Service get Non Blocking Executor (  ) { return m Non Blocking Executor ; }
1392,"public com . anychart . core .  State Settings empty Fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . empty Fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
1393,"public static boolean validate Key Index Input ( final  Context context, final  String input )  throws  Illegal Argument Exception{ if  (  Text Utils . is Empty ( input )  )  {     throw new  Illegal Argument Exception ( context . get String ( R . string . error_empty_key_index )  )  ;  } final int key Index ;  try {     key Index =  Integer . parse Int ( input )  ;  } catch  (  Number Format Exception ex )  {     throw new  Illegal Argument Exception ( context . get String ( R . string . error_invalid_key_index )  )  ;  } if  ( is Valid Key Index ( key Index )  )  {     throw new  Illegal Argument Exception ( context . get String ( R . string . error_invalid_key_index )  )  ;  } return true ; }"
1394,"public int get Span Index ( int position, int span Count ) { int position Span Size = get Span Size ( position )  ;  if  ( position Span Size == span Count )  {     // quick return for full-span items     return 0 ;  } int span = 0 ;  int start Pos = m Start Position ;  //  If caching is enabled, try to jump if  ( m Cache Span Indices && m Span Index Cache . size (  )  > 0 )  {     int prev Key = find Reference Index From Cache ( position )  ;      if  ( prev Key >= 0 )  {         span = m Span Index Cache . get ( prev Key )  + get Span Size ( prev Key )  ;          start Pos = prev Key + 1 ;      } } for  ( int i = start Pos ;  i < position ;  i++ )  {     int size = get Span Size ( i )  ;      span += size ;      if  ( span == span Count )  {         span = 0 ;      } else if  ( span > span Count )  {         // did not fit, moving to next row / column         span = size ;      } } if  ( span + position Span Size <= span Count )  {     return span ;  } return 0 ; }"
1395,public void default Flavor Naming ( boolean default Flavor Naming ) { this . default Flavor Naming = default Flavor Naming ; }
1396,"public static void make Executable (  Path file )  throws IO Exception{ if  (  File Systems . get Default (  )  . supported File Attribute Views (  )  . contains ( ""posix"" )  )  {      Set< Posix File Permission> permissions =  Files . get Posix File Permissions ( file )  ;      if  ( permissions . contains (  Posix File Permission . OWNER_READ )  )  {         permissions . add (  Posix File Permission . OWNER_EXECUTE )  ;      }     if  ( permissions . contains (  Posix File Permission . GROUP_READ )  )  {         permissions . add (  Posix File Permission . GROUP_EXECUTE )  ;      }     if  ( permissions . contains (  Posix File Permission . OTHERS_READ )  )  {         permissions . add (  Posix File Permission . OTHERS_EXECUTE )  ;      }      Files . set Posix File Permissions ( file, permissions )  ;  } else {     if  ( !file . to File (  )  . set Executable ( /* executable */     true, /* owner Only */     true )  )  {         throw new IO Exception ( "" The file could not be made executable"" )  ;      } }}"
1397,public void set X Labels ( int x Labels ) { m X Labels = x Labels ; }
1398,"public com . anychart . core . pert .  Milestones milestones (  ) { return new com . anychart . core . pert .  Milestones ( js Base + "" . milestones (  ) "" )  ; }"
1399,"public  Linked Hash Map<T,  Pair<P,  Dependency Stack>> traverse (  Iterable<? extends T> initial Nodes,  Predicate<T> should Explore Children )  throws  Cycle Exception{ //  This corresponds to the current chain of nodes being explored .   Enforcing this invariant makes // this data structure useful for debugging .   Deque< Explorable> to Explore = new  Linked List<> (  )  ;  for  ( T node : initial Nodes )  {     to Explore . add ( new  Explorable ( node, dependency Stack Child . apply (  Dependency Stack . root (  ) , node )  )  )  ;  }  Set<T> in Progress = new  Hash Set<> (  )  ;   Linked Hash Map<T,  Pair<P,  Dependency Stack>> explored = new  Linked Hash Map<> (  )  ;  while  ( !to Explore . is Empty (  )  )  {      Explorable explorable = to Explore . peek (  )  ;      T node = explorable . node ;      //  This could happen if one of the initial nodes is a dependency of the other, for example .      if  ( explored . contains Key ( node )  )  {         to Explore . remove First (  )  ;          continue ;      }     in Progress . add ( node )  ;      //  Find children that need to be explored to add to the stack .      int stack Size = to Explore . size (  )  ;      if  ( should Explore Children . test ( node )  )  {         for  (  Iterator<? extends T> iter = explorable . children ;  iter . has Next (  )  ;   )  {             T child = iter . next (  )  ;              if  ( in Progress . contains ( child )  )  {                 throw create Cycle Exception ( child, to Explore )  ;              }             if  ( !explored . contains Key ( child )  )  {                 to Explore . add First ( new  Explorable ( child, dependency Stack Child . apply ( explorable . dependency Stack, child )  )  )  ;                  //  Comment out the break statement and run the unit test to verify this for yourself .                  break ;              }         }     }     if  ( stack Size == to Explore . size (  )  )  {         //  Nothing was added to to Explore, so the current node can be popped off the stack and         // marked as explored .          to Explore . remove First (  )  ;          in Progress . remove ( node )  ;          explored . put ( node, new  Pair<> ( explorable . payload, explorable . dependency Stack )  )  ;      } }  Preconditions . check State ( in Progress . is Empty (  ) , "" No more nodes should be in progress . "" )  ;  return explored ; }"
1400,"public com . anychart . charts .  Pareto enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
1401,"public  Model With Int Def_ on Visibility Changed (  On Model Visibility Changed Listener< Model With Int Def_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
1402,public boolean is Game (  ) { return true ; }
1403,"private byte [  ]  get Contents ( PDF Object page Obj )  throws IO Exception{ // concatenate all the streams PDF Object contents Obj = page Obj . get Dict Ref ( "" Contents"" )  ;  if  ( contents Obj == null )  {     throw new IO Exception ( "" No page contents!"" )  ;  } PDF Object [  ]  contents = contents Obj . get Array (  )  ;  // see if we have only one stream  ( the easy case )  if  ( contents . length == 1 )  {     return contents [ 0 ]  . get Stream (  )  ;  } // first get the total length of all the streams int len = 0 ;  for  ( int i = 0 ;  i < contents . length ;  i++ )  {     byte [  ]  data = contents [ i ]  . get Stream (  )  ;      if  ( data == null )  {         throw new PDF Parse Exception ( "" No stream on content "" + i + "": "" + contents [ i ]  )  ;      }     len += data . length ;  } // now assemble them all into one object byte [  ]  stream = new byte [ len ]  ;  len = 0 ;  for  ( int i = 0 ;  i < contents . length ;  i++ )  {     byte [  ]  data = contents [ i ]  . get Stream (  )  ;       System . arraycopy ( data, 0, stream, len, data . length )  ;      len += data . length ;  } return stream ; }"
1404,public boolean equals (  Object o ) { if  ( this == o )      return true ;  if  ( o == null || get Class (  )  != o . get Class (  )  )      return false ;   Managed Listener that =  (  Managed Listener )  o ;  return listener . equals ( that . listener )  ; }
1405,"public  Provisioner create Provisioner ( @ Non Null final  String name )  throws  Illegal Argument Exception{ return create Provisioner ( name, new  Allocated Unicast Range ( 0x0001, 0x199 A ) , new  Allocated Group Range ( 0x C000, 0x CC9 A ) , new  Allocated Scene Range ( 0x0001, 0x3333 )  )  ; }"
1406,"public  Builder set Display ( @ Nullable  String display ) { m Display = check Null Or Not Empty ( display, ""display must be null or not empty"" )  ;  return this ; }"
1407,"private static  Value Animator load Animator (  Context context,  Attribute Set attrs,  Value Animator anim )  throws  Not Found Exception{  Typed Array a = context . obtain Styled Attributes ( attrs, /*com . android . internal . R . styleable . */  Animator )  ;  long duration = a . get Int ( /*com . android . internal . R . styleable . */  Animator_duration, 0 )  ;  long start Delay = a . get Int ( /*com . android . internal . R . styleable . */  Animator_start Offset, 0 )  ;  int value Type = a . get Int ( /*com . android . internal . R . styleable . */  Animator_value Type, VALUE_TYPE_FLOAT )  ;  if  ( anim == null )  {     anim = new  Value Animator (  )  ;  } // Type Evaluator evaluator = null ;  int value From Index = /*com . android . internal . R . styleable . */  Animator_value From ;  int value To Index = /*com . android . internal . R . styleable . */  Animator_value To ;  boolean get Floats =  ( value Type == VALUE_TYPE_FLOAT )  ;   Typed Value tv From = a . peek Value ( value From Index )  ;  boolean has From =  ( tv From != null )  ;  int from Type = has From ? tv From . type : 0 ;   Typed Value tv To = a . peek Value ( value To Index )  ;  boolean has To =  ( tv To != null )  ;  int to Type = has To ? tv To . type : 0 ;  if  (  ( has From &&  ( from Type >=  Typed Value . TYPE_FIRST_COLOR_INT )  &&  ( from Type <=  Typed Value . TYPE_LAST_COLOR_INT )  )  ||  ( has To &&  ( to Type >=  Typed Value . TYPE_FIRST_COLOR_INT )  &&  ( to Type <=  Typed Value . TYPE_LAST_COLOR_INT )  )  )  {     // special case for colors: ignore value Type and get ints     get Floats = false ;      anim . set Evaluator ( new  Argb Evaluator (  )  )  ;  } if  ( get Floats )  {     float value From ;      float value To ;      if  ( has From )  {         if  ( from Type ==  Typed Value . TYPE_DIMENSION )  {             value From = a . get Dimension ( value From Index, 0f )  ;          } else {             value From = a . get Float ( value From Index, 0f )  ;          }         if  ( has To )  {             if  ( to Type ==  Typed Value . TYPE_DIMENSION )  {                 value To = a . get Dimension ( value To Index, 0f )  ;              } else {                 value To = a . get Float ( value To Index, 0f )  ;              }             anim . set Float Values ( value From, value To )  ;          } else {             anim . set Float Values ( value From )  ;          }     } else {         if  ( to Type ==  Typed Value . TYPE_DIMENSION )  {             value To = a . get Dimension ( value To Index, 0f )  ;          } else {             value To = a . get Float ( value To Index, 0f )  ;          }         anim . set Float Values ( value To )  ;      } } else {     int value From ;      int value To ;      if  ( has From )  {         if  ( from Type ==  Typed Value . TYPE_DIMENSION )  {             value From =  ( int )  a . get Dimension ( value From Index, 0f )  ;          } else if  (  ( from Type >=  Typed Value . TYPE_FIRST_COLOR_INT )  &&  ( from Type <=  Typed Value . TYPE_LAST_COLOR_INT )  )  {             value From = a . get Color ( value From Index, 0 )  ;          } else {             value From = a . get Int ( value From Index, 0 )  ;          }         if  ( has To )  {             if  ( to Type ==  Typed Value . TYPE_DIMENSION )  {                 value To =  ( int )  a . get Dimension ( value To Index, 0f )  ;              } else if  (  ( to Type >=  Typed Value . TYPE_FIRST_COLOR_INT )  &&  ( to Type <=  Typed Value . TYPE_LAST_COLOR_INT )  )  {                 value To = a . get Color ( value To Index, 0 )  ;              } else {                 value To = a . get Int ( value To Index, 0 )  ;              }             anim . set Int Values ( value From, value To )  ;          } else {             anim . set Int Values ( value From )  ;          }     } else {         if  ( has To )  {             if  ( to Type ==  Typed Value . TYPE_DIMENSION )  {                 value To =  ( int )  a . get Dimension ( value To Index, 0f )  ;              } else if  (  ( to Type >=  Typed Value . TYPE_FIRST_COLOR_INT )  &&  ( to Type <=  Typed Value . TYPE_LAST_COLOR_INT )  )  {                 value To = a . get Color ( value To Index, 0 )  ;              } else {                 value To = a . get Int ( value To Index, 0 )  ;              }             anim . set Int Values ( value To )  ;          }     } } anim . set Duration ( duration )  ;  anim . set Start Delay ( start Delay )  ;  if  ( a . has Value ( /*com . android . internal . R . styleable . */  Animator_repeat Count )  )  {     anim . set Repeat Count ( a . get Int ( /*com . android . internal . R . styleable . */      Animator_repeat Count, 0 )  )  ;  } if  ( a . has Value ( /*com . android . internal . R . styleable . */  Animator_repeat Mode )  )  {     anim . set Repeat Mode ( a . get Int ( /*com . android . internal . R . styleable . */      Animator_repeat Mode,  Value Animator . RESTART )  )  ;  } //if  ( evaluator != null )  { //    anim . set Evaluator ( evaluator )  ;  //} final int res ID = a . get Resource Id ( /*com . android . internal . R . styleable . */  Animator_interpolator, 0 )  ;  if  ( res ID > 0 )  {     anim . set Interpolator (  Animation Utils . load Interpolator ( context, res ID )  )  ;  } a . recycle (  )  ;  return anim ; }"
1408,public  Refresh Layout set Footer Trigger Rate ( float rate ) { this . m Footer Trigger Rate = rate ;  return this ; }
1409,"public static boolean can Load More ( @ Non Null  View target View,  Point F touch, boolean content Full ) { if  ( target View . can Scroll Horizontally ( 1 )  && target View . get Visibility (  )  ==  View . VISIBLE )  {     return false ;  } //touch == null 时 can Load More 不会动态递归搜索 if  ( target View instanceof  View Group && touch != null && ! Smart Util . is Scrollable View ( target View )  )  {      View Group view Group =  (  View Group )  target View ;      final int child Count = view Group . get Child Count (  )  ;       Point F point = new  Point F (  )  ;      for  ( int i = 0 ;  i < child Count ;  i++ )  {          View child = view Group . get Child At ( i )  ;          if  (  Smart Util . is Transformed Touch Point In View ( view Group, child, touch . x, touch . y, point )  )  {             if  ( ""fixed"" . equals ( child . get Tag (  )  )  )  {                 return false ;              }             touch . offset ( point . x, point . y )  ;              boolean can = can Load More ( child, touch, content Full )  ;              touch . offset ( -point . x, -point . y )  ;              return can ;          }     } } return  ( content Full || target View . can Scroll Horizontally ( -1 )  )  ; }"
1410,"public void add Series ( com . anychart . data .  Set var_args ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . add Series ( %s )  ; "",  ( var_args != null )  ? var_args . get Js Base (  )  : null )  )  ; }"
1411,public  Credit Card set Card Holder Name ( @ Nullable  String card Holder Name ) { this . card Holder Name = card Holder Name ;  return this ; }
1412,"public void save As Xml (  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Xml ( %s )  ; "", wrap Quotes ( filename )  )  )  ; }"
1413,"public void fill Encryption Data (  Parsable Byte Array source ) { source . read Bytes ( sample Encryption Data . data, 0, sample Encryption Data Length )  ;  sample Encryption Data . set Position ( 0 )  ;  sample Encryption Data Needs Fill = false ; }"
1414,public void override Prepare Position Us ( long prepare Position Us ) { prepare Position Override Us = prepare Position Us ; }
1415,"public com . anychart . core . annotations .  Fibonacci Retracement enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
1416,"public com . anychart . charts .  Polar x Minor Grid (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Minor Grid ( %s )  ; "", settings )  )  ;  return this ; }"
1417,"public void set Modified Documents (  List< Document> documents ) {  List< Document> document List = change Bucket . get ( UPDATE )  ;  if  ( document List == null )  {     document List = new  Array List<> (  )  ;  } if  ( documents != null )  {     document List . add All ( documents )  ;  } change Bucket . put ( UPDATE, document List )  ; }"
1418,public com . didiglobal . booster . aapt2 .  Resources .  Source Position .  Builder get Source Builder (  ) { on Changed (  )  ;  return get Source Field Builder (  )  . get Builder (  )  ; }
1419,"public boolean random (  ) { if  ( size == 0 )      return false ;  return items [  Math Utils . random ( 0, size - 1 )  ]  ; }"
1420,"int create Id (  ) { synchronized  (  Framework Scheduler . class )  {     final  Shared Preferences preferences = get Preferences ( get Application Context (  )  )  ;      final int id = preferences . get Int ( KEY_ID, 0 )  + 1 ;      preferences . edit (  )  . put Int ( KEY_ID, id )  . commit (  )  ;      return id ;  }}"
1421,public void mouse Entered (  Mouse Event e ) {}
1422,"public com . anychart . core . gauge .  Cap fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
1423,protected  Connection Priority Request request Connection Priority ( @ Connection Priority final int priority ) { return  Request . new Connection Priority Request ( priority )  . set Request Handler ( request Handler )  ; }
1424,"public synchronized SQ Lite Database get Writable Database (  ) { if  ( m Database != null && m Database . is Open (  )  && !m Database . is Read Only (  )  )  {     //  The database is already open for business     return m Database ;  } if  ( m Is Initializing )  {     throw new  Illegal State Exception ( ""get Writable Database called recursively"" )  ;  } //  If we have a read-only database open, someone could be using it //  ( though they shouldn't ) , which would cause a lock to be held on // the file, and our attempts to open the database read-write would // fail waiting for the file lock .    To prevent that, we acquire the // lock on the read-only database, which shuts out other users .  boolean success = false ;  SQ Lite Database db = null ;  //if  ( m Database != null )  m Database . lock (  )  ;  try {     m Is Initializing = true ;      //if  ( m Name == null )  {     //    db = SQ Lite Database . create ( null )  ;      //} else {     //    db = m Context . open Or Create Database ( m Name, 0, m Factory )  ;      //}     db = create Or Open Database ( false )  ;      int version = db . get Version (  )  ;      // do force upgrade     if  ( version != 0 && version < m Forced Upgrade Version )  {         db = create Or Open Database ( true )  ;          db . set Version ( m New Version )  ;          version = db . get Version (  )  ;      }     if  ( version != m New Version )  {         db . begin Transaction (  )  ;          try {             if  ( version == 0 )  {                 on Create ( db )  ;              } else {                 if  ( version > m New Version )  {                      Log . w ( TAG, "" Can't downgrade read-only database from version "" + version + "" to "" + m New Version + "": "" + db . get Path (  )  )  ;                  }                 on Upgrade ( db, version, m New Version )  ;              }             db . set Version ( m New Version )  ;              db . set Transaction Successful (  )  ;          } finally {             db . end Transaction (  )  ;          }     }     on Open ( db )  ;      success = true ;      return db ;  } finally {     m Is Initializing = false ;      if  ( success )  {         if  ( m Database != null )  {             try {                 m Database . close (  )  ;              } catch  (  Exception e )  {             }         //m Database . unlock (  )  ;          }         m Database = db ;      } else {         //if  ( m Database != null )  m Database . unlock (  )  ;          if  ( db != null )              db . close (  )  ;      } }}"
1425,public  Buffered Image get Image (  ) { return image ; }
1426,"public void test Is Well Formed_3 Bytes (  ) { test Bytes ( 3, EXPECTED_THREE_BYTE_ROUNDTRIPPABLE_COUNT )  ; }"
1427,public final long get Total External Memory Size (  ) { if  ( external Memory Available (  )  )  {      File path = get External Storage Directory (  )  ;       Stat Fs stat = new  Stat Fs ( path . get Path (  )  )  ;      long block Size ;      long total Blocks ;      if  ( VERSION . SDK_INT >= VERSION_CODES . JELLY_BEAN_MR2 )  {         block Size = stat . get Block Size Long (  )  ;          total Blocks = stat . get Block Count Long (  )  ;      } else {         block Size = stat . get Block Size (  )  ;          total Blocks = stat . get Block Count (  )  ;      }     return total Blocks * block Size ;  } else {     return 0 ;  }}
1428,"public com . anychart . scales .  Linear Color color Scale (  ) { return new com . anychart . scales .  Linear Color ( js Base + "" . color Scale (  ) "" )  ; }"
1429,"public static  Component Name get Component Name By Context (  Context c,  Component Name from ) { if  ( from == null )  {     // 外界会直接调用其系统的对应方法     return null ;  }  String app Package = IPC . get Package Name (  )  ;  if  ( ! Text Utils . equals ( from . get Package Name (  ) , app Package )  )  {     // 自己已填好了要使用的插件名（作为CN的 Key），这里不做处理     return from ;  } // 根据 Context的 Class Loader来看到底属于哪个插件，还是只是主程序  Class Loader cl = c . get Class Loader (  )  ;   String pn =  Factory . fetch Plugin Name ( cl )  ;  if  (  Text Utils . is Empty ( pn )  )  {     // 获得了无效的插件信息，这种情况很少见，故打出错误信息，什么也不做     if  ( LOGR )  {          Log Release . e ( PLUGIN_TAG, ""pch . iibc: pn is n .  n="" + from )  ;      } } else if  (  Text Utils . equals ( pn,  Re Plugin . PLUGIN_NAME_MAIN )  )  {     // 此 Context属于主工程，则也什么都不做。稍后会直接走“主程序的 Context”来做处理     if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, "" Plugin Client Helper . iibc (  ) :  Call  Main! n="" + from )  ;      } } else {     // 将 Context所在的插件名写入CN中，待后面的方法去处理     if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, "" Plugin Client Helper . iibc (  ) :  Call  Plugin! n="" + from )  ;      }     return new  Component Name ( pn, from . get Class Name (  )  )  ;  } return from ; }"
1430,public void set On Refresh Listener (  On Refresh Listener listener ) { m Listener = listener ; }
1431,"public void test Find Remote Ref Updates Two Ref Specs (  )  throws IO Exception{ final  Ref Spec spec A = new  Ref Spec ( ""+refs/heads/a:refs/heads/b"" )  ;  final  Ref Spec spec C = new  Ref Spec ( ""+refs/heads/c:refs/heads/d"" )  ;  final  Collection< Ref Spec> specs =  Arrays . as List ( spec A, spec C )  ;   Collection< Remote Ref Update> result ;  try  (  Transport transport =  Transport . open ( db, remote Config )  )  {     result = transport . find Remote Ref Updates For ( specs )  ;  } assert Equals ( 2, result . size (  )  )  ;  boolean found A = false ;  boolean found C = false ;  for  (  Remote Ref Update rru : result )  {     if  ( ""refs/heads/a"" . equals ( rru . get Src Ref (  )  )  && ""refs/heads/b"" . equals ( rru . get Remote Name (  )  )  )          found A = true ;      if  ( ""refs/heads/c"" . equals ( rru . get Src Ref (  )  )  && ""refs/heads/d"" . equals ( rru . get Remote Name (  )  )  )          found C = true ;  } assert True ( found A )  ;  assert True ( found C )  ; }"
1432,"public static  Bip39 Wallet generate Bip39 Wallet From Mnemonic (  String password,  String mnemonic,  File destination Directory )  throws  Cipher Exception, IO Exception{ byte [  ]  seed =  Mnemonic Utils . generate Seed ( mnemonic, password )  ;  EC Key Pair private Key = EC Key Pair . create ( sha256 ( seed )  )  ;   String wallet File = generate Wallet File ( password, private Key, destination Directory, false )  ;  return new  Bip39 Wallet ( wallet File, mnemonic )  ; }"
1433,"public static  Tutorial Options .  Builder< Fragment> new Tutorial Options Builder ( @ Non Null  Context context ) {  Validation Util . check Not Null ( context, "" Context can't be null . "" )  ;  return  Tutorial Options . new Tutorial Options Builder ( context,  Fragment . class )  ; }"
1434,"public com . anychart . standalones .  Data Grid background Fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background Fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
1435,public void reset Friction (  ) { jni Reset Friction ( addr )  ; }
1436,"public com . anychart . charts .  Linear Gauge max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
1437,"public com . anychart . charts .  Pie padding (  String [  ]  padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "", array To String Wrap Quotes ( padding )  )  )  ;  return this ; }"
1438,public  Environment get Environment (  ) { return m Environment ; }
1439,public boolean has Next (  ) { return index < desc . length (  )  ; }
1440,"public static  Object get Field Value (  Document document,  String field ) {  Object field Value ;  if  ( field . contains ( FIELD_SEPARATOR )  )  {     field Value = get Embedded Value ( document, field )  ;  } else {     field Value = document . get ( field )  ;  } return field Value ; }"
1441,"public com . anychart . core . ui .  Chart Scroller outline Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . outline Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
1442,"public static  Big Integer signed Prefixed Message To Key ( byte [  ]  message,  Signature Data signature Data )  throws  Signature Exception{ return signed Message Hash To Key ( get Ethereum Message Hash ( message ) , signature Data )  ; }"
1443,public final  Vec2 negate Local (  ) { x = -x ;  y = -y ;  return this ; }
1444,"public com . anychart . core . pert .  Tasks tasks (  ) { return new com . anychart . core . pert .  Tasks ( js Base + "" . tasks (  ) "" )  ; }"
1445,public  Number Picker Builder set Fragment Manager (  Fragment Manager manager ) { this . manager = manager ;  return this ; }
1446,synchronized  File get File (  ) { return file ; }
1447,"public static int get Output Image Width ( @ Non Null  Intent intent ) { return intent . get Int Extra ( EXTRA_OUTPUT_IMAGE_WIDTH, -1 )  ; }"
1448,"public com . anychart . core .  State Settings grid ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . grid ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
1449,public  Unconfigured Build Target with Flavors (  Flavor .  .  .  flavors ) { return with Flavors (  Arrays . as List ( flavors )  )  ; }
1450,public void on New Token ( @ Non Null  String token ) {}
1451,"public com . anychart . core . ui .  Callout padding (  String value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
1452,"public com . anychart . core . venn .  Intersections fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
1453,"protected final void respond To Call (  Call .  Details call Details,  Call Response response ) { last Respond To Call Input =  Optional . of ( new  Respond To Call Input ( call Details, response )  )  ; }"
1454,public void set Bar Label ( boolean _show Bar Label ) { m Show Bar Label = _show Bar Label ;  on Data Changed (  )  ; }
1455,"public final  Immutable List< Type Token<? extends  Throwable>> get Exception Types (  ) {  Immutable List .  Builder< Type Token<? extends  Throwable>> builder =  Immutable List . builder (  )  ;  for  (  Type type : get Generic Exception Types (  )  )  {     // get Generic Exception Types (  )  will never return a type that's not exception     @ Suppress Warnings ( ""unchecked"" )   Type Token<? extends  Throwable> exception Type =  (  Type Token<? extends  Throwable> )   Type Token . of ( type )  ;      builder . add ( exception Type )  ;  } return builder . build (  )  ; }"
1456,"private byte [  ]  load From File (  String path, int max Width, int max Height,  Bitmap Call Back callback ) { byte [  ]  data = null ;   File Input Stream fis = null ;  try {     fis = new  File Input Stream ( path )  ;      if  ( fis != null )  {         data =  File Utils . input2byte ( fis )  ;      }     handle Bitmap ( data, max Width, max Height, callback )  ;  } catch  (  Exception e )  {     do Failure ( callback, e )  ;  } finally {      File Utils . close IO ( fis )  ;  } return data ; }"
1457,public  Share Messenger Action Button get Button (  ) { return button ; }
1458,"public com . anychart . core . annotations .  Fibonacci Timezones x Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
1459,public boolean is Sonic Available (  ) { return ! Sonic DB Helper . get Instance (  )  . is Upgrading (  )  ; }
1460,"protected void transform Vertices (  ) { /**  It would be possible to also load the x,y,z into a  Vector3 and apply all the transformations using already existing		 * methods .   Especially the quaternion rotation already exists in the  Quaternion class, it then would look like this:		 * ----------------------------------------------------------------------------------------------------		 * v3 . set ( vertices [ x Index ]  * scale . x, vertices [ y Index ]  * scale . y, vertices [ z Index ]  )  ;  rotation . transform ( v3 )  ; 		 * v3 . add ( position )  ;  vertices [ x Index ]  = v3 . x ;  vertices [ y Index ]  = v3 . y ;  vertices [ z Index ]  = v3 . z ; 		 * ----------------------------------------------------------------------------------------------------  However, a half ass		 * benchmark with dozens of thousands decals showed that doing it ""by hand"", as done here, is about 10% faster .   So while		 * duplicate code should be avoided for maintenance reasons etc .  the performance gain is worth it .   The math doesn't change .  */ float x, y, z, w ;  float tx, ty ;  if  ( transformation Offset != null )  {     tx = -transformation Offset . x ;      ty = -transformation Offset . y ;  } else {     tx = ty = 0 ;  } /**  Transform the first vertex */ // first apply the scale to the vector x =  ( vertices [ X1 ]  + tx )  * scale . x ;  y =  ( vertices [ Y1 ]  + ty )  * scale . y ;  z = vertices [ Z1 ]  ;  // then transform the vector using the rotation quaternion vertices [ X1 ]  = rotation . w * x + rotation . y * z - rotation . z * y ;  vertices [ Y1 ]  = rotation . w * y + rotation . z * x - rotation . x * z ;  vertices [ Z1 ]  = rotation . w * z + rotation . x * y - rotation . y * x ;  w = -rotation . x * x - rotation . y * y - rotation . z * z ;  rotation . conjugate (  )  ;  x = vertices [ X1 ]  ;  y = vertices [ Y1 ]  ;  z = vertices [ Z1 ]  ;  vertices [ X1 ]  = w * rotation . x + x * rotation . w + y * rotation . z - z * rotation . y ;  vertices [ Y1 ]  = w * rotation . y + y * rotation . w + z * rotation . x - x * rotation . z ;  vertices [ Z1 ]  = w * rotation . z + z * rotation . w + x * rotation . y - y * rotation . x ;  // <- don't forget to conjugate the rotation back to normal rotation . conjugate (  )  ;  // finally translate the vector according to position vertices [ X1 ]  += position . x - tx ;  vertices [ Y1 ]  += position . y - ty ;  vertices [ Z1 ]  += position . z ;  /**  Transform the second vertex */ // first apply the scale to the vector x =  ( vertices [ X2 ]  + tx )  * scale . x ;  y =  ( vertices [ Y2 ]  + ty )  * scale . y ;  z = vertices [ Z2 ]  ;  // then transform the vector using the rotation quaternion vertices [ X2 ]  = rotation . w * x + rotation . y * z - rotation . z * y ;  vertices [ Y2 ]  = rotation . w * y + rotation . z * x - rotation . x * z ;  vertices [ Z2 ]  = rotation . w * z + rotation . x * y - rotation . y * x ;  w = -rotation . x * x - rotation . y * y - rotation . z * z ;  rotation . conjugate (  )  ;  x = vertices [ X2 ]  ;  y = vertices [ Y2 ]  ;  z = vertices [ Z2 ]  ;  vertices [ X2 ]  = w * rotation . x + x * rotation . w + y * rotation . z - z * rotation . y ;  vertices [ Y2 ]  = w * rotation . y + y * rotation . w + z * rotation . x - x * rotation . z ;  vertices [ Z2 ]  = w * rotation . z + z * rotation . w + x * rotation . y - y * rotation . x ;  // <- don't forget to conjugate the rotation back to normal rotation . conjugate (  )  ;  // finally translate the vector according to position vertices [ X2 ]  += position . x - tx ;  vertices [ Y2 ]  += position . y - ty ;  vertices [ Z2 ]  += position . z ;  /**  Transform the third vertex */ // first apply the scale to the vector x =  ( vertices [ X3 ]  + tx )  * scale . x ;  y =  ( vertices [ Y3 ]  + ty )  * scale . y ;  z = vertices [ Z3 ]  ;  // then transform the vector using the rotation quaternion vertices [ X3 ]  = rotation . w * x + rotation . y * z - rotation . z * y ;  vertices [ Y3 ]  = rotation . w * y + rotation . z * x - rotation . x * z ;  vertices [ Z3 ]  = rotation . w * z + rotation . x * y - rotation . y * x ;  w = -rotation . x * x - rotation . y * y - rotation . z * z ;  rotation . conjugate (  )  ;  x = vertices [ X3 ]  ;  y = vertices [ Y3 ]  ;  z = vertices [ Z3 ]  ;  vertices [ X3 ]  = w * rotation . x + x * rotation . w + y * rotation . z - z * rotation . y ;  vertices [ Y3 ]  = w * rotation . y + y * rotation . w + z * rotation . x - x * rotation . z ;  vertices [ Z3 ]  = w * rotation . z + z * rotation . w + x * rotation . y - y * rotation . x ;  // <- don't forget to conjugate the rotation back to normal rotation . conjugate (  )  ;  // finally translate the vector according to position vertices [ X3 ]  += position . x - tx ;  vertices [ Y3 ]  += position . y - ty ;  vertices [ Z3 ]  += position . z ;  /**  Transform the fourth vertex */ // first apply the scale to the vector x =  ( vertices [ X4 ]  + tx )  * scale . x ;  y =  ( vertices [ Y4 ]  + ty )  * scale . y ;  z = vertices [ Z4 ]  ;  // then transform the vector using the rotation quaternion vertices [ X4 ]  = rotation . w * x + rotation . y * z - rotation . z * y ;  vertices [ Y4 ]  = rotation . w * y + rotation . z * x - rotation . x * z ;  vertices [ Z4 ]  = rotation . w * z + rotation . x * y - rotation . y * x ;  w = -rotation . x * x - rotation . y * y - rotation . z * z ;  rotation . conjugate (  )  ;  x = vertices [ X4 ]  ;  y = vertices [ Y4 ]  ;  z = vertices [ Z4 ]  ;  vertices [ X4 ]  = w * rotation . x + x * rotation . w + y * rotation . z - z * rotation . y ;  vertices [ Y4 ]  = w * rotation . y + y * rotation . w + z * rotation . x - x * rotation . z ;  vertices [ Z4 ]  = w * rotation . z + z * rotation . w + x * rotation . y - y * rotation . x ;  // <- don't forget to conjugate the rotation back to normal rotation . conjugate (  )  ;  // finally translate the vector according to position vertices [ X4 ]  += position . x - tx ;  vertices [ Y4 ]  += position . y - ty ;  vertices [ Z4 ]  += position . z ;  updated = true ; }"
1461,"public void test Send Error (  )  throws  Exception{  String msg Id = ""error msg-123"" ;   String error = ""something went wrong"" ;   Remote Message Builder builder = new  Remote Message Builder (  )  . set Message Type (  Remote Message Builder . MESSAGE_TYPE_SEND_ERROR )  . set Message Id ( msg Id )  . add Data (  Remote Message Builder . EXTRA_ERROR, error )  ;  start Service Via Receiver ( builder . build Intent (  )  )  ;  verify ( service )  . on Send Error ( eq ( msg Id ) , arg That ( send Exception (  Send Exception . ERROR_UNKNOWN, error )  )  )  ; }"
1462,"public boolean is Mute (  )  throws  Transient Network Disconnection Exception,  No Connection Exception{ check Connectivity (  )  ;  if  ( m Volume Type ==  Volume Type . STREAM )  {     check Remote Media Player Available (  )  ;      return m Remote Media Player . get Media Status (  )  . is Mute (  )  ;  } else {     return  Cast .  Cast Api . is Mute ( m Api Client )  ;  }}"
1463,public void close (  )  throws IO Exception{ source . close (  )  ; }
1464,"public  Iterable< Entry< String,  String>> order (  List< Entry< String,  String>> insertion Order ) { return insertion Order ; }"
1465,"public com . anychart . core . cartesian . series .  Line3d max Labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1466,"public static boolean parse Float Attribute (  String attribute,  String value,  Typed Value out Value, boolean require Unit ) { assert require Unit == false || attribute != null ;  // remove the space before and after value = value . trim (  )  ;  int len = value . length (  )  ;  if  ( len <= 0 )  {     return false ;  } // check that there's no non ascii characters .  char [  ]  buf = value . to Char Array (  )  ;  for  ( int i = 0 ;  i < len ;  i++ )  {     if  ( buf [ i ]  > 255 )  {         return false ;      } } // check the first character if  ( buf [ 0 ]  < '0' && buf [ 0 ]  > '9' && buf [ 0 ]  != ' . ' && buf [ 0 ]  != '-' )  {     return false ;  } // now look for the string that is after the float .  .  .   Matcher m = s Float Pattern . matcher ( value )  ;  if  ( m . matches (  )  )  {      String f_str = m . group ( 1 )  ;       String end = m . group ( 2 )  ;      float f ;      try {         f =  Float . parse Float ( f_str )  ;      } catch  (  Number Format Exception e )  {         // this shouldn't happen with the regexp above .          return false ;      }     if  ( end . length (  )  > 0 && end . char At ( 0 )  != ' ' )  {         //  Might be a unit .  .  .          if  ( parse Unit ( end, out Value, s Float Out )  )  {             compute Typed Value ( out Value, f, s Float Out [ 0 ]  )  ;              return true ;          }         return false ;      }     // make sure it's only spaces at the end .      end = end . trim (  )  ;      if  ( end . length (  )  == 0 )  {         if  ( out Value != null )  {             out Value . asset Cookie = 0 ;              out Value . string = null ;              if  ( require Unit == false )  {                 out Value . type =  Typed Value . TYPE_FLOAT ;                  out Value . data =  Float . float To Int Bits ( f )  ;              } else {                 // no unit when required?  Use dp and out an error .                  apply Unit ( s Unit Names [ 1 ] , out Value, s Float Out )  ;                  compute Typed Value ( out Value, f, s Float Out [ 0 ]  )  ;                   System . out . println (  String . format ( "" Dimension \""%1$s\"" in attribute \""%2$s\"" is missing unit!"", value, attribute )  )  ;              }             return true ;          }     } } return false ; }"
1467,"protected  Notification Channel get Notification Channel (  String channel Id,  String conversation Id ) { for  (  Object object : get Notification Channels (  )  )  {      Notification Channel notification Channel =  (  Notification Channel )  object ;      if  ( conversation Id . equals ( notification Channel . get Conversation Id (  )  )  && channel Id . equals ( notification Channel . get Parent Channel Id (  )  )  )  {         return notification Channel ;      } } return null ; }"
1468,"protected  Http Uri Request create Http Uri Request (  Http Method http Method, URI uri ) { switch ( http Method )  {     case GET:         return new  Http Get HC4 ( uri )  ;      case DELETE:         return new  Http Delete HC4 ( uri )  ;      case HEAD:         return new  Http Head HC4 ( uri )  ;      case OPTIONS:         return new  Http Options HC4 ( uri )  ;      case POST:         return new  Http Post HC4 ( uri )  ;      case PUT:         return new  Http Put HC4 ( uri )  ;      case TRACE:         return new  Http Trace HC4 ( uri )  ;      case PATCH:         return new  Http Patch ( uri )  ;      default:         throw new  Illegal Argument Exception ( "" Invalid HTTP method: "" + http Method )  ;  }}"
1469,"public void set ( int n,  Dalv Insn insn ) { set0 ( n, insn )  ; }"
1470,"public com . anychart . charts .  Heat Map y Zoom (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Zoom ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1471,"public com . anychart . core . utils .  Bounds bounds (  ) { return new com . anychart . core . utils .  Bounds ( js Base + "" . bounds (  ) "" )  ; }"
1472,"public com . anychart . standalones .  Labels Factory font Decoration (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Decoration ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
1473,public void set On Set Crop Overlay Moved Listener (  On Set Crop Overlay Moved Listener listener ) { m On Set Crop Overlay Moved Listener = listener ; }
1474,"public com . anychart . standalones .  Title text Settings (  String name,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Settings ( %s, %s )  ; "", wrap Quotes ( name ) , settings )  )  ;  return this ; }"
1475,public int get Count (  ) { if  ( get Cursor (  )  == null )  {     return 0 ;  } return super . get Count (  )  ; }
1476,public  Builder clear Trace Info (  ) { if  ( trace Info Builder_ == null )  {     trace Info_ = null ;      on Changed (  )  ;  } else {     trace Info_ = null ;      trace Info Builder_ = null ;  } return this ; }
1477,public boolean get Is Multi Resource Refresh Token (  ) { return m Is Multi Resource Refresh Token ; }
1478,"public static boolean equals Ignore Case (  Char Sequence s1,  Char Sequence s2 ) { //  Calling length (  )  is the null pointer check  ( so do it before we can exit early )  .  int length = s1 . length (  )  ;  if  ( s1 == s2 )  {     return true ;  } if  ( length != s2 . length (  )  )  {     return false ;  } for  ( int i = 0 ;  i < length ;  i++ )  {     char c1 = s1 . char At ( i )  ;      char c2 = s2 . char At ( i )  ;      if  ( c1 == c2 )  {         continue ;      }     int alpha Index = get Alpha Index ( c1 )  ;      // however this showed no obvious improvement .      if  ( alpha Index < 26 && alpha Index == get Alpha Index ( c2 )  )  {         continue ;      }     return false ;  } return true ; }"
1479,"public  Test Text Prop View Model_ on Visibility Changed (  On Model Visibility Changed Listener< Test Text Prop View Model_,  Test Text Prop View> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
1480,"protected void connected ( final  Base Download Task task, final  String etag, final boolean is Continue, final long so Far Bytes, final long total Bytes ) {}"
1481,"private static  List< Symbol> get Symbol By Resource Type ( @ Non Null  Symbol Table table, @ Non Null  Resource Type type ) { final  Comparator< Symbol> name Comparator =  Comparator . comparing (  Symbol::get Name )  ;  final  Immutable Collection< Symbol> symbol Collection = table . get Symbols (  )  . row ( type )  . values (  )  ;   List< Symbol> symbols =  Lists . new Array List ( symbol Collection )  ;  symbols . sort ( name Comparator )  ;  return symbols ; }"
1482,"public final  Immutable Set<V> replace Values ( K key,  Iterable<? extends V> values ) { throw new  Unsupported Operation Exception (  )  ; }"
1483,"public void add Rect Frame ( int x, int y, int w, int h ) { if  ( s_frame_rect != null )  {     s_frame_rect . add ( new  Rect ( x, y, x + w, y + h )  )  ;  }}"
1484,"private int read To Output (  Extractor Input input,  Track Output output, int length )  throws IO Exception,  Interrupted Exception{ int bytes Read ;  int stripped Bytes Left = sample Stripped Bytes . bytes Left (  )  ;  if  ( stripped Bytes Left > 0 )  {     bytes Read =  Math . min ( length, stripped Bytes Left )  ;      output . sample Data ( sample Stripped Bytes, bytes Read )  ;  } else {     bytes Read = output . sample Data ( input, length, false )  ;  } sample Bytes Read += bytes Read ;  sample Bytes Written += bytes Read ;  return bytes Read ; }"
1485,public DH get Hierarchy (  ) { return m Drawee Holder . get Hierarchy (  )  ; }
1486,public  Nitrite Builder read Only (  ) { this . read Only = true ;  return this ; }
1487,public  Builder is Round ( boolean is Round ) { this . is Round = is Round ;  return this ; }
1488,"public void to Json (  Boolean stringify ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Json ( %s )  ; "", stringify )  )  ; }"
1489,"private  String replace System Properties (  String word )  throws  Parse Exception{ int from Index = 0 ;  while  ( true )  {     from Index = word . index Of (  Atlas Proguard Constants . OPEN_SYSTEM_PROPERTY, from Index )  ;      if  ( from Index < 0 )  {         break ;      }     int to Index = word . index Of (  Atlas Proguard Constants . CLOSE_SYSTEM_PROPERTY, from Index + 1 )  ;      if  ( to Index < 0 )  {         break ;      }      String property Name = word . substring ( from Index + 1, to Index )  ;       String property Value = properties . get Property ( property Name )  ;      if  ( property Value == null )  {         throw new  Parse Exception ( "" Value of system property '"" + property Name + ""' is undefined in "" + reader . location Description (  )  )  ;      }     word = word . substring ( 0, from Index )  + property Value + word . substring ( to Index + 1 )  ;      from Index += property Value . length (  )  ;  } return word ; }"
1490,"public static void update View Layout Params (  View view, int width, int height ) {  View Group .  Layout Params layout Params = view . get Layout Params (  )  ;  if  ( layout Params == null || layout Params . height != width || layout Params . width != height )  {     layout Params = new  Abs List View .  Layout Params ( width, height )  ;      view . set Layout Params ( layout Params )  ;  }}"
1491,public  Builder is Round ( boolean is Round ) { this . is Round = is Round ;  return this ; }
1492,public static int get Width (  Byte Buffer header ) { return  ( 0x FFFF & header . get Short ( ETC2_PKM_WIDTH_OFFSET )  )  ; }
1493,"public void test Test Equals Equals Objects (  ) { equals Tester . add Equality Group ( reference, equal Object1, equal Object2 )  ;  equals Tester . test Equals (  )  ; }"
1494,"public void set Up (  ) {  Context cx =  Context . enter (  )  ;  try {     global = cx . init Standard Objects (  )  ;       String [  ]  names = { ""f"", ""g"" } ;      global . define Function Properties ( names,  Define Function Properties Test . class,  Scriptable Object . DONTENUM )  ;  } finally {      Context . exit (  )  ;  }}"
1495,public void set Rotation Angle ( float angle ) { m Raw Rotation Angle = angle ;  m Rotation Angle =  Utils . get Normalized Angle ( m Raw Rotation Angle )  ; }
1496,"public com . anychart . core . resource .  Grid odd Holiday Fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . odd Holiday Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
1497,public  String get Vertex Shader Source (  ) { return vertex Shader Source ; }
1498,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
1499,"private  String choose File (  String title ) { dlg . set Dialog Title ( title )  ;   File CWD = null ;   String dir =  Security Utilities . get System Property ( ""user . dir"" )  ;  if  ( dir != null )  {     CWD = new  File ( dir )  ;  } if  ( CWD != null )  {     dlg . set Current Directory ( CWD )  ;  } int return Val = dlg . show Open Dialog ( this )  ;  if  ( return Val == J File Chooser . APPROVE_OPTION )  {     try {          String result = dlg . get Selected File (  )  . get Canonical Path (  )  ;          CWD = dlg . get Selected File (  )  . get Parent File (  )  ;           Properties props =  System . get Properties (  )  ;          props . put ( ""user . dir"", CWD . get Path (  )  )  ;           System . set Properties ( props )  ;          return result ;      } catch  ( IO Exception ignored )  {     } catch  (  Security Exception ignored )  {     } } return null ; }"
1500,private  Secure Utils . K2 Output get K2 Output ( final  Message message ) { final  Network Key network Key ;  if  ( message . get Akf (  )  == APPLICATION_KEY_IDENTIFIER )  {     network Key = m Network Layer Callbacks . get Primary Network Key (  )  ;  } else {     final int net Key Index = message . get Application Key (  )  . get Bound Net Key Index (  )  ;      network Key = m Network Layer Callbacks . get Network Key ( net Key Index )  ;  } return network Key . get Tx Derivatives (  )  ; }
1501,public  Decimal128 average Decimal128 (  String field Name ) { realm . check If Valid (  )  ;  realm . check Allow Queries On Ui Thread (  )  ;  long column Index = schema . get And Check Field Column Key ( field Name )  ;  return query . average Decimal128 ( column Index )  ; }
1502,public int index (  ) { return index ; }
1503,public void reset Yaw (  ) { start From Sensor Transformation = null ; }
1504,public  Configuration proxy (  Proxy proxy ) { this . proxy = proxy ;  return this ; }
1505,"public com . anychart . core . annotations .  Fibonacci Base bounds (  String x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
1506,"public com . anychart . core . stock . scrollerseries .  Jump Line max Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
1507,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
1508,public boolean on Recalculate Model Matrix (  Matrix4 parent Matrix ) { if  ( m Is Model Matrix Dirty )  {     calculate Model Matrix ( parent Matrix )  ;      if  ( m Graph Node != null )          m Graph Node . update Object ( this )  ;      m Is Model Matrix Dirty = false ;      return true ;  } return false ; }
1509,"public static void compute Recenter Matrix ( float [  ]  recenter Matrix, float [  ]  rotation Matrix ) { //  The re-centering matrix is computed as follows: // recenter . row ( 2 )  = temp . col ( 2 )  . transpose (  )  ;  // recenter . row ( 0 )  = recenter . row ( 1 )  . cross ( recenter . row ( 2 )  )  . normalized (  )  ;  // recenter . row ( 2 )  = recenter . row ( 0 )  . cross ( recenter . row ( 1 )  )  . normalized (  )  ;  //             | temp [ 10 ]   0   -temp [ 8 ]     0| //             | 0         1    0          0| // recenter =  | temp [ 8 ]    0    temp [ 10 ]    0| //             | 0         0    0          1|  Matrix . set Identity M ( recenter Matrix, 0 )  ;  float norm Row Sqr = rotation Matrix [ 10 ]  * rotation Matrix [ 10 ]  + rotation Matrix [ 8 ]  * rotation Matrix [ 8 ]  ;  float norm Row =  ( float )   Math . sqrt ( norm Row Sqr )  ;  recenter Matrix [ 0 ]  = rotation Matrix [ 10 ]  / norm Row ;  recenter Matrix [ 2 ]  = rotation Matrix [ 8 ]  / norm Row ;  recenter Matrix [ 8 ]  = -rotation Matrix [ 8 ]  / norm Row ;  recenter Matrix [ 10 ]  = rotation Matrix [ 10 ]  / norm Row ; }"
1510,"public  Rect F get Bounds (  ) { // scaled return new  Rect F (  ( int )  s_position . x,  ( int )  s_position . y,  ( int )   ( s_position . x + s_width *  Math . sqrt ( s_scale . x )  ) , //这里取平方根，不然假设scale=2，算出来就变成了放大4倍。  ( int )   ( s_position . y + s_height *  Math . sqrt ( s_scale . y )  )  )  ; }"
1511,"static  String build Html (  String template String, JSON Object data Json, int data Max Size ) { if  (  Text Utils . is Empty ( template String )  || data Json == null )  {     return null ;  }  String Builder html String Builder = new  String Builder ( template String . length (  )  + data Max Size )  ;  html String Builder . append ( template String )  ;   String key ;   String data ;  int index ;   Iterator<?> iterator = data Json . keys (  )  ;  while  ( iterator . has Next (  )  )  {     key = iterator . next (  )  . to String (  )  ;      data = data Json . opt String ( key )  ;      index = html String Builder . index Of ( key )  ;      if  ( -1 != index )  {         html String Builder . replace ( index, index + key . length (  ) , data )  ;      } } return html String Builder . to String (  )  ; }"
1512,protected void set Row View Properties (  View row View ) { row View . set Clickable ( true )  ;  row View . set Enabled ( false )  ;  row View . set Focusable ( false )  ; }
1513,"private void add Default Layer (  ) { default Main Layer = new  Default Layer ( get Screen (  ) , new  Rect ( 0, 0, U Idefault Data . screen Width, U Idefault Data . screen Height )  )  ;  default Main Layer . set Layer Name ( "" Main Layer"" )  ;  layer Engine Screen . add Layer ( default Main Layer )  ; }"
1514,"public com . anychart . core . utils .  Quarter margin (  Number value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
1515,"private void create Field Bindings (  Moshi moshi,  Type type,  Map< String,  Field Binding<?>> field Bindings ) {  Class<?> raw Type =  Types . get Raw Type ( type )  ;  boolean platform Type =  Util . is Platform Type ( raw Type )  ;  for  (  Field field : raw Type . get Declared Fields (  )  )  {     if  ( !include Field ( platform Type, field . get Modifiers (  )  )  )          continue ;      //  Look up a type adapter for this type .       Type field Type = resolve ( type, raw Type, field . get Generic Type (  )  )  ;       Set<? extends  Annotation> annotations =  Util . json Annotations ( field )  ;       String field Name = field . get Name (  )  ;       Json Adapter< Object> adapter = moshi . adapter ( field Type, annotations, field Name )  ;      //  Create the binding between field and JSON .      field . set Accessible ( true )  ;      //  Store it using the field's name .   If there was already a field with this name, fail!      Json json Annotation = field . get Annotation (  Json . class )  ;       String name = json Annotation != null ? json Annotation . name (  )  : field Name ;       Field Binding< Object> field Binding = new  Field Binding<> ( name, field, adapter )  ;       Field Binding<?> replaced = field Bindings . put ( name, field Binding )  ;      if  ( replaced != null )  {         throw new  Illegal Argument Exception ( "" Conflicting fields:\n"" + ""    "" + replaced . field + ""\n"" + ""    "" + field Binding . field )  ;      } }}"
1516,"public static  String target Triple For Flavor (  Flavor flavor ) {  List< String> parts =  Splitter . on ( '-' )  . limit ( 2 )  . split To List ( flavor . get Name (  )  )  ;  if  ( parts . size (  )  != 2 )  {     return null ;  }  String platform = parts . get ( 0 )  ;   String raw Arch = parts . get ( 1 )  ;   String rust Arch ;  if  ( platform . equals (  Apple Platform . IPHONEOS . get Name (  )  )  || platform . equals (  Apple Platform . IPHONESIMULATOR . get Name (  )  )  )  {     //  This is according to https://forge . rust-lang . org/platform-support . html     if  ( raw Arch . equals ( ""armv7"" )  )  {         // armv7 is not part of  Architecture .          rust Arch = ""armv7"" ;      } else {          Architecture arch =  Architecture . from Name ( parts . get ( 1 )  )  ;          if  ( arch ==  Architecture . X86_32 )  {             rust Arch = ""i386"" ;          } else {             rust Arch = arch . to String (  )  ;          }     }     return rust Arch + ""-apple-ios"" ;  } else if  ( platform . equals ( ""android"" )  )  {     //  This is according to https://forge . rust-lang . org/platform-support . html     if  ( raw Arch . equals ( ""armv7"" )  )  {         // https://developer . android . com/ndk/guides/abis . html#v7a .          return ""armv7-linux-androideabi"" ;      } else {         //  We want aarch64-linux-android, i686-linux-android, or x86_64-linux-android .           Architecture arch =  Architecture . from Name ( parts . get ( 1 )  )  ;          if  ( arch ==  Architecture . X86_32 )  {             rust Arch = ""i686"" ;          } else {             rust Arch = arch . to String (  )  ;          }         return rust Arch + ""-linux-android"" ;      } } else {     return null ;  }}"
1517,"public final byte [  ]  generate Confirmation Inputs ( final byte [  ]  provisioner Key XY, final byte [  ]  provisionee Key XY ) { // Append all the raw data together if  ( confirmation Inputs != null )  {     return confirmation Inputs ;  } // We must remove the first two bytes which is the pdu type and the provisioning pdu type final int offset = 2 ;  final int invite Length = m Unprovisioned Mesh Node . get Provisioning Invite Pdu (  )  . length - offset ;  final  Byte Buffer invite Buffer =  Byte Buffer . allocate ( invite Length )  . put ( m Unprovisioned Mesh Node . get Provisioning Invite Pdu (  ) , offset, invite Length )  ;  final byte [  ]  invite = invite Buffer . array (  )  ;  // We must remove the first two bytes which is the pdu type and the provisioning pdu type final int capabilities Length = m Unprovisioned Mesh Node . get Provisioning Capabilities Pdu (  )  . length - offset ;  final  Byte Buffer capabilities Buffer =  Byte Buffer . allocate ( capabilities Length )  . put ( m Unprovisioned Mesh Node . get Provisioning Capabilities Pdu (  ) , offset, capabilities Length )  ;  final byte [  ]  capabilities = capabilities Buffer . array (  )  ;  // We must remove the first two bytes which is the pdu type and the provisioning pdu type final int start Data Length = m Unprovisioned Mesh Node . get Provisioning Start Pdu (  )  . length - offset ;  final  Byte Buffer start Data Buffer =  Byte Buffer . allocate ( start Data Length )  . put ( m Unprovisioned Mesh Node . get Provisioning Start Pdu (  ) , offset, start Data Length )  ;  //get ( start Data, 2, start Data Length )  ;  final byte [  ]  start Data = start Data Buffer . array (  )  ;  final int length = invite . length + capabilities . length + start Data . length + provisioner Key XY . length + provisionee Key XY . length ;  final  Byte Buffer buffer =  Byte Buffer . allocate ( length )  ;  buffer . put ( invite )  ;  buffer . put ( capabilities )  ;  buffer . put ( start Data )  ;  buffer . put ( provisioner Key XY )  ;  buffer . put ( provisionee Key XY )  ;  confirmation Inputs = buffer . array (  )  ;  return confirmation Inputs ; }"
1518,"protected final void notify Failed (  Throwable cause ) { check Not Null ( cause )  ;  monitor . enter (  )  ;  try {      State previous = state (  )  ;      switch ( previous )  {         case NEW:         case TERMINATED:             throw new  Illegal State Exception ( "" Failed while in state:"" + previous, cause )  ;          case RUNNING:         case STARTING:         case STOPPING:             snapshot = new  State Snapshot ( FAILED, false, cause )  ;              enqueue Failed Event ( previous, cause )  ;              break ;          case FAILED:             //  Do nothing             break ;      } } finally {     monitor . leave (  )  ;      dispatch Listener Events (  )  ;  }}"
1519,public static  Condition true Condition (  ) { return TRUE_CONDICATE ; }
1520,"protected int get Relative Y (  Native Event e,  Canvas Element target ) { //  Correct for canvas CSS scaling float y Scale Ratio = target . get Height (  )  * 1f / target . get Client Height (  )  ;  return  Math . round ( y Scale Ratio *  ( e . get Client Y (  )  - target . get Absolute Top (  )  + target . get Scroll Top (  )  + target . get Owner Document (  )  . get Scroll Top (  )  )  )  ; }"
1521,public  String get Authority Url (  ) { return m Authority Url ; }
1522,public void last Item_ Not Displayed (  ) { //  Last item should not exist if the list wasn't scrolled down .  on View ( with Text ( LAST_ITEM_ID )  )  . check ( does Not Exist (  )  )  ; }
1523,"public  Realm Async Task execute Transaction Async ( final  Transaction transaction ) { return execute Transaction Async ( transaction, null, null )  ; }"
1524,"public com . anychart . core . grids .  Linear x Grid (  Number index ) { return new com . anychart . core . grids .  Linear (  String . format (  Locale . US, js Base + "" . x Grid ( %s ) "", index )  )  ; }"
1525,"public  String encrypt (  String str In )  throws  Exception{ if  ( str In == null )  {     str In = """" ;  } return byte Arr2 Hex Str ( encrypt ( str In . get Bytes ( ""utf-8"" )  )  )  ; }"
1526,public boolean is Within Value Range ( final long value ) { return  ( this . perf Max Data Len == -1 || this . perf Max Data Len >= value )  && value >= 0 ; }
1527,"public void get City Location (  ) { try {      Lat Lon lat Lon = // get an P Stream of current location, the location granularity is ""CITY"" .      uqi . get Data (  Geolocation . as Current (  Geolocation . LEVEL_CITY ) , purpose )  . get First ( // get the ""lat_lon"" field of current location .      ""lat_lon"" )  ;       System . out . println ( "" Current location: lat="" + lat Lon . get Latitude (  )  + "", lng="" + lat Lon . get Longitude (  )  )  ;  } catch  ( PS Exception e )  {     e . print Stack Trace (  )  ;  }}"
1528,"protected void visibility Button Helper ( int overflow Button Visibility, int expand Button Visibility, int other Button Visibility ) { if  ( overflow Button Visibility == VISIBLE || overflow Button Visibility == GONE )  {     if  ( m Image Button Overflow != null )  {         m Image Button Overflow . set Visibility ( overflow Button Visibility )  ;      } } if  ( expand Button Visibility == VISIBLE || expand Button Visibility == GONE )  {     if  ( m Image Button Expand != null )  {         m Image Button Expand . set Visibility ( expand Button Visibility )  ;      } } if  ( other Button Visibility == VISIBLE || other Button Visibility == GONE )  {     if  ( m Image Button Other != null )  {         m Image Button Other . set Visibility ( other Button Visibility )  ;      } }}"
1529,public static  List< Closeable Reference<T>> clone Or Null ( @ Propagates Nullable  Collection< Closeable Reference<T>> refs ) { if  ( refs == null )  {     return null ;  }  List< Closeable Reference<T>> ret = new  Array List<> ( refs . size (  )  )  ;  for  (  Closeable Reference<T> ref : refs )  {     ret . add (  Closeable Reference . clone Or Null ( ref )  )  ;  } return ret ; }
1530,"public com . anychart . core . lineargauge . pointers .  Thermometer stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1531,public  Builder set Column Background Color ( @ Color Int int background Color ) { m Column Background Color = background Color ;  return this ; }
1532,"public  String to String ( int radix ) { return  Unsigned Ints . to String ( value, radix )  ; }"
1533,"public void ensure Capacity ( int minimum Capacity ) { if  ( m Hashes . length < minimum Capacity )  {     final int [  ]  ohashes = m Hashes ;      final  Object [  ]  oarray = m Array ;      alloc Arrays ( minimum Capacity )  ;      if  ( m Size > 0 )  {          System . arraycopy ( ohashes, 0, m Hashes, 0, m Size )  ;           System . arraycopy ( oarray, 0, m Array, 0, m Size << 1 )  ;      }     free Arrays ( ohashes, oarray, m Size )  ;  }}"
1534,"public void domain Is Public Suffix (  ) {  Http Url ascii =  Http Url . get ( ""https://foo1 . foo . bar . elb . amazonaws . com"" )  ;  assert That (  Cookie . parse ( ascii, ""a=b ;  domain=foo . bar . elb . amazonaws . com"" )  )  . is Not Null (  )  ;  assert That (  Cookie . parse ( ascii, ""a=b ;  domain=bar . elb . amazonaws . com"" )  )  . is Null (  )  ;  assert That (  Cookie . parse ( ascii, ""a=b ;  domain=com"" )  )  . is Null (  )  ;   Http Url unicode =  Http Url . get ( ""https://長 . 長 . 長崎 . jp"" )  ;  assert That (  Cookie . parse ( unicode, ""a=b ;  domain=長 . 長崎 . jp"" )  )  . is Not Null (  )  ;  assert That (  Cookie . parse ( unicode, ""a=b ;  domain=長崎 . jp"" )  )  . is Null (  )  ;   Http Url punycode =  Http Url . get ( ""https://xn--ue5a . xn--ue5a . xn--8ltr62k . jp"" )  ;  assert That (  Cookie . parse ( punycode, ""a=b ;  domain=xn--ue5a . xn--8ltr62k . jp"" )  )  . is Not Null (  )  ;  assert That (  Cookie . parse ( punycode, ""a=b ;  domain=xn--8ltr62k . jp"" )  )  . is Null (  )  ; }"
1535,"public com . anychart . charts .  Cartesian3d text Marker (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Marker ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
1536,"public static  Inet Address get Connectable Address (  ) { try {     return  Inet Address . get Local Host (  )  ;  } catch  (  Unknown Host Exception e )  {     throw new  Runtime Exception ( "" Could not resolve localhost"", e )  ;  }}"
1537,"public boolean send Election Message ( int current Id,  String content ) { var next Instance = this . find Next Instance ( current Id )  ;  var election Message = new  Message (  Message Type . ELECTION, content )  ;  next Instance . on Message ( election Message )  ;  return true ; }"
1538,"public void for Each (  String field To Select,  Function<T Value,  Void> callback ) { this . output (  Callbacks . for Each Field ( field To Select, callback )  )  ; }"
1539,public boolean cancel Diff (  ) { return generation Tracker . finish Max Generation (  )  ; }
1540,"public static boolean is Plugin Installed (  String plugin Name ) {  Plugin Info pi = MP . get Plugin ( plugin Name, false )  ;  return pi != null ; }"
1541,"public com . anychart . charts .  Tag Cloud bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
1542,"public com . anychart . charts .  Cartesian select Marquee Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
1543,"public static  Matchable Call when DELETE (  Matcher< Recorded Request> request Matcher ) { return REST Mock Server . when Requested ( all Of ( is DELETE (  ) , request Matcher )  )  ; }"
1544,"public com . anychart . core . utils .  Legend Item Settings icon Stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . icon Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1545,"public  String Builder append ( int value ) { return append ( value, 0 )  ; }"
1546,"private void init ( int max Size ) { this . max Size = max Size ;  cache = new  Lru Cache< String,  Bitmap> ( max Size )  {     @ Override     protected int size Of (  String key,  Bitmap value )  {         super . size Of ( key, value )  ;          if  (  System Tool . get SDK Version (  )  >= 12 )  {             return value . get Byte Count (  )  ;          } else {             return value . get Row Bytes (  )  * value . get Height (  )  ;          }     } } ; }"
1547,"public com . anychart . charts .  Circular Gauge draw (  Boolean async ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . draw ( %s )  ; "", async )  )  ;  return this ; }"
1548,public boolean equals (  Object obj ) { return  ( compare To ( obj )  == 0 )  ; }
1549,"public com . anychart . charts .  Waterfall right (  String right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", wrap Quotes ( right )  )  )  ;  return this ; }"
1550,public static  List< String> get Render Info Names (  Change change ) { final  List< String> names = new  Array List<> (  )  ;  final  List< Render Info> render Infos = change . get Render Infos (  )  ;  if  ( render Infos . is Empty (  )  )  {     names . add ( change . get Render Info (  )  . get Name (  )  )  ;  } else {     for  ( int i = 0 ;  i < render Infos . size (  )  ;  i++ )  {         names . add ( render Infos . get ( i )  . get Name (  )  )  ;      } } return names ; }
1551,Path resolve (  Forward Relative Path path ) { return resolve ( path . to Path ( get File System (  )  )  )  ; }
1552,"public void send As Console Event ( final  String message, final  Text Type text Type ) { if  ( m Current Build Root Element == null )  {     return ;  } m Buck UI Manager . get Buck Tree View Panel (  )  . get Modifiable Model (  )  . add Child ( m Current Build Root Element, new  Buck Text Node ( message, text Type )  )  ; }"
1553,public void set File Encrypted Native Or Emulated ( boolean is Supported ) { is File Encryption Supported = is Supported ; }
1554,"public com . anychart . core .  Series Base left (  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", wrap Quotes ( left )  )  )  ;  return this ; }"
1555,public static  Double range (  List<T> num List ) { if  ( valid Length ( num List )  == 0 )      return null ;  T max = max ( num List )  ;  T min = min ( num List )  ;  if  ( max == null || min == null )      return null ;  return max . double Value (  )  - min . double Value (  )  ; }
1556,"public void left (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . left (  )  ; "" )  ; }"
1557,public static  String get Sdk Version (  ) { return  Facebook Sdk Version . BUILD ; }
1558,"public A Loader load Model (  Class<? extends A Loader> loader Class, I Async Loader Callback callback, int res ID, int tag ) { try {     final  Constructor<? extends A Loader> constructor = loader Class . get Constructor (  Resources . class,  Texture Manager . class, int . class )  ;      final A Loader loader = constructor . new Instance ( get Context (  )  . get Resources (  ) , get Texture Manager (  ) , res ID )  ;      return load Model ( loader, callback, tag )  ;  } catch  (  Exception e )  {     callback . on Model Load Failed ( null )  ;      return null ;  }}"
1559,public double get Rest Speed Threshold (  ) { return m Rest Speed Threshold ; }
1560,"private boolean are Cached Fetch Configs Valid ( long cache Expiration In Seconds,  Date new Fetch Time ) {  Date last Successful Fetch Time = frc Metadata . get Last Successful Fetch Time (  )  ;  if  ( last Successful Fetch Time . equals ( LAST_FETCH_TIME_NO_FETCH_YET )  )  {     return false ;  }  Date cache Expiration Time = new  Date ( last Successful Fetch Time . get Time (  )  + SECONDS . to Millis ( cache Expiration In Seconds )  )  ;  return new Fetch Time . before ( cache Expiration Time )  ; }"
1561,public int get Element Address (  ) { return element Address ; }
1562,public boolean is Readable (  ) { return true ; }
1563,protected  String get Voice Mail Alpha Tag (  ) { return voice Mail Alpha Tag ; }
1564,"public void render ( final  Renderable Provider renderable Provider, final  Shader shader ) { final int offset = renderables . size ;  renderable Provider . get Renderables ( renderables, renderables Pool )  ;  for  ( int i = offset ;  i < renderables . size ;  i++ )  {      Renderable renderable = renderables . get ( i )  ;      renderable . shader = shader ;      renderable . shader = shader Provider . get Shader ( renderable )  ;  }}"
1565,"public void min Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Height (  )  ; "" )  ; }"
1566,"public com . anychart . graphics . vector .  Element set Rotation By Anchor (  Number degrees, com . anychart . graphics . vector .  Anchor anchor ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set Rotation By Anchor ( %s, %s )  ; "", degrees,  ( anchor != null )  ? anchor . get Js Base (  )  : null )  )  ;  return this ; }"
1567,"public com . anychart . core . annotations .  Triangle fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
1568,protected boolean is Valid Fragment (  String fragment ) { if  ( fragment == null )  {     return true ;  } return is Off ( NO_FRAGMENTS )  ; }
1569,boolean was Already Validated (  Executable Element method ) { return reports . contains Key ( method )  ; }
1570,"public static void apply Pressed Bg Dark (  View view ) { apply Pressed Bg Dark ( view, PRESSED_BG_DARK_DEFAULT_VALUE )  ; }"
1571,public  String get Generation (  ) { return m Generation ; }
1572,public void set Thread Priority ( int update Priority ) { m Layout Thread Factory . set Thread Priority ( update Priority )  ; }
1573,public  Action get Action (  ) { return action ; }
1574,public  String get Encoding (  ) { return  Text Encoding . get Instance Of (  )  . get Value For Id ( this . get Body (  )  . get Text Encoding (  )  )  ; }
1575,"public static  Text Encryptor text (  Char Sequence password,  Char Sequence salt ) { return new  Hex Encoding Text Encryptor ( standard ( password, salt )  )  ; }"
1576,public final T get Result (  ) { return result ; }
1577,"public com . anychart . core . stock . scrollerseries .  Jump Line right (  Number right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", right )  )  ;  return this ; }"
1578,public final int get Company Identifier (  ) { return m Company Identifier ; }
1579,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
1580,public static  Amplitude Client get Instance (  ) { return get Instance ( null )  ; }
1581,public  String get Chart Type (  ) { return TYPE ; }
1582,public boolean is Write Mp4 Genres As Text (  ) { return is Write Mp4 Genres As Text ; }
1583,public static MOCK create Mock (  Class<MOCK> to Mock ) { return null ; }
1584,"public  String obfuscate (  String input ) {  String obfuscated String = input ;   Set< Map .  Entry< Pattern,  String>> entries = pattern Replacement Map . entry Set (  )  ;  for  (  Map .  Entry< Pattern,  String> entry : entries )  {      String replacement = entry . get Value (  )  ;       Pattern pattern = entry . get Key (  )  ;       Util . check Null ( replacement, ""replacement"" )  ;       Matcher matcher = pattern . matcher ( obfuscated String )  ;      obfuscated String = matcher . replace First ( replacement )  ;  } return obfuscated String ; }"
1585,"public static  Function< Callable< Scheduler>,  Scheduler> get Init Main Thread Scheduler Handler (  ) { return on Init Main Thread Handler ; }"
1586,public void set Device Configuration Info (  Configuration Info configuration Info ) { this . configuration Info = configuration Info ; }
1587,public void on Window Focus Changed ( boolean has Focus ) { super . on Window Focus Changed ( has Focus )  ;  if  ( has Focus && immersive Mode )  {     set Immersive Ui Visibility (  )  ;  }}
1588,"public void word Wrap (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . word Wrap (  )  ; "" )  ; }"
1589,"public com . anychart . core . stock . scrollerseries . OHLC enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
1590,"public com . anychart . core . venn .  Intersections intersections (  ) { return new com . anychart . core . venn .  Intersections ( js Base + "" . intersections (  ) "" )  ; }"
1591,public void clear (  ) { final  Reentrant Lock lock = this . lock ;  lock . lock (  )  ;  try {     for  (  Node<E> f = first ;  f != null ;   )  {         f . item = null ;           Node<E> n = f . next ;          f . prev = null ;          f . next = null ;          f = n ;      }     first = last = null ;      count = 0 ;      not Full . signal All (  )  ;  } finally {     lock . unlock (  )  ;  }}
1592,public double get As Double (  ) { throw new  Unsupported Operation Exception ( get Class (  )  . get Simple Name (  )  )  ; }
1593,"public void set Composition ( @ Non Null  Lottie Composition composition ) { if  ( L . DBG )  {      Log . v ( TAG, "" Set  Composition \n"" + composition )  ;  } lottie Drawable . set Callback ( this )  ;  this . composition = composition ;  ignore Unschedule = true ;  boolean is New Composition = lottie Drawable . set Composition ( composition )  ;  ignore Unschedule = false ;  enable Or Disable Hardware Layer (  )  ;  if  ( get Drawable (  )  == lottie Drawable && !is New Composition )  {     // hasn't changed .      return ;  } else if  ( !is New Composition )  {     //  The current drawable isn't lottie Drawable but the drawable already has the right composition .      set Lottie Drawable (  )  ;  } //  This is needed to makes sure that the animation is properly played/paused for the current visibility state .  //  It is possible that the drawable had a lazy composition task to play the animation but this view subsequently // became invisible .   Comment this out and run the espresso tests to see a failing test .  on Visibility Changed ( this, get Visibility (  )  )  ;  request Layout (  )  ;  for  (  Lottie On Composition Loaded Listener lottie On Composition Loaded Listener : lottie On Composition Loaded Listeners )  {     lottie On Composition Loaded Listener . on Composition Loaded ( composition )  ;  }}"
1594,"public com . anychart . charts .  Venn select (  Number index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select ( %s )  ; "", index )  )  ;  return this ; }"
1595,public static  Referral Manager get Instance (  ) { if  ( instance == null )  {     synchronized  (  Referral Manager . class )  {         if  ( instance == null )  {             instance = new  Referral Manager (  )  ;          }     } } return instance ; }
1596,public static void clean External Cache (  Context context ) { if  (  Environment . get External Storage State (  )  . equals (  Environment . MEDIA_MOUNTED )  )  {     delete Files By Directory ( context . get External Cache Dir (  )  )  ;  }}
1597,protected  Skin new Skin (  Texture Atlas atlas ) { return new  Skin ( atlas )  ; }
1598,"public static void vali File Is Exists (  File file )  throws  File Not Found Exception{ if  ( !file . exists (  )  )  {     throw new  File Not Found Exception ( "" File '"" + file . get Name (  )  + ""' not found!"" )  ;  }}"
1599,"void insert Entry ( int entry Index, @ Nullable K key, @ Nullable V value, int hash, int mask ) { this . entries [ entry Index ]  =  Compact Hashing . mask Combine ( hash, UNSET, mask )  ;  this . keys [ entry Index ]  = key ;  this . values [ entry Index ]  = value ; }"
1600,"public  Optional< Boolean> get Boolean (  String key ) { if  ( key == null )  {     logger . debug ( "" The key to get  Remote  Config boolean value is null . "" )  ;      return  Optional . absent (  )  ;  }  Firebase Remote Config Value rc Value = get Remote Config Value ( key )  ;  if  ( rc Value != null )  {     try {         return  Optional . of ( rc Value . as Boolean (  )  )  ;      } catch  (  Illegal Argument Exception e )  {         if  ( !rc Value . as String (  )  . is Empty (  )  )  {             logger . debug ( "" Could not parse value: '%s' for key: '%s' . "", rc Value . as String (  ) , key )  ;          }     } } return  Optional . absent (  )  ; }"
1601,"public  String inner Text (  ) {  String Builder inner Text = new  String Builder (  )  ;   String delimiter = """" ;  for  ( int i = 0 ;  i < real View Group . get Child Count (  )  ;  i++ )  {      View child = real View Group . get Child At ( i )  ;       Shadow View shadow View =  Shadow . extract ( child )  ;       String child Text = shadow View . inner Text (  )  ;      if  ( child Text . length (  )  > 0 )  {         inner Text . append ( delimiter )  ;          delimiter = "" "" ;      }     inner Text . append ( child Text )  ;  } return inner Text . to String (  )  ; }"
1602,"public com . anychart . core . annotations .  Fibonacci Arc container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
1603,"protected  Dependency Aggregation require Aggregated Deps Rule (  Cxx Platform cxx Platform,  Action Graph Builder graph Builder ) { return  (  Dependency Aggregation )  graph Builder . compute If Absent ( create Aggregated Deps Target ( cxx Platform ) ,  dep Agg Target -> new  Dependency Aggregation ( dep Agg Target, get Project Filesystem (  ) , get Preprocess Deps ( cxx Platform, graph Builder )  )  )  ; }"
1604,public final  List<T> get Scrollable Headers (  ) { return  Collections . unmodifiable List ( m Scrollable Headers )  ; }
1605,"public static void to Circle (  Bitmap bitmap, boolean anti Aliased ) {  Preconditions . check Not Null ( bitmap )  ;  if  ( bitmap . get Width (  )  < 3 || bitmap . get Height (  )  < 3 )  {     //  Image too small to round     return ;  } native To Circle Filter ( bitmap, anti Aliased )  ; }"
1606,public  Entity add Protobuf Entity (  String class Name ) {  Entity entity = add Entity ( class Name )  ;  entity . use Protobuf (  )  ;  return entity ; }
1607,"public void write Lines (  Stream<? extends  Char Sequence> lines,  String line Separator )  throws IO Exception{ write Lines ( lines . iterator (  ) , line Separator )  ; }"
1608,"public  Result decode (  Binary Bitmap image )  throws  Not Found Exception,  Checksum Exception,  Format Exception{ return decode ( image, null )  ; }"
1609,"public com . anychart . core . ui .  Label label (  String index ) { return new com . anychart . core . ui .  Label (  String . format (  Locale . US, js Base + "" . label ( %s ) "", wrap Quotes ( index )  )  )  ; }"
1610,"public com . anychart . charts .  Sunburst height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
1611,"public static void sort ( long [  ]  array, int from Index, int to Index ) { check Not Null ( array )  ;  check Position Indexes ( from Index, to Index, array . length )  ;  for  ( int i = from Index ;  i < to Index ;  i++ )  {     array [ i ]  = flip ( array [ i ]  )  ;  }  Arrays . sort ( array, from Index, to Index )  ;  for  ( int i = from Index ;  i < to Index ;  i++ )  {     array [ i ]  = flip ( array [ i ]  )  ;  }}"
1612,protected boolean is Allowed Encoding (  String enc ) { return true ; }
1613,public  Paginate Builder set Callback (  On Load More paginate Callback ) { this . paginate Callback = paginate Callback ;  return this ; }
1614,protected  Optional< Virtual File> get Selection (  Data Context data Context ) { return  Optional . of ( data Context )  . map (  Common Data Keys . VIRTUAL_FILE::get Data )  ; }
1615,"public static int to Int Bits ( int r, int g, int b, int a ) { return  ( a << 24 )  |  ( b << 16 )  |  ( g << 8 )  | r ; }"
1616,"public com . anychart . core . stock . scrollerseries .  Stick stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1617,public void add Repo To Close (  Repository r ) { to Close . add ( r )  ; }
1618,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
1619,"public com . anychart . charts .  Pert tooltip (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . tooltip ( %s )  ; "", settings )  )  ;  return this ; }"
1620,public int get Actual Image Width Px (  ) { if  (  Closeable Reference . is Valid ( m Image Reference )  )  {     return m Image Reference . get (  )  . get Width (  )  ;  } return -1 ; }
1621,public  Builder set Value Bytes ( com . google . protobuf .  Byte String value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } check Byte String Is Utf8 ( value )  ;  value_ = value ;  on Changed (  )  ;  return this ; }
1622,"public com . anychart . core . stock . scrollerseries .  Hilo max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
1623,public  String get Name (  ) {  String path = get Path (  )  ;  if  (  Text Utils . is Empty ( path )  )  {     return null ;  } int last Index = path . last Index Of ( '/' )  ;  if  ( last Index != -1 )  {     return path . substring ( last Index + 1 )  ;  } return path ; }
1624,"public boolean contains ( double x, double z ) { double xx =  (  ( x - m Position . x )  * m One Over X Scale + m Divisions * 0 . 5 )  ;  double zz =  (  ( z - m Position . z )  * m One Over Z Scale + m Divisions * 0 . 5 )  ;  if  ( xx >= 0 && zz >= 0 )  {     return xx < m Divisions && zz < m Divisions ;  } return false ; }"
1625,"private void parse Dialogue Line (  String dialogue Line,  List< Cue> cues,  Long Array cue Times Us ) { if  ( format Key Count == 0 )  {      Log . w ( TAG, "" Skipping dialogue line before complete format: "" + dialogue Line )  ;      return ;  }  String [  ]  line Values = dialogue Line . substring ( DIALOGUE_LINE_PREFIX . length (  )  )  . split ( "","", format Key Count )  ;  if  ( line Values . length != format Key Count )  {      Log . w ( TAG, "" Skipping dialogue line with fewer columns than format: "" + dialogue Line )  ;      return ;  } long start Time Us =  Ssa Decoder . parse Timecode Us ( line Values [ format Start Index ]  )  ;  if  ( start Time Us == C . TIME_UNSET )  {      Log . w ( TAG, "" Skipping invalid timing: "" + dialogue Line )  ;      return ;  } long end Time Us = C . TIME_UNSET ;   String end Time String = line Values [ format End Index ]  ;  if  ( !end Time String . trim (  )  . is Empty (  )  )  {     end Time Us =  Ssa Decoder . parse Timecode Us ( end Time String )  ;      if  ( end Time Us == C . TIME_UNSET )  {          Log . w ( TAG, "" Skipping invalid timing: "" + dialogue Line )  ;          return ;      } }  String text = line Values [ format Text Index ]  . replace All ( ""\\{ . *?\\}"", """" )  . replace All ( ""\\\\N"", ""\n"" )  . replace All ( ""\\\\n"", ""\n"" )  ;  cues . add ( new  Cue ( text )  )  ;  cue Times Us . add ( start Time Us )  ;  if  ( end Time Us != C . TIME_UNSET )  {     cues . add ( null )  ;      cue Times Us . add ( end Time Us )  ;  }}"
1626,"public com . anychart . core . gantt . edit .  Structure Edit placement Stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . placement Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
1627,"public static void get Setup Steps For Buildable (  Build Context context,  Project Filesystem filesystem,  Iterable< Path> outputs,  Builder< Step> step Builder,  Output Path Resolver output Path Resolver ) { // TODO ( cjhopman ) :  This should probably actually be handled by the build engine .  for  (  Path output : outputs )  {     //  Don't delete paths that are invalid now ;  leave it to the  Buildable to handle this .      if  ( !is Valid Output Path ( filesystem, output )  )  {         continue ;      }     // re-create it .      if  ( !output . starts With ( output Path Resolver . get Root Path (  )  )  )  {         step Builder . add (  Rm Step . of (  Build Cell Relative Path . from Cell Relative Path ( context . get Build Cell Root Path (  ) , filesystem, output ) , true )  )  ;      } } step Builder . add All (  Make Clean Directory Step . of (  Build Cell Relative Path . from Cell Relative Path ( context . get Build Cell Root Path (  ) , filesystem, output Path Resolver . get Root Path (  )  )  )  )  ;  step Builder . add All (  Make Clean Directory Step . of (  Build Cell Relative Path . from Cell Relative Path ( context . get Build Cell Root Path (  ) , filesystem, output Path Resolver . get Temp Path (  )  )  )  )  ; }"
1628,"public  Model Returning Class Type_ on Bind (  On Model Bound Listener< Model Returning Class Type_,  Object> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
1629,"protected  String get Genrule Type (  ) {  String base =  More Strings . strip Suffix ( get Class (  )  . get Simple Name (  ) , "" Genrule Description"" )  . or Else Throw (  (  )  -> new  Illegal State Exception ( "" Expected ` Abstract Genrule Description` child class `%s` to end with \"" Genrule Description\"""" )  )  ;  return  Case Format . UPPER_CAMEL . to (  Case Format . LOWER_UNDERSCORE, base + "" Genrule"" )  ; }"
1630,"static  Session Data get Session Data (  String session Id ) { SQ Lite Database db =  Sonic DB Helper . get Instance (  )  . get Writable Database (  )  ;   Session Data session Data = get Session Data ( db, session Id )  ;  if  ( null == session Data )  {     session Data = new  Session Data (  )  ;  } return session Data ; }"
1631,public static boolean need Fix Landscape Notch Area Fit System Window (  View view ) { return  (  Skin Device Utils . is Xiaomi (  )  ||  Skin Device Utils . is Vivo (  )  )  && has Notch ( view )  ; }
1632,"public  Test Field Prop Child View Model_ on Visibility State Changed (  On Model Visibility State Changed Listener< Test Field Prop Child View Model_,  Test Field Prop Child View> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
1633,"public com . anychart . core . annotations .  Fibonacci Timezones bounds (  String x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, height )  )  ;  return this ; }"
1634,"public void fling ( int velocity Y ) { if  ( get Child Count (  )  > 0 )  {     int height = get Height (  )  - get Padding Bottom (  )  - get Padding Top (  )  ;      int bottom = get Child At ( 0 )  . get Height (  )  ;      m Scroller . fling ( get Scroll X (  ) , get Scroll Y (  ) , 0, velocity Y, 0, 0, 0,  Math . max ( 0, bottom - height ) , 0, height / 2 )  ;      post Invalidate On Animation (  )  ;  }}"
1635,"public com . anychart . core . stock . indicators . MACD fast Period (  Number period ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fast Period ( %s )  ; "", period )  )  ;  return this ; }"
1636,public static  Splitter on (  Pattern separator Pattern ) { return on ( new  Jdk Pattern ( separator Pattern )  )  ; }
1637,"public static  String canonical Id (  Value value ) {  String Builder builder = new  String Builder (  )  ;  canonify Value ( builder, value )  ;  return builder . to String (  )  ; }"
1638,public final int get First Sample Index ( int track Index ) { return first Sample Indices [ track Index ]  ; }
1639,"public com . anychart . charts .  Sankey margin (  Number value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
1640,"public void on Click (  View view ) { switch ( view . get Id (  )  )  {     case R . id . tv_back:         finish (  )  ;          break ;      case R . id . tv_right:         break ;      //评论     case R . id . send Iv:         if  ( m Presenter != null )  {             //发布评论              String content = circle Et . get Text (  )  . to String (  )  . trim (  )  ;              if  (  Text Utils . is Empty ( content )  )  {                  Toast Uitl . show Toast With Img ( ""评论内容不能为空"", R . drawable . ic_warm )  ;                  return ;              }             m Presenter . add Comment ( content, m Comment Config )  ;          }         update Edit Text Body Visible (  View . GONE, null )  ;          break ;      case R . id . menu_red:         break ;      case R . id . fab1:         menu Red . close ( true )  ;      case R . id . fab2:         menu Red . close ( true )  ;      case R . id . fab3:         menu Red . close ( true )  ;      case R . id . fab4:         menu Red . close ( true )  ;      case R . id . fab5:         menu Red . close ( true )  ;           Circle Publish Activity . start Action ( this )  ;          break ;  }}"
1641,"Function<T, R> as Function (  ) { return  t -> {     try {         return apply ( t )  ;      } catch  (  Exception e )  {          Throwables . throw If Unchecked ( e )  ;          throw new  Runtime Exception ( e )  ;      } } ; }"
1642,"public void save As Svg (  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Svg ( %s, %s )  ; "", width, height )  )  ; }"
1643,"protected  Entry<K, V> standard Last Entry (  ) { return  Iterables . get First ( descending Map (  )  . entry Set (  ) , null )  ; }"
1644,public int get Comparator Count (  ) { return this . comparators . size (  )  ; }
1645,"public com . anychart . standalones .  Data Grid row Hover Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Hover Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
1646,public  Path get Cell Path (  ) { return cell Path ; }
1647,"private static void write Metadata (  Path dest Path Root,  Map< Path,  String> paths And Contents,  Project Filesystem filesystem )  throws IO Exception{ for  (  Map .  Entry< Path,  String> entry : paths And Contents . entry Set (  )  )  {     final  Path dest Path = dest Path Root . resolve ( entry . get Key (  )  )  ;      if  ( !filesystem . exists ( dest Path . get Parent (  )  )  )  {         filesystem . create Parent Dirs ( dest Path )  ;      }     filesystem . write Contents To Path ( entry . get Value (  ) , dest Path )  ;  }}"
1648,protected  Class Loader get Class Loader (  ) { return get Class (  )  . get Class Loader (  )  ; }
1649,public  Rich Path find First Rich Path (  ) { return find Rich Path By Index ( 0 )  ; }
1650,"private void move Spinner ( float overscroll Top ) { //显示 Progressbar的箭头 m Progress . show Arrow ( true )  ;  //经过一系列的计算，spinner控制下拉的最大距离 float original Drag Percent = overscroll Top / m Total Drag Distance ;  float drag Percent =  Math . min ( 1f,  Math . abs ( original Drag Percent )  )  ;  float adjusted Percent =  ( float )   Math . max ( drag Percent -  . 4, 0 )  * 5 / 3 ;  float extra OS =  Math . abs ( overscroll Top )  - m Total Drag Distance ;  float slingshot Dist = m Using Custom Start ? m Spinner Final Offset - m Original Offset Top : m Spinner Final Offset ;  float tension Slingshot Percent =  Math . max ( 0,  Math . min ( extra OS, slingshot Dist * 2 )  / slingshot Dist )  ;  float tension Percent =  ( float )   (  ( tension Slingshot Percent / 4 )  -  Math . pow ( tension Slingshot Percent / 4, 2 )  )  * 2f ;  float extra Move =  ( slingshot Dist )  * tension Percent * 2 ;  //计算spinner将要（target）被移动到的位置对应的Y坐标,当target Y为0时，小圆圈刚好全部露出来 int target Y = m Original Offset Top +  ( int )   (  ( slingshot Dist * drag Percent )  + extra Move )  ;  // where 1 . 0f is a full circle if  ( m Circle View . get Visibility (  )  !=  View . VISIBLE )  {     m Circle View . set Visibility (  View . VISIBLE )  ;  } if  ( !m Scale )  {      View Compat . set Scale X ( m Circle View, 1f )  ;       View Compat . set Scale Y ( m Circle View, 1f )  ;  } //如果下拉高度小于m Total Drag Distance（一个触发下拉刷新的高度） if  ( overscroll Top < m Total Drag Distance )  {     //如果支持下拉小圆圈缩放，设置颜色透明度和缩放大小     if  ( m Scale )  {         set Animation Progress ( overscroll Top / m Total Drag Distance )  ;      }     if  ( m Progress . get Alpha (  )  > STARTING_PROGRESS_ALPHA && !is Animation Running ( m Alpha Start Animation )  )  {         //  Animate the alpha         start Progress Alpha Start Animation (  )  ;      }     float stroke Start = adjusted Percent *  . 8f ;      m Progress . set Start End Trim ( 0f,  Math . min ( MAX_PROGRESS_ANGLE, stroke Start )  )  ;      m Progress . set Arrow Scale (  Math . min ( 1f, adjusted Percent )  )  ;  } else {     //下拉高度达到了触发刷新的高度     if  ( m Progress . get Alpha (  )  < MAX_ALPHA && !is Animation Running ( m Alpha Max Animation )  )  {         //  Animate the alpha         start Progress Alpha Max Animation (  )  ;      } //也可以在这改bug //             View Compat . set Scale X ( m Circle View, 1f )  ;  //             View Compat . set Scale Y ( m Circle View, 1f )  ;  } float rotation =  ( -0 . 25f +  . 4f * adjusted Percent + tension Percent * 2 )  *  . 5f ;  m Progress . set Progress Rotation ( rotation )  ;  //这是关键调用！动态设置m Spinner的高度。进入该函数看看 set Target Offset Top And Bottom ( target Y - m Current Target Offset Top, true )  ; }"
1651,"public com . anychart . core .  Separate Chart parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
1652,private void update Adapter (  Array List< Card> cards ) { if  ( cards != null )  {     m Card Array Adapter . add All ( cards )  ;  }}
1653,"public static JSON Object get JSON Object ( @ Non Null final  String key, final JSON Object default Value ) { return get JSON Object ( key, default Value, get Default Cache Double Utils (  )  )  ; }"
1654,public long get Counter (  ) { return  (  (  Number )  get Object Value (  Data Types . OBJ_COUNTER )  )  . long Value (  )  ; }
1655,"public final void update Item At Async ( int position,  Render Info render Info ) { assert Single Thread For Change Set (  )  ;  if  (  Sections Debug . ENABLED )  {      Log . d (  Sections Debug . TAG, "" ( "" + hash Code (  )  + "" )  update Item At Async "" + position )  ;  } // immediate mode synchronized  ( this )  {     add To Current Batch ( new  Async Update Operation ( position, render Info )  )  ;  }}"
1656,public void fix (  Ct Class clazz ) { fix ( clazz . get Name (  )  )  ; }
1657,"public void search UDN (  )  throws  Exception{  Mock Upnp Service upnp Service = new  Mock Upnp Service (  )  ;  UDN udn = new UDN ( UUID . random UUID (  )  )  ;  // DOC: SEARCH upnp Service . get Control Point (  )  . search ( new UDN Header ( udn )  )  ;  // DOC: SEARCH assert Messages ( upnp Service, new UDN Header ( udn )  )  ; }"
1658,"float calculate Score (  Disk Storage .  Entry entry, long now ) { long age Ms = now - entry . get Timestamp (  )  ;  long bytes = entry . get Size (  )  ;  return m Age Weight * age Ms + m Size Weight * bytes ; }"
1659,"public static  String get Inner Text (  Buck String buck String ) {  String text = buck String . get Text (  )  ;  int start ;  int end = text . length (  )  ;  if  ( buck String . get Apostrophed Raw String (  )  != null )  {     //  Advance past r'     start = 2 ;      if  ( text . ends With ( ""'"" )  )  {         end -= 1 ;      } } else if  ( buck String . get Apostrophed String (  )  != null )  {     //  Advance past '     start = 1 ;      if  ( text . ends With ( ""'"" )  )  {         end -= 1 ;      } } else if  ( buck String . get Quoted Raw String (  )  != null )  {     //  Advance past r""     start = 2 ;      if  ( text . ends With ( ""\"""" )  )  {         end -= 1 ;      } } else if  ( buck String . get Quoted String (  )  != null )  {     //  Advance past ""     start = 1 ;      if  ( text . ends With ( ""\"""" )  )  {         end -= 1 ;      } } else if  ( buck String . get Triple Apostrophed Raw String (  )  != null )  {     //  Advance past r'''     start = 4 ;      if  ( text . ends With ( ""'''"" )  )  {         end -= 3 ;      } else if  ( text . ends With ( ""''"" )  )  {         end -= 2 ;      } else if  ( text . ends With ( ""'"" )  )  {         end -= 1 ;      } } else if  ( buck String . get Triple Apostrophed String (  )  != null )  {     //  Advance past '''     start = 3 ;      if  ( text . ends With ( ""'''"" )  )  {         end -= 3 ;      } else if  ( text . ends With ( ""''"" )  )  {         end -= 2 ;      } else if  ( text . ends With ( ""'"" )  )  {         end -= 1 ;      } } else if  ( buck String . get Triple Quoted Raw String (  )  != null )  {     //  Advance past r""""""     start = 4 ;      if  ( text . ends With ( ""\""\""\"""" )  )  {         end -= 3 ;      } else if  ( text . ends With ( ""\""\"""" )  )  {         end -= 2 ;      } else if  ( text . ends With ( ""\"""" )  )  {         end -= 1 ;      } } else if  ( buck String . get Triple Quoted String (  )  != null )  {     //  Advance past """"""     start = 3 ;      if  ( text . ends With ( ""\""\""\"""" )  )  {         end -= 3 ;      } else if  ( text . ends With ( ""\""\"""" )  )  {         end -= 2 ;      } else if  ( text . ends With ( ""\"""" )  )  {         end -= 1 ;      } } else {     throw new  Assertion Error ( "" Not one of the eight recognized string types: "" + text )  ;  } if  ( start >= end )  {     return """" ;  } return text . substring ( start, end )  ; }"
1660,"public static  Matchable Call when POST (  Matcher< Recorded Request> request Matcher ) { return REST Mock Server . when Requested ( all Of ( is POST (  ) , request Matcher )  )  ; }"
1661,public boolean can Append Match (  ) { for  (  Head head : heads )  {     if  ( head !=  Last Head . INSTANCE )  {         return true ;      } } return false ; }
1662,"public com . anychart . charts .  Circular Gauge bar (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bar ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
1663,"public void k MA Period (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . k MA Period (  )  ; "" )  ; }"
1664,"public com . anychart . scales .  Logarithmic comparison Mode (  String mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . comparison Mode ( %s )  ; "", wrap Quotes ( mode )  )  )  ;  return this ; }"
1665,"public com . anychart . standalones .  Data Grid row Even Fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Even Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
1666,public static double [  ]  convert Floats To Doubles ( float [  ]  input ) { if  ( input == null )      return null ;  double [  ]  output = new double [ input . length ]  ;  for  ( int i = 0 ;  i < input . length ;  ++i )  {     output [ i ]  =  ( double )  input [ i ]  ;  } return output ; }
1667,"public void send Pdu ( final byte [  ]  pdu ) { if  ( !m Is Device Ready )      return ;  //  This callback will be called each time the data were sent .  final  Data Sent Callback callback =  (  device,  data )  -> m Callbacks . on Data Sent ( device, get Maximum Packet Size (  ) , data . get Value (  )  )  ;  //  Write the right characteristic .  final  Bluetooth Gatt Characteristic characteristic = is Provisioning Complete ? m Mesh Proxy Data In Characteristic : m Mesh Provisioning Data In Characteristic ;  write Characteristic ( characteristic, pdu )  . split (  )  . with ( callback )  . enqueue (  )  ; }"
1668,"static void remove Resource Data (  String resource Id ) { SQ Lite Database db =  Sonic DB Helper . get Instance (  )  . get Writable Database (  )  ;  db . delete (  Sonic_RESOURCE_TABLE_NAME, RESOURCE_DATA_COLUMN_RESOURCE_ID + ""=?"", new  String [  ]  { resource Id } )  ; }"
1669,"public com . anychart . charts .  Linear Gauge draw (  Boolean async ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . draw ( %s )  ; "", async )  )  ;  return this ; }"
1670,"public synchronized void set Persistence Cache Size Bytes ( long cache Size In Bytes ) { assert Unfrozen (  )  ;  if  ( cache Size In Bytes < 1024 * 1024 )  {     throw new  Database Exception ( "" The minimum cache size must be at least 1 MB"" )  ;  } if  ( cache Size In Bytes > 100 * 1024 * 1024 )  {     throw new  Database Exception ( "" Firebase  Database currently doesn't support a cache size larger than 100 MB"" )  ;  } this . cache Size = cache Size In Bytes ; }"
1671,public int get Padding Right (  ) { return padding Right ; }
1672,public void set Y Labels Padding ( float padding ) { m Y Labels Padding = padding ; }
1673,public void start (  ) {}
1674,private static int get Ellipsized Line Number (  Layout layout ) { for  ( int i = 0 ;  i < layout . get Line Count (  )  ;  ++i )  {     if  ( layout . get Ellipsis Count ( i )  > 0 )  {         return i ;      } } return -1 ; }
1675,public int get Italic Angle (  ) { return this . italic Angle ; }
1676,"public com . anychart . charts .  Tree Map select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
1677,"public  Long get Current Value (  File file, boolean convert To Millis ) {  Log . d ( LOG_TAG, ""*** get Current Value ***"" )  ;   Log . d ( LOG_TAG, ""*** "" + convert To Millis + "" ***"" )  ;   String line = null ;   Long value = null ;   File Input Stream fs = null ;   Data Input Stream ds = null ;  try {     fs = new  File Input Stream ( file )  ;      ds = new  Data Input Stream ( fs )  ;      line = ds . read Line (  )  ;  } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  } finally {     try {         fs . close (  )  ;          ds . close (  )  ;      } catch  (  Exception ex )  {         ex . print Stack Trace (  )  ;      } } if  ( line != null )  {     try {         value =  Long . parse Long ( line )  ;      } catch  (  Number Format Exception nfe )  {         value = null ;      }     if  ( convert To Millis )          value = value / 1000 ;  } return value ; }"
1678,"public  String to String (  String prefix,  String separator,  String suffix ) { return to String0 ( prefix, separator, suffix, false )  ; }"
1679,"public static void refresh Fragment ( android . support . v4 . app .  Fragment fragment ) { refresh Fragment ( fragment, true )  ; }"
1680,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
1681,"public com . anychart . charts .  Mekko background (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1682,"public com . anychart . charts .  Polar select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
1683,public  Instant get Last Modified Instant (  ) { return last Modified Instant ; }
1684,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
1685,"public void set Decimal128 (  String field Name, @ Nullable  Decimal128 value ) { proxy State . get Realm$realm (  )  . check If Valid (  )  ;  long column Key = proxy State . get Row$realm (  )  . get Column Key ( field Name )  ;  if  ( value == null )  {     proxy State . get Row$realm (  )  . set Null ( column Key )  ;  } else {     proxy State . get Row$realm (  )  . set Decimal128 ( column Key, value )  ;  }}"
1686,"public com . anychart . core . axes .  Ticks parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
1687,"public static boolean has Focusable Ancestor ( @ Nullable  Accessibility Node Info Compat node, @ Nullable  View view ) { if  ( node == null || view == null )  {     return false ;  }  View Parent parent View =  View Compat . get Parent For Accessibility ( view )  ;  if  ( ! ( parent View instanceof  View )  )  {     return false ;  }  Accessibility Node Info Compat parent Node =  Accessibility Node Info Compat . obtain (  )  ;  try {      View Compat . on Initialize Accessibility Node Info (  (  View )  parent View, parent Node )  ;      if  ( parent Node == null )  {         return false ;      }     if  ( is Accessibility Focusable ( parent Node,  (  View )  parent View )  )  {         return true ;      }     if  ( has Focusable Ancestor ( parent Node,  (  View )  parent View )  )  {         return true ;      } } finally {     parent Node . recycle (  )  ;  } return false ; }"
1688,"public static  Typeface caviar Dreams Italic (  Context context ) { return  Font Source Processor . process ( R . raw . caviardreams_italic, context )  ; }"
1689,"public void add ( T notification ) { notification Array . remove ( notification . get Id (  )  )  ;  notification Array . put ( notification . get Id (  ) , notification )  ; }"
1690,public  Cache Stats get Stats (  ) {  Cache Stats .  Builder stats Builder =  Cache Stats . builder (  )  . set Hit Count ( stats Tracker . get Total Hit Count (  )  )  . set Miss Count ( stats Tracker . get Total Miss Count (  )  )  . set Eviction Count ( stats Tracker . get Total Eviction Count (  )  )  . set Retrieval Time ( stats Tracker . get Average Retrieval Time (  )  )  . set Total Miss Time ( stats Tracker . get Average Miss Time (  )  )  . set Total Load Time ( stats Tracker . get Average Load Time (  )  )  ;  return stats Builder . build (  )  ; }
1691,"public void min Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Height (  )  ; "" )  ; }"
1692,"public static  Cxx Link create Cxx Linkable Build Rule (  Cxx Buck Config cxx Buck Config,  Cxx Platform cxx Platform,  Project Filesystem project Filesystem,  Action Graph Builder graph Builder,  Build Target target,  Linker .  Link Type link Type,  Optional< String> soname,  Path output,  Immutable List< String> extra Output Names,  Linker .  Linkable Dep Type dep Type,  Optional< Linkable List Filter> linkable List Filter,  Cxx Link Options link Options,  Iterable<? extends  Native Linkable> native Linkable Deps,  Optional< Linker .  Cxx Runtime Type> cxx Runtime Type,  Optional< Source Path> bundle Loader,  Immutable Set< Build Target> blacklist,  Immutable Set< Build Target> link Whole Deps,  Native Linkable Input immediate Linkable Input,  Optional< Link Output Postprocessor> postprocessor,  Cell Path Resolver cell Path Resolver ) {  Immutable List< Arg> all Args = create Dep Shared Lib Framework Args For Link ( cxx Platform, graph Builder, target, link Type, soname, dep Type, linkable List Filter, native Linkable Deps, bundle Loader, blacklist, link Whole Deps, immediate Linkable Input )  ;   Linker .  Linkable Dep Type runtime Dep Type = dep Type ;  if  ( cxx Runtime Type . or Else (  Linker .  Cxx Runtime Type . DYNAMIC )  ==  Linker .  Cxx Runtime Type . STATIC )  {     runtime Dep Type =  Linker .  Linkable Dep Type . STATIC ;  } return create Cxx Linkable Build Rule ( cell Path Resolver, cxx Buck Config, cxx Platform, project Filesystem, graph Builder, target, output, derive Supplementary Output Paths From Main Output Path ( output, extra Output Names ) , all Args, runtime Dep Type, link Options, postprocessor )  ; }"
1693,public  App get App (  ) { return user . get App (  )  ; }
1694,"public static void start Activity (  Context context,  Intent intent ) {  Theme Manager . start Activity ( context, intent, -1 )  ; }"
1695,"public void use Html (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . use Html (  )  ; "" )  ; }"
1696,"public  Model Factory Base Model View Model_ on Visibility Changed (  On Model Visibility Changed Listener< Model Factory Base Model View Model_,  Model Factory Base Model View> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
1697,"public static void free All (  Array objects, boolean same Pool ) { if  ( objects == null )      throw new  Illegal Argument Exception ( ""objects cannot be null . "" )  ;   Pool pool = null ;  for  ( int i = 0, n = objects . size ;  i < n ;  i++ )  {      Object object = objects . get ( i )  ;      if  ( object == null )          continue ;      if  ( pool == null )  {         pool = type Pools . get ( object . get Class (  )  )  ;          //  Ignore freeing an object that was never retained .          if  ( pool == null )              continue ;      }     pool . free ( object )  ;      if  ( !same Pool )          pool = null ;  }}"
1698,"protected static void add Prefixes To (  String name,  Collection< String> out ) { int p1 = name . index Of ( '/' )  ;  while  ( p1 > 0 )  {     out . add ( name . substring ( 0, p1 )  )  ;      p1 = name . index Of ( '/', p1 + 1 )  ;  }}"
1699,"public com . anychart . core . resource . resourcelist .  Tags Settings background (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1700,"public  Builder set Network Cache Dir ( @ Non Null final  File file ) { if  ( cache Provider != null )  {     throw new  Illegal State Exception ( "" There is already a cache provider!"" )  ;  } cache Provider = new  Lottie Network Cache Provider (  )  {     @ Override     @ Non Null     public  File get Cache Dir (  )  {         if  ( !file . is Directory (  )  )  {             throw new  Illegal Argument Exception ( ""cache file must be a directory"" )  ;          }         return file ;      } } ;  return this ; }"
1701,"public com . anychart . core .  State Settings selected (  ) { return new com . anychart . core .  State Settings ( js Base + "" . selected (  ) "" )  ; }"
1702,"public void update (  Observable observable,  Object data ) { if  ( observable instanceof  Geo Json Feature )  {      Geo Json Feature feature =  (  (  Geo Json Feature )  observable )  ;      boolean feature Is On Map = get All Features (  )  . get ( feature )  != FEATURE_NOT_ON_MAP ;      if  ( feature Is On Map && feature . has Geometry (  )  )  {         //  Checks if the feature has been added to the map and its geometry is not null         // TODO: change this so that we don't add and remove         redraw Feature To Map ( feature )  ;      } else if  ( feature Is On Map && !feature . has Geometry (  )  )  {         //  Checks if feature is on map and geometry is null         remove From Map ( get All Features (  )  . get ( feature )  )  ;          put Features ( feature, FEATURE_NOT_ON_MAP )  ;      } else if  ( !feature Is On Map && feature . has Geometry (  )  )  {         //  Checks if the feature isn't on the map and geometry is not null         add Feature ( feature )  ;      } }}"
1703,"public com . anychart . charts .  Tree Map right (  String right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", wrap Quotes ( right )  )  )  ;  return this ; }"
1704,"public void valid Info On Completed ( @ Non Null  Download Task task, @ Non Null  Download Store store ) {  Breakpoint Info info = store . get After Completed ( task . get Id (  )  )  ;  if  ( info == null )  {     info = new  Breakpoint Info ( task . get Id (  ) , task . get Url (  ) , task . get Parent File (  ) , task . get Filename (  )  )  ;      final long size ;      if  (  Util . is Uri Content Scheme ( task . get Uri (  )  )  )  {         size =  Util . get Size From Content Uri ( task . get Uri (  )  )  ;      } else {         final  File file = task . get File (  )  ;          if  ( file == null )  {             size = 0 ;               Util . w ( TAG, ""file is not ready on valid info for task on complete state "" + task )  ;          } else {             size = file . length (  )  ;          }     }     info . add Block ( new  Block Info ( 0, size, size )  )  ;  }  Download Task .  Task Hide Wrapper . set Breakpoint Info ( task, info )  ; }"
1705,private void ensure Initialized (  ) { if  ( !m Initialized )  {     lock . lock (  )  ;      try {         if  ( !m Initialized )  {             m Internal Path =  Environment . get Data Directory (  )  ;              //  Whitelisted use of external storage  Android changes in  Target SDK 29 and above as it             // only used for getting the available space             m External Path =  Environment . get External Storage Directory (  )  ;              update Stats (  )  ;              m Initialized = true ;          }     } finally {         lock . unlock (  )  ;      } }}
1706,public void clear Mocks (  ) {}
1707,public void set From ( A Multi Texture other ) { super . set From ( other )  ;  set Bitmaps ( m Bitmaps )  ;  set Resource Ids ( m Resource Ids )  ;  set Byte Buffers ( m Byte Buffers )  ; }
1708,"public com . anychart . core . utils .  Interactivity interactivity (  ) { return new com . anychart . core . utils .  Interactivity ( js Base + "" . interactivity (  ) "" )  ; }"
1709,public  Criteria set Alias (  String alias ) { this . alias = alias . trim (  )  ;  return this ; }
1710,public boolean is Complete (  ) { for  ( int i = 0 ;  i < data . length ;  i++ )  if  ( data [ i ]  == null )      return false ;  return true ; }
1711,"public static boolean is Cross Compilation Root Validation Disabled (  Immutable Set< Type Element> root Elements,  Processing Environment env ) {  Boolean Option option =  Boolean Option . DISABLE_CROSS_COMPILATION_ROOT_VALIDATION ;  return option . get ( env )  ; }"
1712,"private static  Lat Lng Alt convert To Lat Lng Alt (  String coordinate String,  String separator ) {  String [  ]  coordinate = coordinate String . split ( separator )  ;  double lat =  Double . parse Double ( coordinate [ LATITUDE_INDEX ]  )  ;  double lon =  Double . parse Double ( coordinate [ LONGITUDE_INDEX ]  )  ;   Double alt =  ( coordinate . length > 2 )  ?  Double . parse Double ( coordinate [ ALTITUDE_INDEX ]  )  : null ;   Lat Lng lat Lng = new  Lat Lng ( lat, lon )  ;  return new  Lat Lng Alt ( lat Lng, alt )  ; }"
1713,"public com . anychart . core . cartesian . series .  Area3d parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
1714,"protected static int code Point At (  Char Sequence seq, int index, int end ) { check Not Null ( seq )  ;  if  ( index < end )  {     char c1 = seq . char At ( index++ )  ;      if  ( c1 <  Character . MIN_HIGH_SURROGATE || c1 >  Character . MAX_LOW_SURROGATE )  {         //  Fast path  ( first test is probably all we need to do )          return c1 ;      } else if  ( c1 <=  Character . MAX_HIGH_SURROGATE )  {         //  If the high surrogate was the last character, return its inverse         if  ( index == end )  {             return -c1 ;          }         //  Otherwise look for the low surrogate following it         char c2 = seq . char At ( index )  ;          if  (  Character . is Low Surrogate ( c2 )  )  {             return  Character . to Code Point ( c1, c2 )  ;          }         throw new  Illegal Argument Exception ( "" Expected low surrogate but got char '"" + c2 + ""' with value "" +  ( int )  c2 + "" at index "" + index + "" in '"" + seq + ""'"" )  ;      } else {         throw new  Illegal Argument Exception ( "" Unexpected low surrogate character '"" + c1 + ""' with value "" +  ( int )  c1 + "" at index "" +  ( index - 1 )  + "" in '"" + seq + ""'"" )  ;      } } throw new  Index Out Of Bounds Exception ( "" Index exceeds specified range"" )  ; }"
1715,"public static  List< String> ge File To List From Raw (  Context context, int res Id ) { if  ( context == null )  {     return null ;  }  List< String> file Content = new  Array List< String> (  )  ;   Buffered Reader reader = null ;  try {      Input Stream Reader in = new  Input Stream Reader ( context . get Resources (  )  . open Raw Resource ( res Id )  )  ;      reader = new  Buffered Reader ( in )  ;       String line = null ;      while  (  ( line = reader . read Line (  )  )  != null )  {         file Content . add ( line )  ;      }     reader . close (  )  ;      return file Content ;  } catch  ( IO Exception e )  {     e . print Stack Trace (  )  ;      return null ;  }}"
1716,"private long sub Append ( I Logging Event event, SQ Lite Statement insert Statement )  throws SQL Exception{ bind Logging Event ( insert Statement, event )  ;  bind Logging Event Arguments ( insert Statement, event . get Argument Array (  )  )  ;  //  This is expensive .  .  .  should we do it every time? bind Caller Data ( insert Statement, event . get Caller Data (  )  )  ;  long insert Id = -1 ;  try {     insert Id = insert Statement . execute Insert (  )  ;  } catch  ( SQ Lite Exception e )  {     add Warn ( "" Failed to insert logging Event"", e )  ;  } return insert Id ; }"
1717,public boolean is Resize Checking Enabled (  ) { return resize Checking Enabled ; }
1718,"public com . anychart . core . ui .  Callout container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
1719,public int get Sorted Column Index (  ) { return sorted Column Index ; }
1720,public void enable (  ) { have Sync = false ;  if  ( window Manager != null )  {     vsync Sampler . add Observer (  )  ;      if  ( display Listener != null )  {         display Listener . register (  )  ;      }     update Default Display Refresh Rate Params (  )  ;  }}
1721,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
1722,"private  Binary Resource end Insert ( final  Disk Storage .  Inserter inserter, final  Cache Key key,  String resource Id )  throws IO Exception{ synchronized  ( m Lock )  {      Binary Resource resource = inserter . commit ( key )  ;      m Resource Index . add ( resource Id )  ;      m Cache Stats . increment ( resource . size (  ) , 1 )  ;      return resource ;  }}"
1723,protected boolean is Field Separator At Start (  ) { return field Separator At Start ; }
1724,"public com . anychart . core . resource . resourcelist .  Tags Settings margin (  String value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
1725,public void set Facility (  String facility Str ) { if  ( facility Str != null )  {     facility Str = facility Str . trim (  )  ;  } this . facility Str = facility Str ; }
1726,"public com . anychart . core . cartesian . series .  Width Based bounds ( com . anychart . utils .  Rect Obj bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
1727,"public static  Multiset<E> intersection ( final  Multiset<E> multiset1, final  Multiset<?> multiset2 ) { check Not Null ( multiset1 )  ;  check Not Null ( multiset2 )  ;  return new  View Multiset<E> (  )  {     @ Override     public int count (  Object element )  {         int count1 = multiset1 . count ( element )  ;          return  ( count1 == 0 )  ? 0 :  Math . min ( count1, multiset2 . count ( element )  )  ;      }     @ Override      Set<E> create Element Set (  )  {         return  Sets . intersection ( multiset1 . element Set (  ) , multiset2 . element Set (  )  )  ;      }     @ Override      Iterator<E> element Iterator (  )  {         throw new  Assertion Error ( ""should never be called"" )  ;      }     @ Override      Iterator< Entry<E>> entry Iterator (  )  {         final  Iterator< Entry<E>> iterator1 = multiset1 . entry Set (  )  . iterator (  )  ;          // TODO ( lowasser ) : consider making the entries live views         return new  Abstract Iterator< Entry<E>> (  )  {             @ Override             protected  Entry<E> compute Next (  )  {                 while  ( iterator1 . has Next (  )  )  {                      Entry<E> entry1 = iterator1 . next (  )  ;                      E element = entry1 . get Element (  )  ;                      int count =  Math . min ( entry1 . get Count (  ) , multiset2 . count ( element )  )  ;                      if  ( count > 0 )  {                         return immutable Entry ( element, count )  ;                      }                 }                 return end Of Data (  )  ;              }         } ;      } } ; }"
1728,"public void start Foreground ( final int id, final  Notification notification ) { if  (  File Downloader . get Impl (  )  . is Service Connected (  )  )  {      File Downloader . get Impl (  )  . start Foreground ( id, notification )  ;      return ;  } final  Connect Subscriber subscriber = new  Connect Subscriber (  )  {     @ Override     public void connected (  )  {          File Downloader . get Impl (  )  . start Foreground ( id, notification )  ;      }     @ Override     public  Object get Value (  )  {         return null ;      } } ;  wait ( subscriber )  ; }"
1729,"public static  Cst Call Site make (  Cst Method Handle bootstrap Handle,  Cst Nat nat,  Bootstrap Method Arguments List optional Arguments ) { if  ( bootstrap Handle == null )  {     throw new  Null Pointer Exception ( ""bootstrap Method Handle == null"" )  ;  } else if  ( nat == null )  {     throw new  Null Pointer Exception ( ""nat == null"" )  ;  }  List list = new  List ( 3 + optional Arguments . size (  )  )  ;  list . set ( 0, bootstrap Handle )  ;  list . set ( 1, nat . get Name (  )  )  ;  list . set ( 2, new  Cst Proto Ref (  Prototype . from Descriptor ( nat . get Descriptor (  )  . get String (  )  )  )  )  ;  if  ( optional Arguments != null )  {     for  ( int i = 0 ;  i < optional Arguments . size (  )  ;  ++i )  {         list . set ( i + 3, optional Arguments . get ( i )  )  ;      } } list . set Immutable (  )  ;  return new  Cst Call Site ( list )  ; }"
1730,"public com . anychart . charts .  Tree Map select Marquee Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1731,public  String get Attributes File (  ) { return attributesfile ; }
1732,public  Class<?> get Type (  ) { return bean Info . bean Type ; }
1733,"private static void maybe Terminate Input Stream (  Http URL Connection connection, long bytes Remaining ) { if  (  Util . SDK_INT != 19 &&  Util . SDK_INT != 20 )  {     return ;  } try {      Input Stream input Stream = connection . get Input Stream (  )  ;      if  ( bytes Remaining == C . LENGTH_UNSET )  {         //  If the input stream has already ended, do nothing .   The socket may be re-used .          if  ( input Stream . read (  )  == -1 )  {             return ;          }     } else if  ( bytes Remaining <= MAX_BYTES_TO_DRAIN )  {         // re-used .          return ;      }      String class Name = input Stream . get Class (  )  . get Name (  )  ;      if  ( ""com . android . okhttp . internal . http .  Http Transport$ Chunked Input Stream"" . equals ( class Name )  || ""com . android . okhttp . internal . http .  Http Transport$ Fixed Length Input Stream"" . equals ( class Name )  )  {          Class<?> superclass = input Stream . get Class (  )  . get Superclass (  )  ;           Method unexpected End Of Input = superclass . get Declared Method ( ""unexpected End Of Input"" )  ;          unexpected End Of Input . set Accessible ( true )  ;          unexpected End Of Input . invoke ( input Stream )  ;      } } catch  (  Exception e )  { //  If an IO Exception then the connection didn't ever have an input stream, or it was closed // already .   If another type of exception then something went wrong, most likely the device // isn't using okhttp .  }}"
1734,"public com . anychart . standalones .  Resource Timeline row Selected Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode )  )  ;  return this ; }"
1735,public static boolean is Webp Format (  Image Format image Format ) { return is Static Webp Format ( image Format )  || image Format == WEBP_ANIMATED ; }
1736,"protected final void set Result (  Type Bearer result ) { if  ( result == null )  {     throw new  Null Pointer Exception ( ""result == null"" )  ;  } results [ 0 ]  = result ;  result Count = 1 ; }"
1737,"protected void init (  Context context,  Countly Store store ) {  Type overridden Type = retrieve Overridden Type ( store )  ;  L . d ( "" [  Device Id ]  init, current type: [ "" + type + "" ]  overiden Type: [ "" + overridden Type + "" ] "" )  ;  // some other strategy .   We still have to use that strategy .  if  ( overridden Type != null && overridden Type != type )  {     L . i ( "" [  Device Id ]   Overridden device ID generation strategy detected: "" + overridden Type + "", using it instead of "" + this . type )  ;      type = overridden Type ;  } switch ( type )  {     case DEVELOPER_SUPPLIED:         // no initialization for developer id         // we just store the provided value so that it's         set And Store Id ( store,  Type . DEVELOPER_SUPPLIED, id )  ;          break ;      case OPEN_UDID:         L . i ( "" [  Device Id ]   Using  Open UDID"" )  ;           Open UDID Adapter . sync ( context )  ;          set And Store Id ( store,  Type . OPEN_UDID,  Open UDID Adapter .  Open UDID )  ;          break ;      case ADVERTISING_ID:         if  (  Advertising Id Adapter . is Advertising Id Available (  )  )  {             L . i ( "" [  Device Id ]   Using  Advertising ID"" )  ;               Advertising Id Adapter . set Advertising Id ( context, store, this )  ;          } else {             //  Fall back to  Open UDID on devices without google play services set up             L . i ( "" [  Device Id ]   Advertising ID is not available, falling back to  Open UDID"" )  ;               Open UDID Adapter . sync ( context )  ;              set And Store Id ( store,  Type . OPEN_UDID,  Open UDID Adapter .  Open UDID )  ;          }         break ;  }}"
1738,"public com . anychart . core . stock . scrollerseries .  Candlestick color Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
1739,"public void add Binding (  Value Node from Node,  Value Node to Node ) { m Graph Binding . add Binding ( from Node, to Node )  ; }"
1740,"public com . anychart . core . gauge .  Cap fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
1741,"public com . anychart . core . stock . scrollerseries .  Hilo color Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
1742,"private static  Object match Or Replace (  Context cx,  Scriptable scope,  Scriptable this Obj,  Object [  ]  args,  Reg Exp Impl re Impl,  Glob Data data, boolean force Flat ) {  Native Reg Exp re ;   String str =  Script Runtime . to String ( this Obj )  ;  data . str = str ;   Scriptable top Scope =  Scriptable Object . get Top Level Scope ( scope )  ;  if  ( args . length == 0 )  {      Object compiled =  Native Reg Exp . compile RE ( cx, """", """", false )  ;      re = new  Native Reg Exp ( top Scope, compiled )  ;  } else if  ( args [ 0 ]  instanceof  Native Reg Exp )  {     re =  (  Native Reg Exp )  args [ 0 ]  ;  } else {      String src =  Script Runtime . to String ( args [ 0 ]  )  ;       String opt ;      if  ( data . optarg < args . length )  {         args [ 0 ]  = src ;          opt =  Script Runtime . to String ( args [ data . optarg ]  )  ;      } else {         opt = null ;      }      Object compiled =  Native Reg Exp . compile RE ( cx, src, opt, force Flat )  ;      re = new  Native Reg Exp ( top Scope, compiled )  ;  } data . regexp = re ;  data . global =  ( re . get Flags (  )  &  Native Reg Exp . JSREG_GLOB )  != 0 ;  int [  ]  indexp = { 0 } ;   Object result = null ;  if  ( data . mode == RA_SEARCH )  {     result = re . execute Reg Exp ( cx, scope, re Impl, str, indexp,  Native Reg Exp . TEST )  ;      if  ( result != null && result . equals (  Boolean . TRUE )  )          result = new  Integer ( re Impl . left Context . length )  ;      else         result = new  Integer ( -1 )  ;  } else if  ( data . global )  {     re . last Index = 0 ;      for  ( int count = 0 ;  indexp [ 0 ]  <= str . length (  )  ;  count++ )  {         result = re . execute Reg Exp ( cx, scope, re Impl, str, indexp,  Native Reg Exp . TEST )  ;          if  ( result == null || !result . equals (  Boolean . TRUE )  )              break ;          if  ( data . mode == RA_MATCH )  {             match_glob ( data, cx, scope, count, re Impl )  ;          } else {             if  ( data . mode != RA_REPLACE )                   Kit . code Bug (  )  ;               Sub String last Match = re Impl . last Match ;              int left Index = data . left Index ;              int leftlen = last Match . index - left Index ;              data . left Index = last Match . index + last Match . length ;              replace_glob ( data, cx, scope, re Impl, left Index, leftlen )  ;          }         if  ( re Impl . last Match . length == 0 )  {             if  ( indexp [ 0 ]  == str . length (  )  )                  break ;              indexp [ 0 ] ++ ;          }     } } else {     result = re . execute Reg Exp ( cx, scope, re Impl, str, indexp,  (  ( data . mode == RA_REPLACE )  ?  Native Reg Exp . TEST :  Native Reg Exp . MATCH )  )  ;  } return result ; }"
1743,"public void set Image URI (  Uri uri ) { set Image URI ( uri, null )  ; }"
1744,public  Mouse Control get Mouse Control (  ) { return this ; }
1745,public void set Data Enabled ( boolean enabled ) { data Enabled = enabled ; }
1746,public T10 get Value10 (  ) { return value10 ; }
1747,"protected void update Permission Flags (  String permission Name,  String package Name, @ Package Manager .  Permission Flags int flag Mask, @ Package Manager .  Permission Flags int flag Values,  User Handle user ) { if  ( !permission Flags . contains Key ( package Name )  )  {     permission Flags . put ( package Name, new  Hash Map< String,  Integer> (  )  )  ;  } int existing Flags = permission Flags . get ( package Name )  . get Or Default ( permission Name, /* default Value= */ 0 )  ;  int flags To Keep = ~flag Mask & existing Flags ;  int flags To Change = flag Mask & flag Values ;  int new Flags = flags To Keep | flags To Change ;  permission Flags . get ( package Name )  . put ( permission Name, new Flags )  ; }"
1748,"private  Sortable Type [  ]  get Sorted Types (  ) { // size is pessimistic ;  doesn't include arrays  Sortable Type [  ]  sortable Types = new  Sortable Type [ contents Out . type Ids . size ]  ;  for  ( int i = 0 ;  i < dexes . length ;  i++ )  {     read Sortable Types ( sortable Types, dexes [ i ] , index Maps [ i ]  )  ;  } /*      *  Populate the depths of each sortable type .   This makes D iterations      * through all N types, where 'D' is the depth of the deepest type .   For      * example, the deepest class in libcore is  Xalan's  Key Iterator, which      * is 11 types deep .       */ while  ( true )  {     boolean all Done = true ;      for  (  Sortable Type sortable Type : sortable Types )  {         if  ( sortable Type != null && !sortable Type . is Depth Assigned (  )  )  {             all Done &= sortable Type . try Assign Depth ( sortable Types )  ;          }     }     if  ( all Done )  {         break ;      } } //  Now that all types have depth information, the result can be sorted  Arrays . sort ( sortable Types,  Sortable Type . NULLS_LAST_ORDER )  ;  //  Strip nulls from the end int first Null =  Arrays . as List ( sortable Types )  . index Of ( null )  ;  return first Null != -1 ?  Arrays . copy Of Range ( sortable Types, 0, first Null )  : sortable Types ; }"
1749,"public com . anychart . core . stock . scrollerseries .  Range Spline Area low Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
1750,public static void set Instance (  Ssh Session Factory new Factory ) { if  ( new Factory != null )  {     INSTANCE = new Factory ;  } else {     INSTANCE = load Ssh Session Factory (  )  ;  }}
1751,public  Builder set Wide Color Gamut ( com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Wide Color Gamut value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } wide Color Gamut_ = value . get Number (  )  ;  on Changed (  )  ;  return this ; }
1752,"public com . anychart . core . stock . scrollerseries .  Jump Line bottom (  String bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", wrap Quotes ( bottom )  )  )  ;  return this ; }"
1753,"public void bottom (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . bottom (  )  ; "" )  ; }"
1754,"public static void before Mount ( final  Mount Delegate Target mount Delegate Target, final  Host host, @ Nullable final  Map< Render Core Extension<?, ?>,  Object> results ) { if  ( results != null )  {     final  Rect rect = new  Rect (  )  ;      host . get Local Visible Rect ( rect )  ;      for  (  Map .  Entry< Render Core Extension<?, ?>,  Object> entry : results . entry Set (  )  )  {         final  Object state = entry . get Value (  )  ;          final  Mount Extension extension = entry . get Key (  )  . get Mount Extension (  )  ;          if  ( extension != null )  {             extension . before Mount ( mount Delegate Target . get Extension State ( extension ) , state, rect )  ;          }     } }}"
1755,public double get Longitude (  ) { return longitude ; }
1756,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
1757,"public void set Menu ( int res ) { set Menu (  Layout Inflater . from ( get Context (  )  )  . inflate ( res, null )  )  ; }"
1758,"public static byte [  ]  adjust Response Data ( byte [  ]  response ) { if  (  Util . SDK_INT >= 27 )  {     return response ;  } // looks at the k, kid and kty parameters in each key, so can ignore the rest of the response .  try {     JSON Object response Json = new JSON Object (  Util . from Utf8 Bytes ( response )  )  ;       String Builder adjusted Response Builder = new  String Builder ( ""{\""keys\"": [ "" )  ;      JSON Array keys Array = response Json . get JSON Array ( ""keys"" )  ;      for  ( int i = 0 ;  i < keys Array . length (  )  ;  i++ )  {         if  ( i != 0 )  {             adjusted Response Builder . append ( "","" )  ;          }         JSON Object key = keys Array . get JSON Object ( i )  ;          adjusted Response Builder . append ( ""{\""k\"":\"""" )  ;          adjusted Response Builder . append ( base64 Url To Base64 ( key . get String ( ""k"" )  )  )  ;          adjusted Response Builder . append ( ""\"",\""kid\"":\"""" )  ;          adjusted Response Builder . append ( base64 Url To Base64 ( key . get String ( ""kid"" )  )  )  ;          adjusted Response Builder . append ( ""\"",\""kty\"":\"""" )  ;          adjusted Response Builder . append ( key . get String ( ""kty"" )  )  ;          adjusted Response Builder . append ( ""\""}"" )  ;      }     adjusted Response Builder . append ( "" ] }"" )  ;      return  Util . get Utf8 Bytes ( adjusted Response Builder . to String (  )  )  ;  } catch  ( JSON Exception e )  {      Log . e ( TAG, "" Failed to adjust response data: "" +  Util . from Utf8 Bytes ( response ) , e )  ;      return response ;  }}"
1759,"public void height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . height (  )  ; "" )  ; }"
1760,"public int get Scaled Height ( int desired Width, int desired Height )  throws  Exception{ if  ( jpeg Width < 1 || jpeg Height < 1 )      throw new  Exception ( NO_ASSOC_ERROR )  ;  if  ( desired Width < 0 || desired Height < 0 )      throw new  Exception ( "" Invalid argument in get Scaled Height (  ) "" )  ;  TJ Scaling Factor [  ]  sf = TJ . get Scaling Factors (  )  ;  if  ( desired Width == 0 )      desired Width = jpeg Width ;  if  ( desired Height == 0 )      desired Height = jpeg Height ;  int scaled Width = jpeg Width, scaled Height = jpeg Height ;  for  ( int i = 0 ;  i < sf . length ;  i++ )  {     scaled Width = sf [ i ]  . get Scaled ( jpeg Width )  ;      scaled Height = sf [ i ]  . get Scaled ( jpeg Height )  ;      if  ( scaled Width <= desired Width && scaled Height <= desired Height )          break ;  } if  ( scaled Width > desired Width || scaled Height > desired Height )      throw new  Exception ( "" Could not scale down to desired image dimensions"" )  ;  return scaled Height ; }"
1761,public boolean is Check (  ) { return this == CHECK || this == CHECKBIN || this . is Save Analysis (  )  ; }
1762,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
1763,"public void update UI (  ) { super . update UI (  )  ;  //  Make the tree's cell renderer use the table's cell selection // colors .    Tree Cell Renderer tcr = get Cell Renderer (  )  ;  if  ( tcr instanceof  Default Tree Cell Renderer )  {      Default Tree Cell Renderer dtcr =  (  (  Default Tree Cell Renderer )  tcr )  ;      //  For 1 . 1 uncomment this, 1 . 2 has a bug that will cause an     // exception to be thrown if the border selection color is     // null .      // dtcr . set Border Selection Color ( null )  ;      dtcr . set Text Selection Color ( UI Manager . get Color ( "" Table . selection Foreground"" )  )  ;      dtcr . set Background Selection Color ( UI Manager . get Color ( "" Table . selection Background"" )  )  ;  }}"
1764,private void set Next Message ( int message ) { clear Messages (  )  ;  animation Handler . send Empty Message ( message )  ; }
1765,"public void max Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Width (  )  ; "" )  ; }"
1766,public boolean were Records Found (  ) { return records Found ; }
1767,"public static  Assertion Array Exception merge Exception (  Assertion Array Exception first,  Assertion Array Exception second ) { if  ( first == null )      return second ;  if  ( second == null )      return first ;   String detail Msg = first . get Message (  )  + "" ; "" + second . get Message (  )  ;   Assertion Array Exception ret = new  Assertion Array Exception ( detail Msg )  ;  ret . add Exception ( first . get Exceptions (  )  )  ;  ret . add Exception ( second . get Exceptions (  )  )  ;  return ret ; }"
1768,"private void finish Spinner ( float overscroll Top ) { if  ( overscroll Top > m Total Drag Distance )  {     //下拉距离达到了可触发刷新的高度     //关键方法     set Refreshing ( true, true )  ;  } else {     //下拉距离还未达到了可触发刷新的高度，做一些复位的操作     // cancel refresh     m Refreshing = false ;      m Progress . set Start End Trim ( 0f, 0f )  ;      //值得关注的是这个回滚动画      Animation Listener listener = null ;      if  ( !m Scale )  {         listener = new  Animation Listener (  )  {             @ Override             public void on Animation Start (  Animation animation )  {             }             @ Override             public void on Animation End (  Animation animation )  {                 if  ( !m Scale )  {                     start Scale Down Animation ( null )  ;                  }             }             @ Override             public void on Animation Repeat (  Animation animation )  {             }         } ;      }     //开始回滚动画     //这是一个比较复杂的方法，也是比较有用的方法     //其实这个本质上不是开启一个动画，而是一个数值产生器     //通过监听数值变化，     //从m Current Target Offset Top这个高度开始，     //调用set Target Offset Top And Bottom (  ) 慢慢回滚到m Original Offset Top     animate Offset To Start Position ( m Current Target Offset Top, listener )  ;      m Progress . show Arrow ( false )  ;  }}"
1769,"public static  String get Property Name ( final  Device Property device Property ) { switch ( device Property )  {     case AVERAGE_AMBIENT_TEMPERATURE_IN_A_PERIOD_OF_DAY:         return "" Average  Ambient  Temperature  In A  Period  Of  Day"" ;      case AVERAGE_INPUT_CURRENT:         return "" Average  Input  Current"" ;      case AVERAGE_INPUT_VOLTAGE:         return "" Average  Input  Voltage"" ;      case AVERAGE_OUTPUT_CURRENT:         return "" Average  Output  Current"" ;      case AVERAGE_OUTPUT_VOLTAGE:         return "" Average  Output  Voltage"" ;      case CENTER_BEAM_INTENSITY_AT_FULL_POWER:         return "" Center  Beam  Intensity  At  Full  Power"" ;      case CHROMATICITY_TOLERANCE:         return "" Chromaticity  Tolerance"" ;      case COLOR_RENDERING_INDEX_R9:         return "" Color  Rendering  Index R9"" ;      case COLOR_RENDERING_INDEX_RA:         return "" Color  Rendering  Index  Ra"" ;      case DEVICE_APPEARANCE:         return "" Device  Appearance"" ;      case DEVICE_COUNTRY_OF_ORIGIN:         return "" Device  Country  Of  Origin"" ;      case DEVICE_DATE_OF_MANUFACTURE:         return "" Device  Date  Of  Manufacture"" ;      case DEVICE_ENERGY_USE_SINCE_TURN_ON:         return "" Device  Energy  Use  Since  Turn  On"" ;      case DEVICE_FIRMWARE_REVISION:         return "" Device  Firmware  Revision"" ;      case DEVICE_GLOBAL_TRADE_ITEM_NUMBER:         return "" Device  Global  Trade  Item  Number"" ;      case DEVICE_HARDWARE_REVISION:         return "" Device  Hardware  Revision"" ;      case DEVICE_MANUFACTURER_NAME:         return "" Device  Manufacturer  Name"" ;      case DEVICE_MODEL_NUMBER:         return "" Device  Model  Number"" ;      case DEVICE_OPERATING_TEMPERATURE_RANGE_SPECIFICATION:         return "" Device  Operating  Temperature  Range  Specification"" ;      case DEVICE_OPERATING_TEMPERATURE_STATISTICAL_VALUES:         return "" Device  Operating  Temperature  Statistical  Values"" ;      case DEVICE_OVER_TEMPERATURE_EVENT_STATISTICS:         return "" Device  Over  Temperature  Event  Statistics"" ;      case DEVICE_POWER_RANGE_SPECIFICATION:         return "" Device  Power  Range  Specification"" ;      case DEVICE_RUN_TIME_SINCE_TURN_ON:         return "" Device  Runtime  Since  Turn  On"" ;      case DEVICE_RUNTIME_WARRANTY:         return "" Device  Runtime  Warranty"" ;      case DEVICE_SERIAL_NUMBER:         return "" Device  Serial  Number"" ;      case DEVICE_SOFTWARE_REVISION:         return "" Device  Software  Revision"" ;      case DEVICE_UNDER_TEMPERATURE_EVENT_STATISTICS:         return "" Device  Under  Temperature  Event  Statistics"" ;      case INDOOR_AMBIENT_TEMPERATURE_STATISTICAL_VALUES:         return "" Indoor  Ambient  Temperature  Statistical  Values"" ;      case INITIAL_CIE1931_CHROMATICITY_COORDINATES:         return "" Initial CIE 1931  Chromaticity  Coordinates"" ;      case INITIAL_CORRELATED_COLOR_TEMPERATURE:         return "" Initial  Correlated  Color  Temperature"" ;      case INITIAL_LUMINOUS_FLUX:         return "" Initial  Luminous  Flux"" ;      case INITIAL_PLANCKIAN_DISTANCE:         return "" Initial  Planckian  Distance"" ;      case INPUT_CURRENT_RANGE_SPECIFICATION:         return "" Input  Current  Range  Specification"" ;      case INPUT_CURRENT_STATISTICS:         return "" Input  Current  Statistics"" ;      case INPUT_OVER_CURRENT_EVENT_STATISTICS:         return "" Input  Over  Current  Event  Statistics"" ;      case INPUT_OVER_RIPPLE_VOLTAGE_EVENT_STATISTICS:         return "" Input  Over  Ripple  Voltage  Event  Statistics"" ;      case INPUT_OVER_VOLTAGE_EVENT_STATISTICS:         return "" Input  Over  Voltage  Event  Statistics"" ;      case INPUT_UNDERCURRENT_EVENT_STATISTICS:         return "" Input  Under  Current  Event  Statistics"" ;      case INPUT_UNDER_VOLTAGE_EVENT_STATISTICS:         return "" Input  Under  Voltage  Event  Statistics"" ;      case INPUT_VOLTAGE_RANGE_SPECIFICATION:         return "" Input  Voltage  Range  Specification"" ;      case INPUT_VOLTAGE_RIPPLE_SPECIFICATION:         return "" Input  Voltage  Ripple  Specification"" ;      case INPUT_VOLTAGE_STATISTICS:         return "" Input  Voltage  Statistics"" ;      case LIGHT_CONTROL_AMBIENT_LUX_LEVEL_ON:         return "" Light  Control  Ambient  Lux Level  On"" ;      case LIGHT_CONTROL_AMBIENT_LUX_LEVEL_PROLONG:         return "" Light  Control  Ambient  Lux Level  Prolong"" ;      case LIGHT_CONTROL_AMBIENT_LUX_LEVEL_STANDBY:         return "" Light  Control  Ambient  Lux Level  Standby"" ;      case LIGHT_CONTROL_LIGHTNESS_ON:         return "" Light  Control  Lightness  On"" ;      case LIGHT_CONTROL_LIGHTNESS_PROLONG:         return "" Light  Control  Lightness  Prolong"" ;      case LIGHT_CONTROL_LIGHTNESS_STANDBY:         return "" Light  Control  Lightness  Standby"" ;      case LIGHT_CONTROL_REGULATOR_ACCURACY:         return "" Light  Control  Regulator  Accuracy"" ;      case LIGHT_CONTROL_REGULATOR_KID:         return "" Light  Control  Regulator  Kid"" ;      case LIGHT_CONTROL_REGULATOR_KIU:         return "" Light  Control  Regulator  Kiu"" ;      case LIGHT_CONTROL_REGULATOR_KPD:         return "" Light  Control  Regulator  Kpd"" ;      case LIGHT_CONTROL_REGULATOR_KPU:         return "" Light  Control  Regulator  Kpu"" ;      case LIGHT_CONTROL_TIME_FADE:         return "" Light  Control  Time  Fade"" ;      case LIGHT_CONTROL_TIME_FADE_ON:         return "" Light  Control  Time  Fade  On"" ;      case LIGHT_CONTROL_TIME_FADE_STANDBY_AUTO:         return "" Light  Control  Time  Fade  Standby  Auto"" ;      case LIGHT_CONTROL_TIME_FADE_STANDBY_MANUAL:         return "" Light  Control  Time  Fade  Standby  Manual"" ;      case LIGHT_CONTROL_TIME_OCCUPANCY_DELAY:         return "" Light  Control  Time  Occupancy  Delay"" ;      case LIGHT_CONTROL_TIME_PROLONG:         return "" Light  Control  Time  Prolong"" ;      case LIGHT_CONTROL_TIME_RUN_ON:         return "" Light  Control  Time  Run  On"" ;      case LUMEN_MAINTENANCE_FACTOR:         return "" Lumen  Maintenance  Factor"" ;      case LUMINOUS_EFFICACY:         return "" Luminous  Efficacy"" ;      case LUMINOUS_ENERGY_SINCE_TURN_ON:         return "" Luminous  Energy  Since  Turn  On"" ;      case LUMINOUS_EXPOSURE:         return "" Luminous  Exposure"" ;      case LUMINOUS_FLUX_RANGE:         return "" Luminous  Flux  Range"" ;      case MOTION_SENSED:         return "" Motion  Sensed"" ;      case MOTION_THRESHOLD:         return "" Motion  Threshold"" ;      case OPEN_CIRCUIT_EVENT_STATISTICS:         return "" Open  Circuit  Event  Statistics"" ;      case OUTDOOR_STATISTICAL_VALUES:         return "" Outdoor  Statistical  Values"" ;      case OUTPUT_CURRENT_RANGE:         return "" Output  Current  Range"" ;      case OUTPUT_CURRENT_STATISTICS:         return "" Output  Current  Statistics"" ;      case OUTPUT_RIPPLE_VOLTAGE_SPECIFICATION:         return "" Output  Ripple  Voltage  Specification"" ;      case OUTPUT_VOLTAGE_RANGE:         return "" Output  Voltage  Range"" ;      case OUTPUT_VOLTAGE_STATISTICS:         return "" Output  Voltage  Statistics"" ;      case OVER_OUTPUT_RIPPLE_VOLTAGE_EVENT_STATISTICS:         return "" Over  Output  Ripple  Voltage  Event  Statistics"" ;      case PEOPLE_COUNT:         return "" People  Count"" ;      case PRESENCE_DETECTED:         return "" Presence  Detected"" ;      case PRESENT_AMBIENT_LIGHT_LEVEL:         return "" Present  Ambient  Light  Level"" ;      case PRESENT_AMBIENT_TEMPERATURE:         return "" Present  Ambient  Temperature"" ;      case PRESENT_CIE1931_CHROMATICITY_COORDINATES:         return "" Present CIE 1931  Chromaticity  Coordinates"" ;      case PRESENT_CORRELATED_COLOR_TEMPERATURE:         return "" Present  Correlated  Color  Temperature"" ;      case PRESENT_DEVICE_INPUT_POWER:         return "" Present  Device  Input  Power"" ;      case PRESENT_DEVICE_OPERATING_EFFICIENCY:         return "" Present  Device  Operating  Efficiency"" ;      case PRESENT_DEVICE_OPERATING_TEMPERATURE:         return "" Present  Device  Operating  Temperature"" ;      case PRESENT_ILLUMINANCE:         return "" Present  Illuminance"" ;      case PRESENT_INDOOR_AMBIENT_TEMPERATURE:         return "" Present  Indoor  Ambient  Temperature"" ;      case PRESENT_INPUT_CURRENT:         return "" Present  Input  Current"" ;      case PRESENT_INPUT_RIPPLE_VOLTAGE:         return "" Present  Input  Ripple  Voltage"" ;      case PRESENT_INPUT_VOLTAGE:         return "" Present  Input  Voltage"" ;      case PRESENT_LUMINOUS_FLUX:         return "" Present  Luminous  Flux"" ;      case PRESENT_OUTDOOR_AMBIENT_TEMPERATURE:         return "" Present  Outdoor  Ambient  Temperature"" ;      case PRESENT_OUTPUT_CURRENT:         return "" Present  Output  Current"" ;      case PRESENT_OUTPUT_VOLTAGE:         return "" Present  Output  Voltage"" ;      case PRESENT_PLANCKIAN_DISTANCE:         return "" Present  Planckian  Distance"" ;      case PRESENT_RELATIVE_OUTPUT_RIPPLE_VOLTAGE:         return "" Present  Relative  Output  Ripple  Voltage"" ;      case RELATIVE_DEVICE_ENERGY_USE_IN_A_PERIOD_OF_DAY:         return "" Relative  Device  Energy  Use  In A  Period  Of  Day"" ;      case RELATIVE_DEVICE_RUNTIME_IN_A_GENERIC_LEVEL_RANGE:         return "" Relative  Device  Runtime  In A  Generic  Level  Range"" ;      case RELATIVE_EXPOSURE_TIME_IN_AN_ILLUMINANCE_RANGE:         return "" Relative  Exposure  Time  In  An  Illuminance  Range"" ;      case RELATIVE_RUNTIME_IN_A_CORRELATED_COLOR_TEMPERATURE_RANGE:         return "" Relative  Runtime  In A  Correlated  Color  Temperature  Range"" ;      case RELATIVE_RUNTIME_IN_A_DEVICE_OPERATING_TEMPERATURE_RANGE:         return "" Relative  Runtime  In A  Device  Operating  Temperature  Range"" ;      case RELATIVE_RUNTIME_IN_AN_INPUT_CURRENT_RANGE:         return "" Relative  Runtime  In  An  Input  Current  Range"" ;      case RELATIVE_RUNTIME_IN_AN_INPUT_VOLTAGE_RANGE:         return "" Relative  Runtime  In  An  Input  Voltage  Range"" ;      case SHORT_CIRCUIT_EVENT_STATISTICS:         return "" Short  Circuit  Event  Statistics"" ;      case TIME_SINCE_MOTION_SENSED:         return "" Time  Since  Motion  Sensed"" ;      case TIME_SINCE_PRESENCE_DETECTED:         return "" Time  Since  Presence  Detected"" ;      case TOTAL_DEVICE_ENERGY_USE:         return "" Total  Device  Energy  Use"" ;      case TOTAL_DEVICE_OFF_ON_CYCLES:         return "" Total  Device  Off  On  Cycles"" ;      case TOTAL_DEVICE_POWER_ON_CYCLES:         return "" Total  Device  Power  On  Cycles"" ;      case TOTAL_DEVICE_POWER_ON_TIME:         return "" Total  Device  Power  On  Time"" ;      case TOTAL_DEVICE_RUNTIME:         return "" Total  Device  Runtime"" ;      case TOTAL_LIGHT_EXPOSURE_TIME:         return "" Total  Light  Exposure  Time"" ;      case TOTAL_LUMINOUS_ENERGY:         return "" Total  Luminous  Energy"" ;      case DESIRED_AMBIENT_TEMPERATURE:         return "" Desired  Ambient  Temperature"" ;      case PRECISE_TOTAL_DEVICE_ENERGY_USE:         return "" Precise  Total  Device  Energy  Use"" ;      case POWER_FACTOR:         return "" Power  Factor"" ;      case SENSOR_GAIN:         return "" Sensor  Gain"" ;      case PRECISE_PRESENT_AMBIENT_TEMPERATURE:         return "" Precise  Present  Ambient  Temperature"" ;      case PRESENT_AMBIENT_RELATIVE_HUMIDITY:         return "" Present  Ambient  Relative  Humidity"" ;      case PRESENT_AMBIENT_CARBONDIOXIDE_CONCENTRATION:         return "" Present  Ambient  Carbon  Dioxide  Concentration"" ;      case PRESENT_AMBIENT_VOLATILE_ORGANIC_COMPOUNDS_CONCENTRATION:         return "" Present  Ambient  Volatile  Organic  Compounds  Concentration"" ;      case PRESENT_AMBIENT_NOISE:         return "" Present  Ambient  Noise"" ;      case ACTIVE_ENERGY_LOAD_SIDE:         return "" Active  Energy  Loadside"" ;      case ACTIVE_POWER_LOAD_SIDE:         return "" Active  Power  Loadside"" ;      case AIR_PRESSURE:         return "" Air  Pressure"" ;      case APPARENT_ENERGY:         return "" Apparent  Energy"" ;      case APPARENT_POWER:         return "" Apparent  Power"" ;      case APPARENT_WIND_DIRECTION:         return "" Apparent  Wind  Direction"" ;      case APPARENT_WIND_SPEED:         return "" Apparent  Wind  Speed"" ;      case DEW_POINT:         return "" Dew  Point"" ;      case EXTERNAL_SUPPLY_VOLTAGE:         return "" External  Supply  Voltage"" ;      case EXTERNAL_SUPPLY_VOLTAGE_FREQUENCY:         return "" External  Supply  Voltage  Frequency"" ;      case GUST_FACTOR:         return "" Gust  Factor"" ;      case HEAT_INDEX:         return "" Heat  Index"" ;      case LIGHT_DISTRIBUTION:         return "" Light  Distribution"" ;      case LIGHT_SOURCE_CURRENT:         return "" Light  Source  Current"" ;      case LIGHT_SOURCE_ON_TIME_NOT_RESETTABLE:         return "" Light  Source  On  Time  Not  Resettable"" ;      case LIGHT_SOURCE_ON_TIME_RESETTABLE:         return "" Light  Source  On  Time  Resettable"" ;      case LIGHT_SOURCE_OPEN_CIRCUIT_STATISTICS:         return "" Light  Source  Open  Circuit  Statistics"" ;      case LIGHT_SOURCE_OVERALL_FAILURES_STATISTICS:         return "" Light  Source  Overall  Failures  Statistics"" ;      case LIGHT_SOURCE_SHORT_CIRCUIT_STATISTICS:         return "" Light  Source  Short  Circuit  Statistics"" ;      case LIGHT_SOURCE_START_COUNTER_RESETTABLE:         return "" Light  Source  Start  Counter  Resettable"" ;      case LIGHT_SOURCE_TEMPERATURE:         return "" Light  Source  Temperature"" ;      case LIGHT_SOURCE_THERMAL_DERATING_STATISTICS:         return "" Light  Source  Thermal  Derating  Statistics"" ;      case LIGHT_SOURCE_THERMAL_SHUTDOWN_STATISTICS:         return "" Light  Source  Thermal  Shutdown  Statistics"" ;      case LIGHT_SOURCE_TOTAL_POWER_ON_CYCLES:         return "" Light  Source  Total  Power  On  Cycles"" ;      case LIGHT_SOURCE_VOLTAGE:         return "" Light  Source  Voltage"" ;      case LUMINAIRE_COLOR:         return "" Luminaire  Color"" ;      case LUMINAIRE_IDENTIFICATION_NUMBER:         return "" Luminaire  Identification  Number"" ;      case LUMINAIRE_MANUFACTURER_GTIN:         return "" Luminaire  Manufacturer GTIN"" ;      case LUMINAIRE_NOMINAL_INPUT_POWER:         return "" Luminaire  Nominal  Input  Power"" ;      case LUMINAIRE_NOMINAL_MAXIMUM_AC_MAINS_VOLTAGE:         return "" Luminaire  Nominal  Maximum AC  Mains  Voltage"" ;      case LUMINAIRE_NOMINAL_MINIMUM_AC_MAINS_VOLTAGE:         return "" Luminaire  Nominal  Minimum AC  Mains  Voltage"" ;      case LUMINAIRE_POWER_AT_MINIMUM_DIM_LEVEL:         return "" Luminaire  Power  At  Minimum  Dim  Level"" ;      case LUMINAIRE_TIME_OF_MANUFACTURE:         return "" Luminaire  Time  Of  Manufacture"" ;      case MAGNETIC_DECLINATION:         return "" Magnetic  Declination"" ;      case MAGNETIC_FLUX_DENSITY_2 D:         return "" Magnetic  Flux  Density - 2 D"" ;      case MAGNETIC_FLUX_DENSITY_3 D:         return "" Magnetic  Flux  Density - 3 D"" ;      case NOMINAL_LIGHT_OUTPUT:         return "" Nominal  Light  Output"" ;      case OVERALL_FAILURE_CONDITION:         return "" Overall  Failure  Condition"" ;      case POLLEN_CONCENTRATION:         return "" Pollen  Concentration"" ;      case PRESENT_INDOOR_RELATIVE_HUMIDITY:         return "" Present  Indoor  Relative  Humidity"" ;      case PRESENT_OUTDOOR_RELATIVE_HUMIDITY:         return "" Present  Outdoor  Relative  Humidity"" ;      case PRESSURE:         return "" Pressure"" ;      case RAINFALL:         return "" Rainfall"" ;      case RATED_MEDIAN_USEFUL_LIFE_OF_LUMINAIRE:         return "" Rated  Median  Useful  Life  Of  Luminaire"" ;      case RATED_MEDIAN_USEFUL_LIGHT_SOURCE_STARTS:         return "" Rated  Median  Useful  Light  Source  Starts"" ;      case REFERENCE_TEMPERATURE:         return "" Reference  Temperature"" ;      case TOTAL_DEVICE_STARTS:         return "" Total  Device  Starts"" ;      case TRUE_WIND_DIRECTION:         return "" True  Wind  Direction"" ;      case TRUE_WIND_SPEED:         return "" True  Wind  Speed"" ;      case UV_INDEX:         return ""UV  Index"" ;      case WIND_CHILL:         return "" Wind  Chill"" ;      case LIGHT_SOURCE_TYPE:         return "" Light  Source  Type"" ;      case LUMINAIRE_IDENTIFICATION_STRING:         return "" Luminaire  Identification  String"" ;      case OUTPUT_POWER_LIMITATION:         return "" Output  Power  Limitation"" ;      case THERMAL_DERATING:         return "" Thermal  Derating"" ;      case OUTPUT_CURRENT_PERCENT:         return "" Output  Current  Percent"" ;      case UNKNOWN:     default:         return "" Unknown  Device  Property"" ;  }}"
1770,private void process End Of Stream (  )  throws  Exo Playback Exception{ switch ( codec Drain Action )  {     case DRAIN_ACTION_REINITIALIZE:         reinitialize Codec (  )  ;          break ;      case DRAIN_ACTION_UPDATE_DRM_SESSION:         update Drm Session Or Reinitialize Codec V23 (  )  ;          break ;      case DRAIN_ACTION_FLUSH:         flush Or Reinitialize Codec (  )  ;          break ;      case DRAIN_ACTION_NONE:     default:         output Stream Ended = true ;          render To End Of Stream (  )  ;          break ;  }}
1771,"public static  Haskell Ghci Omnibus Spec get Omnibus Spec (  Build Target base Target,  Action Graph Builder graph Builder,  Immutable List<? extends  Native Linkable> omnibus Roots,  Immutable List<? extends  Native Linkable> excluded Roots ) { LOG . verbose ( ""%s: omnibus roots: %s"", base Target, omnibus Roots )  ;  LOG . verbose ( ""%s: excluded roots: %s"", base Target, excluded Roots )  ;   Immutable Haskell Ghci Omnibus Spec .  Builder builder =  Immutable Haskell Ghci Omnibus Spec . builder (  )  ;  //  Calculate excluded roots/deps, and add them to the link .   Immutable List<? extends  Native Linkable> transitive Excluded Linkables =  Native Linkables . get Transitive Native Linkables ( graph Builder, excluded Roots )  ;  builder . set Excluded Roots (  Iterables . transform ( excluded Roots,  r -> r . get Build Target (  )  )  )  ;   Immutable Map< Build Target, ? extends  Native Linkable> mapped Excluded Linkables =  Maps . unique Index ( transitive Excluded Linkables,  r -> r . get Build Target (  )  )  ;  builder . set Excluded Transitive Deps ( mapped Excluded Linkables )  ;  //  Calculate the body and first-order deps of omnibus .  new  Abstract Breadth First Traversal< Native Linkable> ( omnibus Roots )  {     @ Override     public  Iterable<? extends  Native Linkable> visit (  Native Linkable native Linkable )  {         //  Excluded linkables can't be included in omnibus .          if  ( mapped Excluded Linkables . contains Key ( native Linkable . get Build Target (  )  )  )  {             LOG . verbose ( ""%s: skipping excluded linkable %s"", base Target, native Linkable . get Build Target (  )  )  ;              return  Immutable Set . of (  )  ;          }         //  We cannot include prebuilt S Os in omnibus .          if  ( native Linkable . is Prebuilt SO For Haskell Omnibus ( graph Builder )  )  {             builder . add Deps ( native Linkable )  ;              LOG . verbose ( ""%s: skipping prebuilt SO %s"", base Target, native Linkable . get Build Target (  )  )  ;              return  Immutable Set . of (  )  ;          }         //  Include C/C++ libs capable of static linking in omnibus .          if  ( native Linkable . supports Omnibus Linking For Haskell (  )  )  {             builder . add Body ( native Linkable )  ;              LOG . verbose ( ""%s: including C/C++ library %s"", base Target, native Linkable . get Build Target (  )  )  ;              return  Iterables . concat ( native Linkable . get Native Linkable Deps ( graph Builder ) , native Linkable . get Native Linkable Exported Deps ( graph Builder )  )  ;          }         // dropping libraries at this point will likely result in we're user errors .          return  Immutable Set . of (  )  ;      } } . start (  )  ;   Haskell Ghci Omnibus Spec spec = builder . build (  )  ;  LOG . verbose ( ""%s: built omnibus spec %s"", spec )  ;  return spec ; }"
1772,public  View To Click To Expand setup View (  View view To Click ) { this . view To Click = view To Click ;  return this ; }
1773,"public com . anychart . core . cartesian . series .  Continuous Range Base container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
1774,"public V get ( K key ) { return get ( key, null )  ; }"
1775,"private static void validate Remove All Operation ( @ Non Null  Merging Report .  Builder merging Report, @ Non Null  Xml Element element ) {  Named Node Map attributes = element . get Xml (  )  . get Attributes (  )  ;  if  ( attributes . get Length (  )  > 1 )  {      List< String> extra Attribute Names = new  Array List< String> (  )  ;      for  ( int i = 0 ;  i < attributes . get Length (  )  ;  i++ )  {          Node item = attributes . item ( i )  ;          if  ( ! (  Sdk Constants . TOOLS_URI . equals ( item . get Namespace URI (  )  )  &&  Node Operation Type . NODE_LOCAL_NAME . equals ( item . get Local Name (  )  )  )  )  {             extra Attribute Names . add ( item . get Node Name (  )  )  ;          }     }      String message =  String . format ( "" Element %1$s at %2$s annotated with 'tools:node=\""remove All\""' cannot "" + ""have other attributes : %3$s"", element . get Id (  ) , element . print Position (  ) ,  Joiner . on ( ',' )  . join ( extra Attribute Names )  )  ;      element . add Message ( merging Report, ERROR, message )  ;  }}"
1776,"public  State Value Assert<T> value Equal To ( T value ) {  Java6 Assertions . assert That ( actual . get (  )  )  . overriding Error Message ( "" Expected state value to equal to <%s>, but was <%s> . "", value, actual . get (  )  )  . is Equal To ( value )  ;  return this ; }"
1777,void eval (  ) { push Double (  Math . log10 ( pop Double (  )  )  )  ; }
1778,"private  Bullet Entity add Occluder (  String type, float rotation Y,  Vector3 position ) {  Bullet Entity e = world . add ( type, 0, 0, 0 )  ;  e . body . set World Transform ( e . transform . set To Rotation (  Vector3 . Y, rotation Y )  . set Translation ( position )  )  ;  e . body . set Collision Flags ( e . body . get Collision Flags (  )  | CF_OCCLUDER_OBJECT )  ;  e . set Color (  Color . RED )  ;  return e ; }"
1779,"public void min Point Length (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Point Length (  )  ; "" )  ; }"
1780,"public void get Labels Count (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Labels Count (  )  ; "" )  ; }"
1781,"private  Image Transcoder Factory get Image Transcoder Factory (  ) { if  ( m Image Transcoder Factory == null )  {     if  ( m Config . get Image Transcoder Factory (  )  == null && m Config . get Image Transcoder Type (  )  == null && m Config . get Experiments (  )  . is Native Code Disabled (  )  )  {         m Image Transcoder Factory = new  Simple Image Transcoder Factory ( m Config . get Experiments (  )  . get Max Bitmap Size (  )  )  ;      } else {         m Image Transcoder Factory = new  Multi Image Transcoder Factory ( m Config . get Experiments (  )  . get Max Bitmap Size (  ) , m Config . get Experiments (  )  . get Use Downsampling Ratio For Resizing (  ) , m Config . get Image Transcoder Factory (  ) , m Config . get Image Transcoder Type (  ) , m Config . get Experiments (  )  . is Ensure Transcoder Library Loaded (  )  )  ;      } } return m Image Transcoder Factory ; }"
1782,"public com . anychart . charts .  Heat Map bounds ( com . anychart . utils .  Rect Obj bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
1783,"public com . anychart . charts .  Heat Map padding (  String value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
1784,int first (  Consumer< Cursor> consumer ) {  Cursor cursor = null ;  try {     cursor = start Query (  )  ;      if  ( cursor . move To First (  )  )  {         consumer . accept ( cursor )  ;          return 1 ;      }     return 0 ;  } finally {     if  ( cursor != null )  {         cursor . close (  )  ;      } }}
1785,public void add (  Dalv Insn insn ) { insns . add ( insn )  ;  update Info ( insn )  ; }
1786,"private void init Draw ( int text Color, float text Size, int selected Color, boolean selected Bold, float selected Size, float footer Line Height, int footer Color ) { paint Text = new  Paint (  )  ;  paint Text . set Color ( text Color )  ;  paint Text . set Text Size ( text Size )  ;  paint Text . set Anti Alias ( true )  ;  paint Selected = new  Paint (  )  ;  paint Selected . set Color ( selected Color )  ;  paint Selected . set Text Size ( selected Size )  ;  paint Selected . set Fake Bold Text ( selected Bold )  ;  paint Selected . set Anti Alias ( true )  ;  paint Footer Line = new  Paint (  )  ;  paint Footer Line . set Style (  Paint .  Style . FILL_AND_STROKE )  ;  paint Footer Line . set Stroke Width ( footer Line Height )  ;  paint Footer Line . set Color ( footer Color )  ;  paint Footer Triangle = new  Paint (  )  ;  paint Footer Triangle . set Style (  Paint .  Style . FILL_AND_STROKE )  ;  paint Footer Triangle . set Color ( footer Color )  ; }"
1787,public  Factory set Allow Chunkless Preparation ( boolean allow Chunkless Preparation ) {  Assertions . check State ( !is Create Called )  ;  this . allow Chunkless Preparation = allow Chunkless Preparation ;  return this ; }
1788,public  Type get Generic Parameter Type (  ) { if  ( this . generic Parameter Type == null )  {     if  ( this . parameter Index < 0 )  {         this . generic Parameter Type =  ( this . method != null ? this . method . get Generic Return Type (  )  : null )  ;      } else {         this . generic Parameter Type =  ( this . method != null ? this . method . get Generic Parameter Types (  )  [ this . parameter Index ]  : this . constructor . get Generic Parameter Types (  )  [ this . parameter Index ]  )  ;      } } return this . generic Parameter Type ; }
1789,public void set Set Button (  Button b ) { m Set Button = b ;  enable Set Button (  )  ; }
1790,"public com . anychart . core . stock . scrollerseries .  Spline Area stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
1791,"public void save As Pdf (  Number paper Size Or Width Or Options,  Boolean landscape,  Number x,  Number y,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Pdf ( %s, %s, %s, %s, %s )  ; "", paper Size Or Width Or Options, landscape, x, y, wrap Quotes ( filename )  )  )  ; }"
1792,public  Styleable Model View Model_ with Default Style (  ) {  Style style = paris Style Reference_default != null ? paris Style Reference_default . get (  )  : null ;  if  ( style == null )  {     style = new  Styleable Model View Style Applier .  Style Builder (  )  . add Default (  )  . build (  )  ;      paris Style Reference_default = new  Weak Reference<> ( style )  ;  } return style ( style )  ; }
1793,"public com . anychart . core . stock . scrollerseries .  Candlestick min Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
1794,"public boolean merge Starts ( int index,  Register Spec Set specs ) {  Register Spec Set start = get Starts0 ( index )  ;  boolean changed = false ;  if  ( start == null )  {     set Starts ( index, specs )  ;      return true ;  }  Register Spec Set new Start = start . mutable Copy (  )  ;  new Start . intersect ( specs, true )  ;  if  ( start . equals ( new Start )  )  {     return false ;  } new Start . set Immutable (  )  ;  set Starts ( index, new Start )  ;  return true ; }"
1795,public void set Enable ( boolean enable ) { m Enable = enable ; }
1796,public int hash Code (  ) { return this . input Stream . hash Code (  )  ; }
1797,"public  Listenable Future<C> call (  Callable<C> combiner,  Executor executor ) { return new  Combined Future<C> ( futures, all Must Succeed, executor, combiner )  ; }"
1798,public void name Space Changed (  ) { class Cache = null ;  names = null ; }
1799,"public boolean key Down (  Input Event event, int keycode ) { return false ; }"
1800,"public void test Seek To Us Then Update Stream Continue To Read From Seek Position (  ) { long presentation Time Us1 = 1000000 ;  long presentation Time Us2 = 2000000 ;  long presentation Time Us3 = 3000000 ;   Event Message event Message1 = new Event Message With Id ( 1 )  ;   Event Message event Message2 = new Event Message With Id ( 2 )  ;   Event Message event Message3 = new Event Message With Id ( 3 )  ;   Event Stream event Stream1 = new  Event Stream ( SCHEME_ID, VALUE, TIME_SCALE, new long [  ]  { presentation Time Us1, presentation Time Us2 }, new  Event Message [  ]  { event Message1, event Message2 } )  ;   Event Stream event Stream2 = new  Event Stream ( SCHEME_ID, VALUE, TIME_SCALE, new long [  ]  { presentation Time Us1, presentation Time Us2, presentation Time Us3 }, new  Event Message [  ]  { event Message1, event Message2, event Message3 } )  ;   Event Sample Stream sample Stream = new  Event Sample Stream ( event Stream1, FORMAT, true )  ;  // first read - read format read Data ( sample Stream )  ;  sample Stream . seek To Us ( presentation Time Us2 )  ;  sample Stream . update Event Stream ( event Stream2, true )  ;  int result = read Data ( sample Stream )  ;  assert That ( result )  . is Equal To ( C . RESULT_BUFFER_READ )  ;  assert That ( input Buffer . data . array (  )  )  . is Equal To ( get Encoded Message ( event Message2 )  )  ; }"
1801,"public static void translate ( final  View view, float from X Delta, float to X Delta, float from Y Delta, float to Y Delta, float cycles, long duration Millis, final boolean is Ban Click ) {  Translate Animation translate Animation = new  Translate Animation ( from X Delta, to X Delta, from Y Delta, to Y Delta )  ;  translate Animation . set Duration ( duration Millis )  ;  if  ( cycles > 0 . 0 )  {     translate Animation . set Interpolator ( new  Cycle Interpolator ( cycles )  )  ;  } translate Animation . set Animation Listener ( new  Animation Listener (  )  {     @ Override     public void on Animation Start (  Animation animation )  {         if  ( is Ban Click )  {             view . set Clickable ( false )  ;          }     }     @ Override     public void on Animation Repeat (  Animation animation )  {     }     @ Override     public void on Animation End (  Animation animation )  {         if  ( is Ban Click )  {             view . set Clickable ( true )  ;          }     } } )  ;  view . start Animation ( translate Animation )  ; }"
1802,"public long [  ]  ensure Capacity ( int additional Capacity ) { if  ( additional Capacity < 0 )      throw new  Illegal Argument Exception ( ""additional Capacity must be >= 0: "" + additional Capacity )  ;  int size Needed = size + additional Capacity ;  if  ( size Needed > items . length )      resize (  Math . max (  Math . max ( 8, size Needed ) ,  ( int )   ( size * 1 . 75f )  )  )  ;  return items ; }"
1803,"public com . anychart . core . utils .  Legend Item Settings icon Marker Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . icon Marker Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1804,public final boolean has (  Rev Flag flag ) { return  ( flags & flag . mask )  != 0 ; }
1805,"public com . anychart . core . resource .  Logo bottom (  String bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", wrap Quotes ( bottom )  )  )  ;  return this ; }"
1806,public T new Object (  Class<T> type ) { T object ;  if  ( free Objects Hash Map . size (  )  == 0 )  {     if  ( free Objects Hash Map . contains Key ( type . get Name (  )  )  )  {         object =  ( get Object Pool ( type )  )  . new Object (  )  ;      } else {         object =  ( get Public Factory ( type )  )  . create Object (  )  ;      } } else     object =  ( get Object Pool ( type )  )  . remove (  )  ;  return object ; }
1807,public T use Unlimited Source Generators Pool ( boolean flag ) { if  ( is Auto Clone Enabled )  {     return clone (  )  . use Unlimited Source Generators Pool ( flag )  ;  } this . use Unlimited Source Generators Pool = flag ;  fields |= USE_UNLIMITED_SOURCE_GENERATORS_POOL ;  return self Or Throw If Locked (  )  ; }
1808,"public static  Path get So Libs Rel Dir (  Build Target base Target ) { return  Paths . get ( base Target . get Short Name (  )  + "" . so-symlinks"" )  ; }"
1809,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
1810,"public com . anychart . core . polar . series .  Range Column bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
1811,"public com . anychart . core . stock . indicators . CHO ma Type ( com . anychart . enums .  Moving Average Type type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . ma Type ( %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
1812,"public PGP Secret Key parse Secret Key (  Input Stream input Stream, PBE Protection Remover Factory key Protection Remover Factory,  Key Finger Print Calculator finger Print Calculator )  throws IO Exception, PGP Exception{ S Xpr Utils . skip Open Parenthesis ( input Stream )  ;   String type ;  type = S Xpr Utils . read String ( input Stream, input Stream . read (  )  )  ;  if  ( type . equals ( ""protected-private-key"" )  || type . equals ( ""private-key"" )  )  {     S Xpr Utils . skip Open Parenthesis ( input Stream )  ;       String key Type = S Xpr Utils . read String ( input Stream, input Stream . read (  )  )  ;      if  ( key Type . equals ( ""ecc"" )  )  {         S Xpr Utils . skip Open Parenthesis ( input Stream )  ;           String curve ID = S Xpr Utils . read String ( input Stream, input Stream . read (  )  )  ;           String curve Name = S Xpr Utils . read String ( input Stream, input Stream . read (  )  )  ;          if  ( curve Name . starts With ( ""NIST "" )  )  {             curve Name = curve Name . substring ( ""NIST "" . length (  )  )  ;          }         S Xpr Utils . skip Close Parenthesis ( input Stream )  ;          byte [  ]  q Val ;          S Xpr Utils . skip Open Parenthesis ( input Stream )  ;          type = S Xpr Utils . read String ( input Stream, input Stream . read (  )  )  ;          if  ( type . equals ( ""q"" )  )  {             q Val = S Xpr Utils . read Bytes ( input Stream, input Stream . read (  )  )  ;          } else {             throw new PGP Exception ( ""no q value found"" )  ;          }          Public Key Packet pub Packet = new  Public Key Packet (  Public Key Algorithm Tags . ECDSA, new  Date (  ) , new ECDSA Public BCPG Key ( EC Named Curve Table . get OID ( curve Name ) , new  Big Integer ( 1, q Val )  )  )  ;          S Xpr Utils . skip Close Parenthesis ( input Stream )  ;           Big Integer d = process EC Secret Key ( input Stream, curve ID, curve Name, q Val, key Protection Remover Factory )  ;          return new PGP Secret Key ( new  Secret Key Packet ( pub Packet,  Symmetric Key Algorithm Tags . NULL, null, null, new EC Secret BCPG Key ( d )  . get Encoded (  )  ) , new PGP Public Key ( pub Packet, finger Print Calculator )  )  ;      } else if  ( key Type . equals ( ""dsa"" )  )  {          Big Integer p = read Big Integer ( ""p"", input Stream )  ;           Big Integer q = read Big Integer ( ""q"", input Stream )  ;           Big Integer g = read Big Integer ( ""g"", input Stream )  ;           Big Integer y = read Big Integer ( ""y"", input Stream )  ;           Big Integer x = process DSA Secret Key ( input Stream, p, q, g, y, key Protection Remover Factory )  ;           Public Key Packet pub Packet = new  Public Key Packet (  Public Key Algorithm Tags . DSA, new  Date (  ) , new DSA Public BCPG Key ( p, q, g, y )  )  ;          return new PGP Secret Key ( new  Secret Key Packet ( pub Packet,  Symmetric Key Algorithm Tags . NULL, null, null, new DSA Secret BCPG Key ( x )  . get Encoded (  )  ) , new PGP Public Key ( pub Packet, finger Print Calculator )  )  ;      } else if  ( key Type . equals ( ""elg"" )  )  {          Big Integer p = read Big Integer ( ""p"", input Stream )  ;           Big Integer g = read Big Integer ( ""g"", input Stream )  ;           Big Integer y = read Big Integer ( ""y"", input Stream )  ;           Big Integer x = process El Gamal Secret Key ( input Stream, p, g, y, key Protection Remover Factory )  ;           Public Key Packet pub Packet = new  Public Key Packet (  Public Key Algorithm Tags . ELGAMAL_ENCRYPT, new  Date (  ) , new  El Gamal Public BCPG Key ( p, g, y )  )  ;          return new PGP Secret Key ( new  Secret Key Packet ( pub Packet,  Symmetric Key Algorithm Tags . NULL, null, null, new  El Gamal Secret BCPG Key ( x )  . get Encoded (  )  ) , new PGP Public Key ( pub Packet, finger Print Calculator )  )  ;      } else if  ( key Type . equals ( ""rsa"" )  )  {          Big Integer n = read Big Integer ( ""n"", input Stream )  ;           Big Integer e = read Big Integer ( ""e"", input Stream )  ;           Big Integer [  ]  values = process RSA Secret Key ( input Stream, n, e, key Protection Remover Factory )  ;          // TODO: type of RSA key?          Public Key Packet pub Packet = new  Public Key Packet (  Public Key Algorithm Tags . RSA_GENERAL, new  Date (  ) , new RSA Public BCPG Key ( n, e )  )  ;          return new PGP Secret Key ( new  Secret Key Packet ( pub Packet,  Symmetric Key Algorithm Tags . NULL, null, null, new RSA Secret BCPG Key ( values [ 0 ] , values [ 1 ] , values [ 2 ]  )  . get Encoded (  )  ) , new PGP Public Key ( pub Packet, finger Print Calculator )  )  ;      } else {         throw new PGP Exception ( ""unknown key type: "" + key Type )  ;      } } throw new PGP Exception ( ""unknown key type found"" )  ; }"
1813,public  Resume Failed Cause get Cause (  ) { return this . failed Cause ; }
1814,"public static  Ssa Method test Edge Split (  Rop Method rmeth, int param Width, boolean is Static ) {  Ssa Method result ;  result =  Ssa Method . new From Rop Method ( rmeth, param Width, is Static )  ;  edge Split ( result )  ;  return result ; }"
1815,"public  Model Returning Class Type_ on Unbind (  On Model Unbound Listener< Model Returning Class Type_,  Object> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
1816,"public void inverted (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . inverted (  )  ; "" )  ; }"
1817,"private static  File get Single File With Extension (  File directory,  String extension ) {  File [  ]  files = directory . list Files (  )  ;  if  ( files == null )  {     return null ;  } for  (  File file : files )  {     if  ( file . get Name (  )  . ends With ( extension )  )  {         return file ;      } } return null ; }"
1818,"public  Object Builder add String (  String field Name,  Optional< String> maybe Value ) { return maybe Value . is Present (  )  ? add String ( field Name, maybe Value . get (  )  )  : this ; }"
1819,"public static  Intent Result parse Activity Result ( int result Code,  Intent intent ) { if  ( result Code ==  Activity . RESULT_OK )  {      String contents = intent . get String Extra (  Intents .  Scan . RESULT )  ;       String format Name = intent . get String Extra (  Intents .  Scan . RESULT_FORMAT )  ;      byte [  ]  raw Bytes = intent . get Byte Array Extra (  Intents .  Scan . RESULT_BYTES )  ;      int intent Orientation = intent . get Int Extra (  Intents .  Scan . RESULT_ORIENTATION,  Integer . MIN_VALUE )  ;       Integer orientation = intent Orientation ==  Integer . MIN_VALUE ? null : intent Orientation ;       String error Correction Level = intent . get String Extra (  Intents .  Scan . RESULT_ERROR_CORRECTION_LEVEL )  ;       String barcode Image Path = intent . get String Extra (  Intents .  Scan . RESULT_BARCODE_IMAGE_PATH )  ;      return new  Intent Result ( contents, format Name, raw Bytes, orientation, error Correction Level, barcode Image Path, intent )  ;  } return new  Intent Result ( intent )  ; }"
1820,"public static void put (  Context context,  String key,  Object object ) {  Shared Preferences sp = context . get Shared Preferences ( FILE_NAME,  Context . MODE_PRIVATE )  ;   Shared Preferences .  Editor editor = sp . edit (  )  ;  // 判断数据类型 if  ( object instanceof  String )  {     editor . put String ( key,  (  String )  object )  ;  } else if  ( object instanceof  Integer )  {     editor . put Int ( key,  (  Integer )  object )  ;  } else if  ( object instanceof  Boolean )  {     editor . put Boolean ( key,  (  Boolean )  object )  ;  } else if  ( object instanceof  Float )  {     editor . put Float ( key,  (  Float )  object )  ;  } else if  ( object instanceof  Long )  {     editor . put Long ( key,  (  Long )  object )  ;  } else {     editor . put String ( key, object . to String (  )  )  ;  }  Shared Preferences Compat . apply ( editor )  ; }"
1821,"protected void before Execute (  Thread t,  Runnable r ) { super . before Execute ( t, r )  ;  pause Lock . lock (  )  ;  try {     while  ( is Paused )  {         unpaused . await (  )  ;      } } catch  (  Interrupted Exception ie )  {     t . interrupt (  )  ;  } finally {     pause Lock . unlock (  )  ;  }}"
1822,public  String Builder append (  String str ) { append0 ( str )  ;  return this ; }
1823,public  Network Request Metric Builder set Time To Response Initiated Micros ( long time ) { builder . set Time To Response Initiated Us ( time )  ;  return this ; }
1824,public  Image Request Builder disable Memory Cache (  ) { m Memory Cache Enabled = false ;  return this ; }
1825,"public static  Calligraphy Typeface Span get Span ( final  Typeface typeface ) { if  ( typeface == null )      return null ;  synchronized  ( s Cached Spans )  {     if  ( !s Cached Spans . contains Key ( typeface )  )  {         final  Calligraphy Typeface Span span = new  Calligraphy Typeface Span ( typeface )  ;          s Cached Spans . put ( typeface, span )  ;          return span ;      }     return s Cached Spans . get ( typeface )  ;  }}"
1826,"public void set Access Flags ( int nth, int flags ) {  Byte Array . write16bit ( flags, get (  ) , nth * 8 + 8 )  ; }"
1827,"public com . anychart . core . ui .  Background background (  ) { return new com . anychart . core . ui .  Background ( js Base + "" . background (  ) "" )  ; }"
1828,"protected int get Codec Max Input Size (  Media Codec Info codec Info,  Format format,  Format [  ]  stream Formats ) { int max Input Size = get Codec Max Input Size ( codec Info, format )  ;  if  ( stream Formats . length == 1 )  {     // being configured .      return max Input Size ;  } for  (  Format stream Format : stream Formats )  {     if  ( codec Info . is Seamless Adaptation Supported ( format, stream Format, /* is New Format Complete= */     false )  )  {         max Input Size =  Math . max ( max Input Size, get Codec Max Input Size ( codec Info, stream Format )  )  ;      } } return max Input Size ; }"
1829,"private void set Mqtt Broker Url (  String mqtt Broker Url ) { shared Preferences . edit (  )  . put String ( ""mqtt_broker_url"", mqtt Broker Url )  . apply (  )  ; }"
1830,"public synchronized  Device Id .  Type get Device ID Type (  ) { if  ( !is Initialized (  )  )  {     L . e ( ""init must be called before get Device ID"" )  ;      return null ;  } L . d ( "" [  Countly ]   Calling 'get Device ID Type'"" )  ;  return connection Queue_ . get Device Id (  )  . get Type (  )  ; }"
1831,"public static  Builder<K, V> builder ( int size ) { return new  Builder<> ( size )  ; }"
1832,public  Network Manager . I Network Manager Builder put ( @ Non Null  Object body Object ) { return new  Network Manager .  Builder (  )  . set Base Url ( base Url )  . set Context ( context )  . set Method (  Request .  Method . PUT )  . set Body Request ( generate Body Request ( body Object )  )  ; }
1833,"private void enable Protocol (  Protocol protocol ) { enable Tls (  )  ;  client = client . new Builder (  )  . protocols ( as List ( protocol,  Protocol . HTTP_1_1 )  )  . build (  )  ;  server . set Protocols ( client . protocols (  )  )  ; }"
1834,"public com . anychart . core . cartesian . series .  Base get Series (  String id ) { return new com . anychart . core . cartesian . series .  Base (  String . format (  Locale . US, js Base + "" . get Series ( %s ) "", wrap Quotes ( id )  )  )  ; }"
1835,public void record Path (  Path target ) { existing . add ( target )  ; }
1836,int get Documents Read By Key (  ) { return documents Read By Key [ 0 ]  ; }
1837,"private static  Cxx Link create Shared Library (  Build Target build Target Maybe With Linker Map Mode,  Project Filesystem project Filesystem,  Action Graph Builder graph Builder,  Cell Path Resolver cell Roots,  Cxx Buck Config cxx Buck Config,  Cxx Platform cxx Platform,  Cxx Library Description Arg args,  Immutable Set< Build Rule> deps,  Immutable List< String With Macros> linker Flags,  Immutable List< String With Macros> post Linker Flags,  Immutable Set< Framework Path> frameworks,  Immutable Set< Framework Path> libraries,  Optional< String> soname,  Optional< Linker .  Cxx Runtime Type> cxx Runtime Type,  Linker .  Link Type link Type,  Linker .  Linkable Dep Type linkable Dep Type,  Optional< Linkable List Filter> linkable List Filter,  Optional< Source Path> bundle Loader,  Immutable Set< Build Target> blacklist,  Cxx Library Description .  Transitive Cxx Preprocessor Input Function transitive Cxx Preprocessor Input Function,  Optional< Cxx Library Description Delegate .  Configured Delegate> delegate ) {  Build Target build Target Without Linker Map Mode =  Linker Map Mode . remove Linker Map Mode Flavor In Target ( build Target Maybe With Linker Map Mode,  Linker Map Mode . FLAVOR_DOMAIN . get Value ( build Target Maybe With Linker Map Mode )  )  ;  //  Create rules for compiling the PIC object files .   Immutable List< Source Path> objects = require Objects ( build Target Without Linker Map Mode, project Filesystem, graph Builder, cell Roots, cxx Buck Config, cxx Platform, cxx Platform . get Pic Type For Shared Linking (  ) , args, deps, transitive Cxx Preprocessor Input Function, delegate )  ;  //  Setup the rules to link the shared library .   Build Target shared Target =  Cxx Description Enhancer . create Shared Library Build Target ( build Target Maybe With Linker Map Mode, cxx Platform . get Flavor (  ) , link Type )  ;   String With Macros Converter macros Converter =  Cxx Description Enhancer . get String With Macros Args Converter ( shared Target, cell Roots, graph Builder, cxx Platform )  ;   String shared Library Soname =  Cxx Description Enhancer . get Shared Library Soname ( soname, build Target Maybe With Linker Map Mode, cxx Platform, project Filesystem )  ;   Path shared Library Path =  Cxx Description Enhancer . get Shared Library Path ( project Filesystem, shared Target, shared Library Soname )  ;   Immutable List< Native Linkable Group> delegate Native Linkable Groups = delegate . flat Map (  d -> d . get Native Linkable Exported Deps (  )  )  . or Else (  Immutable List . of (  )  )  ;   Immutable List< Native Linkable> all Native Linkables =  Rich Stream . from ( deps )  . filter (  Native Linkable Group . class )  . concat (  Rich Stream . from ( delegate Native Linkable Groups )  )  . map (  g -> g . get Native Linkable ( cxx Platform, graph Builder )  )  . to Immutable List (  )  ;   Cxx Link Options link Options =  Cxx Link Options . of ( args . get Thin Lto (  ) , args . get Fat Lto (  )  )  ;  return  Cxx Linkable Enhancer . create Cxx Linkable Build Rule ( cxx Buck Config, cxx Platform, project Filesystem, graph Builder, shared Target, link Type,  Optional . of ( shared Library Soname ) , shared Library Path, args . get Linker Extra Outputs (  ) , linkable Dep Type, linkable List Filter, link Options, all Native Linkables, cxx Runtime Type, bundle Loader, blacklist,  Immutable Set . of (  ) ,  Native Linkable Input . builder (  )  . add All Args (  Rich Stream . from ( linker Flags )  . map ( macros Converter::convert )  . to Immutable List (  )  )  . add All Args (  Source Path Arg . from ( objects )  )  . add All Args (  Rich Stream . from ( post Linker Flags )  . map ( macros Converter::convert )  . to Immutable List (  )  )  . set Frameworks ( frameworks )  . set Libraries ( libraries )  . build (  ) ,  Optional . empty (  ) , cell Roots )  ; }"
1838,"public static boolean apply Font To Text View ( final  Text View text View, final  Typeface typeface ) { return apply Font To Text View ( text View, typeface, false )  ; }"
1839,"private  Task< Result T> run Transaction (  Transaction .  Function< Result T> update Function,  Executor executor ) { ensure Client Configured (  )  ;  //  We wrap the function they provide in order to // 1 .   Use internal implementation classes for  Transaction, // 2 .   Convert exceptions they throw into  Tasks, and // 3 .   Run the user callback on the user queue .   Function<com . google . firebase . firestore . core .  Transaction,  Task< Result T>> wrapped Update Function =  internal Transaction ->  Tasks . call ( executor,  (  )  -> update Function . apply ( new  Transaction ( internal Transaction,  Firebase Firestore . this )  )  )  ;  return client . transaction ( wrapped Update Function )  ; }"
1840,"private void set Scale Adapter (  ) {  Animation Adapter anim Card Array Adapter = new  Scale In Animation Adapter ( m Card Array Adapter )  ;  anim Card Array Adapter . set Abs List View ( m List View )  ;  if  ( m List View != null )  {     m List View . set External Adapter ( anim Card Array Adapter, m Card Array Adapter )  ;  }}"
1841,"static  Method Spec generate Accept Trigger Event Impl (  Spec Model spec Model ) { final  Method Spec .  Builder method Builder =  Method Spec . method Builder ( ""accept Trigger Event Impl"" )  . add Modifiers (  Modifier . PROTECTED )  . add Annotation (  Override . class )  . returns (  Type Name . OBJECT )  . add Parameter (  Parameter Spec . builder ( EVENT_TRIGGER, ""event Trigger"",  Modifier . FINAL )  . build (  )  )  . add Parameter (  Parameter Spec . builder ( OBJECT, ""event State"",  Modifier . FINAL )  . build (  )  )  . add Parameter (  Array Type Name . of (  Type Name . OBJECT ) , ""params"",  Modifier . FINAL )  ;  method Builder . add Statement ( ""int id = event Trigger . m Id"" )  ;  method Builder . begin Control Flow ( ""switch ( $L ) "", ""id"" )  ;  for  (  Spec Method Model< Event Method,  Event Declaration Model> event Method Model : spec Model . get Trigger Methods (  )  )  {     method Builder . begin Control Flow ( ""case $L:"", get Method Id Int ( spec Model . get Component Name (  ) , event Method Model )  )  ;      final  String event Variable Name = ""_event"" ;      method Builder . add Statement ( ""$T $L =  ( $T )  $L"", event Method Model . type Model . get Raw Name (  ) , event Variable Name, event Method Model . type Model . get Raw Name (  ) , ""event State"" )  ;      final  Code Block .  Builder event Trigger Params =  Code Block . builder (  )  . indent (  )  . add ( ""\n ( $L )  event Trigger . m Component Context"", spec Model . get Context Class (  )  )  ;      event Trigger Params . add ( "",\n$L"", ""event Trigger . m Trigger Target"" )  ;      int param Index = 0 ;      for  (  Method Param Model method Param Model : event Method Model . method Params )  {         if  (  Method Param Model Utils . is Annotated With ( method Param Model,  From Trigger . class )  )  {             event Trigger Params . add ( "",\n$L . $L"", event Variable Name, method Param Model . get Name (  )  )  ;              continue ;          }         if  (  Method Param Model Utils . is Annotated With ( method Param Model,  Param . class )  )  {             event Trigger Params . add ( "",\n ( $T )  params [ $L ] "", method Param Model . get Type Name (  ) , param Index++ )  ;          }     }     event Trigger Params . unindent (  )  ;      if  ( !event Method Model . return Type . equals (  Type Name . VOID )  )  {         method Builder . add Statement ( ""return $L ( $L ) "", event Method Model . name, event Trigger Params . build (  )  )  ;      } else {         method Builder . add Statement ( ""$L ( $L ) "", event Method Model . name, event Trigger Params . build (  )  )  ;          method Builder . add Statement ( ""return null"" )  ;      }     method Builder . end Control Flow (  )  ;  } return method Builder . add Statement ( ""default:\nreturn null"" )  . end Control Flow (  )  . build (  )  ; }"
1842,public void set Item Settle Back Into Place Animation Interpolator ( @ Nullable  Interpolator interpolator ) { m Item Settle Back Into Place Animation Interpolator = interpolator ; }
1843,"public  String get Filter Command (  String filter Command Type )  throws IO Exception{  Attributes attributes = get Attributes (  )  ;   Attribute f = attributes . get (  Constants . ATTR_FILTER )  ;  if  ( f == null )  {     return null ;  }  String filter Value = f . get Value (  )  ;  if  ( filter Value == null )  {     return null ;  }  String filter Command = get Filter Command Definition ( filter Value, filter Command Type )  ;  if  ( filter Command == null )  {     return null ;  } return //$NON-NLS-1$ filter Command . replace All ( //$NON-NLS-1$ ""%f"",  Matcher . quote Replacement (  Quoted String . BOURNE . quote (  ( get Path String (  )  )  )  )  )  ; }"
1844,public  String get UUID (  ) { return m UUID ; }
1845,protected  List< Shortcut Info> get Shortcuts ( int match Flags ) { if  ( match Flags == 0 )  {     return  Lists . new Array List (  )  ;  }  Set< Shortcut Info> shortcut Info Set = new  Hash Set<> (  )  ;  shortcut Info Set . add All ( get Manifest Shortcuts (  )  )  ;  shortcut Info Set . add All ( get Dynamic Shortcuts (  )  )  ;  shortcut Info Set . add All ( get Pinned Shortcuts (  )  )  ;  return shortcut Info Set . stream (  )  . filter (  shortcut Info ->  (  ( match Flags & FLAG_MATCH_MANIFEST )  != 0 && shortcut Info . is Declared In Manifest (  )  )  ||  (  ( match Flags & FLAG_MATCH_DYNAMIC )  != 0 && shortcut Info . is Dynamic (  )  )  ||  (  ( match Flags & FLAG_MATCH_PINNED )  != 0 && shortcut Info . is Pinned (  )  )  ||  (  ( match Flags & FLAG_MATCH_CACHED )  != 0 &&  ( shortcut Info . is Cached (  )  || shortcut Info . is Long Lived (  )  )  )  )  . collect ( to Collection (  Array List::new )  )  ; }
1846,"final void fail Equality Check For Equals Without Description (  Object expected ) { fail Equality Check (  Equality Check . EQUAL, expected,  Comparison Result . different No Description (  )  )  ; }"
1847,"public void test Get Cast Timeline Persists Duration (  ) {  Cast Timeline Tracker tracker = new  Cast Timeline Tracker (  )  ;   Remote Media Client remote Media Client = mock Remote Media Client ( /* item Ids= */ new int [  ]  { 1, 2, 3, 4, 5 }, /* current Item Id= */ 2, /* current Duration Ms= */ DURATION_2_MS )  ;   Timeline Asserts . assert Period Durations ( tracker . get Cast Timeline ( remote Media Client ) , C . TIME_UNSET, C . ms To Us ( DURATION_2_MS ) , C . TIME_UNSET, C . TIME_UNSET, C . TIME_UNSET )  ;  remote Media Client = mock Remote Media Client ( /* item Ids= */ new int [  ]  { 1, 2, 3 }, /* current Item Id= */ 3, /* current Duration Ms= */ DURATION_3_MS )  ;   Timeline Asserts . assert Period Durations ( tracker . get Cast Timeline ( remote Media Client ) , C . TIME_UNSET, C . ms To Us ( DURATION_2_MS ) , C . ms To Us ( DURATION_3_MS )  )  ;  remote Media Client = mock Remote Media Client ( /* item Ids= */ new int [  ]  { 1, 3 }, /* current Item Id= */ 3, /* current Duration Ms= */ DURATION_3_MS )  ;   Timeline Asserts . assert Period Durations ( tracker . get Cast Timeline ( remote Media Client ) , C . TIME_UNSET, C . ms To Us ( DURATION_3_MS )  )  ;  remote Media Client = mock Remote Media Client ( /* item Ids= */ new int [  ]  { 1, 2, 3, 4, 5 }, /* current Item Id= */ 4, /* current Duration Ms= */ DURATION_4_MS )  ;   Timeline Asserts . assert Period Durations ( tracker . get Cast Timeline ( remote Media Client ) , C . TIME_UNSET, C . TIME_UNSET, C . ms To Us ( DURATION_3_MS ) , C . ms To Us ( DURATION_4_MS ) , C . TIME_UNSET )  ;  remote Media Client = mock Remote Media Client ( /* item Ids= */ new int [  ]  { 1, 2, 3, 4, 5 }, /* current Item Id= */ 5, /* current Duration Ms= */ DURATION_5_MS )  ;   Timeline Asserts . assert Period Durations ( tracker . get Cast Timeline ( remote Media Client ) , C . TIME_UNSET, C . TIME_UNSET, C . ms To Us ( DURATION_3_MS ) , C . ms To Us ( DURATION_4_MS ) , C . ms To Us ( DURATION_5_MS )  )  ; }"
1848,"public void run Test (  Hosted Test hosted Test, long timeout Ms ) { run Test ( hosted Test, timeout Ms, /* fail On Timeout Or Force Stop= */ true )  ; }"
1849,public  Tag Command set Name (  String name ) { check Callable (  )  ;  this . name = name ;  return this ; }
1850,"public void set Exception (  Throwable throwable ) { if  ( exception != null )  {     throw new  Illegal State Exception ( "" An exception has already been set . "" )  ;  } this . exception = throwable ; }"
1851,private static void register Provider ( I Provider Group provider Group ) { mark Registered By Plugin (  )  ;  if  ( provider Group != null )  {     provider Group . load Into (  Warehouse . providers Index )  ;  }}
1852,"public static byte [  ]  get Identification Header Data (  ) { int id Header Start = 28 ;  int id Header Length = 30 ;  byte [  ]  id Header Data = new byte [ id Header Length ]  ;   System . arraycopy ( VORBIS_HEADER_PAGES, id Header Start, id Header Data, 0, id Header Length )  ;  return id Header Data ; }"
1853,"public void set Cache Folder (  String cache Folder ) { if  (  String Utils . is Empty ( cache Folder )  )  {     throw new  Illegal Argument Exception ( "" The cache Folder of cache can not be null . "" )  ;  } this . cache Folder = cache Folder ; }"
1854,"public void print Stack Trace (  Print Stream s ) { super . print Stack Trace ( s )  ;  if  ( java Version < 1 . 4 && get Cause (  )  != null )  {     s . print ( "" Caused by: "" )  ;      get Cause (  )  . print Stack Trace ( s )  ;  }}"
1855,public static void add Pending Http Response (  Http Response Generator http Response Generator ) { get Fake Http Layer (  )  . add Pending Http Response ( http Response Generator )  ; }
1856,"public void append End (  String Buffer buffer,  Object object ) { if  ( this . field Separator At End == false )  {     remove Last Field Separator ( buffer )  ;  } append Content End ( buffer )  ;  unregister ( object )  ; }"
1857,public static  Immutable Set< Class<? extends  Annotation>> subcomponent Annotations (  ) { return SUBCOMPONENT_ANNOTATIONS ; }
1858,"public synchronized  Component Context get Component Context (  ) { if  ( m Component Context == null )  {     throw new  Runtime Exception ( "" Tried to access  Component Context before  Activity was created"" )  ;  } return m Component Context ; }"
1859,public  Font get Font (  ) { return font ; }
1860,public int color Title (  ) { return theme . color Title (  )  ; }
1861,"public static byte [  ]  get Bytes ( @ Non Null final  String key, final byte [  ]  default Value ) { return get Bytes ( key, default Value, get Default Cache Double Utils (  )  )  ; }"
1862,public boolean is Public Key Information Available (  ) { return public Key Information Available ; }
1863,public  Stash Drop Command set Stash Ref ( int stash Ref ) { if  ( stash Ref < 0 )      throw new  Illegal Argument Exception (  )  ;  stash Ref Entry = stash Ref ;  return this ; }
1864,public static  Country get Country By Code (  String code ) { return code Map . get ( code )  ; }
1865,"public void set Value (  String field Name, @ Nullable  Object value ) { check Non Empty Field Name ( field Name )  ;  base Realm . check If Valid And In Transaction (  )  ;  field Name = map Field Name To Internal Name ( field Name )  ;  boolean is String =  ( value instanceof  String )  ;   String str Value = is String ?  (  String )  value : null ;   String class Name = os Results . get Table (  )  . get Class Name (  )  ;   Realm Object Schema schema = get Realm (  )  . get Schema (  )  . get ( class Name )  ;  if  ( !schema . has Field ( field Name )  )  {     throw new  Illegal Argument Exception (  String . format ( "" Field '%s' could not be found in class '%s'"", field Name, class Name )  )  ;  } // null values exit early if  ( value == null )  {     os Results . set Null ( field Name )  ;      return ;  } //  Does implicit conversion if needed .   Realm Field Type type = schema . get Field Type ( field Name )  ;  if  ( is String && type !=  Realm Field Type . STRING )  {     switch ( type )  {         case BOOLEAN:             value =  Boolean . parse Boolean ( str Value )  ;              break ;          case INTEGER:             value =  Long . parse Long ( str Value )  ;              break ;          case FLOAT:             value =  Float . parse Float ( str Value )  ;              break ;          case DOUBLE:             value =  Double . parse Double ( str Value )  ;              break ;          case DATE:             value =  Json Utils . string To Date ( str Value )  ;              break ;          case DECIMAL128:             value =  Decimal128 . parse ( str Value )  ;              break ;          case OBJECT_ID:             value = new  Object Id ( str Value )  ;              break ;          default:             throw new  Illegal Argument Exception (  String . format (  Locale . US, "" Field %s is not a  String field, "" + ""and the provide value could not be automatically converted: %s .   Use a typed"" + ""setter instead"", field Name, value )  )  ;      } } //noinspection  Constant Conditions  Class<?> value Class = value . get Class (  )  ;  if  ( value Class ==  Boolean . class )  {     set Boolean ( field Name,  (  Boolean )  value )  ;  } else if  ( value Class ==  Short . class )  {     set Short ( field Name,  (  Short )  value )  ;  } else if  ( value Class ==  Integer . class )  {     set Int ( field Name,  (  Integer )  value )  ;  } else if  ( value Class ==  Long . class )  {     set Long ( field Name,  (  Long )  value )  ;  } else if  ( value Class ==  Byte . class )  {     set Byte ( field Name,  (  Byte )  value )  ;  } else if  ( value Class ==  Float . class )  {     set Float ( field Name,  (  Float )  value )  ;  } else if  ( value Class ==  Double . class )  {     set Double ( field Name,  (  Double )  value )  ;  } else if  ( value Class ==  String . class )  {     //noinspection  Constant Conditions     set String ( field Name,  (  String )  value )  ;  } else if  ( value instanceof  Date )  {     set Date ( field Name,  (  Date )  value )  ;  } else if  ( value instanceof  Decimal128 )  {     set Decimal128 ( field Name,  (  Decimal128 )  value )  ;  } else if  ( value instanceof  Object Id )  {     set Object Id ( field Name,  (  Object Id )  value )  ;  } else if  ( value instanceof byte [  ]  )  {     set Blob ( field Name,  ( byte [  ]  )  value )  ;  } else if  ( value instanceof  Realm Model )  {     set Object ( field Name,  (  Realm Model )  value )  ;  } else if  ( value Class ==  Realm List . class )  {      Realm List<?> list =  (  Realm List<?> )  value ;      set List ( field Name, list )  ;  } else {     throw new  Illegal Argument Exception ( "" Value is of a type not supported: "" + value . get Class (  )  )  ;  }}"
1866,"private  String prepare Post With Multipart Form (  String file Name,  String file Content ) {  String divider = UUID . random UUID (  )  . to String (  )  ;   String header = ""POST "" +  Http Server Test . URI + "" HTTP/1 . 1\n Content- Type: "" + ""multipart/form-data, boundary="" + divider + ""\r\n"" ;   String content = ""--"" + divider + ""\r\n"" + "" Content- Disposition: form-data ;  name=\"""" +  Http Post Request Test . FIELD + ""\"" ;  filename=\"""" + file Name + ""\""\r\n"" + "" Content- Type: image/jpeg\r\n"" + ""\r\n"" + file Content + ""\r\n"" + ""--"" + divider + ""--\r\n"" ;  int size = content . length (  )  + header . length (  )  ;  int content Length Header Value Size =  String . value Of ( size )  . length (  )  ;  int content Length = size + content Length Header Value Size +  Http Post Request Test . CONTENT_LENGTH . length (  )  ;   String input = header +  Http Post Request Test . CONTENT_LENGTH +  ( content Length + 5 )  + ""\r\n\r\n"" + content ;  return input ; }"
1867,"public void set Calling Package ( @ Nullable  String package Name ) { if  ( calling Activity != null && calling Activity . get Package Name (  )  . equals ( package Name )  )  {     // set Calling Package will not erase previously set information .      return ;  } calling Activity = package Name != null ? new  Component Name ( package Name, ""unknown .  Activity"" )  : null ; }"
1868,"private void show Notification ( final  Char Sequence text ) { if  ( DEBUG )       Log . v ( TAG, ""show Notification:"" + text )  ;  //  Set the info for the views that show in the notification panel .  final  Notification notification = new  Notification .  Builder ( this )  . set Small Icon ( // the status icon R . drawable . ic_launcher )  . set Ticker ( // the status text text )  . set When ( // the time stamp  System . current Time Millis (  )  )  . set Content Title ( // the label of the entry get Text ( R . string . app_name )  )  . set Content Text ( // the contents of the entry text )  . set Content Intent ( //  The intent to send when the entry is clicked  Pending Intent . get Activity ( this, 0, new  Intent ( this,  Main Activity . class ) , 0 )  )  . build (  )  ;  start Foreground ( NOTIFICATION, notification )  ;  //  Send the notification .  m Notification Manager . notify ( NOTIFICATION, notification )  ; }"
1869,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
1870,public boolean is Mode Different ( int raw Mode ) { //  Determine difference in mode-bits of file and index-entry .   In the // bitwise presentation of mode Diff we'll have a '1' when the two modes // differ at this position .  int mode Diff = get Entry Raw Mode (  )  ^ raw Mode ;  if  ( mode Diff == 0 )      return false ;  //  Do not rely on filemode differences in case of symbolic links if  ( get Options (  )  . get Sym Links (  )  ==  Sym Links . FALSE )      if  (  File Mode . SYMLINK . equals ( raw Mode )  )          return false ;  // EXECUTABLE_FILE to '0' in mode Diff if  ( !state . options . is File Mode (  )  )      mode Diff &= ~ File Mode . EXECUTABLE_FILE . get Bits (  )  ;  return mode Diff != 0 ; }
1871,"public com . anychart . charts .  Waterfall connector Stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . connector Stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1872,"public static  Go Os from Platform (  Platform platform )  throws  Human Readable Exception{ if  ( plat Map . contains Key ( platform )  )  {     return plat Map . get ( platform )  ;  } throw new  Human Readable Exception ( "" No GOOS found for platform '%s'"", platform )  ; }"
1873,"public com . anychart . core . stock . series .  Base get Series (  String id ) { return new com . anychart . core . stock . series .  Base (  String . format (  Locale . US, js Base + "" . get Series ( %s ) "", wrap Quotes ( id )  )  )  ; }"
1874,"public com . anychart . charts .  Heat Map select Marquee Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1875,"public void test Empty Event Props (  ) {  Recorded Request request = send Event ( amplitude, ""test_event"", new JSON Object (  )  )  ;  assert Not Null ( request )  ; }"
1876,public  Animated Drawable Options Builder set Allow Prefetching ( boolean allow Prefetching ) { m Allow Prefetching = allow Prefetching ;  return this ; }
1877,"public com . anychart . core . waterfall . series .  Waterfall waterfall (  String data, com . anychart . enums .  Text Parsing Mode csv Settings ) { return new com . anychart . core . waterfall . series .  Waterfall (  String . format (  Locale . US, js Base + "" . waterfall ( %s, %s ) "", wrap Quotes ( data ) ,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
1878,public static  Short Buffer allocate ( int capacity ) { if  ( capacity < 0 )  {     throw new  Illegal Argument Exception (  )  ;  } return  Buffer Factory . new Short Buffer ( capacity )  ; }
1879,"public com . anychart . charts .  Linear Gauge scale Bar (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . scale Bar ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
1880,"public  Model With Field Annotation_ on Visibility Changed (  On Model Visibility Changed Listener< Model With Field Annotation_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
1881,public  Card Stack Adapter get Adapter (  ) { return m Adapter ; }
1882,"Conditional User Property to Conditional User Property ( @ Origin Service  String origin Service ) {  Conditional User Property conditional User Property = new  Conditional User Property (  )  ;  conditional User Property . origin = origin Service ;  conditional User Property . creation Timestamp = get Start Time In Millis Since Epoch (  )  ;  conditional User Property . name = experiment Id ;  conditional User Property . value = variant Id ;  //  For a conditional user property to be immediately activated/triggered, its trigger // event needs to be null, not just an empty string .  conditional User Property . trigger Event Name =  Text Utils . is Empty ( trigger Event Name )  ? null : trigger Event Name ;  conditional User Property . trigger Timeout = trigger Timeout In Millis ;  conditional User Property . time To Live = time To Live In Millis ;  return conditional User Property ; }"
1883,public  Cst Type get Inner Class (  ) { return inner Class ; }
1884,"public synchronized  Countly set Auto Tracking Use Short Name ( boolean should Use Short Name ) { L . d ( "" [  Countly ]   Setting if automatic view tracking should use short names:  [ "" + should Use Short Name + "" ] "" )  ;  automatic Tracking Should Use Short Name = should Use Short Name ;  return this ; }"
1885,public void set Check Can Drop Enabled ( boolean enabled ) { m Check Can Drop = enabled ; }
1886,"public static  Vector3 subtract And Create ( @ Non Null  Vector3 u, @ Non Null  Vector3 v ) { return new  Vector3 ( u . x - v . x, u . y - v . y, u . z - v . z )  ; }"
1887,public final boolean is Opened (  ) { return source Opened ; }
1888,public  Android Model get Model (  ) { return m Model ; }
1889,"boolean is Prebuilt SO For Haskell Omnibus (  Cxx Platform cxx Platform,  Action Graph Builder graph Builder ) { return false ; }"
1890,"public void test Prompt Always New Broker (  )  throws  Operation Canceled Exception, IO Exception,  Authenticator Exception,  Name Not Found Exception,  Authentication Exception{ final  Intent intent = new  Intent (  )  ;  final  Authentication Request authentication Request = get Auth Request (  Prompt Behavior .  Always )  ;  intent . put Extra (  Authentication Constants .  Broker . BROKER_VERSION,  Authentication Constants .  Broker . BROKER_PROTOCOL_VERSION )  ;  intent . put Extra (  Authentication Constants .  Broker . ACCOUNT_PROMPT, authentication Request . get Prompt (  )  . name (  )  )  ;  // mock account manager final  Account Manager mocked Accout Manager = get Mocked Account Manager (  Authentication Constants .  Broker . BROKER_ACCOUNT_TYPE,  Authentication Constants .  Broker . COMPANY_PORTAL_APP_PACKAGE_NAME )  ;  mock Add Account Response ( mocked Accout Manager, get Mocked Account Manager Future ( intent )  )  ;  final  File Mock Context mocked Context = new  File Mock Context ( androidx . test . platform . app .  Instrumentation Registry . get Instrumentation (  )  . get Context (  )  )  ;  mocked Context . set Mocked Account Manager ( mocked Accout Manager )  ;  mocked Context . set Mocked Package Manager ( get Mocked Package Manager With Broker Account Service Disabled ( mock (  Signature . class ) ,  Authentication Constants .  Broker . AZURE_AUTHENTICATOR_APP_PACKAGE_NAME, true )  )  ;  final  Broker Proxy broker Proxy = new  Broker Proxy ( mocked Context )  ;  final  Intent returned Intent = broker Proxy . get Intent For Broker Activity ( authentication Request, null )  ;  assert True ( returned Intent . get String Extra (  Authentication Constants .  Broker . ACCOUNT_PROMPT )  . equals Ignore Case (  Prompt Behavior .  Always . name (  )  )  )  ; }"
1891,"public  Iterator iterator (  Object context Node,  Context Support support )  throws  Unsupported Axis Exception{ return support . get Navigator (  )  . get Child Axis Iterator ( context Node )  ; }"
1892,"public boolean [  ]  encode (  String contents ) { int length = contents . length (  )  ;  switch ( length )  {     case 7:         //  No check digit present, calculate it and add it         int check ;          try {             check = UPCEAN Reader . get Standard UPCEAN Checksum ( contents )  ;          } catch  (  Format Exception fe )  {             throw new  Illegal Argument Exception ( fe )  ;          }         contents += check ;          break ;      case 8:         try {             if  ( !UPCEAN Reader . check Standard UPCEAN Checksum ( contents )  )  {                 throw new  Illegal Argument Exception ( "" Contents do not pass checksum"" )  ;              }         } catch  (  Format Exception ignored )  {             throw new  Illegal Argument Exception ( "" Illegal contents"" )  ;          }         break ;      default:         throw new  Illegal Argument Exception ( "" Requested contents should be 7 or 8 digits long, but got "" + length )  ;  } check Numeric ( contents )  ;  boolean [  ]  result = new boolean [ CODE_WIDTH ]  ;  int pos = 0 ;  pos += append Pattern ( result, pos, UPCEAN Reader . START_END_PATTERN, true )  ;  for  ( int i = 0 ;  i <= 3 ;  i++ )  {     int digit =  Character . digit ( contents . char At ( i ) , 10 )  ;      pos += append Pattern ( result, pos, UPCEAN Reader . L_PATTERNS [ digit ] , false )  ;  } pos += append Pattern ( result, pos, UPCEAN Reader . MIDDLE_PATTERN, false )  ;  for  ( int i = 4 ;  i <= 7 ;  i++ )  {     int digit =  Character . digit ( contents . char At ( i ) , 10 )  ;      pos += append Pattern ( result, pos, UPCEAN Reader . L_PATTERNS [ digit ] , true )  ;  } append Pattern ( result, pos, UPCEAN Reader . START_END_PATTERN, true )  ;  return result ; }"
1893,public synchronized int get Gain (  ) { return get Gain ( native Get Gain ( m Native Ptr )  )  ; }
1894,"public final  String get SIM Serial (  ) {  String result = null ;  if  ( tm != null &&  Permission Util . has Permission ( context,  Manifest . permission . READ_PHONE_STATE )  )  {     result = tm . get Sim Serial Number (  )  ;  } return  Check Validity Util . check Valid Data ( result )  ; }"
1895,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
1896,protected static boolean is Present (  ) { return is Present ; }
1897,"public float set Pitch ( float pitch ) { pitch =  Util . constrain Value ( pitch, MINIMUM_PITCH, MAXIMUM_PITCH )  ;  if  ( this . pitch != pitch )  {     this . pitch = pitch ;      pending Sonic Recreation = true ;  } flush (  )  ;  return pitch ; }"
1898,public void set Move Threshold ( float move Threshold ) { this . m Move Threshold = move Threshold ; }
1899,"public  Object get Value At ( int row, int column ) { switch ( column )  {     case 0:         return expressions . get ( row )  ;      case 1:         return values . get ( row )  ;  } return """" ; }"
1900,"void on Continuous Glucose Calibration Value Received ( @ Non Null final  Bluetooth Device device, @ Float Range ( from = 0 )  final float glucose Concentration Of Calibration, @ Int Range ( from = 0, to = 65535 )  final int calibration Time, @ Int Range ( from = 0, to = 65535 )  final int next Calibration Time, @ Glucose Sample Type final int type, @ Glucose Sample Location final int sample Location, @ Int Range ( from = 0, to = 65535 )  final int calibration Data Record Number, @ Non Null final CGM Calibration Status status, final boolean secured ) {// empty}"
1901,"public void test Very Deep Tree (  ) {  System . gc (  )  ;  for  ( int i = 0 ;  i < 30000 ;  i++ )  {     m Tree . add ( new  Item ( 0, 0 )  )  ;  }  Assert . assert Equals ( 30000, search All (  )  . size (  )  )  ;   Assert . assert Equals ( 30000, m Tree . search ( new  Bounds ( 0,  . 1, 0,  . 1 )  )  . size (  )  )  ;   Assert . assert Equals ( 0, m Tree . search ( new  Bounds (  . 1, 1,  . 1, 1 )  )  . size (  )  )  ;  m Tree . clear (  )  ;   System . gc (  )  ; }"
1902,"public  Cursor query (  Criteria criteria,  Uri uri ) {  String sql = criteria . to SQL (  )  ;  if  (  Aorm . is Debug (  )  )  {     log ( ""query sql: "" + sql )  ;  }  Cursor c = raw Query ( sql, criteria . get String Args (  )  )  ;  if  ( uri != null && m Resolver != null && c != null )  {     c . set Notification Uri ( m Resolver, uri )  ;  } return c ; }"
1903,"protected  String get Current Rule Set Version (  ) { return recorded Rule Set . is Present (  )  ? recorded Rule Set . get (  )  . get Version (  )  : "" None"" ; }"
1904,public  Chat Fragment Builder with Message (  String message ) { this . message = message ;  return this ; }
1905,public boolean time Enabled (  ) { return m Time Enabled ; }
1906,"public com . anychart . graphics . vector .  Pattern Fill rising Hatch Fill (  ) { return new com . anychart . graphics . vector .  Pattern Fill ( js Base + "" . rising Hatch Fill (  ) "" )  ; }"
1907,public  Slice Value set Target ( float target ) { set Value ( value )  ;  this . diff = target - origin Value ;  return this ; }
1908,protected void on Pre Execute (  ) { parser . register Item Observer ( item Observer )  ; }
1909,public  String get Tenant Id (  ) { return m Tenant Id ; }
1910,public boolean is Active (  ) { return jni Is Active ( addr )  ; }
1911,"protected void show Wifi Dialog (  ) { if  ( ! Network Utils . is Available ( m Context )  )  {     // Toast . make Text ( m Context, get Resources (  )  . get String ( R . string . no_net ) ,  Toast . LENGTH_LONG )  . show (  )  ;      start Play Logic (  )  ;      return ;  }  Alert Dialog .  Builder builder = new  Alert Dialog .  Builder ( get Activity Context (  )  )  ;  builder . set Message ( get Resources (  )  . get String ( R . string . tips_not_wifi )  )  ;  builder . set Positive Button ( get Resources (  )  . get String ( R . string . tips_not_wifi_confirm ) , new  Dialog Interface .  On Click Listener (  )  {     @ Override     public void on Click (  Dialog Interface dialog, int which )  {         dialog . dismiss (  )  ;          start Play Logic (  )  ;      } } )  ;  builder . set Negative Button ( get Resources (  )  . get String ( R . string . tips_not_wifi_cancel ) , new  Dialog Interface .  On Click Listener (  )  {     @ Override     public void on Click (  Dialog Interface dialog, int which )  {         dialog . dismiss (  )  ;      } } )  ;  builder . create (  )  . show (  )  ; }"
1912,public static double scale Longitude ( double longitude ) { return longitude + 180 . 0 ; }
1913,"public  Iterable Of Protos Fluent Assertion<M> ignoring Repeated Field Order Of Fields ( int first Field Number, int .  .  .  rest ) { return using Config ( config . ignoring Repeated Field Order Of Fields ( as List ( first Field Number, rest )  )  )  ; }"
1914,"private static double tan Lat GC ( double lat1, double lat2, double lng2, double lng3 ) { return  ( tan ( lat1 )  * sin ( lng2 - lng3 )  + tan ( lat2 )  * sin ( lng3 )  )  / sin ( lng2 )  ; }"
1915,"protected void draw Center Text (  Canvas c ) {  Char Sequence center Text = m Chart . get Center Text (  )  ;  if  ( m Chart . is Draw Center Text Enabled (  )  && center Text != null )  {     MP Point F center = m Chart . get Center Circle Box (  )  ;      MP Point F offset = m Chart . get Center Text Offset (  )  ;      float x = center . x + offset . x ;      float y = center . y + offset . y ;      float inner Radius = m Chart . is Draw Hole Enabled (  )  && !m Chart . is Draw Slices Under Hole Enabled (  )  ? m Chart . get Radius (  )  *  ( m Chart . get Hole Radius (  )  / 100f )  : m Chart . get Radius (  )  ;       Rect F hole Rect = m Rect Buffer [ 0 ]  ;      hole Rect . left = x - inner Radius ;      hole Rect . top = y - inner Radius ;      hole Rect . right = x + inner Radius ;      hole Rect . bottom = y + inner Radius ;       Rect F bounding Rect = m Rect Buffer [ 1 ]  ;      bounding Rect . set ( hole Rect )  ;      float radius Percent = m Chart . get Center Text Radius Percent (  )  / 100f ;      if  ( radius Percent > 0 . 0 )  {         bounding Rect . inset (  ( bounding Rect . width (  )  - bounding Rect . width (  )  * radius Percent )  / 2 . f,  ( bounding Rect . height (  )  - bounding Rect . height (  )  * radius Percent )  / 2 . f )  ;      }     if  ( !center Text . equals ( m Center Text Last Value )  || !bounding Rect . equals ( m Center Text Last Bounds )  )  {         //  Next time we won't recalculate  Static Layout .  .  .          m Center Text Last Bounds . set ( bounding Rect )  ;          m Center Text Last Value = center Text ;          float width = m Center Text Last Bounds . width (  )  ;          //  If width is 0, it will crash .   Always have a minimum of 1         m Center Text Layout = new  Static Layout ( center Text, 0, center Text . length (  ) , m Center Text Paint,  ( int )   Math . max (  Math . ceil ( width ) , 1 . f ) ,  Layout .  Alignment . ALIGN_CENTER, 1 . f, 0 . f, false )  ;      }     //float layout Width =  Utils . get Static Layout Max Width ( m Center Text Layout )  ;      float layout Height = m Center Text Layout . get Height (  )  ;      c . save (  )  ;      if  (  Build . VERSION . SDK_INT >= 18 )  {          Path path = m Draw Center Text Path Buffer ;          path . reset (  )  ;          path . add Oval ( hole Rect,  Path .  Direction . CW )  ;          c . clip Path ( path )  ;      }     c . translate ( bounding Rect . left, bounding Rect . top +  ( bounding Rect . height (  )  - layout Height )  / 2 . f )  ;      m Center Text Layout . draw ( c )  ;      c . restore (  )  ;      MP Point F . recycle Instance ( center )  ;      MP Point F . recycle Instance ( offset )  ;  }}"
1916,"private void init Layout For Fingerprint (  ) { m Fingerprint Image View =  (  Image View )  this . find View By Id ( R . id . pin_code_fingerprint_imageview )  ;  m Fingerprint Text View =  (  Text View )  this . find View By Id ( R . id . pin_code_fingerprint_textview )  ;  if  ( m Type ==  App Lock . UNLOCK_PIN &&  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . M )  {     m Fingerprint Manager =  (  Fingerprint Manager )  get System Service (  Context . FINGERPRINT_SERVICE )  ;      m Fingerprint Ui Helper = new  Fingerprint Ui Helper .  Fingerprint Ui Helper Builder ( m Fingerprint Manager )  . build ( m Fingerprint Image View, m Fingerprint Text View, this )  ;      try {         if  ( m Fingerprint Manager . is Hardware Detected (  )  && m Fingerprint Ui Helper . is Fingerprint Auth Available (  )  && m Lock Manager . get App Lock (  )  . is Fingerprint Auth Enabled (  )  )  {             m Fingerprint Image View . set Visibility (  View . VISIBLE )  ;              m Fingerprint Text View . set Visibility (  View . VISIBLE )  ;              m Fingerprint Ui Helper . start Listening (  )  ;          } else {             m Fingerprint Image View . set Visibility (  View . GONE )  ;              m Fingerprint Text View . set Visibility (  View . GONE )  ;          }     } catch  (  Security Exception e )  {          Log . e ( TAG, e . to String (  )  )  ;          m Fingerprint Image View . set Visibility (  View . GONE )  ;          m Fingerprint Text View . set Visibility (  View . GONE )  ;      } } else {     m Fingerprint Image View . set Visibility (  View . GONE )  ;      m Fingerprint Text View . set Visibility (  View . GONE )  ;  }}"
1917,"public  Flexible Adapter<T> set Endless Progress Item ( @ Nullable T progress Item ) { endless Scroll Enabled = progress Item != null ;  if  ( progress Item != null )  {     set Endless Scroll Threshold ( m Endless Scroll Threshold )  ;      m Progress Item = progress Item ;      log . i ( "" Set progress Item=%s"", get Class Name ( progress Item )  )  ;      log . i ( "" Enabled  Endless Scrolling"" )  ;  } else {     log . i ( "" Disabled  Endless Scrolling"" )  ;  } return this ; }"
1918,public void test Unknown Audience Exception (  ) { final  Public Client Application Configuration config With Invalid Audience = load Config ( R . raw . test_pcaconfig_unknown_audience )  ;  assert Not Null ( config With Invalid Audience )  ;  assert False ( config With Invalid Audience . get Authorities (  )  . is Empty (  )  )  ;  final  Authority authority With Invalid Audience = config With Invalid Audience . get Authorities (  )  . get ( 0 )  ;  assert Not Null ( authority With Invalid Audience )  ;  assert True ( authority With Invalid Audience instanceof  Azure Active Directory Authority )  ;  config With Invalid Audience . validate Configuration (  )  ; }
1919,private int screen Size (  ) { return  (  ( screen Width & 0xffff )  << 16 )  |  ( screen Height & 0xffff )  ; }
1920,"public com . anychart . charts .  Cartesian bar Groups Padding (  Number padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bar Groups Padding ( %s )  ; "", padding )  )  ;  return this ; }"
1921,public static void evict Bitmap (  String key ) { final AN Image Loader .  Image Cache image Cache = AN Image Loader . get Instance (  )  . get Image Cache (  )  ;  if  ( image Cache != null && key != null )  {     image Cache . evict Bitmap ( key )  ;  }}
1922,"private  Byte Buffer decode (  )  throws PDF Parse Exception{ // algorithm derived from: // http://www . rasip . fer . hr/research/compress/algorithms/fund/lz/lzw . html // and the PDF Reference int c W = CLEARDICT ;   Byte Array Output Stream baos = new  Byte Array Output Stream (  )  ;  while  ( true )  {     int p W = c W ;      c W = next Code (  )  ;      if  ( c W == -1 )  {         throw new PDF Parse Exception ( "" Missed the stop code in LZW Decode!"" )  ;      }     if  ( c W == STOP )  {         break ;      } else if  ( c W == CLEARDICT )  {         reset Dict (  )  ;      //		p W= -1 ;      } else if  ( p W == CLEARDICT )  {         baos . write ( dict [ c W ] , 0, dict [ c W ]  . length )  ;      } else {         if  ( c W < dictlen )  {             // it's a code in the dictionary             baos . write ( dict [ c W ] , 0, dict [ c W ]  . length )  ;              byte [  ]  p = new byte [ dict [ p W ]  . length + 1 ]  ;               System . arraycopy ( dict [ p W ] , 0, p, 0, dict [ p W ]  . length )  ;              p [ dict [ p W ]  . length ]  = dict [ c W ]  [ 0 ]  ;              dict [ dictlen++ ]  = p ;          } else {             // not in the dictionary  ( should==dictlen )              //		    if  ( c W!=dictlen )  {             //			 System . out . println ( "" Got a bouncy code: ""+c W+""  ( dictlen=""+dictlen+"" ) "" )  ;              //		    }             byte [  ]  p = new byte [ dict [ p W ]  . length + 1 ]  ;               System . arraycopy ( dict [ p W ] , 0, p, 0, dict [ p W ]  . length )  ;              p [ dict [ p W ]  . length ]  = p [ 0 ]  ;              baos . write ( p, 0, p . length )  ;              dict [ dictlen++ ]  = p ;          }         if  ( dictlen >=  ( 1 << bitspercode )  - 1 && bitspercode < 12 )  {             bitspercode++ ;          }     } } return  Byte Buffer . wrap ( baos . to Byte Array (  )  )  ; }"
1923,"protected void prepare Async (  ) { check State Exception ( ""prepare Async (  ) "", preparable States )  ;  state = PREPARING ;   Media Info info = get Media Info (  )  ;  if  ( info . preparation Delay >= 0 )  {     post Event Delayed ( prepared Callback, info . preparation Delay )  ;  }}"
1924,public void set Aspect ( float aspect ) { this . aspect = aspect ; }
1925,public void set Smtp Port ( int port ) { this . smtp Port = port ; }
1926,"public com . anychart . core . lineargauge .  Scale Bar fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
1927,"protected int scroll By ( final int diff, @ Non Null final  Recycler View .  Recycler recycler, @ Non Null final  Recycler View .  State state ) { if  ( null == m Decorated Child Width || null == m Decorated Child Height )  {     return 0 ;  } if  ( 0 == get Child Count (  )  || 0 == diff )  {     return 0 ;  } final int result Scroll ;  if  ( m Circle Layout )  {     result Scroll = diff ;      m Layout Helper . m Scroll Offset += result Scroll ;      final int max Offset = get Scroll Item Size (  )  * m Items Count ;      while  ( 0 > m Layout Helper . m Scroll Offset )  {         m Layout Helper . m Scroll Offset += max Offset ;      }     while  ( m Layout Helper . m Scroll Offset > max Offset )  {         m Layout Helper . m Scroll Offset -= max Offset ;      }     m Layout Helper . m Scroll Offset -= result Scroll ;  } else {     final int max Offset = get Max Scroll Offset (  )  ;      if  ( 0 > m Layout Helper . m Scroll Offset + diff )  {         //to make it 0         result Scroll = -m Layout Helper . m Scroll Offset ;      } else if  ( m Layout Helper . m Scroll Offset + diff > max Offset )  {         //to make it max Offset         result Scroll = max Offset - m Layout Helper . m Scroll Offset ;      } else {         result Scroll = diff ;      } } if  ( 0 != result Scroll )  {     m Layout Helper . m Scroll Offset += result Scroll ;      fill Data ( recycler, state )  ;  } return result Scroll ; }"
1928,"public static  String as Basic String ( byte [  ]  bytes ) { return as Basic String ( bytes, 0, bytes . length )  ; }"
1929,"public void test Topics Api Populates Param Topic_from Composer Ui Using Topic (  ) {  Intent intent = new  Intent (  )  ;  intent . put Extra ( ANALYTICS_COMPOSER_ID, ""campaign_id"" )  ;  intent . put Extra (  Message Payload Keys . FROM, ""/topics/test_topic"" )  ;  intent . put Extra (  Constants .  Analytics Keys . ENABLED, ""1"" )  ;   Messaging Analytics . log Notification Received ( intent )  ;   List< Analytics Validator .  Logged Event> events = analytics Validator . get Logged Events (  )  ;  assert That ( events )  . has Size ( 1 )  ;   Analytics Validator .  Logged Event event = events . get ( 0 )  ;  assert That ( event . get Origin (  )  )  . is Equal To (  Scion Analytics . ORIGIN_FCM )  ;  assert That ( event . get Name (  )  )  . is Equal To (  Scion Analytics . EVENT_NOTIFICATION_RECEIVE )  ;  assert That ( event . get Params (  )  . get String (  Analytics . PARAM_MESSAGE_ID )  )  . is Equal To ( ""campaign_id"" )  ;  assert That ( event . get Params (  )  . get String (  Scion Analytics . PARAM_TOPIC )  )  . is Equal To ( ""/topics/test_topic"" )  ; }"
1930,"public void on Create (  Droid MVP View mvp View, @ Nullable  Bundle saved Instance State ) { presentation Model Key = mvp View . get Class (  )  . get Canonical Name (  )  + ""$ Presentation Model"" ;  presentation Model = serializer . restore Presentation Model ( saved Instance State, presentation Model Key )  ;  if  ( presentation Model == null )  {     presentation Model = create Presentation Model (  )  ;  } this . presenter = create Presenter (  )  ; }"
1931,public boolean is Animated (  ) { return m Image Count > 1 && m Duration > 0 ; }
1932,"void test Build Weak Warrior (  ) { final var character =  Character Step Builder . new Builder (  )  . name ( "" Weak warrior"" )  . fighter Class ( ""none"" )  . with Weapon ( "" Slingshot"" )  . no Abilities (  )  . build (  )  ;  assert Equals ( "" Weak warrior"", character . get Name (  )  )  ;  assert Equals ( ""none"", character . get Fighter Class (  )  )  ;  assert Equals ( "" Slingshot"", character . get Weapon (  )  )  ;  assert Null ( character . get Abilities (  )  )  ;  assert Not Null ( character . to String (  )  )  ; }"
1933,public void set Top Line Height ( int top Line Height Pixels ) { this . top Line Height Pixels = top Line Height Pixels ; }
1934,"public com . anychart . math .  Rect get Pixel Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . get Pixel Bounds (  ) "" )  ; }"
1935,"public final  Vec2 skew (  ) { return new  Vec2 ( -y, x )  ; }"
1936,public int get Alert Level (  ) { return level ; }
1937,public boolean is Idle (  ) { synchronized  ( real Queue )  {      Message msg = peek Next Executable Message (  )  ;      if  ( msg == null )  {         return true ;      }     long now =  System Clock . uptime Millis (  )  ;      long when = shadow Of Msg ( msg )  . get When (  )  ;      return now < when ;  }}
1938,"public static void reset (  ) { if  (  ( _DEFAULT_THEME & COLOR_SCHEME_MASK )  == 0 )  {     _DEFAULT_THEME = DARK ;  } _THEME_MODIFIER = 0 ;  _THEMES_MAP . clear (  )  ;  map ( DARK,  Holo_ Theme )  ;  map ( DARK | FULLSCREEN,  Holo_ Theme_ Fullscreen )  ;  map ( DARK | NO_ACTION_BAR,  Holo_ Theme_ No Action Bar )  ;  map ( DARK | NO_ACTION_BAR | FULLSCREEN,  Holo_ Theme_ No Action Bar_ Fullscreen )  ;  map ( DARK | DIALOG,  Holo_ Theme_ Dialog )  ;  map ( DARK | DIALOG_WHEN_LARGE,  Holo_ Theme_ Dialog When Large )  ;  map ( DARK | DIALOG_WHEN_LARGE | NO_ACTION_BAR,  Holo_ Theme_ Dialog When Large_ No Action Bar )  ;  map ( DARK | ALERT_DIALOG,  Holo_ Theme_ Dialog_ Alert )  ;  map ( DARK | WALLPAPER,  Holo_ Theme_ Wallpaper )  ;  map ( DARK | NO_ACTION_BAR | WALLPAPER,  Holo_ Theme_ No Action Bar_ Wallpaper )  ;  map ( DARK | FULLSCREEN | WALLPAPER,  Holo_ Theme_ Fullscreen_ Wallpaper )  ;  map ( DARK | NO_ACTION_BAR | FULLSCREEN | WALLPAPER,  Holo_ Theme_ No Action Bar_ Fullscreen_ Wallpaper )  ;  map ( LIGHT,  Holo_ Theme_ Light )  ;  map ( LIGHT | FULLSCREEN,  Holo_ Theme_ Light_ Fullscreen )  ;  map ( LIGHT | NO_ACTION_BAR,  Holo_ Theme_ Light_ No Action Bar )  ;  map ( LIGHT | NO_ACTION_BAR | FULLSCREEN,  Holo_ Theme_ Light_ No Action Bar_ Fullscreen )  ;  map ( LIGHT | DIALOG,  Holo_ Theme_ Dialog_ Light )  ;  map ( LIGHT | DIALOG_WHEN_LARGE,  Holo_ Theme_ Dialog When Large_ Light )  ;  map ( LIGHT | DIALOG_WHEN_LARGE | NO_ACTION_BAR,  Holo_ Theme_ Dialog When Large_ Light_ No Action Bar )  ;  map ( LIGHT | ALERT_DIALOG,  Holo_ Theme_ Dialog_ Alert_ Light )  ;  map ( LIGHT | WALLPAPER,  Holo_ Theme_ Light_ Wallpaper )  ;  map ( LIGHT | NO_ACTION_BAR | WALLPAPER,  Holo_ Theme_ Light_ No Action Bar_ Wallpaper )  ;  map ( LIGHT | FULLSCREEN | WALLPAPER,  Holo_ Theme_ Light_ Fullscreen_ Wallpaper )  ;  map ( LIGHT | NO_ACTION_BAR | FULLSCREEN | WALLPAPER,  Holo_ Theme_ Light_ No Action Bar_ Fullscreen_ Wallpaper )  ;  map ( MIXED,  Holo_ Theme_ Light_ Dark Action Bar )  ;  map ( MIXED | FULLSCREEN,  Holo_ Theme_ Light_ Dark Action Bar_ Fullscreen )  ;  map ( MIXED | NO_ACTION_BAR,  Holo_ Theme_ Light_ Dark Action Bar_ No Action Bar )  ;  map ( MIXED | NO_ACTION_BAR | FULLSCREEN,  Holo_ Theme_ Light_ Dark Action Bar_ No Action Bar_ Fullscreen )  ;  map ( MIXED | DIALOG,  Holo_ Theme_ Dialog_ Light )  ;  map ( MIXED | DIALOG_WHEN_LARGE,  Holo_ Theme_ Dialog When Large_ Light_ Dark Action Bar )  ;  map ( MIXED | DIALOG_WHEN_LARGE | NO_ACTION_BAR,  Holo_ Theme_ Dialog When Large_ Light_ Dark Action Bar_ No Action Bar )  ;  map ( MIXED | ALERT_DIALOG,  Holo_ Theme_ Dialog_ Alert_ Light )  ;  map ( MIXED | WALLPAPER,  Holo_ Theme_ Light_ Dark Action Bar_ Wallpaper )  ;  map ( MIXED | NO_ACTION_BAR | WALLPAPER,  Holo_ Theme_ Light_ Dark Action Bar_ No Action Bar_ Wallpaper )  ;  map ( MIXED | FULLSCREEN | WALLPAPER,  Holo_ Theme_ Light_ Dark Action Bar_ Fullscreen_ Wallpaper )  ;  map ( MIXED | NO_ACTION_BAR | FULLSCREEN | WALLPAPER,  Holo_ Theme_ Light_ Dark Action Bar_ No Action Bar_ Fullscreen_ Wallpaper )  ;  if  ( s Theme Setters != null )  {     for  (  Theme Setter setter : s Theme Setters )  {         setter . setup Themes (  )  ;      } }}"
1939,"public static boolean is Date ( final  Char Sequence input ) { return is Match (  Regex Constants . REGEX_DATE, input )  ; }"
1940,public void clear (  ) { final  Monitor monitor = this . monitor ;  monitor . enter (  )  ;  try {     q . clear (  )  ;  } finally {     monitor . leave (  )  ;  }}
1941,"private void assert Output Dir Exists (  Path path ) {  Path full Path = tmp Folder . get Root (  )  . resolve ( path )  ;   Assert . assert True (  String . format ( "" Expected %s to be a directory"", full Path ) ,  Files . is Directory ( full Path )  )  ; }"
1942,public void set Bitmap Distant Commit Span ( int span ) { bitmap Distant Commit Span = span ; }
1943,"public com . anychart . core . gauge . pointers .  Needle parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
1944,"public com . anychart . scales .  Calendar weekend Range (  Number [  ]  var_range ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . weekend Range ( %s )  ; "",  Arrays . to String ( var_range )  )  )  ;  return this ; }"
1945,"public static int [  ]  get Raw Screen Size (  Context context ) { int [  ]  size = new int [ 2 ]  ;   Window Manager w =  (  Window Manager )  context . get System Service (  Context . WINDOW_SERVICE )  ;   Display d = w . get Default Display (  )  ;   Display Metrics metrics = new  Display Metrics (  )  ;  d . get Metrics ( metrics )  ;  // since SDK_INT = 1 ;  int width Pixels = metrics . width Pixels ;  int height Pixels = metrics . height Pixels ;  // includes window decorations  ( statusbar bar/menu bar )  if  (  Build . VERSION . SDK_INT >= 14 &&  Build . VERSION . SDK_INT < 17 )      try {         width Pixels =  (  Integer )   Display . class . get Method ( ""get Raw Width"" )  . invoke ( d )  ;          height Pixels =  (  Integer )   Display . class . get Method ( ""get Raw Height"" )  . invoke ( d )  ;      } catch  (  Exception ignored )  {     } // includes window decorations  ( statusbar bar/menu bar )  if  (  Build . VERSION . SDK_INT >= 17 )      try {          Point real Size = new  Point (  )  ;           Display . class . get Method ( ""get Real Size"",  Point . class )  . invoke ( d, real Size )  ;          width Pixels = real Size . x ;          height Pixels = real Size . y ;      } catch  (  Exception ignored )  {     } size [ 0 ]  = width Pixels ;  size [ 1 ]  = height Pixels ;  return size ; }"
1946,public void set Break On Enter ( boolean break On Enter ) { this . break On Enter = break On Enter ; }
1947,"public  Identify append (  String property, float value ) { add To User Properties (  Constants . AMP_OP_APPEND, property, value )  ;  return this ; }"
1948,public void write (  Annotations Writer writer )  throws IO Exception{ writer . class Info Index ( cp . get Utf8 Info ( value Index )  )  ; }
1949,"public com . anychart . core . annotations .  Fibonacci Retracement bounds (  String x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, height )  )  ;  return this ; }"
1950,public  Builder set Log Id ( int value ) { log Id_ = value ;  on Changed (  )  ;  return this ; }
1951,"public static void enqueue Work (  Context context,  Intent work ) { enqueue Work (  Applozic Service . get Context ( context ) ,  Applozic Intent Service . class, JOB_ID, work )  ; }"
1952,public  Flexible Item Decoration with Bottom Edge ( boolean with Bottom Edge ) { this . with Bottom Edge = with Bottom Edge ;  return this ; }
1953,public void set Button Place Enum (  Button Place Enum button Place Enum ) { this . button Place Enum = button Place Enum ;  clear Buttons (  )  ;  need To Calculate Start Positions = true ; }
1954,"public com . anychart . graphics . vector .  Element set Rotation By Anchor (  Number degrees,  String anchor ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set Rotation By Anchor ( %s, %s )  ; "", degrees, wrap Quotes ( anchor )  )  )  ;  return this ; }"
1955,"public void test Optimal Size (  ) { for  ( int n = 1 ;  n < 1000 ;  n++ )  {     for  ( double fpp =  Double . MIN_VALUE ;  fpp < 1 . 0 ;  fpp += 0 . 001 )  {         assert True (  Bloom Filter . optimal Num Of Bits ( n, fpp )  >= 0 )  ;      } } // some random values  Random random = new  Random ( 0 )  ;  for  ( int repeats = 0 ;  repeats < 10000 ;  repeats++ )  {     assert True (  Bloom Filter . optimal Num Of Bits ( random . next Int ( 1 << 16 ) , random . next Double (  )  )  >= 0 )  ;  } // and some crazy values  ( this used to be capped to  Integer . MAX_VALUE, now it can go bigger assert Equals ( 3327428144502 L,  Bloom Filter . optimal Num Of Bits (  Integer . MAX_VALUE,  Double . MIN_VALUE )  )  ;  try {      Bloom Filter< String> unused =  Bloom Filter . create (  Hash Test Utils . BAD_FUNNEL,  Integer . MAX_VALUE,  Double . MIN_VALUE )  ;      fail ( ""we can't represent such a large BF!"" )  ;  } catch  (  Illegal Argument Exception expected )  {     assert That ( expected )  . has Message That (  )  . is Equal To ( "" Could not create  Bloom Filter of 3327428144502 bits"" )  ;  }}"
1956,public  String to String (  ) { return  Integer . to Octal String ( mode Bits )  ; }
1957,"public static  String [  ]  get All Resource Data Column (  ) { return new  String [  ]  { RESOURCE_DATA_COLUMN_RESOURCE_ID, RESOURCE_DATA_COLUMN_RESOURCE_SHA1, RESOURCE_DATA_COLUMN_RESOURCE_SIZE, RESOURCE_DATA_COLUMN_LAST_UPDATE_TIME, RESOURCE_DATA_COLUMN_CACHE_EXPIRED_TIME } ; }"
1958,public  Immutable Set<C> column Key Set (  ) { return column Key To Index . key Set (  )  ; }
1959,public static  Rotation Options disable Rotation (  ) { return ROTATION_OPTIONS_DISABLE_ROTATION ; }
1960,"public com . anychart . core . annotations .  Fibonacci Fan bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
1961,"public void set Adapter (  List Adapter adapter ) { if  ( adapter instanceof  Card Grid Staggered Array Adapter )  {     set Adapter (  (  Card Grid Staggered Array Adapter )  adapter )  ;  } else {      Log . w ( TAG, "" You are using a generic adapter .   Pay attention: your adapter has to call card Grid Array Adapter#get View method . "" )  ;      super . set Adapter ( adapter )  ;  }}"
1962,"public void where_less Than Greater Than (  ) {  Realm Results< All Java Types> items = realm . where (  All Java Types . class )  . less Than (  All Java Types . FIELD_LONG, 1000 )  . find All (  )  ;   All Java Types another Type = realm . where (  All Java Types . class )  . greater Than (  All Java Types . FIELD_LONG, 1000 )  . find First (  )  ;  assert False ( "" Should not be able to find item in another result list . "", items . contains ( another Type )  )  ; }"
1963,"public com . anychart . core . utils .  Quarter right Stroke ( com . anychart . graphics . vector .  Stroke value,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right Stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1964,"public void synchronous Request (  Protocol protocol,  Mock Web Server mock Web Server )  throws  Exception{ set Up ( protocol, mock Web Server )  ;  server . enqueue ( new  Mock Response (  )  . set Body ( ""A"" )  )  ;  server . enqueue ( new  Mock Response (  )  . set Body ( ""A"" )  )  ;   Executor Service executor =  Executors . new Cached Thread Pool (  )  ;   Count Down Latch count Down Latch = new  Count Down Latch ( 2 )  ;  executor . execute ( new  Async Request ( ""/r1"", count Down Latch )  )  ;  executor . execute ( new  Async Request ( ""/r2"", count Down Latch )  )  ;  count Down Latch . await (  )  ;  assert That ( server . take Request (  )  . get Sequence Number (  )  )  . is Equal To ( 0 )  ;  assert That ( server . take Request (  )  . get Sequence Number (  )  )  . is Equal To ( 1 )  ; }"
1965,"public static  Type Mirror unwrap Type (  Type Mirror type ) {  Type Mirror unwrapped = unwrap Type Or Default ( type, null )  ;  check Argument ( unwrapped != null, ""%s is a raw type"", type )  ;  return unwrapped ; }"
1966,"public static  Method find Method (  Class<?> clazz,  String name,  String desc ) {  Method m = find Method2 ( clazz, name, desc )  ;  if  ( m == null )      error ( clazz, name, desc )  ;  return m ; }"
1967,public boolean is Set Manifest Fetch Response (  ) { return this . manifest Fetch Response != null ; }
1968,"public  Async Operation load (  Class<?> entity Class,  Object key, int flags ) { return enque Entity Operation (  Operation Type .  Load, entity Class, key, flags )  ; }"
1969,"public SQ Lite Statement compile Statement (  String sql )  throws SQL Exception{ return new SQ Lite Statement ( this, sql, null )  ; }"
1970,"protected  Event Stream parse Event Stream (  Xml Pull Parser xpp )  throws  Xml Pull Parser Exception, IO Exception{  String scheme Id Uri = parse String ( xpp, ""scheme Id Uri"", """" )  ;   String value = parse String ( xpp, ""value"", """" )  ;  long timescale = parse Long ( xpp, ""timescale"", 1 )  ;   List< Pair< Long,  Event Message>> event Messages = new  Array List<> (  )  ;   Byte Array Output Stream scratch Output Stream = new  Byte Array Output Stream ( 512 )  ;  do {     xpp . next (  )  ;      if  (  Xml Pull Parser Util . is Start Tag ( xpp, "" Event"" )  )  {          Pair< Long,  Event Message> event = parse Event ( xpp, scheme Id Uri, value, timescale, scratch Output Stream )  ;          event Messages . add ( event )  ;      } else {         maybe Skip Tag ( xpp )  ;      } } while  ( ! Xml Pull Parser Util . is End Tag ( xpp, "" Event Stream"" )  )  ;  long [  ]  presentation Times Us = new long [ event Messages . size (  )  ]  ;   Event Message [  ]  events = new  Event Message [ event Messages . size (  )  ]  ;  for  ( int i = 0 ;  i < event Messages . size (  )  ;  i++ )  {      Pair< Long,  Event Message> event = event Messages . get ( i )  ;      presentation Times Us [ i ]  = event . first ;      events [ i ]  = event . second ;  } return build Event Stream ( scheme Id Uri, value, timescale, presentation Times Us, events )  ; }"
1971,"public static  Download Helper for Progressive (  Uri uri ) { return for Progressive ( uri, /* cache Key= */ null )  ; }"
1972,private boolean is There Internet Connection (  ) { boolean is Connected ;   Connectivity Manager connectivity Manager =  (  Connectivity Manager )  this . context . get System Service (  Context . CONNECTIVITY_SERVICE )  ;   Network Info network Info = connectivity Manager . get Active Network Info (  )  ;  is Connected =  ( network Info != null && network Info . is Connected Or Connecting (  )  )  ;  return is Connected ; }
1973,"private void load Level ( int level Number ) { //  Reset the current game state if  ( m Count Down Timer != null )  {     m Count Down Timer . cancel (  )  ;  } m Count Level Ball Respawns = 0 ;  m Number Collected = 0 ;  m View Play Again Level . set Text (  String . value Of ( level Number )  )  ;   Body body = m World . get World (  )  . get Body List (  )  ;  while  ( body != null )  {     if  ( body . m_user Data == null )  {         body = body . get Next (  )  ;          continue ;      }     m World . m Bodies To Be Removed . add ( body )  ;      body = body . get Next (  )  ;  } m World . get World (  )  . step ( 1 . 0f / 60 . 0f, 10, 10 )  ;  try {     //  Read the level file and extract the candy cane positions     JSON Object level = read Level File ( level Number )  ;      JSON Array canes = level . get JSON Array ( ""candycanes"" )  ;      for  ( int i = 0 ;  i < canes . length (  )  ;  i++ )  {         JSON Object cane Part = canes . get JSON Object ( i )  ;          int type = cane Part . get Int ( ""type"" )  ;          float x Pos =  ( float )  cane Part . get Double ( ""x Pos"" )  ;          float y Pos =  ( float )  cane Part . get Double ( ""y Pos"" )  ;          //  Add the candy cane to the game world, the values represent the         m World . add Item ( x Pos, y Pos,  Edges . get Edges ( type ) , WORLD_OBJECT_BOUNCE, type, WORLD_OBJECT_DENSITY, WORLD_OBJECT_FRICTION,  Body Type . STATIC )  ;      }     //  Add the sides and floor to the game world to catch dropped balls .      //  Note that the WORLD_FRICTION is used as the bounce rate of the floors .      m World . add Item ( WORLD_FLOOR_X, WORLD_FLOOR_Y,  Edges . get Pipe Side Edges (  ) , WORLD_OBJECT_BOUNCE,  Tilt Game View . PIPE_SIDES, WORLD_OBJECT_DENSITY, WORLD_OBJECT_FRICTION,  Body Type . STATIC )  ;      m World . add Floor ( WORLD_FLOOR_X, WORLD_FLOOR_Y,  Tilt Game View . GAME_FLOOR, WORLD_OBJECT_DENSITY, WORLD_OBJECT_FRICTION, WORLD_FLOOR_FRICTION,  Body Type . STATIC )  ;      m World . add Pipe Bottom ( WORLD_FLOOR_X, WORLD_FLOOR_Y,  Tilt Game View . PIPE_BOTTOM, WORLD_OBJECT_DENSITY, WORLD_OBJECT_FRICTION, WORLD_FLOOR_FRICTION,  Body Type . STATIC )  ;      //  Add the gumballs     JSON Array gumballs = level . get JSON Array ( ""gumballs"" )  ;      m Game Balls Left = gumballs . length (  )  ;      set Indicators ( m Game Balls Left )  ;      for  ( int j = 0 ;  j < gumballs . length (  )  ;  j++ )  {         JSON Object gumball = gumballs . get JSON Object ( j )  ;          float x Pos =  ( float )  gumball . get Double ( ""x Pos"" )  ;          float y Pos =  ( float )  gumball . get Double ( ""y Pos"" )  ;           Gumball gumball Object = new  Gumball (  )  ;          gumball Object . m X Init Pos = x Pos ;          gumball Object . m Y Init Pos = y Pos ;          m Gumball Queue . add ( gumball Object )  ;      }     m Current Gumball = m Gumball Queue . poll (  )  ;      //  Start the timer     if  ( m Current Gumball != null )  {         if  ( m Current Level Num > 1 )  {             //  Do not include gumball dropping time in countdown calculation .              m Time Left In Millis +=  Game Constants . GUMBALL_ADDED_TIME ;          }         m Count Down Timer = new  Game Countdown ( m Frames Per Second, m Time Left In Millis )  ;          m Count Down Timer . start (  )  ;          m Game View . set Game Count Down ( m Count Down Timer )  ;          //  Move the outlet to its initial position         move Outlet (  ( m Current Gumball . m X Init Pos )  )  ;      } } catch  ( IO Exception e )  { } catch  ( JSON Exception e )  { }}"
1974,"public void log ( final  Network Request Metric network Request Metric, final  Application Process State app State ) { executor Service . execute (  (  )  -> sync Log (  Perf Metric . new Builder (  )  . set Network Request Metric ( network Request Metric ) , app State )  )  ; }"
1975,"public static void put ( @ Non Null final  String key, final boolean value ) { put ( key, value, get Default SP Utils (  )  )  ; }"
1976,"public com . anychart . charts .  Sunburst margin (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
1977,public int hash Code (  ) { int my Position = position ;  int hash = 0 ;  while  ( my Position < limit )  {     hash = hash + get ( my Position++ )  ;  } return hash ; }
1978,public static  Image Format .  Format Checker create Format Checker (  ) { return new  Color Format Checker (  )  ; }
1979,"public com . anychart . core . ui .  Crosshair Label padding (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
1980,"public static int get Index For Name (  String name ) { int index = -1 ;   Point Style [  ]  styles = values (  )  ;  int length = styles . length ;  for  ( int i = 0 ;  i < length && index < 0 ;  i++ )  {     if  ( styles [ i ]  . m Name . equals ( name )  )  {         index = i ;      } } return  Math . max ( 0, index )  ; }"
1981,public void test Noop (  ) {}
1982,public void close (  ) { if  ( lifecycle != null )  {      Worker Lifecycle lifecycle = this . lifecycle ;      this . lifecycle = null ;      lifecycle . make Available (  )  ;  }}
1983,public int get Min Height Plus Margin (  ) { return get View (  )  . get Height (  )  ; }
1984,"public boolean is In Disk Cache Sync ( final  Image Request image Request ) { final  Cache Key cache Key = m Cache Key Factory . get Encoded Cache Key ( image Request, null )  ;  final  Image Request .  Cache Choice cache Choice = image Request . get Cache Choice (  )  ;  switch ( cache Choice )  {     case DEFAULT:         return m Main Buffered Disk Cache . disk Check Sync ( cache Key )  ;      case SMALL:         return m Small Image Buffered Disk Cache . disk Check Sync ( cache Key )  ;      default:         return false ;  }}"
1985,public static AN Request .  Options Request Builder options (  String url ) { return new AN Request .  Options Request Builder ( url )  ; }
1986,"public static  Cache .  Entry parse Cache Headers (  Network Response response ) { long now =  System . current Time Millis (  )  ;   Map< String,  String> headers = response . headers ;  if  ( headers == null )  {     return null ;  } long server Date = 0 ;  long last Modified = 0 ;  long server Expires = 0 ;  long soft Expire = 0 ;  long final Expire = 0 ;  long max Age = 0 ;  long stale While Revalidate = 0 ;  boolean has Cache Control = false ;  boolean must Revalidate = false ;   String server Etag = null ;   String header Value ;  header Value = headers . get ( "" Date"" )  ;  if  ( header Value != null )  {     server Date = parse Date As Epoch ( header Value )  ;  } header Value = headers . get ( "" Cache- Control"" )  ;  if  ( header Value != null )  {     has Cache Control = true ;       String [  ]  tokens = header Value . split ( "","", 0 )  ;      for  ( int i = 0 ;  i < tokens . length ;  i++ )  {          String token = tokens [ i ]  . trim (  )  ;          if  ( token . equals ( ""no-cache"" )  || token . equals ( ""no-store"" )  )  {             return null ;          } else if  ( token . starts With ( ""max-age="" )  )  {             try {                 max Age =  Long . parse Long ( token . substring ( 8 )  )  ;              } catch  (  Exception e )  {             }         } else if  ( token . starts With ( ""stale-while-revalidate="" )  )  {             try {                 stale While Revalidate =  Long . parse Long ( token . substring ( 23 )  )  ;              } catch  (  Exception e )  {             }         } else if  ( token . equals ( ""must-revalidate"" )  || token . equals ( ""proxy-revalidate"" )  )  {             must Revalidate = true ;          }     } } header Value = headers . get ( "" Expires"" )  ;  if  ( header Value != null )  {     server Expires = parse Date As Epoch ( header Value )  ;  } header Value = headers . get ( "" Last- Modified"" )  ;  if  ( header Value != null )  {     last Modified = parse Date As Epoch ( header Value )  ;  } server Etag = headers . get ( ""E Tag"" )  ;  // is more restrictive .  if  ( has Cache Control )  {     soft Expire = now + max Age * 1000 ;      final Expire = must Revalidate ? soft Expire : soft Expire + stale While Revalidate * 1000 ;  } else if  ( server Date > 0 && server Expires >= server Date )  {     //  Default semantic for  Expire header in HTTP specification is soft Expire .      soft Expire = now +  ( server Expires - server Date )  ;      final Expire = soft Expire ;  }  Cache .  Entry entry = new  Cache .  Entry (  )  ;  entry . data = response . data ;  entry . etag = server Etag ;  entry . soft Ttl = soft Expire ;  entry . ttl = final Expire ;  entry . server Date = server Date ;  entry . last Modified = last Modified ;  entry . response Headers = headers ;  entry . all Response Headers = response . all Headers ;  return entry ; }"
1987,"public  Affine2 scale ( float scale X, float scale Y ) { m00 *= scale X ;  m01 *= scale Y ;  m10 *= scale X ;  m11 *= scale Y ;  return this ; }"
1988,"public  String get Desc (  ) { return "" The weight indicator  ( dial chart ) "" ; }"
1989,public void set Can Zoom ( boolean can Zoom ) { is Can Zoom = can Zoom ;  if  ( !is Can Zoom )  {     zoom = 1 ;  }}
1990,public int get Item Count (  ) { return m Item Count ; }
1991,"public void include Point (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . include Point ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ; }"
1992,"public static  Tree Filter create (  Collection< Tree Filter> list ) { if  ( list . size (  )  < 2 )      throw new  Illegal Argument Exception ( J Git Text . get (  )  . at Least Two Filters Needed )  ;  final  Tree Filter [  ]  subfilters = new  Tree Filter [ list . size (  )  ]  ;  list . to Array ( subfilters )  ;  if  ( subfilters . length == 2 )      return create ( subfilters [ 0 ] , subfilters [ 1 ]  )  ;  return new  List ( subfilters )  ; }"
1993,"public void set Show Crop Grid ( boolean show ) { m Option Bundle . put Boolean ( EXTRA_SHOW_CROP_GRID, show )  ; }"
1994,"private static void test Coordinate ( float [  ]  expected, float [  ]  output, int offset, int count ) { for  ( int i = 0 ;  i < count ;  i++ )  {      Assert . assert Equals ( expected [ i ] , output [ i + offset ]  )  ;  }}"
1995,"void on Notification Posted ( int notification Id,  Notification notification, boolean ongoing ) {}"
1996,"public com . anychart . core . annotations .  Fibonacci Timezones bottom (  String bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", wrap Quotes ( bottom )  )  )  ;  return this ; }"
1997,public boolean has Child Nodes (  ) { return false ; }
1998,public long get Trimmed Frame Count (  ) { return trimmed Frame Count ; }
1999,"public com . anychart . core . annotations .  Horizontal Line x Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
2000,public boolean is Barcode Scene Mode Enabled (  ) { return barcode Scene Mode Enabled ; }
2001,public T10 get Value10 (  ) { return value10 ; }
2002,"public  String read Line (  )  throws IO Exception{ while  ( lines . peek (  )  == null )  {      Java8 Compatibility . clear ( cbuf )  ;      //  The default implementation of  Reader#read (  Char Buffer )  allocates a     // temporary char [  ] , so we call  Reader#read ( char [  ] , int, int )  instead .      int read =  ( reader != null )  ? reader . read ( buf, 0, buf . length )  : readable . read ( cbuf )  ;      if  ( read == -1 )  {         line Buf . finish (  )  ;          break ;      }     line Buf . add ( buf, 0, read )  ;  } return lines . poll (  )  ; }"
2003,"public static void register Provider Internal (  String authority,  Content Provider provider ) { providers . put ( authority, provider )  ; }"
2004,"public void auto Redraw (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . auto Redraw (  )  ; "" )  ; }"
2005,"public com . anychart . core . stock . scrollerseries .  Spline Area hatch Fill (  String hatch Fill Function ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "", wrap Quotes ( hatch Fill Function )  )  )  ;  return this ; }"
2006,"public com . anychart . charts .  Circular Gauge margin (  String value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
2007,"public static void parse Alias (  String base Dir ) { s Target Alias . clear (  )  ;   String file = base Dir +  File . separator Char +  Buck Build Util . BUCK_CONFIG_FILE ;  try {      Buffered Reader br = new  Buffered Reader ( new  File Reader ( file )  )  ;       String line ;      boolean seen Alias Tag = false ;      while  (  ( line = br . read Line (  )  )  != null )  {         line = line . trim (  )  ;          if  ( !seen Alias Tag )  {             if  ( line . starts With ( ALIAS_TAG )  )  {                 seen Alias Tag = true ;              }         } else {             if  ( line . starts With ( COMMENT_PREFIX )  )  {                 //  Ignore comments                 continue ;              } else if  ( line . starts With ( ALIAS_PREFIX )  )  {                 //  Another tag                 break ;              } else {                 int separator Index = line . index Of ( SEPARATOR )  ;                  if  ( separator Index == -1 )  {                     continue ;                  }                  String alias = line . substring ( 0, separator Index )  . trim (  )  ;                   String path = line . substring ( separator Index + 1 )  . trim (  )  ;                  if  ( s Target Alias . contains Key ( path )  )  {                     s Target Alias . get ( path )  . add ( alias )  ;                  } else {                     s Target Alias . put ( path,  Sets . new Hash Set ( alias )  )  ;                  }             }         }     } } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  }}"
2008,"public com . anychart . core . annotations .  Fibonacci Retracement markers (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", settings )  )  ;  return this ; }"
2009,"public com . anychart . core . stock . scrollerseries .  Step Area left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
2010,public float [  ]  get Separations (  ) { return separations ; }
2011,"public  Vector2 get Local Vector (  Vector2 world Vector ) { jni Get Local Vector ( addr, world Vector . x, world Vector . y, tmp )  ;  local Vector . x = tmp [ 0 ]  ;  local Vector . y = tmp [ 1 ]  ;  return local Vector ; }"
2012,public long get Component Calculate Layout Count (  ) { return  Litho Stats . get Component Calculate Layout Count (  )  ; }
2013,"public void add Or Update Receiver (  Activity Info receiver Info ) { add Component ( receiver Filters,  p -> p . receivers,  (  p,  a )  -> p . receivers = a, new  Activity Info ( receiver Info ) , true )  ; }"
2014,"public  File Utils .  Gallery Filter Options get Filter Options (  Al Customization Settings al Customization Settings ) {  Map< String,  Boolean> filter Options ;  if  ( al Customization Settings . get Filter Gallery (  )  != null )  {     filter Options = al Customization Settings . get Filter Gallery (  )  ;  } else {     filter Options =  Kommunicate Setting . get Instance ( context . get Application Context (  )  )  . get Gallery Filter Options (  )  ;  }  File Utils .  Gallery Filter Options choosen Option =  File Utils .  Gallery Filter Options . ALL_FILES ;  if  ( filter Options != null )  {     for  (  File Utils .  Gallery Filter Options option :  File Utils .  Gallery Filter Options . values (  )  )  {         if  ( filter Options . get ( option . name (  )  )  )  {             choosen Option = option ;              break ;          }     } } return choosen Option ; }"
2015,"public com . anychart . scales .  Ordinal Ticks max Count (  Number count ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Count ( %s )  ; "", count )  )  ;  return this ; }"
2016,protected void on Click Front View ( int position ) { if  ( swipe List View Listener != null && position !=  List View . INVALID_POSITION )  {     swipe List View Listener . on Click Front View ( position )  ;  }}
2017,"private void add Type From Dot Delimited Sequence (  String expr,  Dependency Type dependency Type ) { // then check it against JAVA_LANG_TYPES .  if  ( starts With Uppercase Char ( expr )  )  {     int index = expr . index Of ( ' . ' )  ;      if  ( index >= 0 )  {          String leftmost Component = expr . substring ( 0, index )  ;          if  ( JAVA_LANG_TYPES . contains ( leftmost Component )  )  {             return ;          }     } } expr = qualify With Package Name If Necessary ( expr )  ;  add Symbol ( expr, dependency Type )  ; }"
2018,"public void reset Sim Country Isos (  ) { sim Country Iso Map . clear (  )  ;  sim Country Iso Map . put ( 0, """" )  ; }"
2019,"public com . anychart . charts .  Cartesian3d margin (  String [  ]  margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "", array To String Wrap Quotes ( margin )  )  )  ;  return this ; }"
2020,"public void to Xml (  Boolean as Xml Node ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Xml ( %s )  ; "", as Xml Node )  )  ; }"
2021,"public void local Var Target Table ( int start Pc, int length, int index )  throws IO Exception{ write16bit ( start Pc )  ;  write16bit ( length )  ;  write16bit ( index )  ; }"
2022,"synchronized void remove Or Cancel Download Model (  String model Name,  Long download Id ) { if  ( download Manager != null && download Id != 0 )  {     download Manager . remove ( download Id )  ;  } // clean up the downloading task and the stored model .  // TODO ( annzimmer )  should this task clean up include an intent to trigger on Completion handler // with failure? remove Download Task Instance ( download Id )  ;  shared Preferences Util . clear Download Custom Model Details ( model Name )  ; }"
2023,"public com . anychart . core . ui .  Stage Credits enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
2024,public float get Scale X (  ) { return m Scale X ; }
2025,"public void register Observer ( SOAP List Observer< Type To Return, SOAP Fault Type> observer ) { super . register Observer ( observer )  ;  list Observers . add ( observer )  ; }"
2026,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
2027,"public void trend (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . trend (  )  ; "" )  ; }"
2028,public FTP Textual Extension Recognizer get Textual Extension Recognizer (  ) { synchronized  ( lock )  {     return textual Extension Recognizer ;  }}
2029,public  Card Header View get Internal Header Layout (  ) { return m Internal Header Layout ; }
2030,"public  String get Record ( short platform ID, short platform Specific ID, short language ID, short name ID ) {  Name Record rec = new  Name Record ( platform ID, platform Specific ID, language ID, name ID )  ;  return  (  String )  records . get ( rec )  ; }"
2031,"public com . anychart . core . axes .  Circular Ticks ticks (  ) { return new com . anychart . core . axes .  Circular Ticks ( js Base + "" . ticks (  ) "" )  ; }"
2032,"public static  Sorted Set Multimap<K, V> synchronized Sorted Set Multimap (  Sorted Set Multimap<K, V> multimap ) { return  Synchronized . sorted Set Multimap ( multimap, null )  ; }"
2033,"private float ease ( int type, long time, float from, float change, long duration ) { switch ( type )  {     case EASE_IN_OUT_QUAD:         return ease In Out Quad ( time, from, change, duration )  ;      case EASE_OUT_QUAD:         return ease Out Quad ( time, from, change, duration )  ;      default:         throw new  Illegal State Exception ( "" Unexpected easing type: "" + type )  ;  }}"
2034,public  String get Promotion Code (  ) { return promotion Code ; }
2035,Builder add Client Capabilities (  Collection< String> client Capabilities ) { client Caps . add All ( client Capabilities )  ;  return this ; }
2036,"public void on Attach (  Context context ) { super . on Attach ( context )  ;  _master Frag =  (  Rotation Persist1 Fragment )   (  (  Main Activity )  context )  . get Support Fragment Manager (  )  . find Fragment By Tag (  Rotation Persist1 Fragment . TAG )  ;  if  ( _master Frag == null )  {     throw new  Class Cast Exception ( "" We did not find a master who can understand us : ( "" )  ;  }}"
2037,"public com . anychart . core . cartesian . series .  Base With Markers selected (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2038,"public static  String get Process Name ( int pid ) {  Buffered Reader reader = null ;  try {     reader = new  Buffered Reader ( new  File Reader ( ""/proc/"" + pid + ""/cmdline"" )  )  ;       String process Name = reader . read Line (  )  ;      if  ( ! Text Utils . is Empty ( process Name )  )  {         process Name = process Name . trim (  )  ;      }     return process Name ;  } catch  (  Throwable throwable )  {     throwable . print Stack Trace (  )  ;  } finally {     try {         if  ( reader != null )  {             reader . close (  )  ;          }     } catch  ( IO Exception exception )  {         exception . print Stack Trace (  )  ;      } } return null ; }"
2039,protected void on Attach ( T object ) {}
2040,"public com . anychart . standalones .  Resource List stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2041,public final T tag (  Class<T> clazz ) { if  ( tags == null )  {     return null ;  } return  ( T )  tags . get ( clazz )  ; }
2042,"public static  Ct Method make (  String src,  Ct Class declaring,  String delegate Obj,  String delegate Method )  throws  Cannot Compile Exception{  Javac compiler = new  Javac ( declaring )  ;  try {     if  ( delegate Method != null )          compiler . record Proceed ( delegate Obj, delegate Method )  ;       Ct Member obj = compiler . compile ( src )  ;      if  ( obj instanceof  Ct Method )          return  (  Ct Method )  obj ;  } catch  (  Compile Error e )  {     throw new  Cannot Compile Exception ( e )  ;  } throw new  Cannot Compile Exception ( ""not a method"" )  ; }"
2043,"public com . anychart . charts .  Waterfall auto Redraw (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . auto Redraw ( %s )  ; "", enabled )  )  ;  return this ; }"
2044,public synchronized void set Persistence Enabled ( boolean is Enabled ) { assert Unfrozen (  )  ;  this . persistence Enabled = is Enabled ; }
2045,"public com . anychart . core . cartesian . series .  Range Bar container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
2046,"public static  Aspect Ratio parse (  String s ) { int position = s . index Of ( ':' )  ;  if  ( position == -1 )  {     throw new  Illegal Argument Exception ( "" Malformed aspect ratio: "" + s )  ;  } try {     int x =  Integer . parse Int ( s . substring ( 0, position )  )  ;      int y =  Integer . parse Int ( s . substring ( position + 1 )  )  ;      return  Aspect Ratio . of ( x, y )  ;  } catch  (  Number Format Exception e )  {     throw new  Illegal Argument Exception ( "" Malformed aspect ratio: "" + s, e )  ;  }}"
2047,Set<V> create Collection (  ) { return  Platform . <V>new Hash Set With Expected Size ( expected Values Per Key )  ; }
2048,"private static  Sorted Map< Path,  Zip Archive Entry> get Zip File Paths (  Zip File zip,  Path relative Path,  Patterns Matcher entries To Exclude ) {  Sorted Map< Path,  Zip Archive Entry> path Map = new  Tree Map<> (  )  ;  for  (  Zip Archive Entry entry :  Collections . list ( zip . get Entries (  )  )  )  {      String entry Name = entry . get Name (  )  ;      if  ( entries To Exclude . matches ( entry Name )  )  {         continue ;      }      Path target = relative Path . resolve ( entry Name )  . normalize (  )  ;      path Map . put ( target, entry )  ;  } return path Map ; }"
2049,public  Image Request Builder set Resize Options ( @ Nullable  Resize Options resize Options ) { m Resize Options = resize Options ;  return this ; }
2050,"public com . anychart . core . ui .  Timeline column Stroke (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . column Stroke ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
2051,"public static  Code Block cast (  Code Block expression,  Class<?> cast To ) { return  Code Block . of ( "" ( $T )  $L"", cast To, expression )  ; }"
2052,"public com . anychart . core . ui .  Timeline markers (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
2053,"public static void on Create (  ) { if  ( !s Attached )  {     throw new  Illegal State Exception (  )  ;  } if  ( !s Created . compare And Set ( false, true )  )  {     return ;  }  Tasks . init (  )  ;  PMF . call App Create (  )  ;  // 注册监听 Plugin Info变化的广播以接受来自常驻进程的更新 if  ( !IPC . is Persistent Process (  )  )  {      Plugin Info Updater . register (  Re Plugin Internal . get App Context (  )  )  ;  } // 只有开启“详细日志”才会输出，防止“消耗性能” if  ( LOG &&  Re Plugin . get Config (  )  . is Print Detail Log (  )  )  {      Log Debug . print Memory Status (  Log Debug . TAG, ""act=, init, flag=,  End, pn=, framework, func=, on Create, lib=,  Re Plugin"" )  ;  }}"
2054,"public static  List<R Dot Txt Entry> read Resources (  Project Filesystem owning Filesystem,  Path r Dot Txt )  throws IO Exception{ return owning Filesystem . read Lines ( r Dot Txt )  . stream (  )  . filter (  input -> ! Strings . is Null Or Empty ( input )  )  . map ( R Dot Txt Entry . TO_ENTRY )  . collect (  Collectors . to List (  )  )  ; }"
2055,"public int index Of ( T item ) { return find Index Of ( item, LOOKUP )  ; }"
2056,public boolean has Debug Info (  ) { return debug Info Builder_ != null || debug Info_ != null ; }
2057,"public static short [  ]  concat ( short [  ]  .  .  .  arrays ) { int length = 0 ;  for  ( short [  ]  array : arrays )  {     length += array . length ;  } short [  ]  result = new short [ length ]  ;  int pos = 0 ;  for  ( short [  ]  array : arrays )  {      System . arraycopy ( array, 0, result, pos, array . length )  ;      pos += array . length ;  } return result ; }"
2058,"public void transform ( final  Matrix4 matrix ) { transform ( matrix, 0, get Num Vertices (  )  )  ; }"
2059,public  String get Content Encoding (  ) { return m Content Encoding . get Value (  )  ; }
2060,"protected void start Activity (  Component Name component Name,  User Handle target User ) { verify Can Access User ( target User )  ;  verify Activity In Manifest ( component Name, /* require Main Activity= */ false )  ;  verify Has Interact Across Profiles Permission (  )  ;  started Activities . add ( new  Started Activity ( component Name, target User )  )  ; }"
2061,protected void on Enabled ( boolean joining )  throws  Exo Playback Exception{//  Do nothing . }
2062,private boolean ensure Data In Buffer (  )  throws IO Exception{ if  ( m Buffer Offset < m Buffered Size )  {     return true ;  } final int read Data = m Input Stream . read ( m Byte Array )  ;  if  ( read Data <= 0 )  {     return false ;  } m Buffered Size = read Data ;  m Buffer Offset = 0 ;  return true ; }
2063,"private void add Get Id (  Type Spec .  Builder class Builder ) { add Get Id Method ( class Builder, ""__get Stub ID"", ""TRANSACTION__get Stub ID"" )  ;  add Get Id Method ( class Builder, ""__get Stub Process ID"", ""TRANSACTION__get Stub Process ID"" )  ; }"
2064,public void set Listener (  Listener listener ) { m Listener = listener ; }
2065,public com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration get Config (  ) { return config_ == null ? com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration . get Default Instance (  )  : config_ ; }
2066,"public com . anychart . core . utils .  Quarter bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
2067,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
2068,"public com . anychart . core . stock . scrollerseries .  Discrete Base series Type (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . series Type ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
2069,"public static final  Abbreviated Long Object Id from String (  String str ) { if  ( str . length (  )  >  Constants . LONG_OBJECT_ID_STRING_LENGTH )      throw new  Illegal Argument Exception (  Message Format . format (  Lfs Text . get (  )  . invalid Long Id, str )  )  ;  final byte [  ]  b = org . eclipse . jgit . lib .  Constants . encode ASCII ( str )  ;  return from Hex String ( b, 0, b . length )  ; }"
2070,"void test Counter Exceptions (  ) { assert Equals ( expected Counter Exceptions, result . get Exception List (  )  . size (  )  )  ; }"
2071,"public com . anychart . core . ui .  Markers Factory markers (  ) { return new com . anychart . core . ui .  Markers Factory ( js Base + "" . markers (  ) "" )  ; }"
2072,"public  Model View Super Class Model_ on Visibility State Changed (  On Model Visibility State Changed Listener< Model View Super Class Model_,  Model View Super Class> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
2073,"public static  String get Item Impl ( SQ Lite Database db,  String key ) {  String [  ]  columns = { VALUE_COLUMN } ;   String [  ]  selection Args = { key } ;   Cursor cursor = db . query ( TABLE_CATALYST, columns, KEY_COLUMN + ""=?"", selection Args, null, null, null )  ;  try {     if  ( !cursor . move To First (  )  )  {         return null ;      } else {         return cursor . get String ( 0 )  ;      } } finally {     cursor . close (  )  ;  }}"
2074,public boolean remove ( @ Nullable  Object object ) { if  ( is Managed (  )  && !base Realm . is In Transaction (  )  )  {     throw new  Illegal State Exception ( REMOVE_OUTSIDE_TRANSACTION_ERROR )  ;  } return super . remove ( object )  ; }
2075,public void set_http Message (  Event Emitter _http Message ) { this . _http Message = _http Message ; }
2076,"protected void add Header And Footer (  Context context ) {  Linear Layout .  Layout Params params = new  Linear Layout .  Layout Params (  View Group .  Layout Params . MATCH_PARENT,  View Group .  Layout Params . WRAP_CONTENT )  ;  final  Loading Layout header Layout = m Header Layout ;  final  Loading Layout footer Layout = m Footer Layout ;  if  ( null != header Layout )  {     if  ( this == header Layout . get Parent (  )  )  {         remove View ( header Layout )  ;      }     add View ( header Layout, 0, params )  ;  } if  ( null != footer Layout )  {     if  ( this == footer Layout . get Parent (  )  )  {         remove View ( footer Layout )  ;      }     add View ( footer Layout, -1, params )  ;  }}"
2077,public  Builder set Focus Alpha ( boolean focus Alpha ) { this . focus Alpha = focus Alpha ;  return this ; }
2078,"public static  String get Cur Country Lan (  Context context ) {  Configuration config = context . get Resources (  )  . get Configuration (  )  ;   Locale sys Locale ;  if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . N )  {     sys Locale = config . get Locales (  )  . get ( 0 )  ;  } else {     //noinspection deprecation     sys Locale = config . locale ;  } return sys Locale . get Language (  )  + ""-"" + sys Locale . get Country (  )  ; }"
2079,"private static int get Synchronization Sample Index (  Track Sample Table sample Table, long time Us ) { int sample Index = sample Table . get Index Of Earlier Or Equal Synchronization Sample ( time Us )  ;  if  ( sample Index == C . INDEX_UNSET )  {     //  Handle the case where the requested time is before the first synchronization sample .      sample Index = sample Table . get Index Of Later Or Equal Synchronization Sample ( time Us )  ;  } return sample Index ; }"
2080,"public static void force Get View Size ( final  View view, final  On Get Size Listener listener ) { view . post ( new  Runnable (  )  {     @ Override     public void run (  )  {         if  ( listener != null )  {             listener . on Get Size ( view )  ;          }     } } )  ; }"
2081,public boolean equals (  Object obj ) { if  ( ! ( obj instanceof  Field Frame Body IMG )  )  {     return false ;  }  Field Frame Body IMG object =  (  Field Frame Body IMG )  obj ;  return this . images . equals ( object . images )  && super . equals ( obj )  ; }
2082,public  Glide Request< Transcode Type> error ( @ Nullable  Drawable drawable ) { return  (  Glide Request< Transcode Type> )  super . error ( drawable )  ; }
2083,public  Blame Command blame (  ) { return new  Blame Command ( repo )  ; }
2084,"public void set Indices ( short [  ]  indices, int offset, int count ) {  (  (  Buffer )  buffer )  . clear (  )  ;  buffer . put ( indices, offset, count )  ;   (  (  Buffer )  buffer )  . flip (  )  ;   (  (  Buffer )  byte Buffer )  . position ( 0 )  ;   (  (  Buffer )  byte Buffer )  . limit ( count << 1 )  ; }"
2085,"private  String load Source (  String source Url ) {  String source = null ;  int hash = source Url . index Of ( '#' )  ;  if  ( hash >= 0 )  {     source Url = source Url . substring ( 0, hash )  ;  } try {      Input Stream is ;      open Stream: {         if  ( source Url . index Of ( ':' )  < 0 )  {             //  Can be a file name             try {                 if  ( source Url . starts With ( ""~/"" )  )  {                      String home =  Security Utilities . get System Property ( ""user . home"" )  ;                      if  ( home != null )  {                          String path From Home = source Url . substring ( 2 )  ;                           File f = new  File ( new  File ( home ) , path From Home )  ;                          if  ( f . exists (  )  )  {                             is = new  File Input Stream ( f )  ;                              break open Stream ;                          }                     }                 }                  File f = new  File ( source Url )  ;                  if  ( f . exists (  )  )  {                     is = new  File Input Stream ( f )  ;                      break open Stream ;                  }             } catch  (  Security Exception ex )  {             }             //  No existing file, assume missed http://             if  ( source Url . starts With ( ""//"" )  )  {                 source Url = ""http:"" + source Url ;              } else if  ( source Url . starts With ( ""/"" )  )  {                 source Url = ""http://127 . 0 . 0 . 1"" + source Url ;              } else {                 source Url = ""http://"" + source Url ;              }         }         is =  ( new URL ( source Url )  )  . open Stream (  )  ;      }     try {         source =  Kit . read Reader ( new  Input Stream Reader ( is )  )  ;      } finally {         is . close (  )  ;      } } catch  ( IO Exception ex )  {      System . err . println ( "" Failed to load source from "" + source Url + "": "" + ex )  ;  } return source ; }"
2086,"public void on Back Pressed (  ) {  Ui Thread Util . assert On Ui Thread (  )  ;   React Context react Context = m Current React Context ;  if  ( react Context == null )  {     //  Invoke without round trip to JS .      F Log . w ( TAG, "" Instance detached from instance manager"" )  ;      invoke Default On Back Pressed (  )  ;  } else {      Device Event Manager Module device Event Manager Module = react Context . get Native Module (  Device Event Manager Module . class )  ;      if  ( device Event Manager Module != null )  {         device Event Manager Module . emit Hardware Back Pressed (  )  ;      } }}"
2087,"public com . anychart . core . utils .  Bounds bounds (  ) { return new com . anychart . core . utils .  Bounds ( js Base + "" . bounds (  ) "" )  ; }"
2088,"public  Realm Event Stream Async Task< Document T> watch Async (  ) { return new  Realm Event Stream Async Task Impl<> ( get Namespace (  )  . get Full Name (  ) , new  Realm Event Stream Async Task Impl .  Executor< Document T> (  )  {     @ Override     public  Event Stream< Document T> run (  )  throws IO Exception {         return os Mongo Collection . watch (  )  ;      } } )  ; }"
2089,"public float [  ]  get Transform ( int index ) {  Glyf Component gc = components [ index ]  ;  float m =  ( float )   Math . max (  Math . abs ( gc . a ) ,  Math . abs ( gc . b )  )  ;  if  (  Math . abs (  Math . abs ( gc . a )  -  Math . abs ( gc . c )  )  <  ( 33 / 65536 )  )  {     m *= 2 ;  } float n =  ( float )   Math . max (  Math . abs ( gc . c ) ,  Math . abs ( gc . d )  )  ;  if  (  Math . abs (  Math . abs ( gc . c )  -  Math . abs ( gc . d )  )  <  ( 33 / 65536 )  )  {     n *= 2 ;  } float e = m * gc . e ;  float f = n * gc . f ;  return new float [  ]  { gc . a, gc . b, gc . c, gc . d, e, f } ; }"
2090,"public  Realm Async Task fetch All (  App .  Callback< List< Api Key>> callback ) {  Util . check Looper Thread ( "" Asynchronous fetching an api key is only possible from looper threads . "" )  ;  return new  Request< List< Api Key>> ( NETWORK_POOL_EXECUTOR, callback )  {     @ Override     public  List< Api Key> run (  )  throws  App Exception {         return fetch All (  )  ;      } } . start (  )  ; }"
2091,public  Type get Return Type (  ) { return ret Type ; }
2092,public final void clear (  ) { throw new  Unsupported Operation Exception (  )  ; }
2093,public final int get Parameter Word Count ( boolean is Static ) { return get Prototype ( is Static )  . get Parameter Types (  )  . get Word Count (  )  ; }
2094,"public static  Put Result new Update Result ( int number Of Rows Updated, @ Non Null  String affected Table, @ Nullable  String .  .  .  affected Tags ) { return new Update Result ( number Of Rows Updated, affected Table, non Null Set ( affected Tags )  )  ; }"
2095,"private  Point F transform Coord Bitmap To Touch ( float bx, float by ) { matrix . get Values ( m )  ;  float orig W = get Drawable (  )  . get Intrinsic Width (  )  ;  float orig H = get Drawable (  )  . get Intrinsic Height (  )  ;  float px = bx / orig W ;  float py = by / orig H ;  float final X = m [  Matrix . MTRANS_X ]  + get Image Width (  )  * px ;  float final Y = m [  Matrix . MTRANS_Y ]  + get Image Height (  )  * py ;  return new  Point F ( final X, final Y )  ; }"
2096,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
2097,public void pause (  ) { stop (  )  ; }
2098,"public void write (  Input Stream input, boolean append ) {  Output Stream output = null ;  try {     output = write ( append )  ;       Stream Utils . copy Stream ( input, output )  ;  } catch  (  Exception ex )  {     throw new  Gdx Runtime Exception ( "" Error stream writing to file: "" + file + ""  ( "" + type + "" ) "", ex )  ;  } finally {      Stream Utils . close Quietly ( input )  ;       Stream Utils . close Quietly ( output )  ;  }}"
2099,protected boolean is Paging Enabled (  ) { return false ; }
2100,"public final void insert Internal (  List<T> insert_data,  List<T> original_list ) { try {      Iterator<T> id = insert_data . iterator (  )  ;      int g = get Item Count (  )  ;      //   if  ( has Header View (  )  )  g-- ;      if  ( enable Load More (  )  )          g-- ;      final int start = g ;      synchronized  ( m Lock )  {         while  ( id . has Next (  )  )  {             original_list . add ( original_list . size (  ) , id . next (  )  )  ;          }     }     if  ( insert_data . size (  )  == 1 )  {         notify Item Inserted ( start )  ;      } else if  ( insert_data . size (  )  > 1 )  {         notify Item Range Inserted ( start, insert_data . size (  )  )  ;      }     if  ( enabled_custom_load_more_view )  {         reveal Dispatch Load More View (  )  ;      } } catch  (  Exception e )  {      String o = e . fill In Stack Trace (  )  . get Cause (  )  . get Message (  )  . to String (  )  ;       Log . d ( ""fill In Stack Trace"", o + "" : "" )  ;  }}"
2101,protected  Re Plugin Config create Config (  ) { return new  Re Plugin Config (  )  ; }
2102,public boolean is Initialized (  ) { return is Transport Initialized . get (  )  ; }
2103,"public void left (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . left (  )  ; "" )  ; }"
2104,public T1 get Value1 (  ) { return value1 ; }
2105,public void close (  ) { this . remove Class Path ( class Path )  ;  classes . clear (  )  ;  softcache . clear (  )  ; }
2106,"public com . anychart . core . gantt . elements .  Milestones Element milestones (  ) { return new com . anychart . core . gantt . elements .  Milestones Element ( js Base + "" . milestones (  ) "" )  ; }"
2107,"public com . anychart . core . stock . scrollerseries .  Range Step Area top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
2108,"public com . anychart . core . cartesian . series .  Continuous Range Base unselect (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unselect ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ;  return this ; }"
2109,"private void on Ball In Pipe (  ) { if  ( !m Santa Preferences . is Muted (  )  )  {      Sound Pool Utils . play Sound Effect ( m Sound Pool, m Sound Ball In Machine )  ;  } m Game Balls Left-- ;  m Number Collected++ ;  change Indicator (  )  ;  m Match Score += 50 *  Math . max ( 1f,  ( m Current Level Num - m Count Level Ball Respawns )  )  ;  m View Score . set Text (  String . value Of ( m Match Score )  )  ;  if  ( m Game Balls Left == 0 && m View Play Again Background . get Visibility (  )  !=  View . VISIBLE )  {     //  No balls are left in this level, go to the next one     m Current Level Num++ ;      m Level Number Text . set Level Number ( m Current Level Num )  ;      m Level Number Text . start Animation ( m Animation Level Scale Up )  ;      m End Level Circle . start Animation ( m Animation Scale Level Down )  ;  }}"
2110,"public com . anychart . core . gantt .  Time Line Header min Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
2111,public byte [  ]  get Raw Bytes (  ) { return m Result . get Raw Bytes (  )  ; }
2112,public int process Section Header (  Byte Buffer data Buffer ) { int datalength ;  byte next Byte = data Buffer . get (  )  ;  if  (  (  ( next Byte & 0x FF )  == FILLER_START )  ||  (  ( next Byte & 0x FF )  == FILLER_OTHER )  ||  (  ( next Byte & 0x FF )  == FILLER_END )  )  {     data Buffer . get (  )  ;      data Buffer . get (  )  ;      datalength = data Buffer . get (  )  ;  } else {     datalength = next Byte ;  } return datalength ; }
2113,"public com . anychart . core . stock . indicators .  Stochastic d Period (  Number period ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . d Period ( %s )  ; "", period )  )  ;  return this ; }"
2114,"public com . anychart . core . ui .  Separator fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
2115,protected  String get Stdin Args (  ) { return null ; }
2116,"public void update (  ) { if  ( my Dao == null )  {     throw new  Dao Exception ( "" Entity is detached from DAO context"" )  ;  } my Dao . update ( this )  ; }"
2117,public void set Highlight Full Bar Enabled ( boolean enabled ) { m Highlight Full Bar Enabled = enabled ; }
2118,"public void font Style (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Style (  )  ; "" )  ; }"
2119,"public  Vector2 get Size (  Vector2 size ) { return size . set ( width, height )  ; }"
2120,"public static void inject (  Fragment fragment ) { check Not Null ( fragment, ""fragment"" )  ;   Has Android Injector has Android Injector = find Has Android Injector For Fragment ( fragment )  ;  if  (  Log . is Loggable ( TAG, DEBUG )  )  {      Log . d ( TAG,  String . format ( "" An injector for %s was found in %s"", fragment . get Class (  )  . get Canonical Name (  ) , has Android Injector . get Class (  )  . get Canonical Name (  )  )  )  ;  } inject ( fragment, has Android Injector )  ; }"
2121,"public com . anychart . core . axes .  Circular Ticks stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
2122,public  Media Control get Media Control (  ) { return this ; }
2123,public boolean is Author Email Implicit (  ) { return is Author Email Implicit ; }
2124,"public static void set Data Processing Options (  String [  ]  options, int country, int state ) { if  ( options == null )  {     options = new  String [  ]  {} ;  } try {     JSON Object data Processing Options = new JSON Object (  )  ;      JSON Array array = new JSON Array (  Arrays . as List ( options )  )  ;      data Processing Options . put ( DATA_PROCESSION_OPTIONS, array )  ;      data Processing Options . put ( DATA_PROCESSION_OPTIONS_COUNTRY, country )  ;      data Processing Options . put ( DATA_PROCESSION_OPTIONS_STATE, state )  ;      application Context . get Shared Preferences ( DATA_PROCESSING_OPTIONS_PREFERENCES,  Context . MODE_PRIVATE )  . edit (  )  . put String ( DATA_PROCESSION_OPTIONS, data Processing Options . to String (  )  )  . apply (  )  ;  } catch  ( JSON Exception e )  { }}"
2125,"Node<K, V> find ( K key, boolean create ) {  Comparator<? super K> comparator = this . comparator ;   Node<K, V> nearest = root ;  int comparison = 0 ;  if  ( nearest != null )  {     //  Micro-optimization: avoid polymorphic calls to  Comparator . compare (  )  .      //  Throws a  Class Cast Exception below if there's trouble .      @ Suppress Warnings ( ""unchecked"" )   Comparable< Object> comparable Key =  ( comparator == NATURAL_ORDER )  ?  (  Comparable< Object> )  key : null ;      while  ( true )  {         comparison =  ( comparable Key != null )  ? comparable Key . compare To ( nearest . key )  : comparator . compare ( key, nearest . key )  ;          //  We found the requested key .          if  ( comparison == 0 )  {             return nearest ;          }         //  If it exists, the key is in a subtree .   Go deeper .           Node<K, V> child =  ( comparison < 0 )  ? nearest . left : nearest . right ;          if  ( child == null )  {             break ;          }         nearest = child ;      } } //  The key doesn't exist in this tree .  if  ( !create )  {     return null ;  } //  Create the node and add it to the tree or the table .   Node<K, V> header = this . header ;   Node<K, V> created ;  if  ( nearest == null )  {     //  Check that the value is comparable if we didn't do any comparisons .      if  ( comparator == NATURAL_ORDER && ! ( key instanceof  Comparable )  )  {         throw new  Class Cast Exception ( key . get Class (  )  . get Name (  )  + "" is not  Comparable"" )  ;      }     created = new  Node<K, V> ( nearest, key, header, header . prev )  ;      root = created ;  } else {     created = new  Node<K, V> ( nearest, key, header, header . prev )  ;      if  ( comparison < 0 )  {         // nearest . key is higher         nearest . left = created ;      } else {         // comparison > 0, nearest . key is lower         nearest . right = created ;      }     rebalance ( nearest, true )  ;  } size++ ;  mod Count++ ;  return created ; }"
2126,public static synchronized  Maintenance Lock get Instance (  ) { if  ( instance == null )  {     instance = new  Maintenance Lock (  )  ;  } return instance ; }
2127,public int get Minutes (  ) { return m Input [ 1 ]  * 10 + m Input [ 0 ]  ; }
2128,"private void apply Selector To Style (  Webvtt Css Style style,  String selector ) { if  ( """" . equals ( selector )  )  {     //  Universal selector .      return ;  } int voice Start Index = selector . index Of ( ' [ ' )  ;  if  ( voice Start Index != -1 )  {      Matcher matcher = VOICE_NAME_PATTERN . matcher ( selector . substring ( voice Start Index )  )  ;      if  ( matcher . matches (  )  )  {         style . set Target Voice ( matcher . group ( 1 )  )  ;      }     selector = selector . substring ( 0, voice Start Index )  ;  }  String [  ]  class Division =  Util . split ( selector, ""\\ . "" )  ;   String tag And Id Division = class Division [ 0 ]  ;  int id Prefix Index = tag And Id Division . index Of ( '#' )  ;  if  ( id Prefix Index != -1 )  {     style . set Target Tag Name ( tag And Id Division . substring ( 0, id Prefix Index )  )  ;      //  We discard the '#' .      style . set Target Id ( tag And Id Division . substring ( id Prefix Index + 1 )  )  ;  } else {     style . set Target Tag Name ( tag And Id Division )  ;  } if  ( class Division . length > 1 )  {     style . set Target Classes (  Arrays . copy Of Range ( class Division, 1, class Division . length )  )  ;  }}"
2129,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
2130,public  Relative Layout get Header Layout (  ) { return header Layout ; }
2131,"public static void fatal (  Throwable throwable ) { fatal ( throwable, null )  ; }"
2132,public void set Circle Colors ( int .  .  .  colors ) { this . m Circle Colors =  Color Template . create Colors ( colors )  ; }
2133,"public  Uri resolve Uri (  String base Uri ) { return  Uri Util . resolve To Uri ( base Uri, reference Uri )  ; }"
2134,"public  Tag Field create Artwork Field ( byte [  ]  data,  String mime Type ) {  Abstract ID3v2 Frame frame = create Frame ( get Frame And Sub Id From Generic Key (  Field Key . COVER_ART )  . get Frame Id (  )  )  ;   Frame Body APIC body =  (  Frame Body APIC )  frame . get Body (  )  ;  body . set Object Value (  Data Types . OBJ_PICTURE_DATA, data )  ;  body . set Object Value (  Data Types . OBJ_PICTURE_TYPE,  Picture Types . DEFAULT_ID )  ;  body . set Object Value (  Data Types . OBJ_MIME_TYPE, mime Type )  ;  body . set Object Value (  Data Types . OBJ_DESCRIPTION, """" )  ;  return frame ; }"
2135,"public  Todo_ Deleter delete From Todo (  ) { return new  Todo_ Deleter ( connection,  Todo_ Schema . INSTANCE )  ; }"
2136,"private static  Linked List< Diff> diff_bisect (  String text1,  String text2 ) { //  Cache the text lengths to prevent multiple calls .  int text1_length = text1 . length (  )  ;  int text2_length = text2 . length (  )  ;  int max_d =  ( text1_length + text2_length + 1 )  / 2 ;  int v_offset = max_d ;  int v_length = 2 * max_d ;  int [  ]  v1 = new int [ v_length ]  ;  int [  ]  v2 = new int [ v_length ]  ;  for  ( int x = 0 ;  x < v_length ;  x++ )  {     v1 [ x ]  = -1 ;      v2 [ x ]  = -1 ;  } v1 [ v_offset + 1 ]  = 0 ;  v2 [ v_offset + 1 ]  = 0 ;  int delta = text1_length - text2_length ;  //  If the total number of characters is odd, then the front path will // collide with the reverse path .  boolean front =  ( delta % 2 != 0 )  ;  //  Offsets for start and end of k loop .  //  Prevents mapping of space beyond the grid .  int k1start = 0 ;  int k1end = 0 ;  int k2start = 0 ;  int k2end = 0 ;  for  ( int d = 0 ;  d < max_d ;  d++ )  {     //  Walk the front path one step .      for  ( int k1 = -d + k1start ;  k1 <= d - k1end ;  k1 += 2 )  {         int k1_offset = v_offset + k1 ;          int x1 ;          if  ( k1 == -d ||  ( k1 != d && v1 [ k1_offset - 1 ]  < v1 [ k1_offset + 1 ]  )  )  {             x1 = v1 [ k1_offset + 1 ]  ;          } else {             x1 = v1 [ k1_offset - 1 ]  + 1 ;          }         int y1 = x1 - k1 ;          while  ( x1 < text1_length && y1 < text2_length && text1 . char At ( x1 )  == text2 . char At ( y1 )  )  {             x1++ ;              y1++ ;          }         v1 [ k1_offset ]  = x1 ;          if  ( x1 > text1_length )  {             //  Ran off the right of the graph .              k1end += 2 ;          } else if  ( y1 > text2_length )  {             //  Ran off the bottom of the graph .              k1start += 2 ;          } else if  ( front )  {             int k2_offset = v_offset + delta - k1 ;              if  ( k2_offset >= 0 && k2_offset < v_length && v2 [ k2_offset ]  != -1 )  {                 //  Mirror x2 onto top-left coordinate system .                  int x2 = text1_length - v2 [ k2_offset ]  ;                  if  ( x1 >= x2 )  {                     //  Overlap detected .                      return diff_bisect Split ( text1, text2, x1, y1 )  ;                  }             }         }     }     //  Walk the reverse path one step .      for  ( int k2 = -d + k2start ;  k2 <= d - k2end ;  k2 += 2 )  {         int k2_offset = v_offset + k2 ;          int x2 ;          if  ( k2 == -d ||  ( k2 != d && v2 [ k2_offset - 1 ]  < v2 [ k2_offset + 1 ]  )  )  {             x2 = v2 [ k2_offset + 1 ]  ;          } else {             x2 = v2 [ k2_offset - 1 ]  + 1 ;          }         int y2 = x2 - k2 ;          while  ( x2 < text1_length && y2 < text2_length && text1 . char At ( text1_length - x2 - 1 )  == text2 . char At ( text2_length - y2 - 1 )  )  {             x2++ ;              y2++ ;          }         v2 [ k2_offset ]  = x2 ;          if  ( x2 > text1_length )  {             //  Ran off the left of the graph .              k2end += 2 ;          } else if  ( y2 > text2_length )  {             //  Ran off the top of the graph .              k2start += 2 ;          } else if  ( !front )  {             int k1_offset = v_offset + delta - k2 ;              if  ( k1_offset >= 0 && k1_offset < v_length && v1 [ k1_offset ]  != -1 )  {                 int x1 = v1 [ k1_offset ]  ;                  int y1 = v_offset + x1 - k1_offset ;                  //  Mirror x2 onto top-left coordinate system .                  x2 = text1_length - x2 ;                  if  ( x1 >= x2 )  {                     //  Overlap detected .                      return diff_bisect Split ( text1, text2, x1, y1 )  ;                  }             }         }     } } //  Diff took too long and hit the deadline or // number of diffs equals number of characters, no commonality at all .   Linked List< Diff> diffs = new  Linked List< Diff> (  )  ;  diffs . add ( new  Diff (  Operation . DELETE, text1 )  )  ;  diffs . add ( new  Diff (  Operation . INSERT, text2 )  )  ;  return diffs ; }"
2137,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
2138,private void assert Not Contains (  String key Path String ) {  Document Key key =  Document Key . from Path String ( key Path String )  ;   Document actual = local Store . read Document ( key )  ;  assert False ( actual . is Valid Document (  )  )  ; }
2139,public boolean has Stable Ids (  ) { return false ; }
2140,public void remove Language ( final int index ) { this . languages . remove ( index )  ; }
2141,"public static  Hash Multimap<K, V> create ( int expected Keys, int expected Values Per Key ) { return new  Hash Multimap<> ( expected Keys, expected Values Per Key )  ; }"
2142,"public com . anychart . graphics . vector .  Element clip (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . clip ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
2143,public float get Stage X (  ) { return stage X ; }
2144,"public  Flexible Adapter<T> set Auto Scroll On Expand ( boolean scroll On Expand ) { log . i ( "" Set set Auto Scroll On Expand=%s"", scroll On Expand )  ;  this . scroll On Expand = scroll On Expand ;  return this ; }"
2145,public long get Delta Bytes (  ) { return object Type . delta Bytes ; }
2146,public  String get Active File Name (  ) {  String parents Raw File Property = get Parents Raw File Property (  )  ;  if  ( parents Raw File Property != null )  {     return parents Raw File Property ;  } else {     return time Based File Naming And Triggering Policy . get Current Periods File Name Without Compression Suffix (  )  ;  }}
2147,public void set Mode ( int m ) { int mode = 0 ;  if  (  ( m & 0x1 )  == 0 )  {     mode |= PDF Shape Cmd . FILL ;  } if  (  ( m & 0x4 )  != 0 )  {     mode |= PDF Shape Cmd . CLIP ;  } if  (  (  ( m & 0x1 )  ^  (  ( m & 0x2 )  >> 1 )  )  != 0 )  {     mode |= PDF Shape Cmd . STROKE ;  } this . tm = mode ; }
2148,"private  List<? extends  Element> really Get Enclosed Elements (  Type Element e,  Tree Path path ) { // from Element contains the elements that the compiler found or generated .   Because of // the weird  Error Type behavior, this will be missing elements that the user wrote .   List<? extends  Element> from Element = e . get Enclosed Elements (  )  ;   Queue<? extends  Element> from Element Queue = new  Array Deque<> ( from Element )  ;   Set<? extends  Element> from Element Set = new  Hash Set<> ( from Element )  ;  // from Tree contains the elements that the user wrote .   It will be missing compiler-generated // elements .   List<? extends  Element> from Tree =  (  (  Class Tree )  path . get Leaf (  )  )  . get Members (  )  . stream (  )  . filter (  tree -> tree . get Kind (  )  !=  Kind . BLOCK )  . map (  tree -> javac Trees . get Element ( new  Tree Path ( path, tree )  )  )  . collect (  Collectors . to List (  )  )  ;   Set<? extends  Element> from Tree Set = new  Hash Set<> ( from Tree )  ;   List< Element> result = new  Array List<> (  )  ;  for  (  Element element From Tree : from Tree )  {     if  ( from Element Set . contains ( element From Tree )  )  {         //  Output any compiler-generated elements that come before this one in the compiler's         // element list .           Element element From Element = from Element Queue . poll (  )  ;          while  ( element From Element != null && !from Tree Set . contains ( element From Element )  )  {             result . add ( element From Element )  ;              element From Element = from Element Queue . poll (  )  ;          }     }     result . add ( element From Tree )  ;  } return result ; }"
2149,"private static  Duo< List< Integer>,  List< Integer>> find Substitutions (  String str, int non Pos Max ) { if  ( non Pos Max == -1 )  {     non Pos Max =  Integer . MAX_VALUE ;  } int pos ;  int pos2 = 0 ;   List< Integer> non Positional = new  Array List<> (  )  ;   List< Integer> positional = new  Array List<> (  )  ;  if  ( str == null )  {     return new  Duo<> ( non Positional, positional )  ;  } int length = str . length (  )  ;  while  (  ( pos = str . index Of ( '%', pos2 )  )  != -1 )  {     pos2 = pos + 1 ;      if  ( pos2 == length )  {         non Positional . add ( pos )  ;          break ;      }     char c = str . char At ( pos2++ )  ;      if  ( c == '%' )  {         continue ;      }     if  ( c >= '0' && c <= '9' && pos2 < length )  {         while  (  ( c = str . char At ( pos2++ )  )  >= '0' && c <= '9' && pos2 < length )   ;          if  ( c == '$' )  {             positional . add ( pos )  ;              continue ;          }     }     non Positional . add ( pos )  ;      if  ( non Positional . size (  )  >= non Pos Max )  {         break ;      } } return new  Duo<> ( non Positional, positional )  ; }"
2150,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings padding (  Number [  ]  padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "",  Arrays . to String ( padding )  )  )  ;  return this ; }"
2151,"public  Abstract View Holder on Create Row Header View Holder ( @ Non Null  View Group parent, int view Type ) { //  Get  Row  Header xml  Layout  View layout =  Layout Inflater . from ( parent . get Context (  )  )  . inflate ( R . layout . table_view_row_header_layout, parent, false )  ;  //  Create a  Row  Header  View Holder return new  Row Header View Holder ( layout )  ; }"
2152,"public static void inject (  Fragment fragment ) { check Not Null ( fragment, ""fragment"" )  ;   Has Android Injector has Android Injector = find Has Android Injector For Fragment ( fragment )  ;  if  (  Log . is Loggable ( TAG, DEBUG )  )  {      Log . d ( TAG,  String . format ( "" An injector for %s was found in %s"", fragment . get Class (  )  . get Canonical Name (  ) , has Android Injector . get Class (  )  . get Canonical Name (  )  )  )  ;  } inject ( fragment, has Android Injector )  ; }"
2153,public static final void cancel Task (  Runnable r ) { init Thread (  )  ;  s Main Handler . remove Callbacks ( r )  ; }
2154,public int number Of Inserts (  ) { final  Integer cached Value = number Of Inserts Cache ;  if  ( cached Value != null )  {     return cached Value ;  } int number Of Inserts = 0 ;  for  ( T object : results . key Set (  )  )  {     if  ( results . get ( object )  . was Inserted (  )  )  {         number Of Inserts++ ;      } } number Of Inserts Cache = number Of Inserts ;  return number Of Inserts ; }
2155,"public com . anychart . core . axismarkers .  Line line Marker (  Number index ) { return new com . anychart . core . axismarkers .  Line (  String . format (  Locale . US, js Base + "" . line Marker ( %s ) "", index )  )  ; }"
2156,"public  Marker Options to Marker Options (  ) {  Marker Options marker Options = new  Marker Options (  )  ;  marker Options . alpha ( m Marker Options . get Alpha (  )  )  ;  marker Options . anchor ( m Marker Options . get Anchor U (  ) , m Marker Options . get Anchor V (  )  )  ;  marker Options . draggable ( m Marker Options . is Draggable (  )  )  ;  marker Options . flat ( m Marker Options . is Flat (  )  )  ;  marker Options . icon ( m Marker Options . get Icon (  )  )  ;  marker Options . info Window Anchor ( m Marker Options . get Info Window Anchor U (  ) , m Marker Options . get Info Window Anchor V (  )  )  ;  marker Options . rotation ( m Marker Options . get Rotation (  )  )  ;  marker Options . snippet ( m Marker Options . get Snippet (  )  )  ;  marker Options . title ( m Marker Options . get Title (  )  )  ;  marker Options . visible ( m Marker Options . is Visible (  )  )  ;  marker Options . z Index ( m Marker Options . get Z Index (  )  )  ;  return marker Options ; }"
2157,public  Builder layout Diffing ( boolean enabled ) { is Layout Diffing Enabled = enabled ;  return this ; }
2158,"public com . anychart . core . gantt . elements .  Progress Element stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
2159,"public static  Component Annotation component Annotation (  Annotation Mirror annotation ) {  Real Component Annotation .  Builder annotation Builder =  Real Component Annotation . builder (  )  . annotation ( annotation )  ;  if  ( is Type Of (  Component . class, annotation . get Annotation Type (  )  )  )  {     return annotation Builder . is Production ( false )  . is Subcomponent ( false )  . build (  )  ;  } if  ( is Type Of (  Subcomponent . class, annotation . get Annotation Type (  )  )  )  {     return annotation Builder . is Production ( false )  . is Subcomponent ( true )  . build (  )  ;  } if  ( is Type Of (  Production Component . class, annotation . get Annotation Type (  )  )  )  {     return annotation Builder . is Production ( true )  . is Subcomponent ( false )  . build (  )  ;  } if  ( is Type Of (  Production Subcomponent . class, annotation . get Annotation Type (  )  )  )  {     return annotation Builder . is Production ( true )  . is Subcomponent ( true )  . build (  )  ;  } throw new  Illegal Argument Exception ( annotation + "" must be a  Component,  Subcomponent,  Production Component, "" + ""or  Production Subcomponent annotation"" )  ; }"
2160,"public void word Wrap (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . word Wrap (  )  ; "" )  ; }"
2161,"public static  String get Property String Value (  Buck Function Trailer function Trailer,  String name ) { return  Optional . of Nullable ( function Trailer . get Named Argument ( name )  )  . map (  Buck Argument::get Expression )  . map (  Buck Expression::get String Value )  . or Else ( null )  ; }"
2162,private  View get Activity View (  ) {  Activity activity ;  try {     activity =  (  Activity )  get Context (  )  ;  } catch  (  Class Cast Exception e )  {     return null ;  } return activity . get Window (  )  . get Decor View (  )  . find View By Id ( android . R . id . content )  ; }
2163,My Object Subject delegating To (  Object actual ) { return check (  )  . about ( my Objects (  )  )  . that ( actual )  ; }
2164,public static void write (  Audio File f )  throws  Cannot Write Exception{ get Default Audio File IO (  )  . write File ( f )  ; }
2165,public  List< Integer> get Key Indexes (  ) { return m Key Indexes ; }
2166,public X509 Certificate [  ]  get Trusted C As (  ) { return trusted C As ; }
2167,"public int get Scrollable View Scroll Position (  View scrollable View, boolean is Sliding Up ) { if  ( scrollable View == null )      return 0 ;  if  ( scrollable View instanceof  Scroll View )  {     if  ( is Sliding Up )  {         return scrollable View . get Scroll Y (  )  ;      } else {          Scroll View sv =  (  (  Scroll View )  scrollable View )  ;           View child = sv . get Child At ( 0 )  ;          return  ( child . get Bottom (  )  -  ( sv . get Height (  )  + sv . get Scroll Y (  )  )  )  ;      } } else if  ( scrollable View instanceof  List View &&  (  (  List View )  scrollable View )  . get Child Count (  )  > 0 )  {      List View lv =  (  (  List View )  scrollable View )  ;      if  ( lv . get Adapter (  )  == null )          return 0 ;      if  ( is Sliding Up )  {          View first Child = lv . get Child At ( 0 )  ;          //  Approximate the scroll position based on the top child and the first visible item         return lv . get First Visible Position (  )  * first Child . get Height (  )  - first Child . get Top (  )  ;      } else {          View last Child = lv . get Child At ( lv . get Child Count (  )  - 1 )  ;          //  Approximate the scroll position based on the bottom child and the last visible item         return  ( lv . get Adapter (  )  . get Count (  )  - lv . get Last Visible Position (  )  - 1 )  * last Child . get Height (  )  + last Child . get Bottom (  )  - lv . get Bottom (  )  ;      } } else if  ( scrollable View instanceof  Recycler View &&  (  (  Recycler View )  scrollable View )  . get Child Count (  )  > 0 )  {      Recycler View rv =  (  (  Recycler View )  scrollable View )  ;       Recycler View .  Layout Manager lm = rv . get Layout Manager (  )  ;      if  ( rv . get Adapter (  )  == null )          return 0 ;      if  ( is Sliding Up )  {          View first Child = rv . get Child At ( 0 )  ;          //  Approximate the scroll position based on the top child and the first visible item         return rv . get Child Layout Position ( first Child )  * lm . get Decorated Measured Height ( first Child )  - lm . get Decorated Top ( first Child )  ;      } else {          View last Child = rv . get Child At ( rv . get Child Count (  )  - 1 )  ;          //  Approximate the scroll position based on the bottom child and the last visible item         return  ( rv . get Adapter (  )  . get Item Count (  )  - 1 )  * lm . get Decorated Measured Height ( last Child )  + lm . get Decorated Bottom ( last Child )  - rv . get Bottom (  )  ;      } } else {     return 0 ;  }}"
2168,public void edit (  New Expr e )  throws  Cannot Compile Exception{}
2169,public T8 get Value8 (  ) { return value8 ; }
2170,public int get Transmission Count (  ) { return network Transmit Count + 1 ; }
2171,public PDF Decrypter get Default Decrypter (  ) { return default Decrypter ; }
2172,"private static  Optional< String> get Device SSID (  String device )  throws  Interrupted Exception{ /*   $ networksetup -getairportnetwork ""en0""    Current  Wi- Fi  Network: lighthouse   -- or   $ networksetup -getairportnetwork ""en0""    You are not associated with an  Air Port network .     Wi- Fi power is currently off .    $ networksetup -getairportnetwork ""en6""   en6 is not a  Wi- Fi interface .    **  Error:  Error obtaining wireless information .  */ LOG . debug ( "" Determine  Wi Fi SSID of device"" )  ;   String media Output = run Network Setup Command ( ""getairportnetwork"", device )  ;   Matcher matcher = ssid Pattern . matcher ( media Output )  ;  if  ( matcher . find (  )  )  {     return  Optional . of ( matcher . group ( 1 )  )  ;  } return  Optional . empty (  )  ; }"
2173,"public void baseline Bar Position (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . baseline Bar Position (  )  ; "" )  ; }"
2174,"public void set Crop Grid Row Count ( @ Int Range ( from = 0 )  int count ) { m Option Bundle . put Int ( EXTRA_CROP_GRID_ROW_COUNT, count )  ; }"
2175,public boolean is Backbutton Overridden (  ) { return web View . is Button Plumbed To Js (  Key Event . KEYCODE_BACK )  ; }
2176,"public void insert (  Realm Model object ) { check If Valid And In Transaction (  )  ;  //noinspection  Constant Conditions if  ( object == null )  {     throw new  Illegal Argument Exception ( "" Null object cannot be inserted into  Realm . "" )  ;  }  Map< Realm Model,  Long> cache = new  Hash Map<> (  )  ;  configuration . get Schema Mediator (  )  . insert ( this, object, cache )  ; }"
2177,Immutable List< String> aliases (  ) { return  Immutable List . of (  )  ; }
2178,"private  Closeable Reference< Bitmap> create Bitmap ( int width, int height,  Bitmap .  Config config, boolean has Alpha, @ Nullable  Object caller Context ) { return create Bitmap ( null, width, height, config, has Alpha, caller Context )  ; }"
2179,public void start Video After Preloading (  ) { if  ( state == STATE_PREPARED )  {     media Interface . start (  )  ;  } else {     preloading = false ;      start Video (  )  ;  }}
2180,"public void pie (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . pie (  )  ; "" )  ; }"
2181,"public  Optional< Boolean> get Boolean (  String key ) { if  ( !contains Key ( key )  )  {     return  Optional . absent (  )  ;  } try {      Object o = bundle . get ( key )  ;      return  Optional . from Nullable (  (  Boolean )  o )  ;  } catch  (  Class Cast Exception e )  {     logger . debug ( "" Metadata key %s contains type other than boolean: %s"", key, e . get Message (  )  )  ;  } return  Optional . absent (  )  ; }"
2182,public  Level get Level (  ) { return m Level ; }
2183,"public com . anychart . core . axes .  Circular minor Ticks (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . minor Ticks ( %s )  ; "", settings )  )  ;  return this ; }"
2184,"public com . anychart . charts .  Cartesian3d padding (  Number value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, value3, value4 )  )  ;  return this ; }"
2185,"Token Cache Item get FRT Item ( final  String family Client Id, final  String user )  throws  Malformed URL Exception{ final  Cache Event cache Event = start Cache Telemetry Request (  Event Strings . TOKEN_TYPE_FRT )  ;  if  (  String Extensions . is Null Or Blank ( user )  )  {      Telemetry . get Instance (  )  . stop Event ( m Telemetry Request Id, cache Event,  Event Strings . TOKEN_CACHE_LOOKUP )  ;      return null ;  } final  String cache Key =  Cache Key . create Cache Key For FRT ( get Authority Url With Preferred Cache (  ) , family Client Id, user )  ;   Token Cache Item item = m Token Cache Store . get Item ( cache Key )  ;  if  ( item == null )  {     item = perform Additional Cache Lookup ( null, null, family Client Id, user, FRT_TOKEN_ENTRY )  ;  } if  ( item != null )  {     cache Event . set Token Type FRT ( true )  ;  }  Telemetry . get Instance (  )  . stop Event ( m Telemetry Request Id, cache Event,  Event Strings . TOKEN_CACHE_LOOKUP )  ;  return item ; }"
2186,"public  View Transition Builder transit View Group ( @ Non Null  View Group Transition view Group Transition ) {  View Group vg =  (  View Group )  m View ;  int total = vg . get Child Count (  )  ;   View view ;   View Group Transition Config config = new  View Group Transition Config ( vg, total )  ;  for  ( int i = 0 ;  i < total ;  i++ )  {     view = vg . get Child At ( i )  ;      config . child View = view ;      config . index = i ;      view Group Transition . transit ( target ( view ) , config )  ;  } return self (  )  ; }"
2187,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
2188,private void check Task Interrupted (  )  throws  Task Cancelled Exception{ if  ( is Task Interrupted (  )  )  {     throw new  Task Cancelled Exception (  )  ;  }}
2189,"public com . anychart . charts .  Circular Gauge stroke ( com . anychart . graphics . vector .  Colored Fill value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
2190,"public final  Result get (  )  throws  Interrupted Exception,  Execution Exception{ return m Future . get (  )  ; }"
2191,public  Media Type get Media Type (  ) { return media Type ; }
2192,"public com . anychart . core . stock . scrollerseries .  Range Step Area low Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
2193,"public void test Delete (  ) {  Delete Payload payload =  Delete Payload . builder (  )  . ref Type (  Reference Type .  Branch )  . ref ( ""b1"" )  . build (  )  ;   Git Hub Event event = create Event (  Git Hub Event Type .  Delete Event, payload )  ;  update View ( event )  ;  verify ( ""user deleted branch b1 at user/repo"" )  ; }"
2194,public  View .  On Click Listener get On Click Listener (  ) { return on Click Listener ; }
2195,public int get Period Count (  ) { if  ( media Source == null )  {     return 0 ;  } assert Prepared With Media (  )  ;  return track Group Arrays . length ; }
2196,"protected  Image View create Back Side View ( int height ) {  Image View image View = new  Image View ( get Context (  )  )  ;  image View . set Background Color ( m Back Side Color )  ;  image View . set Layout Params ( new  Layout Params (  View Group .  Layout Params . MATCH_PARENT, height )  )  ;  return image View ; }"
2197,"static JSON Object create Abt Experiment (  String experiment Id )  throws JSON Exception{ JSON Object abt Experiment = new JSON Object (  )  ;  abt Experiment . put ( EXPERIMENT_ID_KEY, experiment Id )  ;  abt Experiment . put ( EXPERIMENT_VARIANT_ID_KEY, ""var1"" )  ;  abt Experiment . put ( EXPERIMENT_START_TIME_KEY, new  Date ( 1 L )  )  ;  abt Experiment . put ( EXPERIMENT_TRIGGER_EVENT_KEY, ""trigger event"" )  ;  abt Experiment . put ( EXPERIMENT_TRIGGER_TIMEOUT_KEY, 5000 L )  ;  abt Experiment . put ( EXPERIMENT_TIME_TO_LIVE_KEY, 10000 L )  ;  return abt Experiment ; }"
2198,public static  Locale get Default (  ) { return default Locale ; }
2199,"public final void add Part Converter (  Http Message Converter<?> part Converter ) {  Assert . not Null ( part Converter, ""'part Converter' must not be NULL"" )  ;  this . part Converters . add ( part Converter )  ; }"
2200,"private void scale Bitmaps (  Bitmap [  ]  bitmaps, float scale ) { for  ( int i = 0 ;  i < bitmaps . length ;  i++ )  {     bitmaps [ i ]  = scale Bitmap ( bitmaps [ i ] , scale )  ;  }}"
2201,public final  Service stop Async (  ) { delegate . stop Async (  )  ;  return this ; }
2202,"public  Container<T> min Size (  Value size ) { if  ( size == null )      throw new  Illegal Argument Exception ( ""size cannot be null . "" )  ;  min Width = size ;  min Height = size ;  return this ; }"
2203,"public void test Deserialize Different Version (  )  throws  Authentication Exception{ final  String different Version String = ""{\""token Cache Items\"": [ {\""authority\"":\""https://login . windows . net/ Com Mon/\"",\""refresh_token\"":\""FRT\"",\""id_token\"":\""ey J0e X Ai Oi JKV1 Qi LC Jhb Gci Oi Jub25l In0 . ey Jhd W Qi Oi Jl Nz Bi MTE1 ZS1h Yz Bh LTQ4 Mj Mt OD Vk YS04 Zj Ri N2 I0 Zj Aw ZT Yi LC Jpc3 Mi Oi Jod H Rwczov L3 N0cy53a W5kb3dz Lm5ld C8z MG Jh YTY2 Ni04 ZGY4 LTQ4 Z Tct O Tdl Ni03 N2 Nm ZDA5 OTU5 Nj Mv Iiwibm Jm Ijox Mzc2 NDI4 Mz Ew LC Jle H Ai Oj Ez Nz Y0 N Tcx MT As In Zlci I6 Ij Eu MC Is In Rp ZCI6 Ij Mw Ym Fh Nj Y2 L Thk Zjgt N Dhl Ny05 N2 U2 L Tc3 Y2 Zk M Dk5 N Tk2 My Is Im9p ZCI6 Ij Rm ODU5 O Tg5 LW Ey Zm Yt ND Ex ZS05 MDQ4 LW Mz Mj Iy N Ddh Yz Yy Yy Is In Vwbi I6 Im Fkb Wlu QG Fhb H Rlc3 Rz Lm9ub Wljcm9zb2 Z0 Lm Nvb S Is In Vua XF1 ZV9u YW1l Ijoi YW Rta W5 AYW Fsd G Vzd H Mub25ta W Nyb3 Nv Zn Qu Y29t Iiwic3 Vi Ijoi VDU0 V2h GR1 Rnb EJMN1 VWY Wtl O Dc5 Ukdh ZEV Oa Uh5 LX Njen NY Tm Fx RF9j NC Is Im Zhb Wlse V9u YW1l Ijoi U2 Vw Z Whya S Is Imdpdm Vu X25hb W Ui Oi JB Zn Noa W4if Q . \"",\""foci\"":\""1\""} ] ,\""version\"":2}"" ;  final  File Mock Context mock Context = new  File Mock Context ( get Instrumentation (  )  . get Context (  )  )  ;  final  Default Token Cache Store mock Cache = new  Default Token Cache Store ( mock Context )  ;  final  Authentication Context context = get Authentication Context ( mock Context, VALID_AUTHORITY, false, mock Cache )  ;  context . deserialize ( different Version String )  ; }"
2204,public void post (  Runnable runnable ) { m Delegate . post ( runnable )  ; }
2205,"public  Builder opacity ( double val ) { opacity = val ;  //  Check that opacity is in range if  ( opacity < 0 || opacity > 1 )  {     throw new  Illegal Argument Exception ( "" Opacity must be in range  [ 0, 1 ] "" )  ;  } return this ; }"
2206,"public int add Name And Type Info (  String name,  String type ) { return add Name And Type Info ( add Utf8 Info ( name ) , add Utf8 Info ( type )  )  ; }"
2207,"public static  Spanned strip Tags ( final  String p HTML String ) {  String str = p HTML String . replace All ( ""<footer\\s+ (  [ ^> ] * ) \\s*>*</footer>"", """" )  ;  return  Html . from Html ( str )  ; }"
2208,"public static  Matcher< View> component Host ( final  Matcher<? extends  Component Host> sub Matcher ) { return new  Base Matcher< View> (  )  {     @ Override     public boolean matches (  Object item )  {         if  ( ! ( item instanceof  Component Host )  )  {             return false ;          }         return sub Matcher . matches (  (  Component Host )  item )  ;      }     @ Override     public void describe To (  Description description )  {         description . append Text ( "" Expected to be a  Component Host matching: "" )  ;          sub Matcher . describe To ( description )  ;      } } ; }"
2209,"public int get Child Drawing Order ( int child Count, int index ) { if  ( m Drawing Order Indices == null )  {      Array List< View> views To Sort = new  Array List<> (  )  ;      for  ( int i = 0 ;  i < child Count ;  i++ )  {         views To Sort . add ( m View Group . get Child At ( i )  )  ;      }     //  Sort the views by z Index      Collections . sort ( views To Sort, new  Comparator< View> (  )  {         @ Override         public int compare (  View view1,  View view2 )  {              Integer view1 Z Index =  View Group Manager . get View Z Index ( view1 )  ;              if  ( view1 Z Index == null )  {                 view1 Z Index = 0 ;              }              Integer view2 Z Index =  View Group Manager . get View Z Index ( view2 )  ;              if  ( view2 Z Index == null )  {                 view2 Z Index = 0 ;              }             return view1 Z Index - view2 Z Index ;          }     } )  ;      m Drawing Order Indices = new int [ child Count ]  ;      for  ( int i = 0 ;  i < child Count ;  i++ )  {          View child = views To Sort . get ( i )  ;          m Drawing Order Indices [ i ]  = m View Group . index Of Child ( child )  ;      } } return m Drawing Order Indices [ index ]  ; }"
2210,"public void setup With View Pager ( @ Nullable final  View Pager2 view Pager ) { if  ( m View Pager != null )  {     if  ( m On Page Change Listener != null )  {         m View Pager . unregister On Page Change Callback ( m On Page Change Listener )  ;      } } if  ( m View Pager Selected Listener != null )  {     remove On Tab Selected Listener ( m View Pager Selected Listener )  ;      m View Pager Selected Listener = null ;  } if  ( view Pager != null )  {     m View Pager = view Pager ;      if  ( m On Page Change Listener == null )  {         m On Page Change Listener = new  Tab Layout On Page Change Listener ( this )  ;      }     view Pager . register On Page Change Callback ( m On Page Change Listener )  ;      m View Pager Selected Listener = new  View Pager On Tab Selected Listener ( view Pager )  ;      add On Tab Selected Listener ( m View Pager Selected Listener )  ;      final int cur Item = m View Pager . get Current Item (  )  ;      select Tab ( cur Item, true, false )  ;  } else {     m View Pager = null ;  }}"
2211,public void set Drag Offset Y ( float offset ) { m View Port Handler . set Drag Offset Y ( offset )  ; }
2212,public  Complete Builder with Get Resolver ( @ Nullable  Get Resolver< Integer> get Resolver ) { this . get Resolver = get Resolver ;  return this ; }
2213,public  List select Nodes (  Object node )  throws  Jaxen Exception{  Context context = get Context ( node )  ;  return select Nodes For Context ( context )  ; }
2214,public final  String get Metric (  ) { return metric ; }
2215,public  Input Stream open Input Stream (  )  throws IO Exception{ return new  Block Input Stream (  )  ; }
2216,public  String get Type (  ) { return get Geometry Type (  )  ; }
2217,"public void hover Gap (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . hover Gap (  )  ; "" )  ; }"
2218,"public  Model Do Not Use In To String_ on Visibility Changed (  On Model Visibility Changed Listener< Model Do Not Use In To String_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
2219,public boolean is Local Thumbnail Previews Enabled (  ) { return m Local Thumbnail Previews Enabled ; }
2220,public  Container<T> min Size ( float size ) { min Size (  Fixed . value Of ( size )  )  ;  return this ; }
2221,"public com . anychart . charts .  Scatter bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
2222,public static boolean will Get New Node Mqtt Broker Url (  ) { return local Data Manager . will Get New Node Mqtt Broker Url (  )  ; }
2223,"public com . anychart . core . stock . scrollerseries .  Spline height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
2224,public boolean is Managed (  ) { return  Realm Object . is Managed ( this )  ; }
2225,void reset (  ) { time Started = 0 ;  time Completed = 0 ;  completed = false ;  throwable = null ;  result = null ;  merged Operations Count = 0 ; }
2226,"public com . anychart . core . stock . scrollerseries .  Candlestick falling Stroke ( com . anychart . graphics . vector .  Colored Fill value,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
2227,public static _ Fields find By Thrift Id ( int field Id ) { switch ( field Id )  {     case // RULE_KEY     1:         return RULE_KEY ;      case // REPOSITORY     2:         return REPOSITORY ;      case // SCHEDULE_TYPE     3:         return SCHEDULE_TYPE ;      case // BUILD_TARGET     5:         return BUILD_TARGET ;      default:         return null ;  }}
2228,"public com . anychart . charts .  Pie cancel Marquee (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . cancel Marquee (  )  ; "" )  ;  return this ; }"
2229,static  Dynamic Realm create Instance (  Os Shared Realm shared Realm ) { return new  Dynamic Realm ( shared Realm )  ; }
2230,"public void set Min Frame ( final  String marker Name ) { if  ( composition == null )  {     lazy Composition Tasks . add ( new  Lazy Composition Task (  )  {         @ Override         public void run (  Lottie Composition composition )  {             set Min Frame ( marker Name )  ;          }     } )  ;      return ;  }  Marker marker = composition . get Marker ( marker Name )  ;  if  ( marker == null )  {     throw new  Illegal Argument Exception ( "" Cannot find marker with name "" + marker Name + "" . "" )  ;  } set Min Frame (  ( int )  marker . start Frame )  ; }"
2231,"public static  Pool<T> get (  Class<T> type, int max ) {  Pool pool = type Pools . get ( type )  ;  if  ( pool == null )  {     pool = new  Reflection Pool ( type, 4, max )  ;      type Pools . put ( type, pool )  ;  } return pool ; }"
2232,"public com . anychart . charts .  Heat Map bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
2233,"void add Call Site Item (  Cst Call Site call Site,  Call Site Item call Site Item ) { if  ( call Site == null )  {     throw new  Null Pointer Exception ( ""call Site == null"" )  ;  } if  ( call Site Item == null )  {     throw new  Null Pointer Exception ( ""call Site Item == null"" )  ;  } call Sites . put ( call Site, call Site Item )  ; }"
2234,"public  Value parse Query Value (  Object input ) { return parse Query Value ( input, false )  ; }"
2235,private  Json Array serialize Bound App Keys ( final  List< Integer> bound App Keys ) { final  Json Array bound App Key Indexes = new  Json Array (  )  ;  for  (  Integer index : bound App Keys )  {     bound App Key Indexes . add ( index )  ;  } return bound App Key Indexes ; }
2236,public  String get Color (  ) { return color ; }
2237,"public void create Tables (  Table Creation Mode mode ) { try  (  Connection connection = get Connection (  )  )  {     connection . set Auto Commit ( false )  ;      create Tables ( connection, mode, true )  ;      connection . commit (  )  ;  } catch  ( SQL Exception e )  {     throw new  Table Modification Exception ( e )  ;  }}"
2238,"private boolean collision Check (  Base Sub A,  Base Sub B ) { return  Rect F . intersects ( A . get Bounds (  ) , B . get Bounds (  )  )  ; }"
2239,"public void track Map (  String event Name,  Map< String,  Object> properties ) { if  ( has Opted Out Tracking (  )  )      return ;  if  ( null == properties )  {     track ( event Name, null )  ;  } else {     try {         track ( event Name, new JSON Object ( properties )  )  ;      } catch  (  Null Pointer Exception e )  {         MP Log . w ( LOGTAG, "" Can't have null keys in the properties of track Map!"" )  ;      } }}"
2240,public  Builder set Should Hide Webview Share Button ( boolean should Hide Webview Share Button ) { this . should Hide Webview Share Button = should Hide Webview Share Button ;  return this ; }
2241,public void set Is Guest User ( boolean is Guest User ) { if  (  Runtime Environment . get Api Level (  )  >= R )  {     set User Type ( is Guest User ? USER_TYPE_FULL_GUEST : USER_TYPE_FULL_SECONDARY )  ;      return ;  }  User Info user Info = get User Info (  User Handle . my User Id (  )  )  ;  if  ( is Guest User )  {     user Info . flags |=  User Info . FLAG_GUEST ;  } else {     user Info . flags &= ~ User Info . FLAG_GUEST ;  }}
2242,"public com . anychart . core . axismarkers .  Line line Marker (  Number index ) { return new com . anychart . core . axismarkers .  Line (  String . format (  Locale . US, js Base + "" . line Marker ( %s ) "", index )  )  ; }"
2243,"public  String get Persistence Key (  ) { return encode Url Safe No Padding ( get Name (  )  . get Bytes (  Charset . default Charset (  )  )  )  + ""+"" + encode Url Safe No Padding ( get Options (  )  . get Application Id (  )  . get Bytes (  Charset . default Charset (  )  )  )  ; }"
2244,"public static  Uri get Uri For File (  String authority,  File file ) {  Soft Reference< Stream Provider> ref = INSTANCES . get ( authority )  ;   Uri result = null ;  if  ( ref != null )  {     result = ref . get (  )  . get Uri For File Impl ( authority, file )  ;  } return  ( result )  ; }"
2245,"public static  Mp4 Meta Box createi Tunes Style Meta Box ( int children Size ) {  Mp4 Box Header meta Header = new  Mp4 Box Header (  Mp4 Atom Identifier . META . get Field Name (  )  )  ;  meta Header . set Length (  Mp4 Box Header . HEADER_LENGTH +  Mp4 Meta Box . FLAGS_LENGTH + children Size )  ;   Byte Buffer meta Data =  Byte Buffer . allocate (  Mp4 Meta Box . FLAGS_LENGTH )  ;   Mp4 Meta Box meta Box = new  Mp4 Meta Box ( meta Header, meta Data )  ;  return meta Box ; }"
2246,public static void on Resume ( boolean seek ) { if  ( GSY Video Manager . instance (  )  . listener (  )  != null )  {     GSY Video Manager . instance (  )  . listener (  )  . on Video Resume ( seek )  ;  }}
2247,public static void hook Init Package Resources ( XC_ Init Package Resources callback ) { synchronized  ( s Init Package Resources Callbacks )  {     s Init Package Resources Callbacks . add ( callback )  ;  }}
2248,public void set Selected Group ( final int address ) { m Nrf Mesh Repository . set Selected Group ( address )  ; }
2249,"public void to Html Table (  String title,  Boolean as String ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Html Table ( %s, %s )  ; "", wrap Quotes ( title ) , as String )  )  ; }"
2250,"public  Realm Query<E> in (  String field Name, @ Nullable  Date [  ]  values ) { realm . check If Valid (  )  ;  if  ( values == null || values . length == 0 )  {     always False (  )  ;      return this ;  } else {     begin Group Without Thread Validation (  )  . equal To Without Thread Validation ( field Name, values [ 0 ]  )  ;      for  ( int i = 1 ;  i < values . length ;  i++ )  {         or Without Thread Validation (  )  . equal To Without Thread Validation ( field Name, values [ i ]  )  ;      }     return end Group Without Thread Validation (  )  ;  }}"
2251,"public com . anychart . core . stock .  Plot legend (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . legend ( %s )  ; "", value )  )  ;  return this ; }"
2252,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
2253,"public void points Padding (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . points Padding (  )  ; "" )  ; }"
2254,"public com . anychart . core . gauge . pointers .  Needle end Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . end Width ( %s )  ; "", width )  )  ;  return this ; }"
2255,"protected final void assert Invariants (  Map<K, V> map ) {  Set<K> key Set = map . key Set (  )  ;   Collection<V> value Collection = map . values (  )  ;   Set< Entry<K, V>> entry Set = map . entry Set (  )  ;  assert Equals ( map . size (  )  == 0, map . is Empty (  )  )  ;  assert Equals ( map . size (  ) , key Set . size (  )  )  ;  assert Equals ( key Set . size (  )  == 0, key Set . is Empty (  )  )  ;  assert Equals ( !key Set . is Empty (  ) , key Set . iterator (  )  . has Next (  )  )  ;  int expected Key Set Hash = 0 ;  for  ( K key : key Set )  {     V value = map . get ( key )  ;      expected Key Set Hash += key != null ? key . hash Code (  )  : 0 ;      assert True ( map . contains Key ( key )  )  ;      assert True ( map . contains Value ( value )  )  ;      assert True ( value Collection . contains ( value )  )  ;      assert True ( value Collection . contains All (  Collections . singleton ( value )  )  )  ;      assert True ( entry Set . contains ( map Entry ( key, value )  )  )  ;      assert True ( allows Null Keys ||  ( key != null )  )  ;  } assert Equals ( expected Key Set Hash, key Set . hash Code (  )  )  ;  assert Equals ( map . size (  ) , value Collection . size (  )  )  ;  assert Equals ( value Collection . size (  )  == 0, value Collection . is Empty (  )  )  ;  assert Equals ( !value Collection . is Empty (  ) , value Collection . iterator (  )  . has Next (  )  )  ;  for  ( V value : value Collection )  {     assert True ( map . contains Value ( value )  )  ;      assert True ( allows Null Values ||  ( value != null )  )  ;  } assert Equals ( map . size (  ) , entry Set . size (  )  )  ;  assert Equals ( entry Set . size (  )  == 0, entry Set . is Empty (  )  )  ;  assert Equals ( !entry Set . is Empty (  ) , entry Set . iterator (  )  . has Next (  )  )  ;  assert Entry Set Not Contains String ( entry Set )  ;  boolean supports Values Hash Code = supports Values Hash Code ( map )  ;  if  ( supports Values Hash Code )  {     int expected Entry Set Hash = 0 ;      for  (  Entry<K, V> entry : entry Set )  {         assert True ( map . contains Key ( entry . get Key (  )  )  )  ;          assert True ( map . contains Value ( entry . get Value (  )  )  )  ;          int expected Hash =  ( entry . get Key (  )  == null ? 0 : entry . get Key (  )  . hash Code (  )  )  ^  ( entry . get Value (  )  == null ? 0 : entry . get Value (  )  . hash Code (  )  )  ;          assert Equals ( expected Hash, entry . hash Code (  )  )  ;          expected Entry Set Hash += expected Hash ;      }     assert Equals ( expected Entry Set Hash, entry Set . hash Code (  )  )  ;      assert True ( entry Set . contains All ( new  Hash Set< Entry<K, V>> ( entry Set )  )  )  ;      assert True ( entry Set . equals ( new  Hash Set< Entry<K, V>> ( entry Set )  )  )  ;  }  Object [  ]  entry Set To Array1 = entry Set . to Array (  )  ;  assert Equals ( map . size (  ) , entry Set To Array1 . length )  ;  assert True (  Arrays . as List ( entry Set To Array1 )  . contains All ( entry Set )  )  ;   Entry<?, ?> [  ]  entry Set To Array2 = new  Entry<?, ?> [ map . size (  )  + 2 ]  ;  entry Set To Array2 [ map . size (  )  ]  = map Entry ( ""foo"", 1 )  ;  assert Same ( entry Set To Array2, entry Set . to Array ( entry Set To Array2 )  )  ;  assert Null ( entry Set To Array2 [ map . size (  )  ]  )  ;  assert True (  Arrays . as List ( entry Set To Array2 )  . contains All ( entry Set )  )  ;   Object [  ]  values To Array1 = value Collection . to Array (  )  ;  assert Equals ( map . size (  ) , values To Array1 . length )  ;  assert True (  Arrays . as List ( values To Array1 )  . contains All ( value Collection )  )  ;   Object [  ]  values To Array2 = new  Object [ map . size (  )  + 2 ]  ;  values To Array2 [ map . size (  )  ]  = ""foo"" ;  assert Same ( values To Array2, value Collection . to Array ( values To Array2 )  )  ;  assert Null ( values To Array2 [ map . size (  )  ]  )  ;  assert True (  Arrays . as List ( values To Array2 )  . contains All ( value Collection )  )  ;  if  ( supports Values Hash Code )  {     int expected Hash = 0 ;      for  (  Entry<K, V> entry : entry Set )  {         expected Hash += entry . hash Code (  )  ;      }     assert Equals ( expected Hash, map . hash Code (  )  )  ;  } assert More Invariants ( map )  ; }"
2256,public  Iterator< Tiled Map Tile Set> iterator (  ) { return tilesets . iterator (  )  ; }
2257,public  React Instance Manager Builder set UI Implementation Provider ( @ Nullable UI Implementation Provider ui Implementation Provider ) { m UI Implementation Provider = ui Implementation Provider ;  return this ; }
2258,"public com . anychart . core . utils .  Legend Item Settings icon Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . icon Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
2259,"public com . anychart . standalones .  Color Range align ( com . anychart . enums .  Align align ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . align ( %s )  ; "",  ( align != null )  ? align . get Js Base (  )  : null )  )  ;  return this ; }"
2260,"public com . anychart . charts .  Cartesian3d baseline (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . baseline ( %s )  ; "", value )  )  ;  return this ; }"
2261,"public void notify Observers Of Request Failure (  Cached Spice Request<?> request ) {  Request Processing Context request Processing Context = new  Request Processing Context (  )  ;  request Processing Context . set Execution Thread (  Thread . current Thread (  )  )  ;  post ( new  Request Failed Notifier ( request, spice Service Listener List, request Processing Context )  )  ; }"
2262,"public com . anychart . scales .  Ordinal x Scale (  ) { return new com . anychart . scales .  Ordinal ( js Base + "" . x Scale (  ) "" )  ; }"
2263,"public static boolean is Zip64 End Of Central Directory Locator Present (  Byte Buffer zip Contents, int zip End Of Central Directory Position ) { assert Byte Order Little Endian ( zip Contents )  ;  // ZIP64  End of  Central  Directory  Locator immediately precedes the ZIP  End of  Central //  Directory  Record .  int locator Position = zip End Of Central Directory Position - ZIP64_EOCD_LOCATOR_SIZE ;  if  ( locator Position < 0 )  {     return false ;  } return zip Contents . get Int ( locator Position )  == ZIP64_EOCD_LOCATOR_SIG ; }"
2264,protected  Server Socket Factory get Server Socket Factory (  )  throws  Exception{ return  Server Socket Factory . get Default (  )  ; }
2265,public void set Tag (  String short Name ) { this . tag = short Name ; }
2266,"private void internal Setup Progress Bar (  View Group parent,  View view ) { if  ( use Progress Bar )  {     m Progress View =  (  View )  parent . find View By Id ( get Progress Bar Id (  )  )  ;      m List Shown = true ;      if  ( m Progress View != null )  {         if  ( m Progress View instanceof  View Stub )               (  (  View Stub )  m Progress View )  . set Layout Resource ( get Progress Bar View Stub Layout Id (  )  )  ;          set Progress View ( m Progress View )  ;      } }}"
2267,static  String is Dot Super ( AS Tree target ) { if  ( target instanceof  Expr )  {      Expr e =  (  Expr )  target ;      if  ( e . get Operator (  )  == ' . ' )  {         AS Tree right = e . oprand2 (  )  ;          if  ( right instanceof  Keyword &&  (  (  Keyword )  right )  . get (  )  == SUPER )              return  (  (  Symbol )  e . oprand1 (  )  )  . get (  )  ;      } } return null ; }
2268,"public com . anychart . charts .  Sankey margin (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
2269,"public void font Variant (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Variant (  )  ; "" )  ; }"
2270,"public static  Pixmap decode Image ( ETC1 Data etc1 Data,  Format format ) { int data Offset = 0 ;  int width = 0 ;  int height = 0 ;  if  ( etc1 Data . has PKM Header (  )  )  {     data Offset = 16 ;      width = ETC1 . get Width PKM ( etc1 Data . compressed Data, 0 )  ;      height = ETC1 . get Height PKM ( etc1 Data . compressed Data, 0 )  ;  } else {     data Offset = 0 ;      width = etc1 Data . width ;      height = etc1 Data . height ;  } int pixel Size = get Pixel Size ( format )  ;   Pixmap pixmap = new  Pixmap ( width, height, format )  ;  decode Image ( etc1 Data . compressed Data, data Offset, pixmap . get Pixels (  ) , 0, width, height, pixel Size )  ;  return pixmap ; }"
2271,public boolean is Drag X Enabled (  ) { return m Drag X Enabled ; }
2272,"public com . anychart . core . utils .  Unbound Regions Settings fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
2273,"public com . anychart . charts .  Venn margin (  String [  ]  margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "", array To String Wrap Quotes ( margin )  )  )  ;  return this ; }"
2274,public  Input Stream get Input Stream (  Artifact artifact )  throws IO Exception{ return filesystem . new File Input Stream ( resolve To Path ( artifact )  )  ; }
2275,public int get Y Labels (  ) { return m Y Labels ; }
2276,"public void local To Global (  Number x Coord,  Number y Coord ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . local To Global ( %s, %s )  ; "", x Coord, y Coord )  )  ; }"
2277,public  String get Class Info By Descriptor ( int index ) {  Class Info c =  (  Class Info )  get Item ( index )  ;  if  ( c == null )      return null ;   String class Name = get Utf8 Info ( c . name )  ;  if  ( class Name . char At ( 0 )  == ' [ ' )      return class Name ;  return  Descriptor . of ( class Name )  ; }
2278,public boolean contains ( X Path Element key ) { if  ( get ( key )  != null )  {     return true ;  } return false ; }
2279,"public com . anychart . standalones .  Data Grid right (  String right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", wrap Quotes ( right )  )  )  ;  return this ; }"
2280,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_MPEG_LOCATION_LOOKUP_TABLE ; }
2281,"private DRS Metadata request On Prem ( final  String domain )  throws  Unknown Host Exception,  Authentication Exception{  Logger . v ( TAG, "" Requesting DRS discovery  ( on-prem ) "" )  ;  return request Drs Discovery Internal ( ON_PREM, domain )  ; }"
2282,"public void test Select Tracks With No Track Within Capabilities And Set By Params Return No Selection (  )  throws  Exception{  Format audio Format =  Format . create Audio Sample Format ( ""audio"",  Mime Types . AUDIO_AAC, null,  Format . NO_VALUE,  Format . NO_VALUE, 2, 44100, null, null, 0, null )  ;   Track Group Array track Groups = single Track Group ( audio Format )  ;  track Selector . set Parameters (  Parameters . DEFAULT . build Upon (  )  . set Exceed Renderer Capabilities If Necessary ( false )  . build (  )  )  ;   Track Selector Result result = track Selector . select Tracks ( new  Renderer Capabilities [  ]  { ALL_AUDIO_FORMAT_EXCEEDED_RENDERER_CAPABILITIES }, track Groups, period Id, TIMELINE )  ;  assert No Selection ( result . selections . get ( 0 )  )  ; }"
2283,"private static  Constant throw Invalid ( int idx ) { throw new  Exception With Context ( ""invalid constant pool index "" +  Hex . u2 ( idx )  )  ; }"
2284,"public com . anychart . core . axismarkers .  Gantt Text background (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2285,public void set Handler (  Handler handler ) { this . handler = handler ; }
2286,"public com . anychart . core . resource .  Logo height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
2287,"public void inverse Transform (  Number ratio ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . inverse Transform ( %s )  ; "", ratio )  )  ; }"
2288,public boolean equals (  Object obj ) { if  ( ! ( obj instanceof  String Fixed Length )  )  {     return false ;  }  String Fixed Length object =  (  String Fixed Length )  obj ;  return this . size == object . size && super . equals ( obj )  ; }
2289,"public void get Resource As Stream (  )  throws  Exception{  Phonenumber .  Phone Number phone Number = new  Phonenumber .  Phone Number (  )  ;  phone Number . set Country Code ( 7 )  ;  phone Number . set National Number ( 4956360636 L )  ;   String format =  Phone Number Util . get Instance (  )  . format ( phone Number,  Phone Number Util .  Phone Number Format . INTERNATIONAL )  ;  assert That ( format )  . is Not Null (  )  ; }"
2290,"public final void find Max Separation (  Edge Results results, final  Polygon Shape poly1, final  Transform xf1, final  Polygon Shape poly2, final  Transform xf2 ) { int count1 = poly1 . m_count ;  int count2 = poly2 . m_count ;   Vec2 [  ]  n1s = poly1 . m_normals ;   Vec2 [  ]  v1s = poly1 . m_vertices ;   Vec2 [  ]  v2s = poly2 . m_vertices ;   Transform . mul Trans To Out Unsafe ( xf2, xf1, xf )  ;  final  Rot xfq = xf . q ;  int best Index = 0 ;  float max Separation = - Float . MAX_VALUE ;  for  ( int i = 0 ;  i < count1 ;  i++ )  {     //  Get poly1 normal in frame2 .       Rot . mul To Out Unsafe ( xfq, n1s [ i ] , n )  ;       Transform . mul To Out Unsafe ( xf, v1s [ i ] , v1 )  ;      //  Find deepest point for normal i .      float si =  Float . MAX_VALUE ;      for  ( int j = 0 ;  j < count2 ;  ++j )  {          Vec2 v2sj = v2s [ j ]  ;          float sij = n . x *  ( v2sj . x - v1 . x )  + n . y *  ( v2sj . y - v1 . y )  ;          if  ( sij < si )  {             si = sij ;          }     }     if  ( si > max Separation )  {         max Separation = si ;          best Index = i ;      } } results . edge Index = best Index ;  results . separation = max Separation ; }"
2291,"public com . anychart . charts .  Heat Map fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
2292,"public static  Lottie Task< Lottie Composition> from Raw Res (  Context context, @ Raw Res final int raw Res, @ Nullable final  String cache Key ) { //  Prevent accidentally leaking an  Activity .  final  Weak Reference< Context> context Ref = new  Weak Reference<> ( context )  ;  final  Context app Context = context . get Application Context (  )  ;  return cache ( cache Key, new  Callable< Lottie Result< Lottie Composition>> (  )  {     @ Override     public  Lottie Result< Lottie Composition> call (  )  {         @ Nullable  Context original Context = context Ref . get (  )  ;           Context context = original Context != null ? original Context : app Context ;          return from Raw Res Sync ( context, raw Res, cache Key )  ;      } } )  ; }"
2293,"public com . anychart . core . ui .  Crosshair Label adjust Font Size (  String both Or By Width,  Boolean by Height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . adjust Font Size ( %s, %s )  ; "", wrap Quotes ( both Or By Width ) , by Height )  )  ;  return this ; }"
2294,"private boolean is Application Key Bound ( @ Non Null final  List< Network Key> network Keys, @ Non Null final  Application Key application Key ) { for  (  Network Key network Key : network Keys )  {     if  ( network Key . key Index == application Key . key Index )          return true ;  } return false ; }"
2295,"public void set Scrolling Disabled ( boolean y ) { select Box List . set Scrolling Disabled ( true, y )  ;  invalidate Hierarchy (  )  ; }"
2296,"public  Generate Default Layout Method_ on Visibility State Changed (  On Model Visibility State Changed Listener< Generate Default Layout Method_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
2297,private void maybe Post Finished Event (  ) { synchronized  ( event Lock )  {     if  ( project Build File Parse Event Started != null )  {         event Bus . post ( new  Project Build File Parse Events .  Finished (  Objects . require Non Null ( project Build File Parse Event Started )  )  )  ;      } }}
2298,"public com . anychart . core . annotations .  Fibonacci Base min Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", width )  )  ;  return this ; }"
2299,"protected final  Bluetooth Gatt Service service ( @ Non Null final UUID uuid, final  Bluetooth Gatt Characteristic .  .  .  characteristics ) { final  Bluetooth Gatt Service service = new  Bluetooth Gatt Service ( uuid,  Bluetooth Gatt Service . SERVICE_TYPE_PRIMARY )  ;  for  (  Bluetooth Gatt Characteristic characteristic : characteristics )  {     service . add Characteristic ( characteristic )  ;  } return service ; }"
2300,"public  String to String (  ) { try {      String Writer string Writer = new  String Writer (  )  ;       Json Writer json Writer = new  Json Writer ( string Writer )  ;      json Writer . set Lenient ( true )  ;       Streams . write ( this, json Writer )  ;      return string Writer . to String (  )  ;  } catch  ( IO Exception e )  {     throw new  Assertion Error ( e )  ;  }}"
2301,"public void log Event (  String event Type, JSON Object event Properties ) { log Event ( event Type, event Properties, false )  ; }"
2302,"public com . anychart . core . gantt . edit .  Structure Edit placement Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . placement Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
2303,"public  Bitmap update Bitmap (  String id, @ Nullable  Bitmap bitmap ) { return lottie Drawable . update Bitmap ( id, bitmap )  ; }"
2304,public  Normal Card text ( @ Not Null  String text ) { m Text = text ;  is Image = false ;  is Text = true ;  return this ; }
2305,"public  Glyph Layout set Text (  Char Sequence str, float x, float y ) { clear (  )  ;  return add Text ( str, x, y, 0, str . length (  ) , 0,  Align . left, false )  ; }"
2306,"public static boolean is Map (  Type Mirror type ) { return  More Types . is Type ( type )  &&  More Types . is Type Of (  Map . class, type )  ; }"
2307,public int get Int Attribute (  String name ) { return  Integer . parse Int ( get Attribute ( name )  )  ; }
2308,public static boolean dispatch Back Press ( @ Non Null final  Fragment fragment ) { return fragment . is Resumed (  )  && fragment . is Visible (  )  && fragment . get User Visible Hint (  )  && fragment instanceof  On Back Click Listener &&  (  (  On Back Click Listener )  fragment )  . on Back Click (  )  ; }
2309,private  Annotated Element get Annotated Element (  ) { return  ( this . method != null ? this . method : this . constructor )  ; }
2310,"public static  Buck Argument set Name (  Buck Argument argument, @ Not Null  String new Name ) { set Name ( argument . get Identifier (  ) , new Name )  ;  return argument ; }"
2311,public int get Primary Successor Index (  ) { return primary Successor ; }
2312,"public com . anychart . core . annotations .  Fibonacci Arc trend ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . trend ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
2313,public final  Remote Media Player get Remote Media Player (  ) { return m Remote Media Player ; }
2314,public  Builder acquire State Handler On Release ( boolean acquire State Handler On Release ) { this . acquire State Handler On Release = acquire State Handler On Release ;  return this ; }
2315,public void on Visibility Change ( boolean is Visible ) { if  ( m Is Visible == is Visible )  {     return ;  } m Event Tracker . record Event ( is Visible ?  Event . ON_DRAWABLE_SHOW :  Event . ON_DRAWABLE_HIDE )  ;  m Is Visible = is Visible ;  attach Or Detach Controller (  )  ; }
2316,"public static  Uri convert File Uri To File Provider Uri (  Context context,  Uri uri ) { if  ( uri == null )  {     return null ;  } if  (  Content Resolver . SCHEME_FILE . equals ( uri . get Scheme (  )  )  )  {     return get Uri For File ( context, new  File ( uri . get Path (  )  )  )  ;  } return uri ; }"
2317,"public static void set System Wide Replacement (  String full Name,  Object replacement ) { int id = get System (  )  . get Identifier ( full Name, null, null )  ;  if  ( id == 0 )      throw new  Not Found Exception ( full Name )  ;  set Replacement ( id, replacement, null )  ; }"
2318,"public void is Not In (  Iterable<?> iterable ) { if  (  Iterables . contains ( iterable, actual )  )  {     fail With Actual ( ""expected not to be any of"", iterable )  ;  }}"
2319,public  Html Plugin allow Non Closed Tags ( boolean allow Non Closed Tags ) { builder . allow Non Closed Tags ( allow Non Closed Tags )  ;  return this ; }
2320,public void nullability_unmanaged (  ) { test Nullability ( new  Mutable Realm Integer Types (  )  )  ; }
2321,public final int get End B (  ) { return end B ; }
2322,"public void set Max Motor Torque ( float torque ) { jni Set Max Motor Torque ( addr, torque )  ; }"
2323,"public void height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . height (  )  ; "" )  ; }"
2324,private boolean internal Write Descriptor Workaround ( @ Nullable final  Bluetooth Gatt Descriptor descriptor ) { final  Bluetooth Gatt gatt = bluetooth Gatt ;  if  ( gatt == null || descriptor == null || !connected )      return false ;  final  Bluetooth Gatt Characteristic parent Characteristic = descriptor . get Characteristic (  )  ;  final int original Write Type = parent Characteristic . get Write Type (  )  ;  parent Characteristic . set Write Type (  Bluetooth Gatt Characteristic . WRITE_TYPE_DEFAULT )  ;  final boolean result = gatt . write Descriptor ( descriptor )  ;  parent Characteristic . set Write Type ( original Write Type )  ;  return result ; }
2325,"public com . anychart . charts .  Pareto container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
2326,Component Implementation root Component Implementation (  ) { return parent . map (  Component Implementation::root Component Implementation )  . or Else ( this )  ; }
2327,"public static void put ( @ Non Null final  String key, final JSON Object value, final int save Time ) { put ( key, value, save Time, get Default Cache Double Utils (  )  )  ; }"
2328,"public  Map< String,  Connectable Device> get All Devices (  ) { return all Devices ; }"
2329,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
2330,"public  Attributes Node load (  )  throws IO Exception{  Attributes Node r = new  Attributes Node (  )  ;  FS fs = repository . get FS (  )  ;   File attributes = fs . resolve ( repository . get Directory (  ) ,  Constants . INFO_ATTRIBUTES )  ;   File Repository .  Attributes Node Provider Impl . load Rules From File ( r, attributes )  ;  return r . get Rules (  )  . is Empty (  )  ? null : r ; }"
2331,public void set Data (  Walking Route Line line ) { m Route Line = line ; }
2332,"public void right (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . right (  )  ; "" )  ; }"
2333,"public com . anychart . charts .  Sunburst select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
2334,"public com . anychart . standalones .  Color Range parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
2335,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
2336,"public void put ( @ Non Null final  String key, final byte [  ]  value, final int save Time ) { real Put Bytes ( TYPE_BYTE + key, value, save Time )  ; }"
2337,"public com . anychart . core . stock . indicators .  Stochastic stochastic ( com . anychart . data .  Table Mapping mapping,  Number k Period,  Number k MA Period,  Number d Period, com . anychart . enums .  Moving Average Type k MA Type,  String d MA Type, com . anychart . enums .  Stock Series Type k Series Type, com . anychart . enums .  Stock Series Type d Series Type ) { return new com . anychart . core . stock . indicators .  Stochastic (  String . format (  Locale . US, js Base + "" . stochastic ( %s, %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, k Period, k MA Period, d Period,  ( k MA Type != null )  ? k MA Type . get Js Base (  )  : null, wrap Quotes ( d MA Type ) ,  ( k Series Type != null )  ? k Series Type . get Js Base (  )  : null,  ( d Series Type != null )  ? d Series Type . get Js Base (  )  : null )  )  ; }"
2338,void write (  Output Stream out )  throws IO Exception{ output . write To ( out )  ; }
2339,"public com . anychart . core .  State Settings dummy Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . dummy Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
2340,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
2341,public long get Byte Difference (  ) { return this . byte Difference ; }
2342,"public void play (  String music Name, float volume ) { if  ( music Map . contains Key ( music Name )  )  {     sound Pool . play ( music Map . get ( music Name ) , volume, volume, 0, 0, 1 )  ;  }}"
2343,public final void set Unicast Address ( final int unicast Address ) { this . unicast Address = unicast Address ; }
2344,"private static void assert Is Not Assignable To (  Class<?> class1,  Class<?> class2 ) { assert That ( class2 . is Assignable From ( class1 )  )  . is False (  )  ; }"
2345,"private  Task< Void> log Analytics App Exception Events (  ) { final  List< Task< Void>> events = new  Array List<> (  )  ;  final  File [  ]  app Exception Markers = list App Exception Marker Files (  )  ;  for  (  File marker File : app Exception Markers )  {     try {         final long timestamp =  Long . parse Long ( marker File . get Name (  )  . substring ( APP_EXCEPTION_MARKER_PREFIX . length (  )  )  )  ;          events . add ( log Analytics App Exception Event ( timestamp )  )  ;      } catch  (  Number Format Exception nfe )  {          Logger . get Logger (  )  . w ( "" Could not parse app exception timestamp from file "" + marker File . get Name (  )  )  ;      }     marker File . delete (  )  ;  } return  Tasks . when All ( events )  ; }"
2346,"public void format (  Diff Entry ent )  throws IO Exception{  Format Result res = create Format Result ( ent )  ;  format ( res . header, res . a, res . b )  ; }"
2347,"private  Long read All And Close (  Source source,  Sink sink )  throws IO Exception{ long result = 0 L ;   Buffer buffer = new  Buffer (  )  ;  for  ( long count ;   ( count = source . read ( buffer, SEGMENT_SIZE )  )  != -1 L ;  result += count )  {     sink . write ( buffer, count )  ;  } source . close (  )  ;  sink . close (  )  ;  return result ; }"
2348,"public static void set Graph Api Version (  String graph Api Version ) { if  ( ! Build Config . DEBUG )  {      Log . w ( TAG, ""WARNING:  Calling set Graph Api Version from non-DEBUG code . "" )  ;  } if  ( ! Utility . is Null Or Empty ( graph Api Version )  && ! Facebook Sdk . graph Api Version . equals ( graph Api Version )  )  {      Facebook Sdk . graph Api Version = graph Api Version ;  }}"
2349,"protected void on Item Selected State Changed (  Action Mode mode ) { int count = m Adapter View . get Checked Item Count (  )  ;  if  ( count > 0 )  {      Resources res = m Adapter View . get Resources (  )  ;       String m Title Selected = res . get Quantity String ( R . plurals . card_selected_items, count, count )  ;      mode . set Title ( m Title Selected )  ;  }}"
2350,public static void clear Current Thread Tracing Interface From Jsr199 Javac (  ) { cur Thread Tracing Interface . set ( null )  ; }
2351,"public void write Output (  Thrift Protocol thrift Protocol,  Print Stream print Stream )  throws IO Exception{  Thrift Util . serialize ( thrift Protocol, to Thrift Graph (  ) , print Stream )  ; }"
2352,"public com . anychart . core . utils .  Margin set (  Number value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set ( %s, %s, %s, %s )  ; "", value1, value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
2353,"public static  Animator load Animator (  Context context, int id )  throws  Not Found Exception{  Xml Resource Parser parser = null ;  try {     parser = context . get Resources (  )  . get Animation ( id )  ;      return create Animator From Xml ( context, parser )  ;  } catch  (  Xml Pull Parser Exception ex )  {      Resources .  Not Found Exception rnf = new  Resources .  Not Found Exception ( "" Can't load animation resource ID #0x"" +  Integer . to Hex String ( id )  )  ;      rnf . init Cause ( ex )  ;      throw rnf ;  } catch  ( IO Exception ex )  {      Resources .  Not Found Exception rnf = new  Resources .  Not Found Exception ( "" Can't load animation resource ID #0x"" +  Integer . to Hex String ( id )  )  ;      rnf . init Cause ( ex )  ;      throw rnf ;  } finally {     if  ( parser != null )          parser . close (  )  ;  }}"
2354,"private void fit Image To View (  ) {  Drawable drawable = get Drawable (  )  ;  if  ( drawable == null || drawable . get Intrinsic Width (  )  == 0 || drawable . get Intrinsic Height (  )  == 0 )  {     return ;  } if  ( matrix == null || prev Matrix == null )  {     return ;  } int drawable Width = drawable . get Intrinsic Width (  )  ;  int drawable Height = drawable . get Intrinsic Height (  )  ;  // //  Scale image for view // float scale X =  ( float )  view Width / drawable Width ;  float scale Y =  ( float )  view Height / drawable Height ;  switch ( m Scale Type )  {     case CENTER:         scale X = scale Y = 1 ;          break ;      case CENTER_CROP:         scale X = scale Y =  Math . max ( scale X, scale Y )  ;          break ;      case CENTER_INSIDE:         scale X = scale Y =  Math . min ( 1,  Math . min ( scale X, scale Y )  )  ;      case FIT_CENTER:         scale X = scale Y =  Math . min ( scale X, scale Y )  ;          break ;      case FIT_XY:         break ;      default:         //         throw new  Unsupported Operation Exception ( "" Touch Image View does not support FIT_START or FIT_END"" )  ;  } // //  Center the image // float redundant X Space = view Width -  ( scale X * drawable Width )  ;  float redundant Y Space = view Height -  ( scale Y * drawable Height )  ;  match View Width = view Width - redundant X Space ;  match View Height = view Height - redundant Y Space ;  if  ( !is Zoomed (  )  && !image Rendered At Least Once )  {     //     //  Stretch and center image to fit view     //     matrix . set Scale ( scale X, scale Y )  ;      matrix . post Translate ( redundant X Space / 2, redundant Y Space / 2 )  ;      normalized Scale = 1 ;  } else {     //     if  ( prev Match View Width == 0 || prev Match View Height == 0 )  {         save Previous Image Values (  )  ;      }     prev Matrix . get Values ( m )  ;      //     //  Rescale  Matrix after rotation     //     m [  Matrix . MSCALE_X ]  = match View Width / drawable Width * normalized Scale ;      m [  Matrix . MSCALE_Y ]  = match View Height / drawable Height * normalized Scale ;      //     //  Trans X and  Trans Y from previous matrix     //     float trans X = m [  Matrix . MTRANS_X ]  ;      float trans Y = m [  Matrix . MTRANS_Y ]  ;      //     //  Width     //     float prev Actual Width = prev Match View Width * normalized Scale ;      float actual Width = get Image Width (  )  ;      translate Matrix After Rotate (  Matrix . MTRANS_X, trans X, prev Actual Width, actual Width, prev View Width, view Width, drawable Width )  ;      //     //  Height     //     float prev Actual Height = prev Match View Height * normalized Scale ;      float actual Height = get Image Height (  )  ;      translate Matrix After Rotate (  Matrix . MTRANS_Y, trans Y, prev Actual Height, actual Height, prev View Height, view Height, drawable Height )  ;      //     //  Set the matrix to the adjusted scale and translate values .      //     matrix . set Values ( m )  ;  } fix Trans (  )  ;  set Image Matrix ( matrix )  ; }"
2355,public void set Bold ( boolean bold ) { this . bold = bold ; }
2356,"public static byte checked Cast ( long value ) { check Argument ( value >>  Byte . SIZE == 0, ""out of range: %s"", value )  ;  return  ( byte )  value ; }"
2357,"public static  Map<K,  Set<V>> as Map (  Set Multimap<K, V> multimap ) { return  (  Map<K,  Set<V>> )   (  Map<K, ?> )  multimap . as Map (  )  ; }"
2358,"public static void vali Long Min Value ( long number, long min Value,  String object Name )  throws  Illegal Argument Exception{ if  ( ! ( number >= min Value )  )  {     throw new  Illegal Argument Exception ( "" Long object '"" + object Name + ""' is illegal!"" )  ;  }}"
2359,"public static T find Fragment (  Fragment Manager fragment Manager,  Class<T> fragment Class ) { return find Stack Fragment ( fragment Class, null, fragment Manager )  ; }"
2360,private  Writable Map get Writable Map ( @ Non Null  Readable Map readable Map ) {  Writable Native Map map = new  Writable Native Map (  )  ;  map . merge ( readable Map )  ;  return map ; }
2361,"public static void e (  String message ) { F Log . e (  React Constants . TAG, message )  ; }"
2362,public  Asset File Descriptor get Asset File Descriptor (  String asset Path ) {  Zip Entry RO entry = m Hash Map . get ( asset Path )  ;  if  ( null != entry )  {     return entry . get Asset File Descriptor (  )  ;  } return null ; }
2363,public static  Immutable List< Counter> get Counters (  ) { return  Immutable List . copy Of ( counters )  ; }
2364,"public com . anychart . core . stock .  Plot get Plot (  ) { return new com . anychart . core . stock .  Plot ( js Base + "" . get Plot (  ) "" )  ; }"
2365,"public  Node get Node ( final  String id, boolean recursive ) { return get Node ( id, recursive, false )  ; }"
2366,"public com . anychart . core . ui .  Chart Credits credits (  ) { return new com . anychart . core . ui .  Chart Credits ( js Base + "" . credits (  ) "" )  ; }"
2367,public  Int List mutable Copy (  ) { int sz = size ;   Int List result = new  Int List ( sz )  ;  for  ( int i = 0 ;  i < sz ;  i++ )  {     result . add ( values [ i ]  )  ;  } return result ; }
2368,public void dismiss ( final int position ) { fling ( position )  ; }
2369,"public com . anychart . core . ui .  Separator margin (  String [  ]  space Or Top Or Top And Bottom,  Number right Or Right And Left,  String bottom,  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( space Or Top Or Top And Bottom ) , right Or Right And Left, wrap Quotes ( bottom ) , wrap Quotes ( left )  )  )  ;  return this ; }"
2370,public  Zero Top Padding Text View get Year (  ) { return m Year Label ; }
2371,"public com . anychart . core .  State Settings selected (  ) { return new com . anychart . core .  State Settings ( js Base + "" . selected (  ) "" )  ; }"
2372,public  Pix clone (  ) { int native Pix = native Clone ( m Native Pix )  ;  if  ( native Pix == 0 )  {     throw new  Out Of Memory Error (  )  ;  } return new  Pix ( native Pix )  ; }
2373,"public void to Svg (  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Svg ( %s, %s )  ; "", width, height )  )  ; }"
2374,"public  Fingerprint create For ( int version, byte [  ]  local Stable Identifier,  List< Identity Key> local Identity Keys, byte [  ]  remote Stable Identifier,  List< Identity Key> remote Identity Keys ) { byte [  ]  local Fingerprint = get Fingerprint ( iterations, local Stable Identifier, local Identity Keys )  ;  byte [  ]  remote Fingerprint = get Fingerprint ( iterations, remote Stable Identifier, remote Identity Keys )  ;   Displayable Fingerprint displayable Fingerprint = new  Displayable Fingerprint ( local Fingerprint, remote Fingerprint )  ;   Scannable Fingerprint scannable Fingerprint = new  Scannable Fingerprint ( version, local Fingerprint, remote Fingerprint )  ;  return new  Fingerprint ( displayable Fingerprint, scannable Fingerprint )  ; }"
2375,"public void deviation (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . deviation (  )  ; "" )  ; }"
2376,"public void perform Accessibility Button Click (  ) {  Reflection Helpers . call Instance Method ( real Object, ""dispatch Accessibility Button Clicked"" )  ;  shadow Main Looper (  )  . idle If Paused (  )  ; }"
2377,"public static void remove (  Data Spec data Spec,  Cache cache, @ Nullable  Cache Key Factory cache Key Factory ) { remove ( cache, build Cache Key ( data Spec, cache Key Factory )  )  ; }"
2378,protected void customize Connection ( URL Connection con )  throws IO Exception{  Resource Utils . use Caches If Necessary ( con )  ;  if  ( con instanceof  Http URL Connection )  {     customize Connection (  (  Http URL Connection )  con )  ;  }}
2379,public T4 get Value4 (  ) { return value4 ; }
2380,"public  String get Category (  ) { return get Delegate (  )  . get Value ( BUILDFILE_SECTION_NAME, ""category"" )  . or Else ( ""buck_events"" )  ; }"
2381,"public final  Vec2 abs (  ) { return new  Vec2 (  Math Utils . abs ( x ) ,  Math Utils . abs ( y )  )  ; }"
2382,"private static int find Nal Start Code ( byte [  ]  data, int index ) { int end Index = data . length - NAL_START_CODE . length ;  for  ( int i = index ;  i <= end Index ;  i++ )  {     if  ( is Nal Start Code ( data, i )  )  {         return i ;      } } return C . INDEX_UNSET ; }"
2383,"public com . anychart . core . sankey . elements .  Node node (  ) { return new com . anychart . core . sankey . elements .  Node ( js Base + "" . node (  ) "" )  ; }"
2384,"public FTP Reply send Site Command (  String command )  throws  Illegal State Exception, IO Exception, FTP Illegal Reply Exception{ synchronized  ( lock )  {     //  Is this client connected?     if  ( !connected )  {         throw new  Illegal State Exception ( "" Client not connected"" )  ;      }     //  Sends the command .      communication . send FTP Command ( ""SITE "" + command )  ;      //  Resets auto noop timer .      touch Auto Noop Timer (  )  ;      //  Returns the reply .      return communication . read FTP Reply (  )  ;  }}"
2385,public byte [  ]  get Oob Information (  ) { return oob Information ; }
2386,"private static float get Hue Value ( int integer Color ) { float [  ]  hsv Values = new float [ HSV_VALUES ]  ;   Color . color To HSV ( integer Color, hsv Values )  ;  return hsv Values [ HUE_VALUE ]  ; }"
2387,"public  String [  ]  get Remaining (  ) { int n = arguments . length - index ;   String [  ]  remaining = new  String [ n ]  ;  if  ( n > 0 )  {      System . arraycopy ( arguments, index, remaining, 0, n )  ;  } return remaining ; }"
2388,public void set Foreground (  Drawable drawable ) { if  ( m Foreground != drawable )  {     if  ( m Foreground != null )  {         m Foreground . set Callback ( null )  ;          unschedule Drawable ( m Foreground )  ;      }     m Foreground = drawable ;      if  ( drawable != null )  {         set Will Not Draw ( false )  ;          drawable . set Callback ( this )  ;          if  ( drawable . is Stateful (  )  )  {             drawable . set State ( get Drawable State (  )  )  ;          }         if  ( m Foreground Gravity ==  Gravity . FILL )  {              Rect padding = new  Rect (  )  ;              drawable . get Padding ( padding )  ;          }     } else {         set Will Not Draw ( true )  ;      }     request Layout (  )  ;      invalidate (  )  ;  }}
2389,"public com . anychart . charts .  Cartesian select Marquee Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
2390,public void set Push Certificate (  Push Certificate cert ) { push Cert = cert ; }
2391,public  String get Created From Path (  ) { return created From Path ; }
2392,"public com . anychart . charts .  Waterfall y Minor Grid (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Minor Grid ( %s )  ; "", settings )  )  ;  return this ; }"
2393,"public com . anychart . standalones .  Markers Factory fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
2394,"public com . anychart . standalones .  Labels Factory padding (  Number value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
2395,"public void set Initial Prefetch Item Count ( int num Items To Prefetch ) { if  ( num Items To Prefetch < 0 )  {     throw new  Illegal State Exception ( ""num Items To Prefetch must be greater than 0"" )  ;  } //  Use the linearlayoutmanager default of 2 if the user did not specify one int prefetch Count = num Items To Prefetch == 0 ? 2 : num Items To Prefetch ;   Layout Manager layout Manager = get Layout Manager (  )  ;  if  ( layout Manager instanceof  Linear Layout Manager )  {      (  (  Linear Layout Manager )  layout Manager )  . set Initial Prefetch Item Count ( prefetch Count )  ;  }}"
2396,public  Mp4 Esds Box .  Audio Profile get Profile (  ) { return  (  Mp4 Esds Box .  Audio Profile )  content . get ( FIELD_PROFILE )  ; }
2397,public long get Timestamp Nanos (  ) { return timestamp Nanos ; }
2398,"static  String pull Font Path From Theme (  Context context, int style Attr Id, int [  ]  attribute Id ) { if  ( style Attr Id == -1 || attribute Id == null )      return null ;  final  Resources .  Theme theme = context . get Theme (  )  ;  final  Typed Value value = new  Typed Value (  )  ;  theme . resolve Attribute ( style Attr Id, value, true )  ;  final  Typed Array typed Array = theme . obtain Styled Attributes ( value . resource Id, attribute Id )  ;  try {      String font = typed Array . get String ( 0 )  ;      return font ;  } catch  (  Exception ignore )  {     //  Failed for some reason .      return null ;  } finally {     typed Array . recycle (  )  ;  }}"
2399,"public com . anychart . core . cartesian . series .  Continuous Range Base bounds (  String x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, height )  )  ;  return this ; }"
2400,"void set Local Variable Or Property (  String name,  Object value, boolean strict Java )  throws  Util Eval Error{ set Variable Or Property ( name, value, strict Java, false )  ; }"
2401,"public com . anychart . core . stock .  Plot z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
2402,"private static void do Test (  String contents,  String ssid,  String password,  String type ) {  Result fake Result = new  Result ( contents, null, null,  Barcode Format . QR_CODE )  ;   Parsed Result result =  Result Parser . parse Result ( fake Result )  ;  //  Ensure it is a wifi code assert Same (  Parsed Result Type . WIFI, result . get Type (  )  )  ;   Wifi Parsed Result wifi Result =  (  Wifi Parsed Result )  result ;  assert Equals ( ssid, wifi Result . get Ssid (  )  )  ;  assert Equals ( password, wifi Result . get Password (  )  )  ;  assert Equals ( type, wifi Result . get Network Encryption (  )  )  ; }"
2403,"public void set Auto Clear Forces ( boolean flag ) { jni Set Auto Clear Forces ( addr, flag )  ; }"
2404,public void show Hide Fragment ( I Support Fragment show Fragment ) { m Delegate . show Hide Fragment ( show Fragment )  ; }
2405,"public  Image Container get (  String request Url, final  Image Listener listener ) { return get ( request Url, listener, /* max Width= */ 0, /* max Height= */ 0 )  ; }"
2406,public void begin (  ) { bind (  )  ;  set Frame Buffer Viewport (  )  ; }
2407,public E value At ( int index ) { if  ( m Garbage )  {     gc (  )  ;  } return  ( E )  m Values [ index ]  ; }
2408,"public static  Path write Spec To Log Dir (  Path root Path,  Invocation Info info,  Buck Fix Spec spec )  throws IO Exception{  Path log Directory = root Path . resolve ( info . get Log Directory Path (  )  )  ;   Path buck Fix Spec File Path = log Directory . resolve (  Buck Constant . BUCK_FIX_SPEC_FILE_NAME )  ;  write Spec ( buck Fix Spec File Path, spec )  ;  return buck Fix Spec File Path ; }"
2409,"public com . anychart . standalones .  Project Timeline background Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
2410,"public static final  Image Load Event create Progress Event ( int surface Id, int view Id, @ Nullable  String image Uri, int loaded, int total ) { return new  Image Load Event ( surface Id, view Id, ON_PROGRESS, null, image Uri, 0, 0, loaded, total )  ; }"
2411,"public com . anychart . charts .  Pareto label (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
2412,"public static  List< Allocated Scene Range> minus ( @ Non Null final  List< Allocated Scene Range> ranges, @ Non Null final  Allocated Scene Range other ) {  List< Allocated Scene Range> results = new  Array List<> (  )  ;  for  (  Allocated Scene Range range : ranges )  {     results . add All ( range . minus ( other )  )  ;      results = merge Scene Ranges ( results )  ;  } /*ranges . clear (  )  ;      ranges . add All ( results )  ; */ return results ; }"
2413,"public com . anychart . core . annotations .  Fibonacci Timezones max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
2414,"public com . anychart . core . gantt . timelineheader .  Level Wrapper line Height (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Height ( %s )  ; "", value )  )  ;  return this ; }"
2415,"public static final  Object Id from String ( byte [  ]  buf, int offset ) { return from Hex String ( buf, offset )  ; }"
2416,private static  Geo Json Multi Line String create Multi Line String ( JSON Array coordinates )  throws JSON Exception{  Array List< Geo Json Line String> geo Json Line Strings = new  Array List<> (  )  ;  for  ( int i = 0 ;  i < coordinates . length (  )  ;  i++ )  {     geo Json Line Strings . add ( create Line String ( coordinates . get JSON Array ( i )  )  )  ;  } return new  Geo Json Multi Line String ( geo Json Line Strings )  ; }
2417,"public boolean equals (  Object object ) { if  ( this == object )  {     return true ;  } if  ( object instanceof  Map )  {      Map<?, ?> map =  (  Map<?, ?> )  object ;      if  ( size (  )  != map . size (  )  )  {         return false ;      }     try {         for  ( int i = 0 ;  i < m Size ;  i++ )  {             K key = key At ( i )  ;              V mine = value At ( i )  ;               Object theirs = map . get ( key )  ;              if  ( mine == null )  {                 if  ( theirs != null || !map . contains Key ( key )  )  {                     return false ;                  }             } else if  ( !mine . equals ( theirs )  )  {                 return false ;              }         }     } catch  (  Null Pointer Exception ignored )  {         return false ;      } catch  (  Class Cast Exception ignored )  {         return false ;      }     return true ;  } return false ; }"
2418,public static final JSON Array fetch Plugins (  String name ) { return s PL Proxy . fetch Plugins ( name )  ; }
2419,public boolean are All Operands Equal (  ) { if  ( operands . size (  )  == 0 )  {     //  This should never happen .      return true ;  } int first Reg = operands . get ( 0 )  . reg Spec . get Reg (  )  ;  for  (  Operand o : operands )  {     if  ( first Reg != o . reg Spec . get Reg (  )  )  {         return false ;      } } return true ; }
2420,"private static boolean matches Wildcard Suffix Type (  Optional< Public Suffix Type> desired Type,  String domain ) {  List< String> pieces = DOT_SPLITTER . limit ( 2 )  . split To List ( domain )  ;  return pieces . size (  )  == 2 && matches Type ( desired Type,  Optional . from Nullable (  Public Suffix Patterns . UNDER . get ( pieces . get ( 1 )  )  )  )  ; }"
2421,"void result After Exceptions (  )  throws  Exception{ final var op = new  Find Customer ( ""123"", new  Customer Not Found Exception ( ""not found"" ) , new  Database Not Available Exception ( ""not available"" )  )  ;  try {     op . perform (  )  ;  } catch  (  Customer Not Found Exception e )  { //ignore } try {     op . perform (  )  ;  } catch  (  Database Not Available Exception e )  { //ignore } assert That ( op . perform (  ) , is ( ""123"" )  )  ; }"
2422,"public  Model With Type_<T> on Visibility Changed (  On Model Visibility Changed Listener< Model With Type_<T>,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
2423,"private void update Range ( double x, double y ) { m Min X =  Math . min ( m Min X, x )  ;  m Max X =  Math . max ( m Max X, x )  ;  m Min Y =  Math . min ( m Min Y, y )  ;  m Max Y =  Math . max ( m Max Y, y )  ; }"
2424,public static final void handle Activity Destroy (  Activity activity ) { s PL Proxy . handle Activity Destroy ( activity )  ; }
2425,"public static  Cache Memory Utils get Instance ( final  String cache Key, final int max Count ) {  Cache Memory Utils cache = CACHE_MAP . get ( cache Key )  ;  if  ( cache == null )  {     synchronized  (  Cache Memory Utils . class )  {         cache = CACHE_MAP . get ( cache Key )  ;          if  ( cache == null )  {             cache = new  Cache Memory Utils ( cache Key, new  Lru Cache< String,  Cache Value> ( max Count )  )  ;              CACHE_MAP . put ( cache Key, cache )  ;          }     } } return cache ; }"
2426,public float get Restitution (  ) { return jni Get Restitution ( addr )  ; }
2427,"public  Token Request create Token Refresh Request (  ) { return create Token Refresh Request (  Collections . < String,  String>empty Map (  )  )  ; }"
2428,"Key for Multibinds Method (  Executable Type executable Type,  Executable Element method ) { check Argument ( method . get Kind (  )  . equals ( METHOD ) , ""%s must be a method"", method )  ;   Type Mirror return Type = executable Type . get Return Type (  )  ;   Type Mirror key Type =  Map Type . is Map ( return Type )  ? map Of Framework Type (  Map Type . from ( return Type )  . key Type (  ) , elements . get Type Element (  Provider . class ) ,  Map Type . from ( return Type )  . value Type (  )  )  : return Type ;  return for Method ( method, key Type )  ; }"
2429,"private boolean is Activity Matching (  Class<? extends  Activity> activity Class,  Activity current Activity ) { if  ( current Activity != null && current Activity . get Class (  )  . equals ( activity Class )  )  {     return true ;  } return false ; }"
2430,public void set Initial Visible ( boolean visibility ) { this . initial Visible = visibility ; }
2431,"public com . anychart . core . stock . scrollerseries .  Candlestick rising Fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rising Fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
2432,"public static void matches Pattern ( final  Char Sequence input, final  String pattern ) { // TODO when breaking BC, consider returning input if  (  Pattern . matches ( pattern, input )  == false )  {     throw new  Illegal Argument Exception (  String . format ( DEFAULT_MATCHES_PATTERN_EX, input, pattern )  )  ;  }}"
2433,"protected final  String two Columns (  String s1,  String s2 ) { int w1 = get Width1 (  )  ;  int w2 = get Width2 (  )  ;  try {     if  ( w1 == 0 )  {         int len2 = s2 . length (  )  ;           String Writer sw = new  String Writer ( len2 * 2 )  ;           Indenting Writer iw = new  Indenting Writer ( sw, w2, separator )  ;          iw . write ( s2 )  ;          if  (  ( len2 == 0 )  ||  ( s2 . char At ( len2 - 1 )  != '\n' )  )  {             iw . write ( '\n' )  ;          }         iw . flush (  )  ;          return sw . to String (  )  ;      } else {         return  Two Column Output . to String ( s1, w1, separator, s2, w2 )  ;      } } catch  ( IO Exception ex )  {     throw new  Runtime Exception ( ex )  ;  }}"
2434,void clear Bit ( int n ) { value &= ~value For Bit ( n )  ; }
2435,public  Activity Builder set Touch Radius ( float touch Radius ) { m Options . touch Radius = touch Radius ;  return this ; }
2436,"public  List< String> get All Most Specific First (  String attribute Type ) { //  Initialize internal state .  pos = 0 ;  beg = 0 ;  end = 0 ;  cur = 0 ;  chars = dn . to Char Array (  )  ;   List< String> result =  Collections . empty List (  )  ;   String att Type = next AT (  )  ;  if  ( att Type == null )  {     return result ;  } while  ( pos < length )  {      String att Value = """" ;      switch ( chars [ pos ]  )  {         case '""':             att Value = quoted AV (  )  ;              break ;          case '#':             att Value = hex AV (  )  ;              break ;          case '+':         case ',':         case // compatibility with RFC 1779: semicolon can separate RD Ns         ' ; ':             //empty attribute value             break ;          default:             att Value = escaped AV (  )  ;      }     // we see .      if  ( attribute Type . equals Ignore Case ( att Type )  )  {         if  ( result . is Empty (  )  )  {             result = new  Array List< String> (  )  ;          }         result . add ( att Value )  ;      }     if  ( pos >= length )  {         break ;      }     if  ( chars [ pos ]  == ',' || chars [ pos ]  == ' ; ' )  {     } else if  ( chars [ pos ]  != '+' )  {         throw new  Illegal State Exception ( "" Malformed DN: "" + dn )  ;      }     pos++ ;      att Type = next AT (  )  ;      if  ( att Type == null )  {         throw new  Illegal State Exception ( "" Malformed DN: "" + dn )  ;      } } return result ; }"
2437,"public static void create Table (  Database db, boolean if Not Exists ) {  String constraint = if Not Exists ? ""IF NOT EXISTS "" : """" ;  db . exec SQL ( // ""CREATE TABLE "" + constraint + ""\""TREE_ENTITY\""  ( "" + // 0: id ""\""_id\"" INTEGER PRIMARY KEY ,"" + // 1: parent Id ""\""PARENT_ID\"" INTEGER )  ; "" )  ; }"
2438,"public static  Closeable Reference<T> of ( @ Propagates Nullable T t,  Resource Releaser<T> resource Releaser ) { return of ( t, resource Releaser, DEFAULT_LEAK_HANDLER )  ; }"
2439,public  Number Format get Y Label Format ( int scale ) { return m Y Label Format [ scale ]  ; }
2440,"private  Receipt View Model purchase (  Db .  User user,  Db .  Account account,  String item Name ) {  Db .  Product item =  Db . get Instance (  )  . find Product By Item Name ( item Name )  ;  if  ( item == null )  {     return new  Out Of Stock ( user . get User Name (  ) , item Name )  ;  }  Receipt Dto receipt = user . purchase ( item )  ;   Money Transaction transaction = account . withdraw ( receipt . get Price (  )  )  ;  if  ( transaction == null )  {     return new  Insufficient Funds ( user . get User Name (  ) , account . get Amount (  ) , item Name )  ;  } return receipt ; }"
2441,public  Type List get Exceptions (  ) { return exceptions ; }
2442,public  Tap Target outer Circle Color ( @ Color Res int color ) { this . outer Circle Color Res = color ;  return this ; }
2443,private int get Size Bytes (  Byte Buffer mes ) { if  ( mes . remaining (  )  <= 125 )  {     return 1 ;  } else if  ( mes . remaining (  )  <= 65535 )  {     return 2 ;  } return 8 ; }
2444,"static float [  ]  copy Of Range ( float [  ]  original, int start, int end ) { if  ( start > end )  {     throw new  Illegal Argument Exception (  )  ;  } int original Length = original . length ;  if  ( start < 0 || start > original Length )  {     throw new  Array Index Out Of Bounds Exception (  )  ;  } int result Length = end - start ;  int copy Length =  Math . min ( result Length, original Length - start )  ;  float [  ]  result = new float [ result Length ]  ;   System . arraycopy ( original, start, result, 0, copy Length )  ;  return result ; }"
2445,public void set ID3v2 Tag (  Abstract Tag mp3tag ) { id3v2tag = new ID3v24 Tag ( mp3tag )  ; }
2446,"public static void main (  String [  ]  argv )  throws  Exception{ options = new  Command Line Options ( argv )  ;  if  ( options . startup Test Name != null )  {     if  ( run Test ( options . startup Test Name )  )  {         return ;      //  Otherwise, fall back to showing the list     } } UI Manager . set Look And Feel ( UI Manager . get System Look And Feel Class Name (  )  )  ;  new  Lwjgl Test Starter (  )  ; }"
2447,"public  Launched Process launch Buck Command Process ( boolean buckd Enabled,  String .  .  .  args )  throws  Exception{  Immutable Map< String,  String> environment =  Immutable Map . of (  )  ;   String [  ]  templates = new  String [  ]  {} ;  return launch Buck Command Process ( buckd Enabled, environment, templates, args )  ; }"
2448,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
2449,"public  Frame sub Frame For Label ( int start Label, int sub Label ) {  Locals Array sub Locals = null ;  if  ( locals instanceof  Locals Array Set )  {     sub Locals =  (  (  Locals Array Set )  locals )  . sub Array For Label ( sub Label )  ;  }  Int List new Subroutines ;  try {     new Subroutines = subroutines . mutable Copy (  )  ;      if  ( new Subroutines . pop (  )  != start Label )  {         throw new  Runtime Exception ( ""returning from invalid subroutine"" )  ;      }     new Subroutines . set Immutable (  )  ;  } catch  (  Index Out Of Bounds Exception ex )  {     throw new  Runtime Exception ( ""returning from invalid subroutine"" )  ;  } catch  (  Null Pointer Exception ex )  {     throw new  Null Pointer Exception ( ""can't return from non-subroutine"" )  ;  } return  ( sub Locals == null )  ? null : new  Frame ( sub Locals, stack, new Subroutines )  ; }"
2450,void test Steal (  ) { final var method = mock (  Stealing Method . class )  ;  final var thief = new  Halfling Thief ( method )  ;  thief . steal (  )  ;  verify ( method )  . steal (  )  ;  verify No More Interactions ( method )  ; }
2451,"public com . anychart . core . stock . indicators . ATR period (  Number period ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . period ( %s )  ; "", period )  )  ;  return this ; }"
2452,"public  Matrix4 set To Translation And Scaling ( double tx, double ty, double tz, double sx, double sy, double sz ) { identity (  )  ;  m [ M03 ]  = tx ;  m [ M13 ]  = ty ;  m [ M23 ]  = tz ;  m [ M00 ]  = sx ;  m [ M11 ]  = sy ;  m [ M22 ]  = sz ;  return this ; }"
2453,"public void set Notifications Enabled ( boolean enabled, int icon ) { this . m Notifications Enabled = enabled ;  this . m Notification Icon = icon ; }"
2454,"public void on Authentication Help ( int help Msg Id,  Char Sequence help String ) { show Error ( help String )  ; }"
2455,"public com . anychart . core . ui .  Callout margin (  Number value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
2456,"public com . anychart . charts .  Circular Gauge margin (  String margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "", wrap Quotes ( margin )  )  )  ;  return this ; }"
2457,public static  List< Float> as List ( float .  .  .  backing Array ) { if  ( backing Array . length == 0 )  {     return  Collections . empty List (  )  ;  } return new  Float Array As List ( backing Array )  ; }
2458,void set Cached Token ( @ Non Null  App Check Token token ) { cached Token = token ; }
2459,"void test Missing Name (  ) { assert Throws (  Illegal Argument Exception . class,  (  )  -> new  Hero .  Builder (  Profession . THIEF, null )  )  ; }"
2460,"public int expand ( T item, boolean init ) { return expand ( get Global Position Of ( item ) , false, init, false )  ; }"
2461,"private static void set Badge Of Sumsung (  Context context, int count ) { // 获取你当前的应用  String launcher Class Name =  App Info Util . get Launcher Class Name ( context )  ;  if  ( launcher Class Name == null )  {     return ;  }  Intent intent = new  Intent ( ""android . intent . action . BADGE_COUNT_UPDATE"" )  ;  intent . put Extra ( ""badge_count"", count )  ;  intent . put Extra ( ""badge_count_package_name"", context . get Package Name (  )  )  ;  intent . put Extra ( ""badge_count_class_name"", launcher Class Name )  ;  context . send Broadcast ( intent )  ; }"
2462,"public com . anychart . charts .  Venn margin (  String value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
2463,"protected void update Mime Msg (  Mime Message mime Msg,  Cyclic Buffer<E> cb, E last Event Object ) {}"
2464,"public void min Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Height (  )  ; "" )  ; }"
2465,"public synchronized void attach And Enqueue If Not Run ( @ Non Null  Download Task task, @ Non Null  Download Listener listener ) { attach Listener ( task, listener )  ;  if  ( !is Task Pending Or Running ( task )  )  {     task . enqueue ( host Listener )  ;  }}"
2466,public int get Time Zone Offset (  ) { return tz Offset ; }
2467,"void set Value For Testing (  Internal Entry<K, V, ?> entry, V value ) { this . map . entry Helper . set Value ( self (  ) , cast For Testing ( entry ) , value )  ; }"
2468,"public void orientation (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . orientation (  )  ; "" )  ; }"
2469,"private static void set Badge Of HTC (  Context context, int count ) {  Intent intent Notification = new  Intent ( ""com . htc . launcher . action . SET_NOTIFICATION"" )  ;   Component Name local Component Name = new  Component Name ( context . get Package Name (  ) ,  App Info Util . get Launcher Class Name ( context )  )  ;  intent Notification . put Extra ( ""com . htc . launcher . extra . COMPONENT"", local Component Name . flatten To Short String (  )  )  ;  intent Notification . put Extra ( ""com . htc . launcher . extra . COUNT"", count )  ;  context . send Broadcast ( intent Notification )  ;   Intent intent Shortcut = new  Intent ( ""com . htc . launcher . action . UPDATE_SHORTCUT"" )  ;  intent Shortcut . put Extra ( ""packagename"", context . get Package Name (  )  )  ;  intent Shortcut . put Extra ( ""count"", count )  ;  context . send Broadcast ( intent Shortcut )  ; }"
2470,"private void add ( int address,  Disposition disposition,  Register Spec spec ) { int reg Num = spec . get Reg (  )  ;  result . add ( new  Entry ( address, disposition, spec )  )  ;  if  ( disposition ==  Disposition . START )  {     regs . put ( spec )  ;      end Indices [ reg Num ]  = -1 ;  } else {     regs . remove ( spec )  ;      end Indices [ reg Num ]  = result . size (  )  - 1 ;  }}"
2471,public void init (  ) { init ( null )  ; }
2472,"public void on Install Plugin Failed (  String path,  Install Result code ) {//  Nothing}"
2473,"public  Stream Model Builder with Map Method All From Name (  String method Simple Name,  String inner Method Name,  Immutable Set< Integer> args From Stream ) { this . map Method Simple Name To Record . put ( method Simple Name, new  Maplike Method Record ( inner Method Name, args From Stream )  )  ;  return this ; }"
2474,public boolean has Scroll Focus (  ) {  Stage stage = get Stage (  )  ;  return stage != null && stage . get Scroll Focus (  )  == this ; }
2475,"public com . anychart . core . annotations .  Andrews Pitchfork max Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
2476,"protected static  Byte Buffer decode ( PDF Object dict,  Byte Buffer buf, PDF Object params )  throws PDF Parse Exception{ //	 System . out . println ( ""DCT Decode image info: ""+params )  ;  buf . rewind (  )  ;  // copy the data into a byte array required by createimage byte [  ]  ary = new byte [ buf . remaining (  )  ]  ;  buf . get ( ary )  ;   Bitmap img =  Bitmap Factory . decode Byte Array ( ary, 0, ary . length )  ;  if  ( img == null )      throw new PDF Parse Exception ( ""could not decode image of compressed size "" + ary . length )  ;   Config conf = img . get Config (  )  ;   Log . e ( ""ANDPDF . dctdecode"", ""decoded image type"" + conf )  ;  int size = 4 * img . get Width (  )  * img . get Height (  )  ;  if  ( conf ==  Config . RGB_565 )      size = 2 * img . get Width (  )  * img . get Height (  )  ;  // TODO  [ F He ] : else  .  .  .  what do we get for gray?  Config . ALPHA_8? java . nio .  Byte Buffer byte Buf = java . nio .  Byte Buffer . allocate ( size )  ;  img . copy Pixels To Buffer ( byte Buf )  ;   Byte Buffer result =  Byte Buffer . from NIO ( byte Buf )  ;  result . rewind (  )  ;  return result ; }"
2477,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
2478,"public  Byte Buffer get Data (  ) {  Byte Buffer buf =  Byte Buffer . allocate ( get Length (  )  )  ;  // write the header buf . put Short ( get Format (  )  )  ;  buf . put Short (  ( short )  get Length (  )  )  ;  buf . put Short ( get Language (  )  )  ;  // write the various values buf . put Short (  ( short )   ( get Segment Count (  )  * 2 )  )  ;  buf . put Short ( get Search Range (  )  )  ;  buf . put Short ( get Entry Selector (  )  )  ;  buf . put Short ( get Range Shift (  )  )  ;  // write the end Codes for  (  Iterator i = segments . key Set (  )  . iterator (  )  ;  i . has Next (  )  ;   )  {      Segment s =  (  Segment )  i . next (  )  ;      buf . put Short (  ( short )  s . end Code )  ;  } // write the pad buf . put Short (  ( short )  0 )  ;  // write the start Codes for  (  Iterator i = segments . key Set (  )  . iterator (  )  ;  i . has Next (  )  ;   )  {      Segment s =  (  Segment )  i . next (  )  ;      buf . put Short (  ( short )  s . start Code )  ;  } // write the id Deltas for segments using deltas for  (  Iterator i = segments . key Set (  )  . iterator (  )  ;  i . has Next (  )  ;   )  {      Segment s =  (  Segment )  i . next (  )  ;      if  ( !s . has Map )  {          Integer id Delta =  (  Integer )  segments . get ( s )  ;          buf . put Short ( id Delta . short Value (  )  )  ;      } else {         buf . put Short (  ( short )  0 )  ;      } } // the start of the glyph array int glyph Array Offset = 16 +  ( 8 * get Segment Count (  )  )  ;  // write the id Range Offsets and maps for segments using maps for  (  Iterator i = segments . key Set (  )  . iterator (  )  ;  i . has Next (  )  ;   )  {      Segment s =  (  Segment )  i . next (  )  ;      if  ( s . has Map )  {         // first set the offset, which is the number of bytes from the         // current position to the current offset         buf . put Short (  ( short )   ( glyph Array Offset - buf . position (  )  )  )  ;          // remember the current position         buf . mark (  )  ;          // move the position to the offset         buf . position ( glyph Array Offset )  ;          // now write the map         char [  ]  map =  ( char [  ]  )  segments . get ( s )  ;          for  ( int c = 0 ;  c < map . length ;  c++ )  {             buf . put Char ( map [ c ]  )  ;          }         // reset the data pointer         buf . reset (  )  ;          // update the offset         glyph Array Offset += map . length * 2 ;      } else {         buf . put Short (  ( short )  0 )  ;      } } // make sure we are at the end of the buffer before we flip buf . position ( glyph Array Offset )  ;  // reset the data pointer buf . flip (  )  ;  return buf ; }"
2479,public void add Fill Alpha ( float a ) { add Command ( new PDF Fill Alpha Cmd ( a )  )  ; }
2480,public  Builder set Name Bytes ( com . google . protobuf .  Byte String value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } check Byte String Is Utf8 ( value )  ;  name_ = value ;  on Changed (  )  ;  return this ; }
2481,"public com . anychart . core . grids .  Linear y Minor Grid (  Number index ) { return new com . anychart . core . grids .  Linear (  String . format (  Locale . US, js Base + "" . y Minor Grid ( %s ) "", index )  )  ; }"
2482,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
2483,public boolean is Empty (  ) { return  ( m Adapter == null || m Adapter . is Empty (  )  )  ; }
2484,"public  Builder disk Cache Size ( int max Cache Size ) { if  ( max Cache Size <= 0 )      throw new  Illegal Argument Exception ( ""max Cache Size must be a positive number"" )  ;  if  ( disk Cache != null )  {     L . w ( WARNING_OVERLAP_DISK_CACHE_PARAMS )  ;  } this . disk Cache Size = max Cache Size ;  return this ; }"
2485,"public void test Non Primitive Field Annotation Takes Precedence Over Default (  ) {  Gson gson = new  Gson (  )  ;   String json = gson . to Json ( new  Gadget With Optional Part ( new  Part ( ""foo"" )  )  )  ;  assert Equals ( ""{\""part\"":\"" Part Json Field Annotation Adapter\""}"", json )  ;   Gadget With Optional Part gadget = gson . from Json ( ""{'part':'foo'}"",  Gadget With Optional Part . class )  ;  assert Equals ( "" Part Json Field Annotation Adapter"", gadget . part . name )  ; }"
2486,"private  Array< File Handle> load Tile Sheets (  Element root,  File Handle tide File )  throws IO Exception{  Array< File Handle> images = new  Array< File Handle> (  )  ;   Element tilesheets = root . get Child By Name ( "" Tile Sheets"" )  ;  for  (  Element tileset : tilesheets . get Children By Name ( "" Tile Sheet"" )  )  {      Element image Source = tileset . get Child By Name ( "" Image Source"" )  ;       File Handle image = get Relative File Handle ( tide File, image Source . get Text (  )  )  ;      images . add ( image )  ;  } return images ; }"
2487,public void start (  ) { if  ( m Is Running || m Animation Backend == null || m Animation Backend . get Frame Count (  )  <= 1 )  {     return ;  } m Is Running = true ;  final long now = now (  )  ;  m Start Time Ms = now - m Paused Start Time Ms Difference ;  m Expected Render Time Ms = m Start Time Ms ;  m Last Frame Animation Time Ms = now - m Paused Last Frame Animation Time Ms Difference ;  m Last Drawn Frame Number = m Paused Last Drawn Frame Number ;  invalidate Self (  )  ;  m Animation Listener . on Animation Start ( this )  ; }
2488,"public  Iterator<?> get Java Iterator (  Context cx,  Scriptable scope,  Object obj ) { if  ( obj instanceof  Wrapper )  {      Object unwrapped =  (  (  Wrapper )  obj )  . unwrap (  )  ;       Iterator<?> iterator = null ;      if  ( unwrapped instanceof  Iterator )          iterator =  (  Iterator<?> )  unwrapped ;      return iterator ;  } return null ; }"
2489,"public static void d (  String tag,  String msg,  Object .  .  .  args ) { if  ( s Level > LEVEL_DEBUG )  {     return ;  } if  ( args . length > 0 )  {     msg =  String . format ( msg, args )  ;  }  Log . d ( tag, msg )  ; }"
2490,"public void text Settings (  String name ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Settings ( %s )  ; "", wrap Quotes ( name )  )  )  ; }"
2491,"public com . anychart . core . ui .  Chart Scroller x Scroller (  ) { return new com . anychart . core . ui .  Chart Scroller ( js Base + "" . x Scroller (  ) "" )  ; }"
2492,"public int compare To (  Short Buffer other Buffer ) { int compare Remaining =  ( remaining (  )  < other Buffer . remaining (  )  )  ? remaining (  )  : other Buffer . remaining (  )  ;  int this Pos = position ;  int other Pos = other Buffer . position ;  short this Byte, other Byte ;  while  ( compare Remaining > 0 )  {     this Byte = get ( this Pos )  ;      other Byte = other Buffer . get ( other Pos )  ;      if  ( this Byte != other Byte )  {         return this Byte < other Byte ? -1 : 1 ;      }     this Pos++ ;      other Pos++ ;      compare Remaining-- ;  } return remaining (  )  - other Buffer . remaining (  )  ; }"
2493,"public static boolean populate Header ( int header Data,  Mpeg Audio Header header ) { if  (  ( header Data & 0x FFE00000 )  != 0x FFE00000 )  {     return false ;  } int version =  ( header Data >>> 19 )  & 3 ;  if  ( version == 1 )  {     return false ;  } int layer =  ( header Data >>> 17 )  & 3 ;  if  ( layer == 0 )  {     return false ;  } int bitrate Index =  ( header Data >>> 12 )  & 15 ;  if  ( bitrate Index == 0 || bitrate Index == 0x F )  {     //  Disallow ""free"" bitrate .      return false ;  } int sampling Rate Index =  ( header Data >>> 10 )  & 3 ;  if  ( sampling Rate Index == 3 )  {     return false ;  } int sample Rate = SAMPLING_RATE_V1 [ sampling Rate Index ]  ;  if  ( version == 2 )  {     //  Version 2     sample Rate /= 2 ;  } else if  ( version == 0 )  {     //  Version 2 . 5     sample Rate /= 4 ;  } int padding =  ( header Data >>> 9 )  & 1 ;  int bitrate ;  int frame Size ;  int samples Per Frame ;  if  ( layer == 3 )  {     //  Layer I  ( layer == 3 )      bitrate = version == 3 ? BITRATE_V1_L1 [ bitrate Index - 1 ]  : BITRATE_V2_L1 [ bitrate Index - 1 ]  ;      frame Size =  ( 12 * bitrate / sample Rate + padding )  * 4 ;      samples Per Frame = 384 ;  } else {     //  Layer II  ( layer == 2 )  or III  ( layer == 1 )      if  ( version == 3 )  {         //  Version 1         bitrate = layer == 2 ? BITRATE_V1_L2 [ bitrate Index - 1 ]  : BITRATE_V1_L3 [ bitrate Index - 1 ]  ;          samples Per Frame = 1152 ;          frame Size = 144 * bitrate / sample Rate + padding ;      } else {         //  Version 2 or 2 . 5 .          bitrate = BITRATE_V2 [ bitrate Index - 1 ]  ;          samples Per Frame = layer == 1 ? 576 : 1152 ;          frame Size =  ( layer == 1 ? 72 : 144 )  * bitrate / sample Rate + padding ;      } } //  Calculate the bitrate in the same way  Mp3 Extractor calculates sample timestamps so that // seeking to a given timestamp and playing from the start up to that timestamp give the same // results for CBR streams .   See also  [ internal: b/120390268 ]  .  bitrate = 8 * frame Size * sample Rate / samples Per Frame ;   String mime Type = MIME_TYPE_BY_LAYER [ 3 - layer ]  ;  int channels =  (  ( header Data >> 6 )  & 3 )  == 3 ? 1 : 2 ;  header . set Values ( version, mime Type, frame Size, sample Rate, channels, bitrate, samples Per Frame )  ;  return true ; }"
2494,"public  Flexible Item Decoration add Item View Type ( @ Layout Res int view Type, int offset ) { return add Item View Type ( view Type, offset, offset, offset, offset )  ; }"
2495,public  Color State List get Progress Tint List (  ) { log Progress Bar Tint Warning (  )  ;  return get Support Progress Tint List (  )  ; }
2496,public UR Iish set Scheme (  String n ) { final UR Iish r = new UR Iish ( this )  ;  r . scheme = n ;  return r ; }
2497,"public static  Rx2 AN Request .  Dynamic Request Builder request (  String url, int method ) { return new  Rx2 AN Request .  Dynamic Request Builder ( url, method )  ; }"
2498,"public com . anychart . core . utils .  Bounds bounds (  ) { return new com . anychart . core . utils .  Bounds ( js Base + "" . bounds (  ) "" )  ; }"
2499,"public com . anychart . core . stock . scrollerseries .  Candlestick rendering (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rendering ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2500,"public com . anychart . core . polar . series .  Range Column bounds ( com . anychart . utils .  Rect Obj bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
2501,"public static boolean load Tinker Resources (  Tinker Application application,  String directory,  Intent intent Result ) { if  ( res Patch Info == null || res Patch Info . res Arsc Md5 == null )  {     return true ;  }  String resource String = directory + ""/"" + RESOURCE_PATH + ""/"" + RESOURCE_FILE ;   File resource File = new  File ( resource String )  ;  long start =  System . current Time Millis (  )  ;  if  ( application . is Tinker Load Verify Flag (  )  )  {     if  ( ! Share Patch File Util . check Resource Arsc Md5 ( resource File, res Patch Info . res Arsc Md5 )  )  {          Share Tinker Log . e ( TAG, "" Failed to load resource file, path: "" + resource File . get Path (  )  + "", expect md5: "" + res Patch Info . res Arsc Md5 )  ;           Share Intent Util . set Intent Return Code ( intent Result,  Share Constants . ERROR_LOAD_PATCH_VERSION_RESOURCE_MD5_MISMATCH )  ;          return false ;      }      Share Tinker Log . i ( TAG, ""verify resource file:"" + resource File . get Path (  )  + "" md5, use time: "" +  (  System . current Time Millis (  )  - start )  )  ;  } try {      Tinker Resource Patcher . monkey Patch Existing Resources ( application, resource String )  ;       Share Tinker Log . i ( TAG, ""monkey Patch Existing Resources resource file:"" + resource String + "", use time: "" +  (  System . current Time Millis (  )  - start )  )  ;  } catch  (  Throwable e )  {      Share Tinker Log . e ( TAG, ""install resources failed"" )  ;      //remove patch dex if resource is installed failed     try {          System Class Loader Adder . uninstall Patch Dex ( application . get Class Loader (  )  )  ;      } catch  (  Throwable throwable )  {          Share Tinker Log . e ( TAG, ""uninstall Patch Dex failed"", e )  ;      }     intent Result . put Extra (  Share Intent Util . INTENT_PATCH_EXCEPTION, e )  ;       Share Intent Util . set Intent Return Code ( intent Result,  Share Constants . ERROR_LOAD_PATCH_VERSION_RESOURCE_LOAD_EXCEPTION )  ;      return false ;  } return true ; }"
2502,"public void get Absolute Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Absolute Width (  )  ; "" )  ; }"
2503,"public void block Until Tasks Complete And Throw Any Download Error (  )  throws  Throwable{ block Until Tasks Complete (  )  ;  if  ( failure Reason !=  Download . FAILURE_REASON_NONE )  {     throw new  Exception ( "" Failure reason: "" + failure Reason )  ;  }}"
2504,"protected int compute Vertical Scroll Range (  ) { final int count = get Child Count (  )  ;  final int content Height = get Height (  )  - get Padding Bottom (  )  - get Padding Top (  )  ;  if  ( count == 0 )  {     return content Height ;  } int scroll Range = get Child At ( 0 )  . get Bottom (  )  ;  final int scroll Y = get Scroll Y (  )  ;  final int overscroll Bottom =  Math . max ( 0, scroll Range - content Height )  ;  if  ( scroll Y < 0 )  {     scroll Range -= scroll Y ;  } else if  ( scroll Y > overscroll Bottom )  {     scroll Range += scroll Y - overscroll Bottom ;  } return scroll Range ; }"
2505,public float get Value (  ) { return m Interpolating Value ; }
2506,"public void test Intended Success_truth (  ) {  Intent i = new  Intent (  )  ;  i . set Action (  Intent . ACTION_VIEW )  ;  i . put Extra ( ""ignoreextra"", """" )  ;  i . set Flags (  Intent . FLAG_ACTIVITY_NEW_TASK )  ;  get Application Context (  )  . start Activity ( i )  ;  assert That (  Iterables . get Only Element ( get Intents (  )  )  )  . has Action (  Intent . ACTION_VIEW )  ; }"
2507,"private void for Each Non Sub Block Depth First ( int first Label,  Basic Block .  Visitor v ) { for Each Non Sub Block Depth First0 ( label To Block ( first Label ) , v, new  Bit Set ( max Label )  )  ; }"
2508,public  Joint get Joint2 (  ) { return joint2 ; }
2509,public static  Display Metrics get Display Metrics (  Context context ) { return context . get Resources (  )  . get Display Metrics (  )  ; }
2510,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
2511,public  Long get Event Time (  ) { return event Time ; }
2512,"public com . anychart . core . ui .  Separator margin (  String space Or Top Or Top And Bottom,  String right Or Right And Left,  String bottom,  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( space Or Top Or Top And Bottom ) , wrap Quotes ( right Or Right And Left ) , wrap Quotes ( bottom ) , wrap Quotes ( left )  )  )  ;  return this ; }"
2513,public boolean equals (  Object o ) { if  ( o instanceof  Program Info )  {      Program Info pi =  (  Program Info )  o ;      return pi . id . equals ( pi . id )  && pi . name . equals ( pi . name )  ;  } return super . equals ( o )  ; }
2514,"public com . anychart . scales .  Base y Scale (  ) { return new com . anychart . scales .  Base ( js Base + "" . y Scale (  ) "" )  ; }"
2515,public int get Underline Color (  ) { return underline Color ; }
2516,"public com . anychart . core . venn .  Intersections hatch Fill ( com . anychart . graphics . vector .  Hatch Fill settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
2517,public int get Foreground Service Notification Id (  ) { return m Foreground Service Notification Id ; }
2518,"public void get Series Count (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Series Count (  )  ; "" )  ; }"
2519,"public  Map< String,  String> class Name Translations (  ) { return  Collections . unmodifiable Map ( class Name Translations )  ; }"
2520,"public long insert ( T entity ) { return execute Insert ( entity, statements . get Insert Statement (  ) , true )  ; }"
2521,"public  Awaiting Request<T> trigger ( @ Non Null final  Operation trigger ) { if  ( trigger instanceof  Request )  {     this . trigger =  (  Request )  trigger ;      this . trigger Status = NOT_STARTED ;      //  The trigger will never receive invalid request event .      //  If the  Bluetooth Device wasn't set, the whole  Wait For Value Changed Request would be invalid .      /*this . trigger . invalid (  (  )  -> {				// never called			} )  ; */     this . trigger . internal Before (  device -> trigger Status = STARTED )  ;      this . trigger . internal Success (  device -> trigger Status =  Bluetooth Gatt . GATT_SUCCESS )  ;      this . trigger . internal Fail (  (  device,  status )  -> {         trigger Status = status ;          sync Lock . open (  )  ;          notify Fail ( device, status )  ;      } )  ;  } return this ; }"
2522,protected  Context get Context (  Object node ) { if  ( node instanceof  Context )  {     return  (  Context )  node ;  }  Context full Context = new  Context ( get Context Support (  )  )  ;  if  ( node instanceof  List )  {     full Context . set Node Set (  (  List )  node )  ;  } else {      List list = new  Singleton List ( node )  ;      full Context . set Node Set ( list )  ;  } return full Context ; }
2523,"public com . anychart . charts .  Gantt tooltip (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . tooltip ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2524,"public com . anychart . charts .  Pert title (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . title ( %s )  ; "", settings )  )  ;  return this ; }"
2525,public boolean is Touch Focus Cancel (  ) { return stage X ==  Integer . MIN_VALUE || stage Y ==  Integer . MIN_VALUE ; }
2526,"public static int sp2px (  Context context, float sp Value ) { final float font Scale = context . get Resources (  )  . get Display Metrics (  )  . scaled Density ;  return  ( int )   ( sp Value * font Scale + 0 . 5f )  ; }"
2527,"public  Ss Media Source create Media Source (  Ss Manifest manifest, @ Nullable  Handler event Handler, @ Nullable  Media Source Event Listener event Listener ) {  Ss Media Source media Source = create Media Source ( manifest )  ;  if  ( event Handler != null && event Listener != null )  {     media Source . add Event Listener ( event Handler, event Listener )  ;  } return media Source ; }"
2528,"public com . anychart . core . cartesian . series .  Width Based error (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . error ( %s )  ; "", settings )  )  ;  return this ; }"
2529,"public com . anychart . charts .  Sunburst container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
2530,"public void set Color (  Color color ) { this . color =  Color . rgba8888 ( color . r, color . g, color . b, color . a )  ; }"
2531,"public static  Builder<K, V> builder ( int size ) { return new  Builder<> ( size )  ; }"
2532,public  Bluetooth Device get Bluetooth Device (  ) { return request Handler . get Bluetooth Device (  )  ; }
2533,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
2534,"public boolean encode Decode Video From Buffer To Surface ( int width, int height, int bit Rate )  throws  Throwable{ set Parameters ( width, height, bit Rate )  ;  return encode Decode Video From Buffer (  )  ; }"
2535,"public  String to String (  ) {  String pretty Text = this . text . replace ( '\n', '¶' )  ;  return "" Diff ( "" + this . operation + "",\"""" + pretty Text + ""\"" ) "" ; }"
2536,"private  Firebase Performance initialize Firebase Performance Preferences (  Boolean metadata Fireperf Force Deactivated Key,  Boolean metadata Fireperf Enabled Key,  Boolean shared Preferences Enabled Disabled Key,  Provider< Remote Config Component> firebase Remote Config Provider,  Provider< Transport Factory> transport Factory Provider ) { if  ( shared Preferences Enabled Disabled Key != null )  {      Device Cache Manager device Cache Manager = new  Device Cache Manager ( fake Direct Executor Service )  ;      device Cache Manager . set Context (  Application Provider . get Application Context (  )  )  ;      device Cache Manager . set Value (  Constants . ENABLE_DISABLE, shared Preferences Enabled Disabled Key )  ;  }  Bundle bundle = new  Bundle (  )  ;  if  ( metadata Fireperf Enabled Key != null )  {     bundle . put Boolean ( FIREPERF_ENABLED_KEY, metadata Fireperf Enabled Key )  ;  } if  ( metadata Fireperf Force Deactivated Key != null )  {     bundle . put Boolean ( FIREPERF_FORCE_DEACTIVATED_KEY, metadata Fireperf Force Deactivated Key )  ;  }  Context context =  Application Provider . get Application Context (  )  ;  shadow Of ( context . get Package Manager (  )  )  . get Internal Mutable Package Info ( context . get Package Name (  )  )  . application Info . meta Data . put All ( bundle )  ;  return new  Firebase Performance (  Firebase App . get Instance (  ) , firebase Remote Config Provider, mock (  Firebase Installations Api . class ) , transport Factory Provider, spy Remote Config Manager, spy Config Resolver, spy Gauge Manager )  ; }"
2537,"public static  Rop op Xor (  Type List types ) { return pick Binary Op ( types, XOR_CONST_INT, XOR_CONST_LONG, null, null, XOR_INT, XOR_LONG, null, null )  ; }"
2538,"public  String get Name (  ) { return "" Weight chart"" ; }"
2539,"public com . anychart . core . gantt . timelineheader .  Level Wrapper adjust Font Size (  Boolean both Or By Width,  Boolean by Height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . adjust Font Size ( %s, %s )  ; "", both Or By Width, by Height )  )  ;  return this ; }"
2540,public  Object [  ]  to Array (  ) { final  Reentrant Lock lock = this . lock ;  lock . lock (  )  ;  try {      Object [  ]  a = new  Object [ count ]  ;      int k = 0 ;      for  (  Node<E> p = first ;  p != null ;  p = p . next )  a [ k++ ]  = p . item ;      return a ;  } finally {     lock . unlock (  )  ;  }}
2541,public synchronized byte [  ]  get Property Byte Array (  String key ) { return drm Session Manager . get Property Byte Array ( key )  ; }
2542,public  String get User Friendly Value (  ) { return to String (  )  ; }
2543,"private void record Unpaired Result (  Failure failure,  Result Type result Type ) { long runtime =  System . current Time Millis (  )  - start Time ;   Description description = failure . get Description (  )  ;  results . add ( new  Test Result ( description . get Class Name (  ) , description . get Method Name (  ) , runtime, result Type, failure . get Exception (  ) , null, null )  )  ; }"
2544,"public static boolean has Textual Content (  String content Type ) { return content Type != null &&  ( content Type . starts With ( ""text/"" )  || content Type . starts With ( ""application/x-javascript"" )  || content Type . starts With ( ""application/javascript"" )  || content Type . starts With ( ""application/json"" )  || content Type . starts With ( ""application/xml"" )  || content Type . starts With ( ""application/xhtml+xml"" )  )  ; }"
2545,public GSY Video Option Builder set Release When Loss Audio ( boolean release When Loss Audio ) { this . m Release When Loss Audio = release When Loss Audio ;  return this ; }
2546,public boolean is Complete (  ) { return length (  )  ==  Constants . LONG_OBJECT_ID_STRING_LENGTH ; }
2547,public boolean is Empty (  ) { return size == 0 ; }
2548,"public void add Getfield (  String c,  String name,  String type ) { add ( GETFIELD )  ;  int ci = const Pool . add Class Info ( c )  ;  add Index ( const Pool . add Fieldref Info ( ci, name, type )  )  ;  grow Stack (  Descriptor . data Size ( type )  - 1 )  ; }"
2549,"public static  Linear Transformation horizontal ( double y ) { check Argument ( is Finite ( y )  )  ;  double slope = 0 . 0 ;  return new  Regular Linear Transformation ( slope, y )  ; }"
2550,void on Scroll ( final float mobile View Top Y ) { m Scroll Distance += m Original Y - mobile View Top Y ;  m Original Y = mobile View Top Y ; }
2551,public  Ordered contains At Least ( float [  ]  expected ) { return contains At Least Elements In (  Floats . as List ( expected )  )  ; }
2552,public  Intent get Next Stopped Service (  ) { return get Shadow Instrumentation (  )  . get Next Stopped Service (  )  ; }
2553,public  Builder rotate Text ( boolean rotate Text ) { this . rotate Text = rotate Text ;  return this ; }
2554,"public void test Encrypt Decrypt Different Sizes (  )  throws  General Security Exception, IO Exception,  Authentication Exception{  Logger . d ( TAG, "" Starting test Encrypt Decrypt_different Sizes"" )  ;  // try different block sizes final int size Range = 1000 ;   String Builder buf = new  String Builder ( size Range )  ;  for  ( int i = 0 ;  i < size Range ;  i++ )  {     encrypt Decrypt ( buf . append ( ""a"" )  . to String (  )  )  ;  }  Logger . d ( TAG, "" Finished test Encrypt Decrypt_different Sizes"" )  ; }"
2555,"public void connect (  ) { connect ( DEFAULT_DB, DEFAULT_ACCOUNTS_COLLECTION )  ; }"
2556,"public UB Json Writer set (  String name, double value )  throws IO Exception{ return name ( name )  . value ( value )  ; }"
2557,public  View Translation Wrapper get Page Indicator Translation Wrapper (  ) { return page Indicator Translation Wrapper ; }
2558,"public  Matrix4 set To Orthographic ( double left, double right, double bottom, double top, double near, double far ) {  Matrix . ortho M ( m, 0, left, right, bottom, top, near, far )  ;  return this ; }"
2559,"public  Iterable<B> convert All ( final  Iterable<? extends A> from Iterable ) { check Not Null ( from Iterable, ""from Iterable"" )  ;  return new  Iterable<B> (  )  {     @ Override     public  Iterator<B> iterator (  )  {         return new  Iterator<B> (  )  {             private final  Iterator<? extends A> from Iterator = from Iterable . iterator (  )  ;              @ Override             public boolean has Next (  )  {                 return from Iterator . has Next (  )  ;              }             @ Override             //  See code comments on convert All and  Converter . apply .              @ Suppress Warnings ( ""nullness"" )              @ Check For Null             public B next (  )  {                 return convert ( from Iterator . next (  )  )  ;              }             @ Override             public void remove (  )  {                 from Iterator . remove (  )  ;              }         } ;      } } ; }"
2560,"public  Ct Method to Method (  String name,  Ct Class declaring )  throws  Cannot Compile Exception{ return to Method ( name, declaring, null )  ; }"
2561,"public void add (  String property,  Json Element value ) { members . put ( property, value == null ?  Json Null . INSTANCE : value )  ; }"
2562,"public com . anychart . charts .  Polar bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
2563,public synchronized void seal Object (  ) { if  ( count >= 0 )  {     //  Make sure all  Lazily Loaded Ctors are initialized before sealing .       Slot slot = first Added ;      while  ( slot != null )  {         if  ( slot . value instanceof  Lazily Loaded Ctor )  {              Lazily Loaded Ctor initializer =  (  Lazily Loaded Ctor )  slot . value ;              try {                 initializer . init (  )  ;              } finally {                 slot . value = initializer . get Value (  )  ;              }         }         slot = slot . ordered Next ;      }     count = ~count ;  }}
2564,"public  Object bind (  Take Photo delegate ) { this . delegate = delegate ;  return  Proxy . new Proxy Instance ( delegate . get Class (  )  . get Class Loader (  ) , delegate . get Class (  )  . get Interfaces (  ) , this )  ; }"
2565,public PDF Object get Page (  ) { return page Obj ; }
2566,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
2567,"Contribution Binding delegate Binding (  Delegate Declaration delegate Declaration,  Contribution Binding actual Binding ) { switch ( actual Binding . binding Type (  )  )  {     case PRODUCTION:         return build Delegate Binding (  Production Binding . builder (  )  . nullable Type ( actual Binding . nullable Type (  )  ) , delegate Declaration,  Producer . class )  ;      case PROVISION:         return build Delegate Binding (  Provision Binding . builder (  )  . scope ( unique Scope Of ( delegate Declaration . binding Element (  )  . get (  )  )  )  . nullable Type ( actual Binding . nullable Type (  )  ) , delegate Declaration,  Provider . class )  ;      // fall-through to throw     case MEMBERS_INJECTION: } throw new  Assertion Error ( ""binding Type: "" + actual Binding )  ; }"
2568,public  String get Geometry Type (  ) { return geometry Type ; }
2569,"Result route (  String input ) {  List< String> split Input = split ( input )  ;  if  ( split Input . is Empty (  )  )  {     return invalid Command ( input )  ;  }  String command Key = split Input . get ( 0 )  ;   Command command = commands . get ( command Key )  ;  if  ( command == null )  {     return invalid Command ( input )  ;  }  List< String> args = split Input . sub List ( 1, split Input . size (  )  )  ;   Result result = command . handle Input ( args )  ;  return result . status (  )  . equals (  Status . INVALID )  ? invalid Command ( input )  : result ; }"
2570,"private  List< File> process Bundle Files (  File new Bundle File,  File base Bundle File,  File patch Tmp Dir,  File diff File,  File diff Json File )  throws  Patch Exception, IO Exception,  Recognition Exception{  String bundle Name =  Filename Utils . get Base Name ( new Bundle File . get Name (  )  )  ;  if  ( !is Modify Bundle ( new Bundle File . get Name (  )  )  || ! (  (  Apatch Input )  input )  . only Include Modify Bundle )  {     return null ;  } if  ( null != logger )  {     logger . info ( "" [  Diff Apatch ] "" + bundle Name )  ;  } final  File new Bundle Unzip Folder = new  File ( new Bundle File . get Parent File (  ) , bundle Name )  ;  final  File base Bundle Unzip Folder = new  File ( base Bundle File . get Parent File (  ) , bundle Name )  ;  if  ( null != base Bundle File && base Bundle File . is File (  )  && base Bundle File . exists (  )  )  {     // unzip apk      Zip Utils . unzip ( new Bundle File, new Bundle Unzip Folder . get Absolute Path (  )  )  ;       Zip Utils . unzip ( base Bundle File, base Bundle Unzip Folder . get Absolute Path (  )  )  ;      //  String patch Bundle Name = get Bundle Name ( new Bundle File . get Name (  )  )  ;       String patch Bundle Name =  Filename Utils . get Base Name ( new Bundle File . get Name (  )  . replace ( ""lib"", """" )  )  ;      if  ( null != patch Bundle Name )  {         patch Bundle Name = patch Bundle Name . replace ( "" . "", ""_"" )  ;           List< File> bundle Patchs = create Bundle A Patch ( new Bundle Unzip Folder, base Bundle Unzip Folder, patch Tmp Dir, patch Bundle Name, diff File, diff Json File )  ;          return bundle Patchs ;      } else {         throw new  Patch Exception ( "" Cannot found bundle:"" + new Bundle File . get Name (  )  + "" in modify Bundle Infos . "" )  ;      } } return null ; }"
2571,"protected void setup Object List (  ) { object List . add ( new  Number Hash Map (  Data Types . OBJ_TIME_STAMP_FORMAT, this,  Event Timing Timestamp Types . TIMESTAMP_KEY_FIELD_SIZE )  )  ;  object List . add ( new  Event Timing Code List ( this )  )  ; }"
2572,public static  Rx AN Request .  Options Request Builder options (  String url ) { return new  Rx AN Request .  Options Request Builder ( url )  ; }
2573,public void set Right ( float right ) { this . right = right ; }
2574,public  Stash Apply Command set Stash Ref (  String stash Ref ) { this . stash Ref = stash Ref ;  return this ; }
2575,private void reset (  ) { view Attached First Time = true ;  intent Relays Binders . clear (  )  ;  subscribe View State Method Called = false ; }
2576,"protected  Menu Builder set Header View Int (  View view ) { set Header Internal ( 0, null, 0, null, view )  ;  return this ; }"
2577,public void run (  ) {  Pool pool = get Pool (  )  ;  //  Ensure this action can't be returned to the pool inside the runnable .  set Pool ( null )  ;  try {     runnable . run (  )  ;  } finally {     set Pool ( pool )  ;  }}
2578,public  Amplitude Client set Session Timeout Millis ( long session Timeout Millis ) { this . session Timeout Millis = session Timeout Millis ;  return this ; }
2579,public boolean has Source (  ) { return source_ != null ; }
2580,public boolean is Active (  ) { return  ( m Flags &  Swipeable Item Constants . STATE_FLAG_IS_ACTIVE )  != 0 ; }
2581,public  Observable< List<T>> load All (  ) { return wrap ( new  Callable< List<T>> (  )  {     @ Override     public  List<T> call (  )  throws  Exception {         return dao . load All (  )  ;      } } )  ; }
2582,"private void add Paths Of Class Loader To System Class Loader (  Dex Class Loader new Class Loader,  Path Class Loader system Class Loader ) { try {     if  ( exists Base Dex Class Loader (  )  )  {         //  In ICS,  Path Class Loader and  Dex Class Loader are built on a common base class called         //  Base Dex Class Loader .          add New Class Loader To System Class Loader With Base Dex ( new Class Loader, system Class Loader )  ;      } else {         //  In earlier versions,  Path Class Loader and  Dex Class Loader have similar layout but         // don't share code .          add New Class Loader To System Class Loader Pre Base Dex ( new Class Loader, system Class Loader )  ;      } } catch  (  No Such Field Exception e )  {     throw new  Runtime Exception ( e )  ;  } catch  (  Illegal Access Exception e )  {     throw new  Runtime Exception ( e )  ;  }}"
2583,public  String get New Symref (  ) { return new Symref ; }
2584,"private  Sonic Session lookup Session (  Sonic Session Config config,  String session Id, boolean pick ) { if  ( ! Text Utils . is Empty ( session Id )  && config != null )  {      Sonic Session sonic Session = preload Session Pool . get ( session Id )  ;      if  ( sonic Session != null )  {         //判断session缓存是否过期,以及session Config是否发生变化         if  ( !config . equals ( sonic Session . config )  || sonic Session . config . PRELOAD_SESSION_EXPIRED_TIME > 0 &&  System . current Time Millis (  )  - sonic Session . created Time > sonic Session . config . PRELOAD_SESSION_EXPIRED_TIME )  {             if  ( runtime . should Log (  Log . ERROR )  )  {                 runtime . log ( TAG,  Log . ERROR, ""lookup Session error:session Id ( "" + session Id + "" )  is expired . "" )  ;              }             preload Session Pool . remove ( session Id )  ;              sonic Session . destroy (  )  ;              return null ;          }         if  ( pick )  {             preload Session Pool . remove ( session Id )  ;          }     }     return sonic Session ;  } return null ; }"
2585,public  Constant get Constant ( int position ) { return constants [ position ]  ; }
2586,public boolean has Parameter Annotation (  Class<T> annotation Type ) { return  ( get Parameter Annotation ( annotation Type )  != null )  ; }
2587,"void check Is E ( @ Nullable  Object element ) { check Not Null ( element )  ;  if  ( !is Actually E ( element )  )  {     throw new  Class Cast Exception ( "" Expected an "" + type + "" but got "" + element )  ;  }}"
2588,public  Pattern Layout Encoder get Tag Encoder (  ) { return this . tag Encoder ; }
2589,"public com . anychart . core . utils .  Connector stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2590,public  Builder set Initial Bitrate Estimate (  String country Code ) { initial Bitrate Estimates = get Initial Bitrate Estimates For Country (  Util . to Upper Invariant ( country Code )  )  ;  return this ; }
2591,"public com . anychart . core . stock . scrollerseries .  Range Area low Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
2592,public void set SMTP Host (  String smtp Host ) { set Smtp Host ( smtp Host )  ; }
2593,public  Storage Task< Result T> remove On Complete Listener ( @ Non Null  On Complete Listener< Result T> listener ) {  Preconditions . check Not Null ( listener )  ;  complete Listener . remove Listener ( listener )  ;  return this ; }
2594,"public final  Linear Transformation least Squares Fit (  ) { check State ( count (  )  > 1 )  ;  if  ( is Na N ( sum Of Products Of Deltas )  )  {     return  Linear Transformation . for Na N (  )  ;  } double x Sum Of Squares Of Deltas = x Stats . sum Of Squares Of Deltas (  )  ;  if  ( x Sum Of Squares Of Deltas > 0 . 0 )  {     if  ( y Stats . sum Of Squares Of Deltas (  )  > 0 . 0 )  {         return  Linear Transformation . mapping ( x Stats . mean (  ) , y Stats . mean (  )  )  . with Slope ( sum Of Products Of Deltas / x Sum Of Squares Of Deltas )  ;      } else {         return  Linear Transformation . horizontal ( y Stats . mean (  )  )  ;      } } else {     check State ( y Stats . sum Of Squares Of Deltas (  )  > 0 . 0 )  ;      return  Linear Transformation . vertical ( x Stats . mean (  )  )  ;  }}"
2595,public  Section set Description (  Char Sequence description ) { m Description View = create Section Footer ( description )  ;  return this ; }
2596,"public com . anychart . standalones .  Resource List stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
2597,"public  Closeable Reference< Bitmap> create Bitmap ( int width, int height, @ Nullable  Object caller Context ) { return create Bitmap ( width, height,  Bitmap .  Config . ARGB_8888, caller Context )  ; }"
2598,"public com . anychart . core . annotations .  Plot Controller parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
2599,"public com . anychart . charts .  Sankey bounds (  Number x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
2600,public boolean is Playing (  ) { return m Is Running ; }
2601,public synchronized void set Network Type Override ( @C .  Network Type int network Type ) { network Type Override = network Type ;  network Type Override Set = true ;  on Connectivity Action (  )  ; }
2602,"public com . anychart . charts .  Gantt margin (  Number value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
2603,public final void notify Seek Started (  ) { if  ( !media Period Queue Tracker . is Seeking (  )  )  {      Event Time event Time = generate Playing Media Period Event Time (  )  ;      media Period Queue Tracker . on Seek Started (  )  ;      for  (  Analytics Listener listener : listeners )  {         listener . on Seek Started ( event Time )  ;      } }}
2604,"public com . anychart . core . axismarkers .  Gantt Text rotation (  Number rotation ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rotation ( %s )  ; "", rotation )  )  ;  return this ; }"
2605,public  Builder clear Hostname (  ) { hostname_ = get Default Instance (  )  . get Hostname (  )  ;  on Changed (  )  ;  return this ; }
2606,public  Object evaluate (  Object context )  throws  Jaxen Exception{  List answer = select Nodes ( context )  ;  if  ( answer != null && answer . size (  )  == 1 )  {      Object first = answer . get ( 0 )  ;      if  ( first instanceof  String || first instanceof  Number || first instanceof  Boolean )  {         return first ;      } } return answer ; }
2607,"public static  Purpose TEST (  String description ) { return new  Purpose ( PURPOSE_TEST + "": "" + description )  ; }"
2608,"public com . anychart . core . stock . indicators . DMI dmi ( com . anychart . data .  Table Mapping mapping,  Number period,  Number adx Period,  Boolean use Wilders Smoothing, com . anychart . enums .  Stock Series Type pdi Series Type, com . anychart . enums .  Stock Series Type ndi Series Type,  String adx Series Type ) { return new com . anychart . core . stock . indicators . DMI (  String . format (  Locale . US, js Base + "" . dmi ( %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, period, adx Period, use Wilders Smoothing,  ( pdi Series Type != null )  ? pdi Series Type . get Js Base (  )  : null,  ( ndi Series Type != null )  ? ndi Series Type . get Js Base (  )  : null, wrap Quotes ( adx Series Type )  )  )  ; }"
2609,"public com . anychart . core . axismarkers .  Current Price Indicator stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
2610,"public  Declared Type rewrap Type (  Type Mirror type,  Class<?> wrapping Class ) {  List<? extends  Type Mirror> type Arguments =  More Types . as Declared ( type )  . get Type Arguments (  )  ;   Type Element wrapping Type = elements . get Type Element ( wrapping Class )  ;  switch ( type Arguments . size (  )  )  {     case 0:         return get Declared Type ( wrapping Type )  ;      case 1:         return get Declared Type ( wrapping Type, get Only Element ( type Arguments )  )  ;      default:         throw new  Illegal Argument Exception ( type + "" has more than 1 type argument"" )  ;  }}"
2611,"public com . anychart . core .  State Settings normal (  ) { return new com . anychart . core .  State Settings ( js Base + "" . normal (  ) "" )  ; }"
2612,"public  String join (  Iterable<? extends  Entry<?, ?>> entries ) { return join ( entries . iterator (  )  )  ; }"
2613,public void set Is System User ( boolean is System User ) { this . is System User = is System User ; }
2614,"public com . anychart . core . pert .  Milestones fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
2615,"protected void calculate Edits ( int begin A, int end A, int begin B, int end B ) {  Edit edit = middle . calculate ( begin A, end A, begin B, end B )  ;  if  ( begin A < edit . begin A || begin B < edit . begin B )  {     int k = edit . begin B - edit . begin A ;      int x = middle . backward . snake ( k, edit . begin A )  ;      calculate Edits ( begin A, x, begin B, k + x )  ;  } if  ( edit . get Type (  )  !=  Edit .  Type . EMPTY )      edits . add ( edits . size (  ) , edit )  ;  // after middle if  ( end A > edit . end A || end B > edit . end B )  {     int k = edit . end B - edit . end A ;      int x = middle . forward . snake ( k, edit . end A )  ;      calculate Edits ( x, end A, k + x, end B )  ;  }}"
2616,public  Immersion Bar keyboard Mode ( int keyboard Mode ) { m Bar Params . keyboard Mode = keyboard Mode ;  return this ; }
2617,"public com . anychart . core . ui .  Chart Scroller z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
2618,"public com . anychart . core . map . series .  Base stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { return new com . anychart . core . map . series .  Base (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s ) "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ; }"
2619,public void publish Message (  Message message ) { message Priority Message Queue . add ( message )  ; }
2620,public final boolean is Sealed (  ) { return count < 0 ; }
2621,"public com . anychart . charts .  Waterfall padding (  String padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "", wrap Quotes ( padding )  )  )  ;  return this ; }"
2622,Buck Unix Path get Default Directory (  ) { return default Directory ; }
2623,"protected  Set Value Request set Descriptor Value ( @ Nullable final  Bluetooth Gatt Descriptor server Descriptor, @ Nullable final byte [  ]  data, final int offset, final int length ) { return  Request . new Set Value Request ( server Descriptor, data, offset, length )  . set Request Handler ( request Handler )  ; }"
2624,static  Set<ID Key> get Registry (  ) { return REGISTRY . get (  )  ; }
2625,"public static int get Status (  String pn, int ver ) {  Plugin Status ps = get Status Impl ( pn )  ;  // 获取PS有任何异常？直接返回 if  ( ps == null )  {     if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, ""P Status C . get Status (  ) : ps is null .  pn="" + pn )  ;      }     return STATUS_OK ;  } // 不是此版本，可直接忽略 if  ( ver != -1 && ps . get Version (  )  != ver )  {     if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, ""P Status C . get Status (  ) : ver not match .  ver="" + ver + "" ;  expect="" + ps . get Version (  )  + "" ;  pn="" + pn )  ;      }     return STATUS_OK ;  } int st = ps . get Status (  )  ;  if  ( LOG )  {      Log Debug . d ( PLUGIN_TAG, ""P Status C . get Status (  ) : ver match .  ver="" + ver + "" ;  pn="" + pn + "" ;  st="" + st )  ;  } return st ; }"
2626,"public void test Empty Texts (  )  throws IO Exception{ // test modification against deletion assert Equals ( t ( ""<AB=>"" ) , merge ( ""A"", ""AB"", """" )  )  ;  assert Equals ( t ( ""<=AB>"" ) , merge ( ""A"", """", ""AB"" )  )  ;  // test unmodified against deletion assert Equals ( t ( """" ) , merge ( ""AB"", ""AB"", """" )  )  ;  assert Equals ( t ( """" ) , merge ( ""AB"", """", ""AB"" )  )  ;  // test deletion against deletion assert Equals ( t ( """" ) , merge ( ""AB"", """", """" )  )  ; }"
2627,public long length (  ) { return in Core Length (  )  ; }
2628,"private static int constant To Value Type (  Constant cst ) { /*      * TODO:  Constant should probable have an associated enum, so this      * can be a switch (  )  .       */ if  ( cst instanceof  Cst Byte )  {     return VALUE_BYTE ;  } else if  ( cst instanceof  Cst Short )  {     return VALUE_SHORT ;  } else if  ( cst instanceof  Cst Char )  {     return VALUE_CHAR ;  } else if  ( cst instanceof  Cst Integer )  {     return VALUE_INT ;  } else if  ( cst instanceof  Cst Long )  {     return VALUE_LONG ;  } else if  ( cst instanceof  Cst Float )  {     return VALUE_FLOAT ;  } else if  ( cst instanceof  Cst Double )  {     return VALUE_DOUBLE ;  } else if  ( cst instanceof  Cst String )  {     return VALUE_STRING ;  } else if  ( cst instanceof  Cst Type )  {     return VALUE_TYPE ;  } else if  ( cst instanceof  Cst Field Ref )  {     return VALUE_FIELD ;  } else if  ( cst instanceof  Cst Method Ref )  {     return VALUE_METHOD ;  } else if  ( cst instanceof  Cst Enum Ref )  {     return VALUE_ENUM ;  } else if  ( cst instanceof  Cst Array )  {     return VALUE_ARRAY ;  } else if  ( cst instanceof  Cst Annotation )  {     return VALUE_ANNOTATION ;  } else if  ( cst instanceof  Cst Known Null )  {     return VALUE_NULL ;  } else if  ( cst instanceof  Cst Boolean )  {     return VALUE_BOOLEAN ;  } else {     throw new  Runtime Exception ( "" Shouldn't happen"" )  ;  }}"
2629,"public static void apply Theme (  Activity activity ) {  Theme Manager . apply Theme ( activity, false )  ; }"
2630,"public  Auto Layout Model View Match Parent Model_ on Visibility Changed (  On Model Visibility Changed Listener< Auto Layout Model View Match Parent Model_,  Auto Layout Model View Match Parent> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
2631,"public void end Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . end Index (  )  ; "" )  ; }"
2632,public int get Focused Column (  ) { if  ( !snap To Column When Scrolling (  )  )  {     return 0 ;  } return m Current Column ; }
2633,public void set Text Output (  Text Output output ) { text Outputs . clear (  )  ;  if  ( output != null )  {     add Text Output ( output )  ;  }}
2634,"public com . anychart . core . axismarkers .  Gantt Text padding (  Number value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
2635,"public  Object create Instance (  Type type ) {  Graph graph = graph Thread Local . get (  )  ;  if  ( graph == null || graph . next Create == null )  {     throw new  Illegal State Exception ( "" Unexpected call to create Instance (  )  for "" + type )  ;  }  Instance Creator<?> creator = instance Creators . get ( type )  ;   Object result = creator . create Instance ( type )  ;  graph . next Create . value = result ;  graph . next Create = null ;  return result ; }"
2636,"public  Iterable< Rev Commit> call (  )  throws  Git API Exception,  No Head Exception{ check Callable (  )  ;   List< Tree Filter> filters = new  Array List<> (  )  ;  if  ( !path Filters . is Empty (  )  )  {     filters . add (  And Tree Filter . create (  Path Filter Group . create ( path Filters ) ,  Tree Filter . ANY_DIFF )  )  ;  } if  ( !exclude Tree Filters . is Empty (  )  )  {     for  (  Tree Filter f : exclude Tree Filters )  {         filters . add (  And Tree Filter . create ( f,  Tree Filter . ANY_DIFF )  )  ;      } } if  ( !filters . is Empty (  )  )  {     if  ( filters . size (  )  == 1 )  {         filters . add (  Tree Filter . ANY_DIFF )  ;      }     walk . set Tree Filter (  And Tree Filter . create ( filters )  )  ;  } if  ( skip > -1 && max Count > -1 )      walk . set Rev Filter (  And Rev Filter . create (  Skip Rev Filter . create ( skip ) ,  Max Count Rev Filter . create ( max Count )  )  )  ;  else if  ( skip > -1 )      walk . set Rev Filter (  Skip Rev Filter . create ( skip )  )  ;  else if  ( max Count > -1 )      walk . set Rev Filter (  Max Count Rev Filter . create ( max Count )  )  ;  if  ( !start Specified )  {     try {          Object Id head Id = repo . resolve (  Constants . HEAD )  ;          if  ( head Id == null )              throw new  No Head Exception ( J Git Text . get (  )  . no HEAD Exists And No Explicit Starting Revision Was Specified )  ;          add ( head Id )  ;      } catch  ( IO Exception e )  {         // severe low-level exception which are therefore wrapped         throw new J Git Internal Exception ( J Git Text . get (  )  . an Exception Occurred While Trying To Add The Id Of HEAD, e )  ;      } } if  ( this . rev Filter != null )  {     walk . set Rev Filter ( this . rev Filter )  ;  } set Callable ( false )  ;  return walk ; }"
2637,public void move Right ( double units ) { m Temp Vec . set All (  World Parameters . RIGHT_AXIS )  ;  m Temp Vec . rotate By ( m Orientation )  . normalize (  )  ;  m Temp Vec . multiply ( units )  ;  m Position . add ( m Temp Vec )  ;  if  ( m Look At Valid )  {     m Look At . add ( m Temp Vec )  ;      reset To Look At (  )  ;  } mark Model Matrix Dirty (  )  ; }
2638,"protected final void restructure If Necessary ( boolean allow Resize ) { boolean needs Resize =  (  ( this . count > 0 )  &&  ( this . count >= this . resize Threshold )  )  ;   Reference<K, V> reference = this . reference Manager . poll For Purge (  )  ;  if  (  ( reference != null )  ||  ( needs Resize && allow Resize )  )  {     lock (  )  ;      try {         int count After Restructure = this . count ;           Set< Reference<K, V>> to Purge =  Collections . empty Set (  )  ;          if  ( reference != null )  {             to Purge = new  Hash Set< Reference<K, V>> (  )  ;              while  ( reference != null )  {                 to Purge . add ( reference )  ;                  reference = this . reference Manager . poll For Purge (  )  ;              }         }         count After Restructure -= to Purge . size (  )  ;          //  Recalculate taking into account count inside lock and items that         // will be purged         needs Resize =  ( count After Restructure > 0 && count After Restructure >= this . resize Threshold )  ;          boolean resizing = false ;          int restructure Size = this . references . length ;          if  ( allow Resize && needs Resize && restructure Size < MAXIMUM_SEGMENT_SIZE )  {             restructure Size <<= 1 ;              resizing = true ;          }         //  Either create a new table or reuse the existing one          Reference<K, V> [  ]  restructured =  ( resizing ? create Reference Array ( restructure Size )  : this . references )  ;          //  Restructure         for  ( int i = 0 ;  i < this . references . length ;  i++ )  {             reference = this . references [ i ]  ;              if  ( !resizing )  {                 restructured [ i ]  = null ;              }             while  ( reference != null )  {                 if  ( !to Purge . contains ( reference )  &&  ( reference . get (  )  != null )  )  {                     int index = get Index ( reference . get Hash (  ) , restructured )  ;                      restructured [ index ]  = this . reference Manager . create Reference ( reference . get (  ) , reference . get Hash (  ) , restructured [ index ]  )  ;                  }                 reference = reference . get Next (  )  ;              }         }         //  Replace volatile members         if  ( resizing )  {             set References ( restructured )  ;          }         this . count =  Math . max ( count After Restructure, 0 )  ;      } finally {         unlock (  )  ;      } }}"
2639,private static boolean has Nullness Annotations (  Method Node method ) { if  ( list Has Nullness Annotations ( method . visible Annotations )  || list Has Nullness Annotations ( method . invisible Annotations )  )  {     return true ;  } if  ( method . visible Parameter Annotations != null )  {     for  (  List< Annotation Node> annotation List : method . visible Parameter Annotations )  {         if  ( list Has Nullness Annotations ( annotation List )  )  {             return true ;          }     } } if  ( method . invisible Parameter Annotations != null )  {     for  (  List< Annotation Node> annotation List : method . invisible Parameter Annotations )  {         if  ( list Has Nullness Annotations ( annotation List )  )  {             return true ;          }     } } return false ; }
2640,public final void set Key Index ( final int key Index ) { this . key Index = key Index ;  save Key Index (  )  ; }
2641,"public static void on Resume All ( boolean seek ) { if  ( s Map . size (  )  > 0 )  {     for  (  Map .  Entry< String,  Custom Manager> header : s Map . entry Set (  )  )  {         header . get Value (  )  . on Resume ( header . get Key (  ) , seek )  ;      } }}"
2642,public int get Status_code (  ) { return status_code ; }
2643,"public void cross (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . cross (  )  ; "" )  ; }"
2644,"public com . anychart . charts .  Tag Cloud label (  String index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , wrap Quotes ( settings )  )  )  ;  return this ; }"
2645,"public com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Ui Mode Type get Ui Mode Type (  ) { @ Suppress Warnings ( ""deprecation"" )  com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Ui Mode Type result = com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Ui Mode Type . value Of ( ui Mode Type_ )  ;  return result == null ? com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Ui Mode Type . UNRECOGNIZED : result ; }"
2646,"public void test Initial Insert (  ) { m Insert Queue . insert ( 0, 0 )  ;  verify ( m Insertable, times ( 1 )  )  . add ( 0, 0 )  ;  assert That ( m Insert Queue . get Active Indexes (  ) , has Item ( 0 )  )  ; }"
2647,public long get Time Searching For Reuse (  ) { return statistics . time Searching For Reuse ; }
2648,"public com . anychart . charts .  Cartesian max Height (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
2649,public  Builder incremental Mount ( boolean is Enabled ) { incremental Mount Enabled = is Enabled ;  return this ; }
2650,"public static int last Index Of ( double [  ]  array, double target ) { return last Index Of ( array, target, 0, array . length )  ; }"
2651,public void set On Item Click Listener (  On Item Click Listener listener ) { this . listener = listener ; }
2652,"private synchronized void make Orphan (  Entry<K, V> entry ) {  Preconditions . check Not Null ( entry )  ;   Preconditions . check State ( !entry . is Orphan )  ;  entry . is Orphan = true ; }"
2653,"public void show Hide Fragment ( I Support Fragment show Fragment, I Support Fragment hide Fragment ) { m Transaction Delegate . show Hide Fragment ( get Support Fragment Manager (  ) , show Fragment, hide Fragment )  ; }"
2654,protected void response Exception (  Throwable t ) { if  ( sync Protocol != null )      sync Protocol . response Exception ( t )  ; }
2655,"public  Input Stream get Data (  Protocol .  Digest digest )  throws IO Exception{  Path path = get Path ( digest . get Hash (  )  )  ;   Preconditions . check State (  Files . exists ( path ) , "" Couldn't find %s . "", path )  ;  return new  Buffered Input Stream ( get File Input Stream ( digest )  )  ; }"
2656,"private void _load Sessions From File (  ) {  File Input Stream fis = null ;  try {     fis = _app Context . open File Input ( SESSIONS_FILE_NAME )  ;       Input Stream Reader isr = new  Input Stream Reader ( fis )  ;       Buffered Reader buffered Reader = new  Buffered Reader ( isr )  ;       String Builder sb = new  String Builder (  )  ;       String line ;      while  (  ( line = buffered Reader . read Line (  )  )  != null )  {         sb . append ( line )  ;      }     JSON Array sessions Json = new JSON Array ( sb . to String (  )  )  ;      synchronized  ( _sessions Lock )  {         for  ( int i = 0 ;  i < sessions Json . length (  )  ;  i++ )  {             JSON Object sessions Obj = sessions Json . get JSON Object ( i )  ;               Session session = new  Session ( sessions Obj )  ;              // in such a case .              if  ( session . get End Time (  )  == null )  {                 session . end (  )  ;              }             _sessions . add ( session )  ;          }         if  ( _sessions . size (  )  > 0 )  {             this . _init Session Completer (  )  ;          }     } } catch  (  File Not Found Exception e )  {      Log . e ( LOGTAG, "" Could not find sessions file"", e )  ;  } catch  ( IO Exception e )  {      Log . e ( LOGTAG, "" Could not read from sessions file"", e )  ;  } catch  ( JSON Exception e )  {      Log . e ( LOGTAG, "" Could not serialize json string from file"", e )  ;  }}"
2657,public void set Freezes Animation ( boolean freezes Animation ) { view Attributes . freezes Animation = freezes Animation ; }
2658,"private static void write Int ( byte [  ]  buffer, int offset, int value ) { buffer [ offset ]  =  ( byte )   ( value >> 24 )  ;  buffer [ offset + 1 ]  =  ( byte )   ( value >> 16 )  ;  buffer [ offset + 2 ]  =  ( byte )   ( value >> 8 )  ;  buffer [ offset + 3 ]  =  ( byte )  value ; }"
2659,public void set Expiration Buffer ( int expiration Buffer ) { com . microsoft . identity . common . adal . internal .  Authentication Settings . INSTANCE . set Expiration Buffer ( expiration Buffer )  ; }
2660,"public com . anychart . charts .  Sparkline bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
2661,int get Status Bar Height (  ) { return m Status Bar Height ; }
2662,"static  Executor renaming Decorator ( final  Executor executor, final  Supplier< String> name Supplier ) { check Not Null ( executor )  ;  check Not Null ( name Supplier )  ;  return new  Executor (  )  {     @ Override     public void execute (  Runnable command )  {         executor . execute (  Callables . thread Renaming ( command, name Supplier )  )  ;      } } ; }"
2663,"public static boolean apply ( @ Non Null  View Position pos, @ Non Null  View view ) { return pos . init ( view )  ; }"
2664,public void clear (  ) { for  (  Cache Object< String> value : values (  )  )  {     if  ( value != null )  {         delete File ( value . get Data (  )  )  ;      } } super . clear (  )  ; }
2665,"public  Mesh set Instance Data ( float [  ]  instance Data, int offset, int count ) { if  ( instances != null )  {     this . instances . set Instance Data ( instance Data, offset, count )  ;  } else {     throw new  Gdx Runtime Exception ( "" An  Instance Buffer Object must be set before setting instance data!"" )  ;  } return this ; }"
2666,"public void hover Gap (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . hover Gap (  )  ; "" )  ; }"
2667,public  Mp4 Esds Box .  Kind get Kind (  ) { return  (  Mp4 Esds Box .  Kind )  content . get ( FIELD_KIND )  ; }
2668,"public void set Column Weight ( @ Float Range ( from = 0, to = 1 )  float first Column Weight, @ Float Range ( from = 0, to = 1 )  float second Column Weight, @ Float Range ( from = 0, to = 1 )  float third Column Weight ) { this . first Column Weight = first Column Weight ;  this . second Column Weight = second Column Weight ;  this . third Column Weight = third Column Weight ; }"
2669,"public  String to String (  ) { if  ( is Empty (  )  )  {     return ""{}"" ;  }  String Builder buffer = new  String Builder ( size (  )  * 28 )  ;  buffer . append ( '{' )  ;   Iterator< Map .  Entry<K, V>> it = entry Set (  )  . iterator (  )  ;  while  ( it . has Next (  )  )  {      Map .  Entry<K, V> entry = it . next (  )  ;       Object key = entry . get Key (  )  ;      if  ( key != this )  {         buffer . append ( key )  ;      } else {         buffer . append ( "" ( this  Map ) "" )  ;      }     buffer . append ( '=' )  ;       Object value = entry . get Value (  )  ;      if  ( value != this )  {         buffer . append ( value )  ;      } else {         buffer . append ( "" ( this  Map ) "" )  ;      }     if  ( it . has Next (  )  )  {         buffer . append ( "", "" )  ;      } } buffer . append ( '}' )  ;  return buffer . to String (  )  ; }"
2670,"public boolean has Process Finished (  Object process ) { if  ( process instanceof  Nu Process )  {     return ! (  (  Nu Process )  process )  . is Running (  )  ;  } else if  ( process instanceof  Process )  {     try {          (  (  Process )  process )  . exit Value (  )  ;          return true ;      } catch  (  Illegal Thread State Exception e )  {         return false ;      } } else {     throw new  Illegal Argument Exception ( "" Unknown process class: "" + process . get Class (  )  )  ;  }}"
2671,"public final float get Angle (  ) { return  Math Utils . atan2 ( ex . y, ex . x )  ; }"
2672,void clear (  ) { try {     for  (  ;   ;   )  {         try {             active . acquire ( MAX )  ;              break ;          } catch  (  Interrupted Exception e )  {             continue ;          }     }     synchronized  ( events )  {         events . clear (  )  ;      } } finally {     active . release ( MAX )  ;  }}
2673,public  String get Name (  ) { return name ; }
2674,"public void test Adaptive Icon_before Android O (  ) { set Application Icon ( context . get Package Name (  ) , R . drawable . adaptive_icon )  ;   Bundle data = new  Bundle (  )  ;  data . put String ( KEY_TITLE, ""title 123"" )  ;  assert True ( new  Display Notification ( context, new  Notification Params ( data ) , executor )  . handle Notification (  )  )  ;   Notification n = get Single Notification (  )  ;  // check that we use R and that we don't fallback to the default app icon .  assert Equals ( R . drawable . adaptive_icon, n . icon )  ; }"
2675,"private void render Episodes ( final  Tv Show View Model tv Show ) {  List< Renderer< Episode View Model>> episode Renderers = new  Linked List< Renderer< Episode View Model>> (  )  ;  episode Renderers . add ( new  Episode Renderer (  )  )  ;   Episode Renderer Builder episode Renderer Builder = new  Episode Renderer Builder ( episode Renderers )  ;   Episode Renderer Adapter episodes Adapter = new  Episode Renderer Adapter ( get Layout Inflater (  ) , episode Renderer Builder, tv Show . get Episodes (  )  )  ;  episodes List View . set Adapter ( episodes Adapter )  ; }"
2676,"public void debug ( @ Nullable  Throwable exception,  String format,  Object .  .  .  args ) { log Appendable Log Record ( FINE, ""DEBUG"", exception, format, args )  ; }"
2677,public  Builder is Reconciliation Enabled ( boolean is Enabled ) { this . is Reconciliation Enabled = is Enabled ;  return this ; }
2678,"public com . anychart . core . utils .  Padding set (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
2679,"public void mark Start (  Rev Commit c )  throws  Missing Object Exception,  Incorrect Object Type Exception, IO Exception{ if  (  ( c . flags & SEEN )  != 0 )      return ;  if  (  ( c . flags & PARSED )  == 0 )      c . parse Headers ( this )  ;  c . flags |= SEEN ;  roots . add ( c )  ;  queue . add ( c )  ; }"
2680,"public com . anychart . core . stock . scrollerseries . OHLC rising Stroke ( com . anychart . graphics . vector .  Colored Fill value,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rising Stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
2681,"public  View get Spinner View (  ) { try {      Field spinner Field = m Action Bar View Class . get Declared Field ( ""m Spinner"" )  ;      spinner Field . set Accessible ( true )  ;      return  (  View )  spinner Field . get ( m Action Bar View )  ;  } catch  (  No Such Field Exception e )  {      Log . e ( ""TAG"", "" Failed to find actionbar spinner"", e )  ;  } catch  (  Illegal Access Exception e )  {      Log . e ( ""TAG"", "" Failed to access actionbar spinner"", e )  ;  } return null ; }"
2682,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
2683,"public  Mesh set Instance Data (  Float Buffer instance Data, int count ) { if  ( instances != null )  {     this . instances . set Instance Data ( instance Data, count )  ;  } else {     throw new  Gdx Runtime Exception ( "" An  Instance Buffer Object must be set before setting instance data!"" )  ;  } return this ; }"
2684,public float get Origin_z (  ) { return origin_z ; }
2685,"public com . anychart . charts .  Venn parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
2686,"public void selection Mode (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . selection Mode (  )  ; "" )  ; }"
2687,private void allow Parent Intercept Touch Event (  Scroll Result scroll Result ) { if  ( null != view Parent )  {     if  (  Container Scroll Type . HORIZONTAL == container Scroll Type && !scroll Result . can Scroll X && !scale Gesture Detector . is In Progress (  )  )  {         view Parent . request Disallow Intercept Touch Event ( false )  ;      } else if  (  Container Scroll Type . VERTICAL == container Scroll Type && !scroll Result . can Scroll Y && !scale Gesture Detector . is In Progress (  )  )  {         view Parent . request Disallow Intercept Touch Event ( false )  ;      } }}
2688,"public void get Stack Value (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Stack Value (  )  ; "" )  ; }"
2689,"public com . anychart . core . resource .  Logo left Stroke ( com . anychart . graphics . vector .  Stroke value,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left Stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
2690,public void export Directory (  File dir ) { export Base . add ( dir )  ; }
2691,"public com . anychart . core . axes .  Map Ticks stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2692,"public void on Create (  Bundle saved Instance State ) { super . on Create ( saved Instance State )  ;  set Title ( R . string . circle_title )  ;  set Content View ( R . layout . circle_layout )  ;  view Flow =  (  View Flow )  find View By Id ( R . id . viewflow )  ;  view Flow . set Adapter ( new  Image Adapter ( this ) , 5 )  ;   Circle Flow Indicator indic =  (  Circle Flow Indicator )  find View By Id ( R . id . viewflowindic )  ;  view Flow . set Flow Indicator ( indic )  ; }"
2693,"public void snapshots ( UI Thread Set< Activity> live Activities,  Output Stream out )  throws IO Exception{ m Root View Finder . find In Activities ( live Activities )  ;  final  Future Task< List< Root View Info>> info Future = new  Future Task< List< Root View Info>> ( m Root View Finder )  ;  m Main Thread Handler . post ( info Future )  ;  final  Output Stream Writer writer = new  Output Stream Writer ( out )  ;   List< Root View Info> info List =  Collections . < Root View Info>empty List (  )  ;  writer . write ( "" [ "" )  ;  try {     info List = info Future . get ( 1,  Time Unit . SECONDS )  ;  } catch  ( final  Interrupted Exception e )  {     MP Log . d ( LOGTAG, "" Screenshot interrupted, no screenshot will be sent . "", e )  ;  } catch  ( final  Timeout Exception e )  {     MP Log . i ( LOGTAG, "" Screenshot took more than 1 second to be scheduled and executed .   No screenshot will be sent . "", e )  ;  } catch  ( final  Execution Exception e )  {     MP Log . e ( LOGTAG, "" Exception thrown during screenshot attempt"", e )  ;  } final int info Count = info List . size (  )  ;  for  ( int i = 0 ;  i < info Count ;  i++ )  {     if  ( i > 0 )  {         writer . write ( "","" )  ;      }     final  Root View Info info = info List . get ( i )  ;      writer . write ( ""{"" )  ;      writer . write ( ""\""activity\"":"" )  ;      writer . write ( JSON Object . quote ( info . activity Name )  )  ;      writer . write ( "","" )  ;      writer . write ( ""\""scale\"":"" )  ;      writer . write (  String . format ( ""%s"", info . scale )  )  ;      writer . write ( "","" )  ;      writer . write ( ""\""serialized_objects\"":"" )  ;      {         final  Json Writer j = new  Json Writer ( writer )  ;          j . begin Object (  )  ;          j . name ( ""root Object"" )  . value ( info . root View . hash Code (  )  )  ;          j . name ( ""objects"" )  ;          snapshot View Hierarchy ( j, info . root View )  ;          j . end Object (  )  ;          j . flush (  )  ;      }     writer . write ( "","" )  ;      writer . write ( ""\""screenshot\"":"" )  ;      writer . flush (  )  ;      info . screenshot . write Bitmap JSON (  Bitmap .  Compress Format . PNG, 100, out )  ;      writer . write ( ""}"" )  ;  } writer . write ( "" ] "" )  ;  writer . flush (  )  ; }"
2694,"private void reload Children (  ) { synchronized  ( m Children )  {     for  ( int i = 0, j = m Children . size (  )  ;  i < j ;  ++i )  m Children . get ( i )  . reload (  )  ;  }}"
2695,public boolean is Low Power Feature Supported (  ) { return low Power Feature Supported ; }
2696,"public com . anychart . core . annotations .  Trend Channel min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
2697,"public  Null On Recycle View Model_ on Visibility Changed (  On Model Visibility Changed Listener< Null On Recycle View Model_,  Null On Recycle View> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
2698,"public com . anychart . charts .  Venn stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2699,public  Horizontal Group pad ( float pad ) { pad Top = pad ;  pad Left = pad ;  pad Bottom = pad ;  pad Right = pad ;  return this ; }
2700,"public  Http Image Getter bind ( final  Text View view, final  String html, final  Object id ) { if  (  Text Utils . is Empty ( html )  )  {     return hide ( view )  ;  }  Char Sequence encoded = full Html Cache . get ( id )  ;  if  ( encoded != null )  {     return show ( view, encoded )  ;  } encoded = raw Html Cache . get ( id )  ;  if  ( encoded == null )  {     if  ( !html . matches ( ""< [ a-z ]  [ \\s\\S ] *>"" )  )  {          Request Markdown request Markdown =  Request Markdown . builder (  )  . text ( html )  . build (  )  ;           Service Generator . create Service ( context,  Markdown Service . class )  . render Markdown ( request Markdown )  . subscribe On (  Schedulers . io (  )  )  . observe On (  Android Schedulers . main Thread (  )  )  . subscribe (  data -> continue Bind ( view, data . body (  ) , id ) ,  e -> continue Bind ( view, html, id )  )  ;      } else {         return continue Bind ( view, html, id )  ;      } } return continue Bind ( view, html, id )  ; }"
2701,public void toggle ( final int position ) { long item Id = get Item Id ( position )  ;  boolean is Expanded = m Expanded Ids . contains ( item Id )  ;   View content Parent = get Content Parent ( position )  ;  if  ( content Parent != null )  {     toggle ( content Parent )  ;  } if  ( content Parent == null && is Expanded )  {     m Expanded Ids . remove ( item Id )  ;  } else if  ( content Parent == null )  {     m Expanded Ids . add ( item Id )  ;  }}
2702,"public static  Call<T> failure (  Throwable failure ) { return new  Fake Call<> ( null, failure )  ; }"
2703,"private boolean is Touch In Item (  Touch Rect move Rect, float x, float y ) { // 但是纵向由于外层上下拉控件还是会有影响，具体解决请看 Note Book Fragment类中的m Swipe Refresh Layout . set On Touch Listener方法 if  ( x < move Rect . right && x > move Rect . left && y < move Rect . bottom && y > move Rect . top )  {     return true ;  } else {     return false ;  }}"
2704,"public int index Of (  String sub String, int start ) { if  ( start < 0 )  {     start = 0 ;  } int sub Count = sub String . length (  )  ;  if  ( sub Count == 0 )      return start < length || start == 0 ? start : length ;  int max Index = length - sub Count ;  if  ( start > max Index )      return -1 ;  char first Char = sub String . char At ( 0 )  ;  while  ( true )  {     int i = start ;      boolean found = false ;      for  (  ;  i <= max Index ;  i++ )  {         if  ( chars [ i ]  == first Char )  {             found = true ;              break ;          }     }     if  ( !found )          return -1 ;      int o1 = i, o2 = 0 ;      while  ( ++o2 < sub Count && chars [ ++o1 ]  == sub String . char At ( o2 )  )  {     //  Intentionally empty     }     if  ( o2 == sub Count )          return i ;      start = i + 1 ;  }}"
2705,private void init_simple_card (  ) { // Create a  Card  Card card = new  Card ( get Activity (  )  )  ;  // Create a  Card Header  Card Header header = new  Card Header ( get Activity (  )  )  ;  // Set the header title header . set Title ( get String ( R . string . demo_header_basetitle )  )  ;  card . add Card Header ( header )  ;  // Set the card inner text card . set Title ( get String ( R . string . demo_card_basetitle )  )  ;  // Set card in the card View  Card View Native card View =  (  Card View Native )  get Activity (  )  . find View By Id ( R . id . carddemo_card_id )  ;  card View . set Card ( card )  ; }
2706,"public static void set Hardware (  String hardware ) {  Reflection Helpers . set Static Field (  Build . class, ""HARDWARE"", hardware )  ; }"
2707,"public static  Drekkar get (  Object subscriber,  String name,  Web View web View,  When Ready On Main when Ready ) {  Drekkar d =  Drekkar Factory . get ( name )  ;  d . add Bus ( subscriber, web View, when Ready, false )  ;  return d ; }"
2708,"public com . anychart . core . stock . indicators . B Bands bbands ( com . anychart . data .  Table Mapping mapping,  Number period,  Number deviation,  String middle Series Type, com . anychart . enums .  Stock Series Type upper Series Type,  String lower Series Type ) { return new com . anychart . core . stock . indicators . B Bands (  String . format (  Locale . US, js Base + "" . bbands ( %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, period, deviation, wrap Quotes ( middle Series Type ) ,  ( upper Series Type != null )  ? upper Series Type . get Js Base (  )  : null, wrap Quotes ( lower Series Type )  )  )  ; }"
2709,protected boolean connect (  ) { return true ; }
2710,"private void parse Control Message ( final  Control Message control Message ) { // Get the segment count count of the access message final int segment Count = message . get Network Layer Pdu (  )  . size (  )  ;  if  ( control Message . get Pdu Type (  )  ==  Mesh Manager Api . PDU_TYPE_NETWORK )  {     final  Transport Control Message transport Control Message = control Message . get Transport Control Message (  )  ;      if  ( transport Control Message . get State (  )  ==  Transport Control Message .  Transport Control Message State . LOWER_TRANSPORT_BLOCK_ACKNOWLEDGEMENT )  {          Log . v ( TAG, "" Acknowledgement payload: "" +  Mesh Parser Utils . bytes To Hex ( control Message . get Transport Control Pdu (  ) , false )  )  ;          final  Array List< Integer> retransmit Pdu Indexes =  Block Acknowledgement Message . get Segments To Be Retransmitted ( control Message . get Transport Control Pdu (  ) , segment Count )  ;          m Mesh Status Callbacks . on Block Acknowledgement Received ( control Message . get Src (  ) , control Message )  ;          execute Resend ( retransmit Pdu Indexes )  ;      } else {          Log . v ( TAG, "" Unexpected control message received, ignoring message"" )  ;          m Mesh Status Callbacks . on Unknown Pdu Received ( control Message . get Src (  ) , control Message . get Transport Control Pdu (  )  )  ;      } } else if  ( control Message . get Pdu Type (  )  ==  Mesh Manager Api . PDU_TYPE_PROXY_CONFIGURATION )  {     if  ( control Message . get Op Code (  )  ==  Proxy Config Message Op Codes . FILTER_STATUS )  {         final  Proxy Config Filter Status status = new  Proxy Config Filter Status ( control Message )  ;          final  Proxy Filter filter ;          if  ( m Mesh Message instanceof  Proxy Config Set Filter Type )  {             filter = new  Proxy Filter ( status . get Filter Type (  )  )  ;              m Internal Transport Callbacks . set Proxy Filter ( filter )  ;              m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( control Message . get Src (  ) , status )  ;          } else if  ( m Mesh Message instanceof  Proxy Config Add Address To Filter )  {             filter = update Proxy Filter ( m Internal Transport Callbacks . get Proxy Filter (  ) , status . get Filter Type (  )  )  ;              final  Proxy Config Add Address To Filter add Address To Filter =  (  Proxy Config Add Address To Filter )  m Mesh Message ;              for  (  Address Array address Array : add Address To Filter . get Addresses (  )  )  {                 filter . add Address ( address Array )  ;              }             m Internal Transport Callbacks . set Proxy Filter ( filter )  ;              m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( control Message . get Src (  ) , status )  ;          } else if  ( m Mesh Message instanceof  Proxy Config Remove Address From Filter )  {             filter = update Proxy Filter ( m Internal Transport Callbacks . get Proxy Filter (  ) , status . get Filter Type (  )  )  ;              final  Proxy Config Remove Address From Filter remove Address From Filter =  (  Proxy Config Remove Address From Filter )  m Mesh Message ;              for  (  Address Array address Array : remove Address From Filter . get Addresses (  )  )  {                 filter . remove Address ( address Array )  ;              }             m Internal Transport Callbacks . set Proxy Filter ( filter )  ;              m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( control Message . get Src (  ) , status )  ;          }     } }}"
2711,public  String get Sound Resource Name (  ) {  String sound = get String (  Message Notification Keys . SOUND_2 )  ;  if  (  Text Utils . is Empty ( sound )  )  {     sound = get String (  Message Notification Keys . SOUND )  ;  } return sound ; }
2712,"public com . anychart . core . stock . scrollerseries .  Hilo top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
2713,"public com . anychart . core . axismarkers .  Gantt Text padding (  Number value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
2714,public  Map With Proto Values Fluent Assertion<M> ignoring Repeated Field Order Of Fields For Values (  Iterable< Integer> field Numbers ) { return using Config ( config . ignoring Repeated Field Order Of Fields ( field Numbers )  )  ; }
2715,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
2716,"public void invoke Preview Callback ( byte [  ]  data ) { if  ( preview Callback != null )  {     preview Callback . on Preview Frame ( data, real Camera )  ;  }}"
2717,"public void start Scroll ( float start Value, float final Value ) { finished = false ;  start Rtc =  System Clock . elapsed Realtime (  )  ;  this . start Value = start Value ;  this . final Value = final Value ;  curr Value = start Value ; }"
2718,public boolean is Set ( _ Fields field ) { if  ( field == null )  {     throw new java . lang .  Illegal Argument Exception (  )  ;  } switch ( field )  {     case STORES_DELETED_FROM:         return is Set Stores Deleted From (  )  ;  } throw new java . lang .  Illegal State Exception (  )  ; }
2719,public  Incoming Message get Request (  ) { return request ; }
2720,public  Char Sequence get Content Description (  ) { final  Debug Layout Node layout = m Component . get Layout Node (  )  ;  return layout == null ? null : layout . get Content Description (  )  ; }
2721,public  Serializer Feature [  ]  get Features (  ) { return this . fast Json Config . get Serializer Features (  )  ; }
2722,"public  String read Null Terminated String (  ) { if  ( bytes Left (  )  == 0 )  {     return null ;  } int string Limit = position ;  while  ( string Limit < limit && data [ string Limit ]  != 0 )  {     string Limit++ ;  }  String string =  Util . from Utf8 Bytes ( data, position, string Limit - position )  ;  position = string Limit ;  if  ( position < limit )  {     position++ ;  } return string ; }"
2723,public static  Module Info Builder new Builder (  ) { return new  Module Info Builder (  )  ; }
2724,public  Ct Class get Type (  )  throws  Not Found Exception{  Const Pool cp = get Const Pool (  )  ;  int pos = current Pos ;  int index = iterator . u16bit At ( pos + 1 )  ;   String name = cp . get Class Info ( index )  ;  return this Class . get Class Pool (  )  . get Ct Class ( name )  ; }
2725,"public static  Metadata parse Udta (  Atom .  Leaf Atom udta Atom, boolean is Quick Time ) { if  ( is Quick Time )  {     // decode one .      return null ;  }  Parsable Byte Array udta Data = udta Atom . data ;  udta Data . set Position (  Atom . HEADER_SIZE )  ;  while  ( udta Data . bytes Left (  )  >=  Atom . HEADER_SIZE )  {     int atom Position = udta Data . get Position (  )  ;      int atom Size = udta Data . read Int (  )  ;      int atom Type = udta Data . read Int (  )  ;      if  ( atom Type ==  Atom . TYPE_meta )  {         udta Data . set Position ( atom Position )  ;          return parse Udta Meta ( udta Data, atom Position + atom Size )  ;      }     udta Data . set Position ( atom Position + atom Size )  ;  } return null ; }"
2726,public final int get Api Level (  ) { return api Level ; }
2727,public void set Polyline (  Polyline polyline ) { this . polyline = polyline ; }
2728,"public int get Forced Angle (  ) { if  ( use Image Metadata (  )  )  {     throw new  Illegal State Exception ( "" Rotation is set to use EXIF"" )  ;  } return m Rotation ; }"
2729,public  String get Id (  ) { return id ; }
2730,protected final int get Count (  ) {  Byte Array bytes = cf . get Bytes (  )  ;  return bytes . get Unsigned Short ( offset )  ; }
2731,"public static  Async Callable<T> as Async Callable ( final  Callable<T> callable, final  Listening Executor Service listening Executor Service ) { check Not Null ( callable )  ;  check Not Null ( listening Executor Service )  ;  return new  Async Callable<T> (  )  {     @ Override     public  Listenable Future<T> call (  )  throws  Exception {         return listening Executor Service . submit ( callable )  ;      } } ; }"
2732,"public com . anychart . core . cartesian . series .  Base With Markers bounds (  String x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
2733,"public  String format (  Object value,  String pattern ) { return format ( value, pattern,  (  Locale )  null )  ; }"
2734,synchronized void insure Nodes Parsed (  ) { if  ( // there is always a params Node params Node != null )      return ;   Object first Node = jjt Get Child ( 0 )  ;  first Throws Clause = 1 ;  if  ( first Node instanceof BSH Return Type )  {     return Type Node =  ( BSH Return Type )  first Node ;      params Node =  ( BSH Formal Parameters )  jjt Get Child ( 1 )  ;      if  ( jjt Get Num Children (  )  > 2 + num Throws )          // skip throws         block Node =  ( BSH Block )  jjt Get Child ( 2 + num Throws )  ;      ++first Throws Clause ;  } else {     params Node =  ( BSH Formal Parameters )  jjt Get Child ( 0 )  ;      // skip throws     block Node =  ( BSH Block )  jjt Get Child ( 1 + num Throws )  ;  }}
2735,public  Set< Managed Object> get Updated Objects (  ) { return  Collections . unmodifiable Set ( changed Objects . get Updated Objects (  )  )  ; }
2736,"public com . anychart . core . annotations .  Infinite Line right (  Number right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", right )  )  ;  return this ; }"
2737,private int get Length (  ) { // the size of all the table directory entries int length = 12 +  ( get Num Tables (  )  * 16 )  ;  // and don't forget the padding! for  (  Iterator i = tables . values (  )  . iterator (  )  ;  i . has Next (  )  ;   )  {      Object table Obj = i . next (  )  ;      // add the length of the entry     if  ( table Obj instanceof  True Type Table )  {         length +=  (  (  True Type Table )  table Obj )  . get Length (  )  ;      } else {         length +=  (  (  Byte Buffer )  table Obj )  . remaining (  )  ;      }     // pad     if  (  ( length % 4 )  != 0 )  {         length +=  ( 4 -  ( length % 4 )  )  ;      } } return length ; }
2738,"protected void retry (  Base Download Task task,  Throwable ex, int retrying Times, int so Far Bytes ) {}"
2739,"public com . anychart . charts .  Cartesian3d tooltip (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . tooltip ( %s )  ; "", settings )  )  ;  return this ; }"
2740,public boolean swipe Back Priority (  ) { return super . swipe Back Priority (  )  ; }
2741,"public static void drop Table (  Database db, boolean if Exists ) {  String sql = ""DROP TABLE "" +  ( if Exists ? ""IF EXISTS "" : """" )  + ""\""THREAD\"""" ;  db . exec SQL ( sql )  ; }"
2742,"void load Strings (  )  throws IO Exception{ int count = m Header Item . string Ids Size ;  int [  ]  string Offsets = new int [ count ]  ;  // System . out . println ( ""reading "" + count + "" strings"" )  ;  seek ( m Header Item . string Ids Off )  ;  for  ( int i = 0 ;  i < count ;  i++ )  {     string Offsets [ i ]  = read Int (  )  ;  } m Strings = new  String [ count ]  ;  seek ( string Offsets [ 0 ]  )  ;  for  ( int i = 0 ;  i < count ;  i++ )  {     // should be a no-op     seek ( string Offsets [ i ]  )  ;      m Strings [ i ]  = read String (  )  ;  // System . out . println ( ""STR: "" + i + "": "" + m Strings [ i ]  )  ;  }}"
2743,public void set Zoom ( boolean zoom ) { matrix Helper . set Can Zoom ( zoom )  ;  invalidate (  )  ; }
2744,"public void draw In Foreground (  Canvas canvas ) {  Axis axis = chart . get Chart Data (  )  . get Axis Y Left (  )  ;  if  ( null != axis )  {     draw Axis Labels And Name ( canvas, axis, LEFT )  ;  } axis = chart . get Chart Data (  )  . get Axis Y Right (  )  ;  if  ( null != axis )  {     draw Axis Labels And Name ( canvas, axis, RIGHT )  ;  } axis = chart . get Chart Data (  )  . get Axis X Bottom (  )  ;  if  ( null != axis )  {     draw Axis Labels And Name ( canvas, axis, BOTTOM )  ;  } axis = chart . get Chart Data (  )  . get Axis X Top (  )  ;  if  ( null != axis )  {     draw Axis Labels And Name ( canvas, axis, TOP )  ;  }}"
2745,public short get X Coord ( int point Index ) { return x Coords [ point Index ]  ; }
2746,public  Single< Model> upsert As Single ( @ Non Null final  Model model ) { return  Single . from Callable ( new  Model Factory< Model> (  )  {     @ Non Null     @ Override     public  Model call (  )  {         return upsert ( model )  ;      } } )  ; }
2747,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_INVOLVED_PEOPLE ; }
2748,public void set Blocks Touches ( boolean block Touches ) { this . block Touches = block Touches ; }
2749,"public com . anychart . charts .  Tree Map max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
2750,protected int place ( int item ) { return  ( int )   ( item * 0x9 E3779 B97 F4 A7 C15 L >>> shift )  ; }
2751,"public  Type Element get Generic Type (  Type Mirror type Mirror ) { return type Mirror . accept ( new  Simple Type Visitor6< Type Element,  Void> (  )  {     @ Override     public  Type Element visit Declared (  Declared Type declared Type,  Void v )  {          Type Element generic Type Element = null ;           Type Element type Element =  (  Type Element )  declared Type . as Element (  )  ;          if  ( parcel Class != null && type Utils . is Assignable ( type Element . as Type (  ) , list Type Mirror )  )  {              List<? extends  Type Mirror> type Arguments = declared Type . get Type Arguments (  )  ;              if  ( !type Arguments . is Empty (  )  )  {                 for  (  Type Mirror generic Type : type Arguments )  {                     if  ( generic Type instanceof  Wildcard Type )  {                          Wildcard Type wildcard Type =  (  Wildcard Type )  generic Type ;                           Type Mirror extends Type = wildcard Type . get Extends Bound (  )  ;                          if  ( extends Type != null )  {                             type Element = element Utils . get Type Element ( extends Type . to String (  )  )  ;                              if  ( type Element . get Annotation ( parcel Class )  != null )  {                                 generic Type Element = type Element ;                                  break ;                              }                         }                     } else {                         type Element = element Utils . get Type Element ( generic Type . to String (  )  )  ;                          if  ( type Element . get Annotation ( parcel Class )  != null )  {                             generic Type Element = type Element ;                              break ;                          }                     }                 }             }         }         return generic Type Element ;      } }, null )  ; }"
2752,public void set MVP Matrix (  Matrix4 mvp Matrix ) { m Vertex Shader . set MVP Matrix ( mvp Matrix . get Float Values (  )  )  ; }
2753,public  Builder set Cas Client Info ( com . facebook . buck . remoteexecution . proto .  Cas Client Info .  Builder builder For Value ) { if  ( cas Client Info Builder_ == null )  {     cas Client Info_ = builder For Value . build (  )  ;      on Changed (  )  ;  } else {     cas Client Info Builder_ . set Message ( builder For Value . build (  )  )  ;  } return this ; }
2754,public  Object get Tag (  ) { return m Tag ; }
2755,"public static void register (  String from,  String to ) {  Layout Inflater . s Remaps . put ( from, to )  ; }"
2756,void animate Value ( float fraction ) { fraction = m Interpolator . get Interpolation ( fraction )  ;  m Current Fraction = fraction ;  int num Values = m Values . length ;  for  ( int i = 0 ;  i < num Values ;  ++i )  {     m Values [ i ]  . calculate Value ( fraction )  ;  } if  ( m Update Listeners != null )  {     int num Listeners = m Update Listeners . size (  )  ;      for  ( int i = 0 ;  i < num Listeners ;  ++i )  {         m Update Listeners . get ( i )  . on Animation Update ( this )  ;      } }}
2757,"public boolean is Preference Set (  String preference ) {  Application application =  (  Application )  firebase App . get Application Context (  )  ;   Shared Preferences preferences = application . get Shared Preferences ( PREFERENCES_PACKAGE_NAME,  Context . MODE_PRIVATE )  ;  return preferences . contains ( preference )  ; }"
2758,public static final  String cyclical ( int y ) { int num = y - 1900 + 36 ;  return  ( cyclicalm ( num )  )  ; }
2759,public  String http Get String (  String url ) {  Http Response cache Response = http Get ( new  Http Request ( url )  )  ;  return cache Response == null ? null : cache Response . get Response Body (  )  ; }
2760,"public boolean contains Value ( float value, float epsilon ) { if  ( has Zero Value &&  Math . abs ( zero Value - value )  <= epsilon )      return true ;  int [  ]  key Table = this . key Table ;  float [  ]  value Table = this . value Table ;  for  ( int i = value Table . length - 1 ;  i >= 0 ;  i-- )  if  ( key Table [ i ]  != 0 &&  Math . abs ( value Table [ i ]  - value )  <= epsilon )      return true ;  return false ; }"
2761,public  Builder extra For Downloader (  Object extra ) { this . extra For Downloader = extra ;  return this ; }
2762,"public final void has Size ( int expected Size ) { check Argument ( expected Size >= 0, ""expected Size ( %s )  must be >= 0"", expected Size )  ;  check ( ""size (  ) "" )  . that ( actual . size (  )  )  . is Equal To ( expected Size )  ; }"
2763,"public void test6 (  )  throws  Exception{ mock Mvc . perform (  ( post ( ""/fastjsonview/test6"" )  . character Encoding ( ""UTF-8"" )  . content Type (  Media Type . APPLICATION_JSON )  )  )  . and Expect ( status (  )  . is Ok (  )  )  . and Do ( print (  )  )  . and Expect ( content (  )  . string ( ""{\""id\"":100}"" )  )  ; }"
2764,private static boolean is Fast Mobile Network (  Context context ) {  Telephony Manager telephony Manager =  (  Telephony Manager )  context . get System Service (  Context . TELEPHONY_SERVICE )  ;  if  ( telephony Manager == null )  {     return false ;  } switch ( telephony Manager . get Network Type (  )  )  {     case  Telephony Manager . NETWORK_TYPE_1x RTT:         return false ;      case  Telephony Manager . NETWORK_TYPE_CDMA:         return false ;      case  Telephony Manager . NETWORK_TYPE_EDGE:         return false ;      case  Telephony Manager . NETWORK_TYPE_EVDO_0:         return true ;      case  Telephony Manager . NETWORK_TYPE_EVDO_A:         return true ;      case  Telephony Manager . NETWORK_TYPE_GPRS:         return false ;      case  Telephony Manager . NETWORK_TYPE_HSDPA:         return true ;      case  Telephony Manager . NETWORK_TYPE_HSPA:         return true ;      case  Telephony Manager . NETWORK_TYPE_HSUPA:         return true ;      case  Telephony Manager . NETWORK_TYPE_UMTS:         return true ;      case  Telephony Manager . NETWORK_TYPE_EHRPD:         return true ;      case  Telephony Manager . NETWORK_TYPE_EVDO_B:         return true ;      case  Telephony Manager . NETWORK_TYPE_HSPAP:         return true ;      case  Telephony Manager . NETWORK_TYPE_IDEN:         return false ;      case  Telephony Manager . NETWORK_TYPE_LTE:         return true ;      case  Telephony Manager . NETWORK_TYPE_UNKNOWN:         return false ;      default:         return false ;  }}
2765,"private  Address http Address (  ) { return new  Address ( uri Host, uri Port, dns, socket Factory, null, null, null, authenticator, null, protocols, connection Specs, proxy Selector )  ; }"
2766,"public com . anychart . charts .  Cartesian3d background (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2767,"public  Statement apply (  Statement base,  Description description ) { return statement ( base )  ; }"
2768,"public com . anychart . core . axismarkers .  Current Price Indicator falling Label (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Label ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
2769,protected  Spice Service Listener Notifier create Spice Service Listener Notifier (  ) { return new  Spice Service Listener Notifier (  )  ; }
2770,public static  Fresco Vito Image Decode Options defaults (  ) { return DEFAULTS ; }
2771,public  Date Picker Builder set Fragment Manager (  Fragment Manager manager ) { this . manager = manager ;  return this ; }
2772,static  Besu build (  Web3j Service web3j Service ) { return new  Json Rpc2_0 Besu ( web3j Service )  ; }
2773,"protected void init (  Attribute Set attrs, int def Style ) { // Init attrs init Attrs ( attrs, def Style )  ;  // Init  View if  ( !is In Edit Mode (  )  )      init View (  )  ; }"
2774,"public  Builder add Request Transformer ( @ Non Null  Request Transformer transformer ) { check Not Null ( transformer, ""transformer == null"" )  ;  request Transformers . add ( transformer )  ;  return this ; }"
2775,public void for All Nodes (  Consumer< Merkle Tree Node> node Consumer ) { node Consumer . accept ( this )  ;  children . values (  )  . for Each (  child -> child . for All Nodes ( node Consumer )  )  ; }
2776,public long obj Count (  ) { return obj Cnt ; }
2777,"public int remove Track ( final long id ) { int numremoved = 0 ;  synchronized  ( this )  {     for  ( int i = 0 ;  i < m Playlist . size (  )  ;  i++ )  {         if  ( m Playlist . get ( i )  . m Id == id )  {             numremoved += remove Tracks Internal ( i, i )  ;              i-- ;          }     } } if  ( numremoved > 0 )  {     notify Change ( QUEUE_CHANGED )  ;  } return numremoved ; }"
2778,"public void bar Groups Padding (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . bar Groups Padding (  )  ; "" )  ; }"
2779,"public void use Html (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . use Html (  )  ; "" )  ; }"
2780,"public boolean test Point ( float x, float y ) { return jni Test Point ( addr, x, y )  ; }"
2781,public void set Title (  String title ) { tv_title . set Text ( title )  ; }
2782,public void set Title Optional Hint ( boolean title Optional ) { m Title Optional Hint = title Optional ; }
2783,public  Plot Commit List get Commit List (  ) { return all Commits ; }
2784,"protected  Abstract ID3v2 Frame Body read Body (  String identifier,  Abstract ID3v2 Frame Body body )  throws  Invalid Frame Exception{ /*  Use reflection to map id to frame body, which makes things much easier      * to keep things up to date, although slight performance hit .       */  Abstract ID3v2 Frame Body frame Body ;  try {      Class< Abstract ID3v2 Frame Body> c =  (  Class< Abstract ID3v2 Frame Body> )   Class . for Name ( ""org . jaudiotagger . tag . id3 . framebody .  Frame Body"" + identifier )  ;       Class<?> [  ]  constructor Parameter Types = { body . get Class (  )  } ;       Object [  ]  constructor Parameter Values = { body } ;       Constructor< Abstract ID3v2 Frame Body> construct = c . get Constructor ( constructor Parameter Types )  ;      frame Body =  ( construct . new Instance ( constructor Parameter Values )  )  ;  } catch  (  Class Not Found Exception cex )  {     logger . config ( "" Identifier not recognised:"" + identifier + "" unable to create framebody"" )  ;      throw new  Invalid Frame Exception ( "" Frame Body"" + identifier + "" does not exist"" )  ;  }// If suitable constructor does not exist  catch  (  No Such Method Exception sme )  {     logger . log (  Level . SEVERE, "" No such method:"" + sme . get Message (  ) , sme )  ;      throw new  Invalid Frame Exception ( "" Frame Body"" + identifier + "" does not have a constructor that takes:"" + body . get Class (  )  . get Name (  )  )  ;  } catch  (  Invocation Target Exception ite )  {     logger . severe ( "" An error occurred within abstract ID3v2 Frame Body"" )  ;      logger . log (  Level . SEVERE, "" Invocation target exception:"" + ite . get Cause (  )  . get Message (  ) , ite . get Cause (  )  )  ;      if  ( ite . get Cause (  )  instanceof  Error )  {         throw  (  Error )  ite . get Cause (  )  ;      } else if  ( ite . get Cause (  )  instanceof  Runtime Exception )  {         throw  (  Runtime Exception )  ite . get Cause (  )  ;      } else {         throw new  Invalid Frame Exception ( ite . get Cause (  )  . get Message (  )  )  ;      } }// Instantiate  Interface/ Abstract should not happen  catch  (  Instantiation Exception ie )  {     logger . log (  Level . SEVERE, "" Instantiation exception:"" + ie . get Message (  ) , ie )  ;      throw new  Runtime Exception ( ie . get Message (  )  )  ;  }// Private  Constructor shouild not happen  catch  (  Illegal Access Exception iae )  {     logger . log (  Level . SEVERE, "" Illegal access exception :"" + iae . get Message (  ) , iae )  ;      throw new  Runtime Exception ( iae . get Message (  )  )  ;  } logger . finer ( ""frame  Body created"" + frame Body . get Identifier (  )  )  ;  frame Body . set Header ( this )  ;  return frame Body ; }"
2785,"public static int get Int ( @ Non Null final  String key, @ Non Null final SP Utils sp Utils ) { return sp Utils . get Int ( key )  ; }"
2786,"public com . anychart . core . cartesian . series .  Range Bar min Point Length (  Number length ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Point Length ( %s )  ; "", length )  )  ;  return this ; }"
2787,"public static int glu Un Project ( double win X, double win Y, double win Z, double [  ]  model, int model Offset, double [  ]  project, int project Offset, int [  ]  view, int view Offset, double [  ]  obj, int obj Offset ) { double [  ]  scratch = s Scratch ;  synchronized  ( scratch )  {     // 0 .  . 15     final int PM_OFFSET = 0 ;      // 16 .  . 31     final int INVPM_OFFSET = 16 ;      // 0 .  . 3  Reuses PM_OFFSET space     final int V_OFFSET = 0 ;       Matrix . multiply MM ( scratch, PM_OFFSET, project, project Offset, model, model Offset )  ;      if  ( ! Matrix . invert M ( scratch, INVPM_OFFSET, scratch, PM_OFFSET )  )  {         return GL10 . GL_FALSE ;      }     scratch [ V_OFFSET + 0 ]  = 2 . 0 *  ( win X - view [ view Offset + 0 ]  )  / view [ view Offset + 2 ]  - 1 . 0 ;      scratch [ V_OFFSET + 1 ]  = 2 . 0 *  ( win Y - view [ view Offset + 1 ]  )  / view [ view Offset + 3 ]  - 1 . 0 ;      scratch [ V_OFFSET + 2 ]  = 2 . 0 * win Z - 1 . 0 ;      scratch [ V_OFFSET + 3 ]  = 1 . 0 ;       Matrix . multiply MV ( obj, obj Offset, scratch, INVPM_OFFSET, scratch, V_OFFSET )  ;  } return GL10 . GL_TRUE ; }"
2788,"public static  Multimap<K, V> filter Keys (  Multimap<K, V> unfiltered, final  Predicate<? super K> key Predicate ) { if  ( unfiltered instanceof  Set Multimap )  {     return filter Keys (  (  Set Multimap<K, V> )  unfiltered, key Predicate )  ;  } else if  ( unfiltered instanceof  List Multimap )  {     return filter Keys (  (  List Multimap<K, V> )  unfiltered, key Predicate )  ;  } else if  ( unfiltered instanceof  Filtered Key Multimap )  {      Filtered Key Multimap<K, V> prev =  (  Filtered Key Multimap<K, V> )  unfiltered ;      return new  Filtered Key Multimap<> ( prev . unfiltered,  Predicates . <K>and ( prev . key Predicate, key Predicate )  )  ;  } else if  ( unfiltered instanceof  Filtered Multimap )  {      Filtered Multimap<K, V> prev =  (  Filtered Multimap<K, V> )  unfiltered ;      return filter Filtered ( prev,  Maps . <K>key Predicate On Entries ( key Predicate )  )  ;  } else {     return new  Filtered Key Multimap<> ( unfiltered, key Predicate )  ;  }}"
2789,public  List< String> get Output File List Paths (  ) { return output File List Paths ; }
2790,"public long scale Duration For Speedup ( long duration ) { if  ( output Bytes >= MIN_BYTES_FOR_SPEEDUP_CALCULATION )  {     return output Sample Rate Hz == sample Rate Hz ?  Util . scale Large Timestamp ( duration, input Bytes, output Bytes )  :  Util . scale Large Timestamp ( duration, input Bytes * output Sample Rate Hz, output Bytes * sample Rate Hz )  ;  } else {     return  ( long )   (  ( double )  speed * duration )  ;  }}"
2791,"public void open (  ) { camera =  Open Camera Interface . open ( settings . get Requested Camera Id (  )  )  ;  if  ( camera == null )  {     throw new  Runtime Exception ( "" Failed to open camera"" )  ;  } int camera Id =  Open Camera Interface . get Camera Id ( settings . get Requested Camera Id (  )  )  ;  camera Info = new  Camera .  Camera Info (  )  ;   Camera . get Camera Info ( camera Id, camera Info )  ; }"
2792,"public void save As Xlsx ( com . anychart . enums .  Chart Data Export Mode chart Data Export Mode,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Xlsx ( %s, %s )  ; "",  ( chart Data Export Mode != null )  ? chart Data Export Mode . get Js Base (  )  : null, wrap Quotes ( filename )  )  )  ; }"
2793,public boolean get Should Hide Webview Share Button (  ) { return this . should Hide Webview Share Button ; }
2794,"public com . anychart . charts .  Sparkline select Marquee Fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
2795,"String get Locked String ( @ String Res int game Name Id ) {  String game Name = m Context . get Resources (  )  . get String ( game Name Id )  ;  return m Context . get Resources (  )  . get String ( R . string . generic_game_locked, game Name )  ; }"
2796,"public void invalidate ( @ Non Null  File file ) { check Not Null ( file, ""file == null"" )  ;  invalidate (  Uri . from File ( file )  )  ; }"
2797,"public static void skip To Data (  Extractor Input input,  Wav Header wav Header )  throws IO Exception,  Interrupted Exception{  Assertions . check Not Null ( input )  ;   Assertions . check Not Null ( wav Header )  ;  //  Make sure the peek position is set to the read position before we peek the first header .  input . reset Peek Position (  )  ;   Parsable Byte Array scratch = new  Parsable Byte Array (  Chunk Header . SIZE_IN_BYTES )  ;  //  Skip all chunks until we hit the data header .   Chunk Header chunk Header =  Chunk Header . peek ( input, scratch )  ;  while  ( chunk Header . id !=  Util . get Integer Code For String ( ""data"" )  )  {      Log . w ( TAG, "" Ignoring unknown WAV chunk: "" + chunk Header . id )  ;      long bytes To Skip =  Chunk Header . SIZE_IN_BYTES + chunk Header . size ;      //  Override size of RIFF chunk, since it describes its size as the entire file .      if  ( chunk Header . id ==  Util . get Integer Code For String ( ""RIFF"" )  )  {         bytes To Skip =  Chunk Header . SIZE_IN_BYTES + 4 ;      }     if  ( bytes To Skip >  Integer . MAX_VALUE )  {         throw new  Parser Exception ( "" Chunk is too large  ( ~2 GB+ )  to skip ;  id: "" + chunk Header . id )  ;      }     input . skip Fully (  ( int )  bytes To Skip )  ;      chunk Header =  Chunk Header . peek ( input, scratch )  ;  } //  Skip past the ""data"" header .  input . skip Fully (  Chunk Header . SIZE_IN_BYTES )  ;  wav Header . set Data Bounds ( input . get Position (  ) , chunk Header . size )  ; }"
2798,public  Big Integer get As Big Integer (  ) { if  ( elements . size (  )  == 1 )  {     return elements . get ( 0 )  . get As Big Integer (  )  ;  } throw new  Illegal State Exception (  )  ; }
2799,"public final void get Pan Remaining (  Rect F v Target ) { if  ( !is Ready (  )  )  {     return ;  } float scale Width = scale * s Width (  )  ;  float scale Height = scale * s Height (  )  ;  if  ( pan Limit == PAN_LIMIT_CENTER )  {     v Target . top =  Math . max ( 0, - ( v Translate . y -  ( get Height (  )  / 2 )  )  )  ;      v Target . left =  Math . max ( 0, - ( v Translate . x -  ( get Width (  )  / 2 )  )  )  ;      v Target . bottom =  Math . max ( 0, v Translate . y -  (  ( get Height (  )  / 2 )  - scale Height )  )  ;      v Target . right =  Math . max ( 0, v Translate . x -  (  ( get Width (  )  / 2 )  - scale Width )  )  ;  } else if  ( pan Limit == PAN_LIMIT_OUTSIDE )  {     v Target . top =  Math . max ( 0, - ( v Translate . y - get Height (  )  )  )  ;      v Target . left =  Math . max ( 0, - ( v Translate . x - get Width (  )  )  )  ;      v Target . bottom =  Math . max ( 0, v Translate . y + scale Height )  ;      v Target . right =  Math . max ( 0, v Translate . x + scale Width )  ;  } else {     v Target . top =  Math . max ( 0, -v Translate . y )  ;      v Target . left =  Math . max ( 0, -v Translate . x )  ;      v Target . bottom =  Math . max ( 0,  ( scale Height + v Translate . y )  - get Height (  )  )  ;      v Target . right =  Math . max ( 0,  ( scale Width + v Translate . x )  - get Width (  )  )  ;  }}"
2800,"public static  String copy Stream To String (  Input Stream input, int estimated Size, @ Null  String charset )  throws IO Exception{  Input Stream Reader reader = charset == null ? new  Input Stream Reader ( input )  : new  Input Stream Reader ( input, charset )  ;   String Writer writer = new  String Writer (  Math . max ( 0, estimated Size )  )  ;  char [  ]  buffer = new char [ DEFAULT_BUFFER_SIZE ]  ;  int chars Read ;  while  (  ( chars Read = reader . read ( buffer )  )  != -1 )  {     writer . write ( buffer, 0, chars Read )  ;  } return writer . to String (  )  ; }"
2801,"public  Member Resolver .  Method at Method Call Core (  Ct Class target Class,  String mname, AST List args )  throws  Compile Error{ int nargs = get Method Args Length ( args )  ;  int [  ]  types = new int [ nargs ]  ;  int [  ]  dims = new int [ nargs ]  ;   String [  ]  cnames = new  String [ nargs ]  ;  at Method Args ( args, types, dims, cnames )  ;   Member Resolver .  Method found = resolver . lookup Method ( target Class, this Class, this Method, mname, types, dims, cnames )  ;  if  ( found == null )  {      String clazz = target Class . get Name (  )  ;       String signature = arg Types To String ( types, dims, cnames )  ;       String msg ;      if  ( mname . equals (  Method Info . name Init )  )          msg = ""cannot find constructor "" + clazz + signature ;      else         msg = mname + signature + "" not found in "" + clazz ;      throw new  Compile Error ( msg )  ;  }  String desc = found . info . get Descriptor (  )  ;  set Return Type ( desc )  ;  return found ; }"
2802,protected void set C0 ( float [  ]  c0 ) { this . c0 = c0 ; }
2803,public void set Component Tree ( final  Component Tree component Tree ) { final  Instrumentation instrumentation =  Instrumentation Registry . get Instrumentation (  )  ;  instrumentation . run On Main Sync ( new  Runnable (  )  {     @ Override     public void run (  )  {         get Activity (  )  . set Component Tree ( component Tree )  ;      } } )  ;  instrumentation . wait For Idle Sync (  )  ; }
2804,"public com . anychart . core . cartesian . series .  Line3d y Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
2805,"public synchronized  Countly show Feedback Popup ( final  String widget Id, final  String close Button Text, final  Activity activity, final  Countly Star Rating .  Feedback Rating Callback feedback Callback ) { if  ( !is Initialized (  )  )  {     L . e ( "" Countly . shared Instance (  )  . init must be called before show Feedback Popup"" )  ;      return this ;  } if  ( feedback Callback == null )  {     ratings (  )  . show Feedback Popup ( widget Id, close Button Text, activity, null )  ;  } else {     ratings (  )  . show Feedback Popup ( widget Id, close Button Text, activity, new  Feedback Rating Callback (  )  {         @ Override         public void callback (  String error )  {             feedback Callback . callback ( error )  ;          }     } )  ;  } return this ; }"
2806,public  Builder clear (  ) { // fill up entry Memory .   Otherwise we drop view state on the floor .  while  ( !is Empty (  )  )  {     pop (  )  ;  } return this ; }
2807,"public com . anychart . core . annotations .  Fibonacci Fan left (  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", wrap Quotes ( left )  )  )  ;  return this ; }"
2808,public void set Rotation ( float rotation ) { set Marker Rotation ( rotation )  ;  style Changed (  )  ; }
2809,public  Skeletal Animation Sequence get Animation Sequence (  ) { return m Sequence ; }
2810,"public boolean if Should Ignore Crawlers (  ) { if  ( !is Initialized (  )  )  {     L . e ( ""init must be called before if Should Ignore Crawlers"" )  ;      return false ;  } return should Ignore Crawlers ; }"
2811,public void set GL Renderer ( GSY Video GL View Base Render renderer ) { if  ( m Show View != null )      m Show View . set GL Renderer ( renderer )  ; }
2812,"public com . anychart . core . ui . scroller .  Thumbs fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
2813,private void maybe Remove Frame Callback (  ) {  Assertions . assert Condition ( m Total Callbacks >= 0 )  ;  if  ( m Total Callbacks == 0 && m Has Posted Callback )  {     if  ( m Choreographer != null )  {         m Choreographer . remove Frame Callback ( m React Choreographer Dispatcher )  ;      }     m Has Posted Callback = false ;  }}
2814,Set< String> get Client Capabilities (  ) { return client Capabilities ; }
2815,"public void set Content ( long time Us,  Subtitle subtitle, long subsample Offset Us ) { this . time Us = time Us ;  this . subtitle = subtitle ;  this . subsample Offset Us = subsample Offset Us ==  Format . OFFSET_SAMPLE_RELATIVE ? this . time Us : subsample Offset Us ; }"
2816,"public com . anychart . charts .  Linear Gauge bounds (  Number x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, height )  )  ;  return this ; }"
2817,public boolean allows Touch Interception While Zoomed (  ) { return m Allow Touch Interception While Zoomed ; }
2818,private void reset Dict (  ) { dictlen = 258 ;  bitspercode = 9 ; }
2819,public  Rel Path relativize (  Path path ) { return project Root . relativize ( path )  ; }
2820,public  Proto Fluent Assertion ignoring Field Absence (  ) { return using Config ( config . ignoring Field Absence (  )  )  ; }
2821,public void add To Sprite Group (  Base Sub sprite ) { l_sprite_group . add ( sprite )  ; }
2822,"public com . anychart . core . cartesian . series .  Range Bar hatch Fill ( com . anychart . graphics . vector . hatchfill .  Hatch Fill Type type,  String color,  Number thickness,  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s, %s, %s, %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null, wrap Quotes ( color ) , thickness, size )  )  ;  return this ; }"
2823,public  Picasso get Picasso (  ) { return m Picasso ; }
2824,"public  String relativize (  String base,  String other ) { return  File Utils . relativize Path ( base, other,  File . separator, this . is Case Sensitive (  )  )  ; }"
2825,"public float get Highest Visible X (  ) { get Transformer (  Axis Dependency . LEFT )  . get Values By Touch Point ( m View Port Handler . content Right (  ) , m View Port Handler . content Bottom (  ) , pos For Get Highest Visible X )  ;  float result =  ( float )   Math . min ( m X Axis . m Axis Maximum, pos For Get Highest Visible X . x )  ;  return result ; }"
2826,"private  Persisted Installation Entry register Fid With Server (  Persisted Installation Entry prefs )  throws  Firebase Installations Exception{ //  Note:  Default value of instance Id Migration Auth: null  String iid Token = null ;  if  ( prefs . get Firebase Installation Id (  )  != null && prefs . get Firebase Installation Id (  )  . length (  )  == 11 )  {     //  For a default firebase installation, read the stored star scoped iid token .   This token     // will be used for authenticating  Instance-ID when migrating to FIS .      iid Token = iid Store . read Token (  )  ;  }  Installation Response response = service Client . create Firebase Installation ( /*api Key= */ get Api Key (  ) , /*fid= */ prefs . get Firebase Installation Id (  ) , /*project ID= */ get Project Identifier (  ) , /*app Id= */ get Application Id (  ) , /* migration-header= */ iid Token )  ;  switch ( response . get Response Code (  )  )  {     case OK:         return prefs . with Registered Fid ( response . get Fid (  ) , response . get Refresh Token (  ) , utils . current Time In Secs (  ) , response . get Auth Token (  )  . get Token (  ) , response . get Auth Token (  )  . get Token Expiration Timestamp (  )  )  ;      case BAD_CONFIG:         return prefs . with Fis Error ( ""BAD CONFIG"" )  ;      default:         throw new  Firebase Installations Exception ( "" Firebase  Installations  Service is unavailable .   Please try again later . "",  Status . UNAVAILABLE )  ;  }}"
2827,"public void stop (  ) { stopped = true ;  focusing = false ;  cancel Outstanding Task (  )  ;  if  ( use Auto Focus )  {     //  Doesn't hurt to call this even if not focusing     try {         camera . cancel Auto Focus (  )  ;      } catch  (  Runtime Exception re )  {         //  Have heard  Runtime Exception reported in  Android 4 . 0 . x+ ;  continue?          Log . w ( TAG, "" Unexpected exception while cancelling focusing"", re )  ;      } }}"
2828,"private static void check Unmodifiable Multimap (  Multimap< String,  Integer> multimap, boolean permits Duplicates, @ Nullable  String null Key, @ Nullable  Integer null Value ) {  Multimap< String,  Integer> unmodifiable = prepare Unmodifiable Tests ( multimap, permits Duplicates, null Key, null Value )  ;   Unmodifiable Collection Tests . assert Multimap Is Unmodifiable ( unmodifiable, ""test"", 123 )  ;  assert Unmodifiable Iterable In Tandem ( unmodifiable . keys (  ) , multimap . keys (  )  )  ;  assert Unmodifiable Iterable In Tandem ( unmodifiable . key Set (  ) , multimap . key Set (  )  )  ;  assert Unmodifiable Iterable In Tandem ( unmodifiable . entries (  ) , multimap . entries (  )  )  ;  assert Unmodifiable Iterable In Tandem ( unmodifiable . as Map (  )  . entry Set (  ) , multimap . as Map (  )  . entry Set (  )  )  ;  assert Equals ( multimap . to String (  ) , unmodifiable . to String (  )  )  ;  assert Equals ( multimap . hash Code (  ) , unmodifiable . hash Code (  )  )  ;  assert Equals ( multimap, unmodifiable )  ;  assert That ( unmodifiable . as Map (  )  . get ( ""bar"" )  )  . contains Exactly ( 5, -1 )  ;  assert Null ( unmodifiable . as Map (  )  . get ( ""missing"" )  )  ;  assert False ( unmodifiable . entries (  )  instanceof  Serializable )  ; }"
2829,public long get Not Advertised Wants (  ) { return statistics . not Advertised Wants ; }
2830,"public  Immersion Bar auto Dark Mode Enable ( boolean is Enable ) { return this . auto Dark Mode Enable ( is Enable, 0 . 2f )  ; }"
2831,protected static  Die die (  String why ) { return new  Die ( why )  ; }
2832,public boolean register Animations ( final  Collection< Animation> anims ) { final A Frame Task task = new A Frame Task (  )  {     @ Override     protected void do Task (  )  {         m Animations . add All ( anims )  ;      } } ;  return internal Offer Task ( task )  ; }
2833,"public com . anychart . core . stock . scrollerseries .  Jump Line bounds (  String x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
2834,"public com . anychart . charts .  Linear Gauge select Marquee Fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
2835,public void setin Restricted Input Mode ( boolean restricted ) { in Restricted Input Mode = restricted ; }
2836,"public final void put All (  Table<? extends R, ? extends C, ? extends V> table ) { throw new  Unsupported Operation Exception (  )  ; }"
2837,"public com . anychart . core . utils .  Series A11y a11y (  ) { return new com . anychart . core . utils .  Series A11y ( js Base + "" . a11y (  ) "" )  ; }"
2838,public int get Major Version (  ) { return major Version ; }
2839,"public com . anychart . core . stock . indicators .  Keltner Channels range Series (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . range Series ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
2840,"public  Map<K, V> get (  ) {  Map<K, V> result = new Linked Hash Map With Expected Size ( contributing Map (  )  . size (  )  )  ;  for  (  Entry<K,  Provider<V>> entry : contributing Map (  )  . entry Set (  )  )  {     result . put ( entry . get Key (  ) , entry . get Value (  )  . get (  )  )  ;  } return unmodifiable Map ( result )  ; }"
2841,public  Builder merge Worker Requirements ( com . facebook . buck . remoteexecution . proto .  Worker Requirements value ) { if  ( worker Requirements Builder_ == null )  {     if  ( worker Requirements_ != null )  {         worker Requirements_ = com . facebook . buck . remoteexecution . proto .  Worker Requirements . new Builder ( worker Requirements_ )  . merge From ( value )  . build Partial (  )  ;      } else {         worker Requirements_ = value ;      }     on Changed (  )  ;  } else {     worker Requirements Builder_ . merge From ( value )  ;  } return this ; }
2842,private void assert Input Buffer Contains No Sample Data (  ) { if  ( input Buffer . data == null )  {     return ;  } input Buffer . flip (  )  ;  assert That ( input Buffer . data . limit (  )  )  . is Equal To ( 0 )  ; }
2843,public com . didiglobal . booster . aapt2 .  Resources .  Source Position .  Builder get Source Builder (  ) { on Changed (  )  ;  return get Source Field Builder (  )  . get Builder (  )  ; }
2844,public  Web Chrome Client get Web Chrome Client (  ) { return web Chrome Client ; }
2845,"public static  Ct Field make (  String src,  Ct Class declaring )  throws  Cannot Compile Exception{  Javac compiler = new  Javac ( declaring )  ;  try {      Ct Member obj = compiler . compile ( src )  ;      if  ( obj instanceof  Ct Field )          // an instance of  Javac .  Ct Field With Init         return  (  Ct Field )  obj ;  } catch  (  Compile Error e )  {     throw new  Cannot Compile Exception ( e )  ;  } throw new  Cannot Compile Exception ( ""not a field"" )  ; }"
2846,"public void run (  ) { //		android . os .  Process . set Thread Priority ( android . os .  Process . THREAD_PRIORITY_URGENT_AUDIO )  ;  synchronized  ( m Sync )  {     m Request Stop = false ;      m Request Drain = 0 ;      m Sync . notify (  )  ;  } final boolean is Running = true ;  boolean local Request Stop ;  boolean local Request Drain ;  while  ( is Running )  {     synchronized  ( m Sync )  {         local Request Stop = m Request Stop ;          local Request Drain =  ( m Request Drain > 0 )  ;          if  ( local Request Drain )              m Request Drain-- ;      }     if  ( local Request Stop )  {         drain (  )  ;          // request stop recording         signal End Of Input Stream (  )  ;          // process output data again for EOS signale         drain (  )  ;          // release all related objects         release (  )  ;          break ;      }     if  ( local Request Drain )  {         drain (  )  ;      } else {         synchronized  ( m Sync )  {             try {                 m Sync . wait (  )  ;              } catch  ( final  Interrupted Exception e )  {                 break ;              }         }     } } // end of while if  ( DEBUG )       Log . d ( TAG, "" Encoder thread exiting"" )  ;  synchronized  ( m Sync )  {     m Request Stop = true ;      m Is Capturing = false ;  }}"
2847,"private  Object process Id Field (  Database Field database Field,  Field field, JSON Object json Object,  String json Key,  String table Name )  throws JSON Exception{  String db_field_name =  Ormlite Reflection . get Field Name ( field, database Field )  ;   Object object_id =  Json Utils . get Value ( json Object, json Key, field . get Type (  )  )  ;  if  ( object_id == null )  {     throw new  Runtime Exception (  String . format ( ""failed to get a value from JSON with key %s and type %s"", json Key, field . get Type (  )  . get Name (  )  )  )  ;  }  String sql =  String . format ( ""SELECT * FROM '%s' WHERE %s = ? LIMIT 1"", table Name, db_field_name )  ;   String [  ]  selection_args = new  String [  ]  { object_id . to String (  )  } ;   Cursor cursor = m Database . raw Query ( sql, selection_args )  ;  boolean object_exists =  ( cursor . get Count (  )  > 0 )  ;  cursor . close (  )  ;  if  ( object_exists )  {     // return existing object id     return object_id ;  } else // create object {      Content Values values = new  Content Values ( 1 )  ;      if  ( ! Json Utils . copy Value ( object_id, db_field_name, values )  )  {         throw new JSON Exception (  String . format ( ""failed to process id field %s for table %s and json Key %s"", field . get Name (  ) , table Name, json Key )  )  ;      }     long inserted_id = m Database . insert ( ""'"" + table Name + ""'"", null, values )  ;      if  ( inserted_id == -1 )  {         throw new SQ Lite Exception (  String . format ( ""failed to insert %s with id %s=%s"", field . get Type (  )  . get Name (  ) , db_field_name, object_id . to String (  )  )  )  ;      }     s Logger . info ( ""prepared {} row  ( id={}/{} ) "", table Name, object_id, inserted_id )  ;      // don't return inserted_id, because it's always long  ( while the target type might be int or another type )      return object_id ;  }}"
2848,public void set User Id ( @ Non Null  String identifier ) { core . set User Id ( identifier )  ; }
2849,"public  Float Buffer get ( float [  ]  dest ) { return get ( dest, 0, dest . length )  ; }"
2850,"byte [  ]  get Data ( @ Int Range ( from = 23, to = 517 )  final int mtu ) { final int max Length = long Read Supported ? 512 : mtu - 3 ;  if  ( data . length < max Length )      return data ;  return  Bytes . copy ( data, 0, max Length )  ; }"
2851,public boolean call Post Frame (  ) { return false ; }
2852,public int get Documents Loaded (  ) { return documents Loaded ; }
2853,"public com . anychart . standalones .  Project Timeline row Selected Fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
2854,"public com . anychart . core . resource . resourcelist .  Text Settings font Decoration ( com . anychart . graphics . vector . text .  Decoration type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Decoration ( %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
2855,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
2856,"public static  Firebase Database create Database For Tests (  Firebase App app,  Repo Info repo Info,  Database Config config ) { return  Firebase Database . create For Tests ( app, repo Info, config )  ; }"
2857,"public  Mount Spec Model create With Psi (  Project project,  Psi Class psi Class, @ Nullable  Dependency Injection Helper dependency Injection Helper ) { final  Mount Spec mount Spec Annotation =  Psi Annotation Proxy Utils . find Annotation In Hierarchy ( psi Class,  Mount Spec . class )  ;  if  ( mount Spec Annotation == null )  {     return null ;  } final  String class Name = psi Class . get Qualified Name (  )  ;  if  ( class Name == null )  {     return null ;  } return new  Mount Spec Model ( class Name, mount Spec Annotation . value (  ) ,  Psi Delegate Method Extractor . get Delegate Methods ( psi Class, m Mount Spec Delegate Method Annotations, INTER_STAGE_INPUT_ANNOTATIONS,  Immutable List . of (  Should Update . class )  ) ,  Psi Event Method Extractor . get On Event Methods ( psi Class, INTER_STAGE_INPUT_ANNOTATIONS ) ,  Psi Trigger Method Extractor . get On Trigger Methods ( psi Class, INTER_STAGE_INPUT_ANNOTATIONS ) ,  Psi Working Ranges Method Extractor . get Register Method ( psi Class, INTER_STAGE_INPUT_ANNOTATIONS ) ,  Psi Working Ranges Method Extractor . get Ranges Methods ( psi Class, INTER_STAGE_INPUT_ANNOTATIONS ) ,  Psi Update State Method Extractor . get On Update State Methods ( psi Class, INTER_STAGE_INPUT_ANNOTATIONS, false ) ,  Psi Update State Method Extractor . get On Update State Methods ( psi Class, INTER_STAGE_INPUT_ANNOTATIONS, true ) ,  Immutable List . of (  ) ,  Psi Type Variables Extractor . get Type Variables ( psi Class ) ,  Psi Prop Defaults Extractor . get Prop Defaults ( psi Class ) ,  Psi Event Declarations Extractor . get Event Declarations ( psi Class,  Mount Spec . class ) , ""class Javadoc"",  Psi Annotation Extractor . extract Valid Annotations ( project, psi Class ) ,  Immutable List . of (  ) ,  Immutable List . of (  ) , mount Spec Annotation . is Public (  ) , dependency Injection Helper, mount Spec Annotation . is Pure Render (  ) , mount Spec Annotation . has Child Litho Views (  ) , mount Spec Annotation . pool Size (  ) , mount Spec Annotation . can Preallocate (  ) , get Mount Type ( psi Class ) ,  Spec Element Type . JAVA_CLASS, psi Class, m Mount Spec Generator,  Psi Fields Extractor . extract Fields ( psi Class ) ,  Psi Bind Dynamic Values Method Extractor . get On Bind Dynamic Values Methods ( psi Class )  )  ; }"
2858,public void set X Labels Angle ( float angle ) { m X Labels Angle = angle ; }
2859,"static  String handle Illegal Character In Result ( final  String result ) {  String temp Result = result ;  if  ( temp Result != null && temp Result . contains ( "" "" )  )  {     temp Result = temp Result . replace All ( "" "", ""_"" )  ;  } return temp Result ; }"
2860,"private void throw On Missing Required Attribute (  Map< String,  Object> kwargs,  Immutable Map< String,  Param Info<?>> all Param Info,  String name,  Funcall Expression ast )  throws  Eval Exception{  Immutable List< Param Info<?>> missing Attributes = all Param Info . values (  )  . stream (  )  . filter (  param -> !param . is Optional (  )  && !kwargs . contains Key ( param . get Python Name (  )  )  )  . collect (  Immutable List . to Immutable List (  )  )  ;  if  ( !missing Attributes . is Empty (  )  )  {     throw new  Eval Exception ( ast . get Location (  ) , name + "" requires "" + missing Attributes . stream (  )  . map (  Param Info::get Python Name )  . collect (  Collectors . joining ( "" and "" )  )  + "" but they are not provided . "", BUCK_RULE_DOC_URL_PREFIX + name )  ;  }}"
2861,"public void set Cancel Color ( @ Color Int int color ) { m Cancel Color =  Color . argb ( 255,  Color . red ( color ) ,  Color . green ( color ) ,  Color . blue ( color )  )  ; }"
2862,public void mul (  Matrix4 transform ) { this . transform . mul ( transform )  ;  this . transform . get Scale ( scale )  ; }
2863,"public com . anychart . core . utils .  Animation animation (  ) { return new com . anychart . core . utils .  Animation ( js Base + "" . animation (  ) "" )  ; }"
2864,"public  Vector3 multiply ( @ Non Null @ Size ( min = 16 )  double [  ]  matrix ) { double vx = x, vy = y, vz = z ;  x = vx * matrix [  Matrix4 . M00 ]  + vy * matrix [  Matrix4 . M01 ]  + vz * matrix [  Matrix4 . M02 ]  + matrix [  Matrix4 . M03 ]  ;  y = vx * matrix [  Matrix4 . M10 ]  + vy * matrix [  Matrix4 . M11 ]  + vz * matrix [  Matrix4 . M12 ]  + matrix [  Matrix4 . M13 ]  ;  z = vx * matrix [  Matrix4 . M20 ]  + vy * matrix [  Matrix4 . M21 ]  + vz * matrix [  Matrix4 . M22 ]  + matrix [  Matrix4 . M23 ]  ;  return this ; }"
2865,public boolean is Deadline Reached (  ) { return is Deadline Reached ; }
2866,public  Proto Fluent Assertion reporting Mismatches Only (  ) { return using Config ( config . reporting Mismatches Only (  )  )  ; }
2867,"public void add Search String ( final  String search String ) { if  ( search String == null )  {     return ;  }  String trimmed String = search String . trim (  )  ;  if  ( trimmed String . is Empty (  )  )  {     return ;  } final SQ Lite Database database = m Music Database . get Writable Database (  )  ;  database . begin Transaction (  )  ;  try {     database . delete (  Search History Columns . NAME,  Search History Columns . SEARCHSTRING + "" = ? COLLATE NOCASE"", new  String [  ]  { trimmed String } )  ;      final  Content Values values = new  Content Values ( 2 )  ;      values . put (  Search History Columns . SEARCHSTRING, trimmed String )  ;      values . put (  Search History Columns . TIMESEARCHED,  System . current Time Millis (  )  )  ;      database . insert (  Search History Columns . NAME, null, values )  ;       Cursor oldest = null ;      try {         oldest = database . query (  Search History Columns . NAME, new  String [  ]  {  Search History Columns . TIMESEARCHED }, null, null, null, null,  Search History Columns . TIMESEARCHED + "" ASC"" )  ;          if  ( oldest != null && oldest . get Count (  )  > MAX_ITEMS_IN_DB )  {             oldest . move To Position ( oldest . get Count (  )  - MAX_ITEMS_IN_DB )  ;              long time Of Record To Keep = oldest . get Long ( 0 )  ;              database . delete (  Search History Columns . NAME,  Search History Columns . TIMESEARCHED + "" < ?"", new  String [  ]  {  String . value Of ( time Of Record To Keep )  } )  ;          }     } finally {         if  ( oldest != null )  {             oldest . close (  )  ;              oldest = null ;          }     } } finally {     database . set Transaction Successful (  )  ;      database . end Transaction (  )  ;  }}"
2868,public BUILDER set Tap To Retry Enabled ( boolean enabled ) { m Tap To Retry Enabled = enabled ;  return get This (  )  ; }
2869,public long get Num Whole Commit (  ) { return num Whole Commit ; }
2870,public  Base Adapter get Decorated Base Adapter (  ) { return m Decorated Base Adapter ; }
2871,"public static void crop With Own App ( T Context Wrap context Wrap,  Uri image Uri,  Uri out Put Uri,  Crop Options options ) { if  ( options . get Aspect X (  )  * options . get Aspect Y (  )  > 0 )  {     if  ( context Wrap . get Fragment (  )  != null )  {          Crop . of ( image Uri, out Put Uri )  . with Aspect ( options . get Aspect X (  ) , options . get Aspect Y (  )  )  . start ( context Wrap . get Activity (  ) , context Wrap . get Fragment (  )  )  ;      } else {          Crop . of ( image Uri, out Put Uri )  . with Aspect ( options . get Aspect X (  ) , options . get Aspect Y (  )  )  . start ( context Wrap . get Activity (  )  )  ;      } } else if  ( options . get Output X (  )  * options . get Output Y (  )  > 0 )  {     if  ( context Wrap . get Fragment (  )  != null )  {          Crop . of ( image Uri, out Put Uri )  . with Max Size ( options . get Output X (  ) , options . get Output Y (  )  )  . start ( context Wrap . get Activity (  ) , context Wrap . get Fragment (  )  )  ;      } else {          Crop . of ( image Uri, out Put Uri )  . with Max Size ( options . get Output X (  ) , options . get Output Y (  )  )  . start ( context Wrap . get Activity (  )  )  ;      } } else {     if  ( context Wrap . get Fragment (  )  != null )  {          Crop . of ( image Uri, out Put Uri )  . as Square (  )  . start ( context Wrap . get Activity (  ) , context Wrap . get Fragment (  )  )  ;      } else {          Crop . of ( image Uri, out Put Uri )  . as Square (  )  . start ( context Wrap . get Activity (  )  )  ;      } }}"
2872,"public void process Bitmap For Write (  Bitmap Commit c,  Bitmap bitmap, int flags ) { EWAH Compressed Bitmap compressed = bitmap . retrieve Compressed (  )  ;  compressed . trim (  )  ;   Stored Bitmap newest = new  Stored Bitmap ( c, compressed, null, flags )  ;  bitmaps To Write Xor Buffer . add ( newest )  ;  if  ( bitmaps To Write Xor Buffer . size (  )  > MAX_XOR_OFFSET_SEARCH )  {     bitmaps To Write . add ( generate Stored Entry ( bitmaps To Write Xor Buffer . poll First (  )  )  )  ;  } if  ( c . is Add To Index (  )  )  {     //  The  Bitmap map in the base class is used to make revwalks     // efficient, so only add bitmaps that keep it efficient without     // bloating memory .      add Bitmap ( c, bitmap, flags )  ;  }}"
2873,public int value (  ) { return value ; }
2874,public  List<T> get Data Sets (  ) { return m Data Sets ; }
2875,"public void test Mapping Reverse Order (  )  throws  Exo Playback Exception{  Fake Mapping Track Selector track Selector = new  Fake Mapping Track Selector (  )  ;   Renderer Capabilities [  ]  reverse Order Renderer Capabilities = new  Renderer Capabilities [  ]  { AUDIO_CAPABILITIES, VIDEO_CAPABILITIES } ;  track Selector . select Tracks ( reverse Order Renderer Capabilities, TRACK_GROUPS, period Id, TIMELINE )  ;  track Selector . assert Mapped Track Groups ( 0, AUDIO_TRACK_GROUP )  ;  track Selector . assert Mapped Track Groups ( 1, VIDEO_TRACK_GROUP )  ; }"
2876,"public com . anychart . core . polar . series .  Range Column x Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2877,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
2878,"public com . anychart . core . cartesian . series .  Line3d error (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . error ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2879,protected void append Field Separator (  String Buffer buffer ) { buffer . append ( field Separator )  ; }
2880,"public static  Unsorted Android Resource Deps create From (  Collection< Build Rule> rules,  Optional< Callback> callback ) {  Immutable Set .  Builder< Has Android Resource Deps> android Resources =  Immutable Set . builder (  )  ;  //  This visitor finds all  Android Resource Rules that are reachable from the specified rules via // rules with types in the TRAVERSABLE_TYPES collection .   Abstract Breadth First Traversal< Build Rule> visitor = new  Abstract Breadth First Traversal< Build Rule> ( rules )  {     @ Override     public  Iterable< Build Rule> visit (  Build Rule rule )  {          Has Android Resource Deps android Resource Rule = null ;          if  ( rule instanceof  Has Android Resource Deps )  {             android Resource Rule =  (  Has Android Resource Deps )  rule ;          }         if  ( android Resource Rule != null && android Resource Rule . get Res (  )  != null )  {             android Resources . add ( android Resource Rule )  ;          }         //  Only certain types of rules should be considered as part of this traversal .          //  For  Java Library rules, we need to grab the deps directly from the rule and not from         // the  Build Rule Params object .   Build Rule Params may hold ABI rules which don't allow         // us to properly traverse and locate the transitive android resource deps          Set< Build Rule> deps To Visit ;          if  ( rule instanceof  Java Library )  {             deps To Visit =  (  (  Java Library )  rule )  . get Deps For Transitive Classpath Entries (  )  ;          } else {             deps To Visit = TRAVERSABLE_TYPES . contains ( rule . get Class (  )  )  ? rule . get Build Deps (  )  :  Immutable Set . of (  )  ;          }         if  ( callback . is Present (  )  )  {             callback . get (  )  . on Rule Visited ( rule, deps To Visit )  ;          }         return deps To Visit ;      } } ;  visitor . start (  )  ;  return new  Unsorted Android Resource Deps ( android Resources . build (  )  )  ; }"
2881,public int size (  ) { return size ; }
2882,"public  Launched Process launch Buck Command Process ( boolean buckd Enabled,  Immutable Map< String,  String> environment Overrides,  String [  ]  templates,  String .  .  .  args )  throws  Exception{  System . out . println ( "" Launching buck command: "" +  String . join ( "" "", args )  )  ;  for  (  String template : templates )  {     this . add Premade Template ( template )  ;  }  Immutable List .  Builder< String> command Builder = platform Utils . get Buck Command Builder (  )  ;   List< String> command = command Builder . add All (  Immutable List . copy Of ( args )  )  . build (  )  ;  ran With Buckd = ran With Buckd || buckd Enabled ;  return launch Command Process ( buckd Enabled, environment Overrides, command )  ; }"
2883,"public boolean should Use Remote Execution For Genrule If Requested (  String type ) { return get Delegate (  )  . get Boolean Value ( SECTION, get Use Remote Execution For Genrule If Requested Field ( type ) , false )  ; }"
2884,public void write (  Output Stream output Stream )  throws IO Exception{ write (  Channels . new Channel ( output Stream )  )  ; }
2885,void add Initialization (  Code Block code Block ) { component Shard . add Initialization ( code Block )  ; }
2886,"public com . anychart . charts .  Sankey select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
2887,"private int snap Only30s ( int degrees, int force Higher Or Lower ) { int step Size = HOUR_VALUE_TO_DEGREES_STEP_SIZE ;  int floor =  ( degrees / step Size )  * step Size ;  int ceiling = floor + step Size ;  if  ( force Higher Or Lower == 1 )  {     degrees = ceiling ;  } else if  ( force Higher Or Lower == -1 )  {     if  ( degrees == floor )  {         floor -= step Size ;      }     degrees = floor ;  } else {     if  (  ( degrees - floor )  <  ( ceiling - degrees )  )  {         degrees = floor ;      } else {         degrees = ceiling ;      } } return degrees ; }"
2888,"public com . anychart . charts .  Cartesian3d margin (  String value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
2889,"public void ellipse ( float x, float y, float width, float height, float rotation ) { ellipse ( x, y, width, height, rotation,  Math . max ( 1,  ( int )   ( 12 *  ( float )   Math . cbrt (  Math . max ( width * 0 . 5f, height * 0 . 5f )  )  )  )  )  ; }"
2890,public  String get Local User Name (  ) { return local User Name ; }
2891,public boolean is Set Manifest Append Response (  ) { return this . manifest Append Response != null ; }
2892,"Move Desc<E> try Cross Over And Bubble Up ( int remove Index, int vacated, E to Trickle ) { int cross Over = cross Over ( vacated, to Trickle )  ;  if  ( cross Over == vacated )  {     return null ;  } //  Successfully crossed over from min to max .  //  Bubble up max levels .  E parent ;  // that it knows to skip it .  if  ( cross Over < remove Index )  {     //  We crossed over to the parent level in cross Over, so the parent     // has already been moved .      parent = element Data ( remove Index )  ;  } else {     parent = element Data ( get Parent Index ( remove Index )  )  ;  } // bubble it up the opposite heap if  ( other Heap . bubble Up Alternating Levels ( cross Over, to Trickle )  < remove Index )  {     return new  Move Desc<E> ( to Trickle, parent )  ;  } else {     return null ;  }}"
2893,"private T execute ( final  String comment, final  Callable<T> work ) { synchronized  ( lock )  {     return get Future ( comment, db Executor . submit ( work )  )  ;  }}"
2894,public  Builder set Source Path ( java . lang .  String value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } source Path_ = value ;  on Changed (  )  ;  return this ; }
2895,"public com . anychart . charts .  Pert bottom (  String bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", wrap Quotes ( bottom )  )  )  ;  return this ; }"
2896,public void wait Until Consumers Are Finished (  ) { wait Until Consumers Are Finished ( false )  ; }
2897,public void retain Launches (  String .  .  .  retain Launche ) { for  (  String str : retain Launche )  {     retain Launches . add ( str )  ;  }}
2898,public E get Row Data ( int position ) { validate Position Or Throw ( position )  ;  return data List . get ( position )  ; }
2899,public boolean is Decode Strings (  ) { return decode Strings ; }
2900,"public com . anychart . core . stock . indicators .  Aroon up Series ( com . anychart . enums .  Stock Series Type type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . up Series ( %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
2901,"public com . anychart . core . stock . scrollerseries .  Range Step Area bounds (  String x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
2902,List< Link> get Links (  ) { return m Links ; }
2903,private static long packed Code Size (  Int List cases ) { int sz = cases . size (  )  ;  long low = cases . get ( 0 )  ;  long high = cases . get ( sz - 1 )  ;  long result =  (  ( high - low + 1 )  )  * 2 + 4 ;  return  ( result <= 0x7fffffff )  ? result : -1 ; }
2904,public  List<E> as List (  ) { return  Fluent Iterable . copy To List ( iterable )  ; }
2905,"public  String get Image Path (  ) { var http Client =  Http Client . new Http Client (  )  ;  var http Get =  Http Request . new Builder (  )  . GET (  )  . uri ( URI . create ( ""http://localhost:50005/image-path"" )  )  . build (  )  ;  try {     LOGGER . info ( "" Sending request to fetch image path"" )  ;      var http Response = http Client . send ( http Get,  Body Handlers . of String (  )  )  ;      log Response ( http Response )  ;      return http Response . body (  )  ;  } catch  ( IO Exception ioe )  {     LOGGER . error ( "" Failure occurred while getting image path"", ioe )  ;  } catch  (  Interrupted Exception ie )  {     LOGGER . error ( "" Failure occurred while getting image path"", ie )  ;       Thread . current Thread (  )  . interrupt (  )  ;  } return null ; }"
2906,"public void veto Thrown (  Audio File Modification Listener cause,  Audio File original,  Modify Veto Exception veto ) {//  Nothing to do}"
2907,"public static  Receive Command unlink ( @ Non Null  String old Target, @ Non Null  Object Id new Id, @ Non Null  String name ) { return new  Receive Command ( old Target, new Id, name )  ; }"
2908,protected  Immutable Set< Path> get Runtime Classpath (  Build Context build Context ) {  Immutable Set .  Builder< Path> builder =  Immutable Set . builder (  )  ;  unbundled Resources Root . if Present (  source Path -> builder . add ( build Context . get Source Path Resolver (  )  . get Absolute Path ( source Path )  )  )  ;  return builder . add All ( compiled Tests Library . get Transitive Classpaths (  )  . stream (  )  . map ( build Context . get Source Path Resolver (  ) ::get Absolute Path )  . collect (  Immutable Set . to Immutable Set (  )  )  )  . add All ( additional Classpath Entries Provider . map (  e -> e . get Additional Classpath Entries ( build Context . get Source Path Resolver (  )  )  )  . or Else (  Immutable List . of (  )  )  )  . add All ( get Boot Classpath Entries (  )  )  . build (  )  ; }
2909,"public void perform Action With Fresh Tokens ( @ Non Null  Authorization Service service, @ Non Null  Client Authentication client Auth, @ Non Null  Auth State Action action ) { perform Action With Fresh Tokens ( service, client Auth,  Collections . < String,  String>empty Map (  ) ,  System Clock . INSTANCE, action )  ; }"
2910,"public com . anychart . charts .  Pareto margin (  Number value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
2911,public com . google . protobuf .  Byte String get Version Bytes (  ) { java . lang .  Object ref = version_ ;  if  ( ref instanceof  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      version_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
2912,public void seek ( long time Us ) { long time Ms = C . us To Ms ( time Us )  ;  int search Index = current Sample Index ;  while  ( search Index < fragment . sample Count && fragment . get Sample Presentation Time ( search Index )  < time Ms )  {     if  ( fragment . sample Is Sync Frame Table [ search Index ]  )  {         first Sample To Output Index = search Index ;      }     search Index++ ;  }}
2913,"public static  Object get Surrounding This (  Object obj ) { return get Object Field ( obj, ""this$0"" )  ; }"
2914,public  Reftable Compactor set Reflog Expire Oldest Reflog Time Millis ( long time Millis ) { reflog Expire Oldest Reflog Time Millis = time Millis ;  return this ; }
2915,"public void insert In Tx ( T .  .  .  entities ) { insert In Tx (  Arrays . as List ( entities ) , is Entity Updateable (  )  )  ; }"
2916,"public static  List< Device Filter> get Device Filters ( final  Context context, final int device Filter Xml Id ) { final  Xml Pull Parser parser = context . get Resources (  )  . get Xml ( device Filter Xml Id )  ;  final  List< Device Filter> device Filters = new  Array List< Device Filter> (  )  ;  try {     int event Type = parser . get Event Type (  )  ;      while  ( event Type !=  Xml Pull Parser . END_DOCUMENT )  {         if  ( event Type ==  Xml Pull Parser . START_TAG )  {             final  Device Filter device Filter = read Entry One ( context, parser )  ;              if  ( device Filter != null )  {                 device Filters . add ( device Filter )  ;              }         }         event Type = parser . next (  )  ;      } } catch  ( final  Xml Pull Parser Exception e )  {      Log . d ( TAG, "" Xml Pull Parser Exception"", e )  ;  } catch  ( final IO Exception e )  {      Log . d ( TAG, ""IO Exception"", e )  ;  } return  Collections . unmodifiable List ( device Filters )  ; }"
2917,public T3 get Value3 (  ) { return value3 ; }
2918,public void accept (  Member Value Visitor visitor ) { visitor . visit Long Member Value ( this )  ; }
2919,"public com . anychart . charts .  Scatter y Minor Grid (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Minor Grid ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
2920,"public com . anychart . charts .  Radar label (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
2921,"public com . anychart . charts .  Heat Map padding (  Number value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
2922,"public static  Symbol .  Method Symbol get Functional Interface Method (  Expression Tree tree,  Types types ) {  Preconditions . check Argument (  ( tree instanceof  Lambda Expression Tree )  ||  ( tree instanceof  Member Reference Tree )  )  ;   Type func Interface Type =  (  ( JC Tree . JC Functional Expression )  tree )  . type ;  return  (  Symbol .  Method Symbol )  types . find Descriptor Symbol ( func Interface Type . tsym )  ; }"
2923,"public static boolean contains ( double [  ]  array, double target ) { for  ( double value : array )  {     if  ( value == target )  {         return true ;      } } return false ; }"
2924,"static void annotate (  Psi Element element,  Bi Consumer< Collection< String>,  Psi Reference Expression> error Handler,  Function< Psi Method Call Expression,  Psi Class> generated Class Resolver ) { if  ( element instanceof  Psi Declaration Statement )  {      Arrays . stream (  (  (  Psi Declaration Statement )  element )  . get Declared Elements (  )  )  . filter (  Psi Variable . class::is Instance )  . map (  declared Variable ->  (  (  Psi Variable )  declared Variable )  . get Initializer (  )  )  . for Each (  expression -> handle If Method Call ( expression, error Handler, generated Class Resolver )  )  ;  } else if  ( element instanceof  Psi Expression Statement )  {     handle If Method Call (  (  (  Psi Expression Statement )  element )  . get Expression (  ) , error Handler, generated Class Resolver )  ;  } else if  ( element instanceof  Psi Return Statement )  {     handle If Method Call (  (  (  Psi Return Statement )  element )  . get Return Value (  ) , error Handler, generated Class Resolver )  ;  }}"
2925,public boolean has Listener (  Sensor Event Listener listener ) { return listeners . contains Key ( listener )  ; }
2926,public  Std Method List get List (  ) { parse If Necessary (  )  ;  return methods ; }
2927,public void on Destroy (  ) {}
2928,"public com . anychart . scales .  Ordinal Color ticks (  String [  ]  ticks ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . ticks ( %s )  ; "", array To String Wrap Quotes ( ticks )  )  )  ;  return this ; }"
2929,"public com . anychart . charts .  Tag Cloud padding (  String [  ]  padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "", array To String Wrap Quotes ( padding )  )  )  ;  return this ; }"
2930,protected int get Bucketed Size ( int request Size ) { return request Size ; }
2931,"private  Gson init Gson (  ) {  Type net Key List = new  Type Token< List< Network Key>> (  )  { } . get Type (  )  ;   Type app Key List = new  Type Token< List< Application Key>> (  )  { } . get Type (  )  ;   Type allocated Unicast Range = new  Type Token< List< Allocated Unicast Range>> (  )  { } . get Type (  )  ;   Type allocated Group Range = new  Type Token< List< Allocated Group Range>> (  )  { } . get Type (  )  ;   Type allocated Scene Range = new  Type Token< List< Allocated Scene Range>> (  )  { } . get Type (  )  ;   Type node List = new  Type Token< List< Provisioned Mesh Node>> (  )  { } . get Type (  )  ;   Type mesh Model List = new  Type Token< List< Mesh Model>> (  )  { } . get Type (  )  ;   Type element List = new  Type Token< List< Element>> (  )  { } . get Type (  )  ;  return new  Gson Builder (  )  . register Type Adapter ( net Key List, new  Net Key Deserializer (  )  )  . register Type Adapter ( app Key List, new  App Key Deserializer (  )  )  . register Type Adapter ( allocated Unicast Range, new  Allocated Unicast Range Deserializer (  )  )  . register Type Adapter ( allocated Group Range, new  Allocated Group Range Deserializer (  )  )  . register Type Adapter ( allocated Scene Range, new  Allocated Scene Range Deserializer (  )  )  . register Type Adapter ( node List, new  Node Deserializer (  )  )  . register Type Adapter ( element List, new  Internal Element List Deserializer (  )  )  . register Type Adapter ( mesh Model List, new  Mesh Model List Deserializer (  )  )  . register Type Adapter (  Mesh Network . class, new  Mesh Network Deserializer (  )  )  . serialize Nulls (  )  . set Pretty Printing (  )  . create (  )  ; }"
2932,static  Optional< Descriptor> get Single Descriptor (  Iterable<? extends  Message> messages ) {  Optional< Descriptor> opt Descriptor =  Optional . absent (  )  ;  for  (  Message message : messages )  {     if  ( message != null )  {          Descriptor descriptor = message . get Descriptor For Type (  )  ;          if  ( !opt Descriptor . is Present (  )  )  {             opt Descriptor =  Optional . of ( descriptor )  ;          } else if  ( descriptor != opt Descriptor . get (  )  )  {             //  Two different descriptors - abandon ship .              return  Optional . absent (  )  ;          }     } } return opt Descriptor ; }
2933,public  String get Link (  ) { return link ; }
2934,"public com . anychart . core . stock . indicators . KDJ kdj ( com . anychart . data .  Table Mapping mapping,  Number k Period,  Number k MA Period,  Number d Period, com . anychart . enums .  Moving Average Type k MA Type,  String d MA Type,  Number k Multiplier,  Number d Multiplier, com . anychart . enums .  Stock Series Type k Series Type, com . anychart . enums .  Stock Series Type d Series Type,  String j Series Type ) { return new com . anychart . core . stock . indicators . KDJ (  String . format (  Locale . US, js Base + "" . kdj ( %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, k Period, k MA Period, d Period,  ( k MA Type != null )  ? k MA Type . get Js Base (  )  : null, wrap Quotes ( d MA Type ) , k Multiplier, d Multiplier,  ( k Series Type != null )  ? k Series Type . get Js Base (  )  : null,  ( d Series Type != null )  ? d Series Type . get Js Base (  )  : null, wrap Quotes ( j Series Type )  )  )  ; }"
2935,"public com . anychart . core . annotations .  Fibonacci Retracement bounds (  String x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
2936,public void clear Children (  ) { clear Children ( true )  ; }
2937,"public void listen Log For Message Segments ( final  String .  .  .  msgs ) { final  Test Log Response response = this ;   Logger . get Instance (  )  . set External Logger ( new I Logger (  )  {     @ Override     public void  Log (  String tag,  String message,  String additional Message,  Log Level level, ADAL Error error Code )  {         for  (  String msg : msgs )  {             if  ( message . contains ( msg )  ||  ( null != additional Message && additional Message . contains ( msg )  )  )  {                 response . m Tag = tag ;                  response . m Message = message ;                  response . m Additional Message = additional Message ;                  response . m Level = level ;                  response . m Error Code = error Code ;              } else {                 break ;              }         }     } } )  ; }"
2938,"public  Immersion Bar get (  Fragment fragment, boolean is Only ) { check Not Null ( fragment, ""fragment is null"" )  ;  check Not Null ( fragment . get Activity (  ) , ""fragment . get Activity (  )  is null"" )  ;  if  ( fragment instanceof  Dialog Fragment )  {     check Not Null (  (  (  Dialog Fragment )  fragment )  . get Dialog (  ) , ""fragment . get Dialog (  )  is null"" )  ;  }  String tag = m Tag ;  if  ( is Only )  {     tag += fragment . get Class (  )  . get Name (  )  ;  } else {     tag +=  System . identity Hash Code ( fragment )  ;  } return get Support Fragment ( fragment . get Child Fragment Manager (  ) , tag )  . get ( fragment )  ; }"
2939,public boolean is Set ( _ Fields field ) { if  ( field == null )  {     throw new java . lang .  Illegal Argument Exception (  )  ;  } switch ( field )  { } throw new java . lang .  Illegal State Exception (  )  ; }
2940,"public  String x Print Target Error (  Throwable t ) {  String get Target = ""import java . lang . reflect .  Undeclared Throwable Exception ; "" + "" String result=\""\"" ; "" + ""while  (  target instanceof  Undeclared Throwable Exception  )  {"" + ""	target=target . get Undeclared Throwable (  )  ;  "" + ""	result+=\"" Nested: \""+target . to String (  )  ; "" + ""}"" + ""return result ; "" ;   Interpreter i = new  Interpreter (  )  ;  try {     i . set ( ""target"", t )  ;      return  (  String )  i . eval ( get Target )  ;  } catch  (  Eval Error e )  {     throw new  Interpreter Error ( ""xprintarget: "" + e . to String (  )  )  ;  }}"
2941,"public  String read Thing (  ) { //             System . out . println ( ""PA Parser: whitespace: \"""" )  ;  while  ( PDF File . is White Space ( data [ loc ]  )  )  {     //                 System . out . print  ( new  String ( data, loc, 1 )  )  ;      loc++ ;  } //             System . out . print ( ""\"": thing: "" )  ;  // read thing int start = loc ;  while  ( !PDF File . is White Space ( data [ loc ]  )  )  {     loc++ ;      if  ( !PDF File . is Regular Character ( data [ loc ]  )  )  {         // leave with the delimiter included         break ;      } }  String s = new  String ( data, start, loc - start )  ;  //	     System . out . println ( "" Read: ""+s )  ;  return s ; }"
2942,"public static void set Status Bar Light Mode ( @ Non Null final  Activity activity, final boolean is Light Mode ) { set Status Bar Light Mode ( activity . get Window (  ) , is Light Mode )  ; }"
2943,"protected void configure Text View (  Text View view ) { if  ( m Picker Config == null )      m Picker Config = new  Picker Config (  )  ;  view . set Text Color ( m Picker Config . m Wheel TV Normal Color )  ;  view . set Gravity (  Gravity . CENTER )  ;  view . set Padding ( 0, padding, 0, padding )  ;  view . set Text Size ( m Picker Config . m Wheel TV Size )  ;  view . set Lines ( 1 )  ; //        view . set Typeface (  Typeface . SANS_SERIF,  Typeface . BOLD )  ; }"
2944,"public static void inject (  Object obj,  Scope scope ) { injector . inject ( obj, scope )  ; }"
2945,public int get Sub Frame Count (  ) { return sub Frames . length ; }
2946,"public static  Database Error from Code ( int code ) { if  ( !error Reasons . contains Key ( code )  )  {     throw new  Illegal Argument Exception ( "" Invalid  Firebase  Database error code: "" + code )  ;  }  String message = error Reasons . get ( code )  ;  return new  Database Error ( code, message, null )  ; }"
2947,"public static int correct Width Spec For Android Double Measure Bug (  Resources resources,  Package Manager package Manager, int width Spec ) { @ Size Spec .  Measure Spec Mode final int mode =  Size Spec . get Mode ( width Spec )  ;  if  ( mode ==  Size Spec . UNSPECIFIED )  {     return width Spec ;  } //  Will cache the device type to avoid repetitive package manager calls .  if  ( device Type == UNSET )  {     try {         //  Required to determine whether device used is a  Chromebook .          //  See https://stackoverflow . com/questions/39784415/ for details .          device Type = package Manager . has System Feature ( ""org . chromium . arc . device_management"" )  ? CHROMEBOOK : NORMAL ;      } catch  (  Runtime Exception e )  {         //  To catch  Runtime Exception ( "" Package manager has died"" )  that can occur on some version of         //  Android, when the remote  Package Manager is unavailable .  I suspect this sometimes occurs         // when the  App is being reinstalled .          device Type = NORMAL ;      } } final  Configuration configuration = resources . get Configuration (  )  ;  final  Display Metrics display Metrics = resources . get Display Metrics (  )  ;  final float screen Density = display Metrics . density ;  final float screen Width Dp = configuration . screen Width Dp ;  //  If device used is a  Chromebook we need to use the window size instead of the screen size to // avoid layout issues .  final int screen Width Px =  ( device Type == CHROMEBOOK )  ?  ( int )   ( screen Width Dp * screen Density + 0 . 5f )  : display Metrics . width Pixels ;  // NB:  Logic taken from  View Root Impl#dip To Px final int calculated Screen Width Px =  ( int )   ( screen Density * screen Width Dp + 0 . 5f )  ;  if  ( screen Width Px != calculated Screen Width Px && calculated Screen Width Px ==  Size Spec . get Size ( width Spec )  )  {     return  Size Spec . make Size Spec ( screen Width Px, mode )  ;  } return width Spec ; }"
2948,"private static void log To Firelog ( @ Event Type  String event,  Intent intent,  Transport< String> transport ) {  Firelog Analytics Event firelog Analytics Event = new  Firelog Analytics Event ( event, intent )  ;   Firelog Analytics Event Wrapper firelog Analytics Event Wrapper = new  Firelog Analytics Event Wrapper ( firelog Analytics Event )  ;  try {     // TODO ( b/145299499 ) : offload encoding to  Firelog  Thread     transport . send (  Event . of Telemetry ( data Encoder . encode ( firelog Analytics Event Wrapper )  )  )  ;  } catch  (  Encoding Exception e )  {      Log . d ( TAG, "" Failed to encode big query analytics payload .   Skip sending"" )  ;  }}"
2949,"public com . anychart . core . ui .  Chart Credits credits (  ) { return new com . anychart . core . ui .  Chart Credits ( js Base + "" . credits (  ) "" )  ; }"
2950,"private void draw Title (  Canvas canvas ) { int dis = show Rect . top - scale Rect . top ;   Table Info table Info = table Data . get Table Info (  )  ;  int title Height = table Info . get Title Height (  )  * table Info . get Max Level (  )  ;  int clip Height = config . is Fixed Title (  )  ? title Height :  Math . max ( 0, title Height - dis )  ;  if  ( config . get Column Title Background (  )  != null )  {     temp Rect . set ( show Rect . left, show Rect . top, show Rect . right, show Rect . top + clip Height )  ;      config . get Column Title Background (  )  . draw Background ( canvas, temp Rect, config . get Paint (  )  )  ;  } clip Rect . set ( show Rect )  ;   List< Column Info> column Info List = table Data . get Column Infos (  )  ;  float zoom = config . get Zoom (  )  ;  boolean is Per Column Fixed = false ;  int clip Count = 0 ;   Column Info parent Column Info = null ;  for  (  Column Info info : column Info List )  {     int left =  ( int )   ( info . left * zoom + scale Rect . left )  ;      //根据top ==0是根部，根据最根部的 Title判断是否需要固定     if  ( info . top == 0 && info . column . is Fixed (  )  )  {         if  ( left < clip Rect . left )  {             parent Column Info = info ;              left = clip Rect . left ;              fill Column Title ( canvas, info, left )  ;              clip Rect . left += info . width * zoom ;              is Per Column Fixed = true ;              continue ;          }     //根部需要固定，同时固定所有子类     } else if  ( is Per Column Fixed && info . top != 0 )  {         left =  ( int )   ( clip Rect . left - info . width * zoom )  ;          left +=  ( info . left - parent Column Info . left )  ;      } else if  ( is Per Column Fixed )  {         canvas . save (  )  ;          canvas . clip Rect ( clip Rect . left, show Rect . top, show Rect . right, show Rect . top + clip Height )  ;          is Per Column Fixed = false ;          clip Count++ ;      }     fill Column Title ( canvas, info, left )  ;  } for  ( int i = 0 ;  i < clip Count ;  i++ )  {     canvas . restore (  )  ;  } if  ( config . is Fixed Title (  )  )  {     scale Rect . top += title Height ;      show Rect . top += title Height ;  } else {     show Rect . top += clip Height ;      scale Rect . top += title Height ;  }}"
2951,public  Chat Fragment Builder with Scroll To Comment (  Qiscus Comment comment ) { this . scroll To Comment = comment ;  return this ; }
2952,public  Input Stream get Created From Stream (  ) { return created From Stream ; }
2953,"public void max Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Width (  )  ; "" )  ; }"
2954,public boolean has Balloon Style (  ) { return m Balloon Options . size (  )  > 0 ; }
2955,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
2956,"protected boolean should Drop Buffers To Keyframe ( long early Us, long elapsed Realtime Us, boolean is Last Buffer ) { return is Buffer Very Late ( early Us )  && !is Last Buffer ; }"
2957,public void destroy Scene (  ) { clear Animations (  )  ;  clear Cameras (  )  ;  clear Lights (  )  ;  clear Plugins (  )  ;  clear Children (  )  ;  clear Frame Callbacks (  )  ; }
2958,public void set Url (  String url ) { this . url = url ; }
2959,"public void save As Svg (  String paper Size,  Boolean landscape,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Svg ( %s, %s, %s )  ; "", wrap Quotes ( paper Size ) , landscape, wrap Quotes ( filename )  )  )  ; }"
2960,"public static  Typeface tangerine Bold (  Context context ) { return  Font Source Processor . process ( R . raw . tangerine_bold, context )  ; }"
2961,"public C and (  ) { where Conjunction = "" AND "" ;  return  ( C )  this ; }"
2962,public boolean is Resume Scheduled (  ) { return resume Scheduled ; }
2963,"public T [  ]  to Array ( T [  ]  a ) { final  Object [  ]  items = this . items ;  final  Reentrant Lock lock = this . lock ;  lock . lock (  )  ;  try {     final int count = this . count ;      final int len = a . length ;      if  ( len < count )          a =  ( T [  ]  )  java . lang . reflect .  Array . new Instance ( a . get Class (  )  . get Component Type (  ) , count )  ;      for  ( int i = take Index, k = 0 ;  k < count ;  i = inc ( i ) , k++ )  a [ k ]  =  ( T )  items [ i ]  ;      if  ( len > count )          a [ count ]  = null ;      return a ;  } finally {     lock . unlock (  )  ;  }}"
2964,public  Dalv Insn get ( int n ) { return  (  Dalv Insn )  get0 ( n )  ; }
2965,"public com . anychart . core . cartesian . series .  Width Based right (  String right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", wrap Quotes ( right )  )  )  ;  return this ; }"
2966,"public  Rev Object lookup Any (  Any Object Id id, int type ) {  Rev Object r = objects . get ( id )  ;  if  ( r == null )  {     switch ( type )  {         case  Constants . OBJ_COMMIT:             r = create Commit ( id )  ;              break ;          case  Constants . OBJ_TREE:             r = new  Rev Tree ( id )  ;              break ;          case  Constants . OBJ_BLOB:             r = new  Rev Blob ( id )  ;              break ;          case  Constants . OBJ_TAG:             r = new  Rev Tag ( id )  ;              break ;          default:             throw new  Illegal Argument Exception (  Message Format . format ( J Git Text . get (  )  . invalid Git Type,  Integer . value Of ( type )  )  )  ;      }     objects . add ( r )  ;  } return r ; }"
2967,"public void acquire Token ( final  Activity activity, final  String resource, final  String client Id, @ Nullable  String redirect Uri, @ Nullable final  String login Hint, @ Nullable final  Prompt Behavior prompt, @ Nullable  String extra Query Parameters, @ Nullable final  String claims, final  Authentication Callback< Authentication Result> callback ) { acquire Token ( resource, client Id, redirect Uri, login Hint, prompt, extra Query Parameters, claims, callback,  Event Strings . ACQUIRE_TOKEN_8, wrap Activity ( activity ) , false )  ; }"
2968,public void set Font File2 ( PDF Object font File2 ) { this . font File2 = font File2 ; }
2969,"public final boolean set Count ( E element, int old Count, int new Count ) { throw new  Unsupported Operation Exception (  )  ; }"
2970,"public static  Time Picker Dialog Fragment new Instance ( int reference, int theme Res Id ) { final  Time Picker Dialog Fragment frag = new  Time Picker Dialog Fragment (  )  ;   Bundle args = new  Bundle (  )  ;  args . put Int ( REFERENCE_KEY, reference )  ;  args . put Int ( THEME_RES_ID_KEY, theme Res Id )  ;  frag . set Arguments ( args )  ;  return frag ; }"
2971,public boolean is Finished (  ) { return finished ; }
2972,public  Node get Node (  ) { return data ; }
2973,"public void selected (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . selected (  )  ; "" )  ; }"
2974,public void warn (  String msg ) { synchronized  ( warnings )  {     warnings . add ( new  Warning ( msg )  )  ;  }}
2975,"public void min Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Height (  )  ; "" )  ; }"
2976,"public com . anychart . core . utils .  Legend Item Settings format (  String format ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . format ( %s )  ; "", wrap Quotes ( format )  )  )  ;  return this ; }"
2977,public final void ensure Header Parent (  ) { if  ( are Headers Sticky (  )  )  {     m Sticky Header Helper . ensure Header Parent (  )  ;  }}
2978,public static float to DIP From Pixel ( float value ) { return value /  Display Metrics Holder . get Window Display Metrics (  )  . density ; }
2979,"public com . anychart . core . axismarkers .  Gantt Line parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
2980,"public static  Class Name get Enclosed Class Name (  Class Name class Name ) { return  Class Name . get ( class Name . package Name (  ) , get Enclosed Name ( class Name )  )  ; }"
2981,"protected void on Pre Transform (  View view, float position ) { final float width = view . get Width (  )  ;   View Helper . set Rotation X ( view, 0 )  ;   View Helper . set Rotation Y ( view, 0 )  ;   View Helper . set Rotation ( view, 0 )  ;   View Helper . set Scale X ( view, 1 )  ;   View Helper . set Scale Y ( view, 1 )  ;   View Helper . set Pivot X ( view, 0 )  ;   View Helper . set Pivot Y ( view, 0 )  ;   View Helper . set Translation Y ( view, 0 )  ;   View Helper . set Translation X ( view, is Paging Enabled (  )  ? 0f : -width * position )  ;  if  ( hide Offscreen Pages (  )  )  {      View Helper . set Alpha ( view, position <= -1f || position >= 1f ? 0f : 1f )  ;  } else {      View Helper . set Alpha ( view, 1f )  ;  } if  ( m Custom Animation Interface != null )  {     if  ( h . contains Key ( view )  == false || h . get ( view )  . size (  )  == 1 )  {         if  ( position > -1 && position < 1 )  {             if  ( h . get ( view )  == null )  {                 h . put ( view, new  Array List< Float> (  )  )  ;              }             h . get ( view )  . add ( position )  ;              if  ( h . get ( view )  . size (  )  == 2 )  {                 float zero = h . get ( view )  . get ( 0 )  ;                  float cha = h . get ( view )  . get ( 1 )  - h . get ( view )  . get ( 0 )  ;                  if  ( zero > 0 )  {                     if  ( cha > -1 && cha < 0 )  {                         //in                         m Custom Animation Interface . on Prepare Next Item Show In Screen ( view )  ;                      } else {                         //out                         m Custom Animation Interface . on Prepare Current Item Leave Screen ( view )  ;                      }                 } else {                     if  ( cha > -1 && cha < 0 )  {                         //out                         m Custom Animation Interface . on Prepare Current Item Leave Screen ( view )  ;                      } else {                         //in                         m Custom Animation Interface . on Prepare Next Item Show In Screen ( view )  ;                      }                 }             }         }     } }}"
2982,public  String inner Name ( int nth ) { int i = inner Name Index ( nth )  ;  if  ( i == 0 )      return null ;  return const Pool . get Utf8 Info ( i )  ; }
2983,"public void to (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . to (  )  ; "" )  ; }"
2984,public void get Closest Point ( final  Vec2 out ) { switch ( m_count )  {     case 0:         assert  ( false )  ;          out . set Zero (  )  ;          return ;      case 1:         out . set ( m_v1 . w )  ;          return ;      case 2:         case22 . set ( m_v2 . w )  . mul Local ( m_v2 . a )  ;          case2 . set ( m_v1 . w )  . mul Local ( m_v1 . a )  . add Local ( case22 )  ;          out . set ( case2 )  ;          return ;      case 3:         out . set Zero (  )  ;          return ;      default:         assert  ( false )  ;          out . set Zero (  )  ;          return ;  }}
2985,"public void trend (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . trend (  )  ; "" )  ; }"
2986,"public com . anychart . core .  Separate Chart bounds (  String x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
2987,public  Re Plugin Config set Use Host Class If Not Found ( boolean use Host Class If Not Found ) { if  ( !check Allow Modify (  )  )  {     return this ;  } this . use Host Class If Not Found = use Host Class If Not Found ;  return this ; }
2988,public boolean is Outdated (  )  throws IO Exception{ if  ( live File == null || !live File . exists (  )  )      return false ;  return snapshot == null || snapshot . is Modified ( live File )  ; }
2989,"public void id (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . id (  )  ; "" )  ; }"
2990,"public long get Available Storage Space (  Storage Type storage Type ) { ensure Initialized (  )  ;  maybe Update Stats (  )  ;   Stat Fs stat FS = storage Type ==  Storage Type . INTERNAL ? m Internal Stat Fs : m External Stat Fs ;  if  ( stat FS != null )  {     long block Size, available Blocks ;      if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . JELLY_BEAN_MR2 )  {         block Size = stat FS . get Block Size Long (  )  ;          available Blocks = stat FS . get Available Blocks Long (  )  ;      } else {         block Size = stat FS . get Block Size (  )  ;          available Blocks = stat FS . get Available Blocks (  )  ;      }     return block Size * available Blocks ;  } return 0 ; }"
2991,"private PDF Glyph get Glyph From C Map ( PDF Font font, char src ) { int font ID = cmap . get Font ID ( src )  ;  char char ID = cmap . map ( src )  ;  if  ( font instanceof  Type0 Font )  {     font =  (  (  Type0 Font )  font )  . get Descendant Font ( font ID )  ;  } return font . get Cached Glyph ( char ID, null )  ; }"
2992,"public void mouse Out Opacity (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . mouse Out Opacity (  )  ; "" )  ; }"
2993,"public  Identify append (  String property, JSON Object values ) { add To User Properties (  Constants . AMP_OP_APPEND, property, values )  ;  return this ; }"
2994,"public void test Invoke Any Impl_null Tasks (  )  throws  Exception{  Listening Executor Service e = new Direct Executor Service (  )  ;  try {     invoke Any Impl ( e, null, false, 0,  Time Unit . NANOSECONDS )  ;      fail (  )  ;  } catch  (  Null Pointer Exception success )  { } finally {     join Pool ( e )  ;  }}"
2995,public static boolean can Morph (  Path Data Node [  ]  .  .  .  nodes ) { for  (  Path Data Node [  ]  path Data Node : nodes )  {     if  ( path Data Node == null )  {         return false ;      } } for  ( int i = 0 ;  i < nodes . length - 1 ;  i++ )  {     if  ( nodes [ i ]  . length != nodes [ i + 1 ]  . length )  {         return false ;      } } for  ( int i = 0 ;  i < nodes . length - 1 ;  i++ )  {     for  ( int j = 0 ;  j < nodes [ i ]  . length ;  j++ )  {         if  ( nodes [ i ]  [ j ]  . type != nodes [ i + 1 ]  [ j ]  . type || nodes [ i ]  [ j ]  . params . length != nodes [ i + 1 ]  [ j ]  . params . length )  {             return false ;          }     } } return true ; }
2996,static void in Foreground (  ) { in Background = false ; }
2997,public int get Last Soft Keyboard Height In Px (  ) { return last Soft Keyboard Height In Px ; }
2998,"public com . anychart . charts .  Scatter bounds (  String x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, height )  )  ;  return this ; }"
2999,"public com . anychart . core . annotations .  Triangle value Anchor (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . value Anchor ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
3000,"public com . anychart . charts .  Waterfall line Marker (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Marker ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
3001,"public static boolean showed Custom Toast (  Char Sequence message, int layout Resource Id To Check For Message ) {  Shadow Application shadow Application =  Shadow . extract (  Runtime Environment . get Application (  )  )  ;  for  (  Toast toast : shadow Application . get Shown Toasts (  )  )  {      String text =  (  (  Text View )  toast . get View (  )  . find View By Id ( layout Resource Id To Check For Message )  )  . get Text (  )  . to String (  )  ;      if  ( text . equals ( message . to String (  )  )  )  {         return true ;      } } return false ; }"
3002,"public com . anychart . core . stock . scrollerseries . OHLC rendering (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rendering ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3003,"public void update Children ( @ Non Null final  Map< String,  Object> update, @ Nullable final  Completion Listener listener ) { update Children Internal ( update, listener )  ; }"
3004,"public static int random Children Count (  String name ) { int dots = dot Count ( name )  ;  if  ( dots <= 1 )  {     return 3 ;  } else if  ( dots == 2 || dots == 3 )  {     return 9 ;  } else {     if  ( should Have Children With Probabilitz ( 0 . 5 )  )  {         return  Random Util . gaussian As Positive Int ( random, AVERAGE_CHILDREN_COUNT, CHILDREN_COUNT_VAR )  ;      } else {         return 0 ;      } }}"
3005,public  Builder can Interrupt And Move Layouts Between Threads ( boolean is Enabled ) { this . can Interrupt And Move Layouts Between Threads = is Enabled ;  return this ; }
3006,"public static  Group List Wrapper create Alphabetic List (  List< Selector> items ) { return create Alphabetic List ( items, ASCENDING )  ; }"
3007,public  Code Address get Start (  Basic Block block ) { return starts [ block . get Label (  )  ]  ; }
3008,"public static void notify Visible Bounds Changed ( final  Mount Delegate Target mount Delegate Target, final  Host host, final  Map< Render Core Extension<?, ?>,  Object> results ) { if  ( results != null )  {     final  Rect rect = new  Rect (  )  ;      host . get Local Visible Rect ( rect )  ;      for  (  Map .  Entry< Render Core Extension<?, ?>,  Object> e : results . entry Set (  )  )  {         final  Mount Extension<?, ?> extension = e . get Key (  )  . get Mount Extension (  )  ;          if  ( extension != null )  {             final  Extension State state = mount Delegate Target . get Extension State ( extension )  ;              if  ( state != null )  {                 extension . on Visible Bounds Changed ( state, rect )  ;              }         }     } }}"
3009,"public  Listener Handle add Config Changed Listener (  Config Changed Listener listener ) { return add Listener (  Config Changed Listener . class, listener )  ; }"
3010,"public static final  String get MD5 ( final  Input Stream is ) { if  ( is == null )  {     return null ;  } try {      Buffered Input Stream bis = new  Buffered Input Stream ( is )  ;       Message Digest md =  Message Digest . get Instance ( ""MD5"" )  ;       String Builder md5 Str = new  String Builder ( 32 )  ;      byte [  ]  buf = new byte [  Share Constants . MD5_FILE_BUF_LENGTH ]  ;      int read Count ;      while  (  ( read Count = bis . read ( buf )  )  != -1 )  {         md . update ( buf, 0, read Count )  ;      }     byte [  ]  hash Value = md . digest (  )  ;      for  ( int i = 0 ;  i < hash Value . length ;  i++ )  {         md5 Str . append (  Integer . to String (  ( hash Value [ i ]  & 0xff )  + 0x100, 16 )  . substring ( 1 )  )  ;      }     return md5 Str . to String (  )  ;  } catch  (  Exception e )  {     return null ;  }}"
3011,"public void dequeue (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . dequeue (  )  ; "" )  ; }"
3012,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
3013,public  Container<T> pad ( float pad ) {  Value value =  Fixed . value Of ( pad )  ;  pad Top = value ;  pad Left = value ;  pad Bottom = value ;  pad Right = value ;  return this ; }
3014,"public com . anychart . core . stock . scrollerseries .  Range Spline Area parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
3015,public  Input Stream get Resource As Stream (  String path ) {  Input Stream in = null ;  if  ( external Class Loader != null )  {     // classloader wants no leading slash     in = external Class Loader . get Resource As Stream ( path . substring ( 1 )  )  ;  } if  ( in == null )      in =  Interpreter . class . get Resource As Stream ( path )  ;  return in ; }
3016,"public void compute Range ( int start, int end )  throws IO Exception{  Blame Generator gen = generator ;  if  ( gen == null )      return ;  if  ( start == 0 && end == result Contents . size (  )  )  {     compute All (  )  ;      return ;  } while  ( start < end )  {     if  ( has Source Data ( start, end )  )          return ;      if  ( !gen . next (  )  )  {         gen . close (  )  ;          generator = null ;          return ;      }     load From ( gen )  ;      //  If the result contains either end of our current range bounds,     // update the bounds to avoid scanning that section during the     // next loop iteration .      int res Line = gen . get Result Start (  )  ;      int res End = gen . get Result End (  )  ;      if  ( res Line <= start && start < res End )          start = res End ;      if  ( res Line <= end && end < res End )          end = res Line ;  }}"
3017,public  Bounding Sphere get Bounding Sphere (  ) { if  ( m Bounding Sphere == null )  {     m Bounding Sphere = new  Bounding Sphere ( this )  ;  } return m Bounding Sphere ; }
3018,"private static void expect Write Success (  Object data, boolean include Sets, boolean include Updates ) {  Document Reference ref = test Document (  )  ;  if  ( include Sets )  {     assert Does Not Throw (  (  )  -> ref . set ( data )  )  ;      assert Does Not Throw (  (  )  -> ref . get Firestore (  )  . batch (  )  . set ( ref, data )  )  ;  } if  ( include Updates )  {     assert True ( ""update (  )  only support  Maps . "", data instanceof  Map )  ;      assert Does Not Throw (  (  )  -> {         @ Suppress Warnings ( ""unchecked"" )   Map< String,  Object> update Map =  (  Map< String,  Object> )  data ;          ref . update ( update Map )  ;      } )  ;      assert Does Not Throw (  (  )  -> {         @ Suppress Warnings ( ""unchecked"" )   Map< String,  Object> update Map =  (  Map< String,  Object> )  data ;          ref . get Firestore (  )  . batch (  )  . update ( ref, update Map )  ;      } )  ;  } wait For ( ref . get Firestore (  )  . run Transaction (  (  Function< Void> )   transaction -> {     if  ( include Sets )  {         assert Does Not Throw (  (  )  -> transaction . set ( ref, data )  )  ;      }     if  ( include Updates )  {         assert True ( ""update (  )  only support  Maps . "", data instanceof  Map )  ;          assert Does Not Throw (  (  )  -> {             @ Suppress Warnings ( ""unchecked"" )   Map< String,  Object> update Map =  (  Map< String,  Object> )  data ;              transaction . update ( ref, update Map )  ;          } )  ;      }     return null ;  } )  )  ; }"
3019,public boolean is Read Only (  ) { return read Only ; }
3020,"public com . anychart . standalones .  Color Range draw (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . draw (  )  ; "" )  ;  return this ; }"
3021,public void set Zoom Limits ( double [  ]  zoom Limits ) { m Zoom Limits = zoom Limits ; }
3022,"public  Animator on Appear ( @ Non Null  View Group scene Root, @ Nullable  Transition Values start Values, int start Visibility, @ Nullable  Transition Values end Values, int end Visibility ) { if  (  ( m Mode & MODE_IN )  != MODE_IN || end Values == null )  {     return null ;  } if  ( start Values == null )  {      Visibility Info parent Visibility Info = null ;       View end Parent =  (  View )  end Values . view . get Parent (  )  ;       Transition Values start Parent Values = get Matched Transition Values ( end Parent, false )  ;       Transition Values end Parent Values = get Transition Values ( end Parent, false )  ;      parent Visibility Info = get Visibility Change Info ( start Parent Values, end Parent Values )  ;      if  ( parent Visibility Info . visibility Change )  {         return null ;      } } final boolean is Forced Visibility = m Forced Start Visibility != -1 || m Forced End Visibility != -1 ;  if  ( is Forced Visibility )  {     //  Make sure that we reverse the effect of on Disappear's set Transition Alpha ( 0 )       Object saved Alpha = end Values . view . get Tag ( R . id . transition Alpha )  ;      if  ( saved Alpha instanceof  Float )  {         end Values . view . set Alpha (  (  Float )  saved Alpha )  ;          end Values . view . set Tag ( R . id . transition Alpha, null )  ;      } } return on Appear ( scene Root, end Values . view, start Values, end Values )  ; }"
3023,"private static  Reader new Non Buffer Filling Reader (  Reader reader ) { return new  Filter Reader ( reader )  {     @ Override     public int read ( char [  ]  cbuf, int off, int len )  throws IO Exception {         // with a len of 0 forever         if  ( len <= 0 )  {             fail ( ""read called with a len of "" + len )  ;          }         // shouldn't be a problem unless the buffer is shrinking each call         return in . read ( cbuf, off,  Math . max ( len - 1024, 0 )  )  ;      } } ; }"
3024,"public void falling Stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . falling Stroke (  )  ; "" )  ; }"
3025,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
3026,"private  String get Raw Target Sdk Version (  String default Sdk Version ) {  Optional< Xml Element> uses Sdk = get By Type And Key (  Manifest Model .  Node Types . USES_SDK, null )  ;  if  ( uses Sdk . is Present (  )  )  {      Optional< Xml Attribute> target Sdk Version = uses Sdk . get (  )  . get Attribute (  Xml Node . from Xml Name ( ""android:target Sdk Version"" )  )  ;      if  ( target Sdk Version . is Present (  )  )  {         return target Sdk Version . get (  )  . get Value (  )  ;      } } return get Raw Min Sdk Version ( default Sdk Version )  ; }"
3027,"public boolean delete ( int position ) { long key = get Key ( position, null )  ;  if  ( key == -1 )  {     return false ;  }  String condition = m DB Message . PRIMARY_KEY + ""="" + ""\'"" + key + ""\'"" ;  return delete ( condition, null )  ; }"
3028,"public com . anychart . charts .  Scatter top (  Number top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", top )  )  ;  return this ; }"
3029,"public void assert Completed Media Period Loads (  Media Period Id .  .  .  media Period Ids ) {  Timeline .  Period period = new  Timeline .  Period (  )  ;   Hash Set< Media Period Id> expected Loads = new  Hash Set<> (  Arrays . as List ( media Period Ids )  )  ;  for  (  Pair< Integer,  Media Period Id> window Index And Media Period Id : completed Loads )  {     int window Index = window Index And Media Period Id . first ;       Media Period Id media Period Id = window Index And Media Period Id . second ;      if  ( expected Loads . remove ( media Period Id )  )  {         int period Index = timeline . get Index Of Period ( media Period Id . period Uid )  ;          assert That ( window Index )  . is Equal To ( timeline . get Period ( period Index, period )  . window Index )  ;      } } assert With Message ( "" Not all expected media source loads have been completed . "" )  . that ( expected Loads )  . is Empty (  )  ; }"
3030,"public com . anychart . core . stock . indicators . EMA period (  Number period ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . period ( %s )  ; "", period )  )  ;  return this ; }"
3031,"public static  Immutable List< Spec Method Model< Update State Method,  Void>> get On Update State Methods (  Type Element type Element,  List< Class<? extends  Annotation>> permitted Inter Stage Input Annotations,  Messager messager ) { return extract On Update State Methods ( type Element, permitted Inter Stage Input Annotations, messager, false )  ; }"
3032,"private static int read Int ( byte [  ]  buffer, int offset ) { return  Ints . from Bytes ( buffer [ offset + 3 ] , buffer [ offset + 2 ] , buffer [ offset + 1 ] , buffer [ offset ]  )  ; }"
3033,public  String get Content Description (  ) { return m Content Description ; }
3034,"public static void put ( @ Non Null final  String key, final  Serializable value, final int save Time ) { put ( key, value, save Time, get Default Cache Double Utils (  )  )  ; }"
3035,"Index find Index (  String field ) { not Null ( field, error Message ( ""field can not be null"", VE_FIND_INDEX_NULL_INDEX )  )  ;  try {     read Lock . lock (  )  ;      return index Meta Service . find Index ( field )  ;  } finally {     read Lock . unlock (  )  ;  }}"
3036,public void set Parent Is Horizontal Scroll Container (  ) { m Parent Is Horizontal Scroll Container = true ;  m Touch Child Res Id = 0 ; }
3037,"public void prepare (  String tag,  Component Render Info component Render Info, @ Nullable  Size size ) { prepare ( tag, component Render Info, size, null )  ; }"
3038,public  Builder can Measure ( boolean can Measure ) { this . can Measure = can Measure ;  return this ; }
3039,"public com . anychart . charts .  Linear Gauge hatch Fill Palette ( com . anychart . palettes .  Hatch Fills settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill Palette ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
3040,private boolean should Log (  ) { return data Collection Helper . is Automatic Data Collection Enabled (  )  ; }
3041,"public static T not Empty ( final T chars ) { return not Empty ( chars, DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE )  ; }"
3042,"public  Builder seek ( long position Ms ) { return apply ( new  Seek ( tag, position Ms )  )  ; }"
3043,"protected static int write Event ( int tag, int value ) { add Event ( new  Event Builder ( tag, value )  . build (  )  )  ;  return  Integer . BYTES +  Integer . BYTES ; }"
3044,"public com . anychart . core . annotations .  Fibonacci Fan parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
3045,"static  Immutable Set< String> get Class Names For Sources (  Set< Source Path> sources, @ Nullable  Path jar File Path,  Project Filesystem project Filesystem,  Source Path Resolver Adapter resolver ) { if  ( jar File Path == null )  {     return  Immutable Set . of (  )  ;  }  Set< String> source Class Names =  Sets . new Hash Set With Expected Size ( sources . size (  )  )  ;  try {      Java Paths . get Expanded Source Paths ( sources . stream (  )  . map ( resolver::get Absolute Path )  . collect (  Immutable List . to Immutable List (  )  )  )  . stream (  )  . map (  More Paths::get Name Without Extension )  . for Each ( source Class Names::add )  ;  } catch  ( IO Exception e )  {     throw new  Buck Unchecked Execution Exception ( e, "" When determining possible java test class names . "" )  ;  }  Immutable Set .  Builder< String> test Class Names =  Immutable Set . builder (  )  ;   Path jar File = project Filesystem . get Path For Relative Path ( jar File Path )  ;   Zip File Traversal traversal = new  Zip File Traversal ( jar File )  {     @ Override     public void visit (  Zip File zip File,  Zip Entry zip Entry )  {          String name = new  File ( zip Entry . get Name (  )  )  . get Name (  )  ;          //  Ignore non- . class files .          if  ( !name . ends With ( "" . class"" )  )  {             return ;          }         //  As a heuristic for case  ( 2 )  as described in the  Javadoc, make sure the name of the         //  . class file matches the name of a  . java/ . scala/ . xxx file .           String name Without Dot Class = name . substring ( 0, name . length (  )  - "" . class"" . length (  )  )  ;          if  ( !source Class Names . contains ( name Without Dot Class )  )  {             return ;          }         // inner class .          if  ( !name . contains ( ""$"" )  )  {              String fully Qualified Name With Dot Class Suffix = zip Entry . get Name (  )  . replace ( '/', ' . ' )  ;               String class Name = fully Qualified Name With Dot Class Suffix . substring ( 0, fully Qualified Name With Dot Class Suffix . length (  )  - "" . class"" . length (  )  )  ;              test Class Names . add ( class Name )  ;          }     } } ;  try {     traversal . traverse (  )  ;  } catch  ( IO Exception e )  {     //  There's nothing sane to do here .   The jar file really should exist .      throw new  Runtime Exception ( e )  ;  } return test Class Names . build (  )  ; }"
3046,"void process Entry (  Canonical Tree Parser m,  Dir Cache Build Iterator i,  Working Tree Iterator f )  throws IO Exception{ if  ( m != null )  {     check Valid Path ( m )  ;      // what's currently in the index and working-tree to that one     if  ( i == null )  {         //  The index entry is missing         if  ( f != null && ! File Mode . TREE . equals ( f . get Entry File Mode (  )  )  && !f . is Entry Ignored (  )  )  {             if  ( fail On Conflict )  {                 // don't overwrite an untracked and not ignored file                 conflicts . add ( walk . get Path String (  )  )  ;              } else {                 // fail On Conflict is false .   Putting something to conflicts                 // would mean we delete it .   Instead we want the merge Commit                 // content to be checked out .                  update ( m . get Entry Path String (  ) , m . get Entry Object Id (  ) , m . get Entry File Mode (  )  )  ;              }         } else             update ( m . get Entry Path String (  ) , m . get Entry Object Id (  ) , m . get Entry File Mode (  )  )  ;      } else if  ( f == null || !m . id Equal ( i )  )  {         //  The working tree file is missing or the merge content differs         // from index content         update ( m . get Entry Path String (  ) , m . get Entry Object Id (  ) , m . get Entry File Mode (  )  )  ;      } else if  ( i . get Dir Cache Entry (  )  != null )  {         //  The index contains a file  ( and not a folder )          if  ( f . is Modified ( i . get Dir Cache Entry (  ) , true, this . walk . get Object Reader (  )  )  || i . get Dir Cache Entry (  )  . get Stage (  )  != 0 )              //  The working tree file is dirty or the index contains a             // conflict             update ( m . get Entry Path String (  ) , m . get Entry Object Id (  ) , m . get Entry File Mode (  )  )  ;          else {             // update the timestamp of the index with the one from the             // file if not set, as we are sure to be in sync here .               Dir Cache Entry entry = i . get Dir Cache Entry (  )  ;               Instant mtime = entry . get Last Modified Instant (  )  ;              if  ( mtime == null || mtime . equals (  Instant . EPOCH )  )  {                 entry . set Last Modified ( f . get Entry Last Modified Instant (  )  )  ;              }             keep ( i . get Entry Path String (  ) , entry, f )  ;          }     } else         //  The index contains a folder         keep ( i . get Entry Path String (  ) , i . get Dir Cache Entry (  ) , f )  ;  } else {     // what's currently in the index and working tree     if  ( f != null )  {         //  There is a file/folder for that path in the working tree         if  ( walk . is Directory File Conflict (  )  )  {             //  We put it in conflicts .   Even if fail On Conflict is false             // this would cause the path to be deleted .   Thats exactly what             // we want in this situation             conflicts . add ( walk . get Path String (  )  )  ;          } else {             // all entries are folders             if  ( i != null )  {                 //  .  .  .  and the working tree contained a file or folder                 // -> add it to the removed set and remove it from                 // conflicts set                 remove ( i . get Entry Path String (  )  )  ;                  conflicts . remove ( i . get Entry Path String (  )  )  ;              } else {             // untracked file, neither contained in tree to merge             // nor in index             }         }     } else {     //  There is no file/folder for that path in the working tree,     // nor in the merge head .      //  The only entry we have is the index entry .   Like the case     // where there is a file with the same name, remove it,     } }}"
3047,"public void dont Keep Presenter If Second Presenter Is In Presenter Manager (  ) {  Mvp View view1 = new  Mvp View (  )  { } ;   View android View1 =  Mockito . mock (  View . class )  ;   View State< Mvp View> view State1 =  Mockito . mock (  View State . class )  ;   Mvp Presenter< Mvp View> presenter1 =  Mockito . mock (  Mvp Presenter . class )  ;   Partial View Group Mvp View State Delegate Callback Impl callback1 =  Mockito . mock (  Partial View Group Mvp View State Delegate Callback Impl . class )  ;   Mockito . do Call Real Method (  )  . when ( callback1 )  . set Presenter ( presenter1 )  ;   Mockito . do Call Real Method (  )  . when ( callback1 )  . get Presenter (  )  ;   Mockito . do Call Real Method (  )  . when ( callback1 )  . set View State ( view State1 )  ;   Mockito . do Call Real Method (  )  . when ( callback1 )  . get View State (  )  ;   Mockito . when ( callback1 . get Mvp View (  )  )  . then Return ( view1 )  ;   Mockito . when ( callback1 . get Context (  )  )  . then Return ( activity )  ;   Mockito . when ( callback1 . create Presenter (  )  )  . then Return ( presenter1 )  ;   Mockito . when ( callback1 . create View State (  )  )  . then Return ( view State1 )  ;   Mockito . when ( android View1 . is In Edit Mode (  )  )  . then Return ( false )  ;   View Group Mvp View State Delegate Impl keep Delegate = new  View Group Mvp View State Delegate Impl<> ( android View1, callback1, true )  ;  keep Delegate . on Attached To Window (  )  ;  delegate = new  View Group Mvp View State Delegate Impl<> ( android View, callback, false )  ;  start View Group ( 1, 1, 1, 1, 1, 0, null, 0, 1, 0 )  ;  finish View Group ( 1, 1, true, false )  ;  delegate = new  View Group Mvp View State Delegate Impl<> ( android View, callback, false )  ;  start View Group ( 2, 2, 2, 2, 2, 0, null, 0, 2, 0 )  ;  finish View Group ( 2, 2, false, true )  ;  keep Delegate . on Detached From Window (  )  ; }"
3048,public  Tab Layout get Tab Layout (  ) { return m Tab Layout ; }
3049,public void set Walk Ignored Directories ( boolean include Ignored ) { state . walk Ignored = include Ignored ; }
3050,"public com . anychart . charts .  Cartesian interactivity ( com . anychart . enums .  Hover Mode settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . interactivity ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
3051,"public  Flexible Adapter<T> set Recursive Collapse ( boolean collapse Sub Levels ) { log . i ( "" Set set Auto Collapse Sub Levels=%s"", collapse Sub Levels )  ;  this . collapse Sub Levels = collapse Sub Levels ;  return this ; }"
3052,"public  Refresh Layout finish Refresh ( boolean success ) { if  ( success )  {     long pass Time =  System . current Time Millis (  )  - m Last Open Time ;      //保证加载动画有300毫秒的时间     int delayed =  (  Math . min (  Math . max ( 0, 300 -  ( int )  pass Time ) , 300 )  << 16 )  ;      return finish Refresh ( delayed, true,  Boolean . FALSE )  ;  } else {     return finish Refresh ( 0, false, null )  ;  }}"
3053,public void set Wake Up Flag ( boolean wakeup ) { int wake Up Sensor Mask = reflector ( _ Sensor_ . class )  . get Wake Up Sensor Flag (  )  ;  if  ( wakeup )  {     set Mask ( wake Up Sensor Mask )  ;  } else {     clear Mask ( wake Up Sensor Mask )  ;  }}
3054,"public static  Path get Scratch Path (  Project Filesystem filesystem,  Build Target target,  String format ) {  Preconditions . check Argument ( !format . starts With ( ""/"" ) , ""format string should not start with a slash"" )  ;  return filesystem . get Buck Paths (  )  . get Scratch Dir (  )  . resolve ( get Base Path ( filesystem, target, format )  . to Path ( filesystem . get File System (  )  )  )  ; }"
3055,"public com . anychart . core . cartesian . series .  Column3d max Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
3056,"public static void write To Path (  Bit Matrix matrix,  String format,  Path file,  Matrix To Image Config config )  throws IO Exception{  Buffered Image image = to Buffered Image ( matrix, config )  ;  if  ( ! Image IO . write ( image, format, file . to File (  )  )  )  {     throw new IO Exception ( "" Could not write an image of format "" + format + "" to "" + file )  ;  }}"
3057,"private void process Frame Text (  Web Socket Impl web Socket Impl,  Framedata frame )  throws  Invalid Data Exception{ try {     web Socket Impl . get Web Socket Listener (  )  . on Websocket Message ( web Socket Impl,  Charsetfunctions . string Utf8 ( frame . get Payload Data (  )  )  )  ;  } catch  (  Runtime Exception e )  {     log Runtime Exception ( web Socket Impl, e )  ;  }}"
3058,public void prelaunch Bundle (  Bundle bundle ) {}
3059,"public void stagger Max Lines (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stagger Max Lines (  )  ; "" )  ; }"
3060,"public  Event Dispatcher with Parameters ( int window Index, @ Nullable  Media Period Id media Period Id, long media Time Offset Ms ) { return new  Event Dispatcher ( listener And Handlers, window Index, media Period Id, media Time Offset Ms )  ; }"
3061,public void create Parent Dirs (  Path path Relative To Project Root )  throws IO Exception{  Path file = resolve ( path Relative To Project Root )  ;   Path directory = file . get Parent (  )  ;  mkdirs ( directory )  ; }
3062,"public static  Build Target Spec from (  Unconfigured Build Target With Outputs target With Outputs ) { return  Immutable Build Target Spec . of ( target With Outputs,  Build File Spec . from Unconfigured Build Target ( target With Outputs . get Build Target (  )  )  )  ; }"
3063,"public void add (  String key,  String value ) { mapping . add ( new  Pair ( key, value )  )  ; }"
3064,"public void start (  ) {  Util . validate Main Thread (  )  ;  thread = new  Handler Thread ( TAG )  ;  thread . start (  )  ;  handler = new  Handler ( thread . get Looper (  ) , callback )  ;  running = true ;  request Next Preview (  )  ; }"
3065,"protected  Generic Audio Header get Encoding Info ( final  Random Access File raf )  throws  Cannot Read Exception, IO Exception{ raf . seek ( 0 )  ;   Generic Audio Header info ;  try {     final  Asf Header header =  Asf Header Reader . read Info Header ( raf )  ;      if  ( header == null )  {         throw new  Cannot Read Exception ( "" Some values must have been "" + ""incorrect for interpretation as asf with wma content . "" )  ;      }     info = get Audio Header ( header )  ;  } catch  ( final  Exception e )  {     if  ( e instanceof IO Exception )  {         throw  ( IO Exception )  e ;      } else if  ( e instanceof  Cannot Read Exception )  {         throw  (  Cannot Read Exception )  e ;      } else {         throw new  Cannot Read Exception ( "" Failed to read .   Cause: "" + e . get Message (  ) , e )  ;      } } return info ; }"
3066,public void set Boom In Whole Screen ( boolean boom In Whole Screen ) { this . boom In Whole Screen = boom In Whole Screen ; }
3067,private static float magnitude To Color ( double magnitude ) { if  ( magnitude < 1 . 0 )  {     return  Bitmap Descriptor Factory . HUE_CYAN ;  } else if  ( magnitude < 2 . 5 )  {     return  Bitmap Descriptor Factory . HUE_GREEN ;  } else if  ( magnitude < 4 . 5 )  {     return  Bitmap Descriptor Factory . HUE_YELLOW ;  } else {     return  Bitmap Descriptor Factory . HUE_RED ;  }}
3068,"public void add32bit ( int value ) { add ( value >> 24, value >> 16, value >> 8, value )  ; }"
3069,public void test First Time (  ) { boolean should Update =  Update Policy . NOW . should Update ( null )  ;  assert True ( should Update )  ; }
3070,"public void update ( @ Nullable  Authorization Response auth Response, @ Nullable  Authorization Exception auth Exception ) { check Argument ( auth Response != null ^ auth Exception != null, ""exactly one of auth Response or auth Exception should be non-null"" )  ;  if  ( auth Exception != null )  {     if  ( auth Exception . type ==  Authorization Exception . TYPE_OAUTH_AUTHORIZATION_ERROR )  {         m Authorization Exception = auth Exception ;      }     return ;  } // the last token response and refresh token are now stale, as they are associated with // any previous authorization response m Last Authorization Response = auth Response ;  m Config = null ;  m Last Token Response = null ;  m Refresh Token = null ;  m Authorization Exception = null ;  // if the response's m Scope is null, it means that it equals that of the request // see: https://tools . ietf . org/html/rfc6749#section-5 . 1 m Scope =  ( auth Response . scope != null )  ? auth Response . scope : auth Response . request . scope ; }"
3071,"private  Animator get Value Animator By Custom (  ) { final int height = m Puppet . get Layout Params (  )  . height ;  final int width = m Puppet . get Layout Params (  )  . width ;   Property Bean start Property Bean = new  Property Bean ( 0xff009688, 0f, 1f )  ;   Property Bean end Property Bean = new  Property Bean ( 0xff795548, 360f, 3 . 0f )  ;  //         Value Animator value Animator =  Value Animator . of Object ( new  My Type Evaluator (  ) ,start Property Bean,end Property Bean )  ;   Value Animator value Animator = new  Value Animator (  )  ;  value Animator . set Duration ( 3000 )  ;  //custom interpolator value Animator . set Interpolator ( new  Speed Up Interpolator (  )  )  ;  value Animator . set Repeat Mode (  Value Animator . REVERSE )  ;  value Animator . set Repeat Count ( 1 )  ;  value Animator . set Object Values ( start Property Bean, end Property Bean )  ;  //custom evaluator value Animator . set Evaluator ( new  My Type Evaluator (  )  )  ;  value Animator . add Update Listener ( new  Value Animator .  Animator Update Listener (  )  {     @ Override     public void on Animation Update (  Value Animator value Animator )  {          Property Bean property Bean =  (  Property Bean )  value Animator . get Animated Value (  )  ;          if  ( property Bean . get Background Color (  )  != 0 && property Bean . get Background Color (  )  != 1 )  {             m Puppet . set Background Color ( property Bean . get Background Color (  )  )  ;          }         m Puppet . set Rotation X ( property Bean . get Rotation X (  )  )  ;          m Puppet . get Layout Params (  )  . height =  ( int )   ( height * property Bean . get Size (  )  )  ;          m Puppet . get Layout Params (  )  . width =  ( int )   ( width * property Bean . get Size (  )  )  ;          m Puppet . request Layout (  )  ;      //                m Puppet . post Invalidate (  )  ;      } } )  ;  return value Animator ; }"
3072,public void set User Awareness Listener (  User Awareness Listener listener ) { m User Awareness Listener = listener ; }
3073,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
3074,public void set Max Object Size Limit ( long limit ) { max Object Size Limit = limit ; }
3075,"public void read Results From Stub (  Type Mirror result Type,  Method Spec .  Builder method Builder ) {}"
3076,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
3077,public boolean is_consuming (  ) { return _consuming ; }
3078,"protected void hide Action (  Tooltip tooltip ) { tooltip . container . add Action ( sequence ( parallel ( alpha ( 0 . 2f, 0 . 2f, fade ) , scale To ( 0 . 05f, 0 . 05f, 0 . 2f,  Interpolation . fade )  ) , remove Actor (  )  )  )  ; }"
3079,"public static int decode U Int16 ( final byte [  ]  intbuf, final int offset ) { int r =  ( intbuf [ offset ]  & 0xff )  << 8 ;  return r |  ( intbuf [ offset + 1 ]  & 0xff )  ; }"
3080,"public com . anychart . core . utils .  Animation animation (  ) { return new com . anychart . core . utils .  Animation ( js Base + "" . animation (  ) "" )  ; }"
3081,"public void inverse Transform (  Number ratio ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . inverse Transform ( %s )  ; "", ratio )  )  ; }"
3082,"public static float parse Percentage (  String s )  throws  Number Format Exception{ if  ( !s . ends With ( ""%"" )  )  {     throw new  Number Format Exception ( "" Percentages must end with %"" )  ;  } return  Float . parse Float ( s . substring ( 0, s . length (  )  - 1 )  )  / 100 ; }"
3083,"private void add Ground Overlays (  Hash Map< Kml Ground Overlay,  Ground Overlay> ground Overlays,  Iterable< Kml Container> kml Containers ) { add Ground Overlays ( ground Overlays )  ;  for  (  Kml Container container : kml Containers )  {     add Ground Overlays ( container . get Ground Overlay Hash Map (  ) , container . get Containers (  )  )  ;  }}"
3084,"protected void set Output Argument Value (  Action Invocation< Local Service> action Invocation,  Action Argument< Local Service> argument,  Object result )  throws  Action Exception{  Local Service service = action Invocation . get Action (  )  . get Service (  )  ;  if  ( result != null )  {     try {         if  ( service . is String Convertible Type ( result )  )  {             log . fine ( "" Result of invocation matches convertible type, setting to String (  )  single output argument value"" )  ;              action Invocation . set Output ( new  Action Argument Value ( argument, result . to String (  )  )  )  ;          } else {             log . fine ( "" Result of invocation is  Object, setting single output argument value"" )  ;              action Invocation . set Output ( new  Action Argument Value ( argument, result )  )  ;          }     } catch  (  Invalid Value Exception ex )  {         throw new  Action Exception (  Error Code . ARGUMENT_VALUE_INVALID, "" Wrong type or invalid value for '"" + argument . get Name (  )  + ""': "" + ex . get Message (  ) , ex )  ;      } } else {     log . fine ( "" Result of invocation is null, not setting any output argument value ( s ) "" )  ;  }}"
3085,"public com . anychart . core . annotations .  Fibonacci Fan container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
3086,"public void test Write Empty Pack1 (  )  throws IO Exception{ create Verify Open Pack ( NONE, NONE, false, false )  ;  assert Equals ( 0, writer . get Object Count (  )  )  ;  assert Equals ( 0, pack . get Object Count (  )  )  ;  assert Equals ( ""da39a3ee5e6b4b0d3255bfef95601890afd80709"", writer . compute Name (  )  . name (  )  )  ; }"
3087,public int get Wide Color Gamut Value (  ) { return wide Color Gamut_ ; }
3088,"protected  Packed Object Info new Info (  Any Object Id id,  Unresolved Delta delta,  Object Id delta Base ) {  Packed Object Info oe = new  Packed Object Info ( id )  ;  if  ( delta != null )      oe . set CRC ( delta . crc )  ;  return oe ; }"
3089,"protected void task Failed (  Asset Descriptor asset Desc,  Runtime Exception ex ) { throw ex ; }"
3090,public  Builder set Nav Hidden ( com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Nav Hidden value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } nav Hidden_ = value . get Number (  )  ;  on Changed (  )  ;  return this ; }
3091,"private static boolean is At Statement (  Psi Element element ) {  Buck Statement statement =  Psi Tree Util . get Parent Of Type ( element,  Buck Statement . class )  ;  return statement != null && statement . get Text Range (  )  . get Start Offset (  )  == element . get Text Range (  )  . get Start Offset (  )  ; }"
3092,public  List< Pie Model> get Data (  ) { return m Pie Data ; }
3093,public  Http Request get Request (  ) { return request ; }
3094,"protected  View on Create View (  String name,  Attribute Set attrs )  throws  Class Not Found Exception{ //  This mimics the {@code  Phone Layout Inflater} in the way it tries to inflate the base // classes, if this fails its pretty certain the app will fail at this point .   View view = null ;  for  (  String prefix : s Class Prefix List )  {     try {         view = create View ( name, prefix, attrs )  ;      } catch  (  Class Not Found Exception ignored )  {     } } // at it .  if  ( view == null )  {     view = super . on Create View ( name, attrs )  ;  } return m Parallax Factory . on View Created ( view, view . get Context (  ) , attrs )  ; }"
3095,public byte get Revision (  ) { return REVISION ; }
3096,public com . didiglobal . booster . aapt2 .  Resources .  Source Position Or Builder get Source Or Builder (  ) { return get Source (  )  ; }
3097,public com . facebook . buck . remoteexecution . proto . RE Session ID Or Builder get Re Session Id Or Builder (  ) { if  ( re Session Id Builder_ != null )  {     return re Session Id Builder_ . get Message Or Builder (  )  ;  } else {     return re Session Id_ == null ? com . facebook . buck . remoteexecution . proto . RE Session ID . get Default Instance (  )  : re Session Id_ ;  }}
3098,"private void set Font Weight ( @ Nullable  String font Weight String ) { int font Weight Numeric = font Weight String != null ? parse Numeric Font Weight ( font Weight String )  : -1 ;  int font Weight = UNSET ;  if  ( font Weight Numeric >= 500 || ""bold"" . equals ( font Weight String )  )  {     font Weight =  Typeface . BOLD ;  } else if  ( ""normal"" . equals ( font Weight String )  ||  ( font Weight Numeric != -1 && font Weight Numeric < 500 )  )  {     font Weight =  Typeface . NORMAL ;  } if  ( font Weight != m Font Weight )  {     m Font Weight = font Weight ;  }}"
3099,"public com . anychart . core . ui .  Scroll Bar background Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3100,"public void text Indent (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . text Indent (  )  ; "" )  ; }"
3101,"public void id (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . id (  )  ; "" )  ; }"
3102,public void set Change Alpha When Press ( boolean change Alpha When Press ) { get Alpha View Helper (  )  . set Change Alpha When Press ( change Alpha When Press )  ; }
3103,"public com . anychart . charts .  Tree Map headers (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . headers ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3104,"public static void show Toast When Possible (  Context context,  String message ) {  Activity activity =  Restarter . get Foreground Activity ( context )  ;  if  ( activity != null )  {      Restarter . show Toast ( activity, message )  ;  } else {     //  Only try for about 10 seconds     show Toast When Possible ( context, message, 10 )  ;  }}"
3105,"public final void set Tags (  Map< String,  String> tags ) { this . tags = tags ; }"
3106,public boolean is Proxy Feature Supported (  ) { return proxy Feature Supported ; }
3107,"public  Storage Reference get Reference From Url ( @ Non Null  String full Url ) {  Preconditions . check Argument ( ! Text Utils . is Empty ( full Url ) , ""location must not be null or empty"" )  ;   String lower Case Location = full Url . to Lower Case (  )  ;  if  ( lower Case Location . starts With ( ""gs://"" )  || lower Case Location . starts With ( ""https://"" )  || lower Case Location . starts With ( ""http://"" )  )  {     try {          Uri uri =  Util . normalize ( m App, full Url )  ;          if  ( uri == null )  {             throw new  Illegal Argument Exception ( STORAGE_URI_PARSE_EXCEPTION )  ;          }         return get Reference ( uri )  ;      } catch  (  Unsupported Encoding Exception e )  {          Log . e ( TAG, "" Unable to parse location:"" + full Url, e )  ;          throw new  Illegal Argument Exception ( STORAGE_URI_PARSE_EXCEPTION )  ;      } } else {     throw new  Illegal Argument Exception ( STORAGE_URI_PARSE_EXCEPTION )  ;  }}"
3108,"public static final boolean read From Stream (  Input Stream in, byte [  ]  buf, int offset, int len )  throws IO Exception{ int total Bytes Read = 0 ;  while  ( total Bytes Read < len )  {     int bytes Read = in . read ( buf, offset + total Bytes Read, len - total Bytes Read )  ;      if  ( bytes Read < 0 )  {         return false ;      }     total Bytes Read += bytes Read ;  } return true ; }"
3109,"private void check Transform Config (  Transform opr Transform,  Transform inject Transform ) { assert  ( opr Transform . get Input Types (  )  . equals ( inject Transform . get Output Types (  )  )  )  ; }"
3110,"public boolean get Aapt No Resource Removal (  ) { return delegate . get Boolean ( ""android"", ""aapt_no_resource_removal"" )  . or Else ( false )  ; }"
3111,"public com . anychart . core . cartesian . series .  Column3d min Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", width )  )  ;  return this ; }"
3112,public com . facebook . buck . remoteexecution . proto .  Buck Info Or Builder get Buck Info Or Builder (  ) { if  ( buck Info Builder_ != null )  {     return buck Info Builder_ . get Message Or Builder (  )  ;  } else {     return buck Info_ == null ? com . facebook . buck . remoteexecution . proto .  Buck Info . get Default Instance (  )  : buck Info_ ;  }}
3113,"Value Changed Callback get Value Changed Callback ( @ Nullable final  Object attribute ) {  Value Changed Callback callback = value Changed Callbacks . get ( attribute )  ;  if  ( callback == null )  {     callback = new  Value Changed Callback ( this )  ;      if  ( attribute != null )  {         value Changed Callbacks . put ( attribute, callback )  ;      } } return callback . free (  )  ; }"
3114,"Mount Item get Accessible Mount Item (  ) { for  ( int i = 0 ;  i < get Mount Item Count (  )  ;  i++ )  {      Mount Item item = get Mount Item At ( i )  ;      //  For inexplicable reason, item is null sometimes .      if  ( item != null && get Layout Output ( item )  . is Accessible (  )  )  {         return item ;      } } return null ; }"
3115,"public com . anychart . core . gantt . edit .  Structure Edit placement Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . placement Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3116,"public void save As Svg (  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Svg ( %s, %s )  ; "", width, height )  )  ; }"
3117,"public  Map< String,  String> get Native Props (  ) { return  View Manager Property Updater . get Native Props ( get Class (  ) , get Shadow Node Class (  )  )  ; }"
3118,"public  String read String (  )  throws IO Exception{ int len = read Length (  )  ;  if  ( len == 0 )  {     //$NON-NLS-1$     log . debug ( ""git< 0000"" )  ;      return END ;  } if  ( len == 1 )  {     //$NON-NLS-1$     log . debug ( ""git< 0001"" )  ;      return DELIM ;  } // length header  ( 4 bytes )  len -= 4 ;  if  ( len == 0 )  {     //$NON-NLS-1$     log . debug ( ""git< "" )  ;      //$NON-NLS-1$     return """" ;  } byte [  ]  raw ;  if  ( len <= line Buffer . length )      raw = line Buffer ;  else     raw = new byte [ len ]  ;  IO . read Fully ( in, raw, 0, len )  ;  if  ( raw [ len - 1 ]  == '\n' )      len-- ;   String s =  Raw Parse Utils . decode ( UTF_8, raw, 0, len )  ;  //$NON-NLS-1$ log . debug ( ""git< "" + s )  ;  return s ; }"
3119,"public static  String to String Exclude (  Object object,  Collection< String> exclude Field Names ) { return to String Exclude ( object, to No Null String Array ( exclude Field Names )  )  ; }"
3120,public void set Button ( int button ) { this . button = button ; }
3121,public void add Header Click Listener ( final  Table Header Click Listener listener ) { listeners . add ( listener )  ; }
3122,public int get Resize Check Delay (  ) { return resize Check Delay ; }
3123,public void remove Tile Set ( int index ) { tilesets . remove Index ( index )  ; }
3124,"public static  Glide Options size Multiplier Of ( @ Float Range ( from = 0 . 0, to = 1 . 0 )  float value ) { return new  Glide Options (  )  . size Multiplier ( value )  ; }"
3125,"public com . anychart . charts .  Pert min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
3126,"public void share With Facebook (  String caption Or Options,  String link,  String name,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Facebook ( %s, %s, %s, %s )  ; "", wrap Quotes ( caption Or Options ) , wrap Quotes ( link ) , wrap Quotes ( name ) , wrap Quotes ( description )  )  )  ; }"
3127,"private synchronized  Producer< Encoded Image> get Background Local Content Uri Fetch To Encode Memory Sequence (  ) { if  (  Fresco Systrace . is Tracing (  )  )  {      Fresco Systrace . begin Section ( "" Producer Sequence Factory#get Background Local Content Uri Fetch To Encode Memory Sequence"" )  ;  } if  ( m Background Local Content Uri Fetch To Encoded Memory Sequence == null )  {     if  (  Fresco Systrace . is Tracing (  )  )  {          Fresco Systrace . begin Section ( "" Producer Sequence Factory#get Background Local Content Uri Fetch To Encode Memory Sequence:init"" )  ;      }     final  Local Content Uri Fetch Producer local File Fetch Producer = m Producer Factory . new Local Content Uri Fetch Producer (  )  ;      final  Producer< Encoded Image> to Encoded Multiplex Producer = new Encoded Cache Multiplex To Transcode Sequence ( local File Fetch Producer )  ;      m Background Local Content Uri Fetch To Encoded Memory Sequence = m Producer Factory . new Background Thread Handoff Producer ( to Encoded Multiplex Producer, m Thread Handoff Producer Queue )  ;      if  (  Fresco Systrace . is Tracing (  )  )  {          Fresco Systrace . end Section (  )  ;      } } if  (  Fresco Systrace . is Tracing (  )  )  {      Fresco Systrace . end Section (  )  ;  } return m Background Local Content Uri Fetch To Encoded Memory Sequence ; }"
3128,public boolean contains ( int index ) { return index >= get First (  )  && index <= get Last (  )  ; }
3129,"public com . anychart . charts .  Heat Map legend (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . legend ( %s )  ; "", settings )  )  ;  return this ; }"
3130,public void set Images (  List< String> images ) { this . images = images ; }
3131,public void get Notification When File Uploaded (  Thread thread ) {  Chat SDK . events (  )  . source On Main (  )  . filter (  Network Event . filter Type (  Event Type .  Message Send Status Updated )  )  . subscribe (  network Event -> {      Message Send Progress progress =  (  Message Send Progress )  network Event . get Data (  )  . get (  Network Event .  Message Send Progress )  ;      if  ( progress . get Status (  )  ==  Message Send Status .  Uploading )  {     }     if  ( progress . get Status (  )  ==  Message Send Status .  Sent )  {     } } )  ; }
3132,public  Builder<T Fragment> set Pages Colors ( @ Non Null int [  ]  pages Colors ) { m Pages Colors = pages Colors ;  return this ; }
3133,"public static  Set Multimap<K, V> new Set Multimap (  Map<K,  Collection<V>> map, final  Supplier<? extends  Set<V>> factory ) { return new  Custom Set Multimap<> ( map, factory )  ; }"
3134,"public static  String get Content As String ( byte [  ]  content,  Charset charset ) { if  ( charset == null )  {     throw new  Illegal Argument Exception ( "" Charset cannot be null"" )  ;  } return new  String ( content, charset )  ; }"
3135,"public com . anychart . core . stock . indicators . MFI series (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . series ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
3136,public void fixed Animation (  String name ) { if  ( anim Map . is Empty (  )  )      return ;   Base Anim anim = anim Map . get ( name )  ;  //        anim . animating = true ;  if  ( anim . animating )      do Animation ( anim )  ; }
3137,public int get Unicast Address (  ) { return unicast Address ; }
3138,"public com . anychart . core . axes .  Ticks parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
3139,"public boolean key Up (  Input Event event, int keycode ) { return false ; }"
3140,"public  Node replace Child (  Node new Child,  Node old Child )  throws DOM Exception{ disallow Modification (  )  ;  return null ; }"
3141,public int get Audio Route (  ) { return audio Route ; }
3142,"public void test Empty Uri (  ) { assert Null (  Issue Uri Matcher . get Issue (  Uri . parse ( """" )  )  )  ; }"
3143,public void delete Database (  ) { close (  )  ;  m Database File . delete (  )  ; }
3144,"public  Optional< Boolean> get Skip Crunch Pngs Default (  ) { return delegate . get Boolean ( ""android"", ""aapt_compile_skip_crunch_pngs_default"" )  ; }"
3145,"public void test Read Simple Packed Ref Same Repo (  )  throws IO Exception{  Ref ref = db . exact Ref ( ""refs/heads/master"" )  ;   Object Id pid = db . resolve ( ""refs/heads/master^"" )  ;  assert Equals (  Storage . PACKED, ref . get Storage (  )  )  ;   Ref Update update Ref = db . update Ref ( ""refs/heads/master"" )  ;  update Ref . set New Object Id ( pid )  ;  update Ref . set Force Update ( true )  ;   Result update = update Ref . update (  )  ;  assert Equals (  Result . FORCED, update )  ;  ref = db . exact Ref ( ""refs/heads/master"" )  ;  assert Equals (  Storage . LOOSE, ref . get Storage (  )  )  ; }"
3146,void drop All Indices (  ) { try {     write Lock . lock (  )  ;      indexing Service . drop All Indices (  )  ;  } finally {     write Lock . unlock (  )  ;  }}
3147,public static boolean is Primitive (  Class c ) { return c . is Primitive (  )  ; }
3148,"void test Build Poor Wizard (  ) { final var character =  Character Step Builder . new Builder (  )  . name ( "" Merlin"" )  . wizard Class ( ""alchemist"" )  . no Spell (  )  . build (  )  ;  assert Equals ( "" Merlin"", character . get Name (  )  )  ;  assert Equals ( ""alchemist"", character . get Wizard Class (  )  )  ;  assert Null ( character . get Spell (  )  )  ;  assert Null ( character . get Abilities (  )  )  ;  assert Not Null ( character . to String (  )  )  ; }"
3149,"public com . anychart . core . polar . series .  Range Column parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
3150,"public boolean add Namespace (  String namespace )  throws  Illegal State Exception, IO Exception,  Transient Network Disconnection Exception,  No Connection Exception{ check Connectivity (  )  ;  if  (  Text Utils . is Empty ( namespace )  )  {     throw new  Illegal Argument Exception ( ""namespace cannot be empty"" )  ;  } if  ( m Namespace List . contains ( namespace )  )  {     LOGD ( TAG, "" Ignoring to add a namespace that is already added . "" )  ;      return false ;  } try {      Cast .  Cast Api . set Message Received Callbacks ( m Api Client, namespace, this )  ;      m Namespace List . add ( namespace )  ;      return true ;  } catch  ( IO Exception e )  {     LOGE ( TAG, "" Failed to add namespace"", e )  ;  } catch  (  Illegal State Exception e )  {     LOGE ( TAG, "" Failed to add namespace"", e )  ;  } return false ; }"
3151,"public com . anychart . core . cartesian . series .  Base With Markers width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
3152,"public com . anychart . core . annotations .  Fibonacci Base bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
3153,"public static byte [  ]  build Nal Unit ( byte [  ]  data, int offset, int length ) { byte [  ]  nal Unit = new byte [ length + NAL_START_CODE . length ]  ;   System . arraycopy ( NAL_START_CODE, 0, nal Unit, 0, NAL_START_CODE . length )  ;   System . arraycopy ( data, offset, nal Unit, NAL_START_CODE . length, length )  ;  return nal Unit ; }"
3154,public void copy To (  Writer w )  throws IO Exception{ w . write ( to Hex Char Array (  )  )  ; }
3155,public static X Path Reader create Reader (  )  throws SAX Path Exception{  String class Name = null ;  try {     class Name =  System . get Property ( DRIVER_PROPERTY )  ;  } catch  (  Security Exception e )  { // we'll use the default } if  ( class Name == null || class Name . length (  )  == 0 )  {     class Name = DEFAULT_DRIVER ;  } return create Reader ( class Name )  ; }
3156,"protected void generate Change Set (  Section Context c,  Change Set change Set,  Section Context previous Context,  Section previous,  Section Context next Context,  Section next ) {}"
3157,public int get Max Scroll Amount Y (  ) { return  ( int )   ( MAX_SCROLL_FACTOR *  ( get Bottom (  )  - get Top (  )  )  )  ; }
3158,public short get Contour End Point ( int index ) { return contour End Pts [ index ]  ; }
3159,"private void merge (  Manifest into,  Manifest from ) {  Attributes attributes = from . get Main Attributes (  )  ;  if  ( attributes != null )  {     for  (  Map .  Entry< Object,  Object> attribute : attributes . entry Set (  )  )  {         into . get Main Attributes (  )  . put ( attribute . get Key (  ) , attribute . get Value (  )  )  ;      } }  Map< String,  Attributes> entries = from . get Entries (  )  ;  if  ( entries != null )  {     for  (  Map .  Entry< String,  Attributes> entry : entries . entry Set (  )  )  {          Attributes existing = into . get Attributes ( entry . get Key (  )  )  ;          if  ( existing == null )  {             existing = new  Attributes (  )  ;              into . get Entries (  )  . put ( entry . get Key (  ) , existing )  ;          }         existing . put All ( entry . get Value (  )  )  ;      } }}"
3160,"public T get (  String key,  Class<T> clazz ) { return  ( T )  get ( key )  ; }"
3161,"public void success (  String message ) { send Plugin Result ( new  Plugin Result (  Plugin Result .  Status . OK, message )  )  ; }"
3162,public boolean supports Configuration (  ) { return provisioner Address != null ; }
3163,"public com . anychart . charts .  Tree Map select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
3164,public static boolean has Navigation Bar ( @ Non Null  Activity activity ) {  Bar Config config = new  Bar Config ( activity )  ;  return config . has Navigation Bar (  )  ; }
3165,"public com . anychart . standalones .  Data Grid left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
3166,"public void authority With Multiple At Signs (  )  throws  Exception{  Http Url http Url = parse ( ""http://foo@bar@baz/path"" )  ;  assert That ( http Url . username (  )  )  . is Equal To ( ""foo@bar"" )  ;  assert That ( http Url . password (  )  )  . is Equal To ( """" )  ;  assert That ( http Url )  . is Equal To ( parse ( ""http://foo%40bar@baz/path"" )  )  ; }"
3167,public T from (  String file Path ) { m Input Source = new  Input Source .  File Source ( file Path )  ;  return self (  )  ; }
3168,"public byte [  ]  encode ( byte [  ]  p Array ) { reset (  )  ;  if  ( p Array == null || p Array . length == 0 )  {     return p Array ;  } long len = get Encode Length ( p Array, line Length, line Separator )  ;  byte [  ]  buf = new byte [  ( int )  len ]  ;  set Initial Buffer ( buf, 0, buf . length )  ;  encode ( p Array, 0, p Array . length )  ;  //  Notify encoder of EOF .  encode ( p Array, 0, -1 )  ;  //  Encoder might have resized, even though it was unnecessary .  if  ( buffer != buf )  {     read Results ( buf, 0, buf . length )  ;  } // final length is a bit smaller .  if  ( is Url Safe (  )  && pos < buf . length )  {     byte [  ]  smaller Buf = new byte [ pos ]  ;       System . arraycopy ( buf, 0, smaller Buf, 0, pos )  ;      buf = smaller Buf ;  } return buf ; }"
3169,public  Ijk Player View set Skip Tip ( int target Position ) { m Skip Position = target Position ;  return this ; }
3170,public  Collection< Ad Record> get Records As Collection (  ) { return  Collections . unmodifiable Collection ( as List ( m Ad Records )  )  ; }
3171,"public boolean can Handle ( UR Iish uri,  Repository local,  String remote Name ) { if  ( !get Schemes (  )  . is Empty (  )  && !get Schemes (  )  . contains ( uri . get Scheme (  )  )  )      return false ;  for  ( UR Iish Field field : get Required Fields (  )  )  {     switch ( field )  {         case USER:             if  ( uri . get User (  )  == null || uri . get User (  )  . length (  )  == 0 )                  return false ;              break ;          case PASS:             if  ( uri . get Pass (  )  == null || uri . get Pass (  )  . length (  )  == 0 )                  return false ;              break ;          case HOST:             if  ( uri . get Host (  )  == null || uri . get Host (  )  . length (  )  == 0 )                  return false ;              break ;          case PORT:             if  ( uri . get Port (  )  <= 0 )                  return false ;              break ;          case PATH:             if  ( uri . get Path (  )  == null || uri . get Path (  )  . length (  )  == 0 )                  return false ;              break ;          default:             return false ;      } }  Set<UR Iish Field> can Have =  Enum Set . copy Of ( get Required Fields (  )  )  ;  can Have . add All ( get Optional Fields (  )  )  ;  if  ( uri . get User (  )  != null && !can Have . contains ( UR Iish Field . USER )  )      return false ;  if  ( uri . get Pass (  )  != null && !can Have . contains ( UR Iish Field . PASS )  )      return false ;  if  ( uri . get Host (  )  != null && !can Have . contains ( UR Iish Field . HOST )  )      return false ;  if  ( uri . get Port (  )  > 0 && !can Have . contains ( UR Iish Field . PORT )  )      return false ;  if  ( uri . get Path (  )  != null && !can Have . contains ( UR Iish Field . PATH )  )      return false ;  return true ; }"
3172,"public com . anychart . graphics . vector .  Pattern Fill parent ( com . anychart . graphics . vector .  Layer parent ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent ( %s )  ; "",  ( parent != null )  ? parent . get Js Base (  )  : null )  )  ;  return this ; }"
3173,"public void set Behind Offset ( int i ) { //		 Relative Layout .  Layout Params params =  (  (  Relative Layout .  Layout Params ) m View Behind . get Layout Params (  )  )  ;  //		int bottom = params . bottom Margin ;  //		int top = params . top Margin ;  //		int left = params . left Margin ;  //		params . set Margins ( left, top, i, bottom )  ;  m View Behind . set Width Offset ( i )  ; }"
3174,"public com . anychart . core . gantt .  Time Line Header text Overflow (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Overflow ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
3175,public static  Escaper url Form Parameter Escaper (  ) { return URL_FORM_PARAMETER_ESCAPER ; }
3176,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
3177,"public UB Json Writer value ( double [  ]  values )  throws IO Exception{ array (  )  ;  out . write Byte ( '$' )  ;  out . write Byte ( 'D' )  ;  out . write Byte ( '#' )  ;  value ( values . length )  ;  for  ( int i = 0, n = values . length ;  i < n ;  i++ )  {     out . write Double ( values [ i ]  )  ;  } pop ( true )  ;  return this ; }"
3178,"public com . anychart . standalones .  Labels Factory draw (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . draw (  )  ; "" )  ;  return this ; }"
3179,"public static void build (  Mesh Part Builder builder,  Frustum frustum,  Color frustum Color,  Color cross Color ) {  Vector3 [  ]  plane Points = frustum . plane Points ;  //  Near builder . line ( plane Points [ 0 ] , frustum Color, plane Points [ 1 ] , frustum Color )  ;  builder . line ( plane Points [ 1 ] , frustum Color, plane Points [ 2 ] , frustum Color )  ;  builder . line ( plane Points [ 2 ] , frustum Color, plane Points [ 3 ] , frustum Color )  ;  builder . line ( plane Points [ 3 ] , frustum Color, plane Points [ 0 ] , frustum Color )  ;  //  Far builder . line ( plane Points [ 4 ] , frustum Color, plane Points [ 5 ] , frustum Color )  ;  builder . line ( plane Points [ 5 ] , frustum Color, plane Points [ 6 ] , frustum Color )  ;  builder . line ( plane Points [ 6 ] , frustum Color, plane Points [ 7 ] , frustum Color )  ;  builder . line ( plane Points [ 7 ] , frustum Color, plane Points [ 4 ] , frustum Color )  ;  //  Sides builder . line ( plane Points [ 0 ] , frustum Color, plane Points [ 4 ] , frustum Color )  ;  builder . line ( plane Points [ 1 ] , frustum Color, plane Points [ 5 ] , frustum Color )  ;  builder . line ( plane Points [ 2 ] , frustum Color, plane Points [ 6 ] , frustum Color )  ;  builder . line ( plane Points [ 3 ] , frustum Color, plane Points [ 7 ] , frustum Color )  ;  //  Cross near builder . line ( middle Point ( plane Points [ 1 ] , plane Points [ 0 ]  ) , cross Color, middle Point ( plane Points [ 3 ] , plane Points [ 2 ]  ) , cross Color )  ;  builder . line ( middle Point ( plane Points [ 2 ] , plane Points [ 1 ]  ) , cross Color, middle Point ( plane Points [ 3 ] , plane Points [ 0 ]  ) , cross Color )  ;  //  Cross far builder . line ( middle Point ( plane Points [ 5 ] , plane Points [ 4 ]  ) , cross Color, middle Point ( plane Points [ 7 ] , plane Points [ 6 ]  ) , cross Color )  ;  builder . line ( middle Point ( plane Points [ 6 ] , plane Points [ 5 ]  ) , cross Color, middle Point ( plane Points [ 7 ] , plane Points [ 4 ]  ) , cross Color )  ; }"
3180,"public com . anychart . core . cartesian . series .  Bar3d min Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", width )  )  ;  return this ; }"
3181,public  String get Encoding (  ) { return  Text Encoding . get Instance Of (  )  . get Value For Id ( frames . iterator (  )  . next (  )  . get Body (  )  . get Text Encoding (  )  )  ; }
3182,"public int remove ( @ Nullable  Object element, int occurrences ) { if  ( occurrences == 0 )  {     return count ( element )  ;  } check Argument ( occurrences > 0, "" Invalid occurrences: %s"", occurrences )  ;  while  ( true )  {     int current = count ( element )  ;      if  ( current == 0 )  {         return 0 ;      }     if  ( occurrences >= current )  {         if  ( count Map . remove ( element, current )  )  {             return current ;          }     } else {         //  We know it's an ""E"" because it already exists in the map .          @ Suppress Warnings ( ""unchecked"" )  E casted =  ( E )  element ;          if  ( count Map . replace ( casted, current, current - occurrences )  )  {             return current ;          }     } //  If we're still here, there was a race, so just try again .  }}"
3183,"public  Ct Constructor make Class Initializer (  )  throws  Cannot Compile Exception{ throw new  Cannot Compile Exception ( ""not a class"" )  ; }"
3184,public static AN Request .  Post Request Builder post (  String url ) { return new AN Request .  Post Request Builder ( url )  ; }
3185,"public int calculate Position In New Orientation ( final int VISIBLE_POSITION_IN_OLD_ORIENTATION, final int OLD_ORIENTATION, final int NEW_ORIENTATION ) { int position In New Orientation = VISIBLE_POSITION_IN_OLD_ORIENTATION ;  if  ( OLD_ORIENTATION != NEW_ORIENTATION )  {     validate Orientation ( OLD_ORIENTATION )  ;      validate Orientation ( NEW_ORIENTATION )  ;      int max Cards In Old Orientation = get Max Cards For ( OLD_ORIENTATION )  ;      int max Cards In New Orientation = get Max Cards For ( NEW_ORIENTATION )  ;      int first Visible Card Index In Old Orientation =  ( VISIBLE_POSITION_IN_OLD_ORIENTATION * max Cards In Old Orientation )  ;      // 1 based index     first Visible Card Index In Old Orientation += 1 ;      position In New Orientation = calculate Bucket ( first Visible Card Index In Old Orientation, max Cards In New Orientation )  ;  } return position In New Orientation ; }"
3186,"public com . anychart . core . stock . indicators .  Keltner Channels range Series ( com . anychart . enums .  Stock Series Type type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . range Series ( %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
3187,"public static I Multiple Account Public Client Application create Multiple Account Public Client Application ( @ Non Null final  Context context, @ Non Null final int config File Resource Id )  throws  Msal Exception,  Interrupted Exception{ validate Non Null Argument ( context, NONNULL_CONSTANTS . CONTEXT )  ;  return create Multiple Account Public Client Application ( initialize Configuration ( context, config File Resource Id )  )  ; }"
3188,"public void start (  )  throws IO Exception{ LOGGER . info ( "" Starting logging clients"" )  ;  service . execute ( new  Tcp Logging Client ( "" Client 1"", 16666 )  )  ;  service . execute ( new  Tcp Logging Client ( "" Client 2"", 16667 )  )  ;  service . execute ( new  Udp Logging Client ( "" Client 3"", 16668 )  )  ;  service . execute ( new  Udp Logging Client ( "" Client 4"", 16669 )  )  ; }"
3189,"public  Immutable Map< String,  String> get Environment (  ) { return delegate . get Environment (  )  ; }"
3190,public void set Offset X ( int offset X ) { m Offset X = offset X ; }
3191,public void set Image Size ( int image Size Bytes ) { m Image Size Bytes = image Size Bytes ; }
3192,"public com . anychart . core . annotations .  Horizontal Line hovered (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hovered ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3193,"public  Stream< Arguments> expression Provider (  ) { return prepare Parameters (  (  f,  s )  -> f * s )  ; }"
3194,public void set Pairing Type (  Pairing Type pairing Type ) {  Collection< Device Service> services = get Services (  )  ;  for  (  Device Service service : services )  {     service . set Pairing Type ( pairing Type )  ;  }}
3195,public  Optional< String> get Cell Name (  ) { return  Optional . of Nullable ( cell Name )  ; }
3196,String shell Quote (  String cmd ) { return cmd ; }
3197,"public static int get Attr (  Class draw,  String attr Name ) { if  ( attr Name == null || attr Name . trim (  )  . equals ( """" )  || draw == null )  {     return R . attr . color Primary ;  } try {      Field field = draw . get Declared Field ( attr Name )  ;      field . set Accessible ( true )  ;      return field . get Int ( attr Name )  ;  } catch  (  Exception e )  {     return R . attr . color Primary ;  }}"
3198,"public void test Is Well Formed_1 Byte (  ) { test Bytes ( 1, EXPECTED_ONE_BYTE_ROUNDTRIPPABLE_COUNT )  ; }"
3199,public  Push Command set Progress Monitor (  Progress Monitor monitor ) { check Callable (  )  ;  if  ( monitor == null )  {     monitor =  Null Progress Monitor . INSTANCE ;  } this . monitor = monitor ;  return this ; }
3200,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
3201,"public void word Break (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . word Break (  )  ; "" )  ; }"
3202,"private  Array List< Card> init Card (  ) {  Array List< Card> cards = new  Array List< Card> (  )  ;  for  ( int i = 0 ;  i < 100 ;  i++ )  {      Staggered Card card = new  Staggered Card ( get Activity (  )  )  ;      card . header Title = ""PHOTO "" +  ( m Card Array Adapter . get Count (  )  + i )  ;      // Only for test, use different images from images loader     int xx = i % 8 ;      switch ( xx )  {         case 0:             card . image = m Server Database . get Images For Section (  Section . STAG )  . get ( 0 )  ;              break ;          case 1:             card . image = m Server Database . get Images For Section (  Section . STAG )  . get ( 1 )  ;              break ;          case 2:             card . image = m Server Database . get Images For Section (  Section . STAG )  . get ( 2 )  ;              break ;          case 3:             card . image = m Server Database . get Images For Section (  Section . STAG )  . get ( 3 )  ;              break ;          case 4:             card . image = m Server Database . get Images For Section (  Section . STAG )  . get ( 4 )  ;              break ;          case 5:             card . image = m Server Database . get Images For Section (  Section . STAG )  . get ( 5 )  ;              break ;          case 6:             card . image = m Server Database . get Images For Section (  Section . STAG )  . get ( 6 )  ;              break ;          case 7:             card . image = m Server Database . get Images For Section (  Section . STAG )  . get ( 7 )  ;              break ;      }     card . init (  )  ;      cards . add ( card )  ;  } return cards ; }"
3203,"Source Path get Source Path To Misc (  ) { return  Js Util . relative To Output Root ( get Build Target (  ) , get Project Filesystem (  ) , ""misc"" )  ; }"
3204,"public com . anychart . charts .  Sunburst select Marquee Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3205,"public com . anychart . core . venn .  Intersections selected (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3206,public static  Glide get ( @ Non Null  Context context ) { return  Glide . get ( context )  ; }
3207,"public void println ( java . io .  Print Stream ps ) {  Printer . print ( this, new java . io .  Print Writer ( ps, true )  )  ; }"
3208,"public com . anychart . charts .  Pert max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
3209,Target Data get Target Data (  Target target ) {  Integer target Id = target Id By Target . get ( target )  ;  if  ( target Id != null )  {     return query Data By Target . get ( target Id )  ;  } return target Cache . get Target Data ( target )  ; }
3210,"static final int alloc Process (  String plugin ) { if  ( LOG )  {      Log Debug . d ( PLUGIN_TAG, ""alloc plugin process: plugin="" + plugin )  ;  } // 取运行列表  List< Activity Manager .  Running App Process Info> processes = AMS Utils . get Running App Processes No Throws (  Re Plugin Internal . get App Context (  )  )  ;  // 取运行列表失败，则直接返回失败 if  ( processes == null || processes . is Empty (  )  )  {     if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, ""alloc plugin process: get running processes is empty"" )  ;           Log Debug . i ( PLUGIN_TAG, ""get list exception p="" + plugin )  ;      }     return I Plugin Manager . PROCESS_AUTO ;  } //根据优先级分配坑位进程 //临时变量，保存上一个 Process Record的进程分配优先级 int prev Match Priority = -1 ;  //被选中的坑位进程  Process Record select Record = null ;  for  (  Process Record r : STUB_PROCESSES )  {     synchronized  ( r )  {         if  ( r . calculate Match Priority ( plugin )  > prev Match Priority )  {             prev Match Priority = r . calculate Match Priority ( plugin )  ;              select Record = r ;          } else if  ( r . calculate Match Priority ( plugin )  == prev Match Priority )  {             if  ( r . mobified < select Record . mobified )  {                 select Record = r ;              }         }     } } if  ( select Record == null )  {     //不应该出现     return I Plugin Manager . PROCESS_AUTO ;  } synchronized  ( select Record )  {     //插件已在分配进程中运行，直接返回     if  ( select Record . calculate Match Priority ( plugin )  ==  Integer . MAX_VALUE &&  ( select Record . state ==  Stub Process State . STATE_ALLOCATED || select Record . state ==  Stub Process State . STATE_RUNNING )  )  {         return select Record . index ;      }     select Record . reset Allocate ( plugin, processes )  ;      return select Record . index ;  }}"
3211,public static  Optional Type from (  Key key ) { return from ( key . type (  )  )  ; }
3212,"public com . anychart . core . utils .  Connector stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3213,"public void add View (  View child, int index ) { throw new  Unsupported Operation Exception ( "" Adding  Views manually within  Litho Views is not supported"" )  ; }"
3214,"public com . anychart . core . cartesian . series .  Continuous Range Base low Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3215,"public void test Body Resource (  ) {  Bundle data = new  Bundle (  )  ;  data . put String ( KEY_BODY + TEXT_RESOURCE_SUFFIX, ""gcm_no_args"" )  ;  assert True ( new  Display Notification ( context, new  Notification Params ( data ) , executor )  . handle Notification (  )  )  ;   Notification n = get Single Notification (  )  ;  assert Equals ( string Resource ( R . string . gcm_no_args ) , shadow Of ( n )  . get Content Text (  )  . to String (  )  )  ; }"
3216,"public com . anychart . core . gantt . elements .  Baselines Element fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
3217,"public com . anychart . charts .  Cartesian padding (  String value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
3218,"public void insert Or Update_empty List With Composite Mediator (  ) { final  Realm Configuration config = config Factory . create Configuration Builder (  )  . modules ( new  Human Module (  ) , new  Animal Module (  )  )  . name ( ""composite . realm"" )  . build (  )  ;   Realm . delete Realm ( config )  ;  assert Equals ( config . get Schema Mediator (  )  . get Class (  ) ,  Composite Mediator . class )  ;  final  Realm realm =  Realm . get Instance ( config )  ;  //noinspection  Try Finally Can Be Try With Resources try {     realm . execute Transaction ( new  Realm .  Transaction (  )  {         @ Override         public void execute (  Realm realm )  {             realm . insert Or Update (  Collections . < Cat>empty List (  )  )  ;          }     } )  ;      assert Equals ( 0, realm . where (  Cat . class )  . count (  )  )  ;  } finally {     realm . close (  )  ;  }}"
3219,public  String get Encoding (  ) { return encoding ; }
3220,"public com . anychart . core . cartesian . series .  Column3d stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3221,static  Class Loader get Context Class Loader (  ) { return  Thread . current Thread (  )  . get Context Class Loader (  )  ; }
3222,"public void set ( int n,  Basic Block bb ) { super . set ( n, bb )  ;  //  Reset reg Count, since it will need to be recalculated .  reg Count = -1 ; }"
3223,public  Builder do Not Block Touches (  ) { showcase View . set Blocks Touches ( false )  ;  return this ; }
3224,"public void font Variant (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Variant (  )  ; "" )  ; }"
3225,"public  Point F map Image To View (  Point F image Point ) { float [  ]  points = m Temp Values ;  points [ 0 ]  = image Point . x ;  points [ 1 ]  = image Point . y ;  map Relative To Absolute ( points, points, 1 )  ;  m Active Transform . map Points ( points, 0, points, 0, 1 )  ;  return new  Point F ( points [ 0 ] , points [ 1 ]  )  ; }"
3226,"public void destroy (  ) {  Scroll View . add Message ( new SV Event ( SV Event Type . SVET_DESTROY, this, 0, ""SVET_DESTROY"" )  )  ;  set Visible ( false )  ; // dispose (  )  ; }"
3227,"public  Download Request [  ]  load (  )  throws IO Exception{ if  ( !exists (  )  )  {     return new  Download Request [ 0 ]  ;  }  Input Stream input Stream = null ;  try {     input Stream = atomic File . open Read (  )  ;       Data Input Stream data Input Stream = new  Data Input Stream ( input Stream )  ;      int version = data Input Stream . read Int (  )  ;      if  ( version > VERSION )  {         throw new IO Exception ( "" Unsupported action file version: "" + version )  ;      }     int action Count = data Input Stream . read Int (  )  ;       Array List< Download Request> actions = new  Array List<> (  )  ;      for  ( int i = 0 ;  i < action Count ;  i++ )  {         try {             actions . add ( read Download Request ( data Input Stream )  )  ;          } catch  (  Unsupported Request Exception e )  {         // remove  Download Request is not supported .   Ignore and continue loading rest .          }     }     return actions . to Array ( new  Download Request [ 0 ]  )  ;  } finally {      Util . close Quietly ( input Stream )  ;  }}"
3228,"private  Layout State create Mock Layout State (  Transition Set transitions,  Layout Output .  .  .  layout Outputs ) { final  Map< Transition Id,  Output Units Affinity Group< Animatable Item>> transition Id Mapping = new  Linked Hash Map<> (  )  ;  for  ( int i = 0 ;  i < layout Outputs . length ;  i++ )  {     final  Layout Output layout Output = layout Outputs [ i ]  ;      final  Transition Id transition Id = layout Output . get Transition Id (  )  ;      if  ( transition Id == null )  {         continue ;      }      Output Units Affinity Group< Animatable Item> group = transition Id Mapping . get ( transition Id )  ;      if  ( group == null )  {         group = new  Output Units Affinity Group<> (  )  ;          transition Id Mapping . put ( transition Id, group )  ;      }     @ Output Unit Type final int type =  Layout State Output Id Calculator . get Level From Id ( layout Output . get Id (  )  )  ;      group . add ( type, layout Output )  ;  } final  Layout State layout State = mock (  Layout State . class )  ;  when ( layout State . get Transitions (  )  )  . then Return ( transitions != null ? transitions . get Children (  )  : null )  ;  when ( layout State . get Transition Id Mapping (  )  )  . then Return ( transition Id Mapping )  ;  when ( layout State . get Animatable Item For Transition Id ( any (  )  )  )  . then ( new  Answer< Output Units Affinity Group< Animatable Item>> (  )  {     @ Override     public  Output Units Affinity Group< Animatable Item> answer (  Invocation On Mock invocation )  throws  Throwable {         final  Transition Id transition Id =  (  Transition Id )  invocation . get Arguments (  )  [ 0 ]  ;          return transition Id Mapping . get ( transition Id )  ;      } } )  ;  return layout State ; }"
3229,public TV Control get TV Control (  ) { return get Capability ( TV Control . class )  ; }
3230,"public void add (  Decal decal ) { int group Index = group Strategy . decide Group ( decal )  ;   Array< Decal> target Group = group List . get ( group Index )  ;  if  ( target Group == null )  {     target Group = group Pool . obtain (  )  ;      target Group . clear (  )  ;      used Groups . add ( target Group )  ;      group List . insert ( group Index, target Group )  ;  } target Group . add ( decal )  ; }"
3231,"public static  Generic Drawee Hierarchy inflate Hierarchy (  Context context, @ Nullable  Attribute Set attrs ) { return inflate Builder ( context, attrs )  . build (  )  ; }"
3232,"public void include All Points (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . include All Points (  )  ; "" )  ; }"
3233,"public void add Namespace (  String prefix,  String URI ) { this . namespaces . put ( prefix, URI )  ; }"
3234,"public com . anychart . palettes .  Hatch Fills items ( com . anychart . graphics . vector .  Hatch Fill hatch Fill, com . anychart . graphics . vector .  Hatch Fill var_args ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . items ( %s, %s )  ; "",  ( hatch Fill != null )  ? hatch Fill . get Js Base (  )  : null,  ( var_args != null )  ? var_args . get Js Base (  )  : null )  )  ;  return this ; }"
3235,"public com . anychart . core . annotations .  Trend Channel stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3236,"public static  Intent create Intent (  String plugin Name,  String cls ) {  Intent in = new  Intent (  )  ;  in . set Component ( create Component Name ( plugin Name, cls )  )  ;  return in ; }"
3237,"public void on Progress Changed (  Seek Bar seek Bar, int progress, boolean from User ) {}"
3238,public void set Scale X ( float x ) { this . scale X = x ; }
3239,public  String get Media Type (  ) { return this . media Type ; }
3240,"public com . anychart . core . annotations .  Fibonacci Retracement max Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", width )  )  ;  return this ; }"
3241,public void increase Nesting Level (  ) { this . nesting Level++ ; }
3242,"public static  Builder<T> builder ( int individual Producer Size, int collection Producer Size ) { return new  Builder<T> ( individual Producer Size, collection Producer Size )  ; }"
3243,"public void draw (  Canvas canvas ) { if  ( touch Override )  {     //  Replace time-calculated velocities with touch-velocities     current Velocity X = override Velocity X ;      current Velocity Y = override Velocity Y ;      draw ( canvas, override X + override Delta X, override Y + override Delta Y, current Rotation, percentage Animated )  ;  } else if  ( started Animation && !terminated )  {     draw ( canvas, current X, current Y, current Rotation, percentage Animated )  ;  }}"
3244,"protected void start (  ) { if  ( check State Error ( ""start (  ) "", startable States )  )  {     if  ( state == PLAYBACK_COMPLETED )  {         start Offset = 0 ;      }     state = STARTED ;      do Start (  )  ;  }}"
3245,"public  Epoxy Model Group With Annotations_ on Visibility State Changed (  On Model Visibility State Changed Listener< Epoxy Model Group With Annotations_,  Model Group Holder> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
3246,"private void calculate Insns If Necessary (  ) { if  ( insns != null )  {     return ;  }  Register Spec List registers = get Registers (  )  ;  int sz = registers . size (  )  ;  insns = new  Simple Insn [ sz ]  ;  for  ( int i = 0, out At = 0 ;  i < sz ;  i++ )  {      Register Spec src = registers . get ( i )  ;      insns [ i ]  = move Insn For ( src, out At )  ;      out At += src . get Category (  )  ;  }}"
3247,"public static  Char Sequence encode ( final  String html, final  Image Getter image Getter ) { if  (  Text Utils . is Empty ( html )  )  {     return """" ;  } return  Html . from Html ( html, image Getter, TAG_HANDLER )  ; }"
3248,"public com . anychart . core . gantt . edit .  Thumb stroke ( com . anychart . graphics . vector .  Stroke value,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3249,"private  Delayed Task create And Schedule Delayed Task (  Timer Id timer Id, long delay Ms,  Runnable task ) { long target Time Ms =  System . current Time Millis (  )  + delay Ms ;   Delayed Task delayed Task = new  Delayed Task ( timer Id, target Time Ms, task )  ;  delayed Task . start ( delay Ms )  ;  return delayed Task ; }"
3250,public static boolean is Wifi Connected (  Context context ) {  Connectivity Manager connectivity Manager =  (  Connectivity Manager )  context . get System Service (  Context . CONNECTIVITY_SERVICE )  ;   Network Info network Info = connectivity Manager . get Active Network Info (  )  ;  return network Info != null && network Info . get Type (  )  ==  Connectivity Manager . TYPE_WIFI ; }
3251,public void stop (  ) { synchronized  ( this )  {     if  ( !m Is Running )  {         return ;      }     m Is Running = false ;  } cancel Pending Render Task (  )  ;  m Native Info Handle . save Remainder (  )  ; }
3252,public void invalidate Span Index Cache (  ) { m Span Index Cache . clear (  )  ; }
3253,"public static  Function< Item,  Long> cast To Long ( final  String num Field ) { return new  Cast To Long Operator ( num Field )  ; }"
3254,"static  Map< Class<?>,  Event Producer> find All Producers (  Object listener ) { final  Class<?> listener Class = listener . get Class (  )  ;   Map< Class<?>,  Event Producer> handlers In Method = new  Hash Map< Class<?>,  Event Producer> (  )  ;   Map< Class<?>,  Method> methods = PRODUCERS_CACHE . get ( listener Class )  ;  if  ( null == methods )  {     methods = new  Hash Map< Class<?>,  Method> (  )  ;      load Annotated Producer Methods ( listener Class, methods )  ;  } if  ( !methods . is Empty (  )  )  {     for  (  Map .  Entry< Class<?>,  Method> e : methods . entry Set (  )  )  {          Event Producer producer = new  Event Producer ( listener, e . get Value (  )  )  ;          handlers In Method . put ( e . get Key (  ) , producer )  ;      } } return handlers In Method ; }"
3255,public double get X Axis Min (  ) { return get X Axis Min ( 0 )  ; }
3256,public static  String [  ]  nullable Array Of Strings From List Of Strings ( @ Nullable  List< String> list ) { return list == null || list . is Empty (  )  ? null : list . to Array ( new  String [ list . size (  )  ]  )  ; }
3257,"public static boolean set Status Bar Light Mode (  Activity activity ) { if  ( activity == null )      return false ;  // 无语系列：ZTK C2016只能时间和电池图标变色。。。。 if  (  Skin Device Utils . is ZTKC2016 (  )  )  {     return false ;  } if  ( m Status Bar Type != STATUSBAR_TYPE_DEFAULT )  {     return set Status Bar Light Mode ( activity, m Status Bar Type )  ;  } if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . KITKAT )  {     if  ( is MIUI Custom Status Bar Light Mode Impl (  )  && MIUI Set Status Bar Light Mode ( activity . get Window (  ) , true )  )  {         m Status Bar Type = STATUSBAR_TYPE_MIUI ;          return true ;      } else if  (  Flyme Set Status Bar Light Mode ( activity . get Window (  ) , true )  )  {         m Status Bar Type = STATUSBAR_TYPE_FLYME ;          return true ;      } else if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . M )  {          Android6 Set Status Bar Light Mode ( activity . get Window (  ) , true )  ;          m Status Bar Type = STATUSBAR_TYPE_ANDROID6 ;          return true ;      } } return false ; }"
3258,public  String method Name (  ) { return  Ascii . to Lower Case ( name (  )  )  ; }
3259,"private void assert No Samples To Read (  Format end Format ) { //  If not format Required or loading Finished, should read nothing .  assert Read Nothing ( false )  ;  //  If format Required, should read the end format if set, else read nothing .  if  ( end Format == null )  {     assert Read Nothing ( true )  ;  } else {     assert Read Format ( true, end Format )  ;  } //  If loading Finished, should read end of stream .  assert Read End Of Stream ( false )  ;  assert Read End Of Stream ( true )  ;  //  Having read end of stream should not affect other cases .  assert Read Nothing ( false )  ;  if  ( end Format == null )  {     assert Read Nothing ( true )  ;  } else {     assert Read Format ( true, end Format )  ;  }}"
3260,public void set This Method (  Ct Method m ) { this Method = m . get Method Info2 (  )  ;  if  ( type Checker != null )      type Checker . set This Method ( this Method )  ; }
3261,"public  List< No SQL Entity<T>> get Synchronous Results (  ) { return get Synchronous Results ( 30,  Time Unit . SECONDS )  ; }"
3262,public void set Available Subscription Info List (  List< Subscription Info> list ) { available Subscription List = list ;  dispatch On Subscriptions Changed (  )  ; }
3263,"public void generate All (  Schema schema,  String out Dir,  String out Dir Entity,  String out Dir Test )  throws  Exception{ long start =  System . current Time Millis (  )  ;   File out Dir File = to File Force Exists ( out Dir )  ;   File out Dir Entity File = out Dir Entity != null ? to File Force Exists ( out Dir Entity )  : out Dir File ;   File out Dir Test File = out Dir Test != null ? to File Force Exists ( out Dir Test )  : null ;  schema . init2nd Pass (  )  ;  schema . init3rd Pass (  )  ;   System . out . println ( "" Processing schema version "" + schema . get Version (  )  + "" .  .  . "" )  ;   List< Entity> entities = schema . get Entities (  )  ;  for  (  Entity entity : entities )  {     generate ( template Dao, out Dir File, entity . get Java Package Dao (  ) , entity . get Class Name Dao (  ) , schema, entity )  ;      if  ( !entity . is Protobuf (  )  && !entity . is Skip Generation (  )  )  {         generate ( template Entity, out Dir Entity File, entity . get Java Package (  ) , entity . get Class Name (  ) , schema, entity )  ;      }     if  ( out Dir Test File != null && !entity . is Skip Generation Test (  )  )  {          String java Package Test = entity . get Java Package Test (  )  ;           String class Name Test = entity . get Class Name Test (  )  ;           File java Filename = to Java Filename ( out Dir Test File, java Package Test, class Name Test )  ;          if  ( !java Filename . exists (  )  )  {             generate ( template Dao Unit Test, out Dir Test File, java Package Test, class Name Test, schema, entity )  ;          } else {              System . out . println ( "" Skipped "" + java Filename . get Canonical Path (  )  )  ;          }     }     for  (  Content Provider content Provider : entity . get Content Providers (  )  )  {          Map< String,  Object> additional Objects For Template = new  Hash Map<> (  )  ;          additional Objects For Template . put ( ""content Provider"", content Provider )  ;          generate ( template Content Provider, out Dir File, entity . get Java Package (  ) , entity . get Class Name (  )  + "" Content Provider"", schema, entity, additional Objects For Template )  ;      } } generate ( template Dao Master, out Dir File, schema . get Default Java Package Dao (  ) , schema . get Prefix (  )  + "" Dao Master"", schema, null )  ;  generate ( template Dao Session, out Dir File, schema . get Default Java Package Dao (  ) , schema . get Prefix (  )  + "" Dao Session"", schema, null )  ;  long time =  System . current Time Millis (  )  - start ;   System . out . println ( "" Processed "" + entities . size (  )  + "" entities in "" + time + ""ms"" )  ; }"
3264,"public static  String op Name ( int opcode ) { switch ( opcode )  {     case NOP:         return ""nop"" ;      case MOVE:         return ""move"" ;      case MOVE_PARAM:         return ""move-param"" ;      case MOVE_EXCEPTION:         return ""move-exception"" ;      case CONST:         return ""const"" ;      case GOTO:         return ""goto"" ;      case IF_EQ:         return ""if-eq"" ;      case IF_NE:         return ""if-ne"" ;      case IF_LT:         return ""if-lt"" ;      case IF_GE:         return ""if-ge"" ;      case IF_LE:         return ""if-le"" ;      case IF_GT:         return ""if-gt"" ;      case SWITCH:         return ""switch"" ;      case ADD:         return ""add"" ;      case SUB:         return ""sub"" ;      case MUL:         return ""mul"" ;      case DIV:         return ""div"" ;      case REM:         return ""rem"" ;      case NEG:         return ""neg"" ;      case AND:         return ""and"" ;      case OR:         return ""or"" ;      case XOR:         return ""xor"" ;      case SHL:         return ""shl"" ;      case SHR:         return ""shr"" ;      case USHR:         return ""ushr"" ;      case NOT:         return ""not"" ;      case CMPL:         return ""cmpl"" ;      case CMPG:         return ""cmpg"" ;      case CONV:         return ""conv"" ;      case TO_BYTE:         return ""to-byte"" ;      case TO_CHAR:         return ""to-char"" ;      case TO_SHORT:         return ""to-short"" ;      case RETURN:         return ""return"" ;      case ARRAY_LENGTH:         return ""array-length"" ;      case THROW:         return ""throw"" ;      case MONITOR_ENTER:         return ""monitor-enter"" ;      case MONITOR_EXIT:         return ""monitor-exit"" ;      case AGET:         return ""aget"" ;      case APUT:         return ""aput"" ;      case NEW_INSTANCE:         return ""new-instance"" ;      case NEW_ARRAY:         return ""new-array"" ;      case FILLED_NEW_ARRAY:         return ""filled-new-array"" ;      case CHECK_CAST:         return ""check-cast"" ;      case INSTANCE_OF:         return ""instance-of"" ;      case GET_FIELD:         return ""get-field"" ;      case GET_STATIC:         return ""get-static"" ;      case PUT_FIELD:         return ""put-field"" ;      case PUT_STATIC:         return ""put-static"" ;      case INVOKE_STATIC:         return ""invoke-static"" ;      case INVOKE_VIRTUAL:         return ""invoke-virtual"" ;      case INVOKE_SUPER:         return ""invoke-super"" ;      case INVOKE_DIRECT:         return ""invoke-direct"" ;      case INVOKE_INTERFACE:         return ""invoke-interface"" ;      case MOVE_RESULT:         return ""move-result"" ;      case MOVE_RESULT_PSEUDO:         return ""move-result-pseudo"" ;      case FILL_ARRAY_DATA:         return ""fill-array-data"" ;  } return ""unknown-"" +  Hex . u1 ( opcode )  ; }"
3265,public void set Gesture Zoom Enabled ( boolean is Gesture Zoom Enabled ) { m Is Gesture Zoom Enabled = is Gesture Zoom Enabled ; }
3266,"public  Node<K, V> first (  ) {  Node<K, V> node = this ;   Node<K, V> child = node . left ;  while  ( child != null )  {     node = child ;      child = node . left ;  } return node ; }"
3267,void leak (  ) { if  ( !is Leaked . get And Set ( true )  )  {     leaked Caches . add ( this )  ;  }}
3268,"public void test Fragment Arg Injected (  ) {  Bundle bundle = new  Bundle (  )  ;  bundle . put Int ( ""my Int"", TEST_INT )  ;   Fragment Arguments fragment = new  Fragment Arguments_ (  )  ;  fragment . set Arguments ( bundle )  ;  assert That ( fragment . my Int )  . is Zero (  )  ;  fragment . on Create ( null )  ;  assert That ( fragment . my Int )  . is Equal To ( TEST_INT )  ; }"
3269,"public void write (  Random Access File file )  throws java . io . IO Exception{ int size ;  int offset = 0 ;  byte [  ]  buffer = new byte [ 5 ]  ;   String str ;  size = get Size (  )  ;  str =  Integer . to String ( size )  ;  for  ( int i = 0 ;  i <  ( 5 - str . length (  )  )  ;  i++ )  {     buffer [ i ]  =  ( byte )  '0' ;  } offset +=  ( 5 - str . length (  )  )  ;  for  ( int i = 0 ;  i < str . length (  )  ;  i++ )  {     buffer [ i + offset ]  =  ( byte )  str . char At ( i )  ;  } offset += str . length (  )  ;  file . write ( buffer, 0, 5 )  ;  if  ( size > 0 )  {     str = write String (  )  ;      buffer = new byte [ str . length (  )  ]  ;      for  ( int i = 0 ;  i < str . length (  )  ;  i++ )  {         buffer [ i ]  =  ( byte )  str . char At ( i )  ;      }     file . write ( buffer )  ;  }}"
3270,"public com . anychart . core . gantt .  Data Grid Button font Color (  String color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Color ( %s )  ; "", wrap Quotes ( color )  )  )  ;  return this ; }"
3271,"public boolean get As Boolean (  ) { if  ( is Boolean (  )  )  {     return  (  (  Boolean )  value )  . boolean Value (  )  ;  } //  Check to see if the value as a  String is ""true"" in any case .  return  Boolean . parse Boolean ( get As String (  )  )  ; }"
3272,"public com . anychart . core . axismarkers .  Gantt Text line Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
3273,"public  Task< Load Bundle Task Progress> add On Canceled Listener ( @ Non Null  Activity activity, @ Non Null  On Canceled Listener on Canceled Listener ) { return delegate . add On Canceled Listener ( activity, on Canceled Listener )  ; }"
3274,public void set Is Device Secure ( boolean is Device Secure ) {  Shadow Keyguard Manager . is Device Secure = is Device Secure ; }
3275,public  String get Tracking (  ) { return tracking ; }
3276,private boolean supports Open GLES2 ( final  Context context ) { final  Activity Manager activity Manager =  (  Activity Manager )  context . get System Service (  Context . ACTIVITY_SERVICE )  ;  final  Configuration Info configuration Info = activity Manager . get Device Configuration Info (  )  ;  return configuration Info . req Gl Es Version >= 0x20000 ; }
3277,"public int run (  Arguments arguments )  throws IO Exception{ //  Reset the error count to start fresh .  errors . set ( 0 )  ;  // empty the list, so that  tools that load dx and keep it around // for multiple runs don't reuse older buffers .  library Dex Buffers . clear (  )  ;  args = arguments ;  args . make Options Objects ( context )  ;   Output Stream human Out Raw = null ;  if  ( args . human Out Name != null )  {     human Out Raw = open Output ( args . human Out Name )  ;      human Out Writer = new  Output Stream Writer ( human Out Raw )  ;  } try {     if  ( args . multi Dex )  {         return run Multi Dex (  )  ;      } else {         return run Mono Dex (  )  ;      } } finally {     close Output ( human Out Raw )  ;  }}"
3278,protected  Type Element get Injected Type (  Variable Element variable Element ) { final  Type Element field Type ;  if  ( get Param Injection Target Kind ( variable Element )  ==  Param Injection Target .  Kind . INSTANCE )  {     field Type =  (  Type Element )  type Utils . as Element ( type Utils . erasure ( variable Element . as Type (  )  )  )  ;  } else {     field Type = get Kind Parameter ( variable Element )  ;  } return field Type ; }
3279,"public com . anychart . charts .  Pareto interactivity ( com . anychart . enums .  Hover Mode settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . interactivity ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
3280,"public com . anychart . charts .  Pareto palette (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3281,"public com . anychart . charts .  Cartesian3d bounds ( com . anychart . utils .  Rect Obj bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
3282,public int get Publication Resolution (  ) { return publication Resolution ; }
3283,public synchronized void go ( int steps ) { gate = new  Gate (  )  ;  gate . set Stop Iterations ( steps )  ;  execute ( false )  ; }
3284,"public com . anychart . charts .  Cartesian select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
3285,private int screen Type (  ) { return  (  ( orientation & 0xff )  << 24 )  |  (  ( touchscreen & 0xff )  << 16 )  |  ( density & 0xffff )  ; }
3286,public void set Scale Type (  Scale Type scale Type ) { assert scale Type != null ;  if  ( m Scale Type != scale Type )  {     m Scale Type = scale Type ;      switch ( scale Type )  {         case CENTER:         case CENTER_CROP:         case CENTER_INSIDE:         case FIT_CENTER:         case FIT_START:         case FIT_END:         case FIT_XY:             super . set Scale Type (  Scale Type . FIT_XY )  ;              break ;          default:             super . set Scale Type ( scale Type )  ;              break ;      }     update Drawable Attrs (  )  ;      update Background Drawable Attrs ( false )  ;      invalidate (  )  ;  }}
3287,public  Render Core Test Rule use Extensions (  Render Core Extension [  ]  extensions ) { this . extensions = extensions ;  render State = null ;  return this ; }
3288,public void set Retransmit Interval Steps ( final int retransmit Interval ) { this . retransmit Interval Steps = parse Retransmit Interval Steps ( retransmit Interval )  ; }
3289,public boolean is Intlike (  ) { switch ( basic Type )  {     case BT_BOOLEAN:     case BT_BYTE:     case BT_CHAR:     case BT_INT:     case BT_SHORT:         {             return true ;          } } return false ; }
3290,"private  Intent create Explicit From Implicit Intent (  Context context,  Intent implicit Intent ) {  Intent explicit Intent = null ;  if  ( context != null )  {      Package Manager pm = context . get Package Manager (  )  ;       List< Resolve Info> resolve Info = pm . query Intent Services ( implicit Intent, 0 )  ;      if  ( resolve Info != null && resolve Info . size (  )  >= 1 )  {          Resolve Info service Info = resolve Info . get ( 0 )  ;           String package Name = service Info . service Info . package Name ;           String class Name = service Info . service Info . name ;           Component Name component = new  Component Name ( package Name, class Name )  ;          explicit Intent = new  Intent ( implicit Intent )  ;          explicit Intent . set Component ( component )  ;      } } return explicit Intent ; }"
3291,public static _ Fields find By Name ( java . lang .  String name ) { return by Name . get ( name )  ; }
3292,"public  Map With Proto Values Fluent Assertion<M> ignoring Field Absence Of Field Descriptors For Values (  Field Descriptor first Field Descriptor,  Field Descriptor .  .  .  rest ) { return using Config ( config . ignoring Field Absence Of Field Descriptors ( as List ( first Field Descriptor, rest )  )  )  ; }"
3293,"public  Network Response perform Request (  Request<?> request )  throws  Volley Error{ final  Count Down Latch latch = new  Count Down Latch ( 1 )  ;  final  Atomic Reference< Network Response> response = new  Atomic Reference<> (  )  ;  final  Atomic Reference< Volley Error> error = new  Atomic Reference<> (  )  ;  perform Request ( request, new  On Request Complete (  )  {     @ Override     public void on Success (  Network Response network Response )  {         response . set ( network Response )  ;          latch . count Down (  )  ;      }     @ Override     public void on Error (  Volley Error volley Error )  {         error . set ( volley Error )  ;          latch . count Down (  )  ;      } } )  ;  try {     latch . await (  )  ;  } catch  (  Interrupted Exception e )  {      Volley Log . e ( e, ""while waiting for  Count Down Latch"" )  ;       Thread . current Thread (  )  . interrupt (  )  ;      throw new  Volley Error ( e )  ;  } if  ( response . get (  )  != null )  {     return response . get (  )  ;  } else if  ( error . get (  )  != null )  {     throw error . get (  )  ;  } else {     throw new  Volley Error ( "" Neither response entry was set"" )  ;  }}"
3294,"private void do Copy ( final int offset, final  Memory Chunk other, final int other Offset, final int count ) { if  ( ! ( other instanceof  Buffer Memory Chunk )  )  {     throw new  Illegal Argument Exception ( "" Cannot copy two incompatible  Memory Chunks"" )  ;  }  Preconditions . check State ( !is Closed (  )  )  ;   Preconditions . check State ( !other . is Closed (  )  )  ;   Memory Chunk Util . check Bounds ( offset, other . get Size (  ) , other Offset, count, m Size )  ;  m Buffer . position ( offset )  ;  //  Byte Buffer can't be null at this point other . get Byte Buffer (  )  . position ( other Offset )  ;  //  Recover the necessary part to be copied as a byte array .  //  This requires a copy, for now there is not a more efficient alternative .  byte [  ]  b = new byte [ count ]  ;  m Buffer . get ( b, 0, count )  ;  other . get Byte Buffer (  )  . put ( b, 0, count )  ; }"
3295,"private  Array List< Card> init Card (  ) { int num Cols = get Resources (  )  . get Integer ( R . integer . carddemo_extra_spannedgrid_numcols )  ;   Array List< Card> cards = new  Array List< Card> (  )  ;  for  ( int i = 0 ;  i < 100 ;  i++ )  {     G Play Common Card card ;      if  ( i == 0 || i % num Cols == 0 )  {         card = new G Play Grid Card Large ( get Activity (  )  )  ;          card . secondary Title = "" Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua .   Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquid ex ea commodi"" + i ;      } else {         card = new  Gplay Grid Card ( get Activity (  )  )  ;          card . secondary Title = "" Some text here "" + i ;      }     // Only for test, use different titles and ratings     card . header Title = "" App example "" + i ;      card . rating =  ( float )   (  Math . random (  )  *  ( 5 . 0 )  )  ;      // Only for test, change some icons     if  (  ( i % 6 == 0 )  )  {         card . resource Id Thumbnail = R . drawable . ic_ic_dh_bat ;      } else if  (  ( i % 6 == 1 )  )  {         card . resource Id Thumbnail = R . drawable . ic_ic_dh_net ;      } else if  (  ( i % 6 == 2 )  )  {         card . resource Id Thumbnail = R . drawable . ic_tris ;      } else if  (  ( i % 6 == 3 )  )  {         card . resource Id Thumbnail = R . drawable . ic_info ;      } else if  (  ( i % 6 == 4 )  )  {         card . resource Id Thumbnail = R . drawable . ic_smile ;      }     card . init (  )  ;      cards . add ( card )  ;  } return cards ; }"
3296,"private static  Char Matcher precomputed Positive ( int total Characters,  Bit Set table,  String description ) { switch ( total Characters )  {     case 0:         return none (  )  ;      case 1:         return is (  ( char )  table . next Set Bit ( 0 )  )  ;      case 2:         char c1 =  ( char )  table . next Set Bit ( 0 )  ;          char c2 =  ( char )  table . next Set Bit ( c1 + 1 )  ;          return is Either ( c1, c2 )  ;      default:         return is Small ( total Characters, table . length (  )  )  ?  Small Char Matcher . from ( table, description )  : new  Bit Set Matcher ( table, description )  ;  }}"
3297,"public  Object eval (  Reader reader,  Bindings bindings )  throws  Script Exception{  Script Context ctxt = get Script Context ( bindings )  ;  return eval ( reader, ctxt )  ; }"
3298,public int get Timeout (  ) { return timeout ; }
3299,"public static void put ( @ Non Null final  String key, final JSON Array value, final int save Time ) { put ( key, value, save Time, get Default Cache Double Utils (  )  )  ; }"
3300,"static  Tutorial Options .  Builder<T> new Tutorial Options Builder ( @ Non Null  Context context,  Class<T> p Class ) {  Validation Util . check Not Null ( context, "" Context can't be null . "" )  ;  return new  Tutorial Options .  Builder<> ( context, p Class )  ; }"
3301,"public static  Framework Media Drm new Instance ( UUID uuid )  throws  Unsupported Drm Exception{ try {     return new  Framework Media Drm ( uuid )  ;  } catch  (  Unsupported Scheme Exception e )  {     throw new  Unsupported Drm Exception (  Unsupported Drm Exception . REASON_UNSUPPORTED_SCHEME, e )  ;  } catch  (  Exception e )  {     throw new  Unsupported Drm Exception (  Unsupported Drm Exception . REASON_INSTANTIATION_ERROR, e )  ;  }}"
3302,"public static void close On View Model Cleared ( @ Non Null  Fragment fragment, @ Non Null  Scope scope ) {  Factory factory = new TP View Model Factory ( scope )  ;   View Model Providers . of ( fragment, factory )  . get ( TP View Model . class )  ; }"
3303,public  String get Short Name And Flavor Postfix (  ) { return unconfigured Build Target . get Short Name And Flavor Postfix (  )  ; }
3304,public boolean can Seek Backward (  ) { return get Number Of Frames (  )  > 1 ; }
3305,"public com . anychart . charts .  Polar padding (  Number [  ]  padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "",  Arrays . to String ( padding )  )  )  ;  return this ; }"
3306,"public com . anychart . core . map . series .  Base stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { return new com . anychart . core . map . series .  Base (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s ) "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ; }"
3307,public short get Number Subtables (  ) { return  ( short )  subtables . size (  )  ; }
3308,public static  Rop op Move Param (  Type Bearer type ) { switch ( type . get Basic Frame Type (  )  )  {     case  Type . BT_INT:         return MOVE_PARAM_INT ;      case  Type . BT_LONG:         return MOVE_PARAM_LONG ;      case  Type . BT_FLOAT:         return MOVE_PARAM_FLOAT ;      case  Type . BT_DOUBLE:         return MOVE_PARAM_DOUBLE ;      case  Type . BT_OBJECT:         return MOVE_PARAM_OBJECT ;  } return throw Bad Type ( type )  ; }
3309,public synchronized  Usb Device Connection get Connection (  ) { return m Connection ; }
3310,public void set Draw Format ( I Draw Format<T> format ) { for  (  Column<T> column : array Columns )  {     column . set Draw Format ( format )  ;  }}
3311,"static  Type Name maybe Remove Wildcard From Var Args If Kotlin Spec (  Spec Model spec Model,  Type Name type Name ) { if  ( !is Kotlin Spec ( spec Model )  )  {     return type Name ;  } if  ( ! ( type Name instanceof  Parameterized Type Name )  )  {     return type Name ;  } final  Parameterized Type Name parameterized Type Name =  (  Parameterized Type Name )  type Name ;  if  ( parameterized Type Name . type Arguments . is Empty (  )  )  {     return type Name ;  } final  Type Name first Element Type Name =  (  (  Parameterized Type Name )  type Name )  . type Arguments . get ( 0 )  ;  if  ( first Element Type Name instanceof  Wildcard Type Name )  {     return  Parameterized Type Name . get ( parameterized Type Name . raw Type, get Base Type If Wildcard ( first Element Type Name )  )  ;  } else {     return type Name ;  }}"
3312,"public boolean is Merged Into All (  Rev Commit commit,  Collection< Ref> refs )  throws IO Exception{ return get Merged Into ( commit, refs,  Get Merged Into Strategy . RETURN_ON_FIRST_NOT_FOUND,  Null Progress Monitor . INSTANCE )  . size (  )  == refs . size (  )  ; }"
3313,public  Uri get Uri (  ) { return m Uri ; }
3314,"public com . anychart . core . annotations .  Andrews Pitchfork right (  String right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", wrap Quotes ( right )  )  )  ;  return this ; }"
3315,"public static  Class<?> get Map Key Field Type (  Field map Field, int nesting Level ) { return get Generic Field Type ( map Field,  Map . class, 0, null, nesting Level )  ; }"
3316,public static void set Print Debug ( boolean print Debug ) { _print Debug = print Debug ; }
3317,"public void upload File (  Path build Report File Path,  String trace File Kind ) { try {      Request Body request Body = new  Multipart Body .  Builder (  )  . set Type (  Multipart Body . FORM )  . add Form Data Part ( ""trace_file"", build Report File Path . get File Name (  )  . to String (  ) ,  Request Body . create (  Media Type . parse ( ""text/plain"" ) , build Report File Path . to File (  )  )  )  . build (  )  ;       Upload Response upload Response = request Uploader . upload Request ( request Body,  Immutable Map . of ( ""trace_file_kind"", trace File Kind )  )  ;      LOG . debug ( "" Successfully uploaded file: %s, response: %s"", build Report File Path . get File Name (  )  . to String (  ) , upload Response . to String (  )  )  ;  } catch  ( IO Exception e )  {     LOG . warn ( e, "" Error while uploading file: "" + build Report File Path . get File Name (  )  . to String (  )  )  ;  }}"
3318,"public boolean apply Update ( long passed Time ) { if  ( initial Delay == RESET_ANIMATION_INITIAL_DELAY )  {     initial Delay = passed Time ;  } final long animated Time = passed Time - initial Delay ;  started Animation = animated Time >= 0 ;  if  ( started Animation && !terminated )  {     compute Distance ( work Pairs, animated Time, initial X, initial Velocity X, acceleration X, millis To Reach Target Velocity X, target Velocity X )  ;      current X = work Pairs [ 0 ]  ;      current Velocity X = work Pairs [ 1 ]  ;      compute Distance ( work Pairs, animated Time, initial Y, initial Velocity Y, acceleration Y, millis To Reach Target Velocity Y, target Velocity Y )  ;      current Y = work Pairs [ 0 ]  ;      current Velocity Y = work Pairs [ 1 ]  ;      compute Distance ( work Pairs, animated Time, initial Rotation, initial Rotational Velocity, rotational Acceleration, millis To Reach Target Rotational Velocity, target Rotational Velocity )  ;      current Rotation = work Pairs [ 0 ]  ;      current Rotational Velocity = work Pairs [ 1 ]  ;      if  ( fade Out Interpolator != null )  {         final float interpolated Time = fade Out Interpolator . get Interpolation ( animated Time / millis To Reach Bound )  ;          alpha =  ( int )   ( interpolated Time * MAX_ALPHA )  ;      } else {         alpha = MAX_ALPHA ;      }     terminated = !touch Override && animated Time >= millis To Reach Bound ;      percentage Animated =  Math . min ( 1f, animated Time / millis To Reach Bound )  ;  } return !terminated ; }"
3319,private  Optional< Thrift Rule Key Logger> create Rule Key Logger (  )  throws IO Exception{ if  ( rule Key Log Path == null )  {     return  Optional . empty (  )  ;  } else {     return  Optional . of (  Thrift Rule Key Logger . create (  Paths . get ( rule Key Log Path )  )  )  ;  }}
3320,public  Immutable Sorted Multiset<E> build (  ) { return copy Of Sorted (  (  Sorted Multiset<E> )  contents )  ; }
3321,public  List< Epoxy Model<?>> get Copy Of Models (  ) { //noinspection unchecked return  (  List< Epoxy Model<?>> )  get Current Models (  )  ; }
3322,"public  Matrix4 translate ( double x, double y, double z ) { m [ M03 ]  += x ;  m [ M13 ]  += y ;  m [ M23 ]  += z ;  return this ; }"
3323,"public com . anychart . core . annotations .  Horizontal Line markers (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", settings )  )  ;  return this ; }"
3324,private static int grow Size ( int current Size ) { return current Size <= 2 ? 4 : current Size * 2 ; }
3325,"public void clear Bindings (  ) { if  ( m Bind Args != null )  {      Arrays . fill ( m Bind Args, null )  ;  }}"
3326,"public static int patch Fast (  Input Stream old Input Stream,  Input Stream diff Input Stream,  File new File )  throws IO Exception{ if  ( old Input Stream == null )  {     return RETURN_OLD_FILE_ERR ;  } if  ( new File == null )  {     return RETURN_NEW_FILE_ERR ;  } if  ( diff Input Stream == null )  {     return RETURN_DIFF_FILE_ERR ;  } byte [  ]  old Bytes = BS Util . input Stream To Byte ( old Input Stream )  ;  byte [  ]  diff Bytes = BS Util . input Stream To Byte ( diff Input Stream )  ;  byte [  ]  new Bytes = patch Fast ( old Bytes, old Bytes . length, diff Bytes, diff Bytes . length, 0 )  ;   Output Stream new Output Stream = new  File Output Stream ( new File )  ;  try {     new Output Stream . write ( new Bytes )  ;  } finally {     new Output Stream . close (  )  ;  } return RETURN_SUCCESS ; }"
3327,"public float [  ]  get Float Values (  ) {  Array Utils . convert Doubles To Floats ( m, m Float )  ;  return m Float ; }"
3328,"private boolean start Random Game (  ) { // find out all the games that are ready to play  List< Abstract Launch> games = m Game Launch Collection . get Ready Games (  )  ;  // now pick one of the games from games and launch it if  ( games . size (  )  > 0 )  {      Random r = new  Random (  )  ;      int index = r . next Int ( games . size (  )  )  ;       Abstract Launch game = games . get ( index )  ;       Santa Log . d ( TAG,  String . format ( "" Picked a game at random  [ %s ] "", game . get Title (  )  )  )  ;      // launch the game by simulating a click     game . on Click ( game . get Click Target (  )  )  ;      //  App  Measurement      Measurement Manager . record Custom Event ( m Measurement, get String ( R . string . analytics_event_category_launch ) , get String ( R . string . analytics_launch_action_voice ) , game . get Title (  )  )  ;      return true ;  } else {     return false ;  }}"
3329,"public  Do Not Hash View Model_ click Listener ( @ Non Null  View .  On Click Listener click Listener ) { if  ( click Listener == null )  {     throw new  Illegal Argument Exception ( ""click Listener cannot be null"" )  ;  } assigned Attributes_epoxy Generated Model . set ( 1 )  ;  on Mutation (  )  ;  this . click Listener_ On Click Listener = click Listener ;  return this ; }"
3330,"public static boolean compare Method (  Dex Backed Method Implementation base Method,  Dex Backed Method Implementation new Method ) {  String base Method Str =  Smali Code Utils . method Implemention To Code ( base Method, false )  ;   String new Method Str =  Smali Code Utils . method Implemention To Code ( new Method, false )  ;  if  (  String Utils . equals ( base Method Str, new Method Str )  )  {     return true ;  } else {     return false ;  }//        if  ( null != base Method && null != new Method )  {//             List<  Instruction> a =  Lists . new Array List (  )  ; //             List< Instruction> b =  Lists . new Array List (  )  ; //            for (  Instruction instruction:base Method . get Instructions (  )  ) {//                a . add ( instruction )  ; //            }//            for (  Instruction instruction:new Method . get Instructions (  )  ) {//                b . add ( instruction )  ; //            }////            return base Method . get Register Count (  )  == new Method . get Register Count (  ) //                    && equal Try Blocks ( base Method . get Try Blocks (  ) , new Method . get Try Blocks (  )  )  && equals Instruction ( a,b )  ; //        } else if  ( null == base Method && null == new Method )  {//            return true ; //        } else {//            return false ; //        }}"
3331,public  Rest Template get Rest Template (  ) { return this . rest Template ; }
3332,"public final int read ( byte [  ]  ba, int off, int len )  throws IO Exception{ //  For efficiency, we avoid one layer of wrapper return is . read ( ba, off, len )  ; }"
3333,public  Iterator< Map Buffer Entry> iterator (  ) { return new  Iterator< Map Buffer Entry> (  )  {     short current = 0 ;      short last =  ( short )   ( get Count (  )  - SHORT_ONE )  ;      @ Override     public boolean has Next (  )  {         return current <= last ;      }     @ Override     public  Map Buffer Entry next (  )  {         return new  Map Buffer Entry ( get Key Offset For Bucket Index ( current++ )  )  ;      } } ; }
3334,"public void radius (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . radius (  )  ; "" )  ; }"
3335,"public com . anychart . charts .  Sparkline first Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . first Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
3336,"private static  String get Cache Key (  String url, int max Width, int max Height,  Scale Type scale Type ) { return new  String Builder ( url . length (  )  + 12 )  . append ( ""#W"" )  . append ( max Width )  . append ( ""#H"" )  . append ( max Height )  . append ( ""#S"" )  . append ( scale Type . ordinal (  )  )  . append ( url )  . to String (  )  ; }"
3337,"private void set Up Memory Card (  View view Card,  Memory Card card ) { view Card . set On Click Listener ( this )  ;  card . m View = view Card ;  view Card . set Tag ( card )  ;  view Card . find View By Id ( R . id . card_locked )  . set Visibility (  View . GONE )  ;  view Card . find View By Id ( R . id . card_frame )  . set Visibility (  View . VISIBLE )  ;   (  (  Image View )  view Card . find View By Id ( R . id . card_cloak )  )  . set Image Resource ( card . m Card Cloak Id )  ;  view Card . find View By Id ( R . id . card_cloak )  . set Visibility (  View . VISIBLE )  ;   (  (  Image View )  view Card . find View By Id ( R . id . card_image )  )  . set Image Resource ( card . m Card Image Id )  ;  view Card . find View By Id ( R . id . card_image )  . set Visibility (  View . VISIBLE )  ;  view Card . find View By Id ( R . id . card_pane_right )  . clear Animation (  )  ;  view Card . find View By Id ( R . id . card_pane_left )  . clear Animation (  )  ;  view Card . find View By Id ( R . id . card_pane_left )  . set Visibility (  View . VISIBLE )  ;  view Card . find View By Id ( R . id . card_pane_right )  . set Visibility (  View . VISIBLE )  ;  view Card . find View By Id ( R . id . card_cover )  . set Visibility (  View . INVISIBLE )  ; }"
3338,"public  Field get Field (  Class<?> model Class,  String json Key ) { //  Try to retrieve it from cache  Field field = get Cached Field ( model Class, json Key )  ;  //  If not cached, try reflection if  ( field == null )  {     field = find Field ( model Class, json Key )  ;      //  Null values are also cached because it will make the next failure quicker     set Cached Field ( model Class, json Key, field )  ;  } return field ; }"
3339,"private static void start Events Consumption (  ) { LOGGER . info ( ""starting UI events consumption processors"" )  ;  /*      *  This  Observable  (  Observable . interval )  cycles every EVENT_CONSUMPTION_INTERVAL millis      * we observe results on a new  Thread and remove items from non-UI queues      */ rx .  Observable . interval ( EVENT_CONSUMPTION_INTERVAL,  Time Unit . MILLISECONDS )  . on Backpressure Buffer (  )  . subscribe On (  Schedulers . new Thread (  )  )  . observe On (  Schedulers . new Thread (  )  )  . subscribe (  a Long1 -> {     if  ( !m Network Events . is Empty (  )  )  {          Object ev = m Network Events . remove ( 0 )  ;          log Event ( ev, false )  ;          BUS . post ( ev )  ;      } else if  ( !m Data Events . is Empty (  )  )  {          Object ev = m Data Events . remove ( 0 )  ;          log Event ( ev, false )  ;          BUS . post ( ev )  ;      } else if  ( !m Generic Events . is Empty (  )  )  {          Object ev = m Generic Events . remove ( 0 )  ;          log Event ( ev, false )  ;          BUS . post ( ev )  ;      } else if  ( !m Context Events . is Empty (  )  )  {          Object ev = m Context Events . remove ( 0 )  ;          log Event ( ev, false )  ;          BUS . post ( ev )  ;      } } )  ;  /*      *  This  Observable  (  Observable . interval )  cycles every EVENT_CONSUMPTION_INTERVAL millis      * we observe results on the UI  Thread and remove items UI queues      */ rx .  Observable . interval ( EVENT_CONSUMPTION_INTERVAL,  Time Unit . MILLISECONDS )  . on Backpressure Buffer (  )  . subscribe On (  Schedulers . new Thread (  )  )  . observe On ( //UI  Events must be posted on the  Main  Thread  Android Schedulers . main Thread (  )  )  . subscribe (  a Long -> {     if  ( !m UI Events . is Empty (  )  )  {          Object ev = m UI Events . remove ( 0 )  ;          log Event ( ev, true )  ;          UI_BUS . post ( ev )  ;      } } )  ; }"
3340,public boolean remove ( int val ) { if  ( map . contains Key ( val )  )  {     map . remove ( val )  ;      values . remove ( values . index Of ( val )  )  ;      return true ;  } return false ; }
3341,"public static  Alpha Animation fade Out ( final  View view, int duration, final  Animation .  Animation Listener listener, boolean is Need Animation ) { if  ( view == null )  {     return null ;  } if  ( is Need Animation )  {      Alpha Animation alpha = new  Alpha Animation ( 1, 0 )  ;      alpha . set Interpolator ( new  Decelerate Interpolator (  )  )  ;      alpha . set Duration ( duration )  ;      alpha . set Animation Listener ( new  Animation .  Animation Listener (  )  {         @ Override         public void on Animation Start (  Animation animation )  {             if  ( listener != null )  {                 listener . on Animation Start ( animation )  ;              }         }         @ Override         public void on Animation End (  Animation animation )  {             view . set Visibility (  View . GONE )  ;              if  ( listener != null )  {                 listener . on Animation End ( animation )  ;              }         }         @ Override         public void on Animation Repeat (  Animation animation )  {             if  ( listener != null )  {                 listener . on Animation Repeat ( animation )  ;              }         }     } )  ;      view . start Animation ( alpha )  ;      return alpha ;  } else {     view . set Visibility (  View . GONE )  ;      return null ;  }}"
3342,"protected  Optional< String> lookup (  Path developer Dir ) { return cache . compute If Absent ( developer Dir,  ignored -> {      Path version Plist = developer Dir . get Parent (  )  . resolve ( ""version . plist"" )  ;      NS String result ;      try {         NS Dictionary dict =  ( NS Dictionary )   Property List Parser . parse (  Files . read All Bytes ( version Plist )  )  ;          result =  ( NS String )  dict . get ( "" Product Build Version"" )  ;      } catch  ( IO Exception |  Class Cast Exception | SAX Exception |  Property List Format Exception |  Parse Exception e )  {         LOG . warn ( e, ""%s:  Cannot find xcode build version, file is in an invalid format . "", version Plist )  ;          return  Optional . empty (  )  ;      } catch  (  Parser Configuration Exception e )  {         throw new  Illegal State Exception ( ""plist parser threw unexpected exception"", e )  ;      }     if  ( result != null )  {         return  Optional . of ( result . to String (  )  )  ;      } else {         LOG . warn ( ""%s:  Cannot find xcode build version, file is in an invalid format . "", version Plist )  ;          return  Optional . empty (  )  ;      } } )  ; }"
3343,"public void notify Observers Of Request Progress (  Cached Spice Request<?> request,  Request Progress request Progress ) {  Request Processing Context request Processing Context = new  Request Processing Context (  )  ;  request Processing Context . set Execution Thread (  Thread . current Thread (  )  )  ;  request Processing Context . set Request Progress ( request Progress )  ;  post ( new  Request Progress Notifier ( request, spice Service Listener List, request Processing Context )  )  ; }"
3344,"public static  Mutable Value Graph<N, V> copy Of (  Value Graph<N, V> graph ) {  Mutable Value Graph<N, V> copy =  Value Graph Builder . from ( graph )  . expected Node Count ( graph . nodes (  )  . size (  )  )  . build (  )  ;  for  ( N node : graph . nodes (  )  )  {     copy . add Node ( node )  ;  } for  (  Endpoint Pair<N> edge : graph . edges (  )  )  {     // require Non Null is safe because the endpoint pair comes from the graph .      copy . put Edge Value ( edge . node U (  ) , edge . node V (  ) , require Non Null ( graph . edge Value Or Default ( edge . node U (  ) , edge . node V (  ) , null )  )  )  ;  } return copy ; }"
3345,"public static int compare ( short a, short b ) { // safe due to restricted range return a - b ; }"
3346,"public com . anychart . core . stock . indicators . HA ha ( com . anychart . data .  Table Mapping mapping,  String series Type ) { return new com . anychart . core . stock . indicators . HA (  String . format (  Locale . US, js Base + "" . ha ( %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, wrap Quotes ( series Type )  )  )  ; }"
3347,"public com . anychart . charts .  Sankey min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
3348,public void print String ( final  String value ) { this . output . println ( value )  ; }
3349,public long get Started Time Stamp (  ) { return started Time Stamp ; }
3350,"void amend Vm Args (  Immutable List .  Builder< String> vm Args Builder,  Source Path Resolver Adapter path Resolver ) { if  ( optional Dummy R Dot Java . is Present (  )  )  {      Immutable List< Has Android Resource Deps> resource Deps = optional Dummy R Dot Java . get (  )  . get Android Resource Deps (  )  ;      vm Args Builder . add ( get Robolectric Resource Directories Arg ( path Resolver, resource Deps )  )  ;      vm Args Builder . add ( get Robolectric Assets Directories ( path Resolver, resource Deps )  )  ;  } //  Force robolectric to only use local dependency resolution .  vm Args Builder . add ( ""- Drobolectric . offline=true"" )  ;  robolectric Manifest . if Present (  s -> vm Args Builder . add (  String . format ( ""-D%s=%s"",  Robolectric Test Helper . ROBOLECTRIC_MANIFEST, path Resolver . get Absolute Path ( s )  )  )  )  ;  robolectric Runtime Dependency . if Present (  s -> vm Args Builder . add (  String . format ( ""-D%s=%s"",  Robolectric Test Helper . ROBOLECTRIC_DEPENDENCY_DIR, path Resolver . get Absolute Path ( s )  )  )  )  ; }"
3351,"public  Http Data Source .  Base Factory get Http Data Source Factory (  String user Agent, @ Nullable  Transfer Listener listener, int connect Timeout Millis, int read Timeout Millis, boolean allow Cross Protocol Redirects ) { //如果返回 null，就使用默认的 return new GSY Exo Http Data Source Factory ( user Agent, listener, connect Timeout Millis, read Timeout Millis, allow Cross Protocol Redirects )  ; }"
3352,"public void get X Scales (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get X Scales (  )  ; "" )  ; }"
3353,"public void advance Clock Without Executing ( long time,  Time Unit unit ) { advance Clock By ( unit . to Millis ( time )  )  ; }"
3354,"public static boolean is Annotation Present (  Class c,  Class<? extends java . lang . annotation .  Annotation> annotation Type ) { return c . is Annotation Present ( annotation Type )  ; }"
3355,"public void update Point (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . update Point (  )  ; "" )  ; }"
3356,"public static  Exo Playback Exception create For Source ( IO Exception cause ) { return new  Exo Playback Exception ( TYPE_SOURCE, cause, /* renderer Index= */ C . INDEX_UNSET )  ; }"
3357,protected void invalidate Byte Buffers ( @ Nullable  Byte Buffer [  ]  buffers ) {}
3358,"public com . anychart . scales .  Linear y Scale (  ) { return new com . anychart . scales .  Linear ( js Base + "" . y Scale (  ) "" )  ; }"
3359,"public com . anychart . charts .  Stock select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3360,"public  Pending Result< Media Channel Result> move Item ( int period Id, int new Index ) {  Assertions . check Argument ( new Index >= 0 && new Index < current Timeline . get Period Count (  )  )  ;  if  ( get Media Status (  )  != null && current Timeline . get Index Of Period ( period Id )  != C . INDEX_UNSET )  {     return remote Media Client . queue Move Item To New Index ( period Id, new Index, null )  ;  } return null ; }"
3361,"public static  String format Uuid ( @ Non Null final  String uuid Hex ) { if  ( is Uuid Pattern ( uuid Hex )  )  {     return new  String Buffer ( uuid Hex )  . insert ( 8, ""-"" )  . insert ( 13, ""-"" )  . insert ( 18, ""-"" )  . insert ( 23, ""-"" )  . to String (  )  . to Upper Case (  Locale . US )  ;  } return uuid Hex ; }"
3362,public  Event Bus get Event Bus (  ) { return event Bus ; }
3363,public boolean has No Drag Offset (  ) { return m View Port Handler . has No Drag Offset (  )  ; }
3364,"public static  Deferred Timeline create With Dummy Timeline ( @ Nullable  Object window Tag ) { return new  Deferred Timeline ( new  Dummy Timeline ( window Tag ) , DUMMY_ID )  ; }"
3365,"public void set Root Async (  Section section ) { if  ( m Released )  {     throw new  Illegal State Exception ( "" Setting root on a released tree"" )  ;  } synchronized  ( this )  {     if  ( m Current Section != null && m Current Section . get Id (  )  == section . get Id (  )  )  {         return ;      }     if  ( m Next Section != null && m Next Section . get Id (  )  == section . get Id (  )  )  {         return ;      }     m Next Section = copy ( section, false )  ;  } final  Changeset Debug Info changeset Debug Info = m Changeset Debug == null ? null : new  Changeset Debug Info (  Apply New Change Set . SET_ROOT_ASYNC, section . get Simple Name (  ) ,  Thread . current Thread (  )  . get Stack Trace (  )  )  ;  m Calculate Change Set Runnable . ensure Posted (  Apply New Change Set . SET_ROOT_ASYNC, null, changeset Debug Info )  ; }"
3366,"public com . anychart . core . utils .  Padding set (  Number [  ]  value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set ( %s, %s, %s, %s )  ; "",  Arrays . to String ( value1 ) , value2, value3, value4 )  )  ;  return this ; }"
3367,public int get Messages Sent (  ) { return this . num Of Message Sent ; }
3368,public float get Min Scale Factor (  ) { return m Min Scale Factor ; }
3369,public void set Min Frame (  String marker Name ) { lottie Drawable . set Min Frame ( marker Name )  ; }
3370,"public com . anychart . core . ui .  Timeline row Odd Fill ( com . anychart . graphics . vector .  Gradient Key value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Odd Fill ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
3371,"public com . anychart . standalones .  Labels Factory disable Pointer Events (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . disable Pointer Events ( %s )  ; "", enabled )  )  ;  return this ; }"
3372,public UI Config<T> set Message Time Format (  String format ) { this . message Time Format = format ;  return this ; }
3373,public void set Fixed Bar Width ( boolean _fixed Bar Width ) { m Fixed Bar Width = _fixed Bar Width ;  on Data Changed (  )  ; }
3374,public final void set Server Observer ( @ Non Null final  Server Observer observer ) { this . server Observer = observer ; }
3375,public  Builder set Name Bytes ( com . google . protobuf .  Byte String value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } check Byte String Is Utf8 ( value )  ;  name_ = value ;  on Changed (  )  ;  return this ; }
3376,"private static  String convert To Quoted String (  String s ) { if  ( s == null || s . is Empty (  )  )  {     return null ;  } //  If already quoted, return as-is if  ( s . char At ( 0 )  == '""' && s . char At ( s . length (  )  - 1 )  == '""' )  {     return s ;  } return '\""' + s + '\""' ; }"
3377,public boolean is Set ( _ Fields field ) { if  ( field == null )  {     throw new java . lang .  Illegal Argument Exception (  )  ;  } switch ( field )  {     case MANIFEST_KEY:         return is Set Manifest Key (  )  ;  } throw new java . lang .  Illegal State Exception (  )  ; }
3378,"private static  File get Image Cache Dir (  Context context,  String cache Name ) {  File cache Dir = context . get External Cache Dir (  )  ;  if  ( cache Dir != null )  {      File result = new  File ( cache Dir, cache Name )  ;      if  ( !result . mkdirs (  )  &&  ( !result . exists (  )  || !result . is Directory (  )  )  )  {         //  File wasn't able to create a directory, or the result exists but not a directory         return null ;      }     return result ;  } if  (  Log . is Loggable ( TAG,  Log . ERROR )  )  {      Log . e ( TAG, ""default disk cache dir is null"" )  ;  } return null ; }"
3379,"public com . anychart . core . stock . scrollerseries .  Spline container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
3380,"void init ( int expected Size ) {  Preconditions . check Argument ( expected Size >= 0, "" Expected size must be >= 0"" )  ;  //  Save expected Size for use in alloc Arrays (  )  this . metadata =  Ints . constrain To Range ( expected Size, 1,  Compact Hashing . MAX_SIZE )  ; }"
3381,"public com . anychart . charts .  Linear Gauge select Marquee Fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
3382,public  Authorization Service Configuration get Authorization Service Configuration (  ) { if  ( m Last Authorization Response != null )  {     return m Last Authorization Response . request . configuration ;  } return m Config ; }
3383,public  Builder set Was Here ( boolean was Here ) { this . was Here = was Here ;  return this ; }
3384,public void set Result Code (  String result Code ) { this . result Code = result Code ; }
3385,public  Object [  ]  get Path (  ) { if  ( path != null )      return path . get Path (  )  ;  return null ; }
3386,protected void on Gank Audio (  ) {}
3387,"public static boolean remove ( @ Non Null final  String key, @ Non Null final  Cache Disk Utils cache Disk Utils ) { return cache Disk Utils . remove ( key )  ; }"
3388,public final int hash Code (  ) { return this . protocol . hash Code (  )  ^  ( this . major * 100000 )  ^ this . minor ; }
3389,public  Builder is Round ( boolean is Round ) { this . is Round = is Round ;  return this ; }
3390,"public static  Fat Jar load (  Class Loader loader )  throws  Class Not Found Exception, IO Exception{  Input Stream input Stream = loader . get Resource As Stream ( FAT_JAR_INFO_RESOURCE )  ;  try {      Buffered Input Stream buffered Input Stream = new  Buffered Input Stream ( input Stream )  ;      try {          Object Input Stream object Input Stream = new  Object Input Stream ( buffered Input Stream )  ;          try {             return  (  Fat Jar )  object Input Stream . read Object (  )  ;          } finally {             object Input Stream . close (  )  ;          }     } finally {         buffered Input Stream . close (  )  ;      } } finally {     input Stream . close (  )  ;  }}"
3391,"public  Observable< Result> delete Favort (  String publish Id,  String publish User Id ) { return  Observable . create ( new  Observable .  On Subscribe< Result> (  )  {     @ Override     public void call (  Subscriber<? super  Result> subscriber )  {          Result result = new  Result (  )  ;          subscriber . on Next ( result )  ;          subscriber . on Completed (  )  ;           Log Utils . logd ( result . to String (  )  )  ;      } } )  . compose (  Rx Schedulers . < Result>io_main (  )  )  ; }"
3392,"public T size Multiplier ( @ Float Range ( from = 0, to = 1 )  float size Multiplier ) { if  ( is Auto Clone Enabled )  {     return clone (  )  . size Multiplier ( size Multiplier )  ;  } if  ( size Multiplier < 0f || size Multiplier > 1f )  {     throw new  Illegal Argument Exception ( ""size Multiplier must be between 0 and 1"" )  ;  } this . size Multiplier = size Multiplier ;  fields |= SIZE_MULTIPLIER ;  return self Or Throw If Locked (  )  ; }"
3393,"public static boolean is End Tag (  Xml Pull Parser xpp,  String name )  throws  Xml Pull Parser Exception{ return is End Tag ( xpp )  && xpp . get Name (  )  . equals ( name )  ; }"
3394,"public com . anychart . charts .  Waterfall start Select Marquee (  Boolean repeat ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . start Select Marquee ( %s )  ; "", repeat )  )  ;  return this ; }"
3395,"public com . anychart . core . stock . indicators . DMI adx Series ( com . anychart . enums .  Stock Series Type type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . adx Series ( %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
3396,int get Mutations Read By Key (  ) { return mutations Read By Key [ 0 ]  ; }
3397,"public  Fragment Transaction begin Transaction (  ) { throw new  Unsupported Operation Exception ( ""STUB!"" )  ; }"
3398,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
3399,"public void get (  String var_args ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get ( %s )  ; "", wrap Quotes ( var_args )  )  )  ; }"
3400,public  Fake Data get Data (  String uri ) { return get Data (  Uri . parse ( uri )  )  ; }
3401,public void reset Lottery (  ) { repository . delete All (  )  ; }
3402,"public  List<? extends  Event> apply Server Range Merges ( final  Path path,  List< Range Merge> range Merges ) {  Sync Point sync Point = sync Point Tree . get ( path )  ;  if  ( sync Point == null )  {     //  Removed view, so it's safe to just ignore this update     return  Collections . empty List (  )  ;  } else {     //  This could be for any ""complete""  ( unfiltered )  view, and if there is more than one complete     // view, they should each have the same cache so it doesn't matter which one we use .       View view = sync Point . get Complete View (  )  ;      if  ( view != null )  {          Node server Node = view . get Server Cache (  )  ;          for  (  Range Merge merge : range Merges )  {             server Node = merge . apply To ( server Node )  ;          }         return apply Server Overwrite ( path, server Node )  ;      } else {         // ignore this range merge         return  Collections . empty List (  )  ;      } }}"
3403,"public static void write Xml Output (  List< Test Results> all Results,  Writer writer )  throws IO Exception{ try {     //  Build the XML output .       Document Builder Factory dbf =  Document Builder Factory . new Instance (  )  ;       Document Builder doc Builder = dbf . new Document Builder (  )  ;       Document doc = doc Builder . new Document (  )  ;      //  Create the <tests> tag .   All test data will be within this tag .       Element tests El = doc . create Element ( ""tests"" )  ;      doc . append Child ( tests El )  ;      for  (  Test Results results : all Results )  {         for  (  Test Case Summary test Case : results . get Test Cases (  )  )  {             //  Create the <test name="" .  .  . "" status="" .  .  . "" time="" .  .  . ""> tag .              //  This records a single test case result in the test suite .               Element test El = doc . create Element ( ""test"" )  ;              test El . set Attribute ( ""name"", test Case . get Test Case Name (  )  )  ;              test El . set Attribute ( ""status"", test Case . is Success (  )  ? ""PASS"" : ""FAIL"" )  ;              test El . set Attribute ( ""time"",  Long . to String ( test Case . get Total Time (  )  )  )  ;              test El . set Attribute ( ""target"", results . get Build Target (  )  . get Fully Qualified Name (  )  )  ;              tests El . append Child ( test El )  ;              //  Loop through the test case and add XML data  ( name, message, and             // stacktrace )  for each individual test, if present .              add Extra Xml Info ( test Case, test El )  ;          }     }     //  Write XML to the writer .       Transformer Factory tf =  Transformer Factory . new Instance (  )  ;       Transformer transformer = tf . new Transformer (  )  ;      transformer . transform ( new DOM Source ( doc ) , new  Stream Result ( writer )  )  ;  } catch  (  Transformer Exception |  Parser Configuration Exception ex )  {     throw new IO Exception ( "" Unable to build the XML document!"" )  ;  }}"
3404,public static boolean binary Data Is Tiff Format ( byte [  ]  data ) { if  ( data . length < 4 )  {     return false ;  } // Read signature  Intel return  (  (  ( 0x49 ==  ( data [ 0 ]  & 0xff )  )  &&  ( 0x49 ==  ( data [ 1 ]  & 0xff )  )  &&  ( 0x2a ==  ( data [ 2 ]  & 0xff )  )  &&  ( 0x00 ==  ( data [ 3 ]  & 0xff )  )  )  ||  (  ( 0x4d ==  ( data [ 0 ]  & 0xff )  )  &&  ( 0x4d ==  ( data [ 1 ]  & 0xff )  )  &&  ( 0x00 ==  ( data [ 2 ]  & 0xff )  )  &&  ( 0x2a ==  ( data [ 3 ]  & 0xff )  )  )  )  ; }
3405,"private boolean is Focus Valid (  Section Location Info section Location Info, int index ) { if  ( index >= section Location Info . m Section . get Count (  )  || index < 0 )  {      String error Message = "" You are trying to request focus with offset on an index that is out of bounds: "" + ""requested "" + index + "" , total "" + section Location Info . m Section . get Count (  )  ;       Components Reporter . emit Message (  Components Reporter .  Log Level . ERROR, OUT_OF_BOUNDS_REQUEST_FOCUS, error Message )  ;      return false ;  } return true ; }"
3406,"public void set Pull Load Enable ( boolean enable ) { m Enable Pull Load = enable ;  if  ( !m Enable Pull Load )  {     m Footer View . hide (  )  ;      m Footer View . set On Click Listener ( null )  ;      //make sure ""pull up"" don't show a line in bottom when listview with one page      set Footer Dividers Enabled ( false )  ;  } else {     m Pull Loading = false ;      m Footer View . show (  )  ;      m Footer View . set State ( X List View Footer . STATE_NORMAL )  ;      //make sure ""pull up"" don't show a line in bottom when listview with one page       set Footer Dividers Enabled ( true )  ;      // both ""pull up"" and ""click"" will invoke load more .      m Footer View . set On Click Listener ( new  On Click Listener (  )  {         @ Override         public void on Click (  View v )  {             start Load More (  )  ;          }     } )  ;  }}"
3407,"public com . anychart . core . axes .  Circular Ticks enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
3408,"protected void validate Overriding Rules (  Set< String> overriding Field Names,  Null Away analysis,  Visitor State state,  Method Tree tree,  Symbol .  Method Symbol overridden Method ) { if  ( overriding Field Names == null )  {     return ;  }  Set< String> overridden Field Names = get Annotation Value Array ( overridden Method, annot Name, false )  ;  if  ( overridden Field Names == null )  {     overridden Field Names =  Collections . empty Set (  )  ;  } overridden Field Names =  Contract Utils . trim Receivers ( overridden Field Names )  ;  if  ( overridden Field Names . contains All ( overriding Field Names )  )  {     return ;  } overriding Field Names . remove All ( overridden Field Names )  ;   String Builder error Message = new  String Builder (  )  ;  error Message . append ( ""precondition inheritance is violated, method in child class cannot have a stricter precondition than its closest overridden method, adding @requires Non Null for fields  [ "" )  ;   Iterator< String> iterator = overridden Field Names . iterator (  )  ;  while  ( iterator . has Next (  )  )  {     error Message . append ( iterator . next (  )  )  ;      if  ( iterator . has Next (  )  )  {         error Message . append ( "", "" )  ;      } } error Message . append ( "" ]  makes this method precondition stricter"" )  ;  state . report Match ( analysis . get Error Builder (  )  . create Error Description ( new  Error Message (  Error Message .  Message Types . WRONG_OVERRIDE_PRECONDITION, error Message . to String (  )  ) , tree, analysis . build Description ( tree ) , state )  )  ; }"
3409,"public void get Stat ( com . anychart . enums .  Statistics key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Stat ( %s )  ; "",  ( key != null )  ? key . get Js Base (  )  : null )  )  ; }"
3410,"public com . anychart . core . stock . scrollerseries .  Spline Area bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
3411,public  Cst String get Name (  ) { return name ; }
3412,"public com . anychart . core . gantt .  Time Line Header overlay (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . overlay ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3413,"public com . anychart . core . ui .  Separator stroke ( com . anychart . graphics . vector .  Colored Fill stroke Or Fill,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( stroke Or Fill != null )  ? stroke Or Fill . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3414,"public static  Request Matcher path Starts With ( final  String url Part ) { return new  Request Matcher ( ""path starts with: "" + url Part )  {     @ Override     protected boolean matches Safely (  Recorded Request item )  {         return item . get Path (  )  . to Lower Case (  Locale . US )  . starts With ( url Part . to Lower Case (  Locale . US )  )  ;      } } ; }"
3415,public int remaining Capacity (  ) { return max Size - size (  )  ; }
3416,"private synchronized void remove Session (  Sync Configuration sync Configuration ) { //noinspection  Constant Conditions if  ( sync Configuration == null )  {     throw new  Illegal Argument Exception ( ""A non-empty 'sync Configuration' is required . "" )  ;  }  Realm Log . debug ( "" Removing session for: %s"", sync Configuration . get Path (  )  )  ;   Sync Session sync Session = sessions . remove ( sync Configuration . get Path (  )  )  ;  if  ( sync Session != null )  {     sync Session . close (  )  ;  } if  ( sessions . is Empty (  )  )  {      Realm Log . debug ( "" Last session dropped .   Remove network listener . "" )  ;       Network State Receiver . remove Listener ( network Listener )  ;  }}"
3417,public static  Immutable Multiset<E> of (  ) { return  (  Immutable Multiset<E> )   Regular Immutable Multiset . EMPTY ; }
3418,"static int adjust Byte Count ( final int offset, final int count, final int memory Size ) { final int available =  Math . max ( 0, memory Size - offset )  ;  return  Math . min ( available, count )  ; }"
3419,"public  Hashtable< String,  Shader Var> get Uniforms (  ) { return m Uniforms ; }"
3420,"public void selection Mode (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . selection Mode (  )  ; "" )  ; }"
3421,"public  Value Animator animate Scroll ( final int scroll Y ) { // create an instance of this animator that is shared between calls if  ( m Manual Scroll Animator == null )  {     m Manual Scroll Animator =  Value Animator . of Float (  . 0 F, 1 . F )  ;      m Manual Scroll Animator . set Evaluator ( new  Float Evaluator (  )  )  ;      m Manual Scroll Animator . add Listener ( new  Self Update Animation Listener (  )  )  ;  } else {     // unregister our update listener     if  ( m Manual Scroll Update Listener != null )  {         m Manual Scroll Animator . remove Update Listener ( m Manual Scroll Update Listener )  ;      }     // cancel if running     if  ( m Manual Scroll Animator . is Running (  )  )  {         m Manual Scroll Animator . end (  )  ;      } } final int y ;  if  ( scroll Y < 0 )  {     y = 0 ;  } else if  ( scroll Y > m Max Scroll Y )  {     y = m Max Scroll Y ;  } else {     y = scroll Y ;  } final int start Y = get Scroll Y (  )  ;  final int diff = y - start Y ;  m Manual Scroll Update Listener = new  Value Animator .  Animator Update Listener (  )  {     @ Override     public void on Animation Update (  Value Animator animation )  {         final float fraction = animation . get Animated Fraction (  )  ;          scroll To ( 0,  ( int )   ( start Y +  ( diff * fraction )  +  . 5 F )  )  ;      } } ;  m Manual Scroll Animator . add Update Listener ( m Manual Scroll Update Listener )  ;  return m Manual Scroll Animator ; }"
3422,public  String get Chart Title (  ) { return m Chart Title ; }
3423,"public com . anychart . charts .  Venn palette ( com . anychart . palettes .  Range Colors settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
3424,"protected void clear Password (  ) { if  ( password != null )  {      Arrays . fill ( password,  ( byte )  0 )  ;  } password = new byte [ 0 ]  ; }"
3425,"public static  String get Rinkeby Key Directory (  ) { return  String . format ( ""%s%srinkeby%skeystore"", get Default Key Directory (  ) ,  File . separator,  File . separator )  ; }"
3426,public com . facebook . buck . remoteexecution . proto .  Capability Value get Testing (  ) { if  ( testing Builder_ == null )  {     return testing_ == null ? com . facebook . buck . remoteexecution . proto .  Capability Value . get Default Instance (  )  : testing_ ;  } else {     return testing Builder_ . get Message (  )  ;  }}
3427,public static boolean delete (  String key ) { return hawk Facade . delete ( key )  ; }
3428,"public com . anychart . core . stock . scrollerseries .  Spline Area hatch Fill (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "", enabled )  )  ;  return this ; }"
3429,"public void process Input Dir (  Settings texture Packer Settings )  throws IO Exception{  File Handle input Dir Handle = new  File Handle ( input Dir . get Canonical Path (  )  )  ;   File [  ]  map Files In Current Dir = input Dir . list Files ( new  Tmx Filter (  )  )  ;  tilesets To Pack = new  Object Map< String,  Tiled Map Tile Set> (  )  ;  //  Processes the maps inside input Dir for  (  File map File : map Files In Current Dir )  {     process Single Map ( map File, input Dir Handle, texture Packer Settings )  ;  } process Subdirectories ( input Dir Handle, texture Packer Settings )  ;  boolean combine Tilesets = this . settings . combine Tilesets ;  if  ( combine Tilesets == true )  {     pack Tilesets ( input Dir Handle, texture Packer Settings )  ;  }}"
3430,public static int extract Wrapped View Type Part ( int composed View Type ) { return  ( composed View Type <<  ( 32 - BIT_WIDTH_WRAPPED_VIEW_TYPE - BIT_OFFSET_WRAPPED_VIEW_TYPE )  )  >>  ( 32 - BIT_WIDTH_WRAPPED_VIEW_TYPE )  ; }
3431,public final int get Descriptor Count (  ) { return this . get Descriptors (  )  . size (  )  ; }
3432,"public static  Bitmap get Bitmap From Resources (  Context context, int resid ) {  Resources res = context . get Resources (  )  ;   Bitmap bitmap =  Bitmap Factory . decode Resource ( res, resid )  ;  return bitmap ; }"
3433,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_ENCODING_TIME ; }
3434,"public void share With Pinterest (  String link Or Options,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Pinterest ( %s, %s )  ; "", wrap Quotes ( link Or Options ) , wrap Quotes ( description )  )  )  ; }"
3435,"public  Parameters Builder set Max Video Size ( int max Video Width, int max Video Height ) { this . max Video Width = max Video Width ;  this . max Video Height = max Video Height ;  return this ; }"
3436,"public void test Multiple Pres Escaped (  ) {  String html = ""a<pre> c </pre>d<pre>\te\t</pre>"" ;  assert Equals ( ""a<pre>&nbsp ; c&nbsp ; </pre>d<pre>&nbsp ; &nbsp ; &nbsp ; &nbsp ; e&nbsp ; &nbsp ; &nbsp ; &nbsp ; </pre>"", format ( html )  )  ; }"
3437,private void check Init With Activity (  ) { if  ( m Parent Bar == null )  {     m Parent Bar = with ( m Activity )  ;  } if  ( m Parent Bar != null && !m Parent Bar . m Initialized )  {     m Parent Bar . init (  )  ;  }}
3438,public boolean is Visible (  ) { int child Count = get Child Count (  )  ;  for  ( int i = 0 ;  i < child Count ;  i++ )  {     if  ( get Child At ( i )  . get Visibility (  )  == VISIBLE )  {         return true ;      } } return false ; }
3439,"public com . anychart . charts .  Linear Gauge animation (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . animation ( %s )  ; "", settings )  )  ;  return this ; }"
3440,"public static  String uuid To Hex ( @ Non Null final  String uuid ) { return uuid . replace ( ""-"", """" )  . to Upper Case (  Locale . US )  ; }"
3441,"public void third Value Anchor (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . third Value Anchor (  )  ; "" )  ; }"
3442,"public void replace Class Name (  String old Name,  String new Name ) { check Modify (  )  ; }"
3443,"public void init ( int chunk Uid, boolean should Splice In, boolean reusing Extractor ) { if  ( !reusing Extractor )  {     audio Sample Queue Mapping Done = false ;      video Sample Queue Mapping Done = false ;  } this . chunk Uid = chunk Uid ;  for  (  Sample Queue sample Queue : sample Queues )  {     sample Queue . source Id ( chunk Uid )  ;  } if  ( should Splice In )  {     for  (  Sample Queue sample Queue : sample Queues )  {         sample Queue . splice (  )  ;      } }}"
3444,protected  Intent create Manage Blocked Numbers Intent (  ) { return this . manage Block Numbers Intent ; }
3445,"public com . anychart . charts .  Cartesian3d max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
3446,public void set Striped ( boolean striped ) { this . striped = striped ;  for  ( int i = 0 ;  i < get Child Count (  )  ;  i++ )  {     retrieve Child ( i )  . set Striped ( striped )  ;  }}
3447,"public static  Executor Service new Cached Thread Pool (  ) {  Thread Pool Executor executor = new  Thread Pool Executor ( CORE_POOL_SIZE, MAX_POOL_SIZE, KEEP_ALIVE_TIME,  Time Unit . SECONDS, new  Linked Blocking Queue< Runnable> (  )  )  ;  allow Core Thread Timeout ( executor, true )  ;  return executor ; }"
3448,"public com . anychart . core .  Separate Chart cancel Marquee (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . cancel Marquee (  )  ; "" )  ;  return this ; }"
3449,public  Builder set Scopes (  String .  .  .  scopes ) { if  ( scopes == null )  {     scopes = new  String [ 0 ]  ;  } set Scopes (  Arrays . as List ( scopes )  )  ;  return this ; }
3450,"private void add Crouton To View ( final  Crouton crouton ) { // don't add if it is already showing if  ( crouton . is Showing (  )  )  {     return ;  } final  View crouton View = crouton . get View (  )  ;  if  ( null == crouton View . get Parent (  )  )  {      View Group .  Layout Params params = crouton View . get Layout Params (  )  ;      if  ( null == params )  {         params = new  View Group .  Margin Layout Params (  View Group .  Layout Params . MATCH_PARENT,  View Group .  Layout Params . WRAP_CONTENT )  ;      }     // display  Crouton in  View Group if it has been supplied     if  ( null != crouton . get View Group (  )  )  {         final  View Group crouton View Group = crouton . get View Group (  )  ;          if  ( should Add View Without Position ( crouton View Group )  )  {             crouton View Group . add View ( crouton View, params )  ;          } else {             crouton View Group . add View ( crouton View, 0, params )  ;          }     } else {          Activity activity = crouton . get Activity (  )  ;          if  ( null == activity || activity . is Finishing (  )  )  {             return ;          }         handle Translucent Action Bar (  (  View Group .  Margin Layout Params )  params, activity )  ;          handle Action Bar Overlay (  (  View Group .  Margin Layout Params )  params, activity )  ;          activity . add Content View ( crouton View, params )  ;      } } //  This is needed so the animation can use the measured with/height crouton View . request Layout (  )  ;   View Tree Observer observer = crouton View . get View Tree Observer (  )  ;  if  ( null != observer )  {     observer . add On Global Layout Listener ( new  View Tree Observer .  On Global Layout Listener (  )  {         @ Override         @ Target Api ( 16 )          public void on Global Layout (  )  {             if  (  Build . VERSION . SDK_INT <  Build . VERSION_CODES . JELLY_BEAN )  {                 crouton View . get View Tree Observer (  )  . remove Global On Layout Listener ( this )  ;              } else {                 crouton View . get View Tree Observer (  )  . remove On Global Layout Listener ( this )  ;              }             if  ( crouton . get In Animation (  )  != null )  {                 crouton View . start Animation ( crouton . get In Animation (  )  )  ;                  announce For Accessibility Compat ( crouton . get Activity (  ) , crouton . get Text (  )  )  ;                  if  (  Configuration . DURATION_INFINITE != crouton . get Configuration (  )  . duration In Milliseconds )  {                     send Message Delayed ( crouton,  Messages . REMOVE_CROUTON, crouton . get Configuration (  )  . duration In Milliseconds + crouton . get In Animation (  )  . get Duration (  )  )  ;                  }             }         }     } )  ;  }}"
3451,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
3452,"public com . anychart . core . annotations .  Trend Channel stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3453,public static  Declared Type get Type Mirror (  Annotation Value value ) { return  Type Mirror Visitor . INSTANCE . visit ( value )  ; }
3454,public  Single< Boolean> is Impressed (  Campaign Proto .  Thick Content content ) {  String campaign Id = content . get Payload Case (  )  . equals (  Campaign Proto .  Thick Content .  Payload Case . VANILLA_PAYLOAD )  ? content . get Vanilla Payload (  )  . get Campaign Id (  )  : content . get Experimental Payload (  )  . get Campaign Id (  )  ;  return get All Impressions (  )  . map (  Campaign Impression List::get Already Seen Campaigns List )  . flat Map Observable (  Observable::from Iterable )  . map (  Campaign Impression::get Campaign Id )  . contains ( campaign Id )  ; }
3455,public void add Name Source Listener (  Name Source .  Listener listener ) { if  ( name Source Listeners == null )      name Source Listeners = new  Array List (  )  ;  name Source Listeners . add ( listener )  ; }
3456,public  Polygon Options get Polygon Options (  ) { return m Polygon Style . to Polygon Options (  )  ; }
3457,"public com . anychart . core . waterfall . series .  Waterfall waterfall ( com . anychart . data .  View data,  String csv Settings ) { return new com . anychart . core . waterfall . series .  Waterfall (  String . format (  Locale . US, js Base + "" . waterfall ( %s, %s ) "",  ( data != null )  ? data . get Js Base (  )  : null, wrap Quotes ( csv Settings )  )  )  ; }"
3458,"public static  Function< Item,  Double> calc Loudness (  String audio Data Field ) { return new  Audio Loudness Calculator ( audio Data Field )  ; }"
3459,"public com . anychart . core . gantt . edit .  Structure Edit placement Stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . placement Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3460,"public com . anychart . core . ui .  Center content ( com . anychart . graphics . vector .  Element content Settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . content ( %s )  ; "",  ( content Settings != null )  ? content Settings . get Js Base (  )  : null )  )  ;  return this ; }"
3461,public  Refresh Layout set Footer Inset Start Px ( int inset Px ) { m Footer Inset Start = inset Px ;  return this ; }
3462,"public void get Usernames ( final  Usernames Callback callback ) { if  ( NUMBER_OF_USERS < 0 )  {     callback . set Error (  )  ;      return ;  }  Handler h = new  Handler (  )  ;   Runnable r = new  Runnable (  )  {     @ Override     public void run (  )  {         //  Create a fake list of usernames          String name1 = "" Joe"" ;           String name2 = "" Amanda"" ;          final  List< String> usernames = new  Array List< String> (  )  ;           Random random = new  Random (  )  ;          for  ( int i = 0 ;  i < NUMBER_OF_USERS ;  i++ )  {             int number = random . next Int ( 50 )  ;              if  (  System . current Time Millis (  )  % 2 == 0 )  {                 usernames . add ( name1 + number )  ;              } else {                 usernames . add ( name2 + number )  ;              }         }         callback . set Usernames ( usernames . to Array ( new  String [ usernames . size (  )  ]  )  )  ;      } } ;  //  Simulate network latency h . post Delayed ( r, 2000 )  ; }"
3463,"public  Transport open ( UR Iish uri )  throws  Not Supported Exception,  Transport Exception{ throw new  Not Supported Exception ( J Git Text . get (  )  . transport Needs Repository )  ; }"
3464,"public void test Strong Replaced With B (  ) {  String html = ""<strong>a</strong>"" ;  assert Equals ( html, format ( html )  )  ; }"
3465,public void set On Scroll Listener (  On Scroll Listener l ) { on Scroll Listener . set Wrapped Listener ( l )  ;  super . set On Scroll Listener ( on Scroll Listener )  ; }
3466,"protected void on Battery Value Received ( @ Non Null final  Bluetooth Gatt gatt, @ Int Range ( from = 0, to = 100 )  final int value ) {// do nothing}"
3467,"public void set Height ( int height ) { if  ( is JB (  )  )  {     this . height = height ;  } else {      Shadow Display Manager . change Display ( real Object . get Display Id (  ) ,  di -> di . app Height = height )  ;  }}"
3468,"public com . anychart . core . gantt . elements .  Grouping Tasks Element edit (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . edit ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3469,"public  Parameters Builder clear Viewport Size Constraints (  ) { return set Viewport Size (  Integer . MAX_VALUE,  Integer . MAX_VALUE, true )  ; }"
3470,"public com . anychart . charts .  Cartesian padding (  Number value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
3471,"public  Basic Block label To Block ( int label ) { int idx = index Of Label ( label )  ;  if  ( idx < 0 )  {     throw new  Illegal Argument Exception ( ""no such label: "" +  Hex . u2 ( label )  )  ;  } return get ( idx )  ; }"
3472,public void is Equal To Ignoring Scale (  Big Decimal expected ) { compare Values ( expected )  ; }
3473,"public void angles (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . angles (  )  ; "" )  ; }"
3474,"public void default Row Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . default Row Height (  )  ; "" )  ; }"
3475,public static  List< String> get Default Cipher List (  ) { return default Cipher List . get (  )  ; }
3476,"public void init (  Logger Context default Logger Context,  Object key )  throws  Class Not Found Exception,  No Such Method Exception,  Instantiation Exception,  Illegal Access Exception,  Invocation Target Exception{ if  ( this . key == null )  {     this . key = key ;  } else if  ( this . key != key )  {     throw new  Illegal Access Exception ( "" Only certain classes can access this method . "" )  ;  }  String context Selector Str =  Option Helper . get System Property (  Classic Constants . LOGBACK_CONTEXT_SELECTOR )  ;  if  ( context Selector Str == null )  {     context Selector = new  Default Context Selector ( default Logger Context )  ;  } else if  ( context Selector Str . equals ( ""JNDI"" )  )  {     throw new  Runtime Exception ( ""JNDI not supported"" )  ;  } else {     context Selector = dynamical Context Selector ( default Logger Context, context Selector Str )  ;  }}"
3477,private  Object peek (  ) { return data Position < data Size && data [ data Position ]  != null ? data [ data Position ]  . value : null ; }
3478,public  Dfs Pack File [  ]  get Packs (  )  throws IO Exception{ return get Pack List (  )  . packs ; }
3479,"public static void build (  Mesh Part Builder builder, float radius, int divisions, final  Vector3 center, final  Vector3 normal ) { build ( builder, radius, divisions, center . x, center . y, center . z, normal . x, normal . y, normal . z )  ; }"
3480,"public void play Animation (  ) { if  ( animator Set != null )  {     animator Set . cancel (  )  ;  } image View . animate (  )  . cancel (  )  ;  image View . set Scale X ( 0 )  ;  image View . set Scale Y ( 0 )  ;  circle View . set Inner Circle Radius Progress ( 0 )  ;  circle View . set Outer Circle Radius Progress ( 0 )  ;  dots View . set Current Progress ( 0 )  ;  animator Set = new  Animator Set (  )  ;   Object Animator outer Circle Animator =  Object Animator . of Float ( circle View,  Circle View . OUTER_CIRCLE_RADIUS_PROGRESS, 0 . 1f, 1f )  ;  outer Circle Animator . set Duration (  ( long )   ( 250 / animation Speed )  )  ;  outer Circle Animator . set Interpolator ( DECELERATE_INTERPOLATOR )  ;   Object Animator inner Circle Animator =  Object Animator . of Float ( circle View,  Circle View . INNER_CIRCLE_RADIUS_PROGRESS, 0 . 1f, 1f )  ;  inner Circle Animator . set Duration (  ( long )   ( 200 / animation Speed )  )  ;  inner Circle Animator . set Start Delay (  ( long )   ( 200 / animation Speed )  )  ;  inner Circle Animator . set Interpolator ( DECELERATE_INTERPOLATOR )  ;   Object Animator star Scale Y Animator =  Object Animator . of Float ( image View,  Image View . SCALE_Y, 0 . 2f, 1f )  ;  star Scale Y Animator . set Duration (  ( long )   ( 350 / animation Speed )  )  ;  star Scale Y Animator . set Start Delay (  ( long )   ( 250 / animation Speed )  )  ;  star Scale Y Animator . set Interpolator ( OVERSHOOT_INTERPOLATOR )  ;   Object Animator star Scale X Animator =  Object Animator . of Float ( image View,  Image View . SCALE_X, 0 . 2f, 1f )  ;  star Scale X Animator . set Duration (  ( long )   ( 350 / animation Speed )  )  ;  star Scale X Animator . set Start Delay (  ( long )   ( 250 / animation Speed )  )  ;  star Scale X Animator . set Interpolator ( OVERSHOOT_INTERPOLATOR )  ;   Object Animator dots Animator =  Object Animator . of Float ( dots View,  Dots View . DOTS_PROGRESS, 0, 1f )  ;  dots Animator . set Duration (  ( long )   ( 900 / animation Speed )  )  ;  dots Animator . set Start Delay (  ( long )   ( 50 / animation Speed )  )  ;  dots Animator . set Interpolator ( ACCELERATE_DECELERATE_INTERPOLATOR )  ;  animator Set . play Together ( outer Circle Animator, inner Circle Animator, star Scale Y Animator, star Scale X Animator, dots Animator )  ;  animator Set . add Listener ( new  Animator Listener Adapter (  )  {     @ Override     public void on Animation Cancel (  Animator animation )  {         circle View . set Inner Circle Radius Progress ( 0 )  ;          circle View . set Outer Circle Radius Progress ( 0 )  ;          dots View . set Current Progress ( 0 )  ;          image View . set Scale X ( 1 )  ;          image View . set Scale Y ( 1 )  ;      }     @ Override     public void on Animation End (  Animator animation )  {         super . on Animation End ( animation )  ;          if  ( listener != null )  {             listener . on Event Animation End ( image View, is Checked )  ;          }     }     @ Override     public void on Animation Start (  Animator animation )  {         super . on Animation End ( animation )  ;          if  ( listener != null )  {             listener . on Event Animation Start ( image View, is Checked )  ;          }     } } )  ;  animator Set . start (  )  ; }"
3481,"private static  String url To File ( URL url ) { try {     return  Paths . get ( url . to URI (  )  )  . to File (  )  . get Path (  )  ;  } catch  ( URI Syntax Exception e )  {     //  In case of error, fall back to the original implementation .      return url . get File (  )  ;  }}"
3482,public  Page .  Resource Type get Resource Type (  ) { return m Resource Type ; }
3483,"public void create Log File (  Create Log Request request,  Stream Observer< Create Log Response> response Observer ) {  String log File Path = request . get Log File Path (  )  ;  try {     response Observer . on Next ( create File ( request )  )  ;      LOG . debug ( "" Log file created at {}"", log File Path )  ;  } catch  (  Log Daemon Exception e )  {     LOG . error ( "" Failed to create log file at "" + log File Path, e )  ;      response Observer . on Error ( e )  ;  } response Observer . on Completed (  )  ; }"
3484,"public static  Function< List< Item>,  List<T Value>> as Field List (  String field To Collect ) { return new  Stream Field List Collector<> ( field To Collect )  ; }"
3485,public static byte min ( byte .  .  .  array ) { check Argument ( array . length > 0 )  ;  byte min = array [ 0 ]  ;  for  ( int i = 1 ;  i < array . length ;  i++ )  {     if  ( array [ i ]  < min )  {         min = array [ i ]  ;      } } return min ; }
3486,"private static void mul ( float [  ]  mata, float [  ]  matb ) { float v00 = mata [ M00 ]  * matb [ M00 ]  + mata [ M01 ]  * matb [ M10 ]  + mata [ M02 ]  * matb [ M20 ]  ;  float v01 = mata [ M00 ]  * matb [ M01 ]  + mata [ M01 ]  * matb [ M11 ]  + mata [ M02 ]  * matb [ M21 ]  ;  float v02 = mata [ M00 ]  * matb [ M02 ]  + mata [ M01 ]  * matb [ M12 ]  + mata [ M02 ]  * matb [ M22 ]  ;  float v10 = mata [ M10 ]  * matb [ M00 ]  + mata [ M11 ]  * matb [ M10 ]  + mata [ M12 ]  * matb [ M20 ]  ;  float v11 = mata [ M10 ]  * matb [ M01 ]  + mata [ M11 ]  * matb [ M11 ]  + mata [ M12 ]  * matb [ M21 ]  ;  float v12 = mata [ M10 ]  * matb [ M02 ]  + mata [ M11 ]  * matb [ M12 ]  + mata [ M12 ]  * matb [ M22 ]  ;  float v20 = mata [ M20 ]  * matb [ M00 ]  + mata [ M21 ]  * matb [ M10 ]  + mata [ M22 ]  * matb [ M20 ]  ;  float v21 = mata [ M20 ]  * matb [ M01 ]  + mata [ M21 ]  * matb [ M11 ]  + mata [ M22 ]  * matb [ M21 ]  ;  float v22 = mata [ M20 ]  * matb [ M02 ]  + mata [ M21 ]  * matb [ M12 ]  + mata [ M22 ]  * matb [ M22 ]  ;  mata [ M00 ]  = v00 ;  mata [ M10 ]  = v10 ;  mata [ M20 ]  = v20 ;  mata [ M01 ]  = v01 ;  mata [ M11 ]  = v11 ;  mata [ M21 ]  = v21 ;  mata [ M02 ]  = v02 ;  mata [ M12 ]  = v12 ;  mata [ M22 ]  = v22 ; }"
3487,"public com . anychart . charts .  Tag Cloud label (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
3488,"public com . anychart . standalones .  Data Grid top (  Number top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", top )  )  ;  return this ; }"
3489,"static boolean retain Presenter Instance ( boolean keep Presenter Instance,  Activity activity ) { return keep Presenter Instance &&  ( activity . is Changing Configurations (  )  || !activity . is Finishing (  )  )  ; }"
3490,public boolean is Header ( T item ) { return item != null && item instanceof I Header ; }
3491,"public void upload (  String file Name,  Input Stream input Stream, long restart At, long stream Offset, FTP Data Transfer Listener listener )  throws  Illegal State Exception, IO Exception, FTP Illegal Reply Exception, FTP Exception, FTP Data Transfer Exception, FTP Aborted Exception{ synchronized  ( lock )  {     //  Is this client connected?     if  ( !connected )  {         throw new  Illegal State Exception ( "" Client not connected"" )  ;      }     //  Is this client authenticated?     if  ( !authenticated )  {         throw new  Illegal State Exception ( "" Client not authenticated"" )  ;      }     //  Select the type of contents .      int tp = type ;      if  ( tp == TYPE_AUTO )  {         tp = detect Type ( file Name )  ;      }     if  ( tp == TYPE_TEXTUAL )  {         communication . send FTP Command ( ""TYPE A"" )  ;      } else if  ( tp == TYPE_BINARY )  {         communication . send FTP Command ( ""TYPE I"" )  ;      }     FTP Reply r = communication . read FTP Reply (  )  ;      touch Auto Noop Timer (  )  ;      if  ( !r . is Success Code (  )  )  {         throw new FTP Exception ( r )  ;      }     //  Prepares the connection for the data transfer .      FTP Data Transfer Connection Provider provider = open Data Transfer Channel (  )  ;      // REST command  ( if supported and/or requested )  .      if  ( rest Supported || restart At > 0 )  {         boolean done = false ;          try {             communication . send FTP Command ( ""REST "" + restart At )  ;              r = communication . read FTP Reply (  )  ;              touch Auto Noop Timer (  )  ;              if  ( r . get Code (  )  != 350 &&  (  ( r . get Code (  )  != 501 && r . get Code (  )  != 502 )  || restart At > 0 )  )  {                 throw new FTP Exception ( r )  ;              }             done = true ;          } finally {             if  ( !done )  {                 provider . dispose (  )  ;              }         }     }     //  Local abort state .      boolean was Aborted = false ;      //  Send the STOR command .      communication . send FTP Command ( ""STOR "" + file Name )  ;      try {          Socket dt Connection ;          try {             dt Connection = provider . open Data Transfer Connection (  )  ;          } finally {             provider . dispose (  )  ;          }         //  Change the operation status .          synchronized  ( abort Lock )  {             ongoing Data Transfer = true ;              aborted = false ;              consume Abor Command Reply = false ;          }         //  Upload the stream .          try {             //  Skips .              input Stream . skip ( stream Offset )  ;              //  Opens the data transfer connection .              data Transfer Output Stream = dt Connection . get Output Stream (  )  ;              // MODE Z enabled?             if  ( modez Enabled )  {                 data Transfer Output Stream = new  Deflater Output Stream ( data Transfer Output Stream )  ;              }             //  Listeners .              if  ( listener != null )  {                 listener . started (  )  ;              }             //  Let's do it!             if  ( tp == TYPE_TEXTUAL )  {                  Reader reader = new  Input Stream Reader ( input Stream )  ;                   Writer writer = new  Output Stream Writer ( data Transfer Output Stream, pick Charset (  )  )  ;                  char [  ]  buffer = new char [ SEND_AND_RECEIVE_BUFFER_SIZE ]  ;                  int l ;                  while  (  ( l = reader . read ( buffer )  )  != -1 )  {                     writer . write ( buffer, 0, l )  ;                      writer . flush (  )  ;                      if  ( listener != null )  {                         listener . transferred ( l )  ;                      }                 }             } else if  ( tp == TYPE_BINARY )  {                 byte [  ]  buffer = new byte [ SEND_AND_RECEIVE_BUFFER_SIZE ]  ;                  int l ;                  while  (  ( l = input Stream . read ( buffer )  )  != -1 )  {                     data Transfer Output Stream . write ( buffer, 0, l )  ;                      data Transfer Output Stream . flush (  )  ;                      if  ( listener != null )  {                         listener . transferred ( l )  ;                      }                 }             }         } catch  ( IO Exception e )  {             synchronized  ( abort Lock )  {                 if  ( aborted )  {                     if  ( listener != null )  {                         listener . aborted (  )  ;                      }                     throw new FTP Aborted Exception (  )  ;                  } else {                     if  ( listener != null )  {                         listener . failed (  )  ;                      }                     throw new FTP Data Transfer Exception ( ""I/O error in data transfer"", e )  ;                  }             }         } finally {             //  Closing stream and data connection .              if  ( data Transfer Output Stream != null )  {                 try {                     data Transfer Output Stream . close (  )  ;                  } catch  (  Throwable t )  {                      ;                  }             }             try {                 dt Connection . close (  )  ;              } catch  (  Throwable t )  {                  ;              }             //  Set to null the instance-level input stream .              data Transfer Output Stream = null ;              //  Change the operation status .              synchronized  ( abort Lock )  {                 was Aborted = aborted ;                  ongoing Data Transfer = false ;                  aborted = false ;              }         }     } finally {         //  Data transfer command reply .          r = communication . read FTP Reply (  )  ;          touch Auto Noop Timer (  )  ;          if  ( r . get Code (  )  != 150 && r . get Code (  )  != 125 )  {             throw new FTP Exception ( r )  ;          }         //  Consumes the result reply of the transfer .          r = communication . read FTP Reply (  )  ;          if  ( !was Aborted && r . get Code (  )  != 226 )  {             throw new FTP Exception ( r )  ;          }         // ABOR command response  ( if needed )  .          if  ( consume Abor Command Reply )  {             communication . read FTP Reply (  )  ;              consume Abor Command Reply = false ;          }     }     //  Listener notification .      if  ( listener != null )  {         listener . completed (  )  ;      } }}"
3492,"public com . anychart . core . ui .  Paginator margin (  Number [  ]  space Or Top Or Top And Bottom,  Number right Or Right And Left,  String bottom,  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "",  Arrays . to String ( space Or Top Or Top And Bottom ) , right Or Right And Left, wrap Quotes ( bottom ) , wrap Quotes ( left )  )  )  ;  return this ; }"
3493,"public void prescan One Tree (  )  throws  Missing Object Exception,  Incorrect Object Type Exception,  Corrupt Object Exception, IO Exception{ removed . clear (  )  ;  updated . clear (  )  ;  conflicts . clear (  )  ;  builder = dc . builder (  )  ;  walk = new  Name Conflict Tree Walk ( repo )  ;  add Tree ( walk, merge Commit Tree )  ;  int dci Pos = walk . add Tree ( new  Dir Cache Build Iterator ( builder )  )  ;  walk . add Tree ( working Tree )  ;  working Tree . set Dir Cache Iterator ( walk, dci Pos )  ;  while  ( walk . next (  )  )  {     process Entry ( walk . get Tree ( 0,  Canonical Tree Parser . class ) , walk . get Tree ( 1,  Dir Cache Build Iterator . class ) , walk . get Tree ( 2,  Working Tree Iterator . class )  )  ;      if  ( walk . is Subtree (  )  )          walk . enter Subtree (  )  ;  } conflicts . remove All ( removed )  ; }"
3494,public final int get Curr Y (  ) { return m Curr Y ; }
3495,"public void post Translate ( float delta X, float delta Y ) { if  ( delta X != 0 || delta Y != 0 )  {     m Current Image Matrix . post Translate ( delta X, delta Y )  ;      set Image Matrix ( m Current Image Matrix )  ;  }}"
3496,"public com . anychart . standalones .  Title letter Spacing (  Number spacing ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . letter Spacing ( %s )  ; "", spacing )  )  ;  return this ; }"
3497,public static void init (  ) { if  ( ! Native Loader . is Initialized (  )  )  {      Native Loader . init ( new  Native Loader To So Loader Delegate (  )  )  ;  }  So Loader . set In Test Mode (  )  ; }
3498,"protected  State List Drawable create Fill Drawable (  Rect F circle Rect, float alpha ) {  State List Drawable drawable = new  State List Drawable (  )  ;  drawable . add State ( new int [  ]  { android . R . attr . state_pressed }, create Alpha Drawble ( circle Rect, m Color Pressed, alpha )  )  ;  drawable . add State ( new int [  ]  {}, create Alpha Drawble ( circle Rect, m Color Normal, alpha )  )  ;  return drawable ; }"
3499,"public com . anychart . charts .  Polar padding (  String value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
3500,public void set Credentials Provider (  Credentials Provider provider ) { credentials Provider = provider ; }
3501,"static  String get Store ( final  Context context ) {  String result = """" ;  try {     result = context . get Package Manager (  )  . get Installer Package Name ( context . get Package Name (  )  )  ;  } catch  (  Exception e )  {      Countly . shared Instance (  )  . L . d ( "" [  Device Info, get Store ]   Can't get  Installer package "" )  ;  } if  ( result == null || result . length (  )  == 0 )  {     result = """" ;       Countly . shared Instance (  )  . L . d ( "" [  Device Info, get Store ]   No store found"" )  ;  } return result ; }"
3502,"public void dispose (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . dispose (  )  ; "" )  ; }"
3503,"public com . anychart . standalones . axes .  Radial enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
3504,"public com . anychart . charts .  Sunburst select Marquee Stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3505,"public com . anychart . core . annotations .  Base start Drawing (  String annotation Type Or Config ) { return new com . anychart . core . annotations .  Base (  String . format (  Locale . US, js Base + "" . start Drawing ( %s ) "", wrap Quotes ( annotation Type Or Config )  )  )  ; }"
3506,"public com . anychart . graphics . vector .  Pattern Fill desc (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . desc ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
3507,public void take Ownership (  ) { swig C Mem Own = true ; }
3508,public void set Label UUID ( @ Nullable final UUID label UUID ) { this . label UUID = label UUID ; }
3509,public synchronized int get In Use Count (  ) { return m Cached Entries . get Count (  )  - m Exclusive Entries . get Count (  )  ; }
3510,"public void set Register Content Provider Exception (  Uri uri,  Runtime Exception exception ) { register Content Provider Exceptions . put ( uri, exception )  ; }"
3511,public int block Size (  )  throws IO Exception{ if  ( block Size == -1 )  {     read File Header (  )  ;  } return block Size ; }
3512,"public  Local List finish (  ) { about To Process (  Integer . MAX_VALUE, 0 )  ;  int result Sz = result . size (  )  ;  int final Sz = result Sz - null Result Count ;  if  ( final Sz == 0 )  {     return EMPTY ;  } /*          *  Collect an array of only the non-null entries, and then          * sort it to get a consistent order for everything:  Local          * ends and starts for a given address could come in any          * order, but we want ends before starts as well as          * registers in order  ( within ends or starts )  .           */  Entry [  ]  result Arr = new  Entry [ final Sz ]  ;  if  ( result Sz == final Sz )  {     result . to Array ( result Arr )  ;  } else {     int at = 0 ;      for  (  Entry e : result )  {         if  ( e != null )  {             result Arr [ at++ ]  = e ;          }     } }  Arrays . sort ( result Arr )  ;   Local List result List = new  Local List ( final Sz )  ;  for  ( int i = 0 ;  i < final Sz ;  i++ )  {     result List . set ( i, result Arr [ i ]  )  ;  } result List . set Immutable (  )  ;  return result List ; }"
3513,public  String get Included Cipher Suites (  ) { return included Cipher Suites ; }
3514,"public void setup Properties (  Logger Context context ) { // legacy properties  Properties props = new  Properties (  )  ;  props . set Property (  Core Constants . DATA_DIR_KEY, get Files Directory Path (  )  )  ;  final  String ext Dir = get Mounted External Storage Directory Path (  )  ;  if  ( ext Dir != null )  {     props . set Property (  Core Constants . EXT_DIR_KEY, ext Dir )  ;  } props . set Property (  Core Constants . PACKAGE_NAME_KEY, get Package Name (  )  )  ;  props . set Property (  Core Constants . VERSION_CODE_KEY, get Version Code (  )  )  ;  props . set Property (  Core Constants . VERSION_NAME_KEY, get Version Name (  )  )  ;  context . put Properties ( props )  ; }"
3515,"private static void set Type (  Type Data td,  String class Name,  Class Pool cp )  throws  Bad Bytecode{ td . set Type ( class Name, cp )  ; }"
3516,public boolean is Opt Out (  ) { return m Opt Out ; }
3517,public final int get App Key Index (  ) { return m App Key Index ; }
3518,"public void set Tangent Speed ( float speed ) { jni Set Tangent Speed ( addr, speed )  ; }"
3519,"public com . anychart . charts .  Venn enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
3520,public static  Recorded Request take Last (  ) {  List< Recorded Request> last Request = take Last ( 1 )  ;  if  ( last Request . is Empty (  )  )  {     return null ;  } else {     return last Request . get ( 0 )  ;  }}
3521,"public void read Indexed Header Field From Static Table Without Buffering (  )  throws IO Exception{ //  Dynamic table size update  ( size = 0 )  .  bytes In . write Byte ( 0x20 )  ;  // ==  Indexed -  Add == bytes In . write Byte ( 0x82 )  ;  // idx = 2 -> :method: GET hpack Reader . read Headers (  )  ;  //  Not buffered in header table .  assert That ( hpack Reader . header Count )  . is Equal To ( 0 )  ;  assert That ( hpack Reader . get And Reset Header List (  )  )  . is Equal To ( header Entries ( "":method"", ""GET"" )  )  ; }"
3522,"public  Observable< List< Product>> load Products Of Category (  String category Name ) { return backend Api . get All Products Of Category ( category Name )  . delay ( 3,  Time Unit . SECONDS )  ; }"
3523,"public com . anychart . core . ui .  Timeline row Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
3524,"public E find First (  ) { realm . check If Valid (  )  ;  realm . check Allow Queries On Ui Thread (  )  ;  if  ( for Values )  {     // TODO implement this ;      return null ;  } long table Row Index = get Source Row Index For First Object (  )  ;  //noinspection unchecked return  ( table Row Index < 0 )  ? null :  ( E )  realm . get (  (  Class<? extends  Realm Model> )  clazz, class Name, table Row Index )  ; }"
3525,"public void on Patch Result (  File patch File, boolean success, long cost ) {  Share Tinker Log . i ( TAG, ""patch Reporter on Patch Result: patch all result path: %s, success: %b, cost: %d"", patch File . get Absolute Path (  ) , success, cost )  ;  // if should retry don't delete the temp file if  ( !should Retry )  {      Upgrade Patch Retry . get Instance ( context )  . on Patch Service Result (  )  ;  }}"
3526,public void add View ( final  Callback callback ) { for  ( int i = 0 ;  i < m Callbacks . size (  )  ;  i++ )  {     final  Callback Weak Reference reference = m Callbacks . get ( i )  ;      final  Callback item = reference . get (  )  ;      if  ( item == null )  {         //  Always remove null references to reduce list size         m Callbacks . remove ( reference )  ;      } } m Callbacks . add If Absent ( new  Callback Weak Reference ( callback )  )  ; }
3527,"public void show Error ( boolean is Show Error ) { if  ( is Show Error )  {     is Error = true ;      wrapper Adapter . state Changed (  Paginate Status . ERROR )  ;       Scroll Utils . full Scroll To Bottom ( recycler View, wrapper Adapter )  ;  } else {     is Error = false ;  }}"
3528,public long bytes Loaded (  ) { return data Source . get Bytes Read (  )  ; }
3529,public  String get Query (  ) { return query ; }
3530,"public  Pair< Service Info,  String> get Service And Plugin By Intent (  Context context,  Intent intent ) {  String action = intent . get Action (  )  ;  if  ( ! Text Utils . is Empty ( action )  )  {      Set< String> plugins =  Manifest Parser . INS . get Plugins By Action When Start Service ( action )  ;      if  ( plugins != null )  {         for  (  String plugin : plugins )  {             // 获取 plugin 插件中，所有的  Service 和  Intent Filter 的对应关系              Map< String,  List< Intent Filter>> filters =  Manifest Parser . INS . get Service Filter Map ( plugin )  ;              // 找到 plugin 插件中， Intent Filter 匹配成功的  Service              String service =  Intent Matcher Helper . do Match Intent ( context, intent, filters )  ;               Service Info info =  Factory . query Service Info ( plugin, service )  ;              if  ( info != null )  {                 return new  Pair<> ( info, plugin )  ;              }         }     } } return null ; }"
3531,"private void validate Environment Map Points To Existing Tests (  List< Throwable> errors ) {  List< Framework Method> environment For Methods = get Test Class (  )  . get Annotated Methods (  Environment For . class )  ;   Set< String> test Method Names = get Test Class (  )  . get Annotated Methods (  Test . class )  . stream (  )  . map (  m -> m . get Name (  )  )  . collect (  Collectors . to Set (  )  )  ;  for  (  Framework Method environment For Method : environment For Methods )  {      String [  ]  environment For Test Names = environment For Method . get Annotation (  Environment For . class )  . test Names (  )  ;      for  (  String test Name : environment For Test Names )  {         if  ( !test Method Names . contains ( test Name )  )  {             errors . add ( new  Annotation Format Error (  String . format ( "" Environment For method %s has test Name %s which does not exist in the  Test class"" + ""  ( or it is not annotated with @ Test ) "", environment For Method . get Name (  ) , test Name )  )  )  ;          }     } }}"
3532,public void add Click Listener ( @ Non Null  Firebase In App Messaging Click Listener click Listener ) { developer Listener Manager . add Click Listener ( click Listener )  ; }
3533,"public boolean put All ( K key,  Iterable<? extends V> values ) { throw new  Unsupported Operation Exception (  )  ; }"
3534,"public com . anychart . charts .  Pie z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
3535,"protected  Authentication Callback successful Claims Request In Id Token Interactive Callback ( @ Non Null final  Count Down Latch latch, @ Non Null final  String requested Claim, @ Nullable final  String expected Value ) { return new  Authentication Callback (  )  {     @ Override     public void on Success ( I Authentication Result authentication Result )  {          Assert . assert False (  String Util . is Empty ( authentication Result . get Access Token (  )  )  )  ;          m Account = authentication Result . get Account (  )  ;          final  Map< String, ?> claims = authentication Result . get Account (  )  . get Claims (  )  ;           Assert . assert True ( claims . contains Key ( requested Claim )  )  ;          if  ( ! Text Utils . is Empty ( expected Value )  )  {             final  Object claim Value = claims . get ( requested Claim )  ;               Assert . assert Equals ( expected Value, claim Value . to String (  )  )  ;          }         latch . count Down (  )  ;      }     @ Override     public void on Error (  Msal Exception exception )  {         latch . count Down (  )  ;           Assert . fail ( exception . get Message (  )  )  ;      }     @ Override     public void on Cancel (  )  {          Assert . fail ( "" User cancelled flow"" )  ;          latch . count Down (  )  ;      } } ; }"
3536,public  Submodule Walk set Tree (  Abstract Tree Iterator iterator )  throws  Corrupt Object Exception{ walk . add Tree ( iterator )  ;  return this ; }
3537,"private void set Window Manager String (  ) { if  ( android . os .  Build . VERSION . SDK_INT >= 17 )  {     window Manager String = ""s Default Window Manager"" ;  } else if  ( android . os .  Build . VERSION . SDK_INT >= 13 )  {     window Manager String = ""s Window Manager"" ;  } else {     window Manager String = ""m Window Manager"" ;  }}"
3538,"private static  String parse Scheme (  String challenge )  throws  Resource Authentication Challenge Exception{ final  String method Name = "":parse Scheme"" ;  if  (  String Extensions . is Null Or Blank ( challenge )  )  {      Logger . w ( TAG + method Name, "" Cannot parse an empty/blank challenge"" )  ;      throw new  Resource Authentication Challenge Exception ( AUTH_HEADER_MISSING )  ;  } final int index Of First Space = challenge . index Of ( ' ' )  ;  final int index Of First Tab = challenge . index Of ( '\t' )  ;  //  We want to grab the lesser of these values so long as they're > -1 .  .  .  if  ( index Of First Space < 0 && index Of First Tab < 0 )  {      Logger . w ( TAG + method Name, "" Couldn't locate space/tab char - returning input  String"" )  ;      return challenge ;  }  Logger . v ( TAG + method Name, "" Parsing scheme with indices: index Of First Space [ "" + index Of First Space + "" ]  index Of First Tab [ "" + index Of First Tab + "" ] "" )  ;  //  If there is a space and it occurs before the first tab character .  if  ( index Of First Space > -1 &&  ( index Of First Space < index Of First Tab || index Of First Tab < 0 )  )  {     return challenge . substring ( 0, index Of First Space )  ;  } //  If there is a tab character and it occurs before the first space character .  if  ( index Of First Tab > -1 &&  ( index Of First Tab < index Of First Space || index Of First Space < 0 )  )  {     return challenge . substring ( 0, index Of First Tab )  ;  }  Logger . w ( TAG + method Name, "" Unexpected/malformed/missing scheme . "" )  ;  throw new  Resource Authentication Challenge Exception ( AUTH_HEADER_INVALID_FORMAT )  ; }"
3539,"public static  Listenable Future<V> with Timeout (  Listenable Future<V> delegate,  Duration time,  Scheduled Executor Service scheduled Executor ) { return with Timeout ( delegate, to Nanos Saturated ( time ) ,  Time Unit . NANOSECONDS, scheduled Executor )  ; }"
3540,"public  Entry_ Deleter id Between ( long id A, long id B ) { return where Between ( schema . id, id A, id B )  ; }"
3541,"public final void write Annotation (  Annotated Output out ) { if  ( data Map . size (  )  == 0 )  {     return ;  } out . annotate ( 0, ""\nstatistics:\n"" )  ;   Tree Map< String,  Data> sorted Data = new  Tree Map< String,  Data> (  )  ;  for  (  Data data : data Map . values (  )  )  {     sorted Data . put ( data . name, data )  ;  } for  (  Data data : sorted Data . values (  )  )  {     data . write Annotation ( out )  ;  }}"
3542,"public void create Log File ( com . facebook . buck . logd . proto .  Create Log Request request, io . grpc . stub .  Stream Observer<com . facebook . buck . logd . proto .  Create Log Response> response Observer ) { async Unary Call ( get Channel (  )  . new Call ( get Create Log File Method Helper (  ) , get Call Options (  )  ) , request, response Observer )  ; }"
3543,"public  Quaternion inverse (  ) { final double norm = length2 (  )  ;  final double inv Norm = 1 . 0 / norm ;  return set All ( w * inv Norm, -x * inv Norm, -y * inv Norm, -z * inv Norm )  ; }"
3544,"public boolean long Press (  Actor actor, float x, float y ) { return false ; }"
3545,"public com . anychart . core . stock . scrollerseries .  Range Step Area max Point Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Point Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
3546,"public  Map< String,  List< String>> get Result Headers Impl (  ) { return result Headers ; }"
3547,public int increment ( int offset ) {  Char Sequence txt = get Text (  )  ;  int i ;  if  ( txt != null )  {     try {         i =  Integer . parse Int ( txt . to String (  )  )  ;      } catch  (  Number Format Exception e )  {         i = 0 ;      } } else {     i = 0 ;  } i = i + offset ;  set Text (  String . value Of ( i )  )  ;  return i ; }
3548,public  String get Host Name (  ) { return host Name ; }
3549,public  Component Descriptor component Descriptor (  ) { return component Shard . component Descriptor (  )  ; }
3550,"public static  Markwon Adapter create ( @ Layout Res int default Entry Layout Res Id, @ Id Res int default Entry Text View Res Id ) { return builder ( default Entry Layout Res Id, default Entry Text View Res Id )  . build (  )  ; }"
3551,"public static int get H265 Nal Unit Type ( byte [  ]  data, int offset ) { return  ( data [ offset + 3 ]  & 0x7 E )  >> 1 ; }"
3552,public  Fragment Animator get Fragment Animator (  ) { return m Delegate . get Fragment Animator (  )  ; }
3553,public  String get Font Stretch (  ) { return this . font Stretch ; }
3554,"private boolean test Witness ( long base, long n ) { int r =  Long . number Of Trailing Zeros ( n - 1 )  ;  long d =  ( n - 1 )  >> r ;  base %= n ;  if  ( base == 0 )  {     return true ;  } //  Calculate a := base^d mod n .  long a = pow Mod ( base, d, n )  ;  // or base^ ( 2^j * d )  = -1  ( mod n )  for some 0 <= j < r .  if  ( a == 1 )  {     return true ;  } int j = 0 ;  while  ( a != n - 1 )  {     if  ( ++j == r )  {         return false ;      }     a = square Mod ( a, n )  ;  } return true ; }"
3555,"public static JS Bundle Loader create Cached Split Bundle From Network Loader ( final  String source URL, final  String cached File Location ) { return new JS Bundle Loader (  )  {     @ Override     public  String load Script ( JS Bundle Loader Delegate delegate )  {         try {             delegate . load Split Bundle From File ( cached File Location, source URL )  ;              return source URL ;          } catch  (  Exception e )  {             throw  Debug Server Exception . make Generic ( source URL, e . get Message (  ) , e )  ;          }     } } ; }"
3556,public void on Load Cleared ( @ Nullable  Drawable placeholder ) {//  Do nothing . }
3557,"public com . anychart . standalones .  Title text Direction ( com . anychart . graphics . vector . text .  Direction direction ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Direction ( %s )  ; "",  ( direction != null )  ? direction . get Js Base (  )  : null )  )  ;  return this ; }"
3558,public  Object entity (  ) { return entity ; }
3559,"protected void append Field Start (  String Buffer buffer,  String field Name ) { if  ( use Field Names && field Name != null )  {     buffer . append ( field Name )  ;      buffer . append ( field Name Value Separator )  ;  }}"
3560,"public static int get Shadow Top ( float shadow Size ) { float shadow Dy = get Default Shadow Dy ( shadow Size )  ;  return get Shadow Top ( shadow Size, shadow Dy )  ; }"
3561,protected int get Horizontal Margin (  ) { return m Margin Left + m Margin Right ; }
3562,public static  Comparator< Document Key> comparator (  ) { return COMPARATOR ; }
3563,"public void jump To Frame ( int target Frame Number ) { if  ( m Animation Backend == null || m Frame Scheduler == null )  {     return ;  } //  In order to jump to a given frame, we have to compute the correct start time m Last Frame Animation Time Ms = m Frame Scheduler . get Target Render Time Ms ( target Frame Number )  ;  m Start Time Ms = now (  )  - m Last Frame Animation Time Ms ;  m Expected Render Time Ms = m Start Time Ms ;  invalidate Self (  )  ; }"
3564,static  Rebase Result conflicts (  List< String> conflicts ) {  Rebase Result result = new  Rebase Result (  Status . CONFLICTS )  ;  result . conflicts = conflicts ;  return result ; }
3565,"public static void start Action (  Context context,  News Photo Detail m News Photo Detail ) {  Intent intent = new  Intent ( context,  News Photo Detail Activity . class )  ;  intent . put Extra (  App Constant . PHOTO_DETAIL, m News Photo Detail )  ;  context . start Activity ( intent )  ; }"
3566,"public boolean is Set Last Fetch Epoch Seconds (  ) { return org . apache . thrift .  Encoding Utils . test Bit ( __isset_bitfield, __LASTFETCHEPOCHSECONDS_ISSET_ID )  ; }"
3567,public  Action get Action (  ) { return action ; }
3568,"public com . anychart . standalones .  Color Range marker (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . marker ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3569,protected void parse End Tag (  Xml Pull Parser xml Parser ) {//  Do nothing . }
3570,"public com . anychart . charts .  Sparkline padding (  Number value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
3571,"static  Paired Stats Accumulator create Filled Paired Stats Accumulator (  List< Double> x Values,  List< Double> y Values ) { check Argument ( x Values . size (  )  == y Values . size (  )  )  ;   Paired Stats Accumulator accumulator = new  Paired Stats Accumulator (  )  ;  for  ( int index = 0 ;  index < x Values . size (  )  ;  index++ )  {     accumulator . add ( x Values . get ( index ) , y Values . get ( index )  )  ;  } return accumulator ; }"
3572,"public void cancel Request ( @ Non Null  Remote Views remote Views, @ Id Res int view Id ) { // check Main (  )  is called from cancel Existing Request (  )  check Not Null ( remote Views, ""remote Views == null"" )  ;  cancel Existing Request ( new  Remote Views Action .  Remote Views Target ( remote Views, view Id )  )  ; }"
3573,protected void set Error (  Exception error ) { if  ( ! Suppress Set Error Stack Trace )  {     error . print Stack Trace (  )  ;  } set Status (  Watchable . ERROR )  ; }
3574,"public static  Big Integer get Random Big Integer ( int bits ) { return new  Big Integer ( bits, new  Random (  )  )  ; }"
3575,"private boolean read Boolean ( final  Input Stream stream, final int bytes )  throws IO Exception{ final byte [  ]  tmp = new byte [ bytes ]  ;  stream . read ( tmp )  ;  boolean result = false ;  for  ( int i = 0 ;  i < bytes ;  i++ )  {     if  ( i == bytes - 1 )  {         result = tmp [ i ]  == 1 ;          assert tmp [ i ]  == 0 || tmp [ i ]  == 1 ;      } else {         assert tmp [ i ]  == 0 ;      } } return result ; }"
3576,"public static void add Http Response Rule (  Request Matcher request Matcher,  Http Response response ) { get Fake Http Layer (  )  . add Http Response Rule ( request Matcher, response )  ; }"
3577,"public void row Odd Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . row Odd Fill (  )  ; "" )  ; }"
3578,"public static  Function< Item,  String> sub String (  String string Field, int start, int end ) { return new  Sub String Operator ( string Field, start, end )  ; }"
3579,"protected  Response get Response (  )  throws IO Exception{ if  ( debug Mode )  {     request XML = soap Env . to String (  )  ;  } return soap Requester . do Soap Request ( soap Env, url, soap Action )  ; }"
3580,public void set Model (  Physics World world ) { m World = world ; }
3581,private static boolean is Watch Application Node (  Target Node<?> target Node ) { if  ( target Node . get Description (  )  instanceof  Apple Bundle Description )  {      Apple Bundle Description Arg arg =  (  Apple Bundle Description Arg )  target Node . get Constructor Arg (  )  ;      return arg . get Xcode Product Type (  )  . equals (  Optional . of (  Product Types . WATCH_APPLICATION . get Identifier (  )  )  )  ;  } return false ; }
3582,public void set Swipe Back Enable ( boolean enable ) { m Delegate . set Swipe Back Enable ( enable )  ; }
3583,"public com . anychart . standalones .  Labels Factory word Wrap (  String mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . word Wrap ( %s )  ; "", wrap Quotes ( mode )  )  )  ;  return this ; }"
3584,public int get Rssi (  ) { return rssi ; }
3585,private float source To View X ( float sx ) { if  ( v Translate == null )  {     return  Float .  Na N ;  } return  ( sx * scale )  + v Translate . x ; }
3586,public static void set Option View ( @ Not Null  Option View option Views ) { option View = option Views ; }
3587,Http URL Connection open Connection ( URL url )  throws IO Exception{ return  (  Http URL Connection )  url . open Connection (  )  ; }
3588,public  Object [  ]  get Sections (  ) { return m Alphabet Indexer . get Sections (  )  ; }
3589,protected void observable Activated (  ) {}
3590,"public com . anychart . core . utils .  Legend Item Settings icon Fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . icon Fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
3591,public  Task<T Result> get Task (  ) { return task ; }
3592,public  String to String ( int limit ) { try {     return  Raw Parse Utils . decode ( to Byte Array ( limit )  )  ;  } catch  ( IO Exception e )  {     throw new  Unchecked IO Exception ( e )  ;  }}
3593,public static  Method Descriptor get Method Descriptor (  String name ) { return s Rpcs . get ( name )  ; }
3594,public boolean exists (  ) { return this . file . exists (  )  ; }
3595,"public com . anychart . charts .  Pie no Data (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . no Data ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3596,"public com . anychart . core . cartesian . series .  Continuous Range Base low Stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3597,private boolean check Image Loaded (  ) { boolean image Loaded = is Base Layer Ready (  )  ;  if  ( !image Loaded Sent && image Loaded )  {     pre Draw (  )  ;      image Loaded Sent = true ;      on Image Loaded (  )  ;      if  ( on Image Event Listener != null )  {         on Image Event Listener . on Image Loaded (  )  ;      } } return image Loaded ; }
3598,"public  Map< String,  Merge Failure Reason> get Failing Paths (  ) { return failing Paths . is Empty (  )  ? null : failing Paths ; }"
3599,"public com . anychart . standalones .  Labels Factory font Weight (  Number weight ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Weight ( %s )  ; "", weight )  )  ;  return this ; }"
3600,public  Immersion Bar transparent Navigation Bar (  ) { m Bar Params . navigation Bar Color =  Color . TRANSPARENT ;  m Bar Params . full Screen = true ;  return this ; }
3601,"protected void mark Deleted Index Or Offset (  Sparse Index Map sparse Index Map, int deleted Index, int deleted Offset ) {//  Should override by subclass if needed . }"
3602,"public static  Function< Item,  String> get Filepath (  String image Data Field ) { return new  Image Filepath Getter ( image Data Field )  ; }"
3603,"public void verify Inputs With One Owner Are Correctly Reported (  )  throws IO Exception{  Immutable List< String> inputs =  Immutable List . of ( ""java/somefolder/badfolder/somefile . java"", ""java/somefolder/perfect . java"" )  ;   Immutable Set< Path> input Paths =  Rich Stream . from ( inputs )  . map ( filesystem::get Path )  . to Immutable Set (  )  ;  for  (  Path path : input Paths )  {     filesystem . mkdirs ( path . get Parent (  )  )  ;      filesystem . write Contents To Path ( """", path )  ;  }  Build Target target =  Build Target Factory . new Instance ( ""//base:name"" )  ;   Target Node<?> target Node = create Target Node ( target, input Paths )  ;   Cells cell = new  Test Cell Builder (  )  . set Filesystem ( filesystem )  . build (  )  ;   Owners Report report1 =  Owners Report . generate Owners Report ( cell . get Root Cell (  ) , target Node, inputs . get ( 0 )  )  ;   Owners Report report2 =  Owners Report . generate Owners Report ( cell . get Root Cell (  ) , target Node, inputs . get ( 1 )  )  ;   Owners Report report = report1 . updated With ( report2 )  ;  assert True ( report . non File Inputs . is Empty (  )  )  ;  assert True ( report . non Existent Inputs . is Empty (  )  )  ;  assert True ( report . inputs With No Owners . is Empty (  )  )  ;  assert Equals ( inputs . size (  ) , report . owners . size (  )  )  ;  assert True ( report . owners . contains Key ( target Node )  )  ;  assert Equals ( target Node . get Inputs (  )  . stream (  )  . map (  p -> p . to Path ( filesystem . get File System (  )  )  )  . collect (  Immutable Set . to Immutable Set (  )  ) , report . owners . get ( target Node )  )  ; }"
3604,"public boolean perform Fake Swipe (  Recycler View .  View Holder holder, int result ) { if  ( ! ( holder instanceof  Swipeable Item View Holder )  )  {     return false ;  } if  ( is Swiping (  )  )  {     return false ;  } switch ( result )  {     case RESULT_SWIPED_LEFT:     case RESULT_SWIPED_RIGHT:         if  ( !m Swipe Horizontal )  {             return false ;          }         break ;      case RESULT_SWIPED_UP:     case RESULT_SWIPED_DOWN:         if  ( m Swipe Horizontal )  {             return false ;          }         break ;      case RESULT_CANCELED:         break ;      default:         return false ;  } final int wrapped Item Position = get Wrapped Item Position ( holder )  ;  if  ( wrapped Item Position ==  Recycler View . NO_POSITION )  {     return false ;  }  Motion Event fake Motion Event =  Motion Event . obtain (  System Clock . uptime Millis (  ) ,  System Clock . uptime Millis (  ) ,  Motion Event . ACTION_DOWN, 0, 0, 0 )  ;  start Swiping ( fake Motion Event, holder, wrapped Item Position )  ;  fake Motion Event . recycle (  )  ;  // swipe 1px to apply background int direction = 0 ;  if  ( result == RESULT_SWIPED_LEFT || result == RESULT_SWIPED_UP )  {     direction = -1 ;  } else if  ( result == RESULT_SWIPED_RIGHT || result == RESULT_SWIPED_DOWN )  {     direction = 1 ;  } apply Slide Item ( holder, wrapped Item Position, 0, direction, false, m Swipe Horizontal, false, true )  ;  finish Swiping ( result )  ;  return true ; }"
3605,public void to (  State Value< Dynamic Value< Float>> dynamic Value State ) {  Dynamic Value< Float> dynamic Value = create (  )  ;  dynamic Value State . set ( dynamic Value )  ; }
3606,"protected boolean is Valid Revenue (  ) { if  ( price == null )  {     logger . w ( TAG, "" Invalid revenue, need to set price"" )  ;      return false ;  } return true ; }"
3607,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
3608,"public com . anychart . charts .  Radar max Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", width )  )  ;  return this ; }"
3609,"public static  Register Spec make ( int reg,  Type Bearer type ) { return intern ( reg, type, null )  ; }"
3610,"private void crete Camera Tracker (  ) { m Detector = new  Face Detector .  Builder ( m Activity )  . set Tracking Enabled ( false )  . set Classification Type (  Face Detector . ALL_CLASSIFICATIONS )  . build (  )  ;  m Detector . set Processor ( new  Multi Processor .  Builder<> ( new  Graphic Face Tracker Factory (  )  )  . build (  )  )  ;  if  ( !m Detector . is Operational (  )  )  {     m User Aware Video View . on Error Occurred (  )  ;       Log . e ( "" Start  Tracking"", "" Face tracker is not operational . "" )  ;  } m Camera Source = new  Camera Source .  Builder ( m Activity, m Detector )  . set Requested Preview Size ( 640, 480 )  . set Facing (  Camera Source . CAMERA_FACING_FRONT )  . set Requested Fps ( 30 . 0f )  . build (  )  ; }"
3611,public static boolean is Paid (  User user ) { return paid Group . contains ( user )  ; }
3612,public static  Lib VLC get Instance (  )  throws  Lib Vlc Exception{ synchronized  (  Lib VLC . class )  {     if  ( s Instance == null )  {         /*  First call */         s Instance = new  Lib VLC (  )  ;      } } return s Instance ; }
3613,public  Date get Expires On (  ) { return  Date Extensions . create Copy ( m Expires On )  ; }
3614,public long get Breakpoint Bytes (  ) { return breakpoint Bytes ; }
3615,public void set Key Index ( final int key Index ) { this . key Index = key Index ; }
3616,public  Rect get Preview Framing Rect (  ) { return preview Framing Rect ; }
3617,"public  Immutable Set< Apple Device> get Physical Devices (  ) {  Immutable Set< Apple Device> devices ;   Immutable Set .  Builder< Apple Device> physical Devices =  Immutable Set . builder (  )  ;  try {     devices = get Devices (  )  ;  } catch  ( IO Exception |  Interrupted Exception e )  {     e . print Stack Trace (  )  ;      devices =  Immutable Set . of (  )  ;  } for  (  Apple Device device : devices )  {     if  ( device . get Type (  )  . equals ( ""device"" )  )          physical Devices . add ( device )  ;  } return physical Devices . build (  )  ; }"
3618,"public final void set ( final  Shape shape, int index ) { switch ( shape . get Type (  )  )  {     case CIRCLE:         final  Circle Shape circle =  (  Circle Shape )  shape ;          m_vertices [ 0 ]  . set ( circle . m_p )  ;          m_count = 1 ;          m_radius = circle . m_radius ;          break ;      case POLYGON:         final  Polygon Shape poly =  (  Polygon Shape )  shape ;          m_count = poly . m_count ;          m_radius = poly . m_radius ;          for  ( int i = 0 ;  i < m_count ;  i++ )  {             m_vertices [ i ]  . set ( poly . m_vertices [ i ]  )  ;          }         break ;      case CHAIN:         final  Chain Shape chain =  (  Chain Shape )  shape ;          assert  ( 0 <= index && index < chain . m_count )  ;          m_buffer [ 0 ]  = chain . m_vertices [ index ]  ;          if  ( index + 1 < chain . m_count )  {             m_buffer [ 1 ]  = chain . m_vertices [ index + 1 ]  ;          } else {             m_buffer [ 1 ]  = chain . m_vertices [ 0 ]  ;          }         m_vertices [ 0 ]  . set ( m_buffer [ 0 ]  )  ;          m_vertices [ 1 ]  . set ( m_buffer [ 1 ]  )  ;          m_count = 2 ;          m_radius = chain . m_radius ;          break ;      case EDGE:          Edge Shape edge =  (  Edge Shape )  shape ;          m_vertices [ 0 ]  . set ( edge . m_vertex1 )  ;          m_vertices [ 1 ]  . set ( edge . m_vertex2 )  ;          m_count = 2 ;          m_radius = edge . m_radius ;          break ;      default:         assert  ( false )  ;  }}"
3619,public  Builder merge Re Session Id ( com . facebook . buck . remoteexecution . proto . RE Session ID value ) { if  ( re Session Id Builder_ == null )  {     if  ( re Session Id_ != null )  {         re Session Id_ = com . facebook . buck . remoteexecution . proto . RE Session ID . new Builder ( re Session Id_ )  . merge From ( value )  . build Partial (  )  ;      } else {         re Session Id_ = value ;      }     on Changed (  )  ;  } else {     re Session Id Builder_ . merge From ( value )  ;  } return this ; }
3620,"public static void set User (  String token,  Qiscus Core .  Set User Listener listener ) {  Qiscus Core . set User With Identity Token ( token, listener )  ; }"
3621,public REQUEST get Low Res Image Request (  ) { return m Low Res Image Request ; }
3622,"public int get Secondary Successor (  ) { if  ( successors . size (  )  != 2 )  {     throw new  Unsupported Operation Exception ( ""block doesn't have exactly two successors"" )  ;  } int succ = successors . get ( 0 )  ;  if  ( succ == primary Successor )  {     succ = successors . get ( 1 )  ;  } return succ ; }"
3623,"public void set Logo Color ( @ Color Int int color ) { m Option Bundle . put Int ( EXTRA_UCROP_LOGO_COLOR, color )  ; }"
3624,public  Builder clear Project Prefix (  ) { project Prefix_ = get Default Instance (  )  . get Project Prefix (  )  ;  on Changed (  )  ;  return this ; }
3625,"public  View get Title View (  ) { try {      Field m Title View Field = m Action Bar View Class . get Declared Field ( ""m Title View"" )  ;      m Title View Field . set Accessible ( true )  ;      return  (  View )  m Title View Field . get ( m Action Bar View )  ;  } catch  (  No Such Field Exception e )  {      Log . e ( ""TAG"", "" Failed to find actionbar title"", e )  ;  } catch  (  Illegal Access Exception e )  {      Log . e ( ""TAG"", "" Failed to access actionbar title"", e )  ;  } return null ; }"
3626,"protected void draw Points (  Canvas canvas,  Paint paint,  List< Float> points List, XY Series Renderer series Renderer, float y Axis Value, int series Index, int start Index ) { if  ( is Render Points ( series Renderer )  )  {      Scatter Chart points Chart = get Points Chart (  )  ;      if  ( points Chart != null )  {         points Chart . draw Series ( canvas, paint, points List, series Renderer, y Axis Value, series Index, start Index )  ;      } }}"
3627,"public static  String encode To String ( byte [  ]  src ) { if  ( src == null )  {     return null ;  } if  ( src . length == 0 )  {     return """" ;  }  String result ;  try {     result = new  String ( delegate . encode ( src ) , DEFAULT_CHARSET . display Name (  )  )  ;  } catch  (  Unsupported Encoding Exception e )  {     // should not happen, UTF-8 is always supported     throw new  Illegal State Exception ( e )  ;  } return result ; }"
3628,public  Device Property get Property (  ) { return property ; }
3629,"void reset Positions (  ) { start Position . set ( stage . get Width (  )  - stage . get Width (  )  / 5f, stage . get Height (  )  - stage . get Height (  )  / 5f )  ;  target Position . set ( start Position . x, stage . get Height (  )  / 5f )  ; }"
3630,"public com . anychart . core . cartesian . series .  Range Bar bounds (  String x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, height )  )  ;  return this ; }"
3631,public java . lang .  String get Log File Path (  ) { java . lang .  Object ref = log File Path_ ;  if  ( ref instanceof java . lang .  String )  {     return  ( java . lang .  String )  ref ;  } else {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      log File Path_ = s ;      return s ;  }}
3632,"public static  Bitmap compress With Measure (  Bitmap image ) { return compress With Measure ( image, image . get Width (  ) , image . get Height (  )  )  ; }"
3633,public final void set Fast Forward Increment Ms ( long fast Forward Ms ) { if  ( this . fast Forward Ms == fast Forward Ms )  {     return ;  } this . fast Forward Ms = fast Forward Ms ;  invalidate (  )  ; }
3634,"public com . anychart . core . annotations .  Fibonacci Timezones second Value Anchor (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . second Value Anchor ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
3635,"public static void vali String Min Length (  String string, int min Length )  throws  Illegal Argument Exception{ int length = string . trim (  )  . length (  )  ;  if  ( ! ( length >= min Length )  )  {     throw new  Illegal Argument Exception ( "" String '"" + string + ""' length illegal!"" )  ;  }}"
3636,"public com . anychart . core . resource .  Logo stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3637,"public com . anychart . standalones .  Title container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
3638,"protected final void check Started (  ) { if  ( !is Started (  )  )  {     throw new  Illegal State Exception ( "" The process is not started yet"" )  ;  }}"
3639,"public com . anychart . core . ui .  Circular Labels Factory font Weight (  Number weight ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Weight ( %s )  ; "", weight )  )  ;  return this ; }"
3640,public T shadow Offset X ( int shadow Offset X ) { this . shadow Offset X = shadow Offset X ;  return  ( T )  this ; }
3641,"public static  Component<T> into Set ( T value,  Class<T> an Interface ) { return into Set Builder ( an Interface )  . factory (  c -> value )  . build (  )  ; }"
3642,boolean should Cancel On Deadline (  ) { return cancel On Deadline ; }
3643,public  String get Result Code Id (  ) { return result Code Id ; }
3644,"public com . anychart . core . cartesian . series .  Bar3d max Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", width )  )  ;  return this ; }"
3645,"public  Authorization Response build (  ) { return new  Authorization Response ( m Request, m State, m Token Type, m Authorization Code, m Access Token, m Access Token Expiration Time, m Id Token, m Scope,  Collections . unmodifiable Map ( m Additional Parameters )  )  ; }"
3646,"public UB Json Writer set (  String name, char [  ]  value )  throws IO Exception{ return name ( name )  . value ( value )  ; }"
3647,protected void set Y Coords ( short [  ]  y Coords ) { this . y Coords = y Coords ; }
3648,public float get Grid Line Width (  ) { return m Grid Line Width ; }
3649,"public  Immutable List< String> get Sdk Path Search Order (  ) { return delegate . get Optional List Without Comments ( ""android"", ""sdk_path_search_order"" )  . or Else ( DEFAULT_SDK_PATH_SEARCH_ORDER )  ; }"
3650,"public static  Either< Buck Fix Spec,  Fix Spec Failure> parse From Fix Spec File (  Path fix Spec Path )  throws IO Exception{ try {      Buck Fix Spec buck Fix Spec =  Object Mappers . READER . read Value (  Object Mappers . create Parser ( fix Spec Path ) ,  Buck Fix Spec . class )  ;      return  Either . of Left ( buck Fix Spec )  ;  } catch  (  File Not Found Exception |  No Such File Exception e )  {     return  Either . of Right (  Fix Spec Failure . MISSING_FIX_SPEC_FILE_IN_LOGS )  ;  }}"
3651,public void set Message ( final  String message ) { this . message = message ; }
3652,"public static  Optional< Source Tree> from Build Setting (  String build Setting ) { switch (  Char Matcher . is ( '$' )  . trim Leading From ( build Setting )  )  {     case ""BUILT_PRODUCTS_DIR"":         return  Optional . of ( BUILT_PRODUCTS_DIR )  ;      case ""PLATFORM_DIR"":         return  Optional . of ( PLATFORM_DIR )  ;      case ""SDKROOT"":         return  Optional . of ( SDKROOT )  ;      case ""SOURCE_ROOT"":         return  Optional . of ( SOURCE_ROOT )  ;      case ""DEVELOPER_DIR"":         return  Optional . of ( DEVELOPER_DIR )  ;      default:         return  Optional . empty (  )  ;  }}"
3653,public boolean is Enable (  ) { return enable ; }
3654,"private void set Item Values ( final  View Holder Helper holder, final  News Summary news Summary, final int position ) {  String title = news Summary . get Ltitle (  )  ;  if  ( title == null )  {     title = news Summary . get Title (  )  ;  }  String ptime = news Summary . get Ptime (  )  ;   String digest = news Summary . get Digest (  )  ;   String img Src = news Summary . get Imgsrc (  )  ;  holder . set Text ( R . id . news_summary_title_tv, title )  ;  holder . set Text ( R . id . news_summary_ptime_tv, ptime )  ;  holder . set Text ( R . id . news_summary_digest_tv, digest )  ;  holder . set Image Url ( R . id . news_summary_photo_iv, img Src )  ;  holder . set On Click Listener ( R . id . rl_root, new  View .  On Click Listener (  )  {     @ Override     public void on Click (  View view )  {          News Detail Activity . start Action ( m Context, holder . get View ( R . id . news_summary_photo_iv ) , news Summary . get Postid (  ) , news Summary . get Imgsrc (  )  )  ;      } } )  ; }"
3655,"public com . anychart . core . gantt . edit .  Structure Edit edit (  ) { return new com . anychart . core . gantt . edit .  Structure Edit ( js Base + "" . edit (  ) "" )  ; }"
3656,"protected  String get Common Super Class ( final  String type1, final  String type2 ) { try {      Class Node info1 = type Info ( type1 )  ;       Class Node info2 = type Info ( type2 )  ;      if  (  ( info1 . access &  Opcodes . ACC_INTERFACE )  != 0 )  {         if  ( type Implements ( type2, info2, type1 )  )  {             return type1 ;          }         if  (  ( info2 . access &  Opcodes . ACC_INTERFACE )  != 0 )  {             if  ( type Implements ( type1, info1, type2 )  )  {                 return type2 ;              }         }         return ""java/lang/ Object"" ;      }     if  (  ( info2 . access &  Opcodes . ACC_INTERFACE )  != 0 )  {         if  ( type Implements ( type1, info1, type2 )  )  {             return type2 ;          } else {             return ""java/lang/ Object"" ;          }     }      String b1 = type Ancestors ( type1, info1 )  ;       String b2 = type Ancestors ( type2, info2 )  ;       String result = ""java/lang/ Object"" ;      int end1 = b1 . length (  )  ;      int end2 = b2 . length (  )  ;      while  ( true )  {         int start1 = b1 . last Index Of ( ' ; ', end1 - 1 )  ;          int start2 = b2 . last Index Of ( ' ; ', end2 - 1 )  ;          if  ( start1 != -1 && start2 != -1 && end1 - start1 == end2 - start2 )  {              String p1 = b1 . substring ( start1 + 1, end1 )  ;               String p2 = b2 . substring ( start2 + 1, end2 )  ;              if  ( p1 . equals ( p2 )  )  {                 result = p1 ;                  end1 = start1 ;                  end2 = start2 ;              } else {                 return result ;              }         } else {             return result ;          }     } } catch  (  Class Not Found Exception e )  {     //  Handle classes that may be obfuscated     return ""java/lang/ Object"" ;  }}"
3657,"public void copy To ( char [  ]  tmp,  Writer w )  throws IO Exception{ to Hex Char Array ( tmp )  ;  w . write ( tmp, 0,  Constants . OBJECT_ID_STRING_LENGTH )  ; }"
3658,"public com . anychart . charts .  Waterfall bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
3659,public boolean unregister Frame Callback ( final A Scene Frame Callback callback ) { final A Frame Task task = new A Frame Task (  )  {     @ Override     protected void do Task (  )  {         if  ( callback . call Pre Frame (  )  )              m Pre Callbacks . remove ( callback )  ;          if  ( callback . call Pre Draw (  )  )              m Pre Draw Callbacks . remove ( callback )  ;          if  ( callback . call Post Frame (  )  )              m Post Callbacks . remove ( callback )  ;      } } ;  return internal Offer Task ( task )  ; }
3660,"public static int copy All Bytes (  Input Stream in,  Output Stream out )  throws IO Exception{ int byte Count = 0 ;  byte [  ]  buffer = new byte [ 4096 ]  ;  while  ( true )  {     int read = in . read ( buffer )  ;      if  ( read == -1 )  {         break ;      }     out . write ( buffer, 0, read )  ;      byte Count += read ;  } return byte Count ; }"
3661,"public boolean remove All (  Array Set<? extends E> array ) { // TODO:  If array is sufficiently large, a marking approach might be beneficial .   In a first //       pass, use the property that the sets are sorted by hash to make this linear passes //        ( except for hash collisions, which means worst case still n*m ) , then do one //       collection pass into a new array .   This avoids binary searches and excessive memcpy .  final int N = array . m Size ;  //  Note:  Array Set does not make thread-safety guarantees .   So instead of OR-ing together all //       the single results, compare size before and after .  final int original Size = m Size ;  for  ( int i = 0 ;  i < N ;  i++ )  {     remove ( array . value At ( i )  )  ;  } return original Size != m Size ; }"
3662,"public void put ( @ Non Null final  String key, final  String value ) { put ( key, value, -1 )  ; }"
3663,public boolean has Index (  String field Name ) { check Legal Name ( field Name )  ;  check Field Exists ( field Name )  ;  return table . has Search Index ( table . get Column Key ( field Name )  )  ; }
3664,List< Broadcast Receiver> get Receivers For Intent (  Intent intent ) {  Array List< Broadcast Receiver> broadcast Receivers = new  Array List<> (  )  ;  synchronized  ( registered Receivers )  {     for  (  Wrapper wrapper : registered Receivers )  {         if  ( wrapper . intent Filter . match Action ( intent . get Action (  )  )  )  {             broadcast Receivers . add ( wrapper . get Broadcast Receiver (  )  )  ;          }     } } return broadcast Receivers ; }
3665,private  Immutable Set< Path> get Depfile Possible Paths (  Immutable List< Dependency File Entry> dep File Entries ) {  Immutable Set .  Builder< Path> builder =  Immutable Set . builder With Expected Size ( dep File Entries . size (  )  )  ;  for  (  Dependency File Entry entry : dep File Entries )  {     builder . add ( entry . path To File (  )  )  ;  } return builder . build (  )  ; }
3666,"public static  String to String (  Object object,  To String Style style ) { return to String ( object, style, false, false, null )  ; }"
3667,"public com . anychart . charts .  Polar context Menu (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . context Menu ( %s )  ; "", settings )  )  ;  return this ; }"
3668,public void set Up (  )  throws SQL Exception{ dao = new  Db Customer Dao ( mocked Datasource (  )  )  ; }
3669,"public  String to String (  ) { return ""VBR Iheader"" + "" vbr:"" + vbr + "" frame Count:"" + frame Count + "" audio File Size:"" + audio Size + "" encoder:"" + get Encoder (  )  ; }"
3670,"public void run To End Of Tasks Sync (  ) { final  Time Out Semaphore semaphore = new  Time Out Semaphore ( 0 )  ;  m Message Queue . add ( new  Message (  Message Type . DRAIN_ALL, semaphore )  )  ;  semaphore . acquire (  )  ; }"
3671,public static  Class Name get Enclosed Class Name (  Type Element type Element ) { return get Enclosed Class Name (  Class Name . get ( type Element )  )  ; }
3672,public static  Netscape Cookie File Cache get Instance (  Http Config config ) { if  ( instance == null )  {     return new  Netscape Cookie File Cache ( config )  ;  } return instance ; }
3673,public  Media Info get Media Info (  ) { return media Info ; }
3674,protected  String get Object Name (  ) { if  ( get Object Id (  )  != null )      return get Object Id (  )  . name (  )  ;  return J Git Text . get (  )  . unknown Object ; }
3675,"public void for All Files (  Bi Consumer< Path,  File Node> node Consumer ) { files . for Each ( node Consumer::accept )  ;  children . for Each (  (  key,  value )  -> value . for All Files ( node Consumer )  )  ; }"
3676,boolean should Respect Input Size Limit For Remote Execution (  ) { return true ; }
3677,"public com . anychart . standalones .  Resource Timeline row Even Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Even Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
3678,public void set Render Tree ( @ Nullable  Render Tree tree ) { if  ( m Current Render Tree == tree )  {     return ;  } if  ( tree == null )  {     m Mount State . unmount All Items (  )  ;  } m Current Render Tree = tree ;  this . request Layout (  )  ; }
3679,public void clear (  ) { variables = null ;  methods = null ;  imported Classes = null ;  imported Packages = null ;  imported Commands = null ;  imported Objects = null ;  if  ( parent == null )      load Default Imports (  )  ;  class Cache = null ;  names = null ; }
3680,"public void selected Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . selected Fill (  )  ; "" )  ; }"
3681,"public void execute ( final  Runnable task ) { check Not Null ( task )  ;  final  Runnable submitted Task ;  final long old Run Count ;  synchronized  ( queue )  {     // the worker has yet to start )  then we don't need to start the worker .      if  ( worker Running State == RUNNING || worker Running State == QUEUED )  {         queue . add ( task )  ;          return ;      }     old Run Count = worker Run Count ;      //  If the worker is not yet running, the delegate  Executor might reject our attempt to start     // it .   To preserve FIFO order and failure atomicity of rejected execution when the same     //  Runnable is executed more than once, allocate a wrapper that we know is safe to remove by     // object identity .      // A data structure that returned a removal handle from add (  )  would allow eliminating this     // allocation .      submitted Task = new  Runnable (  )  {         @ Override         public void run (  )  {             task . run (  )  ;          }         @ Override         public  String to String (  )  {             return task . to String (  )  ;          }     } ;      queue . add ( submitted Task )  ;      worker Running State = QUEUING ;  } try {     executor . execute ( worker )  ;  } catch  (  Runtime Exception |  Error t )  {     synchronized  ( queue )  {         boolean removed =  ( worker Running State == IDLE || worker Running State == QUEUING )  && queue . remove Last Occurrence ( submitted Task )  ;          if  ( ! ( t instanceof  Rejected Execution Exception )  || removed )  {             throw t ;          }     }     return ;  } /*  *  This is an unsynchronized read!  After the read, the function returns immediately or acquires  * the lock to check again .   Since an IDLE state was observed inside the preceding synchronized  * block, and reference field assignment is atomic, this may save reacquiring the lock when  * another thread or the worker task has cleared the count and set the state .   *  * <p> When {@link #executor} is a direct Executor (  ) , the value written to  * {@code worker Running State} will be available synchronously, and behaviour will be  * deterministic .   */ @ Suppress Warnings ( "" Guarded By"" )  boolean already Marked Queued = worker Running State != QUEUING ;  if  ( already Marked Queued )  {     return ;  } synchronized  ( queue )  {     if  ( worker Run Count == old Run Count && worker Running State == QUEUING )  {         worker Running State = QUEUED ;      } }}"
3682,"public static  Public Client Application Configuration initialize Configuration ( @ Non Null final  Context context ) { return initialize Configuration Internal ( context, null )  ; }"
3683,"public void update Last Suggestions (  List suggestions ) { int start Height = get List Height ( false )  ;  if  ( suggestions . size (  )  > 0 )  {      List new Suggestions = new  Array List<> ( suggestions )  ;      adapter . set Suggestions ( new Suggestions )  ;      animate Suggestions ( start Height, get List Height ( false )  )  ;  } else {     animate Suggestions ( start Height, 0 )  ;  }}"
3684,"public com . anychart . core . map . series .  Choropleth bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
3685,"public com . anychart . scales .  Linear Color color Scale (  ) { return new com . anychart . scales .  Linear Color ( js Base + "" . color Scale (  ) "" )  ; }"
3686,public void set Listener (  Listener listener ) { m Listener = listener ; }
3687,public int get Int Cvv (  ) { return int Cvv ; }
3688,"public static int get Airplane Mode State (  Context context ) { if  (  Build . VERSION . SDK_INT <  Build . VERSION_CODES . JELLY_BEAN_MR1 )  {     return  Settings .  System . get Int ( context . get Content Resolver (  ) ,  Settings .  System . AIRPLANE_MODE_ON, 0 )  ;  } else {     return  Settings .  Global . get Int ( context . get Content Resolver (  ) ,  Settings .  Global . AIRPLANE_MODE_ON, 0 )  ;  }}"
3689,public byte [  ]  get Cache (  String url ) {  Cache cache =  Http Config . m Cache ;  cache . initialize (  )  ;   Cache .  Entry entry = cache . get ( url )  ;  if  ( entry != null )  {     return entry . data ;  } else {     return new byte [ 0 ]  ;  }}
3690,public void stop Tracking (  ) { if  ( !is Tracking )  {     return ;  } broadcast Manager . unregister Receiver ( receiver )  ;  is Tracking = false ; }
3691,public static  Char Array with ( char .  .  .  array ) { return new  Char Array ( array )  ; }
3692,"public com . anychart . core . annotations .  Base add (  String annotation Type Or Config ) { return new com . anychart . core . annotations .  Base (  String . format (  Locale . US, js Base + "" . add ( %s ) "", wrap Quotes ( annotation Type Or Config )  )  )  ; }"
3693,"protected  Shader Var add Const (  String name, double value ) { return add Const ( name,  ( float )  value )  ; }"
3694,public  Default Renderers Factory set Extension Renderer Mode ( @ Extension Renderer Mode int extension Renderer Mode ) { this . extension Renderer Mode = extension Renderer Mode ;  return this ; }
3695,"public void enable Limit ( boolean flag ) { jni Enable Limit ( addr, flag )  ; }"
3696,"public void load Library ( final  Context context, final  String library, final  String version ) { load Library ( context, library, version, null )  ; }"
3697,public void close (  ) { if  ( close Repo )      repo . close (  )  ; }
3698,"private static  Class<?> [  ]  read Parameters (  Object Input Stream in )  throws IO Exception,  Class Not Found Exception{  Class<?> [  ]  result = new  Class [ in . read Short (  )  ]  ;  for  ( int i = 0 ;  i < result . length ;  i++ )  {     if  ( !in . read Boolean (  )  )  {         result [ i ]  =  (  Class<?> )  in . read Object (  )  ;          continue ;      }     result [ i ]  = primitives [ in . read Byte (  )  ]  ;  } return result ; }"
3699,"public static  Immutable Double Array of ( double e0, double e1, double e2 ) { return new  Immutable Double Array ( new double [  ]  { e0, e1, e2 } )  ; }"
3700,"void try Register Binding ( B binding, boolean warn If Not Already Generated ) { try To Cache Binding ( binding )  ;  @ Suppress Warnings ( ""unchecked"" )  B maybe Unresolved = binding . unresolved (  )  . is Present (  )  ?  ( B )  binding . unresolved (  )  . get (  )  : binding ;  try To Generate Binding ( maybe Unresolved, warn If Not Already Generated )  ; }"
3701,"public  Realm Async Task retry Custom Confirmation Async (  String email,  App .  Callback< Void> callback ) {  Util . check Looper Thread ( "" Asynchronous retry custom confirmation is only possible from looper threads . "" )  ;  return new  Request< Void> ( NETWORK_POOL_EXECUTOR, callback )  {     @ Override     public  Void run (  )  throws  App Exception {         retry Custom Confirmation ( email )  ;          return null ;      } } . start (  )  ; }"
3702,public boolean is Set Path (  ) { return this . path != null ; }
3703,public  Verify Signature Command verify Signature (  ) { return new  Verify Signature Command ( repo )  ; }
3704,"public com . anychart . core . cartesian . series .  Spline Area spline Area (  String [  ]  data,  String csv Settings ) { return new com . anychart . core . cartesian . series .  Spline Area (  String . format (  Locale . US, js Base + "" . spline Area ( %s, %s ) "", array To String Wrap Quotes ( data ) , wrap Quotes ( csv Settings )  )  )  ; }"
3705,public void set Padding ( int text Padding ) { this . text Padding = text Padding ; }
3706,public void set Size (  ) { size = 0 ;  for  (  Abstract Data Type object : object List )  {     size += object . get Size (  )  ;  }}
3707,"public void prefetch Image ( final  String uri String, final double request Id As Double, final  Promise promise ) { final int request Id =  ( int )  request Id As Double ;  if  ( uri String == null || uri String . is Empty (  )  )  {     promise . reject ( ERROR_INVALID_URI, "" Cannot prefetch an image for an empty URI"" )  ;      return ;  }  Uri uri =  Uri . parse ( uri String )  ;   Image Request request =  Image Request Builder . new Builder With Source ( uri )  . build (  )  ;   Data Source< Void> prefetch Source = get Image Pipeline (  )  . prefetch To Disk Cache ( request, get Caller Context (  )  )  ;   Data Subscriber< Void> prefetch Subscriber = new  Base Data Subscriber< Void> (  )  {     @ Override     protected void on New Result Impl (  Data Source< Void> data Source )  {         if  ( !data Source . is Finished (  )  )  {             return ;          }         try {             remove Request ( request Id )  ;              promise . resolve ( true )  ;          } catch  (  Exception e )  {             promise . reject ( ERROR_PREFETCH_FAILURE, e )  ;          } finally {             data Source . close (  )  ;          }     }     @ Override     protected void on Failure Impl (  Data Source< Void> data Source )  {         try {             remove Request ( request Id )  ;              promise . reject ( ERROR_PREFETCH_FAILURE, data Source . get Failure Cause (  )  )  ;          } finally {             data Source . close (  )  ;          }     } } ;  register Request ( request Id, prefetch Source )  ;  prefetch Source . subscribe ( prefetch Subscriber,  Caller Thread Executor . get Instance (  )  )  ; }"
3708,private void reset All Paths (  ) { for  (  Svg Utils .  Svg Path path : paths )  {     path . set Length ( 0 )  ;  }}
3709,"public com . anychart . core . cartesian . series .  Base With Markers x Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
3710,"public  Builder add All ( double [  ]  values ) { ensure Room For ( values . length )  ;   System . arraycopy ( values, 0, array, count, values . length )  ;  count += values . length ;  return this ; }"
3711,public void set File Upload Config (  File Upload Config file Upload Config ) { this . file Upload Config = file Upload Config ; }
3712,public void set Key Store (  Key Store Factory Bean key Store ) { this . key Store = key Store ; }
3713,"protected void animate Add Impl ( final  View Holder holder, int index ) {// Free to implement}"
3714,public double get Max X (  ) { return m Max X ; }
3715,"private  String read Length Prefix (  )  throws IO Exception{ int next Open Bracket ;  while  (  ( next Open Bracket = index Of Open Bracket (  )  )  == -1 )  {     if  ( !pull More Data (  )  )  {         break ;      } } // more data to process .  if  ( buffer . remaining (  )  == 0 )  {     return null ;  } // open bracket .  if  ( next Open Bracket == -1 )  {     throw abort ( "" Reached the end of bundle when a length string is expected . "" )  ;  } char [  ]  c = new char [ next Open Bracket ]  ;  buffer . get ( c )  ;  return new  String ( c )  ; }"
3716,"public static  Class<?> resolve Return Type For Generic Method (  Method method,  Object [  ]  args ) {  Assert . not Null ( method, "" Method must not be null"" )  ;   Assert . not Null ( args, "" Argument array must not be null"" )  ;   Type Variable< Method> [  ]  declared Type Variables = method . get Type Parameters (  )  ;   Type generic Return Type = method . get Generic Return Type (  )  ;   Type [  ]  method Argument Types = method . get Generic Parameter Types (  )  ;  //  No declared type variables to inspect, so just return the standard return type .  if  ( declared Type Variables . length == 0 )  {     return method . get Return Type (  )  ;  } // return null, since such a method invocation would fail .  if  ( args . length < method Argument Types . length )  {     return null ;  } //  Ensure that the type variable  ( e . g . , T )  is declared directly on the method // itself  ( e . g . , via <T> ) , not on the enclosing class or interface .  boolean locally Declared Type Variable Matches Return Type = false ;  for  (  Type Variable< Method> current Type Variable : declared Type Variables )  {     if  ( current Type Variable . equals ( generic Return Type )  )  {         locally Declared Type Variable Matches Return Type = true ;          break ;      } } if  ( locally Declared Type Variable Matches Return Type )  {     for  ( int i = 0 ;  i < method Argument Types . length ;  i++ )  {          Type current Method Argument Type = method Argument Types [ i ]  ;          if  ( current Method Argument Type . equals ( generic Return Type )  )  {             return args [ i ]  . get Class (  )  ;          }         if  ( current Method Argument Type instanceof  Parameterized Type )  {              Parameterized Type parameterized Type =  (  Parameterized Type )  current Method Argument Type ;               Type [  ]  actual Type Arguments = parameterized Type . get Actual Type Arguments (  )  ;              for  (  Type type Arg : actual Type Arguments )  {                 if  ( type Arg . equals ( generic Return Type )  )  {                     if  ( args [ i ]  instanceof  Class )  {                         return  (  Class<?> )  args [ i ]  ;                      } else {                         //  For now, just fall back .  .  .                          return method . get Return Type (  )  ;                      }                 }             }         }     } } //  Fall back .  .  .  return method . get Return Type (  )  ; }"
3717,public static  File get Current Jar File (  ) { return get Jar File (  Path Util . class )  ; }
3718,"private static int run Suppression Failure Test (  Char Source in,  Char Sink out ) { try {     in . copy To ( out )  ;      fail (  )  ;  } catch  ( IO Exception expected )  {     return  Closer Test . get Suppressed ( expected )  . length ;  } // can't happen throw new  Assertion Error (  )  ; }"
3719,protected int get Bucket (  Cluster<T> cluster ) { int size = cluster . get Size (  )  ;  if  ( size <= BUCKETS [ 0 ]  )  {     return size ;  } for  ( int i = 0 ;  i < BUCKETS . length - 1 ;  i++ )  {     if  ( size < BUCKETS [ i + 1 ]  )  {         return BUCKETS [ i ]  ;      } } return BUCKETS [ BUCKETS . length - 1 ]  ; }
3720,private void post Frame Callback On Choreographer (  ) { m Choreographer . post Frame Callback ( m React Choreographer Dispatcher )  ;  m Has Posted Callback = true ; }
3721,public double get Rot X (  ) { return  Math . to Degrees ( m Orientation . get Rotation X (  )  )  ; }
3722,public boolean has Sub Items ( I Expandable expandable ) { return expandable != null && expandable . get Sub Items (  )  != null && expandable . get Sub Items (  )  . size (  )  > 0 ; }
3723,"private  Attribute exceptions (  Direct Class File cf, int offset, int length,  Parse Observer observer ) { if  ( length < 2 )  {     return throw Severely Truncated (  )  ;  }  Byte Array bytes = cf . get Bytes (  )  ;  // number_of_exceptions int count = bytes . get Unsigned Short ( offset )  ;  if  ( observer != null )  {     observer . parsed ( bytes, offset, 2, ""number_of_exceptions: "" +  Hex . u2 ( count )  )  ;  } offset += 2 ;  length -= 2 ;  if  ( length !=  ( count * 2 )  )  {     throw Bad Length (  ( count * 2 )  + 2 )  ;  }  Type List list = cf . make Type List ( offset, count )  ;  return new  Att Exceptions ( list )  ; }"
3724,public  File normalize (  File file ) { return file ; }
3725,"private  String process Line (  String line,  Array List< String> tags ) { line = line . trim (  )  ;  int removed Character Count = 0 ;   String Builder processed Line = new  String Builder ( line )  ;   Matcher matcher = SUBRIP_TAG_PATTERN . matcher ( line )  ;  while  ( matcher . find (  )  )  {      String tag = matcher . group (  )  ;      tags . add ( tag )  ;      int start = matcher . start (  )  - removed Character Count ;      int tag Length = tag . length (  )  ;      processed Line . replace ( start, /* end= */     start + tag Length, /* str= */     """" )  ;      removed Character Count += tag Length ;  } return processed Line . to String (  )  ; }"
3726,"public static  Vector2 from Barycoord (  Vector2 barycentric,  Vector2 a,  Vector2 b,  Vector2 c,  Vector2 interpolated Out ) { float u = 1 - barycentric . x - barycentric . y ;  interpolated Out . x = u * a . x + barycentric . x * b . x + barycentric . y * c . x ;  interpolated Out . y = u * a . y + barycentric . x * b . y + barycentric . y * c . y ;  return interpolated Out ; }"
3727,"private void construct Environment Map (  ) {  List< Framework Method> environment For Methods = get Test Class (  )  . get Annotated Methods (  Environment For . class )  ;  for  (  Framework Method environment For Method : environment For Methods )  {      Optional< End To End Environment> env = get Environment From Annotated Method ( environment For Method )  ;       String [  ]  tests For = environment For Method . get Annotation (  Environment For . class )  . test Names (  )  ;      for  (  String test For : tests For )  {         this . environment Map . put ( test For, env )  ;      } }}"
3728,public void change Cursor (  Cursor cursor ) {  Cursor old = swap Cursor ( cursor )  ;  if  ( old != null )  {     old . close (  )  ;  }}
3729,"public static  String get Provider Name (  Context context ) { return context . get Package Name (  )  + "" . provider"" ; }"
3730,"public com . anychart . core . gantt . elements .  Connector Element stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3731,"public com . anychart . core . sankey . elements .  Flow tooltip (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . tooltip ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3732,"public static void reverse ( short [  ]  array ) { check Not Null ( array )  ;  reverse ( array, 0, array . length )  ; }"
3733,Intent get Next Stopped Service (  ) { if  ( stopped Services . is Empty (  )  )  {     return null ;  } else {     return stopped Services . remove ( 0 )  . get Intent (  )  ;  }}
3734,"public void record Manual Rating (  String widget Id, int rating,  String email,  String comment, boolean user Can Be Contacted ) { synchronized  ( _cly )  {     L . i ( "" [  Ratings ]   Calling record Manual Rating"" )  ;      if  ( widget Id == null || widget Id . is Empty (  )  )  {         throw new  Illegal State Exception ( ""A valid widget ID must be provided .   The current one is either null or empty"" )  ;      }     record Manual Rating Internal ( widget Id, rating, email, comment, user Can Be Contacted )  ;  }}"
3735,"Map< Class<?>,  Java Members> get Class Cache Map (  ) { if  ( class Table == null )  {     class Table = new  Hash Map< Class<?>,  Java Members> (  )  ;  } return class Table ; }"
3736,"public  String get Details (  ) {  String Buffer sb = new  String Buffer (  )  ;   Rect F b = new  Rect F (  )  ;  gp . compute Bounds ( b, false )  ;  sb . append ( "" Shape Command at: "" + b . left + "", "" + b . top + ""\n"" )  ;  sb . append ( "" Size: "" + b . width (  )  + "" x "" + b . height (  )  + ""\n"" )  ;  sb . append ( "" Mode: "" )  ;  if  (  ( style & FILL )  != 0 )  {     sb . append ( ""FILL "" )  ;  } if  (  ( style & STROKE )  != 0 )  {     sb . append ( ""STROKE "" )  ;  } if  (  ( style & CLIP )  != 0 )  {     sb . append ( ""CLIP"" )  ;  } return sb . to String (  )  ; }"
3737,"public void set Attribute (  Stack Map Table smt ) {  Attribute Info . remove ( attributes,  Stack Map Table . tag )  ;  if  ( smt != null )      attributes . add ( smt )  ; }"
3738,public boolean is Charging Required (  ) { return is Charging Required ; }
3739,void set Identity Provider Service (  Identity Provider Service identity Provider Service ) { this . m Identity Provider Service = identity Provider Service ; }
3740,"public com . anychart . core . lineargauge .  Scale Bar container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
3741,"public boolean register Animation ( final  Animation anim ) {  Raj Log . d ( ""A Frame Task -  Adding animation: "" + anim )  ;  final A Frame Task task = new A Frame Task (  )  {     @ Override     protected void do Task (  )  {         m Animations . add ( anim )  ;      } } ;  return internal Offer Task ( task )  ; }"
3742,public boolean try Enter If (  Guard guard ) { if  ( guard . monitor != this )  {     throw new  Illegal Monitor State Exception (  )  ;  } final  Reentrant Lock lock = this . lock ;  if  ( !lock . try Lock (  )  )  {     return false ;  } boolean satisfied = false ;  try {     return satisfied = guard . is Satisfied (  )  ;  } finally {     if  ( !satisfied )  {         lock . unlock (  )  ;      } }}
3743,"public com . anychart . charts .  Sunburst stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3744,public com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration get Config (  ) { if  ( config Builder_ == null )  {     return config_ == null ? com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration . get Default Instance (  )  : config_ ;  } else {     return config Builder_ . get Message (  )  ;  }}
3745,public void decelerate (  ) {  Utils . set Layer To SW ( this )  ; }
3746,"public  Realm Query<E> not Equal To (  String field Name, @ Nullable  Float value ) { realm . check If Valid (  )  ;   Field Descriptor fd = schema . get Field Descriptors ( field Name,  Realm Field Type . FLOAT )  ;  if  ( value == null )  {     this . query . is Not Null ( fd . get Column Keys (  ) , fd . get Native Table Pointers (  )  )  ;  } else {     this . query . not Equal To ( fd . get Column Keys (  ) , fd . get Native Table Pointers (  ) , value )  ;  } return this ; }"
3747,"public void set Location Enabled ( boolean enabled ) { set Location Enabled For User ( enabled,  Process . my User Handle (  )  )  ; }"
3748,"public static  Stub And Response Metadata< Stub> wrap Stub To Send And Receive Metadata (  Stub grpc Stub,  Remote Execution Metadata metadata To Send ) { return wrap Stub To Receive Metadata ( wrap Stub To Send Metadata ( grpc Stub, metadata To Send )  )  ; }"
3749,"public com . anychart . core . ui .  Labels Factory labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . labels (  ) "" )  ; }"
3750,"public void reset Zoom (  Matrix output Matrix ) { output Matrix . reset (  )  ;  output Matrix . set ( m Matrix Touch )  ;  output Matrix . post Scale ( 1 . 0f, 1 . 0f, 0 . 0f, 0 . 0f )  ; }"
3751,"public com . anychart . core . gantt .  Time Line Header bounds (  String x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, height )  )  ;  return this ; }"
3752,"public com . anychart . standalones .  Resource List bounds (  String x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
3753,public  List<T> as List (  )  throws IO Exception{ return peek ( size (  )  )  ; }
3754,"public static  Short Buffer wrap ( short [  ]  array, int start, int len ) { if  ( array == null )  {     throw new  Null Pointer Exception (  )  ;  } if  ( start < 0 || len < 0 ||  ( long )  start +  ( long )  len > array . length )  {     throw new  Index Out Of Bounds Exception (  )  ;  }  Short Buffer buf =  Buffer Factory . new Short Buffer ( array )  ;  buf . position = start ;  buf . limit = start + len ;  return buf ; }"
3755,public  Network Request Metric Builder set Request Payload Bytes ( long bytes ) { builder . set Request Payload Bytes ( bytes )  ;  return this ; }
3756,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
3757,"public  Builder set Refresh Token ( @ Nullable  String refresh Token ) { if  ( refresh Token != null )  {     check Not Empty ( refresh Token, ""refresh token cannot be empty if defined"" )  ;  } m Refresh Token = refresh Token ;  return this ; }"
3758,public  Entry get ( int n ) { return  (  Entry )  get0 ( n )  ; }
3759,"public com . anychart . core . gantt . elements .  Progress Element stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3760,"private static void add Live Reference (  Object value ) { if  (  Closeable Reference . use Gc (  )  &&  ( value instanceof  Bitmap || value instanceof  Has Bitmap )  )  {     return ;  } synchronized  ( s Live Objects )  {      Integer count = s Live Objects . get ( value )  ;      if  ( count == null )  {         s Live Objects . put ( value, 1 )  ;      } else {         s Live Objects . put ( value, count + 1 )  ;      } }}"
3761,public void remove Memory Pressure Listener (  Memory Pressure Listener listener ) { m Listeners . remove ( listener )  ; }
3762,"public void test Non Hex Id (  ) { assert Null (  Commit Uri Matcher . get Commit (  Uri . parse ( ""https://github . com/defunkt/resque/commit/abck"" )  )  )  ; }"
3763,"private void put Resize ( K key, long value ) { K [  ]  key Table = this . key Table ;  for  ( int i = place ( key )  ;   ;  i =  ( i + 1 )  & mask )  {     if  ( key Table [ i ]  == null )  {         key Table [ i ]  = key ;          value Table [ i ]  = value ;          return ;      } }}"
3764,private  String get Random Occludee Type ( boolean dynamic ) { int i = rng . next Int ( OCCLUDEE_PATHS_STATIC . length )  ;  return  ( dynamic )  ? OCCLUDEE_PATHS_DYNAMIC [ i ]  : OCCLUDEE_PATHS_STATIC [ i ]  ; }
3765,private long get Time Difference Since Last Event To Event (  Abstract Buck Event event ) { long diff = event . get Timestamp Millis (  )  - build Phases Last Event . get (  )  ;  build Phases Last Event . set ( event . get Timestamp Millis (  )  )  ;  return diff ; }
3766,"private static T await Task (  Task<T> task )  throws IO Exception{ try {     return  Tasks . await ( task, RPC_TIMEOUT_SEC, SECONDS )  ;  } catch  (  Execution Exception e )  {     //  The underlying exception should always be an IO Exception or  Runtime Exception, which we     // rethrow .       Throwable cause = e . get Cause (  )  ;      if  ( cause instanceof IO Exception )  {         throw  ( IO Exception )  cause ;      } else if  ( cause instanceof  Runtime Exception )  {         throw  (  Runtime Exception )  cause ;      }     // should not happen but for safety     throw new IO Exception ( e )  ;  } catch  (  Interrupted Exception |  Timeout Exception e )  {     throw new IO Exception ( ERROR_SERVICE_NOT_AVAILABLE, e )  ;  }}"
3767,"public  Media Period Info try Resolve Window Index ( int window Index ) {  Media Period Info match = null ;  for  ( int i = 0 ;  i < media Period Info Queue . size (  )  ;  i++ )  {      Media Period Info info = media Period Info Queue . get ( i )  ;      int period Index = timeline . get Index Of Period ( info . media Period Id . period Uid )  ;      if  ( period Index != C . INDEX_UNSET && timeline . get Period ( period Index, period )  . window Index == window Index )  {         if  ( match != null )  {             //  Ambiguous match .              return null ;          }         match = info ;      } } return match ; }"
3768,public  Component Host get Component Host (  ) { return m Component . get Component Host (  )  ; }
3769,"public com . anychart . core . ui .  Crosshair Label padding (  String value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
3770,private  String read Byte Array (  ) { final byte [  ]  stream_ = this . stream ;  final  String Buffer buf = new  String Buffer (  )  ;  int count = 0 ;  char w =  ( char )  0 ;  // read individual bytes and format into a character array for  ( int to = stream_ . length ;   ( loc < to )  &&  ( stream_ [ loc ]  != '>' )  ;   )  {     final char c =  ( char )  stream_ [ loc ]  ;      byte b =  ( byte )  0 ;      if  ( c >= '0' && c <= '9' )  {         b =  ( byte )   ( c - '0' )  ;      } else if  ( c >= 'a' && c <= 'f' )  {         b =  ( byte )   ( 10 +  ( c - 'a' )  )  ;      } else if  ( c >= 'A' && c <= 'F' )  {         b =  ( byte )   ( 10 +  ( c - 'A' )  )  ;      } else {         loc++ ;          continue ;      }     // calculate where in the current byte this character goes     final int offset = 1 -  ( count % 2 )  ;      w |=  ( 0xf & b )  <<  ( offset << 2 )  ;      // increment to the next char if we've written four bytes     if  ( offset == 0 )  {         buf . append ( w )  ;          w =  ( char )  0 ;      }     ++count ;      ++loc ;  } // ignore trailing '>' ++loc ;  return buf . to String (  )  ; }
3771,"public  Grid Span Count View Model_ on Bind (  On Model Bound Listener< Grid Span Count View Model_,  Grid Span Count View> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
3772,"public com . anychart . charts .  Gantt row Hover Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Hover Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
3773,"private long traffic From Files (  ) {  Random Access File raf Rcv = null, raf Snd = null ;  long rcv Traffic = UNSUPPORTED, snd Traffic = UNSUPPORTED ;   String rcv Path = ""/proc/uid_stat/"" + uid + ""/tcp_rcv"" ;   String snd Path = ""/proc/uid_stat/"" + uid + ""/tcp_snd"" ;  try {     raf Rcv = new  Random Access File ( rcv Path, ""r"" )  ;      raf Snd = new  Random Access File ( snd Path, ""r"" )  ;      rcv Traffic =  Long . parse Long ( raf Rcv . read Line (  )  )  ;      snd Traffic =  Long . parse Long ( raf Snd . read Line (  )  )  ;       Log . d ( LOG_TAG,  String . format ( ""rcv Traffic, snd Traffic = %s, %s"", rcv Traffic, snd Traffic )  )  ;  } catch  (  Exception e )  { } finally {     try {         if  ( raf Rcv != null )  {             raf Rcv . close (  )  ;          }         if  ( raf Snd != null )              raf Snd . close (  )  ;      } catch  ( IO Exception e )  {     } } return rcv Traffic + snd Traffic < 0 ? UNSUPPORTED : rcv Traffic + snd Traffic ; }"
3774,void eval (  ) { push Double (  Math . abs ( pop Double (  )  )  )  ; }
3775,synchronized  Actions .  Attribute Record get Attribute Creation Record ( @ Non Null  Xml Attribute attribute ) { for  (  Actions .  Attribute Record attribute Record : get Attribute Records ( attribute )  )  {     if  ( attribute Record . get Action Type (  )  ==  Actions .  Action Type . ADDED )  {         return attribute Record ;      } } return null ; }
3776,public int get Expanded Title Margin Top (  ) { return m Expanded Margin Top ; }
3777,public int hash Code (  ) { return  ( first == null ? 0 : first . hash Code (  )  )  ^  ( second == null ? 0 : second . hash Code (  )  )  ; }
3778,public void end (  ) { end (  Collections . empty Map (  )  )  ; }
3779,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
3780,public long get Time Searching For Sizes (  ) { return statistics . time Searching For Sizes ; }
3781,"protected int compare To0 (  Offsetted Item other ) { throw new  Unsupported Operation Exception ( ""unsupported"" )  ; }"
3782,"public static int check Transmission Supported (  Context context ) { int return Code = SUPPORTED ;  if  ( android . os .  Build . VERSION . SDK_INT < 21 )  {     return Code = NOT_SUPPORTED_MIN_SDK ;  } else if  ( !context . get Application Context (  )  . get Package Manager (  )  . has System Feature (  Package Manager . FEATURE_BLUETOOTH_LE )  )  {     return Code = NOT_SUPPORTED_BLE ;  } else {     try {         //  Check to see if the get Bluetooth Le Advertiser is available .    If not, this will throw an exception indicating we are not running  Android L         if  (  (  (  Bluetooth Manager )  context . get System Service (  Context . BLUETOOTH_SERVICE )  )  . get Adapter (  )  . get Bluetooth Le Advertiser (  )  == null )  {             if  ( ! (  (  Bluetooth Manager )  context . get System Service (  Context . BLUETOOTH_SERVICE )  )  . get Adapter (  )  . is Multiple Advertisement Supported (  )  )  {                 return Code = NOT_SUPPORTED_CANNOT_GET_ADVERTISER_MULTIPLE_ADVERTISEMENTS ;              } else {                 return Code = NOT_SUPPORTED_CANNOT_GET_ADVERTISER ;              }         }     } catch  (  Exception e )  {         return Code = NOT_SUPPORTED_CANNOT_GET_ADVERTISER ;      } } return return Code ; }"
3783,private boolean is Managed Profile Without Permission (  User Handle user Handle ) {  User Info info = get User Info ( user Handle . get Identifier (  )  )  ;  return  ( info != null &&  (  ( info . flags & FLAG_MANAGED_PROFILE )  == FLAG_MANAGED_PROFILE )  )  ; }
3784,"public com . anychart . standalones .  Resource List stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3785,"protected void on Detached From Window (  ) { if  ( LOG_ATTACH_DETACH )  {      Log . d ( TAG, ""on Detached From Window"" )  ;  } if  ( gl Thread != null )  {     gl Thread . request Exit And Wait (  )  ;  } detached = true ;  super . on Detached From Window (  )  ; }"
3786,"public  Countly record View (  String view Name,  Map< String,  Object> view Segmentation ) { synchronized  ( _cly )  {     if  ( !_cly . is Initialized (  )  )  {         L . e ( "" Countly . shared Instance (  )  . init must be called before record View"" )  ;          return _cly ;      }     L . i ( "" [  Views ]   Calling record View  [ "" + view Name + "" ] "" )  ;      return record View Internal ( view Name, view Segmentation )  ;  }}"
3787,"public  Matrix zoom Out ( float x, float y ) {  Matrix save = new  Matrix (  )  ;  zoom Out ( x, y, save )  ;  return save ; }"
3788,public  Ijk Player View set Dialog Click Listener (  Share Dialog .  On Dialog Click Listener dialog Click Listener ) { m Dialog Click Listener = dialog Click Listener ;  if  ( m Share Dialog != null )  {     m Share Dialog . set Share Mode ( true )  ;  } return this ; }
3789,"public void should Show Request Permission Rationale ( final  String permission, final  Promise promise ) { if  (  Build . VERSION . SDK_INT <  Build . VERSION_CODES . M )  {     promise . resolve ( false )  ;      return ;  } try {     promise . resolve ( get Permission Aware Activity (  )  . should Show Request Permission Rationale ( permission )  )  ;  } catch  (  Illegal State Exception e )  {     promise . reject ( ERROR_INVALID_ACTIVITY, e )  ;  }}"
3790,"public void test Acquire Token Cache2 Identical Requests Concurrent (  ) { final  String username = ""fake@test . com"" ;  final  Acquire Token Parameters parameters = new  Acquire Token Parameters .  Builder (  )  . start Authorization From Activity ( m Activity )  . with Login Hint ( username )  . with Scopes (  Arrays . as List ( m Scopes )  )  . from Authority ( AAD_MOCK_AUTHORITY )  . with Callback (  Acquire Token Test Helper . successful Interactive Callback (  )  )  . build (  )  ;  m Application . acquire Token ( parameters )  ;  flush Scheduler (  )  ;  final  Acquire Token Silent Parameters silent Parameters = new  Acquire Token Silent Parameters .  Builder (  )  . for Account (  Acquire Token Test Helper . get Account (  )  )  . with Scopes (  Arrays . as List ( m Scopes )  )  . force Refresh ( false )  . from Authority ( AAD_MOCK_AUTHORITY )  . with Callback ( new  Cache Count Authentication Callback ( 1 )  )  . build (  )  ;  final  Acquire Token Silent Parameters silent Parameters1 = new  Acquire Token Silent Parameters .  Builder (  )  . for Account (  Acquire Token Test Helper . get Account (  )  )  . with Scopes (  Arrays . as List ( m Scopes )  )  . force Refresh ( false )  . from Authority ( AAD_MOCK_DELAYED_RESPONSE_AUTHORITY )  . with Callback (  Acquire Token Test Helper . failed Silent Request Duplicate Command Callback (  )  )  . build (  )  ;  m Application . acquire Token Silent Async ( silent Parameters )  ;  m Application . acquire Token Silent Async ( silent Parameters1 )  ;  flush Scheduler (  )  ; }"
3791,"public static  Pixa create Pixa ( int size ) { return create Pixa ( size, 0, 0 )  ; }"
3792,static long value For Bit ( int n ) { return 0x8000000000000000 L >>> n ; }
3793,public  Header Model get Model (  ) { return model ; }
3794,"public  Content Values convert To Content Values ( @ Non Null  Orma Connection conn, @ Non Null  Entry model, boolean without Auto Id ) {  Content Values content Values = new  Content Values (  )  ;  content Values . put ( ""resource Type"", model . resource Type )  ;  content Values . put ( ""resource Id"", model . resource Id )  ;  if  ( !without Auto Id )  {     content Values . put ( ""id"", model . id )  ;  } return content Values ; }"
3795,public void set Number Of Total Views (  Integer number Of Total Views ) { this . number Of Total Views = number Of Total Views ; }
3796,"static  Set<T> of (  Source To Set Function<I, T> f,  Collection<I> sources )  throws  Query Exception{ int size = sources . size (  )  ;  if  ( size == 0 )  {     return  Collections . empty Set (  )  ;  } else if  ( size == 1 )  {     return f . to Set (  Iterables . get Only Element ( sources )  )  ;  } else {      Set<T> out = new  Hash Set<> (  )  ;      for  ( I source : sources )  {         out . add All ( f . to Set ( source )  )  ;      }     return out ;  }}"
3797,public void set Request Id ( int request Id ) { this . m Request Id = request Id ; }
3798,public static  Optional< Path Source Path> from (  Source Path source Path ) { if  ( source Path instanceof  Archive Member Source Path )  {     source Path =  (  (  Archive Member Source Path )  source Path )  . get Archive Source Path (  )  ;  } return source Path instanceof  Path Source Path ?  Optional . of (  (  Path Source Path )  source Path )  :  Optional . empty (  )  ; }
3799,"public  Auto Layout Model View Match Parent Model_ on Unbind (  On Model Unbound Listener< Auto Layout Model View Match Parent Model_,  Auto Layout Model View Match Parent> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
3800,"public  Storage Task< Result T> add On Failure Listener ( @ Non Null  Executor executor, @ Non Null  On Failure Listener listener ) {  Preconditions . check Not Null ( listener )  ;   Preconditions . check Not Null ( executor )  ;  failure Manager . add Listener ( null, executor, listener )  ;  return this ; }"
3801,"private void check Framework Type (  ) { if  ( binding Element Type (  )  . filter (  Framework Types::is Framework Type )  . is Present (  )  )  {     report . add Error ( binding Elements ( ""must not %s framework types"", binding Element Type Verb (  )  )  )  ;  }}"
3802,"public void add Excluded Root (  Native Linkable root ) { excluded Roots . put ( root . get Build Target (  ) , root )  ; }"
3803,"public com . anychart . core . stock . scrollerseries .  Spline Area bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
3804,"public com . anychart . core . annotations .  Infinite Line bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
3805,public static boolean is Protected ( int mod ) { return  ( mod & PROTECTED )  != 0 ; }
3806,"public com . anychart . core . resource . resourcelist .  Settings With Margin margin (  String value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
3807,String get Char Name ( char char Index ) { return null ; }
3808,public  String get Final Url (  ) { return final Url ; }
3809,public final void disconnect (  ) { m Nrf Mesh Repository . disconnect (  )  ; }
3810,public  Type get Type (  ) { return type ; }
3811,public  List< Double> order (  List< Double> insertion Order ) { return insertion Order ; }
3812,"public void load First Frame Cover (  String url ) { //原始方法 /*final  Media Metadata Retriever media Metadata Retriever = get Media Metadata Retriever ( url )  ;      //获取帧图片     if  ( get Media Metadata Retriever ( url )  != null )  {         new  Thread ( new  Runnable (  )  {             @ Override             public void run (  )  {                 final  Bitmap bitmap = media Metadata Retriever                          . get Frame At Time ( 1000,  Media Metadata Retriever . OPTION_CLOSEST )  ;                  run On Ui Thread ( new  Runnable (  )  {                     @ Override                     public void run (  )  {                         if  ( bitmap != null && !is Release )  {                              Debuger . printf Log ( ""time "" +  System . current Time Millis (  )  )  ;                              //显示                             cover Image View . set Image Bitmap ( bitmap )  ;                          }                     }                 } )  ;              }         } )  . start (  )  ;      }*/ //可以参考 Glide，内部也是封装了 Media Metadata Retriever  Glide . with ( this . get Application Context (  )  )  . set Default Request Options ( new  Request Options (  )  . frame ( 1000000 )  . center Crop (  )  . error ( R . mipmap . xxx2 )  . placeholder ( R . mipmap . xxx1 )  )  . load ( url )  . into ( cover Image View )  ; }"
3813,"protected boolean filter Leftover View (  View Group parent, int child Index ) { parent . remove View At ( child Index )  ;  return true ; }"
3814,"public  File get Rewritten Dir (  ) { return new  File ( get Dir (  ) , REWRITTEN )  ; }"
3815,public void set Queue Editor (  Queue Editor queue Editor ) { if  ( this . queue Editor != queue Editor )  {     unregister Command Receiver ( this . queue Editor )  ;      this . queue Editor = queue Editor ;      register Command Receiver ( queue Editor )  ;      media Session . set Flags ( queue Editor == null ? BASE_MEDIA_SESSION_FLAGS : EDITOR_MEDIA_SESSION_FLAGS )  ;  }}
3816,public  Parameters Builder set Allow Mixed Mime Adaptiveness ( boolean allow Mixed Mime Adaptiveness ) { set Allow Audio Mixed Mime Type Adaptiveness ( allow Mixed Mime Adaptiveness )  ;  set Allow Video Mixed Mime Type Adaptiveness ( allow Mixed Mime Adaptiveness )  ;  return this ; }
3817,"public  Identify post Insert (  String property, long value ) { add To User Properties (  Constants . AMP_OP_POSTINSERT, property, value )  ;  return this ; }"
3818,"public com . anychart . core . cartesian . series .  Base With Markers right (  String right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", wrap Quotes ( right )  )  )  ;  return this ; }"
3819,public void visit Phi Insn (  Phi Insn phi ) { /* don't process sources for phi's */ process Result Reg ( phi )  ; }
3820,public  Amplitude Client set Use Dynamic Config ( boolean use Dynamic Config ) { this . use Dynamic Config = use Dynamic Config ;  return this ; }
3821,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
3822,"public  Future< Date> get Date Of Data In Cache (  Class<?> clazz, final  Object cache Key )  throws  Cache Creation Exception{ return execute Command ( new  Get Date Of Data In Cache Command ( this, clazz, cache Key )  )  ; }"
3823,"public final void set Image ( @ Non Null  Image Source image Source ) { set Image ( image Source, null, null )  ; }"
3824,public boolean is Item Enabled ( int position ) { T item = get Item ( position )  ;  return item != null && item . is Enabled (  )  ; }
3825,"public com . anychart . core . annotations .  Fibonacci Timezones allow Edit (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . allow Edit ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
3826,"protected void handle Recursive Update ( final A_n AABB Tree container, I Graph Node Member object ) { // Raj Log . i ( "" Rajawali"", "" Handling recursive update potential . "" )  ;  A_n AABB Tree local_container = container ;  boolean updated = false ;  while  ( !updated )  {     if  ( local_container . contains ( object . get Transformed Bounding Volume (  )  )  )  {         int fits_in_child = -1 ;          if  ( m Split )  {             for  ( int j = 0 ;  j < CHILD_COUNT ;  ++j )  {                 if  ( m Children [ j ]  . contains ( object . get Transformed Bounding Volume (  )  )  )  {                     // If the member fits in this child, mark that child                     if  ( fits_in_child < 0 )  {                         fits_in_child = j ;                      } else {                         // It fits in multiple children, leave it in parent                         fits_in_child = -1 ;                          break ;                      }                 }             }             if  ( fits_in_child >= 0 )  {                 // If a single child was marked                  Raj Log . i ( "" Fits in a single child . "" )  ;                  local_container . remove From Members ( object )  ;                  m Children [ fits_in_child ]  . internal Add Object ( object )  ;                  updated = true ;              } else {                 //TODO: WORKS                  Raj Log . i ( "" Fits in multiple children, leaving in place . "" )  ;                  updated = true ;              }         } else {              Raj Log . i ( "" No children so we are leaving in same node . "" )  ;              if  ( !object . is In Graph (  )  )  {                  Raj Log . i ( "" Removing from outside graph and moving to inside root . "" )  ;                  local_container . m Outside . remove ( object )  ;                  local_container . internal Add Object ( object )  ;              }             updated = true ;          }     } else {         // Raj Log . v ( "" Rajawali"", ""OUTSIDE"" )  ;          if  ( local_container . m Parent == null )  {             // Raj Log . i ( "" Rajawali"", "" Container is root node .   Adding to outside . "" )  ;              if  ( object . is In Graph (  )  )  {                 local_container . remove From Members ( object )  ;                  local_container . add To Outside ( object )  ;              }             // Raj Log . e ( "" Rajawali"", "" Node after add To Outside: "" + object . get Graph Node (  )  )  ;              updated = true ;          } else {              Raj Log . i ( "" Container is not root  ( "" + local_container + "" )  .   Moving search up a level . "" )  ;              local_container = local_container . m Parent ;          }     } }}"
3827,"protected void append Detail (  String Buffer buffer,  String field Name, int [  ]  array ) { buffer . append ( array Start )  ;  for  ( int i = 0 ;  i < array . length ;  i++ )  {     if  ( i > 0 )  {         buffer . append ( array Separator )  ;      }     append Detail ( buffer, field Name, array [ i ]  )  ;  } buffer . append ( array End )  ; }"
3828,public  View .  On Click Listener get On Click Listener Fab (  ) { return m On Click Listener Fab ; }
3829,public  Object Mapper get Object Mapper (  ) {  Jackson Facade jackson Facade =  (  Jackson Facade )  get Mapper Facade (  )  ;  return jackson Facade . get Object Mapper (  )  ; }
3830,"public static  Simple Adapter<E> decorate ( final  Simple Adapter<E> adaptee, final  Decorator<E> decorator ) { return new  Simple Adapter<E> (  )  {     @ Override     public int get Size (  )  {         return  Integer . MAX_VALUE ;      }     @ Override     public E get ( int position )  {         return decorator . decorate ( adaptee, position )  ;      }     @ Override     public boolean is Lazy (  )  {         //  This is never lazy         return false ;      } } ; }"
3831,public  Builder set Scopes ( @ Nullable  Iterable< String> scopes ) { m Scope =  Ascii String List Util . iterable To String ( scopes )  ;  return this ; }
3832,"public com . anychart . core .  Series Base min Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", height )  )  ;  return this ; }"
3833,public void update Widget Size (  Resizable Widget widget ) { if  ( !widget . is Attached (  )  )  {     return ;  }  Resizable Widget Info info = widgets . get ( widget )  ;  if  ( info != null )  {     info . update Sizes (  )  ;  }}
3834,public  String get Type (  ) { return type ; }
3835,"public static  Config Builder< Chat SDK> configure ( @ Nullable  Class<? extends  Base Network Adapter> network Adapter Class, @ Nullable  Class<? extends  Interface Adapter> interface Adapter Class ) { shared (  )  . builder = new  Config Builder<> ( shared (  )  )  ;  return shared (  )  . builder . set Network Adapter ( network Adapter Class )  . set Interface Adapter ( interface Adapter Class )  ; }"
3836,"public com . anychart . charts .  Sparkline bottom (  String bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", wrap Quotes ( bottom )  )  )  ;  return this ; }"
3837,"protected void close Drawer (  View drawer View, boolean animate ) { directly On ( real Drawer Layout,  Drawer Layout . class )  . close Drawer ( drawer View, false )  ; }"
3838,"public static  Cache Builder< Object,  Object> new Builder (  ) { return new  Cache Builder<> (  )  ; }"
3839,"public com . anychart . core . gantt . edit .  Thumb fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
3840,"public static void add ( @ Non Null final  Fragment Manager fm, @ Non Null final  Fragment add, @ Id Res final int container Id, final boolean is Hide ) { add ( fm, add, container Id, null, is Hide, false )  ; }"
3841,public void set Dispatch Interval ( long dispatch Interval ) { m Dispatch Interval = dispatch Interval ;  if  ( m Dispatch Interval != -1 )      launch (  )  ; }
3842,public int get Bar Border Color (  ) { return m Bar Border Color ; }
3843,"public void get X Axes Count (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get X Axes Count (  )  ; "" )  ; }"
3844,"public void set Span Count ( int span Count ) { if  ( span Count == m Span Count )  {     return ;  } if  ( span Count < 1 )  {     throw new  Illegal Argument Exception ( "" Span count should be at least 1 .   Provided "" + span Count )  ;  } m Span Count = span Count ;  m Span Size Lookup . invalidate Span Index Cache (  )  ;  ensure Span Count (  )  ; }"
3845,"private boolean send Next Have Batch (  Fetch State V2 fetch State,  Packet Line Out output,  Progress Monitor monitor )  throws IO Exception,  Cancelled Exception{ long n = 0 ;  while  ( n < fetch State . haves To Send )  {     final  Rev Commit c = walk . next (  )  ;      if  ( c == null )  {         break ;      }     //$NON-NLS-1$     output . write String ( ""have "" + c . get Id (  )  . name (  )  + '\n' )  ;      n++ ;      if  ( n % 10 == 0 && monitor . is Cancelled (  )  )  {         throw new  Cancelled Exception (  )  ;      } } fetch State . haves Total += n ;  if  ( n == 0 ||  ( fetch State . had Acks && fetch State . haves Without Ack > MAX_HAVES )  || fetch State . haves Total > max Haves )  {     //$NON-NLS-1$     output . write String ( ""done\n"" )  ;      output . end (  )  ;      return true ;  } //  Increment only after the test above .   Of course we have no AC Ks yet // for the newly added ""have""s, so it makes no sense to count them // against the MAX_HAVES limit .  fetch State . haves Without Ack += n ;  output . end (  )  ;  fetch State . inc Haves To Send ( stateless RPC )  ;  return false ; }"
3846,private void fits Keyboard (  ) { if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . KITKAT )  {     if  ( !m Is Fragment )  {         if  ( m Bar Params . keyboard Enable )  {             if  ( m Fits Keyboard == null )  {                 m Fits Keyboard = new  Fits Keyboard ( this )  ;              }             m Fits Keyboard . enable ( m Bar Params . keyboard Mode )  ;          } else {             if  ( m Fits Keyboard != null )  {                 m Fits Keyboard . disable (  )  ;              }         }     } else {         if  ( m Parent Bar != null )  {             if  ( m Parent Bar . m Bar Params . keyboard Enable )  {                 if  ( m Parent Bar . m Fits Keyboard == null )  {                     m Parent Bar . m Fits Keyboard = new  Fits Keyboard ( m Parent Bar )  ;                  }                 m Parent Bar . m Fits Keyboard . enable ( m Parent Bar . m Bar Params . keyboard Mode )  ;              } else {                 if  ( m Parent Bar . m Fits Keyboard != null )  {                     m Parent Bar . m Fits Keyboard . disable (  )  ;                  }             }         }     } }}
3847,public static void notify Adapter (  Sticky Card List View list View ) { if  ( list View . m Adapter != null )  {     list View . m Adapter . notify Data Set Changed (  )  ;  }}
3848,"public  List< View Manager> get Or Create View Managers (  React Application Context catalyst Application Context ) {  React Marker . log Marker ( CREATE_VIEW_MANAGERS_START )  ;   Systrace . begin Section ( TRACE_TAG_REACT_JAVA_BRIDGE, ""create All View Managers"" )  ;  try {     if  ( m View Managers == null )  {         synchronized  ( m Packages )  {             if  ( m View Managers == null )  {                 m View Managers = new  Array List<> (  )  ;                  for  (  React Package react Package : m Packages )  {                     m View Managers . add All ( react Package . create View Managers ( catalyst Application Context )  )  ;                  }                 return m View Managers ;              }         }     }     return m View Managers ;  } finally {      Systrace . end Section ( TRACE_TAG_REACT_JAVA_BRIDGE )  ;       React Marker . log Marker ( CREATE_VIEW_MANAGERS_END )  ;  }}"
3849,"public synchronized  Index XY Map< Double,  Double> get XY Map (  ) { return m XY ; }"
3850,private  Object parse Object (  Object obj )  throws JSON Exception{ if  ( obj instanceof JSON Array )  {     return parse List (  ( JSON Array )  obj )  ;  } else if  ( obj instanceof JSON Object )  {     return parse Map (  ( JSON Object )  obj )  ;  } else {     return obj ;  }}
3851,"boolean remove From Column If (  Predicate<? super  Entry<R, V>> predicate ) { boolean changed = false ;   Iterator< Entry<R,  Map<C, V>>> iterator = backing Map . entry Set (  )  . iterator (  )  ;  while  ( iterator . has Next (  )  )  {      Entry<R,  Map<C, V>> entry = iterator . next (  )  ;       Map<C, V> map = entry . get Value (  )  ;      V value = map . get ( column Key )  ;      if  ( value != null && predicate . apply (  Maps . immutable Entry ( entry . get Key (  ) , value )  )  )  {         map . remove ( column Key )  ;          changed = true ;          if  ( map . is Empty (  )  )  {             iterator . remove (  )  ;          }     } } return changed ; }"
3852,public final  Paint get Paint (  ) { return m Paint ; }
3853,public  Rev Commit get Current Commit (  ) { return current Commit ; }
3854,public  Touchpad Style get Style (  ) { return style ; }
3855,"public static int sp2px (  Context context, float sp Value ) { float font Scale = context . get Resources (  )  . get Display Metrics (  )  . scaled Density ;  return  ( int )   ( sp Value * font Scale + 0 . 5f )  ; }"
3856,"public static  String get Table Name (  Annotation Retriever annotation Retriever,  Class<?> model Class ) {  Database Table table_annotation = annotation Retriever . get Annotation ( model Class,  Database Table . class )  ;  if  ( table_annotation == null )  {     throw new  Runtime Exception ( "" Database Table annotation not found for "" + model Class . get Name (  )  )  ;  } return get Table Name ( model Class, table_annotation )  ; }"
3857,public  Method Ids Section get Method Ids (  ) { return method Ids ; }
3858,"public static  Calendar read Date Time ( @ Non Null final  Data data, final int offset ) { if  ( data . size (  )  < offset + 7 )      return null ;  final  Calendar calendar =  Calendar . get Instance (  )  ;  final int year = data . get Int Value (  Data . FORMAT_UINT16, offset )  ;  final int month = data . get Int Value (  Data . FORMAT_UINT8, offset + 2 )  ;  final int day = data . get Int Value (  Data . FORMAT_UINT8, offset + 3 )  ;  if  ( year > 0 )      calendar . set (  Calendar . YEAR, year )  ;  else     calendar . clear (  Calendar . YEAR )  ;  if  ( month > 0 )      // months are 1-based in  Date  Time characteristic     calendar . set (  Calendar . MONTH, month - 1 )  ;  else     calendar . clear (  Calendar . MONTH )  ;  if  ( day > 0 )      calendar . set (  Calendar . DATE, day )  ;  else     calendar . clear (  Calendar . DATE )  ;  calendar . set (  Calendar . HOUR_OF_DAY, data . get Int Value (  Data . FORMAT_UINT8, offset + 4 )  )  ;  calendar . set (  Calendar . MINUTE, data . get Int Value (  Data . FORMAT_UINT8, offset + 5 )  )  ;  calendar . set (  Calendar . SECOND, data . get Int Value (  Data . FORMAT_UINT8, offset + 6 )  )  ;  calendar . set (  Calendar . MILLISECOND, 0 )  ;  return calendar ; }"
3859,"private static void bind ( SQ Lite Program program,  Object [  ]  bind Args ) { for  ( int i = 0 ;  i < bind Args . length ;  i++ )  {      Object arg = bind Args [ i ]  ;      if  ( arg == null )  {         program . bind Null ( i + 1 )  ;      } else if  ( arg instanceof  String )  {         program . bind String ( i + 1,  (  String )  arg )  ;      } else if  ( arg instanceof  Integer )  {         program . bind Long ( i + 1,  (  Integer )  arg )  ;      } else if  ( arg instanceof  Long )  {         program . bind Long ( i + 1,  (  Long )  arg )  ;      } else if  ( arg instanceof  Double )  {         program . bind Double ( i + 1,  (  Double )  arg )  ;      } else if  ( arg instanceof byte [  ]  )  {         program . bind Blob ( i + 1,  ( byte [  ]  )  arg )  ;      } else {         throw fail ( "" Unknown argument %s of type %s"", arg, arg . get Class (  )  )  ;      } }}"
3860,"public com . anychart . core . cartesian . series .  Base With Markers a11y (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . a11y ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
3861,"public com . anychart . core . ui . markersfactory .  Marker negative Markers (  ) { return new com . anychart . core . ui . markersfactory .  Marker ( js Base + "" . negative Markers (  ) "" )  ; }"
3862,public static _ Fields find By Name ( java . lang .  String name ) { return by Name . get ( name )  ; }
3863,"private static boolean is Jdk9 Or Higher (  ) { return JAVA_SPECIFICATION_VERSION . value (  )  . starts With ( ""9"" )  || JAVA_SPECIFICATION_VERSION . value (  )  . starts With ( ""10"" )  ; }"
3864,"private void _init Item Click Listener ( final  Base View Holder base View Holder ) { if  ( m Item Click Listener != null )  {     base View Holder . item View . set On Click Listener ( new  View .  On Click Listener (  )  {         @ Override         public void on Click (  View v )  {             m Item Click Listener . on Item Click ( v, base View Holder . get Layout Position (  )  )  ;          }     } )  ;  } if  ( m Item Long Click Listener != null )  {     base View Holder . item View . set On Long Click Listener ( new  View .  On Long Click Listener (  )  {         @ Override         public boolean on Long Click (  View v )  {             return m Item Long Click Listener . on Item Long Click ( v, base View Holder . get Layout Position (  )  )  ;          }     } )  ;  } if  ( m Drag Callback != null && m Drag Fix Count > 0 )  {     base View Holder . item View . set On Touch Listener ( new  View .  On Touch Listener (  )  {         @ Override         public boolean on Touch (  View v,  Motion Event event )  {             if  ( base View Holder . get Layout Position (  )  < m Drag Fix Count )  {                 m Drag Callback . set Enable ( false )  ;              } else {                 m Drag Callback . set Enable ( true )  ;              }             return false ;          }     } )  ;  }}"
3865,protected URL resolve URL (  ) { if  ( this . clazz != null )  {     return this . clazz . get Resource ( this . path )  ;  } else if  ( this . class Loader != null )  {     return this . class Loader . get Resource ( this . path )  ;  } else {     return  Class Loader . get System Resource ( this . path )  ;  }}
3866,"public SSL Socket Factory ssl Socket Factory ( SSL Socket Factory delegate ) { return new  Delegating SSL Socket Factory ( delegate )  {     @ Override     protected SSL Socket configure Socket ( SSL Socket ssl Socket )  throws IO Exception {          Recorded Socket recorded Socket = new  Recorded Socket (  )  ;          recorded Sockets . add ( recorded Socket )  ;          return new  Recording SSL Socket ( ssl Socket, recorded Socket )  ;      } } ; }"
3867,"public void test_for_issue_2 (  )  throws  Exception{  Exception error = null ;  try {      Hash Map origin = new  Hash Map (  )  ;      origin . put ( 5 . 3f, ""value"" )  ;      JSON Array json Array = new JSON Array (  )  . fluent Add ( origin )  ;      json Array . get JSON Object ( 0 )  ;      // now json Array is  [ {5 . 3:""value""} ]      assert Equals ( 1, json Array . get JSON Object ( 0 )  . size (  )  )  ;  } catch  ( JSON Exception ex )  {     error = ex ;  } assert Null ( error )  ; }"
3868,public boolean is Swipe Enabled For Model ( T model ) { return true ; }
3869,"private static void check Allows Insecure (  Path path,  Recursive Delete Option [  ]  options )  throws  Insecure Recursive Delete Exception{ if  ( ! Arrays . as List ( options )  . contains (  Recursive Delete Option . ALLOW_INSECURE )  )  {     throw new  Insecure Recursive Delete Exception ( path . to String (  )  )  ;  }}"
3870,protected void on Loss Transient Can Duck (  ) {}
3871,"public  Iterable< Module Holder> get Native Module Iterator ( final  React Application Context react Context ) { final  Set< Map .  Entry< String,  React Module Info>> entry Set = get React Module Info Provider (  )  . get React Module Infos (  )  . entry Set (  )  ;  final  Iterator< Map .  Entry< String,  React Module Info>> entry Set Iterator = entry Set . iterator (  )  ;  return new  Iterable< Module Holder> (  )  {     @ Non Null     @ Override     public //  This should ideally be an  Iterator Convertor, but we don't have any internal library for it      Iterator< Module Holder> iterator (  )  {         return new  Iterator< Module Holder> (  )  {              Map .  Entry< String,  React Module Info> next Entry = null ;              private void find Next (  )  {                 while  ( entry Set Iterator . has Next (  )  )  {                      Map .  Entry< String,  React Module Info> entry = entry Set Iterator . next (  )  ;                       React Module Info react Module Info = entry . get Value (  )  ;                      // the current  Native Module is a  Turbo Module, we need to skip iterating over it .                      if  (  React Feature Flags . use Turbo Modules && react Module Info . is Turbo Module (  )  )  {                         continue ;                      }                     next Entry = entry ;                      return ;                  }                 next Entry = null ;              }             @ Override             public boolean has Next (  )  {                 if  ( next Entry == null )  {                     find Next (  )  ;                  }                 return next Entry != null ;              }             @ Override             public  Module Holder next (  )  {                 if  ( next Entry == null )  {                     find Next (  )  ;                  }                 if  ( next Entry == null )  {                     throw new  No Such Element Exception ( "" Module Holder not found"" )  ;                  }                  Map .  Entry< String,  React Module Info> entry = next Entry ;                  //  Advance iterator                 find Next (  )  ;                   String name = entry . get Key (  )  ;                   React Module Info react Module Info = entry . get Value (  )  ;                  return new  Module Holder ( react Module Info, new  Module Holder Provider ( name, react Context )  )  ;              }             @ Override             public void remove (  )  {                 throw new  Unsupported Operation Exception ( "" Cannot remove native modules from the list"" )  ;              }         } ;      } } ; }"
3872,"public com . anychart . core . annotations .  Trend Channel bounds (  Number x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
3873,"public void height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . height (  )  ; "" )  ; }"
3874,public  Actor get Related Actor (  ) { return related Actor ; }
3875,public  Edit Text Dialog Builder set Input Type ( int input Type ) { m Input Type = input Type ;  return this ; }
3876,"protected  Write Request send Indication ( @ Nullable final  Bluetooth Gatt Characteristic server Characteristic, @ Nullable final byte [  ]  data, final int offset, final int length ) { return  Request . new Indication Request ( server Characteristic, data, offset, length )  . set Request Handler ( request Handler )  ; }"
3877,"private  Executor Factory get Default Executor Factory (  ) { return new  Executor Factory (  )  {     @ Override     public  Executor Service create Non Blocking Executor (  Blocking Queue< Runnable> task Queue )  {         return get New Thread Pool Executor ( /* maximum Pool Size= */         1, /* thread Name Suffix= */         "" Non- Blocking Executor"", task Queue )  ;      }     @ Override     public  Executor Service create Blocking Executor (  Blocking Queue< Runnable> task Queue )  {         return get New Thread Pool Executor ( /* maximum Pool Size= */         DEFAULT_BLOCKING_THREAD_POOL_SIZE, /* thread Name Suffix= */         "" Blocking Executor"", task Queue )  ;      }     @ Override     public  Scheduled Executor Service create Non Blocking Scheduled Executor (  )  {         return new  Scheduled Thread Pool Executor ( /* core Pool Size= */         0, get Thread Factory ( "" Scheduled Executor"" )  )  ;      }     private  Thread Pool Executor get New Thread Pool Executor ( int maximum Pool Size, final  String thread Name Suffix,  Blocking Queue< Runnable> task Queue )  {         return new  Thread Pool Executor ( /* core Pool Size= */         0, /* maximum Pool Size= */         maximum Pool Size, /* keep Alive Time= */         60, /* unit= */          Time Unit . SECONDS, task Queue, get Thread Factory ( thread Name Suffix )  )  ;      }     private  Thread Factory get Thread Factory ( final  String thread Name Suffix )  {         return new  Thread Factory (  )  {             @ Override             public  Thread new Thread ( @ Non Null  Runnable runnable )  {                  Thread t =  Executors . default Thread Factory (  )  . new Thread ( runnable )  ;                  t . set Name ( "" Volley-"" + thread Name Suffix )  ;                  return t ;              }         } ;      } } ; }"
3878,public static  System Properties Proxy get Instance (  ) { return SINGLETON ; }
3879,public void set Played ( boolean played ) { if  ( m Played != played )  {     m Played = played ;      invalidate (  )  ;  }}
3880,"public static boolean handle Message Received (  Remote Message remote Message ) { if  ( remote Message . get Data (  )  . contains Key ( ""qiscus_sdk"" )  )  {     if  (  Qiscus Core . has Setup User (  )  )  {         if  ( ! Qiscus Pusher Api . get Instance (  )  . is Connected (  )  )  {              Qiscus Pusher Api . get Instance (  )  . restart Connection (  )  ;          }         if  ( remote Message . get Data (  )  . contains Key ( ""payload"" )  )  {             if  ( remote Message . get Data (  )  . get ( ""qiscus_sdk"" )  . equals ( ""post_comment"" )  )  {                 handle Post Comment Event ( remote Message )  ;              } else if  ( remote Message . get Data (  )  . get ( ""qiscus_sdk"" )  . equals ( ""delete_message"" )  )  {                 handle Delete Comments Event ( remote Message )  ;              } else if  ( remote Message . get Data (  )  . get ( ""qiscus_sdk"" )  . equals ( ""clear_room"" )  )  {                 handle Clear Comments ( remote Message )  ;              }         }     }     return true ;  } return false ; }"
3881,"private  Result<A, S, T> dataflow (  Tree Path path,  Context context, T transfer ) { final  Processing Environment env =  Javac Processing Environment . instance ( context )  ;  final  Control Flow Graph cfg = cfg Cache . get Unchecked (  Cfg Params . create ( path, env )  )  ;  final  Analysis Params aparams =  Analysis Params . create ( transfer, cfg )  ;  @ Suppress Warnings ( ""unchecked"" )  final  Analysis<A, S, T> analysis =  (  Analysis<A, S, T> )  analysis Cache . get Unchecked ( aparams )  ;  return new  Result<A, S, T> (  )  {     @ Override     public  Analysis<A, S, T> get Analysis (  )  {         return analysis ;      }     @ Override     public  Control Flow Graph get Control Flow Graph (  )  {         return cfg ;      } } ; }"
3882,"public com . anychart . core . stock . indicators . ADL series (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . series ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
3883,"public float get Lowest Visible X (  ) { get Transformer (  Axis Dependency . LEFT )  . get Values By Touch Point ( m View Port Handler . content Left (  ) , m View Port Handler . content Bottom (  ) , pos For Get Lowest Visible X )  ;  float result =  ( float )   Math . max ( m X Axis . m Axis Minimum, pos For Get Lowest Visible X . x )  ;  return result ; }"
3884,"public boolean is Equivalent ( @ Nullable  Track Selector Result other ) { if  ( other == null || other . selections . length != selections . length )  {     return false ;  } for  ( int i = 0 ;  i < selections . length ;  i++ )  {     if  ( !is Equivalent ( other, i )  )  {         return false ;      } } return true ; }"
3885,"public void block Until Tasks Complete (  )  throws  Interrupted Exception{ synchronized  ( this )  {     download Finished Condition = new  Count Down Latch ( 1 )  ;  } dummy Main Thread . run On Main Thread (  (  )  -> {     if  ( download Manager . is Idle (  )  )  {         download Finished Condition . count Down (  )  ;      } } )  ;  assert That ( download Finished Condition . await ( timeout,  Time Unit . MILLISECONDS )  )  . is True (  )  ; }"
3886,"public int delete By Id (  Class<?> clazz, long id ) {  String table =  Mapping . get Instance (  )  . get Table Name ( clazz )  ;   String pk =  Mapping . get Instance (  )  . get PK ( clazz )  ;   String where = pk + ""="" + id ;  if  (  Aorm . is Debug (  )  )  {     log ( ""delete By Id "" + table + "" where: "" + where )  ;  } int count = delete ( table, where, null )  ;  notify Session Listener ( clazz )  ;  return count ; }"
3887,"public void test Write Read Tree (  )  throws  Corrupt Object Exception, IO Exception{ final  Dir Cache dc = db . lock Dir Cache (  )  ;  final  String A =  String . format ( ""a%2000s"", ""a"" )  ;  final  String B =  String . format ( ""b%2000s"", ""b"" )  ;  final  String [  ]  paths = { A + ""-"", A + ""-"" + B, A + ""/"" + B, A + ""0"" + B } ;  final  Dir Cache Entry [  ]  ents = new  Dir Cache Entry [ paths . length ]  ;  for  ( int i = 0 ;  i < paths . length ;  i++ )  {     ents [ i ]  = new  Dir Cache Entry ( paths [ i ]  )  ;      ents [ i ]  . set File Mode (  File Mode . REGULAR_FILE )  ;  } final  Dir Cache Builder b = dc . builder (  )  ;  for  (  Dir Cache Entry ent : ents )  {     b . add ( ent )  ;  } b . commit (  )  ;   Dir Cache read = db . read Dir Cache (  )  ;  assert Equals ( paths . length, read . get Entry Count (  )  )  ;  assert Equals ( 1, read . get Cache Tree ( true )  . get Child Count (  )  )  ; }"
3888,protected void set Swipe Drawable Checked ( int swipe Drawable Checked ) { this . swipe Drawable Checked = swipe Drawable Checked ; }
3889,"private void copy Current State Containers ( @ Nullable  Map< String,  State Container> state Containers ) { if  ( state Containers == null || state Containers . is Empty (  )  )  {     return ;  } synchronized  ( this )  {     maybe Init State Containers (  )  ;      m State Containers . clear (  )  ;      m State Containers . put All ( state Containers )  ;  }}"
3890,"static int parse Squash Fixup Sequence Count (  String curr Squash Message ) { //$NON-NLS-1$  String regex = "" This is a combination of  (  . * )  commits"" ;   String first Line = curr Squash Message . substring ( 0, curr Squash Message . index Of ( '\n' )  )  ;   Pattern pattern =  Pattern . compile ( regex )  ;   Matcher matcher = pattern . matcher ( first Line )  ;  if  ( !matcher . find (  )  )      throw new  Illegal Argument Exception (  )  ;  return  Integer . parse Int ( matcher . group ( 1 )  )  ; }"
3891,public static  Table Data Row Background Provider< Object> similar Row Color ( final int color ) { return new  Simple Table Data Row Color Provider ( color )  ; }
3892,public void set Logging Enabled ( boolean enabled ) { logging Enabled = enabled ; }
3893,"public com . anychart . core . annotations .  Vertical Line allow Edit (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . allow Edit ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
3894,public  Persistent Store Coordinator get Coordinator (  ) { return store Coordinator ; }
3895,"public com . anychart . core . gauge . pointers .  Needle stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3896,"public static  Object invoke Original Method (  Member method,  Object this Object,  Object [  ]  args )  throws  Throwable{ if  ( args == null )  {     args = EMPTY_ARRAY ;  }  Class<?> [  ]  parameter Types ;   Class<?> return Type ;  if  ( runtime == RUNTIME_ART &&  ( method instanceof  Method || method instanceof  Constructor )  )  {     parameter Types = null ;      return Type = null ;  } else if  ( method instanceof  Method )  {     parameter Types =  (  (  Method )  method )  . get Parameter Types (  )  ;      return Type =  (  (  Method )  method )  . get Return Type (  )  ;  } else if  ( method instanceof  Constructor )  {     parameter Types =  (  (  Constructor<?> )  method )  . get Parameter Types (  )  ;      return Type = null ;  } else {     throw new  Illegal Argument Exception ( ""method must be of type  Method or  Constructor"" )  ;  } long method Id =  Ed Xp Config Global . get Hook Provider (  )  . get Method Id ( method )  ;  return invoke Original Method Native ( method, method Id, parameter Types, return Type, this Object, args )  ; }"
3897,"public static  Lottie Task< Lottie Composition> from Json Input Stream ( final  Input Stream stream, @ Nullable final  String cache Key ) { return cache ( cache Key, new  Callable< Lottie Result< Lottie Composition>> (  )  {     @ Override     public  Lottie Result< Lottie Composition> call (  )  {         return from Json Input Stream Sync ( stream, cache Key )  ;      } } )  ; }"
3898,"Cache Builder<K, V> lenient Parsing (  ) { strict Parsing = false ;  return this ; }"
3899,public  Device Property get Sensor Setting Property Id (  ) { return sensor Setting Property Id ; }
3900,"public  Reflog Writer create (  )  throws IO Exception{  File Utils . mkdir ( refdb . logs Dir )  ;   File Utils . mkdir ( refdb . logs Refs Dir )  ;   File Utils . mkdir ( new  File ( refdb . logs Refs Dir, R_HEADS . substring ( R_REFS . length (  )  )  )  )  ;  return this ; }"
3901,"public static  File get VS Config File (  ) { return new  File ( get System Secure Directory (  ) , ""vss . ini"" )  ; }"
3902,"public static  String get Replace First ( final  String input, final  String regex, final  String replacement ) { if  ( input == null )      return """" ;  return  Pattern . compile ( regex )  . matcher ( input )  . replace First ( replacement )  ; }"
3903,Activity get Activity (  ) { return activity ; }
3904,"public  Vector2 get Position (  Vector2 position ) { return position . set ( x, y )  ; }"
3905,public  Matrix3 set To Translation (  Vector2 translation ) { float [  ]  val = this . val ;  val [ M00 ]  = 1 ;  val [ M10 ]  = 0 ;  val [ M20 ]  = 0 ;  val [ M01 ]  = 0 ;  val [ M11 ]  = 1 ;  val [ M21 ]  = 0 ;  val [ M02 ]  = translation . x ;  val [ M12 ]  = translation . y ;  val [ M22 ]  = 1 ;  return this ; }
3906,"public com . anychart . standalones .  Resource Timeline row Even Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Even Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
3907,"private void remap R Class ( boolean is Primary,  Class<?> r Class ) { //  Collect all the local attribute id -> name mappings .   These are used when processing the stylables to look up // the reassigned values .   Map< Integer,  String> local Attribute Ids = new  Hash Map<> (  )  ;  for  (  Class<?> a Class : r Class . get Classes (  )  )  {     if  ( a Class . get Simple Name (  )  . equals ( ""attr"" )  )  {         for  (  Field field : a Class . get Fields (  )  )  {             try {                 local Attribute Ids . put ( field . get Int ( null ) , field . get Name (  )  )  ;              } catch  (  Illegal Access Exception e )  {                 throw new  Runtime Exception ( "" Could not read attr value for "" + field . get Name (  ) , e )  ;              }         }     } } for  (  Class<?> inner Class : r Class . get Classes (  )  )  {      String resource Type = inner Class . get Simple Name (  )  ;      if  ( !resource Type . starts With ( ""styleable"" )  )  {         for  (  Field field : inner Class . get Fields (  )  )  {             try {                 if  ( !is Primary &&  Modifier . is Final ( field . get Modifiers (  )  )  )  {                     throw new  Illegal Argument Exception ( r Class + "" contains final fields, these will be inlined by the compiler and cannot be remapped . "" )  ;                  }                  String resource Name = resource Type + ""/"" + field . get Name (  )  ;                   Integer value = res Ids . get ( resource Name )  ;                  if  ( value != null )  {                     field . set Accessible ( true )  ;                      field . set Int ( null, value )  ;                      resource Id Generator . record ( field . get Int ( null ) , resource Type, field . get Name (  )  )  ;                  } else if  ( res Ids . contains Value ( field . get Int ( null )  )  )  {                     int remapped Value = resource Id Generator . generate ( resource Type, field . get Name (  )  )  ;                      field . set Int ( null, remapped Value )  ;                      res Ids . put ( resource Name, remapped Value )  ;                  } else {                     if  ( is Primary )  {                         resource Id Generator . record ( field . get Int ( null ) , resource Type, field . get Name (  )  )  ;                          res Ids . put ( resource Name, field . get Int ( null )  )  ;                      } else {                         int remapped Value = resource Id Generator . generate ( resource Type, field . get Name (  )  )  ;                          field . set Int ( null, remapped Value )  ;                          res Ids . put ( resource Name, remapped Value )  ;                      }                 }             } catch  (  Illegal Access Exception e )  {                 throw new  Illegal State Exception ( e )  ;              }         }     } } //  Reassign the ids in the style arrays accordingly .  for  (  Class<?> inner Class : r Class . get Classes (  )  )  {      String resource Type = inner Class . get Simple Name (  )  ;      if  ( resource Type . starts With ( ""styleable"" )  )  {         for  (  Field field : inner Class . get Fields (  )  )  {             if  ( field . get Type (  )  . equals ( int [  ]  . class )  )  {                 try {                     int [  ]  styleable Array =  ( int [  ]  )   ( field . get ( null )  )  ;                      for  ( int k = 0 ;  k < styleable Array . length ;  k++ )  {                          Integer value = res Ids . get ( ""attr/"" + local Attribute Ids . get ( styleable Array [ k ]  )  )  ;                          if  ( value != null )  {                             styleable Array [ k ]  = value ;                          }                     }                 } catch  (  Illegal Access Exception e )  {                     throw new  Illegal State Exception ( e )  ;                  }             }         }     } }}"
3908,"public static void destroy ( @ Non Null  Activity activity, @ Non Null  Dialog dialog ) { get Retriever (  )  . destroy ( activity, dialog )  ; }"
3909,"private static void update Application Element (  Element element,  Map< String,  String> replace Attrs,  List< String> remove Attrs ) { for  (  Map .  Entry< String,  String> entry : replace Attrs . entry Set (  )  )  {      String key = entry . get Key (  )  ;      key =  String Utils . substring After ( key, "":"" )  ;       Attribute attribute = element . attribute ( key )  ;      if  ( null != attribute )  {         element . remove ( attribute )  ;      } } for  (  String key : remove Attrs )  {     key =  String Utils . substring After ( key, "":"" )  ;       Attribute attribute = element . attribute ( key )  ;      if  ( null != attribute )  {         element . remove ( attribute )  ;      } }}"
3910,float get Linear Current Keyframe Progress (  ) { if  ( is Discrete )  {     return 0f ;  }  Keyframe<K> keyframe = get Current Keyframe (  )  ;  if  ( keyframe . is Static (  )  )  {     return 0f ;  } float progress Into Frame = progress - keyframe . get Start Progress (  )  ;  float keyframe Progress = keyframe . get End Progress (  )  - keyframe . get Start Progress (  )  ;  return progress Into Frame / keyframe Progress ; }
3911,public static  Base Encoding base32 (  ) { return BASE32 ; }
3912,"static void write Build Configurations For Target (  Target Node<?> target Node,  Build Target build Target,  Cxx Platform cxx Platform,  Source Path Resolver Adapter path Resolver,  Immutable X Code Native Target Attributes .  Builder native Target Attributes,  Immutable Map< String,  String> override Build Settings,  Immutable Map< String,  String> buck Xcode Build Settings,  Immutable Map< String,  String> append Build Settings,  Project Filesystem project Filesystem, boolean write Read Only File,  Immutable Set .  Builder< String> target Config Names Builder,  Immutable Set .  Builder< Path> xcconfig Paths Builder )  throws IO Exception{  Immutable Map< String,  Immutable Map< String,  String>> target Configs = get Build Configurations For Target Node ( target Node )  ;   Immutable Map< String,  String> cxx Platform Build Settings =  Build Configuration . get Target Cxx Build Configuration For Target Node ( target Node, append Build Settings, cxx Platform, path Resolver )  ;  //  Generate build configurations for each config, using the build settings provided .  for  (  Map .  Entry< String,  Immutable Map< String,  String>> config : target Configs . entry Set (  )  )  {     target Config Names Builder . add ( config . get Key (  )  )  ;       Immutable Sorted Map< String,  String> merged Settings = merge Build Settings ( config . get Value (  ) , cxx Platform Build Settings, override Build Settings, buck Xcode Build Settings, append Build Settings )  ;       Project Filesystem build Target File System = target Node . get Filesystem (  )  ;      //  Get the  Xcconfig path relative to the target's file system ;  this makes sure that each     // buck-out gen path is appropriate depending on the cell .       Path build Target Xcconfig Path = get Xcconfig Path ( build Target File System, build Target, config . get Key (  )  )  ;      //  Now we relativize the path based around the project file system in order for relative paths     // in  Xcode to resolve properly  ( since they are relative to the project )  .       Rel Path xcconfig Path = project Filesystem . relativize ( build Target File System . resolve ( build Target Xcconfig Path )  )  ;      write Build Configuration ( project Filesystem, xcconfig Path . get Path (  ) , merged Settings, write Read Only File )  ;      native Target Attributes . add Xcconfigs ( new  Xcconfig Base Configuration ( config . get Key (  ) , xcconfig Path . get Path (  )  )  )  ;      xcconfig Paths Builder . add ( project Filesystem . get Path For Relative Path ( xcconfig Path . get Path (  )  )  . to Absolute Path (  )  )  ;  }}"
3913,"public com . anychart . charts .  Polar margin (  String [  ]  margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "", array To String Wrap Quotes ( margin )  )  )  ;  return this ; }"
3914,"public void get Transformation Matrix (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Transformation Matrix (  )  ; "" )  ; }"
3915,public int get Publish Ttl (  ) { return publish Ttl ; }
3916,"private static void maybe Install Providers (  Context context ) { //  Make sure this only runs once .  synchronized  ( provider Installed )  {     if  ( provider Install Started )  {         return ;      }     provider Install Started = true ;  } //  Package install If Needed Async into a  Runnable so it can be run on the main thread .  // install If Needed Async checks to make sure it is on the main thread, and throws otherwise .   Runnable runnable =  (  )  ->  Provider Installer . install If Needed Async ( context, new  Provider Install Listener (  )  {     @ Override     public void on Provider Installed (  )  {         provider Installed . set Result ( null )  ;      }     @ Override     public void on Provider Install Failed ( int i, android . content .  Intent intent )  {          Log . d ( "" Firebase Functions"", "" Failed to update ssl context"" )  ;          provider Installed . set Result ( null )  ;      } } )  ;   Handler handler = new  Handler ( context . get Main Looper (  )  )  ;  handler . post ( runnable )  ; }"
3917,"public com . anychart . core . annotations .  Fibonacci Base top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
3918,"public void subscribe (  Build Rule Execution Event .  Finished event ) {  String target Id = event . get Target (  )  . get Fully Qualified Name (  )  ;  long elapsed Time Millis =  Time Unit . NANOSECONDS . to Millis ( event . get Elapsed Time Nano (  )  )  ;   Rule Execution Time Data rule Execution Time Data =  Immutable Rule Execution Time Data . of ( target Id, elapsed Time Millis )  ;  convert To Json ( rule Execution Time Data )  . if Present ( this::schedule Write )  ; }"
3919,"public  Realm Query<E> greater Than Or Equal To (  String field Name, long value ) { realm . check If Valid (  )  ;   Field Descriptor fd = schema . get Field Descriptors ( field Name,  Realm Field Type . INTEGER )  ;  this . query . greater Than Or Equal ( fd . get Column Keys (  ) , fd . get Native Table Pointers (  ) , value )  ;  return this ; }"
3920,public ID3v24 Field Key get Id3 Key From Generic Key (  Field Key generic Key ) { return tag Field To Id3 . get ( generic Key )  ; }
3921,"public int read Ogg Vorbis Raw Size (  Random Access File raf )  throws  Cannot Read Exception, IO Exception{ byte [  ]  raw Vorbis Comment Data = read Raw Packet Data ( raf )  ;  return raw Vorbis Comment Data . length +  Vorbis Header . FIELD_PACKET_TYPE_LENGTH +  Vorbis Header . FIELD_CAPTURE_PATTERN_LENGTH ; }"
3922,public void set Class Loader (  Class Loader loader ) { if  ( loader != null )  {     this . loader = loader ;  } else {     loader =  Class Loader . get System Class Loader (  )  ;  }}
3923,"public static  Simple Subject Builder<S, T> assert About (  Subject .  Factory<S, T> factory ) { return assert_ (  )  . about ( factory )  ; }"
3924,"public com . anychart . charts .  Circular Gauge fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
3925,public void set Fill Viewport X ( boolean fill Viewport X ) { if  ( fill Viewport X != m Fill Viewport X )  {     m Fill Viewport X = fill Viewport X ;      request Layout (  )  ;  }}
3926,"public void allocate Space ( int flex Avail ) {  List< View Measure> flex Vms = new  Array List<> (  )  ;  for  (  View Measure vm : vms )  {     if  ( vm . is Flex (  )  )  {         flex Vms . add ( vm )  ;      } } //  Sort the  View Measures biggest to smallest  ( hence the reverse comparator )  .   Collections . sort ( flex Vms, new  Comparator< View Measure> (  )  {     @ Override     public int compare (  View Measure o1,  View Measure o2 )  {         if  ( o1 . get Desired Height (  )  > o2 . get Desired Height (  )  )  {             return -1 ;          } else if  ( o1 . get Desired Height (  )  < o2 . get Desired Height (  )  )  {             return 1 ;          }         return 0 ;      } } )  ;  //  First pass, add up requested space by flexible items int flex Sum = 0 ;  for  (  View Measure vm : flex Vms )  {     flex Sum += vm . get Desired Height (  )  ;  } // 2items --> 80/20 max // 3items --> 60/20/20 max // 4items --> 40/20/20/20 max // 5items --> 20/20/20/20/20 max // 6items --> this layout will break! int flex Count = flex Vms . size (  )  ;  if  ( flex Count >= 6 )  {     throw new  Illegal State Exception ( "" Vertical View Group Measure only supports up to 5 children"" )  ;  } float min Frac = 0 . 20f ;  float max Frac = 1 . 0f -  (  ( flex Count - 1 )  * min Frac )  ;   Logging . logd Pair ( ""VVGM  ( min Frac, max Frac ) "", min Frac, max Frac )  ;  //  Second pass, allocate proportionally float extra Frac Pool = 0f ;  for  (  View Measure vm : flex Vms )  {     float desired Frac =  ( float )  vm . get Desired Height (  )  / flex Sum ;      float granted Frac = desired Frac ;      // extra pixels to a pool we can use to expand the smaller views .      if  ( desired Frac > max Frac )  {         extra Frac Pool +=  ( granted Frac - max Frac )  ;          granted Frac = max Frac ;      }     // up to the amount that brings the view into line with the minimum .      if  ( desired Frac < min Frac )  {         float remainder = min Frac - desired Frac ;          float add On =  Math . min ( remainder, extra Frac Pool )  ;          granted Frac = desired Frac + add On ;          extra Frac Pool -= add On ;      }      Logging . logd Pair ( ""\t ( desired, granted ) "", desired Frac, granted Frac )  ;      int max Height =  ( int )   ( granted Frac * flex Avail )  ;      vm . set Max Dimens ( w, max Height )  ;  }}"
3927,public  Lynx Config get Lynx Config (  ) { return lynx Config ; }
3928,"public com . anychart . core . stock . indicators . KDJ j Series (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . j Series ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
3929,"public com . anychart . core . annotations .  Horizontal Line min Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", width )  )  ;  return this ; }"
3930,protected void do Detach (  ) { m Drawee Holder . on Detach (  )  ; }
3931,"public int get Device Key ( final boolean use New API )  throws  Illegal State Exception{ if  ( use New API )      check Connection (  )  ;  return USB Monitor . get Device Key ( m Weak Device . get (  ) , m Info . serial, use New API )  ; }"
3932,public boolean remove Provisioner ( @ Non Null final  Provisioner provisioner ) { if  ( provisioners . remove ( provisioner )  )  {     notify Provisioner Deleted ( provisioner )  ;      if  ( provisioner . get Provisioner Address (  )  != null )  {         final  Provisioned Mesh Node node = get Node ( provisioner . get Provisioner Address (  )  )  ;          if  ( node != null )  {             delete Node ( node )  ;              notify Node Deleted ( node )  ;          }     }     return true ;  } return false ; }
3933,private float get Property Value (  ) { return m Property . get Value ( m Target )  ; }
3934,"public int add Tree (  Abstract Tree Iterator p ) { int n = trees . length ;   Abstract Tree Iterator [  ]  new Trees = new  Abstract Tree Iterator [ n + 1 ]  ;   System . arraycopy ( trees, 0, new Trees, 0, n )  ;  new Trees [ n ]  = p ;  p . matches = null ;  p . match Shift = 0 ;  trees = new Trees ;  return n ; }"
3935,"protected  Value Animator anim Spinner ( int end Spinner, int start Delay,  Interpolator interpolator, int duration ) { if  ( m Spinner != end Spinner )  {     if  ( rebound Animator != null )  {         //cancel会触发 End调用，可以判断0来确定是否被cancel         rebound Animator . set Duration ( 0 )  ;          //会触发 cancel 和 end 调用         rebound Animator . cancel (  )  ;          rebound Animator = null ;      }     animation Runnable = null ;      rebound Animator =  Value Animator . of Int ( m Spinner, end Spinner )  ;      rebound Animator . set Duration ( duration )  ;      rebound Animator . set Interpolator ( interpolator )  ;      rebound Animator . add Listener ( new  Animator Listener Adapter (  )  {         @ Override         public void on Animation End (  Animator animation )  {             if  ( animation != null && animation . get Duration (  )  == 0 )  {                 /*                      * 2020-3-15 修复                      * on Animation End 因为 cancel 调用是, 同样触发 on Animation End 导致的各种问题                      * 在取消之前调用 rebound Animator . set Duration ( 0 )  来标记动画被取消                      */                 return ;              }             rebound Animator = null ;              if  ( m Spinner == 0 && m State !=  Refresh State .  None && !m State . is Opening && !m State . is Dragging )  {                 notify State Changed (  Refresh State .  None )  ;              } else if  ( m State != m Vice State )  {                 // 可以帮助在   Vice State 状态模式时，放手执行动画后矫正 m Vice State=m State                 // 用例：                 // 如 m State= Refreshing 时，用户再向下拖动，set Vice State =  Release To Refresh                 // 放手之后，执行动画回弹到  Header Height 处，                 // 动画结束时 m Vice State 会被矫正到  Refreshing，此时与没有向下拖动时一样                 set Vice State ( m State )  ;              }         }     } )  ;      rebound Animator . add Update Listener ( new  Animator Update Listener (  )  {         @ Override         public void on Animation Update (  Value Animator animation )  {             m Kernel . move Spinner (  ( int )  animation . get Animated Value (  ) , false )  ;          }     } )  ;      rebound Animator . set Start Delay ( start Delay )  ;      //            rebound Animator . set Duration ( 20000 )  ;      rebound Animator . start (  )  ;      return rebound Animator ;  } return null ; }"
3936,"public static float from Barycoord (  Vector2 barycentric, float a, float b, float c ) { float u = 1 - barycentric . x - barycentric . y ;  return u * a + barycentric . x * b + barycentric . y * c ; }"
3937,public boolean is Open Ended (  ) { return length == C . LENGTH_UNSET ; }
3938,"public void test Many Points (  ) {  System . gc (  )  ;  for  ( double i = 0 ;  i < 200 ;  i++ )  {     for  ( double j = 0 ;  j < 2000 ;  j++ )  {         m Tree . add ( new  Item ( i / 200 . 0, j / 2000 . 0 )  )  ;      } } // searching bounds that are exact subtrees of the main quad Tree  Assert . assert Equals ( 400000, search All (  )  . size (  )  )  ;   Assert . assert Equals ( 100000, m Tree . search ( new  Bounds ( 0,  . 5, 0,  . 5 )  )  . size (  )  )  ;   Assert . assert Equals ( 100000, m Tree . search ( new  Bounds (  . 5, 1, 0,  . 5 )  )  . size (  )  )  ;   Assert . assert Equals ( 25000, m Tree . search ( new  Bounds ( 0,  . 25, 0,  . 25 )  )  . size (  )  )  ;   Assert . assert Equals ( 25000, m Tree . search ( new  Bounds (  . 75, 1,  . 75, 1 )  )  . size (  )  )  ;  // searching bounds that do not line up with main quad Tree  Assert . assert Equals ( 399800, m Tree . search ( new  Bounds ( 0, 0 . 999, 0, 0 . 999 )  )  . size (  )  )  ;   Assert . assert Equals ( 4221, m Tree . search ( new  Bounds ( 0 . 8, 0 . 9, 0 . 8, 0 . 9 )  )  . size (  )  )  ;   Assert . assert Equals ( 4200, m Tree . search ( new  Bounds ( 0, 1, 0, 0 . 01 )  )  . size (  )  )  ;   Assert . assert Equals ( 16441, m Tree . search ( new  Bounds ( 0 . 4, 0 . 6, 0 . 4, 0 . 6 )  )  . size (  )  )  ;  // searching bounds that are small / have very exact end points  Assert . assert Equals ( 1, m Tree . search ( new  Bounds ( 0,  . 001, 0,  . 0001 )  )  . size (  )  )  ;   Assert . assert Equals ( 26617, m Tree . search ( new  Bounds ( 0 . 356, 0 . 574, 0 . 678, 0 . 987 )  )  . size (  )  )  ;   Assert . assert Equals ( 44689, m Tree . search ( new  Bounds ( 0 . 123, 0 . 456, 0 . 456, 0 . 789 )  )  . size (  )  )  ;   Assert . assert Equals ( 4906, m Tree . search ( new  Bounds ( 0 . 111, 0 . 222, 0 . 333, 0 . 444 )  )  . size (  )  )  ;  m Tree . clear (  )  ;   Assert . assert Equals ( 0, search All (  )  . size (  )  )  ;   System . gc (  )  ; }"
3939,protected boolean is Filter Stopped ( F filter ) { return false ; }
3940,"public void binary With Custom Cxx Ld Tool (  )  throws IO Exception,  Interrupted Exception{  Project Workspace workspace =  Test Data Helper . create Project Workspace For Scenario ( this, ""binary_with_custom_ld_tool"", tmp )  ;  workspace . set Up (  )  ;  workspace . run Buck Build ( ""//:bin"" )  . assert Success (  )  ; }"
3941,"public void on Selected Changed (  Swipe Open View Holder view Holder, int action State ) { if  ( view Holder != null )  {     get Default UI Util (  )  . on Selected ( view Holder . get Swipe View (  )  )  ;  }}"
3942,"public com . anychart . core . ui .  Circular Labels Factory padding (  String padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "", wrap Quotes ( padding )  )  )  ;  return this ; }"
3943,"public  Postcard with Float Array ( @ Nullable  String key, @ Nullable float [  ]  value ) { m Bundle . put Float Array ( key, value )  ;  return this ; }"
3944,"public static U Crop of ( @ Non Null  Uri source, @ Non Null  Uri destination ) { return new U Crop ( source, destination )  ; }"
3945,"public static  Bitmap create Reflection Image With Origin (  Bitmap bitmap ) { final int reflection Gap = 4 ;  int w = bitmap . get Width (  )  ;  int h = bitmap . get Height (  )  ;   Matrix matrix = new  Matrix (  )  ;  matrix . pre Scale ( 1, -1 )  ;   Bitmap reflection Image ;  reflection Image =  Bitmap . create Bitmap ( bitmap, 0, h / 2, w, h / 2, matrix, false )  ;   Bitmap bitmap With Reflection =  Bitmap . create Bitmap ( w,  ( h + h / 2 ) ,  Bitmap .  Config . ARGB_8888 )  ;   Canvas canvas = new  Canvas ( bitmap With Reflection )  ;  canvas . draw Bitmap ( bitmap, 0, 0, null )  ;  canvas . draw Bitmap ( reflection Image, 0, h + reflection Gap, null )  ;   Paint paint = new  Paint (  )  ;   Linear Gradient shader = new  Linear Gradient ( 0, bitmap . get Height (  ) , 0, bitmap With Reflection . get Height (  )  + reflection Gap, 0x70ffffff, 0x00ffffff,  Shader .  Tile Mode . CLAMP )  ;  paint . set Shader ( shader )  ;  //  Set the  Transfer mode to be porter duff and destination in paint . set Xfermode ( new  Porter Duff Xfermode (  Porter Duff .  Mode . DST_IN )  )  ;  //  Draw a rectangle using the paint with our linear gradient canvas . draw Rect ( 0, h, w, bitmap With Reflection . get Height (  )  + reflection Gap, paint )  ;  return bitmap With Reflection ; }"
3946,public  Array List< Geometry> get Geometry Object (  ) {  List< Geometry> geometries List = super . get Geometry Object (  )  ;  return new  Array List<> ( geometries List )  ; }
3947,"private static void parse Saio (  Parsable Byte Array saio,  Track Fragment out )  throws  Parser Exception{ saio . set Position (  Atom . HEADER_SIZE )  ;  int full Atom = saio . read Int (  )  ;  int flags =  Atom . parse Full Atom Flags ( full Atom )  ;  if  (  ( flags & 0x01 )  == 1 )  {     saio . skip Bytes ( 8 )  ;  } int entry Count = saio . read Unsigned Int To Int (  )  ;  if  ( entry Count != 1 )  {     //  We only support one trun element currently, so always expect one entry .      throw new  Parser Exception ( "" Unexpected saio entry count: "" + entry Count )  ;  } int version =  Atom . parse Full Atom Version ( full Atom )  ;  out . auxiliary Data Position += version == 0 ? saio . read Unsigned Int (  )  : saio . read Unsigned Long To Long (  )  ; }"
3948,"private static void add Child Set Parent (  Object3 D parent,  Object3 D object ) { try {     parent . add Child ( object )  ;      m Parent . set ( object, parent )  ;  } catch  (  Exception e )  {      Raj Log . e ( "" Reflection error  Object3 D . m Parent"" )  ;  }}"
3949,"public com . anychart . charts .  Gantt splitter Position (  String position ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . splitter Position ( %s )  ; "", wrap Quotes ( position )  )  )  ;  return this ; }"
3950,public static  Matisse from (  Activity activity ) { return new  Matisse ( activity )  ; }
3951,"public com . anychart . charts .  Tag Cloud context Menu (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . context Menu ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3952,public  Const Pool Writer get Const Pool (  ) { return const Pool ; }
3953,"public static  String escape (  String value ) {  String search = ""&<>"" ;   String [  ]  replace = { ""&amp ; "", ""&lt ; "", ""&gt ; "" } ;   String Buffer buf = new  String Buffer (  )  ;  for  ( int i = 0 ;  i < value . length (  )  ;  i++ )  {     char c = value . char At ( i )  ;      int pos = search . index Of ( c )  ;      if  ( pos < 0 )          buf . append ( c )  ;      else         buf . append ( replace [ pos ]  )  ;  } return buf . to String (  )  ; }"
3954,"public com . anychart . core . stock . scrollerseries .  Spline stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3955,"public void second X Anchor (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . second X Anchor (  )  ; "" )  ; }"
3956,"public void reconnect Session If Possible ( final  Context context, final boolean show Dialog, final int timeout In Seconds ) { if  ( is Connected (  )  )  {     return ;  }  String route Id =  Utils . get String From Preference ( m Context, PREFS_KEY_ROUTE_ID )  ;  if  ( can Consider Session Recovery (  )  )  {      List< Route Info> routes = m Media Router . get Routes (  )  ;       Route Info the Route = null ;      if  ( null != routes && !routes . is Empty (  )  )  {         for  (  Route Info route : routes )  {             if  ( route . get Id (  )  . equals ( route Id )  )  {                 the Route = route ;                  break ;              }         }     }     if  ( null != the Route )  {         // route has already been discovered, so lets just get the         // device, etc         reconnect Session If Possible Internal ( the Route )  ;      } else {         // we set a flag so if the route is discovered within a short         // period, we let on Route Added callback of         //  Cast Media Router Callback take         // care of that         m Reconnection Status =  Reconnection Status . STARTED ;      }     // we may need to reconnect to an existing session     m Reconnection Task = new  Async Task< Void,  Integer,  Integer> (  )  {         private  Progress Dialog dlg ;          private final int SUCCESS = 1 ;          private final int FAILED = 2 ;          @ Override         protected void on Cancelled (  )  {             if  ( null != dlg )  {                 dlg . dismiss (  )  ;              }             super . on Cancelled (  )  ;          }         @ Override         protected void on Pre Execute (  )  {             if  ( !show Dialog )  {                 return ;              }             dlg = new  Progress Dialog ( context )  ;              dlg . set Message ( context . get String ( R . string . session_reconnection_attempt )  )  ;              dlg . set Indeterminate ( true )  ;              dlg . set Cancelable ( true )  ;              dlg . set On Cancel Listener ( new  Dialog Interface .  On Cancel Listener (  )  {                 @ Override                 public void on Cancel (  Dialog Interface dialog )  {                     switch ( m Reconnection Status )  {                         case STARTED:                         case IN_PROGRESS:                         case FINALIZE:                             m Reconnection Status =  Reconnection Status . INACTIVE ;                              on Device Selected ( null )  ;                              break ;                          default:                             break ;                      }                     m Reconnection Status =  Reconnection Status . INACTIVE ;                      if  ( null != dlg )  {                         dlg . dismiss (  )  ;                      }                     m Reconnection Task . cancel ( true )  ;                  }             } )  ;              dlg . set Button (  Progress Dialog . BUTTON_NEGATIVE, "" Cancel"", new  Dialog Interface .  On Click Listener (  )  {                 @ Override                 public void on Click (  Dialog Interface dialog, int which )  {                     switch ( m Reconnection Status )  {                         case STARTED:                         case IN_PROGRESS:                         case FINALIZE:                             m Reconnection Status =  Reconnection Status . INACTIVE ;                              on Device Selected ( null )  ;                              break ;                          default:                             break ;                      }                     m Reconnection Status =  Reconnection Status . INACTIVE ;                      if  ( null != dlg )  {                         dlg . cancel (  )  ;                      }                     m Reconnection Task . cancel ( true )  ;                  }             } )  ;              dlg . show (  )  ;          }         @ Override         protected  Integer do In Background (  Void .  .  .  params )  {             for  ( int i = 0 ;  i < timeout In Seconds ;  i++ )  {                 if  ( m Reconnection Task . is Cancelled (  )  )  {                     if  ( null != dlg )  {                         dlg . dismiss (  )  ;                      }                     return SUCCESS ;                  }                 try {                     if  ( is Connected (  )  )  {                         cancel ( true )  ;                      }                      Thread . sleep ( 1000 )  ;                  } catch  (  Exception e )  {                 // ignore                 }             }             return FAILED ;          }         @ Override         protected void on Post Execute (  Integer result )  {             if  ( show Dialog && null != dlg )  {                 dlg . dismiss (  )  ;              }             if  ( null != result )  {                 if  ( result == FAILED )  {                     m Reconnection Status =  Reconnection Status . INACTIVE ;                      on Device Selected ( null )  ;                  }             }         }     } ;      m Reconnection Task . execute (  )  ;  }}"
3957,"public com . anychart . charts .  Polar remove Series (  String id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove Series ( %s )  ; "", wrap Quotes ( id )  )  )  ;  return this ; }"
3958,"public static  String get Fully Qualified Enclosed Class Name (  Class Name class Name ) { return class Name . package Name (  )  . replace ( ' . ', '_' )  + get Enclosed Name ( class Name )  ; }"
3959,"public com . anychart . charts .  Waterfall crosshair (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . crosshair ( %s )  ; "", settings )  )  ;  return this ; }"
3960,public void set Ham Width ( float ham Width ) { if  ( this . ham Width == ham Width )      return ;  this . ham Width = ham Width ;  to Layout (  )  ; }
3961,"public  Single< Cursor> as Rx Single (  ) { return  Rx Java Utils . create Single ( stor IOSQ Lite, this )  ; }"
3962,"private void conflict (  String path,  Dir Cache Entry e,  Abstract Tree Iterator h,  Abstract Tree Iterator m ) { conflicts . add ( path )  ;   Dir Cache Entry entry ;  if  ( e != null )  {     entry = new  Dir Cache Entry ( e . get Path String (  ) ,  Dir Cache Entry . STAGE_1 )  ;      entry . copy Meta Data ( e, true )  ;      builder . add ( entry )  ;  } if  ( h != null && ! File Mode . TREE . equals ( h . get Entry File Mode (  )  )  )  {     entry = new  Dir Cache Entry ( h . get Entry Path String (  ) ,  Dir Cache Entry . STAGE_2 )  ;      entry . set File Mode ( h . get Entry File Mode (  )  )  ;      entry . set Object Id ( h . get Entry Object Id (  )  )  ;      builder . add ( entry )  ;  } if  ( m != null && ! File Mode . TREE . equals ( m . get Entry File Mode (  )  )  )  {     entry = new  Dir Cache Entry ( m . get Entry Path String (  ) ,  Dir Cache Entry . STAGE_3 )  ;      entry . set File Mode ( m . get Entry File Mode (  )  )  ;      entry . set Object Id ( m . get Entry Object Id (  )  )  ;      builder . add ( entry )  ;  }}"
3963,public  Tile [  ]  get Tiles (  ) { return m Tiles ; }
3964,"public boolean is In Range ( double value, double min, double max ) { return  ( value >= min && value <= max )  ; }"
3965,"public com . anychart . charts .  Pareto x Scroller (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scroller ( %s )  ; "", settings )  )  ;  return this ; }"
3966,public  Package Context get Package Context (  ) { return package Context ; }
3967,"public void set Email To User (  String description ) { set Object Value (  Data Types . OBJ_EMAIL, description )  ; }"
3968,String get Unique Field Name (  String name ) { return component Shard . get Unique Field Name ( name )  ; }
3969,"public int get File Size (  ) { if  ( file Size < 0 )  {     throw new  Runtime Exception ( ""file size not yet known"" )  ;  } return file Size ; }"
3970,"public static void invisible View By Alpha ( final  View view, long duration Millis, final  Animation Listener animation Listener ) { invisible View By Alpha ( view, duration Millis, false, animation Listener )  ; }"
3971,boolean is Next To Left Bound (  ) { return transformer . is Next To Left Bound (  )  ; }
3972,private boolean is Typed Time Legal So Far (  ) {  Node node = m Legal Times Tree ;  for  ( int key Code : m Typed Times )  {     node = node . can Reach ( key Code )  ;      if  ( node == null )  {         return false ;      } } return true ; }
3973,"public void time Collections Reflection Streaming ( int reps )  throws  Exception{ for  ( int i = 0 ;  i < reps ;  ++i )  {      String Reader reader = new  String Reader ( json )  ;       Json Reader jr = new  Json Reader ( reader )  ;      jr . begin Array (  )  ;       List< Bag Of Primitives> bags = new  Array List< Bag Of Primitives> (  )  ;      while  ( jr . has Next (  )  )  {         jr . begin Object (  )  ;           Bag Of Primitives bag = new  Bag Of Primitives (  )  ;          while  ( jr . has Next (  )  )  {              String name = jr . next Name (  )  ;              for  (  Field field :  Bag Of Primitives . class . get Declared Fields (  )  )  {                 if  ( field . get Name (  )  . equals ( name )  )  {                      Class<?> field Type = field . get Type (  )  ;                      if  ( field Type . equals ( long . class )  )  {                         field . set Long ( bag, jr . next Long (  )  )  ;                      } else if  ( field Type . equals ( int . class )  )  {                         field . set Int ( bag, jr . next Int (  )  )  ;                      } else if  ( field Type . equals ( boolean . class )  )  {                         field . set Boolean ( bag, jr . next Boolean (  )  )  ;                      } else if  ( field Type . equals (  String . class )  )  {                         field . set ( bag, jr . next String (  )  )  ;                      } else {                         throw new  Runtime Exception ( "" Unexpected: type: "" + field Type + "", name: "" + name )  ;                      }                 }             }         }         jr . end Object (  )  ;          bags . add ( bag )  ;      }     jr . end Array (  )  ;  }}"
3974,"public void set Spread ( float spread ) { if  ( spread <= 0 )      throw new  Illegal Argument Exception ( ""spread must be positive"" )  ;  this . spread = spread ; }"
3975,public void on Resume (  ) { if  ( surface View instanceof  Spherical Surface View )  {      (  (  Spherical Surface View )  surface View )  . on Resume (  )  ;  }}
3976,public void set Poster Title (  String poster Title ) { this . poster Title = poster Title ; }
3977,public boolean has Be Shown For This Version ( int app Version Code ) { if  ( on All After != null )  {     if  ( app Version Code > on All After )  {         return true ;      } } if  ( on All Before != null )  {     if  ( app Version Code < on All Before )  {         return true ;      } } if  ( on Specific != null )  {     if  ( on Specific . contains ( app Version Code )  )  {         return true ;      } } return false ; }
3978,public float get Knob Y (  ) { return knob Position . y ; }
3979,public long get Average Bytes Per Sec (  ) { return this . average Bytes Per Sec ; }
3980,"private void build Tracks From Sample Streams (  ) { //  Iterate through the extractor tracks to discover the ""primary"" track type, and the index // of the single track of this type .  int primary Extractor Track Type = C . TRACK_TYPE_NONE ;  int primary Extractor Track Index = C . INDEX_UNSET ;  int extractor Track Count = sample Queues . length ;  for  ( int i = 0 ;  i < extractor Track Count ;  i++ )  {      String sample Mime Type = sample Queues [ i ]  . get Upstream Format (  )  . sample Mime Type ;      int track Type ;      if  (  Mime Types . is Video ( sample Mime Type )  )  {         track Type = C . TRACK_TYPE_VIDEO ;      } else if  (  Mime Types . is Audio ( sample Mime Type )  )  {         track Type = C . TRACK_TYPE_AUDIO ;      } else if  (  Mime Types . is Text ( sample Mime Type )  )  {         track Type = C . TRACK_TYPE_TEXT ;      } else {         track Type = C . TRACK_TYPE_NONE ;      }     if  ( get Track Type Score ( track Type )  > get Track Type Score ( primary Extractor Track Type )  )  {         primary Extractor Track Type = track Type ;          primary Extractor Track Index = i ;      } else if  ( track Type == primary Extractor Track Type && primary Extractor Track Index != C . INDEX_UNSET )  {         //  We have multiple tracks of the primary type .   We only want an index if there only exists a         // single track of the primary type, so unset the index again .          primary Extractor Track Index = C . INDEX_UNSET ;      } }  Track Group chunk Source Track Group = chunk Source . get Track Group (  )  ;  int chunk Source Track Count = chunk Source Track Group . length ;  //  Instantiate the necessary internal data-structures .  primary Track Group Index = C . INDEX_UNSET ;  track Group To Sample Queue Index = new int [ extractor Track Count ]  ;  for  ( int i = 0 ;  i < extractor Track Count ;  i++ )  {     track Group To Sample Queue Index [ i ]  = i ;  } //  Construct the set of exposed track groups .   Track Group [  ]  track Groups = new  Track Group [ extractor Track Count ]  ;  for  ( int i = 0 ;  i < extractor Track Count ;  i++ )  {      Format sample Format = sample Queues [ i ]  . get Upstream Format (  )  ;      if  ( i == primary Extractor Track Index )  {          Format [  ]  formats = new  Format [ chunk Source Track Count ]  ;          if  ( chunk Source Track Count == 1 )  {             formats [ 0 ]  = sample Format . copy With Manifest Format Info ( chunk Source Track Group . get Format ( 0 )  )  ;          } else {             for  ( int j = 0 ;  j < chunk Source Track Count ;  j++ )  {                 formats [ j ]  = derive Format ( chunk Source Track Group . get Format ( j ) , sample Format, true )  ;              }         }         track Groups [ i ]  = new  Track Group ( formats )  ;          primary Track Group Index = i ;      } else {          Format track Format = primary Extractor Track Type == C . TRACK_TYPE_VIDEO &&  Mime Types . is Audio ( sample Format . sample Mime Type )  ? muxed Audio Format : null ;          track Groups [ i ]  = new  Track Group ( derive Format ( track Format, sample Format, false )  )  ;      } } this . track Groups = new  Track Group Array ( track Groups )  ;   Assertions . check State ( optional Track Groups == null )  ;  optional Track Groups =  Track Group Array . EMPTY ; }"
3981,"public com . anychart . core . gauge . pointers .  Needle stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3982,public  String get Image Uri (  ) { return image Uri ; }
3983,public int used Bytes (  ) { if  ( element Count == 0 )  {     return HEADER_LENGTH ;  } if  ( last . position >= first . position )  {     //  Contiguous queue .      return // all but last entry      ( last . position - first . position )  +  Element . HEADER_LENGTH + // last entry     last . length + HEADER_LENGTH ;  } else {     // tail < head .   The queue wraps .      return // buffer front + header     last . position +  Element . HEADER_LENGTH + // last entry     last . length + file Length - // buffer end     first . position ;  }}
3984,"public  Debug Frame get Frame (  Context cx,  Debuggable Script fn Or Script ) { if  ( type != IPROXY_DEBUG )       Kit . code Bug (  )  ;   Function Source item = dim . get Function Source ( fn Or Script )  ;  if  ( item == null )  {     //  Can not debug if source is not available     return null ;  } return new  Stack Frame ( cx, dim, item )  ; }"
3985,public void setup (  ) { repository . save All ( persons )  ; }
3986,public void plugin Initialize (  ) { this . init Telephony Receiver (  )  ; }
3987,"public  Banner set Adapter ( BA adapter, boolean is Infinite Loop ) { m Is Infinite Loop = is Infinite Loop ;  set Infinite Loop (  )  ;  set Adapter ( adapter )  ;  return this ; }"
3988,public static int saturated Cast ( long value ) { if  ( value <= 0 )  {     return 0 ;  } else if  ( value >=  ( 1 L << 32 )  )  {     return -1 ;  } else {     return  ( int )  value ;  }}
3989,"public com . anychart . charts .  Sunburst padding (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
3990,"public com . anychart . core . utils .  Padding set (  String value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
3991,"public static int get Codeword ( int symbol ) { int i =  Arrays . binary Search ( SYMBOL_TABLE, symbol & 0x3 FFFF )  ;  if  ( i < 0 )  {     return -1 ;  } return  ( CODEWORD_TABLE [ i ]  - 1 )  % NUMBER_OF_CODEWORDS ; }"
3992,"public void flush Request Queues (  ) { L . i ( "" [  Countly ]   Calling flush Request Queues"" )  ;  if  ( !is Initialized (  )  )  {     L . e ( "" Countly . shared Instance (  )  . init must be called before flush Request Queues"" )  ;      return ;  }  Countly Store store = connection Queue_ . get Countly Store (  )  ;  int count = 0 ;  while  ( true )  {     final  String [  ]  stored Events = store . connections (  )  ;      if  ( stored Events == null || stored Events . length == 0 )  {         // currently no data to send, we are done for now         break ;      }     //remove stored data     store . remove Connection ( stored Events [ 0 ]  )  ;      count++ ;  } L . d ( "" [  Countly ]  flush Request Queues removed  [ "" + count + "" ]  requests"" )  ; }"
3993,"public  Test Callback Prop View Model_ on Unbind (  On Model Unbound Listener< Test Callback Prop View Model_,  Test Callback Prop View> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
3994,"public static synchronized  Sample Database get Instance (  Context context ) { if  ( s Instance == null )  {     s Instance =  Room . database Builder ( context . get Application Context (  ) ,  Sample Database . class, ""ex"" )  . build (  )  ;      s Instance . populate Initial Data (  )  ;  } return s Instance ; }"
3995,"public void set Size ( int width, int height ) { if  ( width == MATCH_PARENT )  {     //360奇酷等手机对话框MATCH_PARENT时两边还会有边距，故强制填充屏幕宽     width = screen Width Pixels ;  } if  ( width == 0 && height == 0 )  {     width = screen Width Pixels ;      height = WRAP_CONTENT ;  } else if  ( width == 0 )  {     width = screen Width Pixels ;  } else if  ( height == 0 )  {     height = WRAP_CONTENT ;  }  Log Utils . verbose ( this,  String . format ( ""will set popup width/height to: %s/%s"", width, height )  )  ;   View Group .  Layout Params params = content Layout . get Layout Params (  )  ;  if  ( params == null )  {     params = new  View Group .  Layout Params ( width, height )  ;  } else {     params . width = width ;      params . height = height ;  } content Layout . set Layout Params ( params )  ; }"
3996,"public void append Super (  String Buffer buffer,  String super To String ) { append To String ( buffer, super To String )  ; }"
3997,public  Rename Branch Command branch Rename (  ) { return new  Rename Branch Command ( repo )  ; }
3998,public  Bundle get Data (  ) { return data ; }
3999,"private boolean update Permission ( final  Usb Device device, final boolean has Permission ) { final int device Key = get Device Key ( device, true )  ;  synchronized  ( m Has Permissions )  {     if  ( has Permission )  {         if  ( m Has Permissions . get ( device Key )  == null )  {             m Has Permissions . put ( device Key, new  Weak Reference< Usb Device> ( device )  )  ;          }     } else {         m Has Permissions . remove ( device Key )  ;      } } return has Permission ; }"
4000,public  App Lock get App Lock (  ) { return m App Locker ; }
4001,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
4002,public  Builder clear Re Session Label (  ) { re Session Label_ = get Default Instance (  )  . get Re Session Label (  )  ;  on Changed (  )  ;  return this ; }
4003,"public  Single< Issue Filter> add Issue Filter ( final  Issue Filter filter ) {  Repository repo = filter . get Repository (  )  ;  db Cache . get Database (  )  . get Repositories Queries (  )  . replace Repo ( repo . id (  ) , repo . name (  ) , repo . organization (  )  != null ? repo . organization (  )  . id (  )  : null, repo . owner (  )  . id (  ) , repo . is Private (  ) , repo . is Fork (  ) , repo . description (  ) , repo . forks Count (  ) , repo . watchers Count (  ) , repo . language (  ) , repo . has Issues (  ) , repo . mirror Url (  ) , repo . permissions (  )  . admin (  ) , repo . permissions (  )  . pull (  ) , repo . permissions (  )  . push (  )  )  ;  for  (  Label label : filter . get Labels (  )  )  {     db Cache . database . get Issue_filter Queries (  )  . insert Or Replace Label ( repo . id (  ) , label . name (  ) , label . color (  )  )  ;      db Cache . database . get Issue_filter Queries (  )  . insert Or Replace Issue Filter Label ( filter . get Id (  ) , repo . id (  ) , label . name (  )  )  ;  } if  ( filter . get Milestone (  )  != null )  {     db Cache . database . get Issue_filter Queries (  )  . insert Or Replace Milestone ( repo . id (  ) , filter . get Milestone (  )  . title (  ) , filter . get Milestone (  )  . state (  ) , filter . get Milestone (  )  . id (  ) , filter . get Milestone (  )  . number (  )  . long Value (  )  )  ;  } if  ( filter . get Assignee (  )  != null )  {     db Cache . database . get Organizations Queries (  )  . replace User ( filter . get Assignee (  )  . id (  ) , filter . get Assignee (  )  . login (  ) , filter . get Assignee (  )  . name (  ) , filter . get Assignee (  )  . avatar Url (  )  )  ;  } db Cache . database . get Issue_filter Queries (  )  . insert Or Replace Issue Filter ( filter . get Id (  ) , repo . id (  ) , filter . get Milestone (  )  != null ? filter . get Milestone (  )  . id (  )  : null, filter . get Assignee (  )  != null ? filter . get Assignee (  )  . id (  )  : null, filter . is Open (  ) , filter . get Direction (  ) , filter . get Sort Type (  )  )  ;  return  Single . just ( filter )  ; }"
4004,public  Values<V> values (  ) { if  (  Collections . allocate Iterators )      return new  Ordered Map Values ( this )  ;  if  ( values1 == null )  {     values1 = new  Ordered Map Values ( this )  ;      values2 = new  Ordered Map Values ( this )  ;  } if  ( !values1 . valid )  {     values1 . reset (  )  ;      values1 . valid = true ;      values2 . valid = false ;      return values1 ;  } values2 . reset (  )  ;  values2 . valid = true ;  values1 . valid = false ;  return values2 ; }
4005,public void set Is Intermediate Result Expected ( boolean is Intermediate Result Expected ) {  Base Producer Context . call On Is Intermediate Result Expected Changed ( set Is Intermediate Result Expected No Callbacks ( is Intermediate Result Expected )  )  ; }
4006,public int get Vaulted Drawable (  ) { return m Vaulted Drawable ; }
4007,"public void navigation (  Activity m Context, int request Code,  Navigation Callback callback ) { A Router . get Instance (  )  . navigation ( m Context, this, request Code, callback )  ; }"
4008,"public static  Block Source from (  File Channel ch ) { return new  Block Source (  )  {     @ Override     public  Byte Buffer read ( long pos, int block Size )  throws IO Exception {          Byte Buffer b =  Byte Buffer . allocate ( block Size )  ;          ch . position ( pos )  ;          int n ;          do {             n = ch . read ( b )  ;          } while  ( n > 0 && b . position (  )  < block Size )  ;          return b ;      }     @ Override     public long size (  )  throws IO Exception {         return ch . size (  )  ;      }     @ Override     public void close (  )  {         try {             ch . close (  )  ;          } catch  ( IO Exception e )  {         //  Ignore close failures of read-only files .          }     } } ; }"
4009,"public  String byte Or Boolean Write (  ) { return ""array Write Byte Or Boolean"" ; }"
4010,public  Abs List View .  Multi Choice Mode Listener get Multi Choice Mode Listener (  ) { return m Multi Choice Mode Listener ; }
4011,"public  Realm Async Task call Reset Password Function Async (  String email,  String new Password,  Object [  ]  args,  App .  Callback< Void> callback ) {  Util . check Looper Thread ( "" Asynchronous calling the password reset function is only possible from looper threads . "" )  ;  return new  Request< Void> ( NETWORK_POOL_EXECUTOR, callback )  {     @ Override     public  Void run (  )  throws  App Exception {         call Reset Password Function ( email, new Password, args )  ;          return null ;      } } . start (  )  ; }"
4012,public  Default Inspector Modules Builder database Files (  Database Files Provider provider ) { m Database Files Provider = provider ;  return this ; }
4013,"public  Realm Query<E> greater Than Or Equal To (  String field Name,  Date value ) { realm . check If Valid (  )  ;   Field Descriptor fd = schema . get Field Descriptors ( field Name,  Realm Field Type . DATE )  ;  this . query . greater Than Or Equal ( fd . get Column Keys (  ) , fd . get Native Table Pointers (  ) , value )  ;  return this ; }"
4014,public final boolean should Cache (  ) { return m Should Cache ; }
4015,public  List< String> get Components (  ) {  List< String> components = new  Array List<> (  )  ;  components . add All ( activities )  ;  components . add All ( services )  ;  components . add All ( receivers )  ;  components . add All ( providers )  ;  return components ; }
4016,public void set Max Width ( float max Width ) { m Max Width = max Width ; }
4017,"public  Gravatar build (  ) { return new  Gravatar ( ssl, extension )  ; }"
4018,"public void transform (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . transform ( %s )  ; "", value )  )  ; }"
4019,"private static int encode Text (  Char Sequence msg, int startpos, int count,  String Builder sb, int initial Submode ) {  String Builder tmp = new  String Builder ( count )  ;  int submode = initial Submode ;  int idx = 0 ;  while  ( true )  {     char ch = msg . char At ( startpos + idx )  ;      switch ( submode )  {         case SUBMODE_ALPHA:             if  ( is Alpha Upper ( ch )  )  {                 if  ( ch == ' ' )  {                     //space                     tmp . append (  ( char )  26 )  ;                  } else {                     tmp . append (  ( char )   ( ch - 65 )  )  ;                  }             } else {                 if  ( is Alpha Lower ( ch )  )  {                     submode = SUBMODE_LOWER ;                      //ll                     tmp . append (  ( char )  27 )  ;                      continue ;                  } else if  ( is Mixed ( ch )  )  {                     submode = SUBMODE_MIXED ;                      //ml                     tmp . append (  ( char )  28 )  ;                      continue ;                  } else {                     //ps                     tmp . append (  ( char )  29 )  ;                      tmp . append (  ( char )  PUNCTUATION [ ch ]  )  ;                      break ;                  }             }             break ;          case SUBMODE_LOWER:             if  ( is Alpha Lower ( ch )  )  {                 if  ( ch == ' ' )  {                     //space                     tmp . append (  ( char )  26 )  ;                  } else {                     tmp . append (  ( char )   ( ch - 97 )  )  ;                  }             } else {                 if  ( is Alpha Upper ( ch )  )  {                     //as                     tmp . append (  ( char )  27 )  ;                      tmp . append (  ( char )   ( ch - 65 )  )  ;                      //space cannot happen here, it is also in "" Lower""                     break ;                  } else if  ( is Mixed ( ch )  )  {                     submode = SUBMODE_MIXED ;                      //ml                     tmp . append (  ( char )  28 )  ;                      continue ;                  } else {                     //ps                     tmp . append (  ( char )  29 )  ;                      tmp . append (  ( char )  PUNCTUATION [ ch ]  )  ;                      break ;                  }             }             break ;          case SUBMODE_MIXED:             if  ( is Mixed ( ch )  )  {                 tmp . append (  ( char )  MIXED [ ch ]  )  ;              } else {                 if  ( is Alpha Upper ( ch )  )  {                     submode = SUBMODE_ALPHA ;                      //al                     tmp . append (  ( char )  28 )  ;                      continue ;                  } else if  ( is Alpha Lower ( ch )  )  {                     submode = SUBMODE_LOWER ;                      //ll                     tmp . append (  ( char )  27 )  ;                      continue ;                  } else {                     if  ( startpos + idx + 1 < count )  {                         char next = msg . char At ( startpos + idx + 1 )  ;                          if  ( is Punctuation ( next )  )  {                             submode = SUBMODE_PUNCTUATION ;                              //pl                             tmp . append (  ( char )  25 )  ;                              continue ;                          }                     }                     //ps                     tmp . append (  ( char )  29 )  ;                      tmp . append (  ( char )  PUNCTUATION [ ch ]  )  ;                  }             }             break ;          default:             //SUBMODE_PUNCTUATION             if  ( is Punctuation ( ch )  )  {                 tmp . append (  ( char )  PUNCTUATION [ ch ]  )  ;              } else {                 submode = SUBMODE_ALPHA ;                  //al                 tmp . append (  ( char )  29 )  ;                  continue ;              }     }     idx++ ;      if  ( idx >= count )  {         break ;      } } char h = 0 ;  int len = tmp . length (  )  ;  for  ( int i = 0 ;  i < len ;  i++ )  {     boolean odd =  ( i % 2 )  != 0 ;      if  ( odd )  {         h =  ( char )   (  ( h * 30 )  + tmp . char At ( i )  )  ;          sb . append ( h )  ;      } else {         h = tmp . char At ( i )  ;      } } if  (  ( len % 2 )  != 0 )  {     //ps     sb . append (  ( char )   (  ( h * 30 )  + 29 )  )  ;  } return submode ; }"
4020,public  Builder flags ( int flags ) { this . flags = flags ;  return this ; }
4021,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
4022,public void add Touchables (  Array List< View> views ) { // is itself not touchable .  for  ( int i = 0 ;  i < get Child Count (  )  ;  i++ )  {     final  View child = get Child At ( i )  ;      if  ( child . get Visibility (  )  == VISIBLE )  {          Item Info ii = info For Child ( child )  ;          if  ( ii != null && ii . position == m Cur Item )  {             child . add Touchables ( views )  ;          }     } }}
4023,"public com . anychart . charts .  Venn fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
4024,public char current (  ) { buffer Up (  )  ;  return is Empty No Buffer Up (  )  ? EOF : char Buf [ buf Pos ]  ; }
4025,"public com . anychart . core .  State Settings selected (  ) { return new com . anychart . core .  State Settings ( js Base + "" . selected (  ) "" )  ; }"
4026,public void flip (  ) { int max = bits . length ;  for  ( int i = 0 ;  i < max ;  i++ )  {     bits [ i ]  = ~bits [ i ]  ;  }}
4027,"public com . anychart . scales .  Linear Color color Scale ( com . anychart . scales .  Ordinal Color settings ) { return new com . anychart . scales .  Linear Color (  String . format (  Locale . US, js Base + "" . color Scale ( %s ) "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ; }"
4028,"public void set Type (  Body Type type ) { jni Set Type ( addr, type . get Value (  )  )  ; }"
4029,"public com . anychart . charts .  Sparkline stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4030,"public com . anychart . charts .  Pareto bounds (  Number x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
4031,public  String get Hook Std Err (  ) { return hook Std Err ; }
4032,"public com . anychart . core . cartesian . series .  Continuous Range Base hovered (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hovered ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4033,"private static  Member Select empty Map Factory (  Contribution Binding contribution Binding ) {  Binding Type binding Type = contribution Binding . binding Type (  )  ;   Immutable List< Type Mirror> type Parameters =  Immutable List . copy Of (  More Types . as Declared ( contribution Binding . key (  )  . type (  )  )  . get Type Arguments (  )  )  ;  if  ( binding Type . equals (  Binding Type . PRODUCTION )  )  {     return new  Parameterized Static Method ( PRODUCERS, type Parameters,  Code Block . of ( ""empty Map Producer (  ) "" ) , PRODUCER )  ;  } else {     return new  Parameterized Static Method ( MAP_FACTORY, type Parameters,  Code Block . of ( ""empty Map Provider (  ) "" ) , PROVIDER )  ;  }}"
4034,"public static  Bitmap get Bitmap ( @ Non Null final  String key, final  Bitmap default Value, @ Non Null final  Cache Double Utils cache Double Utils ) { return cache Double Utils . get Bitmap ( key, default Value )  ; }"
4035,"public com . anychart . core . stock . indicators .  Stochastic stochastic ( com . anychart . data .  Table Mapping mapping,  Number k Period,  Number k MA Period,  Number d Period,  String k MA Type,  String d MA Type, com . anychart . enums .  Stock Series Type k Series Type,  String d Series Type ) { return new com . anychart . core . stock . indicators .  Stochastic (  String . format (  Locale . US, js Base + "" . stochastic ( %s, %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, k Period, k MA Period, d Period, wrap Quotes ( k MA Type ) , wrap Quotes ( d MA Type ) ,  ( k Series Type != null )  ? k Series Type . get Js Base (  )  : null, wrap Quotes ( d Series Type )  )  )  ; }"
4036,"public static  Compact Hash Set<E> create ( E .  .  .  elements ) {  Compact Hash Set<E> set = create With Expected Size ( elements . length )  ;   Collections . add All ( set, elements )  ;  return set ; }"
4037,"public  Integer validate (  String value ) { return  (  Integer )  parse ( value,  (  String )  null,  (  Locale )  null )  ; }"
4038,private void start Auto Noop Timer (  ) { if  ( auto Noop Timeout > 0 )  {     auto Noop Timer = new  Auto Noop Timer (  )  ;      auto Noop Timer . start (  )  ;  }}
4039,"public static void w (  String tag,  String msg,  Object .  .  .  args ) { if  ( s Level > LEVEL_WARNING )  {     return ;  } if  ( args . length > 0 )  {     msg =  String . format ( msg, args )  ;  }  Log . w ( tag, msg )  ; }"
4040,"public com . anychart . core . stock . scrollerseries .  Range Spline Area fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
4041,"public static XC_ Method Replacement return Constant ( int priority, final  Object result ) { return new XC_ Method Replacement ( priority )  {     @ Override     protected  Object replace Hooked Method (  Method Hook Param param )  throws  Throwable {         return result ;      } } ; }"
4042,public int get Network Transmit Count (  ) { return m Network Transmit Count ; }
4043,"public static void update Nodes (  Path Data Node [  ]  target,  Path Data Node [  ]  source ) { for  ( int i = 0 ;  i < source . length ;  i++ )  {     target [ i ]  . type = source [ i ]  . type ;      for  ( int j = 0 ;  j < source [ i ]  . params . length ;  j++ )  {         target [ i ]  . params [ j ]  = source [ i ]  . params [ j ]  ;      } }}"
4044,"public com . anychart . charts .  Sankey padding (  Number value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
4045,"public long get Retry Delay Ms For ( int data Type, long load Duration Ms, IO Exception exception, int error Count ) { return exception instanceof  Parser Exception || exception instanceof  File Not Found Exception || exception instanceof  Unexpected Loader Exception ? C . TIME_UNSET :  Math . min (  ( error Count - 1 )  * 1000, 5000 )  ; }"
4046,"public com . anychart . charts .  Scatter select Marquee Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
4047,"public  Transition Controller add Animator As Transition ( @ Nullable  View target, @ Non Null  Animator animator ) {  Animator Set as = new  Animator Set (  )  ;  as . play ( animator )  ;  return add Animator Set As Transition ( target, as )  ; }"
4048,"public static void add ( @ Non Null final  Fragment Manager fm, @ Non Null final  Fragment add, @ Id Res final int container Id, final boolean is Hide, final boolean is Add Stack ) { add ( fm, add, container Id, null, is Hide, is Add Stack )  ; }"
4049,"public com . anychart . core .  State Settings grid (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . grid ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4050,"public  Animator start (  ) { final  Value Animator animator =  Value Animator . of Float ( m From, m To )  ;  if  ( m Duration > -1 )  {     animator . set Duration ( m Duration )  ;  } if  ( m Interpolator != null )  {     animator . set Interpolator ( m Interpolator )  ;  } animator . add Update Listener ( new  Value Animator .  Animator Update Listener (  )  {     @ Override     public void on Animation Update (  Value Animator animation )  {         float animated Value =  (  Float )  animation . get Animated Value (  )  ;          m Value To Animate . set ( animated Value )  ;      } } )  ;  animator . start (  )  ;  return animator ; }"
4051,"public  Builder With Params clazz (  String class Name ) { check Not Null ( class Name, ""m Class Name"" )  ;  last Params = new  Params Builder ( ""any subclass of "" + class Name )  ;  class Names . put ( class Name, last Params )  ;  return this ; }"
4052,"public com . anychart . core . annotations .  Fibonacci Retracement trend ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . trend ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4053,"public com . anychart . core . ui .  Paginator layout ( com . anychart . enums .  Layout value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . layout ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
4054,"public void eat (  )  throws  Interrupted Exception{ requests . put (  (  )  -> {     logger . info ( ""{} is eating!"", name (  )  )  ;      logger . info ( ""{} has finished eating!"", name (  )  )  ;  } )  ; }"
4055,public boolean chain Handles Throwable (  Converter<I Logging Event> head ) {  Converter<I Logging Event> c = head ;  while  ( c != null )  {     if  ( c instanceof  Throwable Handling Converter )  {         return true ;      }     c = c . get Next (  )  ;  } return false ; }
4056,"public com . anychart . core . ui .  Legend legend (  ) { return new com . anychart . core . ui .  Legend ( js Base + "" . legend (  ) "" )  ; }"
4057,"public com . anychart . core . map . series .  Choropleth stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4058,public boolean has Dash Pattern (  ) { return has Dash Pattern ; }
4059,"public static  String get Path ( final  Context context, final  Uri uri ) { final boolean is Kit Kat =  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . KITKAT ;  //  Document Provider if  ( is Kit Kat &&  Documents Contract . is Document Uri ( context, uri )  )  {     //  External Storage Provider     if  ( is External Storage Document ( uri )  )  {         final  String doc Id =  Documents Contract . get Document Id ( uri )  ;          final  String [  ]  split = doc Id . split ( "":"" )  ;          final  String type = split [ 0 ]  ;          if  ( ""primary"" . equals Ignore Case ( type )  )  {             return  Environment . get External Storage Directory (  )  + ""/"" + split [ 1 ]  ;          }     // TODO handle non-primary volumes     } else //  Downloads Provider     if  ( is Downloads Document ( uri )  )  {         final  String id =  Documents Contract . get Document Id ( uri )  ;          final  Uri content Uri =  Content Uris . with Appended Id (  Uri . parse ( ""content://downloads/public_downloads"" ) ,  Long . value Of ( id )  )  ;          return get Data Column ( context, content Uri, null, null )  ;      } else //  Media Provider     if  ( is Media Document ( uri )  )  {         final  String doc Id =  Documents Contract . get Document Id ( uri )  ;          final  String [  ]  split = doc Id . split ( "":"" )  ;          final  String type = split [ 0 ]  ;           Uri content Uri = null ;          if  ( ""image"" . equals ( type )  )  {             content Uri =  Media Store .  Images .  Media . EXTERNAL_CONTENT_URI ;          } else if  ( ""video"" . equals ( type )  )  {             content Uri =  Media Store .  Video .  Media . EXTERNAL_CONTENT_URI ;          } else if  ( ""audio"" . equals ( type )  )  {             content Uri =  Media Store .  Audio .  Media . EXTERNAL_CONTENT_URI ;          }         final  String selection = ""_id=?"" ;          final  String [  ]  selection Args = new  String [  ]  { split [ 1 ]  } ;          return get Data Column ( context, content Uri, selection, selection Args )  ;      } } else //  Media Store  ( and general )  if  ( ""content"" . equals Ignore Case ( uri . get Scheme (  )  )  )  {     return get Data Column ( context, uri, null, null )  ;  } else //  File if  ( ""file"" . equals Ignore Case ( uri . get Scheme (  )  )  )  {     return uri . get Path (  )  ;  } return null ; }"
4060,"public void test No Trailing Newline After Second Line (  )  throws IO Exception{ compare Styled ( ""@@ 1,2 1,2 @@\n+navigation_drawer_header_background"" )  ; }"
4061,"protected void on Layout ( boolean changed, int l, int t, int r, int b ) { final  View this View = this ;  final int padding Left = this View . get Padding Left (  )  ;  final int padding Top = this View . get Padding Top (  )  ;  final int padding Bottom = this View . get Padding Bottom (  )  ;  for  ( int i = 0, len = super . get Child Count (  )  ;  i < len ;  i++ )  {      View child = super . get Child At ( i )  ;      if  ( child . get Visibility (  )  == GONE || ""GONE"" . equals ( child . get Tag ( R . id . srl_tag )  )  )  {         continue ;      }     if  ( m Refresh Content != null && m Refresh Content . get View (  )  == child )  {         boolean is Preview Mode = this View . is In Edit Mode (  )  && m Enable Preview In Edit Mode && is Enable Refresh Or Load More ( m Enable Refresh )  && m Refresh Header != null ;          final  View content View = m Refresh Content . get View (  )  ;          final  View Group .  Layout Params lp = content View . get Layout Params (  )  ;          final  Margin Layout Params mlp = lp instanceof  Margin Layout Params ?  (  Margin Layout Params )  lp : s Default Margin LP ;          int left = padding Left + mlp . left Margin ;          int top = padding Top + mlp . top Margin ;          int right = left + content View . get Measured Width (  )  ;          int bottom = top + content View . get Measured Height (  )  ;          if  ( is Preview Mode &&  ( is Enable Translation Content ( m Enable Header Translation Content, m Refresh Header )  )  )  {             top = top + m Header Height ;              bottom = bottom + m Header Height ;          }         content View . layout ( left, top, right, bottom )  ;      }     if  ( m Refresh Header != null && m Refresh Header . get View (  )  == child )  {         boolean is Preview Mode = this View . is In Edit Mode (  )  && m Enable Preview In Edit Mode && is Enable Refresh Or Load More ( m Enable Refresh )  ;          final  View header View = m Refresh Header . get View (  )  ;          final  View Group .  Layout Params lp = header View . get Layout Params (  )  ;          final  Margin Layout Params mlp = lp instanceof  Margin Layout Params ?  (  Margin Layout Params )  lp : s Default Margin LP ;          int left = mlp . left Margin ;          int top = mlp . top Margin + m Header Inset Start ;          int right = left + header View . get Measured Width (  )  ;          int bottom = top + header View . get Measured Height (  )  ;          if  ( !is Preview Mode )  {             if  ( m Refresh Header . get Spinner Style (  )  ==  Spinner Style .  Translate )  {                 top = top - m Header Height ;                  bottom = bottom - m Header Height ;              /*                      *  Spinner Style .  Scale  header View . get Measured Height (  )  已经重复处理                      **/             //                    } else if  ( m Refresh Header . get Spinner Style (  )  . scale && m Spinner > 0 )  {             //                        bottom = top +  Math . max (  Math . max ( 0, is Enable Refresh Or Load More ( m Enable Refresh )  ? m Spinner : 0 )  - lp . bottom Margin - lp . top Margin, 0 )  ;              }         }         header View . layout ( left, top, right, bottom )  ;      }     if  ( m Refresh Footer != null && m Refresh Footer . get View (  )  == child )  {         final boolean is Preview Mode = this View . is In Edit Mode (  )  && m Enable Preview In Edit Mode && is Enable Refresh Or Load More ( m Enable Load More )  ;          final  View footer View = m Refresh Footer . get View (  )  ;          final  View Group .  Layout Params lp = footer View . get Layout Params (  )  ;          final  Margin Layout Params mlp = lp instanceof  Margin Layout Params ?  (  Margin Layout Params )  lp : s Default Margin LP ;          final  Spinner Style style = m Refresh Footer . get Spinner Style (  )  ;          int left = mlp . left Margin ;          int top = mlp . top Margin + this View . get Measured Height (  )  - m Footer Inset Start ;          if  ( m Footer No More Data && m Footer No More Data Effective && m Enable Footer Follow When No More Data && m Refresh Content != null && m Refresh Footer . get Spinner Style (  )  ==  Spinner Style .  Translate && is Enable Refresh Or Load More ( m Enable Load More )  )  {             final  View content View = m Refresh Content . get View (  )  ;              final  View Group .  Layout Params clp = content View . get Layout Params (  )  ;              final int top Margin = clp instanceof  Margin Layout Params ?  (  (  Margin Layout Params )  clp )  . top Margin : 0 ;              top = padding Top + padding Top + top Margin + content View . get Measured Height (  )  ;          }         if  ( style ==  Spinner Style .  Match Layout )  {             top = mlp . top Margin - m Footer Inset Start ;          } else if  ( is Preview Mode || style ==  Spinner Style .  Fixed Front || style ==  Spinner Style .  Fixed Behind )  {             top = top - m Footer Height ;          } else if  ( style . scale && m Spinner < 0 )  {             top = top -  Math . max ( is Enable Refresh Or Load More ( m Enable Load More )  ? -m Spinner : 0, 0 )  ;          }         int right = left + footer View . get Measured Width (  )  ;          int bottom = top + footer View . get Measured Height (  )  ;          footer View . layout ( left, top, right, bottom )  ;      } }}"
4062,"public void set Prefix Json ( boolean prefix Json ) { this . json Prefix =  ( prefix Json ? ""{} && "" : null )  ; }"
4063,"private  Eden Service .  Client get Connected Client (  )  throws IO Exception, T Transport Exception{ boolean exceeded Timeout Threshold = false ;  if  ( thrift Client == null ||  ( exceeded Timeout Threshold = clock . current Time Millis (  )  - last Successful Request >= IDLE_TIME_THRESHOLD_IN_MILLIS )  )  {     if  ( exceeded Timeout Threshold )  {         LOG . info ( "" Creating a new  Thrift client because current client was idle for too long . "" )  ;      }     thrift Client = thrift Client Factory . create New Thrift Client (  )  ;      last Successful Request = 0 ;  } return thrift Client ; }"
4064,"public static  String [  ]  [  ]  parse Meminfo ( int pid ) { boolean info Start = false ;  //  [  ]  [  ] ,00:native heap size,01:native heap alloc ; 10: dalvik heap // size,11: dalvik heap alloc  String [  ]  [  ]  heap Data = new  String [ 2 ]  [ 2 ]  ;  try {      Runtime runtime =  Runtime . get Runtime (  )  ;      process = runtime . exec ( ""su"" )  ;       Data Output Stream os = new  Data Output Stream ( process . get Output Stream (  )  )  ;      os . write Bytes ( ""dumpsys meminfo "" + pid + ""\n"" )  ;      os . write Bytes ( ""exit\n"" )  ;      os . flush (  )  ;       Buffered Reader buffered Reader = new  Buffered Reader ( new  Input Stream Reader ( process . get Input Stream (  )  )  )  ;       String line = """" ;      while  (  ( line = buffered Reader . read Line (  )  )  != null )  {         line = line . trim (  )  ;          if  ( line . contains ( "" Permission  Denial"" )  )  {             break ;          } else {             // 当读取到MEMINFO in pid 这一行时，下一行就是需要获取的数据             if  ( line . contains ( ""MEMINFO in pid"" )  )  {                 info Start = true ;              } else if  ( info Start )  {                  String [  ]  line Items = line . split ( ""\\s+"" )  ;                  int length = line Items . length ;                  if  ( line . starts With ( ""size"" )  )  {                     heap Data [ 0 ]  [ 0 ]  = line Items [ 1 ]  ;                      heap Data [ 1 ]  [ 0 ]  = line Items [ 2 ]  ;                  } else if  ( line . starts With ( ""allocated"" )  )  {                     heap Data [ 0 ]  [ 1 ]  = line Items [ 1 ]  ;                      heap Data [ 1 ]  [ 1 ]  = line Items [ 2 ]  ;                      break ;                  } else if  ( line . starts With ( "" Native"" )  )  {                      Log . d ( LOG_TAG, "" Native"" )  ;                       Log . d ( LOG_TAG, ""line Items [ 4 ] ="" + line Items [ 4 ]  )  ;                       Log . d ( LOG_TAG, ""line Items [ 5 ] ="" + line Items [ 5 ]  )  ;                      heap Data [ 0 ]  [ 0 ]  = line Items [ length - 3 ]  ;                      heap Data [ 0 ]  [ 1 ]  = line Items [ length - 2 ]  ;                  } else if  ( line . starts With ( "" Dalvik"" )  )  {                      Log . d ( LOG_TAG, "" Dalvik"" )  ;                       Log . d ( LOG_TAG, ""line Items [ 4 ] ="" + line Items [ 4 ]  )  ;                       Log . d ( LOG_TAG, ""line Items [ 5 ] ="" + line Items [ 5 ]  )  ;                      heap Data [ 1 ]  [ 0 ]  = line Items [ length - 3 ]  ;                      heap Data [ 1 ]  [ 1 ]  = line Items [ length - 2 ]  ;                      break ;                  }             }         }     } } catch  ( IO Exception e )  {     e . print Stack Trace (  )  ;  } return heap Data ; }"
4065,"public com . anychart . charts .  Pareto line Marker (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Marker ( %s )  ; "", settings )  )  ;  return this ; }"
4066,"public boolean assign Unicast Address ( final int unicast Address )  throws  Illegal Argument Exception{ if  ( get Node ( unicast Address )  != null )      throw new  Illegal Argument Exception ( "" Unicast address is already in use . "" )  ;  this . unicast Address = unicast Address ;  notify Network Updated (  )  ;  return true ; }"
4067,"static  String gravity To String ( @ Edge Gravity int gravity ) { if  (  ( gravity &  Gravity . LEFT )  ==  Gravity . LEFT )  {     return ""LEFT"" ;  } if  (  ( gravity &  Gravity . RIGHT )  ==  Gravity . RIGHT )  {     return ""RIGHT"" ;  } return  Integer . to Hex String ( gravity )  ; }"
4068,public static void set On Progress Threshold ( long threshold ) { on Progress Threshold . set ( threshold )  ; }
4069,void add Component Requirement Initialization (  Code Block code Block ) { component Shard . add Component Requirement Initialization ( code Block )  ; }
4070,"public  String file Name For Secondary ( APK Module module,  String index ) {  String prefix = module . is Root Module (  )  ? prefix (  )  : module . get Name (  )  ;  return file Name For Secondary ( prefix, index )  ; }"
4071,"public static void replace ( @ Non Null final  Fragment Manager fm, @ Non Null final  Fragment fragment, @ Id Res final int container Id, @ Animator Res @ Anim Res final int enter Anim, @ Animator Res @ Anim Res final int exit Anim, @ Animator Res @ Anim Res final int pop Enter Anim, @ Animator Res @ Anim Res final int pop Exit Anim ) { replace ( fm, fragment, container Id, null, false, enter Anim, exit Anim, pop Enter Anim, pop Exit Anim )  ; }"
4072,"public com . anychart . core . stock .  Plot min Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", height )  )  ;  return this ; }"
4073,"public  Builder app Version (  String app Version ) {  Util . check Empty ( app Version, ""app Version"" )  ;  this . app Version = app Version ;  return this ; }"
4074,"public com . anychart . charts .  Sunburst center (  String center Settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . center ( %s )  ; "", wrap Quotes ( center Settings )  )  )  ;  return this ; }"
4075,"public com . anychart . core .  State Settings selected (  ) { return new com . anychart . core .  State Settings ( js Base + "" . selected (  ) "" )  ; }"
4076,"public com . anychart . core .  Series Base color (  String color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color ( %s )  ; "", wrap Quotes ( color )  )  )  ;  return this ; }"
4077,public  Find Iterable< Result T> sort ( @ Nullable final  Bson sort ) { this . options . sort ( sort )  ;  return this ; }
4078,private boolean mark Sent (  ) { if  ( sent )  {     return false ;  } sent = true ;  return true ; }
4079,public A Transformable3 D set Rotation ( final  Matrix4 matrix ) { m Orientation . from Matrix ( matrix )  ;  m Look At Valid = false ;  mark Model Matrix Dirty (  )  ;  return this ; }
4080,"public void stack Mode (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stack Mode (  )  ; "" )  ; }"
4081,"private static void mid Point ( MP Point F point,  Motion Event event ) { float x = event . get X ( 0 )  + event . get X ( 1 )  ;  float y = event . get Y ( 0 )  + event . get Y ( 1 )  ;  point . x =  ( x / 2f )  ;  point . y =  ( y / 2f )  ; }"
4082,"public com . anychart . core . stock . scrollerseries . OHLC rising Stroke (  String value,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rising Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( value ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4083,"public static int day2 Calendar Day ( int day ) { switch ( day )  {     case SU:         return  Calendar . SUNDAY ;      case MO:         return  Calendar . MONDAY ;      case TU:         return  Calendar . TUESDAY ;      case WE:         return  Calendar . WEDNESDAY ;      case TH:         return  Calendar . THURSDAY ;      case FR:         return  Calendar . FRIDAY ;      case SA:         return  Calendar . SATURDAY ;      default:         throw new  Runtime Exception ( ""bad day of week: "" + day )  ;  }}"
4084,"public UB Json Writer value ( char [  ]  values )  throws IO Exception{ array (  )  ;  out . write Byte ( '$' )  ;  out . write Byte ( 'C' )  ;  out . write Byte ( '#' )  ;  value ( values . length )  ;  for  ( int i = 0, n = values . length ;  i < n ;  i++ )  {     out . write Char ( values [ i ]  )  ;  } pop ( true )  ;  return this ; }"
4085,public static void show Status Bar ( @ Non Null  Window window ) { window . clear Flags (  Window Manager .  Layout Params . FLAG_FULLSCREEN )  ; }
4086,"public static  String get Version Name X Path (  ) { return ""/"" + NODE_MANIFEST + ""/@"" +  Android X Path Factory . DEFAULT_NS_PREFIX + "":"" + ATTRIBUTE_VERSIONNAME ; }"
4087,"public com . anychart . core . annotations .  Fibonacci Arc normal (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . normal ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4088,public static  String get Name (  Buck Argument argument ) {  Buck Identifier identifier = argument . get Identifier (  )  ;  return  ( identifier == null )  ? null : get Name ( identifier )  ; }
4089,"public void right (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . right (  )  ; "" )  ; }"
4090,private void set Sub Item Dimensions ( final  View Group v ) { v . post ( new  Runnable (  )  {     @ Override     public void run (  )  {         if  ( m Sub Item Height <= 0 )  {             m Sub Item Height = v . get Measured Height (  )  ;              m Sub Item Width = v . get Measured Width (  )  ;          }     } } )  ; }
4091,"public void save As Jpg (  String width,  Number height,  Number quality,  Boolean force Transparent White,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Jpg ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( width ) , height, quality, force Transparent White, wrap Quotes ( filename )  )  )  ; }"
4092,public  String get Font Family (  ) { return this . font Family ; }
4093,"public com . anychart . charts .  Polar bounds (  String x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
4094,public  Dfs Pack Compactor exclude (  Object Id Set set ) { exclude . add ( set )  ;  return this ; }
4095,"public  Network Key create Network Key (  )  throws  Illegal Argument Exception{ final  Network Key key = new  Network Key ( get Available Net Key Index (  ) ,  Mesh Parser Utils . to Byte Array (  Secure Utils . generate Random Network Key (  )  )  )  ;  key . set Mesh Uuid ( mesh UUID )  ;  return key ; }"
4096,public static  Image Request Builder from Request (  Image Request image Request ) { return  Image Request Builder . new Builder With Source ( image Request . get Source Uri (  )  )  . set Image Decode Options ( image Request . get Image Decode Options (  )  )  . set Bytes Range ( image Request . get Bytes Range (  )  )  . set Cache Choice ( image Request . get Cache Choice (  )  )  . set Local Thumbnail Previews Enabled ( image Request . get Local Thumbnail Previews Enabled (  )  )  . set Lowest Permitted Request Level ( image Request . get Lowest Permitted Request Level (  )  )  . set Postprocessor ( image Request . get Postprocessor (  )  )  . set Progressive Rendering Enabled ( image Request . get Progressive Rendering Enabled (  )  )  . set Request Priority ( image Request . get Priority (  )  )  . set Resize Options ( image Request . get Resize Options (  )  )  . set Request Listener ( image Request . get Request Listener (  )  )  . set Rotation Options ( image Request . get Rotation Options (  )  )  . set Should Decode Prefetches ( image Request . should Decode Prefetches (  )  )  . set Delay Ms ( image Request . get Delay Ms (  )  )  ; }
4097,"public static boolean is Valid Heartbeat Period Log ( final byte period ) { if  ( period >= 0x00 && period < 0x11 )      return true ;  throw new  Illegal Argument Exception ( "" Period log must be within the range of 0x00 to 0x11!"" )  ; }"
4098,protected final  String get Name (  ) { return name ; }
4099,"public boolean add Item ( @ Non Null T item ) { return add Item ( get Item Count (  ) , item )  ; }"
4100,public  Drop In Request google Payment Request (  Google Payment Request request ) { m Google Payment Request = request ;  return this ; }
4101,"public static  Simple Exo Player new Simple Instance (  Context context,  Track Selector track Selector,  Load Control load Control, @ Nullable  Drm Session Manager< Framework Media Crypto> drm Session Manager ) {  Renderers Factory renderers Factory = new  Default Renderers Factory ( context )  ;  return new Simple Instance ( context, renderers Factory, track Selector, load Control, drm Session Manager )  ; }"
4102,public static long get Component Calculate Layout On UI Count (  ) { return s Component Calculate Layout On UI Count . get (  )  ; }
4103,"public void low Stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . low Stroke (  )  ; "" )  ; }"
4104,"public com . anychart . core . stock . scrollerseries .  Step Area bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
4105,"public  Iterable<L> bulk Get (  Iterable<?> keys ) { //  Initially using the array to store the keys, then reusing it to store the respective L's final  Object [  ]  array =  Iterables . to Array ( keys,  Object . class )  ;  if  ( array . length == 0 )  {     return  Immutable List . of (  )  ;  } int [  ]  stripes = new int [ array . length ]  ;  for  ( int i = 0 ;  i < array . length ;  i++ )  {     stripes [ i ]  = index For ( array [ i ]  )  ;  }  Arrays . sort ( stripes )  ;  // optimize for runs of identical stripes int previous Stripe = stripes [ 0 ]  ;  array [ 0 ]  = get At ( previous Stripe )  ;  for  ( int i = 1 ;  i < array . length ;  i++ )  {     int current Stripe = stripes [ i ]  ;      if  ( current Stripe == previous Stripe )  {         array [ i ]  = array [ i - 1 ]  ;      } else {         array [ i ]  = get At ( current Stripe )  ;          previous Stripe = current Stripe ;      } } /*  *  Note that the returned  Iterable holds references to the returned stripes, to avoid  * error-prone code like:  *  *  Striped< Lock> striped Lock =  Striped . lazy Weak XXX (  .  .  .  ) '  *  Iterable< Lock> locks = striped Lock . bulk Get ( keys )  ;   * for  (  Lock lock : locks )  {  *   lock . lock (  )  ;   * }  * operation (  )  ;   * for  (  Lock lock : locks )  {  *   lock . unlock (  )  ;   * }  *  *  If we only held the int [  ]  stripes, translating it on the fly to L's, the original locks might  * be garbage collected after locking them, ending up in a huge mess .   */ // we carefully replaced all keys with their respective L's @ Suppress Warnings ( ""unchecked"" )   List<L> as List =  (  List<L> )   Arrays . as List ( array )  ;  return  Collections . unmodifiable List ( as List )  ; }"
4106,"public static void post Show With (  Context cxt,  Simple Back Page page,  Bundle data ) {  Intent intent = new  Intent ( cxt,  Simple Back Activity . class )  ;  intent . put Extra ( CONTENT_KEY, page . get Value (  )  )  ;  intent . put Extra ( DATA_KEY, data )  ;  cxt . start Activity ( intent )  ; }"
4107,"T call Uninterruptibly With Timeout (  Callable<T> callable,  Duration timeout )  throws  Timeout Exception,  Execution Exception{ return call Uninterruptibly With Timeout ( callable, to Nanos Saturated ( timeout ) ,  Time Unit . NANOSECONDS )  ; }"
4108,private void initialize (  ) { initialize ( null )  ; }
4109,"public com . anychart . charts .  Sparkline select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4110,"private void inqueue Stub Activity (  Activity Info ai,  String real Activity Clazz ) { if  ( ai . launch Mode ==  Activity Info . LAUNCH_MULTIPLE )      return ;  if  ( m Stub Queue == null )      return ;  int count For Mode = STUB_ACTIVITIES_COUNT ;  int offset =  ( ai . launch Mode - 1 )  * count For Mode ;  for  ( int i = 0 ;  i < count For Mode ;  i++ )  {      String stub Clazz = m Stub Queue [ i + offset ]  ;      if  ( stub Clazz != null && stub Clazz . equals ( real Activity Clazz )  )  {         m Stub Queue [ i + offset ]  = null ;          break ;      } }}"
4111,"public synchronized void measure In Window ( int tag, int [  ]  output Buffer ) { if  ( DEBUG_MODE )  {     F Log . d ( TAG, ""measure In Window [ %d ] "", tag )  ;  }  Ui Thread Util . assert On Ui Thread (  )  ;   View v = m Tags To Views . get ( tag )  ;  if  ( v == null )  {     throw new  No Such Native View Exception ( "" No native view for "" + tag + "" currently exists"" )  ;  } v . get Location On Screen ( output Buffer )  ;  // we need to subtract visible Window Coords - to subtract possible window insets, split screen or // multi window  Rect visible Window Frame = new  Rect (  )  ;  v . get Window Visible Display Frame ( visible Window Frame )  ;  output Buffer [ 0 ]  = output Buffer [ 0 ]  - visible Window Frame . left ;  output Buffer [ 1 ]  = output Buffer [ 1 ]  - visible Window Frame . top ;  // output Buffer [ 0,1 ]  already contain what we want output Buffer [ 2 ]  = v . get Width (  )  ;  output Buffer [ 3 ]  = v . get Height (  )  ; }"
4112,"public static void inclusive Between ( final T start, final T end, final  Comparable<T> value, final  String message, final  Object .  .  .  values ) { // TODO when breaking BC, consider returning value if  ( value . compare To ( start )  < 0 || value . compare To ( end )  > 0 )  {     throw new  Illegal Argument Exception (  String . format ( message, values )  )  ;  }}"
4113,public static  Char Source wrap (  Char Sequence char Sequence ) { return char Sequence instanceof  String ? new  String Char Source (  (  String )  char Sequence )  : new  Char Sequence Char Source ( char Sequence )  ; }
4114,public boolean is Set Rule Keys (  ) { return this . rule Keys != null ; }
4115,"public com . anychart . core . gantt . edit .  Structure Edit edit (  ) { return new com . anychart . core . gantt . edit .  Structure Edit ( js Base + "" . edit (  ) "" )  ; }"
4116,"public com . anychart . core . ui .  Labels Factory max Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . max Labels (  ) "" )  ; }"
4117,"public void height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . height (  )  ; "" )  ; }"
4118,"public com . anychart . core . ui .  Separator fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
4119,"public void count (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . count (  )  ; "" )  ; }"
4120,"public com . anychart . core . axes .  Circular Ticks fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
4121,"public com . anychart . charts .  Pert label (  String index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , wrap Quotes ( settings )  )  )  ;  return this ; }"
4122,"private void set Item Offsets For Header (  Rect item Offsets,  View header, int orientation ) {  Rect header Margins = m Dimension Calculator . get Margins ( header )  ;  if  ( orientation ==  Linear Layout Manager . VERTICAL )  {     item Offsets . top = header . get Height (  )  + header Margins . top + header Margins . bottom ;  } else {     item Offsets . left = header . get Width (  )  + header Margins . left + header Margins . right ;  }}"
4123,public static  Predicate<T> not (  Predicate<T> predicate ) { return new  Not Predicate<T> ( predicate )  ; }
4124,public  Uri Components Builder user Info (  String user Info ) { this . user Info = user Info ;  reset Scheme Specific Part (  )  ;  return this ; }
4125,"private void generate Restoring Update (  String table,  String where Clause,  String [  ]  where Args,  String tag ) { //  Gets all affected_rows  Cursor restoring_cursor = m SQ Lite Database . query ( table, null, where Clause, where Args, null, null, null )  ;   Array List< String> queries = new  Array List<> (  )  ;   Array List< String [  ] > queries Parameters = new  Array List<> (  )  ;  //  Generates restoring queries while  ( restoring_cursor . move To Next (  )  )  {      String Builder sql = new  String Builder (  )  ;      sql . append ( ""UPDATE "" )  ;      sql . append ( table )  ;      sql . append ( "" SET "" )  ;      int i = 0 ;       String [  ]  parameters = new  String [ restoring_cursor . get Column Count (  )  + 1 ]  ;      for  (  String column Name : restoring_cursor . get Column Names (  )  )  {         if  ( i > 0 )              sql . append ( "", "" )  ;          sql . append ( column Name )  ;          sql . append ( "" = ?"" )  ;          parameters [ i ]  = restoring_cursor . get String ( restoring_cursor . get Column Index ( column Name )  )  ;          i++ ;      }     sql . append ( "" WHERE "" )  ;      sql . append ( m Table Rowid . get ( table )  )  ;      sql . append ( "" = ?"" )  ;      parameters [ i ]  = restoring_cursor . get String ( restoring_cursor . get Column Index ( m Table Rowid . get ( table )  )  )  ;      queries . add ( sql . to String (  )  )  ;      queries Parameters . add ( parameters )  ;  } restoring_cursor . close (  )  ;  m Tag Query Table . put ( tag, queries )  ;  m Tag Query Parameters . put ( tag, queries Parameters )  ; }"
4126,"public com . anychart . core . annotations .  Fibonacci Arc z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
4127,"public static  Class Name remove Name Suffix (  Type Element type,  String suffix ) {  Class Name original Name =  Class Name . get ( type )  ;   String original Simple Name = original Name . simple Name (  )  ;   Processor Errors . check State ( original Simple Name . ends With ( suffix ) , type, "" Name of type %s must end with '%s'"", original Name, suffix )  ;   String without Suffix = original Simple Name . substring ( 0, original Simple Name . length (  )  - suffix . length (  )  )  ;  return original Name . peer Class ( without Suffix )  ; }"
4128,"public static  Commit Msg Hook commit Msg (  Repository repo,  Print Stream output Stream,  Print Stream error Stream ) { return new  Commit Msg Hook ( repo, output Stream, error Stream )  ; }"
4129,"public void write Header Part (  Annotated Output out ) { throw If Not Prepared (  )  ;  int sz = class Defs . size (  )  ;  int offset =  ( sz == 0 )  ? 0 : get File Offset (  )  ;  if  ( out . annotates (  )  )  {     out . annotate ( 4, ""class_defs_size: "" +  Hex . u4 ( sz )  )  ;      out . annotate ( 4, ""class_defs_off:  "" +  Hex . u4 ( offset )  )  ;  } out . write Int ( sz )  ;  out . write Int ( offset )  ; }"
4130,"public synchronized void add (  Date x, double y ) { super . add ( x . get Time (  ) , y )  ; }"
4131,"private  Popup Menu _build Popup Menu (  ) {  Popup Menu popup = new  Popup Menu ( get Context (  ) , m Image Button Overflow )  ;  if  ( m Card Header . get Popup Menu (  )  >  Card Header . NO_POPUP_MENU )  {      Menu Inflater inflater = popup . get Menu Inflater (  )  ;      inflater . inflate ( m Card Header . get Popup Menu (  ) , popup . get Menu (  )  )  ;  } popup . set On Menu Item Click Listener ( new  Popup Menu .  On Menu Item Click Listener (  )  {     @ Override     public boolean on Menu Item Click (  Menu Item item )  {         if  ( m Card Header . get Popup Menu Listener (  )  != null )  {             //  This individual card has it unique menu             m Card Header . get Popup Menu Listener (  )  . on Menu Item Click ( m Card Header . get Parent Card (  ) , item )  ;          }         return false ;      } } )  ;  popup . set On Dismiss Listener ( new  Popup Menu .  On Dismiss Listener (  )  {     @ Override     public void on Dismiss (  Popup Menu menu )  {         if  ( m Image Button Overflow != null )              m Image Button Overflow . set Selected ( false )  ;      } } )  ;  return popup ; }"
4132,public final float normalize (  ) { float length = length (  )  ;  if  ( length <  Settings . EPSILON )  {     return 0f ;  } float inv Length = 1 . 0f / length ;  x *= inv Length ;  y *= inv Length ;  return length ; }
4133,"static void fill JSON If Values Not Empty ( final JSON Object json, final  String .  .  .  objects ) { try {     if  ( objects . length > 0 && objects . length % 2 == 0 )  {         for  ( int i = 0 ;  i < objects . length ;  i += 2 )  {             final  String key = objects [ i ]  ;              final  String value = objects [ i + 1 ]  ;              if  ( value != null && value . length (  )  > 0 )  {                 json . put ( key, value )  ;              }         }     } } catch  ( JSON Exception ignored )  { // shouldn't ever happen when putting  String objects into a JSON Object, // it can only happen when putting  Na N or INFINITE doubles or floats into it }}"
4134,public static  String get Version (  ) { return  Build Config . VERSION_NAME ; }
4135,"public com . anychart . graphics . vector .  Image image (  String src,  Number x,  Number y,  Number width,  Number height ) { return new com . anychart . graphics . vector .  Image (  String . format (  Locale . US, js Base + "" . image ( %s, %s, %s, %s, %s ) "", wrap Quotes ( src ) , x, y, width, height )  )  ; }"
4136,"public void draw Left And Top Grid (  Canvas canvas,  Rect rect,  Paint paint ) { canvas . draw Rect ( rect, paint )  ; }"
4137,"private static char [  ]  grow Buffer ( char [  ]  dest, int index, int size ) { if  ( size < 0 )  {     // overflow - should be  Out Of Memory Error but GWT/j2cl don't support it     throw new  Assertion Error ( "" Cannot increase internal buffer any further"" )  ;  } char [  ]  copy = new char [ size ]  ;  if  ( index > 0 )  {      System . arraycopy ( dest, 0, copy, 0, index )  ;  } return copy ; }"
4138,"public static final void forward (  Activity activity,  Intent intent ) { // activity . finish (  )  ;  // try {      Plugin Intent ii = new  Plugin Intent ( intent )  ;      // 原容器      String original = ii . get Original (  )  ;      if  (  Text Utils . is Empty ( original )  )  {         if  ( LOGR )  {              Log Release . e ( PLUGIN_TAG, ""f . a f: orig=nul i="" + intent )  ;          }         return ;      }     // 容器，检查      String container = ii . get Container (  )  ;      if  (  Text Utils . is Empty ( container )  )  {         if  ( LOGR )  {              Log Release . e ( PLUGIN_TAG, ""f . a f: c=nul i="" + intent )  ;          }         return ;      }     // 目标插件，检查      String plugin = ii . get Plugin (  )  ;      if  (  Text Utils . is Empty ( plugin )  )  {         if  ( LOGR )  {              Log Release . e ( PLUGIN_TAG, ""f . a f: n=nul i="" + intent )  ;          }         return ;      }     // 目标activity，检查      String target = ii . get Activity (  )  ;      if  (  Text Utils . is Empty ( target )  )  {         if  ( LOGR )  {              Log Release . e ( PLUGIN_TAG, ""f . a f: t=nul i="" + intent )  ;          }         return ;      }     // 进程，检查     int process = ii . get Process (  )  ;      if  ( ! Plugin Manager . is Valid Activity Process ( process )  )  {         if  ( LOGR )  {              Log Release . e ( PLUGIN_TAG, ""f . a f: p="" + process + "" i="" + intent )  ;          }         return ;      }     // 计数器，检查     int counter = ii . get Counter (  )  ;      if  ( counter < 0 || counter >=  Plugin Manager . COUNTER_MAX )  {         if  ( LOGR )  {              Log Release . e ( PLUGIN_TAG, ""f . a f: ooc c="" + counter )  ;          }         return ;      }     // 计数器，递增     counter++ ;      ii . set Counter ( counter )  ;      //     s Plugin Mgr . m Client . m ACM . forward Intent ( activity, intent, original, container, plugin, target, process )  ;  } catch  (  Throwable e )  {     if  ( LOGR )  {          Log Release . e ( PLUGIN_TAG, ""f . a f: "" + e . get Message (  ) , e )  ;      } }}"
4139,public  List< Link File> get Link Files (  ) { return  Collections . unmodifiable List ( linkfiles )  ; }
4140,"public static  Producer Token create (  Class<?> class Token ) { return new  Producer Token ( check Not Null ( class Token ) , null )  ; }"
4141,"public com . anychart . core . map . series .  Choropleth max Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", width )  )  ;  return this ; }"
4142,"private  Update Op Helper build Diff (  Update Op Helper update Op Helper ) { prepare State For Diff (  )  ;  //  The general approach is to first search for removals, then additions, and lastly changes .  //  Focusing on one type of operation at a time makes it easy to coalesce batch changes .  //  When we identify an operation and add it to the // result list we update the positions of items in the old State List to reflect // the change, this way subsequent operations will use the correct, updated positions .  collect Removals ( update Op Helper )  ;  //  Only need to check for insertions if new list is bigger boolean has Insertions = old State List . size (  )  - update Op Helper . get Num Removals (  )  != current State List . size (  )  ;  if  ( has Insertions )  {     collect Insertions ( update Op Helper )  ;  } collect Moves ( update Op Helper )  ;  collect Changes ( update Op Helper )  ;  reset Old State (  )  ;  return update Op Helper ; }"
4143,public  To One Target2 get To One Target2 (  ) {  Long __key = this . to One Id ;  if  ( to One Target2__resolved Key == null || !to One Target2__resolved Key . equals ( __key )  )  {     __throw If Detached (  )  ;       To One Target2 Dao target Dao = dao Session . get To One Target2 Dao (  )  ;       To One Target2 to One Target2 New = target Dao . load ( __key )  ;      synchronized  ( this )  {         to One Target2 = to One Target2 New ;          to One Target2__resolved Key = __key ;      } } return to One Target2 ; }
4144,"public static  Stream<T> stream (  Iterable<T> iterable ) { return  ( iterable instanceof  Collection )  ?  (  (  Collection<T> )  iterable )  . stream (  )  :  Stream Support . stream ( iterable . spliterator (  ) , false )  ; }"
4145,public synchronized boolean update (  ) { try {     if  ( tasks . size == 0 )  {         // loop until we have a new task ready to be processed         while  ( load Queue . size != 0 && tasks . size == 0 )  next Task (  )  ;          // have we not found a task?  We are done!         if  ( tasks . size == 0 )              return true ;      }     return update Task (  )  && load Queue . size == 0 && tasks . size == 0 ;  } catch  (  Throwable t )  {     handle Task Error ( t )  ;      return load Queue . size == 0 ;  }}
4146,"public com . anychart . charts .  Mekko text Marker (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Marker ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
4147,"public final boolean consume (  Parsable Byte Array data, long time Us )  throws  Parser Exception{ return parse Header ( data )  && parse Payload ( data, time Us )  ; }"
4148,public boolean remove All (  Collection<?> collection ) { if  ( is Managed (  )  && !base Realm . is In Transaction (  )  )  {     throw new  Illegal State Exception ( REMOVE_OUTSIDE_TRANSACTION_ERROR )  ;  } return super . remove All ( collection )  ; }
4149,"public  Converter<T,  Request Body> next Request Body Converter ( @ Nullable  Converter .  Factory skip Past,  Type type,  Annotation [  ]  parameter Annotations,  Annotation [  ]  method Annotations ) {  Objects . require Non Null ( type, ""type == null"" )  ;   Objects . require Non Null ( parameter Annotations, ""parameter Annotations == null"" )  ;   Objects . require Non Null ( method Annotations, ""method Annotations == null"" )  ;  int start = converter Factories . index Of ( skip Past )  + 1 ;  for  ( int i = start, count = converter Factories . size (  )  ;  i < count ;  i++ )  {      Converter .  Factory factory = converter Factories . get ( i )  ;       Converter<?,  Request Body> converter = factory . request Body Converter ( type, parameter Annotations, method Annotations, this )  ;      if  ( converter != null )  {         //noinspection unchecked         return  (  Converter<T,  Request Body> )  converter ;      } }  String Builder builder = new  String Builder ( "" Could not locate  Request Body converter for "" )  . append ( type )  . append ( "" . \n"" )  ;  if  ( skip Past != null )  {     builder . append ( ""   Skipped:"" )  ;      for  ( int i = 0 ;  i < start ;  i++ )  {         builder . append ( ""\n   * "" )  . append ( converter Factories . get ( i )  . get Class (  )  . get Name (  )  )  ;      }     builder . append ( '\n' )  ;  } builder . append ( ""   Tried:"" )  ;  for  ( int i = start, count = converter Factories . size (  )  ;  i < count ;  i++ )  {     builder . append ( ""\n   * "" )  . append ( converter Factories . get ( i )  . get Class (  )  . get Name (  )  )  ;  } throw new  Illegal Argument Exception ( builder . to String (  )  )  ; }"
4150,"public com . anychart . charts .  Tree Map bounds (  Number x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
4151,"public static void logd (  String message ) { if  (  Build Config . DEBUG ||  Log . is Loggable ( TAG,  Log . DEBUG )  )  {      Log . d ( TAG, message )  ;  }}"
4152,public static  Bytes Key Generator secure Random (  ) { return new  Android Secure Random Bytes Key Generator (  )  ; }
4153,"public void initialize ( int size ) { vertices = new float [ size *  Decal . SIZE ]  ;   Mesh .  Vertex Data Type vertex Data Type =  Mesh .  Vertex Data Type .  Vertex Array ;  if  (  Gdx . gl30 != null )  {     vertex Data Type =  Mesh .  Vertex Data Type .  Vertex Buffer Object With VAO ;  } mesh = new  Mesh ( vertex Data Type, false, size * 4, size * 6, new  Vertex Attribute (  Vertex Attributes .  Usage .  Position, 3,  Shader Program . POSITION_ATTRIBUTE ) , new  Vertex Attribute (  Vertex Attributes .  Usage .  Color Packed, 4,  Shader Program . COLOR_ATTRIBUTE ) , new  Vertex Attribute (  Vertex Attributes .  Usage .  Texture Coordinates, 2,  Shader Program . TEXCOORD_ATTRIBUTE + ""0"" )  )  ;  short [  ]  indices = new short [ size * 6 ]  ;  int v = 0 ;  for  ( int i = 0 ;  i < indices . length ;  i += 6, v += 4 )  {     indices [ i ]  =  ( short )   ( v )  ;      indices [ i + 1 ]  =  ( short )   ( v + 2 )  ;      indices [ i + 2 ]  =  ( short )   ( v + 1 )  ;      indices [ i + 3 ]  =  ( short )   ( v + 1 )  ;      indices [ i + 4 ]  =  ( short )   ( v + 2 )  ;      indices [ i + 5 ]  =  ( short )   ( v + 3 )  ;  } mesh . set Indices ( indices )  ; }"
4154,"private void clean (  Set< Throwable> seen Throwables ) { //  Stack trace cleaning can be disabled using a system property .  if  ( is Stack Trace Cleaning Disabled (  )  )  {     return ;  } //  Prevent infinite recursion if there is a reference cycle between  Throwables .  if  ( seen Throwables . contains ( throwable )  )  {     return ;  } seen Throwables . add ( throwable )  ;   Stack Trace Element [  ]  stack Frames = throwable . get Stack Trace (  )  ;  int stack Index = stack Frames . length - 1 ;  for  (  ;  stack Index >= 0 && !is Truth Entrance ( stack Frames [ stack Index ]  )  ;  stack Index-- )  { //  Find first frame that enters  Truth's world, and remove all above .  } stack Index += 1 ;  int end Index = 0 ;  for  (  ;  end Index < stack Frames . length && !is J Unit Intrastructure ( stack Frames [ end Index ]  )  ;  end Index++ )  { //  Find last frame of setup frames, and remove from there down .  } /*  *  If the stack trace would be empty, the error was probably thrown from ""J Unit infrastructure""  * frames .   Keep those frames around  ( though much of J Unit itself and related startup frames will  * still be removed by the remainder of this method )  so that the user sees a useful stack .   */ if  ( ! ( stack Index < end Index )  )  {     end Index = stack Frames . length ;  } for  (  ;  stack Index < end Index ;  stack Index++ )  {      Stack Trace Element Wrapper stack Trace Element Wrapper = new  Stack Trace Element Wrapper ( stack Frames [ stack Index ]  )  ;      //  Always keep frames that might be useful .      if  ( stack Trace Element Wrapper . get Stack Frame Type (  )  ==  Stack Frame Type . NEVER_REMOVE )  {         end Streak (  )  ;          cleaned Stack Trace . add ( stack Trace Element Wrapper )  ;          continue ;      }     //  Otherwise, process the current frame for collapsing     add To Streak ( stack Trace Element Wrapper )  ;      last Stack Frame Element Wrapper = stack Trace Element Wrapper ;  } //  Close out the streak on the bottom of the stack .  end Streak (  )  ;  //  Filter out testing framework and reflective calls from the bottom of the stack  List Iterator< Stack Trace Element Wrapper> iterator = cleaned Stack Trace . list Iterator ( cleaned Stack Trace . size (  )  )  ;  while  ( iterator . has Previous (  )  )  {      Stack Trace Element Wrapper stack Trace Element Wrapper = iterator . previous (  )  ;      if  ( stack Trace Element Wrapper . get Stack Frame Type (  )  ==  Stack Frame Type . TEST_FRAMEWORK || stack Trace Element Wrapper . get Stack Frame Type (  )  ==  Stack Frame Type . REFLECTION )  {         iterator . remove (  )  ;      } else {         break ;      } } //  Replace the stack trace on the  Throwable with the cleaned one .   Stack Trace Element [  ]  result = new  Stack Trace Element [ cleaned Stack Trace . size (  )  ]  ;  for  ( int i = 0 ;  i < result . length ;  i++ )  {     result [ i ]  = cleaned Stack Trace . get ( i )  . get Stack Trace Element (  )  ;  } throwable . set Stack Trace ( result )  ;  //  Recurse on any related  Throwables that are attached to this one if  ( throwable . get Cause (  )  != null )  {     new  Stack Trace Cleaner ( throwable . get Cause (  )  )  . clean ( seen Throwables )  ;  } for  (  Throwable suppressed :  Platform . get Suppressed ( throwable )  )  {     new  Stack Trace Cleaner ( suppressed )  . clean ( seen Throwables )  ;  }}"
4155,"public com . anychart . charts .  Pie select Marquee Stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4156,public static  Rx2 AN Request .  Delete Request Builder delete (  String url ) { return new  Rx2 AN Request .  Delete Request Builder ( url )  ; }
4157,public static final  String [  ]  resolve Plugin Activity (  String container ) { return  Plugin Containers . resolve Plugin Activity ( container )  ; }
4158,public static  User Account get (  String user Id ) { return cache . get ( user Id )  ; }
4159,"public int start Fragment ( QMUI Fragment fragment ) {  Log . i ( TAG, ""start Fragment"" )  ;   Fragment Manager fragment Manager = get Support Fragment Manager (  )  ;  if  ( fragment Manager . is State Saved (  )  )  {     QMUI Log . d ( TAG, ""start Fragment can not be invoked after on Save Instance State"" )  ;      return -1 ;  } QMUI Fragment .  Transition Config transition Config = fragment . on Fetch Transition Config (  )  ;   String tag Name = fragment . get Class (  )  . get Simple Name (  )  ;  return fragment Manager . begin Transaction (  )  . set Custom Animations ( transition Config . enter, transition Config . exit, transition Config . popenter, transition Config . popout )  . replace ( get Context View Id (  ) , fragment, tag Name )  . set Primary Navigation Fragment ( null )  . add To Back Stack ( tag Name )  . commit (  )  ; }"
4160,"public void set Progress Bar Image (  Drawable drawable,  Scaling Utils .  Scale Type scale Type ) { set Child Drawable At Index ( PROGRESS_BAR_IMAGE_INDEX, drawable )  ;  get Scale Type Drawable At Index ( PROGRESS_BAR_IMAGE_INDEX )  . set Scale Type ( scale Type )  ; }"
4161,public  List< Exception> errors (  ) { return  Collections . unmodifiable List ( this . errors )  ; }
4162,public boolean is Set ( _ Fields field ) { if  ( field == null )  {     throw new java . lang .  Illegal Argument Exception (  )  ;  } switch ( field )  {     case STORES_LOOKED_UP:         return is Set Stores Looked Up (  )  ;      case FASTEST_CACHE_HIT_STORE:         return is Set Fastest Cache Hit Store (  )  ;      case FASTEST_CACHE_HIT_STORE_ID:         return is Set Fastest Cache Hit Store Id (  )  ;  } throw new java . lang .  Illegal State Exception (  )  ; }
4163,public static _ Fields find By Thrift Id ( int field Id ) { switch ( field Id )  {     case // SHA1     1:         return SHA1 ;      default:         return null ;  }}
4164,"public static I Binder fetch Binder (  String plugin Name,  String module,  String process ) { return  Factory . query ( plugin Name, module,  Integer . parse Int ( process )  )  ; }"
4165,"public static char [  ]  encode ( byte [  ]  in, int i Len ) { // output length without padding int o Data Len =  ( i Len * 4 + 2 )  / 3 ;  // output length including padding int o Len =  (  ( i Len + 2 )  / 3 )  * 4 ;  char [  ]  out = new char [ o Len ]  ;  int ip = 0 ;  int op = 0 ;  while  ( ip < i Len )  {     int i0 = in [ ip++ ]  & 0xff ;      int i1 = ip < i Len ? in [ ip++ ]  & 0xff : 0 ;      int i2 = ip < i Len ? in [ ip++ ]  & 0xff : 0 ;      int o0 = i0 >>> 2 ;      int o1 =  (  ( i0 & 3 )  << 4 )  |  ( i1 >>> 4 )  ;      int o2 =  (  ( i1 & 0xf )  << 2 )  |  ( i2 >>> 6 )  ;      int o3 = i2 & 0x3 F ;      out [ op++ ]  = map1 [ o0 ]  ;      out [ op++ ]  = map1 [ o1 ]  ;      out [ op ]  = op < o Data Len ? map1 [ o2 ]  : '=' ;      op++ ;      out [ op ]  = op < o Data Len ? map1 [ o3 ]  : '=' ;      op++ ;  } return out ; }"
4166,"public com . anychart . core . resource .  Grid vertical Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . vertical Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4167,public  Type get Visual Type For Index ( int index ) { if  ( index < m Visual Types . size (  )  )  {     return m Visual Types . get ( index )  ;  } return  Type . NEEDLE ; }
4168,public long adjust Sample Timestamp ( long time Us ) { if  ( time Us == C . TIME_UNSET )  {     return C . TIME_UNSET ;  } //  Record the adjusted PTS to adjust for wraparound next time .  if  ( last Sample Timestamp Us != C . TIME_UNSET )  {     last Sample Timestamp Us = time Us ;  } else {     if  ( first Sample Timestamp Us != DO_NOT_OFFSET )  {         //  Calculate the timestamp offset .          timestamp Offset Us = first Sample Timestamp Us - time Us ;      }     synchronized  ( this )  {         last Sample Timestamp Us = time Us ;          //  Notify threads waiting for this adjuster to be initialized .          notify All (  )  ;      } } return time Us + timestamp Offset Us ; }
4169,"Listenable Future< Unit> remove Old Metadata (  ) {  Timestamp eviction Time =  Timestamp . from (  Instant . now (  )  . minus ( DEFAULT_EVICTION_TIME )  )  ;  try {     int deleted = db . delete Metadata ( eviction Time )  ;      LOG . verbose ( "" Removed %d metadata rows not accessed since %s"", deleted, eviction Time )  ;  } catch  ( SQL Exception e )  {     LOG . error ( e, "" Failed to clean database"" )  ;  } return  Futures . immediate Future ( null )  ; }"
4170,"public com . anychart . charts .  Tree Map width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", width )  )  ;  return this ; }"
4171,public E min (  Iterable<E> iterable ) { return min ( iterable . iterator (  )  )  ; }
4172,"protected  Cursor query ( SQ Lite Open Helper helper,  String tables,  String [  ]  columns ) { return query ( helper, tables, columns, null, null )  ; }"
4173,"public com . anychart . core .  State Settings median Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . median Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4174,"public static  Object get Activity Thread ( @ Nullable  Context context, @ Nullable  Class<?> activity Thread ) { try {     if  ( activity Thread == null )  {         activity Thread =  Class . for Name ( ""android . app .  Activity Thread"" )  ;      }      Method m = activity Thread . get Method ( ""current Activity Thread"" )  ;      m . set Accessible ( true )  ;       Object current Activity Thread = m . invoke ( null )  ;      if  ( current Activity Thread == null && context != null )  {         //  In older versions of  Android  ( prior to frameworks/base 66a017b63461a22842 )          // the current Activity Thread was built on thread locals, so we'll need to try         // even harder          Field m Loaded Apk = context . get Class (  )  . get Field ( ""m Loaded Apk"" )  ;          m Loaded Apk . set Accessible ( true )  ;           Object apk = m Loaded Apk . get ( context )  ;           Field m Activity Thread Field = apk . get Class (  )  . get Declared Field ( ""m Activity Thread"" )  ;          m Activity Thread Field . set Accessible ( true )  ;          current Activity Thread = m Activity Thread Field . get ( apk )  ;      }     return current Activity Thread ;  } catch  (  Throwable ignore )  {     return null ;  }}"
4175,public void set Color ( int color ) { if  ( m Color != color )  {     m Color = color ;      invalidate Self (  )  ;  }}
4176,"public void on Draw ( final  Canvas canvas ) { m Paint . set Color ( 0x C0000000 )  ;  m Text Rect . set ( 0, 0, m View . get Width (  ) , 35 )  ;  canvas . draw Rect ( m Text Rect, m Paint )  ;  m Paint . set Color (  Color . WHITE )  ;  canvas . draw Text ( "" [ "" + m Tag + "" ] "", 10, 15, m Paint )  ;   String message = "" Not started"" ;  switch ( m State )  {     case STARTED:         message = "" Loading .  .  . "" ;          break ;      case SUCCESS:         message = "" Loaded after "" +  ( m Finish Time - m Start Time )  + ""ms"" ;          break ;      case FAILURE:         message = "" Failed after "" +  ( m Finish Time - m Start Time )  + ""ms"" ;          break ;      case CANCELLATION:         message = "" Cancelled after "" +  ( m Finish Time - m Start Time )  + ""ms"" ;          break ;  } canvas . draw Text ( message, 10, 30, m Paint )  ; }"
4177,"public com . anychart . core . cartesian . series .  Base With Markers bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
4178,"public static void do Slide Right In (  View view, int start X, int end X, int duration ) {  Object Animator translation X =  Object Animator . of Float ( view, ""translation X"", start X, end X )  ;   Object Animator alpha =  Object Animator . of Float ( view, ""alpha"", 0, 1 )  ;   Animator Set set = new  Animator Set (  )  ;  set . set Duration ( duration )  ;  set . play Together ( translation X, alpha )  ;  set . start (  )  ; }"
4179,"private void check Xml Text Contents (  Element test Result,  String attribute Name,  String expected Value ) { //  Check for exactly one text element .   Node List field Match List = test Result . get Elements By Tag Name ( attribute Name )  ;  assert Equals ( field Match List . get Length (  ) , 1 )  ;   Element field El =  (  Element )  field Match List . item ( 0 )  ;  //  Check that the value within the text element is as expected .   Node first Child = field El . get First Child (  )  ;   String expected Str =  Strings . null To Empty ( expected Value )  ;  assert True (  (  ( first Child == null )  &&  ( expected Str . equals ( """" )  )  )  ||  (  ( first Child != null )  && expected Str . equals ( first Child . get Node Value (  )  )  )  )  ; }"
4180,"public void to Svg (  String paper Size,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Svg ( %s, %s )  ; "", wrap Quotes ( paper Size ) , landscape )  )  ; }"
4181,"public com . anychart . core . scatter . series .  Base get Series At (  Number index ) { return new com . anychart . core . scatter . series .  Base (  String . format (  Locale . US, js Base + "" . get Series At ( %s ) "", index )  )  ; }"
4182,public void add All (  Collection< Episode View Model> episode View Models ) { episodes . add All ( episode View Models )  ; }
4183,"private void double Tap Zoom (  Point F s Center,  Point F v Focus ) { if  ( !pan Enabled )  {     if  ( s Requested Center != null )  {         //  With a center specified from code, zoom around that point .          s Center . x = s Requested Center . x ;          s Center . y = s Requested Center . y ;      } else {         //  With no requested center, scale around the image center .          s Center . x = s Width (  )  / 2 ;          s Center . y = s Height (  )  / 2 ;      } } float double Tap Zoom Scale =  Math . min ( max Scale,  Subsampling Scale Image View . this . double Tap Zoom Scale )  ;  boolean zoom In =  ( scale <= double Tap Zoom Scale * 0 . 9 )  || scale == min Scale ;  float target Scale = zoom In ? double Tap Zoom Scale : min Scale (  )  ;  if  ( double Tap Zoom Style == ZOOM_FOCUS_CENTER_IMMEDIATE )  {     set Scale And Center ( target Scale, s Center )  ;  } else if  ( double Tap Zoom Style == ZOOM_FOCUS_CENTER || !zoom In || !pan Enabled )  {     new  Animation Builder ( target Scale, s Center )  . with Interruptible ( false )  . with Duration ( double Tap Zoom Duration )  . with Origin ( ORIGIN_DOUBLE_TAP_ZOOM )  . start (  )  ;  } else if  ( double Tap Zoom Style == ZOOM_FOCUS_FIXED )  {     new  Animation Builder ( target Scale, s Center, v Focus )  . with Interruptible ( false )  . with Duration ( double Tap Zoom Duration )  . with Origin ( ORIGIN_DOUBLE_TAP_ZOOM )  . start (  )  ;  } invalidate (  )  ; }"
4184,"public int start Plugin Activity For Result (  Context context, DL Intent dl Intent, int request Code ) { if  ( m From == DL Constants . FROM_INTERNAL )  {     dl Intent . set Class Name ( context, dl Intent . get Plugin Class (  )  )  ;      perform Start Activity For Result ( context, dl Intent, request Code )  ;      return DL Plugin Manager . START_RESULT_SUCCESS ;  }  String package Name = dl Intent . get Plugin Package (  )  ;  if  (  Text Utils . is Empty ( package Name )  )  {     throw new  Null Pointer Exception ( ""disallow null package Name . "" )  ;  } DL Plugin Package plugin Package = m Packages Holder . get ( package Name )  ;  if  ( plugin Package == null )  {     return START_RESULT_NO_PKG ;  } final  String class Name = get Plugin Activity Full Path ( dl Intent, plugin Package )  ;   Class<?> clazz = load Plugin Class ( plugin Package . class Loader, class Name )  ;  if  ( clazz == null )  {     return START_RESULT_NO_CLASS ;  } // get the proxy activity class, the proxy activity will launch the // plugin activity .   Class<? extends  Activity> activity Class = get Proxy Activity Class ( clazz )  ;  if  ( activity Class == null )  {     return START_RESULT_TYPE_ERROR ;  } // put extra data dl Intent . put Extra ( DL Constants . EXTRA_CLASS, class Name )  ;  dl Intent . put Extra ( DL Constants . EXTRA_PACKAGE, package Name )  ;  dl Intent . set Class ( m Context, activity Class )  ;  perform Start Activity For Result ( context, dl Intent, request Code )  ;  return START_RESULT_SUCCESS ; }"
4185,"public  Class class For Name (  String name ) { // check positive cache  Class c =  (  Class )  absolute Class Cache . get ( name )  ;  if  ( c != null )      return c ;  // check negative cache if  ( absolute Non Classes . get ( name )  != null )  {     if  (  Interpreter . DEBUG )           Interpreter . debug ( ""absolute Non Class list hit: "" + name )  ;      return null ;  } if  (  Interpreter . DEBUG )       Interpreter . debug ( "" Trying to load class: "" + name )  ;  //  Check explicitly mapped  ( reloaded )  class .  .  .   Class Loader overlay Loader = get Loader For Class ( name )  ;  if  ( overlay Loader != null )  {     try {         c = overlay Loader . load Class ( name )  ;      } catch  (  Exception e )  {     // used to squeltch this .  .  .  changed for 1 . 3     // see  Bsh Class Manager     } catch  (  No Class Def Found Error e2 )  {         throw no Class Def Found ( name, e2 )  ;      } //  Should be there since it was explicitly mapped // throw an error? } // insure that core classes are loaded from the same loader if  ( c == null )  {     if  ( name . starts With ( BSH_PACKAGE )  )          try {             c =  Interpreter . class . get Class Loader (  )  . load Class ( name )  ;          } catch  (  Class Not Found Exception e )  {         } } //  Check classpath extension / reloaded classes if  ( c == null )  {     if  ( base Loader != null )          try {             c = base Loader . load Class ( name )  ;          } catch  (  Class Not Found Exception e )  {         } } //  Optionally try external classloader if  ( c == null )  {     if  ( external Class Loader != null )          try {             c = external Class Loader . load Class ( name )  ;          } catch  (  Class Not Found Exception e )  {         } } // or do we need a way to turn this off completely? if  ( c == null )  {     try {          Class Loader context Class Loader =  Thread . current Thread (  )  . get Context Class Loader (  )  ;          if  ( context Class Loader != null )              c =  Class . for Name ( name, true, context Class Loader )  ;      } catch  (  Class Not Found Exception e )  {     // fall through     }// fall through      catch  (  Security Exception e )  {     } } // try plain class for Name (  )  if  ( c == null )      try {         c = plain Class For Name ( name )  ;      } catch  (  Class Not Found Exception e )  {     } //  Try  . java source file if  ( c == null )      c = load Source Class ( name )  ;  //  Cache result  ( or null for not found )  //  Note: plain Class For Name already caches, so it will be redundant // in that case, however this process only happens once cache Class Info ( name, c )  ;  return c ; }"
4186,"public static  Future Combiner<V> when All Succeed (  Listenable Future<? extends V> .  .  .  futures ) { return new  Future Combiner<V> ( true,  Immutable List . copy Of ( futures )  )  ; }"
4187,"public com . anychart . core . annotations .  Fibonacci Fan grid ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . grid ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4188,"public static synchronized void completion (  Postcard postcard ) { if  ( null == postcard )  {     throw new  No Route Found Exception ( TAG + "" No postcard!"" )  ;  }  Route Meta route Meta =  Warehouse . routes . get ( postcard . get Path (  )  )  ;  if  ( null == route Meta )  {     //  Maybe its does't exist, or didn't load .      //  Load route meta .       Class<? extends I Route Group> group Meta =  Warehouse . groups Index . get ( postcard . get Group (  )  )  ;      if  ( null == group Meta )  {         throw new  No Route Found Exception ( TAG + "" There is no route match the path  [ "" + postcard . get Path (  )  + "" ] , in group  [ "" + postcard . get Group (  )  + "" ] "" )  ;      } else {         //  Load route and cache it into memory, then delete from metas .          try {             if  ( A Router . debuggable (  )  )  {                 logger . debug ( TAG,  String . format (  Locale . get Default (  ) , "" The group  [ %s ]  starts loading, trigger by  [ %s ] "", postcard . get Group (  ) , postcard . get Path (  )  )  )  ;              }             I Route Group i Group Instance = group Meta . get Constructor (  )  . new Instance (  )  ;              i Group Instance . load Into (  Warehouse . routes )  ;               Warehouse . groups Index . remove ( postcard . get Group (  )  )  ;              if  ( A Router . debuggable (  )  )  {                 logger . debug ( TAG,  String . format (  Locale . get Default (  ) , "" The group  [ %s ]  has already been loaded, trigger by  [ %s ] "", postcard . get Group (  ) , postcard . get Path (  )  )  )  ;              }         } catch  (  Exception e )  {             throw new  Handler Exception ( TAG + "" Fatal exception when loading group meta .   [ "" + e . get Message (  )  + "" ] "" )  ;          }         //  Reload         completion ( postcard )  ;      } } else {     postcard . set Destination ( route Meta . get Destination (  )  )  ;      postcard . set Type ( route Meta . get Type (  )  )  ;      postcard . set Priority ( route Meta . get Priority (  )  )  ;      postcard . set Extra ( route Meta . get Extra (  )  )  ;       Uri raw Uri = postcard . get Uri (  )  ;      if  ( null != raw Uri )  {         //  Try to set params into bundle .           Map< String,  String> result Map =  Text Utils . split Query Parameters ( raw Uri )  ;           Map< String,  Integer> params Type = route Meta . get Params Type (  )  ;          if  (  Map Utils . is Not Empty ( params Type )  )  {             //  Set value by its type, just for params which annotation by @ Param             for  (  Map .  Entry< String,  Integer> params : params Type . entry Set (  )  )  {                 set Value ( postcard, params . get Value (  ) , params . get Key (  ) , result Map . get ( params . get Key (  )  )  )  ;              }             //  Save params name which need auto inject .              postcard . get Extras (  )  . put String Array ( A Router . AUTO_INJECT, params Type . key Set (  )  . to Array ( new  String [  ]  {} )  )  ;          }         //  Save raw uri         postcard . with String ( A Router . RAW_URI, raw Uri . to String (  )  )  ;      }     switch ( route Meta . get Type (  )  )  {         case // if the route is provider, should find its instance         PROVIDER:             //  Its provider, so it must implement I Provider              Class<? extends I Provider> provider Meta =  (  Class<? extends I Provider> )  route Meta . get Destination (  )  ;              I Provider instance =  Warehouse . providers . get ( provider Meta )  ;              if  ( null == instance )  {                 //  There's no instance of this provider                 I Provider provider ;                  try {                     provider = provider Meta . get Constructor (  )  . new Instance (  )  ;                      provider . init ( m Context )  ;                       Warehouse . providers . put ( provider Meta, provider )  ;                      instance = provider ;                  } catch  (  Exception e )  {                     throw new  Handler Exception ( "" Init provider failed! "" + e . get Message (  )  )  ;                  }             }             postcard . set Provider ( instance )  ;              //  Provider should skip all of interceptors             postcard . green Channel (  )  ;              break ;          case FRAGMENT:             //  Fragment needn't interceptors             postcard . green Channel (  )  ;          default:             break ;      } }}"
4189,"public static int e (  String tag,  String msg ) { if  (  Re Plugin Internal . FOR_DEV )  {     return  Log . e ( TAG_PREFIX + tag, msg )  ;  } return -1 ; }"
4190,"private void redraw Feature To Map (  Geo Json Feature feature ) { redraw Feature To Map ( feature, get Map (  )  )  ; }"
4191,"public com . anychart . core . stock . scrollerseries .  Stick color Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4192,public int get Activity Count (  ) { synchronized  ( m Instance Lock )  {     ensure Consistent State (  )  ;      return m Activities . size (  )  ;  }}
4193,public  String get Filter Command (  ) { return filter Command ; }
4194,"protected  Abstract Drawee Controller build Controller (  ) { if  (  Fresco Systrace . is Tracing (  )  )  {      Fresco Systrace . begin Section ( "" Abstract Drawee Controller Builder#build Controller"" )  ;  }  Abstract Drawee Controller controller = obtain Controller (  )  ;  controller . set Retain Image On Failure ( get Retain Image On Failure (  )  )  ;  controller . set Content Description ( get Content Description (  )  )  ;  controller . set Controller Viewport Visibility Listener ( get Controller Viewport Visibility Listener (  )  )  ;  maybe Build And Set Retry Manager ( controller )  ;  maybe Attach Listeners ( controller )  ;  if  (  Fresco Systrace . is Tracing (  )  )  {      Fresco Systrace . end Section (  )  ;  } return controller ; }"
4195,"public com . anychart . charts .  Sunburst parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
4196,public  Remote Add Command set Name (  String name ) { this . name = name ;  return this ; }
4197,"public void test Select Tracks Exceeding Capabilities Prefer Lower Num Channel Before Sample Rate (  )  throws  Exception{  Format lower Channel Higher Sample Rate Format =  Format . create Audio Sample Format ( ""audio Format"",  Mime Types . AUDIO_AAC, null,  Format . NO_VALUE,  Format . NO_VALUE, 2, 44100, null, null, 0, null )  ;   Format higher Channel Lower Sample Rate Format =  Format . create Audio Sample Format ( ""audio Format"",  Mime Types . AUDIO_AAC, null,  Format . NO_VALUE,  Format . NO_VALUE, 6, 22050, null, null, 0, null )  ;   Track Group Array track Groups = wrap Formats ( higher Channel Lower Sample Rate Format, lower Channel Higher Sample Rate Format )  ;   Track Selector Result result = track Selector . select Tracks ( new  Renderer Capabilities [  ]  { ALL_AUDIO_FORMAT_EXCEEDED_RENDERER_CAPABILITIES }, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, lower Channel Higher Sample Rate Format )  ; }"
4198,"public com . anychart . core . utils .  Legend Item Settings icon Hatch Fill ( com . anychart . graphics . vector .  Pattern Fill pattern Fill ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . icon Hatch Fill ( %s )  ; "",  ( pattern Fill != null )  ? pattern Fill . get Js Base (  )  : null )  )  ;  return this ; }"
4199,"public com . anychart . charts .  Radar id (  String id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . id ( %s )  ; "", wrap Quotes ( id )  )  )  ;  return this ; }"
4200,"public  Hash Map< String,  String> get Package Properties If Present (  ) { if  ( !package Properties . is Empty (  )  )  {     return package Properties ;  }  String property = meta Content Map . get (  Share Constants . PACKAGE_META_FILE )  ;  if  ( property == null )  {     return null ;  }  String [  ]  lines = property . split ( ""\n"" )  ;  for  ( final  String line : lines )  {     if  ( line == null || line . length (  )  <= 0 )  {         continue ;      }     //it is comment     if  ( line . starts With ( ""#"" )  )  {         continue ;      }     final  String [  ]  kv = line . split ( ""="", 2 )  ;      if  ( kv == null || kv . length < 2 )  {         continue ;      }     package Properties . put ( kv [ 0 ]  . trim (  ) , kv [ 1 ]  . trim (  )  )  ;  } return package Properties ; }"
4201,"public static  Deferred Timeline create With Real Timeline (  Timeline timeline,  Object first Period Uid ) { return new  Deferred Timeline ( timeline, first Period Uid )  ; }"
4202,"public static  Immutable List< Path> get Buck Classpath For Intellij (  )  throws IO Exception{  Immutable List .  Builder< Path> class Path Entries =  Immutable List . builder (  )  ;   Path production Path = get Class Location (  Buck Classpath . class )  ;  class Path Entries . add ( production Path . to Absolute Path (  )  )  ;   Path test Path = production Path . resolve ( "" .  . / .  . /test/buck"" )  . normalize (  )  ;  class Path Entries . add ( test Path . to Absolute Path (  )  )  ;  class Path Entries . add All ( filter Ant Classpaths ( read Classpaths (  Paths . get ( ""programs"", ""classpaths"" )  )  )  )  ;  class Path Entries . add All ( filter Ant Classpaths ( read Classpaths (  Paths . get ( ""programs"", ""test_classpaths"" )  )  )  )  ;  return class Path Entries . build (  )  ; }"
4203,"public com . anychart . core . axes .  Linear y Axis (  Number index ) { return new com . anychart . core . axes .  Linear (  String . format (  Locale . US, js Base + "" . y Axis ( %s ) "", index )  )  ; }"
4204,"public com . anychart . core . utils .  Legend Item Settings icon Hatch Fill ( com . anychart . graphics . vector .  Hatch Fill settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . icon Hatch Fill ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
4205,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
4206,protected  Persistable Bundle get Config For Sub Id ( int sub Id ) { if  ( bundles . contains Key ( sub Id )  )  {     return bundles . get ( sub Id )  ;  } return new  Persistable Bundle (  )  ; }
4207,"public boolean is Over (  Actor actor, float x, float y ) {  Actor hit = actor . hit ( x, y, true )  ;  if  ( hit == null || !hit . is Descendant Of ( actor )  )      return in Tap Square ( x, y )  ;  return true ; }"
4208,public void set Response Payload Size ( long bytes ) { network Metric Builder . set Response Payload Bytes ( bytes )  ; }
4209,public void set Filename (  String filename ) { this . filename = filename ; }
4210,"private synchronized boolean is File Modify (  File new File,  File base File,  String bundle File Name,  String file Path )  throws IO Exception{ if  ( null == base File || !base File . exists (  )  )  {     return true ;  }  String new File Md5 = MD5 Util . get File MD5 String ( new File )  ;   String base File Md5 = MD5 Util . get File MD5 String ( base File )  ;  new File Md5 = get Bundle File Mapping Md5 ( get New Apk File List (  ) , bundle File Name, file Path, new File Md5 )  ;  base File Md5 = get Bundle File Mapping Md5 ( get Base Apk File List (  ) , bundle File Name, file Path, base File Md5 )  ;  if  (  String Utils . equals ( new File Md5, base File Md5 )  )  {     return false ;  } else if  ( new File . get Name (  )  . equals ( ANDROID_MANIFEST )  )  {     return is Manifest Modify ( base File, new File )  ;  } else {     return true ;  }}"
4211,public  Set< Integer> get Numbers (  ) { return  Collections . unmodifiable Set ( numbers )  ; }
4212,"public com . anychart . charts .  Mekko padding (  Number value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
4213,"private static void update Environment (  Map< String,  String> env,  Path lib Dir ) {  String library Search Path Name = get Library Search Path Name (  )  ;   String original Lib Path = get Env Value ( library Search Path Name )  ;   String newlib Path = lib Dir +  ( original Lib Path == null ? """" :  File . path Separator + original Lib Path )  ;  env . put ( library Search Path Name, newlib Path )  ; }"
4214,"public static void build (  Mesh Part Builder builder, float x, float y, float z, float width, float height, float depth ) { final float hw = width * 0 . 5f ;  final float hh = height * 0 . 5f ;  final float hd = depth * 0 . 5f ;  final float x0 = x - hw, y0 = y - hh, z0 = z - hd, x1 = x + hw, y1 = y + hh, z1 = z + hd ;  build ( // builder, // obtain V3 (  )  . set ( x0, y0, z0 ) , // obtain V3 (  )  . set ( x0, y1, z0 ) , // obtain V3 (  )  . set ( x1, y0, z0 ) , // obtain V3 (  )  . set ( x1, y1, z0 ) , obtain V3 (  )  . set ( x0, y0, z1 ) , obtain V3 (  )  . set ( x0, y1, z1 ) , obtain V3 (  )  . set ( x1, y0, z1 ) , obtain V3 (  )  . set ( x1, y1, z1 )  )  ;  free All (  )  ; }"
4215,"public com . anychart . charts .  Cartesian3d animation (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . animation ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4216,"protected byte [  ]  id Submodule (  File directory,  Entry e ) { try  (  Repository submodule Repo =  Submodule Walk . get Submodule Repository ( directory, e . get Name (  ) , repository != null ? repository . get FS (  )  : FS . DETECTED )  )  {     if  ( submodule Repo == null )  {         return zeroid ;      }      Object Id head = submodule Repo . resolve (  Constants . HEAD )  ;      if  ( head == null )  {         return zeroid ;      }     byte [  ]  id = new byte [  Constants . OBJECT_ID_LENGTH ]  ;      head . copy Raw To ( id, 0 )  ;      return id ;  } catch  ( IO Exception exception )  {     return zeroid ;  }}"
4217,"public com . anychart . core . stock . indicators . OBV obv ( com . anychart . data .  Table Mapping mapping, com . anychart . enums .  Stock Series Type series Type ) { return new com . anychart . core . stock . indicators . OBV (  String . format (  Locale . US, js Base + "" . obv ( %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null,  ( series Type != null )  ? series Type . get Js Base (  )  : null )  )  ; }"
4218,public void scale (  Drawable drawble ) { drawble . set Left Width ( drawble . get Left Width (  )  * scale )  ;  drawble . set Right Width ( drawble . get Right Width (  )  * scale )  ;  drawble . set Bottom Height ( drawble . get Bottom Height (  )  * scale )  ;  drawble . set Top Height ( drawble . get Top Height (  )  * scale )  ;  drawble . set Min Width ( drawble . get Min Width (  )  * scale )  ;  drawble . set Min Height ( drawble . get Min Height (  )  * scale )  ; }
4219,"protected static  Type get Parameter Upper Bound ( int index,  Parameterized Type type ) { return  Utils . get Parameter Upper Bound ( index, type )  ; }"
4220,"public void background Stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . background Stroke (  )  ; "" )  ; }"
4221,protected void on Started (  )  throws  Exo Playback Exception{//  Do nothing . }
4222,"public com . anychart . core . stock . scrollerseries .  Stick bottom (  String bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", wrap Quotes ( bottom )  )  )  ;  return this ; }"
4223,private void add Appender To Context (  String max History ) { appender . set Max History ( max History )  ;  appender . set Log Cleaner ( log Cleaner )  ;  appender . start (  )  ;  ch . qos . logback . classic .  Logger test Root = context . get Logger ( SQ Lite Appender Test . class )  ;  test Root . add Appender ( appender )  ; }
4224,"public void save Cropped Image Async (  Uri save Uri ) { save Cropped Image Async ( save Uri,  Bitmap .  Compress Format . JPEG, 90, 0, 0,  Request Size Options . NONE )  ; }"
4225,"public com . anychart . charts .  Cartesian3d id (  String id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . id ( %s )  ; "", wrap Quotes ( id )  )  )  ;  return this ; }"
4226,public void mouse Clicked (  Mouse Event e ) { check Popup ( e )  ;  request Focus (  )  ;  get Caret (  )  . set Visible ( true )  ; }
4227,public static void set Is Dex Opt Needed ( boolean is Dex Opt Needed ) {  Shadow Dex File . is Dex Opt Needed = is Dex Opt Needed ; }
4228,public boolean on Options Item Selected (  Menu Item item ) { int id = item . get Item Id (  )  ;  if  ( id == android . R . id . home )  {     on Back Pressed (  )  ;      return true ;  } if  ( id == R . id . menu_done )  {     image Picker Fragment . on Done (  )  ;      return true ;  } if  ( id == R . id . menu_camera )  {     image Picker Fragment . capture Image With Permission (  )  ;      return true ;  } return super . on Options Item Selected ( item )  ; }
4229,static  Class<?> get Rule Data Type ( final  Annotation rule Annotation ) {  Validate Using validate Using = get Validate Using Annotation ( rule Annotation . annotation Type (  )  )  ;  return get Rule Data Type ( validate Using )  ; }
4230,"Write Stream create Write Stream (  Write Stream .  Callback listener ) { return new  Write Stream ( channel, worker Queue, serializer, listener )  ; }"
4231,"public void from Raw ( byte [  ]  bs ) { from Raw ( bs, 0 )  ; }"
4232,protected void build UI (  ) { if  ( m Card Thumbnail == null )      return ;  if  ( m Is Recycle )      m Loading Error Resource = false ;  // Setup  Inner View setup Inner View (  )  ; }
4233,"public static void ortho Normalize ( @ Non Null @ Size ( min = 2 )   Vector3 [  ]  vecs ) { for  ( int i = 0 ;  i < vecs . length ;  ++i )  {     vecs [ i ]  . normalize (  )  ;      for  ( int j = i + 1 ;  j < vecs . length ;  ++j )  {         vecs [ j ]  . subtract (  Vector3 . project And Create ( vecs [ j ] , vecs [ i ]  )  )  ;      } }}"
4234,"private  Pair< Point,  Point> get Screen Layout (  ) { int status Bar Height =  Light Tool . get Status Bar Height Value (  My App . get Context (  )  )  ;  int nav Bar Height =  Light Tool . get Navigation Bar Height Value (  My App . get Context (  )  )  ;  //  Add cutting positions .   Rect cutout =  Light Tool . get Display Cutout (  )  ;  int top = px Page Edge Distance +  Math . max ( cutout . top, status Bar Height )  ;  int left = px Page Edge Distance + cutout . left ;  int right = px Page Edge Distance + cutout . right ;  int bottom = px Page Edge Distance + px Widget Height + cutout . bottom ;  if  (  Build . VERSION . SDK_INT < 19 )  {     //  Status bar didn't support transparent .      top -= status Bar Height ;      //  Navigation bar didn't support transparent .      bottom += nav Bar Height ;  }  Point top Left = new  Point ( left, top )  ;   Point bottom Right = new  Point ( screen Size . x - right, screen Size . y - bottom )  ;  return new  Pair<> ( top Left, bottom Right )  ; }"
4235,"private boolean does Application Package Name Match Resource Package Name (  String application Package Name, int icon Resource Id ) { try {      Context current = context . create Package Context ( application Package Name, /*flags=*/     0 )  ;       String resource Package Name = current . get Resources (  )  . get Resource Package Name ( icon Resource Id )  ;      return application Package Name . equals ( resource Package Name )  ;  } catch  (  Name Not Found Exception e )  {     //  This should never happen     throw new  Runtime Exception ( e )  ;  }}"
4236,public void set Draw Grid Background ( boolean enabled ) { m Draw Grid Background = enabled ; }
4237,"public  Immersion Bar bar Color ( @ Color Res int bar Color, @ Float Range ( from = 0f, to = 1f )  float bar Alpha ) { return this . bar Color Int (  Context Compat . get Color ( m Activity, bar Color ) , bar Color )  ; }"
4238,"public  Task<T Continuation Result> continue With Task ( @ Non Null  Executor executor, @ Non Null  Continuation< Load Bundle Task Progress,  Task<T Continuation Result>> continuation ) { return delegate . continue With Task ( executor, continuation )  ; }"
4239,"public com . anychart . core . resource . resourcelist .  Image Settings margin (  String value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
4240,public boolean is Send Broadcast After Attach (  ) { return send Broadcast After Attach ; }
4241,"int read Int (  )  throws IO Exception{ m Dex File . read Fully ( tmp Buf, 0, 4 )  ;  if  ( is Big Endian )  {     return  ( tmp Buf [ 3 ]  & 0xff )  |  (  ( tmp Buf [ 2 ]  & 0xff )  << 8 )  |  (  ( tmp Buf [ 1 ]  & 0xff )  << 16 )  |  (  ( tmp Buf [ 0 ]  & 0xff )  << 24 )  ;  } else {     return  ( tmp Buf [ 0 ]  & 0xff )  |  (  ( tmp Buf [ 1 ]  & 0xff )  << 8 )  |  (  ( tmp Buf [ 2 ]  & 0xff )  << 16 )  |  (  ( tmp Buf [ 3 ]  & 0xff )  << 24 )  ;  }}"
4242,"public com . anychart . core . ui .  Callout margin (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
4243,"public com . anychart . charts .  Pert margin (  Number [  ]  margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "",  Arrays . to String ( margin )  )  )  ;  return this ; }"
4244,public static boolean has Version Code ( @ Non Null I Abstract File manifest File )  throws  Stream Exception{ return get Version Code ( manifest File )  != -1 ; }
4245,public void long Cycle (  ) {  Long Cycle Component long Cycle Component =  Dagger Long Cycle_ Long Cycle Component . create (  )  ;  assert That ( long Cycle Component . class1 (  )  )  . is Not Null (  )  ; }
4246,"public void redirect With Dev Setup (  )  throws  Exception{ X509 Trust Manager TRUST_MANAGER = new X509 Trust Manager (  )  {     @ Override     public void check Client Trusted ( X509 Certificate [  ]  x509 Certificates,  String s )  {     }     @ Override     public void check Server Trusted ( X509 Certificate [  ]  x509 Certificates,  String s )  {     }     @ Override     public X509 Certificate [  ]  get Accepted Issuers (  )  {         return new X509 Certificate [ 0 ]  ;      } } ;  client = client . new Builder (  )  . ssl Socket Factory ( client . ssl Socket Factory (  ) , TRUST_MANAGER )  . build (  )  ;  server . enqueue ( new  Mock Response (  )  )  ;  server . enqueue ( new  Mock Response (  )  )  ;  assert200 Http2 Response ( execute ( url ) , server . get Host Name (  )  )  ;   Http Url san Url = url . new Builder (  )  . host ( ""san . com"" )  . build (  )  ;  assert200 Http2 Response ( execute ( san Url ) , ""san . com"" )  ;  assert That ( client . connection Pool (  )  . connection Count (  )  )  . is Equal To ( 2 )  ; }"
4247,public void set Current Focus (  View view ) { current Focus = view ; }
4248,"public static boolean are Equal (  Object a This,  Object a That ) { // System . out . println ( "" Object"" )  ;  return a This == null ? a That == null : a This . equals ( a That )  ; }"
4249,"private int get Degrees From Coords ( float point X, float point Y, boolean force Legal, final  Boolean [  ]  is Inner Circle ) { int current Item = get Current Item Showing (  )  ;  if  ( current Item == HOUR_INDEX )  {     return m Hour Radial Selector View . get Degrees From Coords ( point X, point Y, force Legal, is Inner Circle )  ;  } else if  ( current Item == MINUTE_INDEX )  {     return m Minute Radial Selector View . get Degrees From Coords ( point X, point Y, force Legal, is Inner Circle )  ;  } else {     return -1 ;  }}"
4250,"public boolean make Reflective (  Class<?> clazz,  Class<?> metaobject,  Class<?> metaclass )  throws  Cannot Compile Exception,  Not Found Exception{ return make Reflective ( clazz . get Name (  ) , metaobject . get Name (  ) , metaclass . get Name (  )  )  ; }"
4251,private static boolean _is Network Available (  Context context ) { try {      Connectivity Manager cm =  (  Connectivity Manager )  context . get System Service (  Context . CONNECTIVITY_SERVICE )  ;       Network Info info = cm . get Active Network Info (  )  ;      return null != info && info . is Connected (  )  ;  } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  } return false ; }
4252,"private static  Tree Map load Attribute Map (  Xml Cursor xml ) {  Tree Map result = new  Tree Map (  )  ;  while  ( xml . is Attr (  )  )  {     result . put ( xml . get Text Value (  ) , xml . get Name (  )  )  ;      next Token ( xml )  ;  } return result ; }"
4253,"public static T hold (  View view, int id ) {  Sparse Array< View> view Holder =  (  Sparse Array< View> )  view . get Tag (  )  ;  if  ( view Holder == null )  {     view Holder = new  Sparse Array< View> (  )  ;      view . set Tag ( view Holder )  ;  }  View child View = view Holder . get ( id )  ;  if  ( child View == null )  {     child View = view . find View By Id ( id )  ;      view Holder . put ( id, child View )  ;  } return  ( T )  child View ; }"
4254,"public  String get Message (  ) {  List< String> messages =  Lists . new Array List With Capacity ( m Messages . size (  )  )  ;  for  (  Message message : m Messages )  {      String Builder sb = new  String Builder (  )  ;       List< Source File Position> source File Positions = message . get Source File Positions (  )  ;      if  ( source File Positions . size (  )  > 1 || !source File Positions . get ( 0 )  . equals (  Source File Position . UNKNOWN )  )  {         sb . append (  Joiner . on ( '\t' )  . join ( source File Positions )  )  ;      }      String text = message . get Text (  )  ;      if  ( sb . length (  )  > 0 )  {         sb . append ( ':' )  . append ( ' ' )  ;          // string to the left of a colon .  )          if  ( !text . starts With ( "" Error: "" )  )  {             sb . append ( "" Error: "" )  ;          }     } else if  ( !text . contains ( "" Error: "" )  )  {         sb . append ( "" Error: "" )  ;      }     //    /my/full/path: /my/full/path  (  Permission denied )      if  ( source File Positions . size (  )  == 1 )  {          File file = source File Positions . get ( 0 )  . get File (  )  . get Source File (  )  ;          if  ( file != null )  {              String path = file . get Absolute Path (  )  ;              if  ( text . starts With ( path )  )  {                 int strip Start = path . length (  )  ;                  if  ( text . length (  )  > strip Start && text . char At ( strip Start )  == ':' )  {                     strip Start++ ;                  }                 if  ( text . length (  )  > strip Start && text . char At ( strip Start )  == ' ' )  {                     strip Start++ ;                  }                 text = text . substring ( strip Start )  ;              }         }     }     sb . append ( text )  ;      messages . add ( sb . to String (  )  )  ;  } return  Joiner . on ( '\n' )  . join ( messages )  ; }"
4255,private long jitter Delay Ms (  ) { return  ( long )   (  (  Math . random (  )  - 0 . 5 )  * current Base Ms )  ; }
4256,"public  Model For R Processing Test_ on Bind (  On Model Bound Listener< Model For R Processing Test_,  Object> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
4257,"public  Immutable Map< Component Implementation,  Field Spec> component Fields By Implementation (  ) { return component Fields By Implementation ; }"
4258,public  Result get Result (  ) { return result ; }
4259,"public void set On Hierarchy Change Listener (  On Hierarchy Change Listener listener ) { throw new  Runtime Exception ( "" Stub!"" )  ; }"
4260,"public com . anychart . charts .  Pie connector Stroke ( com . anychart . graphics . vector .  Stroke value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . connector Stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4261,public void set Glyph Data Format ( short glyph Data Format ) { this . glyph Data Format = glyph Data Format ; }
4262,"public void register Safe Configuration (  List< Sax Event> event List ) { context . put Object ( SAFE_JORAN_CONFIGURATION, event List )  ; }"
4263,"public void disallow Ambiguous Simple Types (  )  throws  No Such Field Exception{  Type type =  Test Fields . class . get Field ( ""object"" )  . get Generic Type (  )  ;  type Coercer Factory . type Coercer For Type (  Type Token . of ( type )  )  ; }"
4264,"public static double [  ]  v3 Combine ( double [  ]  a, double [  ]  b, double a Scale, double b Scale ) { return new double [  ]  { a Scale * a [ 0 ]  + b Scale * b [ 0 ] , a Scale * a [ 1 ]  + b Scale * b [ 1 ] , a Scale * a [ 2 ]  + b Scale * b [ 2 ]  } ; }"
4265,"protected void on Model Bound (  Epoxy View Holder holder,  Epoxy Model<?> model, int position, @ Nullable  List< Object> payloads ) { on Model Bound ( holder, model, position )  ; }"
4266,"public com . anychart . charts .  Stock zoom Marquee Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . zoom Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4267,"public void blend With (  Skeletal Animation Sequence other Sequence, double blend Factor )  throws  Skeletal Animation Exception{ int num Frames =  Math . max ( m Num Frames, other Sequence . get Num Frames (  )  )  ;   List< Skeletal Animation Frame> new Frames = new  Array List< Skeletal Animation Frame> (  )  ;  for  ( int i = 0 ;  i < num Frames ;  i++ )  {     if  ( i >= other Sequence . get Num Frames (  )  )          break ;      else if  ( i >= m Num Frames )  {         new Frames . add ( other Sequence . get Frame ( i )  )  ;          continue ;      }      Skeletal Animation Frame this Frame = get Frame ( i )  ;       Skeletal Animation Frame other Frame = other Sequence . get Frame ( i )  ;       Skeletal Animation Frame new Frame = new  Skeletal Animation Frame (  )  ;      int num Joints = this Frame . get Skeleton (  )  . get Joints (  )  . length ;      if  ( num Joints != other Frame . get Skeleton (  )  . get Joints (  )  . length )          throw new  Skeletal Animation Object3 D .  Skeletal Animation Exception ( "" The animation sequences you want to blend have different skeletons . "" )  ;       Skeleton Joint [  ]  new Joints = new  Skeleton Joint [ num Joints ]  ;      for  ( int j = 0 ;  j < num Joints ;  ++j )  {          Skeleton Joint this Joint = this Frame . get Skeleton (  )  . get Joint ( j )  ;           Skeleton Joint other Joint = other Frame . get Skeleton (  )  . get Joint ( j )  ;           Skeleton Joint new Joint = new  Skeleton Joint (  )  ;          new Joint . copy All From ( this Joint )  ;          new Joint . get Position (  )  . lerp And Set ( this Joint . get Position (  ) , other Joint . get Position (  ) , blend Factor )  ;          new Joint . get Orientation (  )  . slerp ( this Joint . get Orientation (  ) , other Joint . get Orientation (  ) , blend Factor )  ;          new Joints [ j ]  = new Joint ;      }     new Frame . get Skeleton (  )  . set Joints ( new Joints )  ;      new Frames . add ( new Frame )  ;  } m Frames = new Frames . to Array ( new  Skeletal Animation Frame [ 0 ]  )  ;  m Num Frames = new Frames . size (  )  ;  new Frames . clear (  )  ; }"
4268,public void set X Max Extent ( short x Max Extent ) { this . x Max Extent = x Max Extent ; }
4269,public int get Target Address (  ) { return target . get Address (  )  ; }
4270,"public com . anychart . core . cartesian . series .  Area3d top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
4271,"public  Render Core Test Rule render (  ) { check Root Host (  )  ;  final  View root Host View =  (  View )  get Root Host (  )  ;  render State = get Render State (  )  ;  render State . set Tree ( new  Simple Lazy Tree ( get Root Node (  )  )  )  ;  get Root Host (  )  . set Render State ( render State )  ;  root Host View . measure ( get Width Spec (  ) , get Height Spec (  )  )  ;  root Host View . layout ( 0, 0, root Host View . get Measured Width (  ) , root Host View . get Measured Height (  )  )  ;  return this ; }"
4272,"public  Model With Data Binding Without Donothash Binding Model_ on Bind (  On Model Bound Listener< Model With Data Binding Without Donothash Binding Model_,  Data Binding Epoxy Model .  Data Binding Holder> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
4273,"public  Immutable Set< String> get Booted Simulators Udids (  ) {  Immutable Set .  Builder< String> booted Simulator Udids =  Immutable Set . builder (  )  ;   Immutable Set< Apple Device> all Targets = get Simulators (  )  ;  for  (  Apple Device target : all Targets )  {     if  ( target . get State (  )  . to Lower Case (  )  . equals ( ""booted"" )  && target . get Type (  )  . equals ( ""simulator"" )  )  {         booted Simulator Udids . add ( target . get Udid (  )  )  ;      } } return booted Simulator Udids . build (  )  ; }"
4274,public boolean clear And Remove ( @ Nullable  Request request ) { if  ( request == null )  {     // for its owner .      return true ;  } boolean is Owned By Us = requests . remove ( request )  ;  //  Avoid short circuiting .  is Owned By Us = pending Requests . remove ( request )  || is Owned By Us ;  if  ( is Owned By Us )  {     request . clear (  )  ;  } return is Owned By Us ; }
4275,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
4276,public void clear Permissions (  ) { properties . clear Permissions (  )  ; }
4277,"public com . anychart . core .  State Settings hovered (  ) { return new com . anychart . core .  State Settings ( js Base + "" . hovered (  ) "" )  ; }"
4278,"protected void setup Listeners (  ) { // Swipe listener if  ( m Card . is Swipeable (  )  )  {     this . set On Touch Listener ( new  Swipe Dismiss View Touch Listener ( this, m Card, new  Swipe Dismiss View Touch Listener .  Dismiss Callbacks (  )  {         @ Override         public boolean can Dismiss (  Card card )  {             return card . is Swipeable (  )  ;          }         @ Override         public void on Dismiss (  Card View Wrapper card View,  Card card )  {             final  View Group vg =  (  View Group )   (  (  (  View )  card View )  . get Parent (  )  )  ;              if  ( vg != null )  {                 vg . remove View (  (  View )  card View )  ;                  card . on Swipe Card (  )  ;              }         }     } )  )  ;  } else {     this . set On Touch Listener ( null )  ;  } // On Click listeners and partial listener // Reset  Partial  Listeners reset Partial Listeners (  )  ;  if  ( m Card . is Clickable (  )  )  {     // Set the on Click Listener     if  ( !m Card . is Multi Choice Enabled (  )  )  {         if  ( m Card . get On Click Listener (  )  != null )  {             this . set On Click Listener ( new  On Click Listener (  )  {                 @ Override                 public void on Click (  View v )  {                     if  ( m Card . get On Click Listener (  )  != null )                          m Card . get On Click Listener (  )  . on Click ( m Card, v )  ;                  }             } )  ;          // Prevent multiple events         //if  ( !m Card . is Swipeable (  )  && m Card . get On Swipe Listener (  )  == null )  {         //    this . set Clickable ( true )  ;          //}         } else {              Hash Map< Integer,  Card .  On Card Click Listener> m Multiple On Click Listner = m Card . get Multiple On Click Listener (  )  ;              if  ( m Multiple On Click Listner != null && !m Multiple On Click Listner . is Empty (  )  )  {                 for  ( int key : m Multiple On Click Listner . key Set (  )  )  {                      View view Clickable = decode Area On Click Listener ( key )  ;                      final  Card .  On Card Click Listener m Listener = m Multiple On Click Listner . get ( key )  ;                      if  ( view Clickable != null )  {                         // Add listener to this view                         view Clickable . set On Click Listener ( new  On Click Listener (  )  {                             @ Override                             public void on Click (  View v )  {                                 // Callback to card listener                                 if  ( m Listener != null )                                      m Listener . on Click ( m Card, v )  ;                              }                         } )  ;                          // Add  Selector to this view                         if  ( key >  Card . CLICK_LISTENER_ALL_VIEW )  {                             m Helper Impl . set Background ( view Clickable, m Helper Impl . get Resource From Attrs ( get Context (  ) , android . R . attr . selectable Item Background )  )  ;                          }                     }                 }             } else {                 // There aren't listners                 this . set Clickable ( false )  ;              }         }     } } else {     this . set Clickable ( false )  ;  } // Long Click listener if  ( m Card . is Long Clickable (  )  )  {     this . set On Long Click Listener ( new  On Long Click Listener (  )  {         @ Override         public boolean on Long Click (  View v )  {             if  ( m Card . get On Long Click Listener (  )  != null )                  return m Card . get On Long Click Listener (  )  . on Long Click ( m Card, v )  ;              return false ;          }     } )  ;  } else {     this . set Long Clickable ( false )  ;  }}"
4279,"public final int hash Code (  ) { throw new  Unsupported Operation Exception ( "" Subject . hash Code (  )  is not supported . "" )  ; }"
4280,"public  Map< String,  List< Client Request>> requests (  ) { return requests ; }"
4281,public boolean is Enabled (  Repository db ) { return false ; }
4282,"public void send Danmaku (  String text, boolean is Live ) { if  ( !m Is Enable Danmaku )  {     throw new  Runtime Exception ( "" Danmaku is disable, use enable Danmaku (  )  first"" )  ;  } if  (  Text Utils . is Empty ( text )  )  {      Toast . make Text ( m Attach Activity, ""内容为空"",  Toast . LENGTH_SHORT )  . show (  )  ;      return ;  } if  ( !m Danmaku View . is Prepared (  )  )  {      Toast . make Text ( m Attach Activity, ""弹幕还没准备好"",  Toast . LENGTH_SHORT )  . show (  )  ;      return ;  }  Base Danmaku danmaku = m Danmaku Context . m Danmaku Factory . create Danmaku ( m Danmaku Type )  ;  if  ( danmaku == null || m Danmaku View == null )  {     return ;  } if  ( m Danmaku Text Size == INVALID_VALUE )  {     m Danmaku Text Size = 25f *  ( m Danmaku Parser . get Displayer (  )  . get Density (  )  - 0 . 6f )  ;  } danmaku . text = text ;  danmaku . padding = 5 ;  danmaku . is Live = is Live ;  // 可能会被各种过滤器过滤并隐藏显示 danmaku . priority = 0 ;  danmaku . text Size = m Danmaku Text Size ;  danmaku . text Color = m Danmaku Text Color ;  danmaku . underline Color =  Color . GREEN ;  danmaku . set Time ( m Danmaku View . get Current Time (  )  + 500 )  ;  m Danmaku View . add Danmaku ( danmaku )  ;  if  ( m Danmaku Listener != null )  {     if  ( m Danmaku Converter != null )  {         m Danmaku Listener . on Data Obtain ( m Danmaku Converter . convert Danmaku ( danmaku )  )  ;      } else {         m Danmaku Listener . on Data Obtain ( danmaku )  ;      } }}"
4283,"public static  Observable< Integer> countdown ( int time ) { if  ( time < 0 )  {     time = 0 ;  } final int count Time = time ;  return  Observable . interval ( 0, 1,  Time Unit . SECONDS )  . map ( new  Func1< Long,  Integer> (  )  {     @ Override     public  Integer call (  Long increase Time )  {         return count Time - increase Time . int Value (  )  ;      } } )  . take ( count Time + 1 )  . subscribe On (  Schedulers . io (  )  )  . unsubscribe On (  Schedulers . io (  )  )  . subscribe On (  Android Schedulers . main Thread (  )  )  . observe On (  Android Schedulers . main Thread (  )  )  ; }"
4284,"public com . anychart . charts .  Waterfall palette (  String [  ]  settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "", array To String Wrap Quotes ( settings )  )  )  ;  return this ; }"
4285,"public void manage ( final  Disposable disposable ) { if  ( model == null )      throw new  Gdx Runtime Exception ( "" Call begin (  )  first"" )  ;  model . manage Disposable ( disposable )  ; }"
4286,"public  Stream Configuration Map Builder add Output Size ( int format,  Size output Size ) { if  ( !output Format With Supported Size . contains Key ( format )  )  {      Collection< Size> output Sizes = new  Array List<> (  )  ;      output Format With Supported Size . put ( format, output Sizes )  ;  } output Format With Supported Size . get ( format )  . add ( output Size )  ;  return this ; }"
4287,"public static void show Tooltip (  Component Context c, final  Popup Window popup Window,  String anchor Key,  Tooltip Position tooltip Position, int x Offset, int y Offset ) { show Tooltip ( c, new  Deprecated Litho Tooltip (  )  {     @ Override     public void show Bottom Left (  View anchor, int x Offset, int y Offset )  {         popup Window . show As Drop Down ( anchor, x Offset, y Offset )  ;      } }, anchor Key, tooltip Position, x Offset, y Offset )  ; }"
4288,"public void to Json (  Boolean stringify ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Json ( %s )  ; "", stringify )  )  ; }"
4289,public  Maps Card set Location (  Lat Lng .  .  .  lat Lngs ) { multiple Marker = true ;  single Marker = false ;  lat Lng Array = lat Lngs ;  return this ; }
4290,"public com . anychart . core . stock . scrollerseries .  Spline stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4291,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
4292,"public com . anychart . charts .  Cartesian legend (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . legend ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4293,"public com . anychart . core . ui .  Crosshair x Label (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Label ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
4294,public int get Row Size (  ) { return row Size ; }
4295,public final byte [  ]  get Descriptor Value ( @ Non Null final  Bluetooth Gatt Descriptor server Descriptor ) { if  ( descriptor Values != null && descriptor Values . contains Key ( server Descriptor )  )      return descriptor Values . get ( server Descriptor )  ;  return server Descriptor . get Value (  )  ; }
4296,"public static  Deps Supplier build Deps Supplier (  Build Rule rule,  Source Path Rule Finder rule Finder ) { return new  Deps Supplier ( rule, rule Finder )  ; }"
4297,"private  Map< Integer,  Array List< Integer>> deserialize Exclusion List ( @ Non Null final  Json Array network Exclusions ) { final  Map< Integer,  Array List< Integer>> exclusion List = new  Hash Map<> (  )  ;   Json Object exclusion ;  int iv Index ;   Array List< Integer> addresses ;  for  (  Json Element element : network Exclusions )  {     addresses = new  Array List<> (  )  ;      exclusion = element . get As Json Object (  )  ;      iv Index = exclusion . get ( ""iv Index"" )  . get As Int (  )  ;      for  (  Json Element address : exclusion . get ( ""addresses"" )  . get As Json Array (  )  )  {         addresses . add (  Integer . parse Int ( address . get As String (  ) , 16 )  )  ;      }     exclusion List . put ( iv Index, addresses )  ;  } return exclusion List ; }"
4298,public final void contains Any In (  Object [  ]  expected ) { contains Any In ( as List ( expected )  )  ; }
4299,public boolean is Pinch Zoom Enabled (  ) { return m Pinch Zoom Enabled ; }
4300,public void set Enabled ( boolean enabled ) { explicitly Disabled = true ;  update Like State And Layout (  )  ; }
4301,"static JSON Object invalid Feature No Properties (  )  throws  Exception{ return new JSON Object ( ""{\n"" + ""  \""type\"": \"" Feature\"",\n"" + ""  \""geometry\"": {\n"" + ""    \""type\"": \"" Point\"",\n"" + ""    \""coordinates\"":  [ 125 . 6, 10 . 1 ] \n"" + ""  }\n"" + ""}"" )  ; }"
4302,"public com . anychart . scales .  Stock Scatter Date Time ticks Count (  Number count ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . ticks Count ( %s )  ; "", count )  )  ;  return this ; }"
4303,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
4304,"public SQ Lite Log Cleaner get Log Cleaner (  ) { if  ( this . log Cleaner == null )  {     final  Clock this Clock = this . clock ;      this . log Cleaner = new SQ Lite Log Cleaner (  )  {         public void perform Log Cleanup ( SQ Lite Database db,  Duration expiry )  {             final long expiry Ms = this Clock . current Time Millis (  )  - expiry . get Milliseconds (  )  ;              final  String delete Expired Logs SQL = SQL Builder . build Delete Expired Logs SQL ( db Name Resolver, expiry Ms )  ;              db . exec SQL ( delete Expired Logs SQL )  ;          }     } ;  } return this . log Cleaner ; }"
4305,public static int get Mode ( int size Spec ) { return  View .  Measure Spec . get Mode ( size Spec )  ; }
4306,"public void put (  String key,  String value ) {  File file = m Cache . new File ( key )  ;   Buffered Writer out = null ;  try {     out = new  Buffered Writer ( new  File Writer ( file ) , 1024 )  ;      out . write ( value )  ;  } catch  ( IO Exception e )  {     e . print Stack Trace (  )  ;  } finally {     if  ( out != null )  {         try {             out . flush (  )  ;              out . close (  )  ;          } catch  ( IO Exception e )  {             e . print Stack Trace (  )  ;          }     }     m Cache . put ( file )  ;  }}"
4307,public static  System Reader get Instance (  ) { return INSTANCE ; }
4308,"public T add ( T node, float value ) { node . value = value ;  return add ( node )  ; }"
4309,"public  Realm Query<E> is Not Empty (  String field Name ) { realm . check If Valid (  )  ;   Field Descriptor fd = schema . get Field Descriptors ( field Name,  Realm Field Type . STRING,  Realm Field Type . BINARY,  Realm Field Type . LIST,  Realm Field Type . LINKING_OBJECTS )  ;  this . query . is Not Empty ( fd . get Column Keys (  ) , fd . get Native Table Pointers (  )  )  ;  return this ; }"
4310,"public  Identify pre Insert (  String property,  String value ) { add To User Properties (  Constants . AMP_OP_PREINSERT, property, value )  ;  return this ; }"
4311,public  Block block (  ) { return block ; }
4312,public  Builder dim Amount ( float dim Amount ) { this . dim Amount = dim Amount ;  return this ; }
4313,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
4314,"public  Itunes Connect Analytics Parameters .  Builder set Provider Token ( @ Non Null  String provider Token ) { parameters . put String ( KEY_ITUNES_CONNECT_PT, provider Token )  ;  return this ; }"
4315,public  Instant last Modified Instant (  File f ) { return  File Utils . last Modified Instant ( f . to Path (  )  )  ; }
4316,"public com . anychart . core . polar . series .  Continuous Base color Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
4317,"public static int get Color (  String value ) { if  ( value != null )  {     if  ( value . starts With ( ""#"" )  == false )  {         throw new  Number Format Exception (  String . format ( "" Color value '%s' must start with #"", value )  )  ;      }     value = value . substring ( 1 )  ;      // make sure it's not longer than 32bit     if  ( value . length (  )  > 8 )  {         throw new  Number Format Exception (  String . format ( "" Color value '%s' is too long .   Format is either"" + ""#AARRGGBB, #RRGGBB, #RGB, or #ARGB"", value )  )  ;      }     if  ( value . length (  )  == 3 )  {         // RGB format         char [  ]  color = new char [ 8 ]  ;          color [ 0 ]  = color [ 1 ]  = 'F' ;          color [ 2 ]  = color [ 3 ]  = value . char At ( 0 )  ;          color [ 4 ]  = color [ 5 ]  = value . char At ( 1 )  ;          color [ 6 ]  = color [ 7 ]  = value . char At ( 2 )  ;          value = new  String ( color )  ;      } else if  ( value . length (  )  == 4 )  {         // ARGB format         char [  ]  color = new char [ 8 ]  ;          color [ 0 ]  = color [ 1 ]  = value . char At ( 0 )  ;          color [ 2 ]  = color [ 3 ]  = value . char At ( 1 )  ;          color [ 4 ]  = color [ 5 ]  = value . char At ( 2 )  ;          color [ 6 ]  = color [ 7 ]  = value . char At ( 3 )  ;          value = new  String ( color )  ;      } else if  ( value . length (  )  == 6 )  {         value = ""FF"" + value ;      }     // dealing with 32 bit values .      return  ( int )   Long . parse Long ( value, 16 )  ;  } throw new  Number Format Exception (  )  ; }"
4318,"public com . anychart . core . ui .  Labels Factory max Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . max Labels (  ) "" )  ; }"
4319,"protected  Path get Outline (  String name, float width ) { // first find the index of this name int index = get Name Index ( name )  ;  // now find the glyph with that name for  ( int i = 0 ;  i < glyphnames . length ;  i++ )  {     if  ( glyphnames [ i ]  == index )  {         return read Glyph ( charstringbase, i )  ;      } } // not found -- return the unknown glyph return read Glyph ( charstringbase, 0 )  ; }"
4320,private boolean is Images Ready (  ) {  List< String> list = get New Image Url List (  )  ;  boolean ret = null == list || 0 == list . size (  )  ;  if  ( !ret )  {     prepared Images ( list )  ;  } return ret ; }
4321,"public static  List< Method> get Set Count Duplicate Initializing Methods (  ) { return  Arrays . as List ( get Method ( ""test Set Count_three To Three_remove Supported"" ) , get Method ( ""test Set Count_three To Zero_supported"" ) , get Method ( ""test Set Count_three To One_supported"" )  )  ; }"
4322,"public  Data Source< Void> prefetch To Encoded Cache (  Image Request image Request,  Object caller Context ) { return prefetch To Encoded Cache ( image Request, caller Context,  Priority . MEDIUM )  ; }"
4323,public static  Immutable Range Set<C> of (  ) { return  (  Immutable Range Set<C> )  EMPTY ; }
4324,public void set Visibility Listener (  Visibility Listener listener ) { this . visibility Listener = listener ; }
4325,public static P Stream Provider as Updates (  ) { return new  Device Event Updates Provider (  )  ; }
4326,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
4327,"public com . anychart . charts .  Sunburst leaves (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . leaves ( %s )  ; "", settings )  )  ;  return this ; }"
4328,public  String get Identifier (  ) { return ID3v23 Frames . FRAME_ID_V3_TYER ; }
4329,Fluent Iterable< String> javacopts (  ) { return  Fluent Iterable . from ( javacopts )  ; }
4330,"public void test Rev Walk Carry Custom_ Slow Clock (  )  throws  Exception{ final  Rev Commit a = commit (  )  ;  final  Rev Commit b = commit ( a )  ;  final  Rev Commit c = commit ( a )  ;  final  Rev Commit d = commit ( c )  ;  final  Rev Commit e = commit ( 0, b, d )  ;  mark Start ( d )  ;  mark Start ( e )  ;   Rev Flag custom Flag = rw . new Flag ( ""CUSTOM"" )  ;  e . flags |= custom Flag . mask ;  rw . carry ( custom Flag )  ;  // the merge commit has the flag and it should be carried over -> every // commit should have this flag int count = 0 ;  for  (  Rev Commit cm : rw )  {     assert True ( "" Found a commit which doesn't have the custom flag: "" + cm, cm . has ( custom Flag )  )  ;      count++ ;  } assert True ( "" Didn't walked over all commits"", count == 5 )  ; }"
4331,"private  Optional< Path> get Output Path For Target Node (  Target Node<?> target Node,  Build Target With Outputs target With Outputs ) {  Base Description<?> description = target Node . get Description (  )  ;   Build Target build Target = target Node . get Build Target (  )  ;   Project Filesystem filesystem = target Node . get Filesystem (  )  ;  if  ( description instanceof  Jar Genrule Description )  {     return get Output Path For Jar Genrule ( build Target, filesystem )  ;  } else if  ( description instanceof  Abstract Genrule Description )  {     return get Output Path For Genrule (  (  Genrule Description Arg )  target Node . get Constructor Arg (  ) , filesystem, target With Outputs )  ;  } else if  ( description instanceof  Java Binary Description )  {     return get Output Path For Java Binary ( build Target, filesystem )  ;  } else if  ( description instanceof  Android Binary Description )  {     return get Output Path For Android Binary ( build Target, filesystem )  ;  } else if  ( description instanceof  Android Resource Description )  {     return get Output Path For Android Resource ( build Target, filesystem )  ;  } else if  ( description instanceof  Android Build Config Description )  {     //  Android Build Config is just a library made of generated sources under the hood     return get Output Path From Java Target Node ( target Node, build Target, filesystem )  ;  } else if  ( description instanceof  Prebuilt Jar Description )  {     return get Output Path For Prebuilt Jar (  (  Prebuilt Jar Description Arg )  target Node . get Constructor Arg (  ) , build Target, filesystem )  ;  } else if  ( is Jvm Language Target Node ( target Node )  )  {     // the implementation for these languages here     return get Output Path From Java Target Node ( target Node, build Target, filesystem )  ;  } else if  ( description instanceof  Android Manifest Description )  {     return  Optional . of (  Build Target Paths . get Gen Path ( filesystem, build Target, "" Android Manifest__%s__ . xml"" )  )  ;  } else if  ( is Jvm Test Target Node ( target Node )  )  {     //  Test targets compile their code into a standard library under the hood using the     // TESTS_FLAVOR      Build Target test Target = build Target . with Appended Flavors (  Java Test . COMPILED_TESTS_LIBRARY_FLAVOR )  ;      return get Output Path From Java Target Node ( target Node, test Target, filesystem )  ;  } else if  ( description instanceof  Export File Description )  {     return get Output Path For Export File (  (  Export File Description Arg )  target Node . get Constructor Arg (  ) , build Target, filesystem )  ;  } else if  ( description instanceof  Remote File Description )  {     return get Output Path For Remote File (  (  Remote File Description Arg )  target Node . get Constructor Arg (  ) , build Target, filesystem )  ;  } else if  ( description instanceof  Filegroup Description )  {     return get Output Path For Filegroup (  (  File Group Description Arg )  target Node . get Constructor Arg (  ) , build Target, filesystem )  ;  } else if  ( description instanceof  Zip File Description )  {     return get Output Path For Zipfile (  (  Zip File Description Arg )  target Node . get Constructor Arg (  ) , build Target, filesystem )  ;  } else {     // instead opting to only implement those relevant for  Ij Project     return  Optional . empty (  )  ;  }}"
4332,"private static int decode Digit ( int [  ]  counters )  throws  Not Found Exception{ // worst variance we'll accept float best Variance = MAX_AVG_VARIANCE ;  int best Match = -1 ;  int max = PATTERNS . length ;  for  ( int i = 0 ;  i < max ;  i++ )  {     int [  ]  pattern = PATTERNS [ i ]  ;      float variance = pattern Match Variance ( counters, pattern, MAX_INDIVIDUAL_VARIANCE )  ;      if  ( variance < best Variance )  {         best Variance = variance ;          best Match = i ;      } else if  ( variance == best Variance )  {         // if we find a second 'best match' with the same variance, we can not reliably report to have a suitable match         best Match = -1 ;      } } if  ( best Match >= 0 )  {     return best Match % 10 ;  } else {     throw  Not Found Exception . get Not Found Instance (  )  ;  }}"
4333,public static void set Suppress Set Error Stack Trace ( boolean suppress Trace ) {  Suppress Set Error Stack Trace = suppress Trace ; }
4334,public void set Font Direction Hint ( short font Direction Hint ) { this . font Direction Hint = font Direction Hint ; }
4335,"public void max Point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Point Width (  )  ; "" )  ; }"
4336,"public com . anychart . core . cartesian . series .  Continuous Range Base markers (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4337,"public  Todo_ Updater update Todo (  ) { return new  Todo_ Updater ( connection,  Todo_ Schema . INSTANCE )  ; }"
4338,public void set Location Info ( boolean flag ) { location Info = flag ; }
4339,"private int fit Plan For Range ( int rop Reg,  Normal Ssa Insn insn, int [  ]  categories For Index,  Bit Set out Moves Required ) {  Register Spec List sources = insn . get Sources (  )  ;  int sz Sources = sources . size (  )  ;  int fit Width = 0 ;   Int Set live Out = insn . get Block (  )  . get Live Out Regs (  )  ;   Register Spec List live Out Specs = ssa Set To Specs ( live Out )  ;  //  An SSA reg may only be mapped into a range once .   Bit Set seen = new  Bit Set ( ssa Meth . get Reg Count (  )  )  ;  for  ( int i = 0 ;  i < sz Sources ;  i++ )  {      Register Spec ssa Spec = sources . get ( i )  ;      int ssa Reg = ssa Spec . get Reg (  )  ;      int category = categories For Index [ i ]  ;      if  ( i != 0 )  {         rop Reg += categories For Index [ i - 1 ]  ;      }     if  ( ssa Regs Mapped . get ( ssa Reg )  && mapper . old To New ( ssa Reg )  == rop Reg )  {         //  This is a register that is already mapped appropriately .          fit Width += category ;      } else if  ( range Contains Reserved ( rop Reg, category )  )  {         fit Width = -1 ;          break ;      } else if  ( !ssa Regs Mapped . get ( ssa Reg )  && can Map Reg ( ssa Spec, rop Reg )  && !seen . get ( ssa Reg )  )  {         //  This is a register that can be mapped appropriately .          fit Width += category ;      } else if  ( !mapper . are Any Pinned ( live Out Specs, rop Reg, category )  && !mapper . are Any Pinned ( sources, rop Reg, category )  )  {         /*              *  This is a source that can be moved .   We can insert a              * move as long as:              *              *   * no SSA register pinned to the desired rop reg              *     is live out on the block              *              *   * no SSA register pinned to desired rop reg is              *     a source of this insn  ( since this may require              *     overlapping moves, which we can't presently handle )               */         out Moves Required . set ( i )  ;      } else {         fit Width = -1 ;          break ;      }     seen . set ( ssa Reg )  ;  } return fit Width ; }"
4340,"public void height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . height (  )  ; "" )  ; }"
4341,public void set Manage Block Numbers Intent (  Intent intent ) { this . manage Block Numbers Intent = intent ; }
4342,public  Fragment get Item At ( int position ) { return m Pages . get ( position )  ; }
4343,public  Java Script Context Holder get Java Script Context Holder (  ) { return m Catalyst Instance . get Java Script Context Holder (  )  ; }
4344,"public boolean is Add Supported ( final  Metadata Descriptor descriptor ) { boolean result = get Container Type (  )  . check Constraints ( descriptor . get Name (  ) , descriptor . get Raw Data (  ) , descriptor . get Type (  ) , descriptor . get Stream Number (  ) , descriptor . get Language Index (  )  )  == null ;  //  Now check if there is already a value contained .  if  ( result && !get Container Type (  )  . is Multi Valued (  )  )  {     synchronized  ( this . perf Point )  {         final  List< Metadata Descriptor> list = this . descriptors . get ( this . perf Point . set Descriptor ( descriptor )  )  ;          if  ( list != null )  {             result = list . is Empty (  )  ;          }     } } return result ; }"
4345,"public com . anychart . core . ui .  Timeline row Even Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Even Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
4346,"public static  String generate Build Config Dot Java (  Unflavored Build Target source,  String java Package ) { return generate Build Config Dot Java ( source, java Package, /* use Constant Expressions */ false,  Build Config Fields . of (  )  )  ; }"
4347,public static long extract Expandable Child Id Part ( long composed Id ) { if  (  ( composed Id ==  Recycler View . NO_ID )  || is Expandable Group ( composed Id )  )  {     return  Recycler View . NO_ID ;  } return  ( composed Id <<  ( 64 - BIT_WIDTH_CHILD_ID - BIT_OFFSET_CHILD_ID )  )  >>  ( 64 - BIT_WIDTH_CHILD_ID )  ; }
4348,"private void choose Camera (  ) { for  ( int i = 0, count =  Camera . get Number Of Cameras (  )  ;  i < count ;  i++ )  {      Camera . get Camera Info ( i, m Camera Info )  ;      if  ( m Camera Info . facing == m Facing )  {         m Camera Id = i ;          return ;      } } m Camera Id = INVALID_CAMERA_ID ; }"
4349,"public  Edit List diff (  Sequence Comparator<? super S> cmp, S a, S b ) {  Edit region = cmp . reduce Common Start End ( a, b, cover Edit ( a, b )  )  ;  switch ( region . get Type (  )  )  {     case INSERT:     case DELETE:         return  Edit List . singleton ( region )  ;      case REPLACE:         {             if  ( region . get Length A (  )  == 1 && region . get Length B (  )  == 1 )                  return  Edit List . singleton ( region )  ;               Subsequence Comparator<S> cs = new  Subsequence Comparator<> ( cmp )  ;               Subsequence<S> as =  Subsequence . a ( a, region )  ;               Subsequence<S> bs =  Subsequence . b ( b, region )  ;               Edit List e =  Subsequence . to Base ( diff Non Common ( cs, as, bs ) , as, bs )  ;              return normalize ( cmp, e, a, b )  ;          }     case EMPTY:         return new  Edit List ( 0 )  ;      default:         throw new  Illegal State Exception (  )  ;  }}"
4350,protected int get Mtu (  ) { return request Handler . get Mtu (  )  ; }
4351,public float get Bottom (  ) { return bottom ; }
4352,"public com . anychart . core . resource . resourcelist .  Tags Settings text Direction ( com . anychart . graphics . vector . text .  Direction type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Direction ( %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
4353,public boolean is Force Update (  ) { return force Update ; }
4354,public void set Ip Address (  String ip Address ) { this . ip Address = ip Address ; }
4355,public boolean get Value (  ) { return  ( get Int Bits (  )  == 0 )  ? false : true ; }
4356,public int get Header Release Min Distance (  ) { return header Release Min Distance ; }
4357,"public com . anychart . core . annotations .  Infinite Line stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4358,"static boolean get Container Visibility (  Kml Container kml Container, boolean is Parent Container Visible ) { boolean is Child Container Visible = true ;  if  ( kml Container . has Property ( ""visibility"" )  )  {      String placemark Visibility = kml Container . get Property ( ""visibility"" )  ;      if  (  Integer . parse Int ( placemark Visibility )  == 0 )  {         is Child Container Visible = false ;      } } return  ( is Parent Container Visible && is Child Container Visible )  ; }"
4359,"public com . anychart . core .  Separate Chart select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
4360,public  Object get Value (  ) { return  ( this . property Change Event != null ? this . property Change Event . get New Value (  )  : null )  ; }
4361,public double get Minor Ticks Spacing (  ) { return m Minor Tick Spacing ; }
4362,"public com . anychart . charts .  Pie legend (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . legend ( %s )  ; "", settings )  )  ;  return this ; }"
4363,public T1 get Value1 (  ) { return value1 ; }
4364,"public void reset ( byte [  ]  data ) { reset ( data, data . length )  ; }"
4365,private  Path as Default (  Path path ) { if  ( path instanceof  Buck Unix Path )  {     return  (  (  Buck Unix Path )  path )  . as Default (  )  ;  } return path ; }
4366,"public  Realm Query<E> equal To (  String field Name, @ Nullable  Boolean value ) { realm . check If Valid (  )  ;  return equal To Without Thread Validation ( field Name, value )  ; }"
4367,"public void get Feedback Widget Data (  Countly Feedback Widget widget Info,  Retrieve Feedback Widget Data callback ) { synchronized  ( _cly )  {     L . i ( "" [  Feedback ]   Trying to retrieve feedback widget data"" )  ;      get Feedback Widget Data Internal ( widget Info, callback )  ;  }}"
4368,void execute (  )  throws IO Exception{ out . close (  )  ;  if  ( conn == null )      send Request (  )  ;  open Response (  )  ;  in . add ( open Input Stream ( conn )  )  ; }
4369,"public void on Change (  String field To Select,  Function<T Value,  Void> callback ) { this . output (  Callbacks . on Field Change ( field To Select, callback )  )  ; }"
4370,"public com . anychart . charts .  Pie stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4371,"public com . anychart . core . lineargauge . pointers .  Tank hatch Fill (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "", enabled )  )  ;  return this ; }"
4372,public  Sync Handle Builder of Type (  Replication Type replication Type ) { this . replication Type = replication Type ;  return this ; }
4373,public static P Stream Transformation group By (  String group Field ) { return new  By Field Grouper ( group Field )  ; }
4374,"public static  Cursor query (  Context c,  Uri uri,  String [  ]  projection,  String selection,  String [  ]  selection Args,  String sort Order ) {  Content Provider Client client =  Plugin Provider Client . acquire Content Provider Client ( c, """" )  ;  if  ( client != null )  {     try {          Uri to Uri = to Called Uri ( c, uri )  ;          return client . query ( to Uri, projection, selection, selection Args, sort Order )  ;      } catch  (  Remote Exception e )  {         if  (  Log Debug . LOG )  {              Log . d ( TAG, e . to String (  )  )  ;          }     } } if  (  Log Debug . LOG )  {      Log . d ( TAG,  String . format ( ""call query1 %s fail"", uri . to String (  )  )  )  ;  } return null ; }"
4375,"public com . anychart . core . ui .  Scroll Bar background Fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background Fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
4376,public  String Builder delete Char At ( int index ) { delete Char At0 ( index )  ;  return this ; }
4377,public void set Anim Style ( int anim Style ) { this . m Anim Style = anim Style ; }
4378,"public void set Page Transformer ( boolean reverse Drawing Order,  Page Transformer transformer ) { final boolean has Transformer = transformer != null ;  final boolean needs Populate = has Transformer !=  ( m Page Transformer != null )  ;  m Page Transformer = transformer ;  set Children Drawing Order Enabled Compat ( has Transformer )  ;  if  ( has Transformer )  {     m Drawing Order = reverse Drawing Order ? DRAW_ORDER_REVERSE : DRAW_ORDER_FORWARD ;  } else {     m Drawing Order = DRAW_ORDER_DEFAULT ;  } if  ( needs Populate )      populate (  )  ; }"
4379,"private static void compress Longest Run Of Zeroes ( int [  ]  hextets ) { int best Run Start = -1 ;  int best Run Length = -1 ;  int run Start = -1 ;  for  ( int i = 0 ;  i < hextets . length + 1 ;  i++ )  {     if  ( i < hextets . length && hextets [ i ]  == 0 )  {         if  ( run Start < 0 )  {             run Start = i ;          }     } else if  ( run Start >= 0 )  {         int run Length = i - run Start ;          if  ( run Length > best Run Length )  {             best Run Start = run Start ;              best Run Length = run Length ;          }         run Start = -1 ;      } } if  ( best Run Length >= 2 )  {      Arrays . fill ( hextets, best Run Start, best Run Start + best Run Length, -1 )  ;  }}"
4380,public void set Page Margin Drawable (  Drawable d ) { m Margin Drawable = d ;  if  ( d != null )      refresh Drawable State (  )  ;  set Will Not Draw ( d == null )  ;  invalidate (  )  ; }
4381,"public com . anychart . core .  Pie Point selected (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected ( %s )  ; "", enabled )  )  ;  return this ; }"
4382,"protected  Byte Array Output Stream write Frames To Buffer (  )  throws IO Exception{  Byte Array Output Stream body Buffer = new  Byte Array Output Stream (  )  ;  write Frames To Buffer Stream ( frame Map, body Buffer )  ;  write Frames To Buffer Stream ( encrypted Frame Map, body Buffer )  ;  return body Buffer ; }"
4383,"public void set Root View Background Color ( @ Color Int int color ) { m Option Bundle . put Int ( EXTRA_UCROP_ROOT_VIEW_BACKGROUND_COLOR, color )  ; }"
4384,public void set Bytes Range (  Bytes Range bytes Range ) { this . bytes Range = bytes Range ; }
4385,"public com . anychart . core . annotations .  Trend Channel fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
4386,"private static int count Run And Make Ascending ( T [  ]  a, int lo, int hi,  Comparator<? super T> c ) { if  ( DEBUG )      assert lo < hi ;  int run Hi = lo + 1 ;  if  ( run Hi == hi )      return 1 ;  //  Find end of run, and reverse range if descending if  ( c . compare ( a [ run Hi++ ] , a [ lo ]  )  < 0 )  {     //  Descending     while  ( run Hi < hi && c . compare ( a [ run Hi ] , a [ run Hi - 1 ]  )  < 0 )  run Hi++ ;      reverse Range ( a, lo, run Hi )  ;  } else {     //  Ascending     while  ( run Hi < hi && c . compare ( a [ run Hi ] , a [ run Hi - 1 ]  )  >= 0 )  run Hi++ ;  } return run Hi - lo ; }"
4387,"public  Iterable< Entry< String,  String>> order (  List< Entry< String,  String>> insertion Order ) { return insertion Order ; }"
4388,public void add Link Files (  Collection< Link File> link Files ) { this . linkfiles . add All ( link Files )  ; }
4389,"static void configure (  Project project, @ Nullable  Library Extension android,  Firebase Library Extension firebase Library ) {  Configuration javadoc Classpath = project . get Configurations (  )  . create ( ""javadoc Classpath"" )  ;  project . get Dependencies (  )  . add ( ""javadoc Classpath"", ""com . google . code . findbugs:jsr305:3 . 0 . 2"" )  ;  if  ( android != null )  {     javadoc Classpath . get Attributes (  )  . attribute (  Build Type Attr . ATTRIBUTE, project . get Objects (  )  . named (  Build Type Attr . class, ""release"" )  )  ;  }  Configuration runtime Only = project . get Configurations (  )  . find By Name ( ""runtime Only"" )  ;  if  ( runtime Only != null )  {     javadoc Classpath . extends From ( runtime Only )  ;  } project . after Evaluate (  p -> {      String dokka Plugin Name = android == null ? ""org . jetbrains . dokka"" : ""org . jetbrains . dokka-android"" ;      project . apply (  Immutable Map . of ( ""plugin"", dokka Plugin Name )  )  ;      if  ( !firebase Library . publish Javadoc )  {         project . get Tasks (  )  . register ( ""kotlindoc"" )  ;          return ;      }      Class<? extends  Dokka Task> task Class = android == null ?  Dokka Task . class :  Dokka Android Task . class ;       Dokka Task dokka Task = configure ( project, task Class )  ;      if  ( dokka Task instanceof  Dokka Android Task )  {          (  (  Dokka Android Task )  dokka Task )  . set No Android Sdk Link ( true )  ;          android . get Library Variants (  )  . all (  v -> {             if  ( v . get Name (  )  . equals ( ""release"" )  )  {                  File Collection artifact Files = get Jars ( v . get Runtime Configuration (  )  )  . plus ( get Jars ( javadoc Classpath )  )  . plus ( project . files ( android . get Boot Classpath (  )  )  )  ;                  dokka Task . set Classpath ( artifact Files )  ;              }         } )  ;      }     project . get Tasks (  )  . create ( ""kotlindoc"",  Copy . class,  copy -> {         copy . depends On ( dokka Task )  ;          copy . set Destination Dir ( project . file ( project . get Root Project (  )  . get Build Dir (  )  + ""/firebase-kotlindoc"" )  )  ;          copy . from ( project . get Build Dir (  )  + ""/dokka/firebase"",  cfg -> {             cfg . exclude ( ""package-list"" )  ;              cfg . files Matching ( ""_toc . yaml"",  file Copy -> {                 file Copy . set Relative Path ( new  Relative Path ( true, ""client"", firebase Library . artifact Id . get (  ) , ""_toc . yaml"" )  )  ;                  file Copy . filter (  line -> line . replace First ( ""\\spath:\\s/"", "" path: /docs/reference/kotlin/"" )  )  ;              } )  ;              cfg . files Matching ( ""**/* . html"",  file Copy -> file Copy . filter (  line -> line . replace All ( ""https://firebase . google . com"", """" )  )  )  ;          } )  ;      } )  ;  } )  ; }"
4390,"public com . anychart . scales .  Gantt Date Time scale (  ) { return new com . anychart . scales .  Gantt Date Time ( js Base + "" . scale (  ) "" )  ; }"
4391,static boolean is Reserved Word (  String word ) { return keyword Map . contains Key ( word )  ; }
4392,"public float get Sessions Sampling Rate (  ) { //  Order of precedence is: // 1 .   If the value exists in  Android  Manifest, convert from  [ 0 . 00f, 100 . 00f ]  to  [ 0 . 00f, 1 . 00f ]  // and return this value .  // 2 .   If the value exists through  Firebase  Remote  Config, cache and return this value .  // 3 .   If the value exists in device cache, return this value .  // 4 .   Otherwise, return default value .   Sessions Sampling Rate config =  Sessions Sampling Rate . get Instance (  )  ;  // 1 .   Reads value in  Android  Manifest  ( it is set by developers during build time )  .   Optional< Float> metadata Value = get Metadata Float ( config )  ;  if  ( metadata Value . is Available (  )  )  {     //  Sampling percentage from metadata needs to convert from  [ 0 . 00f, 100 . 00f ]  to  [ 0 . 00f, 1 . 00f ]  .      float sampling Rate = metadata Value . get (  )  / 100 . 0f ;      if  ( is Sampling Rate Valid ( sampling Rate )  )  {         return sampling Rate ;      } } // 2 .   Reads value from  Firebase  Remote  Config, saves this value in cache layer if valid .   Optional< Float> rc Value = get Remote Config Float ( config )  ;  if  ( rc Value . is Available (  )  && is Sampling Rate Valid ( rc Value . get (  )  )  )  {     device Cache Manager . set Value ( config . get Device Cache Flag (  ) , rc Value . get (  )  )  ;      return rc Value . get (  )  ;  } // 3 .   Reads value from cache layer .   Optional< Float> device Cache Value = get Device Cache Float ( config )  ;  if  ( device Cache Value . is Available (  )  && is Sampling Rate Valid ( device Cache Value . get (  )  )  )  {     return device Cache Value . get (  )  ;  } // 4 .   Returns default value if there is no valid value from above approaches .  return config . get Default (  )  ; }"
4393,public boolean cancel Async (  ) { boolean cancelled = false ;  if  ( m Async Validation Task != null )  {     cancelled = m Async Validation Task . cancel ( true )  ;      m Async Validation Task = null ;  } return cancelled ; }
4394,"public static void open Soft Keyboard (  Context context,  Edit Text edit Text ) { edit Text . request Focus (  )  ;   Input Method Manager input Method Manager =  (  Input Method Manager )  context . get System Service (  Context . INPUT_METHOD_SERVICE )  ;  input Method Manager . show Soft Input ( edit Text,  Input Method Manager . SHOW_IMPLICIT )  ;   View Util . set Edit Text Selection To End ( edit Text )  ; }"
4395,public  String get Encoding (  ) { return encoding ; }
4396,"public void load (  Context context, int svg Resource ) { if  ( m Svg != null )      return ;  try {     m Svg = SVG . get From Resource ( context, svg Resource )  ;      m Svg . set Document Preserve Aspect Ratio (  Preserve Aspect Ratio . UNSCALED )  ;  } catch  ( SVG Parse Exception e )  {      Log . e ( LOG_TAG, "" Could not load specified SVG resource"", e )  ;  }}"
4397,public boolean has Worker Info (  ) { return worker Info Builder_ != null || worker Info_ != null ; }
4398,"private void set Texture Parameters ( A Texture texture ) { if  ( m Texture Handles . contains Key ( texture . get Texture Name (  )  )  )      return ;  int texture Handle = GLES20 . gl Get Uniform Location ( m Program Handle, texture . get Texture Name (  )  )  ;  if  ( texture Handle == -1 &&  Raj Log . is Debug Enabled (  )  )  {      Raj Log . e ( "" Could not get uniform location for "" + texture . get Texture Name (  )  + "", "" + texture . get Texture Type (  )  )  ;      return ;  } m Texture Handles . put ( texture . get Texture Name (  ) , texture Handle )  ; }"
4399,"protected void read Bytes ( final  Input Stream in, final  Progress Byte Processor processor )  throws IO Exception{ final byte [  ]  buf = new byte [ BUF_SIZE ]  ;  try {     int amt ;      do {         amt = in . read ( buf )  ;          if  ( amt == -1 )  {             break ;          }     } while  ( processor . process Bytes ( buf, 0, amt )  )  ;  } finally {     IO Utils . close Quietly ( in )  ;  }}"
4400,"public static  String get Host And Port From Uri (  String uri String )  throws URI Syntax Exception{ URI uri = new URI ( uri String )  ;  if  ( uri . get Port (  )  == -1 )  {     return uri . get Host (  )  ;  } else {     return  Host And Port . from Parts ( uri . get Host (  ) , uri . get Port (  )  )  . to String (  )  ;  }}"
4401,"public  Model Without Hash_ on Visibility Changed (  On Model Visibility Changed Listener< Model Without Hash_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
4402,public void set Publish Address ( final int publish Address ) { this . publish Address = publish Address ; }
4403,"public static  Method get Add All Unsupported None Present Method (  ) { return  Helpers . get Method (  Collection Add All Tester . class, ""test Add All_unsupported None Present"" )  ; }"
4404,public static  Field Value array Remove (  Object .  .  .  elements ) { return new  Array Remove Field Value (  Arrays . as List ( elements )  )  ; }
4405,"public  Network Manager . I Network Manager Builder post ( @ Non Null  Header headers, @ Non Null  Object body Object ) { return new  Network Manager .  Builder (  )  . set Base Url ( base Url )  . set Context ( context )  . set Method (  Request .  Method . POST )  . set Body Request ( generate Body Request ( body Object )  )  . set Headers ( headers . get Headers (  )  )  ; }"
4406,public boolean is Set Cached Includes (  ) { return this . cached Includes != null ; }
4407,"public void selectable (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . selectable (  )  ; "" )  ; }"
4408,"public  Unsigned Long divided By (  Unsigned Long val ) { return from Long Bits (  Unsigned Longs . divide ( value, check Not Null ( val )  . value )  )  ; }"
4409,"public  Wait For Read Request split ( @ Non Null final  Data Splitter splitter, @ Non Null final  Write Progress Callback callback ) { this . data Splitter = splitter ;  this . progress Callback = callback ;  return this ; }"
4410,public boolean is Allow Half Open (  ) { return allow Half Open ; }
4411,"public static  Type Mirror extract Key Type (  Type Mirror type ) { return extract Key Type ( get Request Kind ( type ) , type )  ; }"
4412,public static  String get Screen Trace Name (  Activity activity ) { return  Constants . SCREEN_TRACE_PREFIX + activity . get Class (  )  . get Simple Name (  )  ; }
4413,"public  Set<T> eval (  Query Evaluator<T> evaluator,  Query Environment<T> env,  Immutable List< Argument<T>> args )  throws  Query Exception{  Set<T> universe Set = evaluator . eval ( args . get ( 0 )  . get Expression (  ) , env )  ;  env . build Transitive Closure ( universe Set,  Integer . MAX_VALUE )  ;   Set<T> transitive Closure Universe = env . get Transitive Closure ( universe Set )  ;  //  Linked Hash Set preserves the order of insertion when iterating over the values .  //  The order by which we traverse the result is meaningful because the dependencies are // traversed level-by-level .   Set<T> visited = new  Linked Hash Set<> (  )  ;   Set<T> current = evaluator . eval ( args . get ( 1 )  . get Expression (  ) , env )  ;  //  This predicate function does not just do filtering but also populates visited collection .  //  This is a bit ugly but enables to evaluate the collection exactly once //  The actual evaluation and population of `visited` happens in `get Reverse Deps` as it iterates // through targets  Predicate<T> filter =  target ->  ( transitive Closure Universe . contains ( target )  && visited . add ( target )  )  ;  int depth Bound = args . size (  )  > 2 ? args . get ( 2 )  . get Integer (  )  :  Integer . MAX_VALUE ;  //  Iterating depth Bound+1 times because the first one processes the given argument set .  for  ( int i = 0 ;  i <= depth Bound ;  i++ )  {      Set<T> next = env . get Reverse Deps (  Iterables . filter ( current, filter )  )  ;      if  ( next . is Empty (  )  )  {         break ;      }     current = next ;  } return visited ; }"
4414,"private static  Geo Json Feature parse Geometry To Feature ( JSON Object geo Json Geometry ) {  Geometry geometry = parse Geometry ( geo Json Geometry )  ;  if  ( geometry != null )  {     return new  Geo Json Feature ( geometry, null, new  Hash Map< String,  String> (  ) , null )  ;  }  Log . w ( LOG_TAG, "" Geometry could not be parsed"" )  ;  return null ; }"
4415,public T dont Transform (  ) { if  ( is Auto Clone Enabled )  {     return clone (  )  . dont Transform (  )  ;  } transformations . clear (  )  ;  fields &= ~TRANSFORMATION ;  is Transformation Required = false ;  fields &= ~TRANSFORMATION_REQUIRED ;  is Transformation Allowed = false ;  fields |= TRANSFORMATION_ALLOWED ;  is Scale Only Or No Transform = true ;  return self Or Throw If Locked (  )  ; }
4416,public int get Index (  ) { return index ; }
4417,public T get Color Buffer Texture (  ) { return texture Attachments . first (  )  ; }
4418,"private static  Big Integer old Slow Factorial ( int n1, int n2 ) { assert n1 <= n2 ;  if  (  Int Math . log2 ( n2, CEILING )  *  ( n2 - n1 )  <  Long . SIZE - 1 )  {     // the result will definitely fit into a long     long result = 1 ;      for  ( int i = n1 + 1 ;  i <= n2 ;  i++ )  {         result *= i ;      }     return  Big Integer . value Of ( result )  ;  } /*  *  We want each multiplication to have both sides with approximately the same number of digits .   *  Currently, we just divide the range in half .   */ int mid =  ( n1 + n2 )  >>> 1 ;  return old Slow Factorial ( n1, mid )  . multiply ( old Slow Factorial ( mid, n2 )  )  ; }"
4419,"public void on Authentication Succeeded (  Fingerprint Manager .  Authentication Result result ) { m Error Text View . remove Callbacks ( m Reset Error Text Runnable )  ;  m Icon . set Image Resource ( R . drawable . ic_fingerprint_success )  ;  m Error Text View . set Text Color ( m Error Text View . get Resources (  )  . get Color ( R . color . success_color, null )  )  ;  m Error Text View . set Text ( m Error Text View . get Resources (  )  . get String ( R . string . pin_code_fingerprint_success )  )  ;  m Icon . post Delayed ( new  Runnable (  )  {     @ Override     public void run (  )  {         m Callback . on Authenticated (  )  ;      } }, SUCCESS_DELAY_MILLIS )  ; }"
4420,"Byte Vector put11 ( final int b1, final int b2 ) { int length = this . length ;  if  ( length + 2 > data . length )  {     enlarge ( 2 )  ;  } final byte [  ]  data = this . data ;  data [ length++ ]  =  ( byte )  b1 ;  data [ length++ ]  =  ( byte )  b2 ;  this . length = length ;  return this ; }"
4421,public  Litho View Assert has Visible Text ( @ String Res int resource Id ) { assert That View Tree (  )  . has Visible Text ( resource Id )  ;  return this ; }
4422,public boolean is Camera Closed (  ) { return camera Instance == null || camera Instance . is Camera Closed (  )  ; }
4423,"protected  String read Identifier (  Byte Buffer byte Buffer )  throws  Padding Exception,  Invalid Frame Exception{ byte [  ]  buffer = new byte [ get Frame Id Size (  )  ]  ;  if  ( byte Buffer . position (  )  + get Frame Header Size (  )  >= byte Buffer . limit (  )  )  {     logger . warning ( get Logging Filename (  )  + "":"" + "" No space to find another frame:"" )  ;      throw new  Invalid Frame Exception ( get Logging Filename (  )  + "":"" + "" No space to find another frame"" )  ;  } // Read the  Frame  Identifier byte Buffer . get ( buffer, 0, get Frame Id Size (  )  )  ;  if  ( is Padding ( buffer )  )  {     throw new  Padding Exception ( get Logging Filename (  )  + "":only padding found"" )  ;  } identifier = new  String ( buffer )  ;  logger . fine ( get Logging Filename (  )  + "":"" + "" Identifier is"" + identifier )  ;  return identifier ; }"
4424,"public void add MDC Value Level Pair ( MDC Value Level Pair mdc Value Level Pair ) { if  ( value Level Map . contains Key ( mdc Value Level Pair . get Value (  )  )  )  {     add Error ( mdc Value Level Pair . get Value (  )  + "" has been already set"" )  ;  } else {     value Level Map . put ( mdc Value Level Pair . get Value (  ) , mdc Value Level Pair . get Level (  )  )  ;  }}"
4425,"public void test Invoke Any Impl_no Task Completes (  )  throws  Exception{  Listening Executor Service e = new Direct Executor Service (  )  ;   List< Callable< String>> l = new  Array List<> (  )  ;  l . add ( new NPE Task (  )  )  ;  try {     invoke Any Impl ( e, l, false, 0,  Time Unit . NANOSECONDS )  ;      fail (  )  ;  } catch  (  Execution Exception success )  {     assert That ( success )  . has Cause That (  )  . is Instance Of (  Null Pointer Exception . class )  ;  } finally {     join Pool ( e )  ;  }}"
4426,"public  Builder with (  Animator anim ) {  Node node = m Node Map . get ( anim )  ;  if  ( node == null )  {     node = new  Node ( anim )  ;      m Node Map . put ( anim, node )  ;      m Nodes . add ( node )  ;  }  Dependency dependency = new  Dependency ( m Current Node,  Dependency . WITH )  ;  node . add Dependency ( dependency )  ;  return this ; }"
4427,"public synchronized void start (  ) { check Not Started (  )  ;  buck Module . get Buck Events Consumer (  )  . send As Console Event ( command Line . get Command Line String (  ) ,  Text Type . INFO )  ;  try {     start Time =  System . current Time Millis (  )  ;      process = start Process (  )  ;      start Handling Streams (  )  ;  } catch  (  Process Canceled Exception e )  {     LOG . warn ( e )  ;  } catch  (  Throwable t )  {     if  ( !project . is Disposed (  )  )  {         LOG . error ( t )  ;      } }}"
4428,"public static void restart With Dark Theme (  Activity activity ) {  Theme Manager . restart With Theme ( activity,  Theme Manager . DARK )  ; }"
4429,"public boolean is Valid Headers (  ) { return get Headers (  )  . get First Header (  Upnp Header .  Type . SID,  Subscription Id Header . class )  != null && get Headers (  )  . get First Header (  Upnp Header .  Type . TIMEOUT,  Timeout Header . class )  != null ; }"
4430,public void loop ( double ellapsed Millis ) { for  (  Spring System Listener listener : m Listeners )  {     listener . on Before Integrate ( this )  ;  } advance ( ellapsed Millis )  ;  if  ( m Active Springs . is Empty (  )  )  {     m Idle = true ;  } for  (  Spring System Listener listener : m Listeners )  {     listener . on After Integrate ( this )  ;  } if  ( m Idle )  {     m Spring Looper . stop (  )  ;  }}
4431,protected void on Exception Swallowed (  Runtime Exception exception ) {}
4432,"public com . anychart . core . stock . indicators . CCI cci ( com . anychart . data .  Table Mapping mapping,  Number period,  String series Type ) { return new com . anychart . core . stock . indicators . CCI (  String . format (  Locale . US, js Base + "" . cci ( %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, period, wrap Quotes ( series Type )  )  )  ; }"
4433,"public com . anychart . core .  Separate Chart margin (  Number value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
4434,public  Register Spec get Assignment (  Ssa Insn insn ) { return insn Assignments . get ( insn )  ; }
4435,"public  Immutable List Multimap< String,  String> parameters (  ) { return parameters ; }"
4436,"public  String get String (  ) {  String s = """" ;  if  ( token != null )      s += token + ""="" ;  s += quote ? ""\"""" + value + ""\"""" : value ;  return s ; }"
4437,"public void run Request ( @ Non Null  Request request ) { requests . add ( request )  ;  if  ( !is Paused )  {     request . begin (  )  ;  } else {     request . clear (  )  ;      if  (  Log . is Loggable ( TAG,  Log . VERBOSE )  )  {          Log . v ( TAG, "" Paused, delaying request"" )  ;      }     pending Requests . add ( request )  ;  }}"
4438,public  Integer get Errors Corrected (  ) { return errors Corrected ; }
4439,"public int add Invoke Dynamic Info ( int bootstrap, int name And Type Info ) { output . write (  Invoke Dynamic Info . tag )  ;  output . write Short ( bootstrap )  ;  output . write Short ( name And Type Info )  ;  return num++ ; }"
4440,"public com . anychart . charts .  Cartesian3d crosshair (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . crosshair ( %s )  ; "", settings )  )  ;  return this ; }"
4441,"public static  String get Name String (  Path path, int index ) { if  ( path instanceof  Buck Unix Path )  {     return  Buck Unix Path .  Internals For Fast Paths . get Name String (  (  Buck Unix Path )  path, index )  ;  } return path . get Name ( index )  . to String (  )  ; }"
4442,public void set Shader (  Shader Program shader ) { custom Shader = shader ; }
4443,"public com . anychart . core .  State Settings trend ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . trend ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4444,public void set Application State (  Object application State ) { this . application State = application State ; }
4445,public  Array List< Animator> get Child Animations (  ) {  Array List< Animator> child List = new  Array List< Animator> (  )  ;  for  (  Node node : m Nodes )  {     child List . add ( node . animation )  ;  } return child List ; }
4446,public boolean has Header (  ) { return m Header != null ; }
4447,public  Gif Options get Options (  ) { return m Options ; }
4448,"public void test Intended Success_truth Chained Correspondence (  ) {  Intent i = new  Intent (  )  ;  i . set Action (  Intent . ACTION_VIEW )  ;  i . put Extra ( ""ignoreextra"", """" )  ;  i . set Data (  Uri . parse ( ""http://robolectric . org"" )  )  ;  i . set Flags (  Intent . FLAG_ACTIVITY_NEW_TASK )  ;  get Application Context (  )  . start Activity ( i )  ;   Intent also Sent Intent But Not Matching = new  Intent (  Intent . ACTION_VIEW )  ;  also Sent Intent But Not Matching . set Flags (  Intent . FLAG_ACTIVITY_NEW_TASK )  ;  get Application Context (  )  . start Activity ( also Sent Intent But Not Matching )  ;   Intent expected Intent = new  Intent (  Intent . ACTION_VIEW )  . set Data (  Uri . parse ( ""http://robolectric . org"" )  )  ;  assert That ( get Intents (  )  )  . comparing Elements Using ( all ( action (  ) , data (  )  )  )  . contains ( expected Intent )  ; }"
4449,public static  Listenable Future Task<V> create (  Callable<V> callable ) { return new  Listenable Future Task<V> ( callable )  ; }
4450,"public com . anychart . charts .  Circular Gauge label (  String index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , wrap Quotes ( settings )  )  )  ;  return this ; }"
4451,"public com . anychart . core . annotations .  Andrews Pitchfork parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
4452,"public com . anychart . core . ui .  Timeline line Marker (  Number index, com . anychart . enums .  Gantt Date Time Markers value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Marker ( %s, %s )  ; "", index,  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
4453,"public static  Static Layout get Static Layout (  Text View text View,  Char Sequence text,  Text Paint paint ) {  Static Layout layout ;  if  ( text View instanceof  Fit Text View )  {      Fit Text View fit Text View =  (  Fit Text View )  text View ;      layout = new  Static Layout ( text, paint, get Text Width ( text View ) , get Layout Alignment ( fit Text View ) , fit Text View . get Line Spacing Multiplier Compat (  ) , fit Text View . get Line Spacing Extra Compat (  ) , fit Text View . get Include Font Padding Compat (  )  )  ;  } else {     if  (  Build . VERSION . SDK_INT <= 16 )  {         layout = new  Static Layout ( text, paint, get Text Width ( text View ) , get Layout Alignment ( text View ) , 0, 0, false )  ;      } else {         layout = new  Static Layout ( text, paint, get Text Width ( text View ) , get Layout Alignment ( text View ) , text View . get Line Spacing Multiplier (  ) , text View . get Line Spacing Extra (  ) , text View . get Include Font Padding (  )  )  ;      } } if  ( is Single Line ( text View )  )  {     try {          Field field =  Static Layout . class . get Declared Field ( ""m Maximum Visible Line Count"" )  ;          if  ( field != null )  {             field . set Accessible ( true )  ;              field . set ( layout, 1 )  ;          }     } catch  (  Exception e )  {         e . print Stack Trace (  )  ;      } } return layout ; }"
4454,"public com . anychart . core . utils .  Crossing stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4455,"public static void invisible View By Alpha ( final  View view ) { invisible View By Alpha ( view,  Animation Utils . DEFAULT_ANIMATION_DURATION, false, null )  ; }"
4456,"public void left (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . left (  )  ; "" )  ; }"
4457,"private void verify Source Paths (  Action Graph Builder graph Builder ) {  Build Context build Context =  Fake Build Context . with Source Path Resolver ( graph Builder . get Source Path Resolver (  )  )  ;   Buildable Context buildable Context = new  Fake Buildable Context (  )  ;  for  (  Build Rule rule : graph Builder . get Build Rules (  )  )  {     rule . get Build Steps ( build Context, buildable Context )  ;  }}"
4458,"public com . anychart . core . ui .  Crosshair Label container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
4459,public void set Discontinuity Position Us ( long discontinuity Position Us ) { this . discontinuity Position Us = discontinuity Position Us ; }
4460,"public void is Horizontal (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . is Horizontal (  )  ; "" )  ; }"
4461,"private void send Build Status Event Internal (  ) {  Build Status Event event ;  synchronized  ( this )  {     if  ( build State == null )  {         //  No build in progress .          return ;      }     //  Clear the build Status Future to indicate that we've sent     // a  Build Status Event with the current state .   If the state     // subsequently changes, we'll schedule another future .      build Status Future = null ;      event = new  Build Status Event ( clock . current Time Millis (  ) , build State, number Of Rules, number Of Finished Rules, number Of Updated Rules, number Of Parsed Rules, number Of Parsed Files )  ;  } // avoid holding lock while calling tell Clients (  )  streaming Web Socket Servlet . tell Clients ( event )  ; }"
4462,public int get Sub Mesh Count (  ) { return sub Meshes . length ; }
4463,"public com . anychart . core . axismarkers .  Gantt Range container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
4464,"public  Delete Query build (  ) { if  ( where == null && where Args != null && !where Args . is Empty (  )  )  {     throw new  Illegal State Exception ( "" You can not use where Args without where clause"" )  ;  } return new  Delete Query ( table, where, where Args, affects Tags )  ; }"
4465,private void reset Timer (  ) { //  Only set the timer if we have a timeout of at least 1 millisecond if  ( fade Out Time > 0 )  {     //  Check if we need to create a new timer     if  ( timer == null || timer . _run == false )  {         //  Create and start a new timer         timer = new  Fade Timer (  )  ;          timer . execute (  )  ;      } else {         //  Reset the current tiemr to 0         timer . reset Timer (  )  ;      } }}
4466,public  String get Client Subdirectory (  ) { return client Subdirectory ; }
4467,"public static  Tree Multimap<K, V> create (  Multimap<? extends K, ? extends V> multimap ) { return new  Tree Multimap<> (  Ordering . natural (  ) ,  Ordering . natural (  ) , multimap )  ; }"
4468,"private boolean is View Reused (  ) {  String current Cache Key = engine . get Loading Uri For View ( image Aware )  ;  //  Check whether memory cache key  ( image URI )  for current  Image Aware is actual .  //  If  Image Aware is reused for another task then current task should be cancelled .  boolean image Aware Was Reused = !memory Cache Key . equals ( current Cache Key )  ;  if  ( image Aware Was Reused )  {     L . d ( LOG_TASK_CANCELLED_IMAGEAWARE_REUSED, memory Cache Key )  ;      return true ;  } return false ; }"
4469,public final boolean is Seeking (  ) { return seek Operation Params != null ; }
4470,"public com . anychart . core . stock . indicators .  Stochastic stochastic ( com . anychart . data .  Table Mapping mapping,  Number k Period,  Number k MA Period,  Number d Period,  String k MA Type, com . anychart . enums .  Moving Average Type d MA Type,  String k Series Type, com . anychart . enums .  Stock Series Type d Series Type ) { return new com . anychart . core . stock . indicators .  Stochastic (  String . format (  Locale . US, js Base + "" . stochastic ( %s, %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, k Period, k MA Period, d Period, wrap Quotes ( k MA Type ) ,  ( d MA Type != null )  ? d MA Type . get Js Base (  )  : null, wrap Quotes ( k Series Type ) ,  ( d Series Type != null )  ? d Series Type . get Js Base (  )  : null )  )  ; }"
4471,public static boolean has Jelly Bean (  ) { return  Build . VERSION . SDK_INT >= VERSION_CODES . JELLY_BEAN ; }
4472,public T Item Value get Value By Position ( int position ) {  Object [  ]  vaule Id Array = m Value To Key Indexer . key Set (  )  . to Array (  )  ;  if  ( position > vaule Id Array . length )  {     throw new  Index Out Of Bounds Exception (  )  ;  }  Object value Id = vaule Id Array [ position ]  ;  return m ID Mapper . value Id To Value ( value Id )  ; }
4473,"public  Map With Proto Values Fluent Assertion<M> ignoring Field Absence Of Fields For Values ( int first Field Number, int .  .  .  rest ) { return using Config ( config . ignoring Field Absence Of Fields ( as List ( first Field Number, rest )  )  )  ; }"
4474,public  List< Access Event> get Requests (  ) { return new  Array List<> ( log . get Events (  )  )  ; }
4475,"public static void build (  Mesh Part Builder builder, float radius, int divisions, final  Vector3 center, final  Vector3 normal, final  Vector3 tangent, final  Vector3 binormal ) { build ( builder, radius, divisions, center . x, center . y, center . z, normal . x, normal . y, normal . z, tangent . x, tangent . y, tangent . z, binormal . x, binormal . y, binormal . z )  ; }"
4476,"public static void define Class (  Scriptable scope,  Class<T> clazz )  throws  Illegal Access Exception,  Instantiation Exception,  Invocation Target Exception{ define Class ( scope, clazz, false, false )  ; }"
4477,"protected void update View (  Context context, T object ) {}"
4478,"private void update Const Uses (  Hash Map< Typed Constant,  Register Spec> new Regs, int orig Reg Count ) { /*      * set of constants associated with a local variable ;  used      * only if COLLECT_ONE_LOCAL is true .       */ final  Hash Set< Typed Constant> used By Local = new  Hash Set< Typed Constant> (  )  ;  final  Array List< Ssa Insn> [  ]  use List = ssa Meth . get Use List Copy (  )  ;  for  ( int i = 0 ;  i < orig Reg Count ;  i++ )  {      Ssa Insn insn = ssa Meth . get Definition For Register ( i )  ;      if  ( insn == null )  {         continue ;      }     final  Register Spec orig Reg = insn . get Result (  )  ;       Type Bearer type Bearer = insn . get Result (  )  . get Type Bearer (  )  ;      if  ( !type Bearer . is Constant (  )  )          continue ;       Typed Constant cst =  (  Typed Constant )  type Bearer ;      final  Register Spec new Reg = new Regs . get ( cst )  ;      if  ( new Reg == null )  {         continue ;      }     if  ( ssa Meth . is Reg A Local ( orig Reg )  )  {         if  ( !COLLECT_ONE_LOCAL )  {             continue ;          } else {             /*                  * TODO:  If the same local gets the same cst                  * multiple times, it would be nice to reuse the                  * register .                   */             if  ( used By Local . contains ( cst )  )  {                 continue ;              } else {                 used By Local . add ( cst )  ;                  fix Local Assignment ( orig Reg, new Regs . get ( cst )  )  ;              }         }     }     // maps an original const register to the new collected register      Register Mapper mapper = new  Register Mapper (  )  {         @ Override         public int get New Register Count (  )  {             return ssa Meth . get Reg Count (  )  ;          }         @ Override         public  Register Spec map (  Register Spec register Spec )  {             if  ( register Spec . get Reg (  )  == orig Reg . get Reg (  )  )  {                 return new Reg . with Local Item ( register Spec . get Local Item (  )  )  ;              }             return register Spec ;          }     } ;      for  (  Ssa Insn use : use List [ orig Reg . get Reg (  )  ]  )  {         if  ( use . can Throw (  )  && use . get Block (  )  . get Successors (  )  . cardinality (  )  > 1 )  {             continue ;          }         use . map Source Registers ( mapper )  ;      } }}"
4479,public static int px2 Pt ( final float px Value ) {  Display Metrics metrics =  Utils . get App (  )  . get Resources (  )  . get Display Metrics (  )  ;  return  ( int )   ( px Value * 72 / metrics . xdpi + 0 . 5 )  ; }
4480,"public boolean doit (  Ct Class clazz,  Method Info minfo )  throws  Cannot Compile Exception{  Code Attribute code Attr = minfo . get Code Attribute (  )  ;  if  ( code Attr == null )      return false ;   Code Iterator iterator = code Attr . iterator (  )  ;  boolean edited = false ;   Loop Context context = new  Loop Context ( code Attr . get Max Locals (  )  )  ;  while  ( iterator . has Next (  )  )  if  ( loop Body ( iterator, clazz, minfo, context )  )      edited = true ;   Exception Table et = code Attr . get Exception Table (  )  ;  int n = et . size (  )  ;  for  ( int i = 0 ;  i < n ;  ++i )  {      Handler h = new  Handler ( et, i, iterator, clazz, minfo )  ;      edit ( h )  ;      if  ( h . edited (  )  )  {         edited = true ;          context . update Max ( h . locals (  ) , h . stack (  )  )  ;      } } // so I check the current value of max-locals .  if  ( code Attr . get Max Locals (  )  < context . max Locals )      code Attr . set Max Locals ( context . max Locals )  ;  code Attr . set Max Stack ( code Attr . get Max Stack (  )  + context . max Stack )  ;  try {     if  ( edited )          minfo . rebuild Stack Map If6 ( clazz . get Class Pool (  ) , clazz . get Class File2 (  )  )  ;  } catch  (  Bad Bytecode b )  {     throw new  Cannot Compile Exception ( b . get Message (  ) , b )  ;  } return edited ; }"
4481,"protected static int parse Dolby Channel Configuration (  Xml Pull Parser xpp ) {  String value =  Util . to Lower Invariant ( xpp . get Attribute Value ( null, ""value"" )  )  ;  if  ( value == null )  {     return  Format . NO_VALUE ;  } switch ( value )  {     case ""4000"":         return 1 ;      case ""a000"":         return 2 ;      case ""f801"":         return 6 ;      case ""fa01"":         return 8 ;      default:         return  Format . NO_VALUE ;  }}"
4482,"public  Builder add Exported Symbol ( int index, com . didiglobal . booster . aapt2 .  Resources Internal .  Compiled File .  Symbol .  Builder builder For Value ) { if  ( exported Symbol Builder_ == null )  {     ensure Exported Symbol Is Mutable (  )  ;      exported Symbol_ . add ( index, builder For Value . build (  )  )  ;      on Changed (  )  ;  } else {     exported Symbol Builder_ . add Message ( index, builder For Value . build (  )  )  ;  } return this ; }"
4483,"public void select Marquee Stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . select Marquee Stroke (  )  ; "" )  ; }"
4484,"final void fail With Bad Results (  String verb,  Object expected,  String fail Verb,  Object actual ) {  String message = lenient Format ( "" Not true that <%s> %s <%s> .   It %s <%s>"", actual Custom String Representation (  ) , verb, expected, fail Verb,  ( actual == null )  ? ""null reference"" : actual )  ;  fail Without Actual ( simple Fact ( message )  )  ; }"
4485,"private void check Next Level (  ) { if  ( m Current Correct Moves >= m Correct Moves Required )  {     //  Increment the level count     increase Score Level (  )  ;      m Level Number++ ;      m Level Number Text . set Level Number ( m Level Number )  ;      //  Start the 'next level' animation after a short delay .      m Delay Handler . post Delayed ( new  Runnable (  )  {         @ Override         public void run (  )  {             m Level Number Text . start Animation ( m Animation Level Scale Up )  ;              m End Level Circle . start Animation ( m Animation Scale Level Down )  ;              set Up Level (  )  ;          }     }, 750 )  ;  }}"
4486,"public com . anychart . standalones .  Resource Timeline line Marker (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Marker ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
4487,public UI Config<T> set Image Cropping Enabled ( boolean enabled ) { this . image Cropping Enabled = enabled ;  return this ; }
4488,"public  Entry_ Updater id Between ( long id A, long id B ) { return where Between ( schema . id, id A, id B )  ; }"
4489,"public void register Root View ( T root View, int tag,  Themed React Context context ) { synchronized  ( ui Implementation Thread Lock )  {     final  React Shadow Node root CSS Node = create Root Shadow Node (  )  ;      //  Thread safety needed here     root CSS Node . set React Tag ( tag )  ;      root CSS Node . set Themed Context ( context )  ;      context . run On Native Modules Queue Thread ( new  Runnable (  )  {         @ Override         public void run (  )  {             m Shadow Node Registry . add Root Node ( root CSS Node )  ;          }     } )  ;      // register it within  Native View Hierarchy Manager     m Operations Queue . add Root View ( tag, root View )  ;  }}"
4490,"public  Media Type with Parameters (  String attribute,  Iterable< String> values ) { check Not Null ( attribute )  ;  check Not Null ( values )  ;   String normalized Attribute = normalize Token ( attribute )  ;   Immutable List Multimap .  Builder< String,  String> builder =  Immutable List Multimap . builder (  )  ;  for  (  Entry< String,  String> entry : parameters . entries (  )  )  {      String key = entry . get Key (  )  ;      if  ( !normalized Attribute . equals ( key )  )  {         builder . put ( key, entry . get Value (  )  )  ;      } } for  (  String value : values )  {     builder . put ( normalized Attribute, normalize Parameter Value ( normalized Attribute, value )  )  ;  }  Media Type media Type = new  Media Type ( type, subtype, builder . build (  )  )  ;  // if the attribute isn't charset, we can just inherit the current parsed Charset if  ( !normalized Attribute . equals ( CHARSET_ATTRIBUTE )  )  {     media Type . parsed Charset = this . parsed Charset ;  } //  Return one of the constants if the media type is a known type .  return  More Objects . first Non Null ( KNOWN_TYPES . get ( media Type ) , media Type )  ; }"
4491,"public void font Variant (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Variant (  )  ; "" )  ; }"
4492,"public io . grpc . stub .  Stream Observer<com . facebook . buck . logd . proto .  Log Message> open Log ( io . grpc . stub .  Stream Observer<com . google . rpc .  Status> response Observer ) { return async Unimplemented Streaming Call ( get Open Log Method Helper (  ) , response Observer )  ; }"
4493,public void ready (  ) {}
4494,public boolean is Set To Node (  ) { return this . to Node != null ; }
4495,public  String get Value (  ) {  String v = cp . get Utf8 Info ( value Index )  ;  try {     return  Signature Attribute . to Type Signature ( v )  . jvm Type Name (  )  ;  } catch  (  Bad Bytecode e )  {     throw new  Runtime Exception ( e )  ;  }}
4496,public boolean is Visibility Private (  Type Element type Element ) { return has Metadata ( type Element )  && metadata Factory . create ( type Element )  . class Metadata (  )  . flags ( IS_PRIVATE )  ; }
4497,"public void build (  ) { attr Values Are Mutable = false ;  name =  (  String )   Preconditions . check Not Null ( coerced Attr Values . get ( ""name"" )  )  ;  compatible With =  (  Immutable List< Unconfigured Build Target> )   Preconditions . check Not Null ( coerced Attr Values . get Or Default ( ""compatible_with"",  Immutable List . of (  )  )  )  ;  default Target Platform =  (  Optional< Unconfigured Build Target> )  coerced Attr Values . get Or Default ( ""default_target_platform"",  Optional . empty (  )  )  ; }"
4498,protected  React Native Host get React Native Host (  ) { return  (  (  React Application )  get Plain Activity (  )  . get Application (  )  )  . get React Native Host (  )  ; }
4499,public synchronized int get Count (  ) { return m Count ; }
4500,private  Shared Preferences Helper create Broken Mock Shared Preference (  ) { //  Mocking a commit that fails .  when ( m Mock Broken Editor . commit (  )  )  . then Return ( false )  ;  //  Return the broken  Mock Editor when requesting it .  when ( m Mock Broken Shared Preferences . edit (  )  )  . then Return ( m Mock Broken Editor )  ;  return new  Shared Preferences Helper ( m Mock Broken Shared Preferences )  ; }
4501,"public void test No Attributes (  )  throws IO Exception{ write Trash File ( ""l0 . txt"", """" )  ;  write Trash File ( ""level1/l1 . txt"", """" )  ;  write Trash File ( ""level1/level2/l2 . txt"", """" )  ;  begin Walk (  )  ;  assert Entry ( F, ""l0 . txt"" )  ;  assert Entry ( D, ""level1"" )  ;  assert Entry ( F, ""level1/l1 . txt"" )  ;  assert Entry ( D, ""level1/level2"" )  ;  assert Entry ( F, ""level1/level2/l2 . txt"" )  ;  end Walk (  )  ; }"
4502,protected void shrink Add Object ( I Graph Node Member object ) { if  ( contains ( object . get Transformed Bounding Volume (  )  )  )  {     internal Add Object ( object )  ;  } else {     add To Outside ( object )  ;  }}
4503,public int get Length (  ) { return get Arity (  )  ; }
4504,public boolean is Pii Enabled (  ) { return m Pii Enabled ; }
4505,"public com . anychart . core . resource .  Grid even Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . even Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
4506,"private void check Field Access Flags ( int required Set Member Access Flags, int required Unset Member Access Flags )  throws  Parse Exception{ if  (  (  ( required Set Member Access Flags | required Unset Member Access Flags )  & ~ Class Constants . VALID_ACC_FIELD )  != 0 )  {     throw new  Parse Exception ( "" Invalid method access modifier for field before "" + reader . location Description (  )  )  ;  }}"
4507,"public  Issues Pager Adapter on Dialog Result ( int position, int request Code, int result Code,  Bundle arguments ) {  Issue Fragment fragment = fragments . get ( position )  ;  if  ( fragment != null )  {     fragment . on Dialog Result ( request Code, result Code, arguments )  ;  } return this ; }"
4508,"public com . anychart . core . stock . scrollerseries .  Hilo height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
4509,public long length (  )  throws IO Exception{  Optional< Long> length If Known = length If Known (  )  ;  if  ( length If Known . is Present (  )  )  {     return length If Known . get (  )  ;  }  Closer closer =  Closer . create (  )  ;  try {      Reader reader = closer . register ( open Stream (  )  )  ;      return count By Skipping ( reader )  ;  } catch  (  Throwable e )  {     throw closer . rethrow ( e )  ;  } finally {     closer . close (  )  ;  }}
4510,public  String get Order Spec (  ) { if  ( property Order List . is Empty (  )  )  {     return null ;  } else {     return property Order List . get Order Spec (  )  ;  }}
4511,"public static  Target Graph Creation Result get Target Graph (  Target Graph Creation Result unversioned Target Graph,  Optional< Target Graph Creation Result> versioned Target Graph ) { // otherwise the unversioned graph is used .  return versioned Target Graph . or Else ( unversioned Target Graph )  ; }"
4512,"public static  Uri save Bitmap To File (  Context context,  String url,  Bitmap bitmap,  View container, boolean is Share ) {  String file Name = url . substring ( url . last Index Of ( ""/"" ) , url . last Index Of ( "" . "" )  )  + "" . png"" ;   File file Dir = new  File (  Constants . PATH_SDCARD )  ;  if  ( !file Dir . exists (  )  )  {     file Dir . mkdirs (  )  ;  }  File image File = new  File ( file Dir, file Name )  ;   Uri uri =  Uri . from File ( image File )  ;  if  ( is Share && image File . exists (  )  )  {     if  (  Build . VERSION . SDK_INT >= 24 )  {         uri =  File Provider . get Uri For File ( context . get Application Context (  ) ,  Constants . FILE_PROVIDER_AUTHORITY, image File )  ;      }     return uri ;  } try {      File Output Stream fos = new  File Output Stream ( image File )  ;      boolean is Compress = bitmap . compress (  Bitmap .  Compress Format . PNG, 90, fos )  ;      if  ( is Compress )  {          Snackbar Util . show Short ( container, ""保存妹纸成功n ( *≧▽≦* ) n"" )  ;      } else {          Snackbar Util . show Short ( container, ""保存妹纸失败ヽ ( ≧Д≦ ) ノ"" )  ;      }     fos . flush (  )  ;      fos . close (  )  ;  } catch  ( IO Exception e )  {     e . print Stack Trace (  )  ;       Snackbar Util . show Short ( container, ""保存妹纸失败ヽ ( ≧Д≦ ) ノ"" )  ;  } try {      Media Store .  Images .  Media . insert Image ( context . get Content Resolver (  ) , image File . get Absolute Path (  ) , file Name, null )  ;  } catch  (  File Not Found Exception e )  {     e . print Stack Trace (  )  ;  } context . send Broadcast ( new  Intent (  Intent . ACTION_MEDIA_SCANNER_SCAN_FILE, uri )  )  ;  if  (  Build . VERSION . SDK_INT >= 24 )  {     uri =  File Provider . get Uri For File ( context . get Application Context (  ) ,  Constants . FILE_PROVIDER_AUTHORITY, image File )  ;  } return uri ; }"
4513,private long get Packet Duration Us ( byte [  ]  packet ) { int toc = packet [ 0 ]  & 0x FF ;  int frames ;  switch ( toc & 0x3 )  {     case 0:         frames = 1 ;          break ;      case 1:     case 2:         frames = 2 ;          break ;      default:         frames = packet [ 1 ]  & 0x3 F ;          break ;  } int config = toc >> 3 ;  int length = config & 0x3 ;  if  ( config >= 16 )  {     length = 2500 << length ;  } else if  ( config >= 12 )  {     length = 10000 <<  ( length & 0x1 )  ;  } else if  ( length == 3 )  {     length = 60000 ;  } else {     length = 10000 << length ;  } return  ( long )  frames * length ; }
4514,"public com . anychart . core . resource .  Logo fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
4515,public void show Toast ( @ String Res int text Resource Id ) { show Toast ( provider . get Context (  )  . get String ( text Resource Id )  )  ; }
4516,"protected int make Press Color (  ) { int r =  ( this . background Color >> 16 )  & 0x FF ;  int g =  ( this . background Color >> 8 )  & 0x FF ;  int b =  ( this . background Color >> 0 )  & 0x FF ;  r =  ( r - 30 < 0 )  ? 0 : r - 30 ;  g =  ( g - 30 < 0 )  ? 0 : g - 30 ;  b =  ( b - 30 < 0 )  ? 0 : b - 30 ;  return  Color . rgb ( r, g, b )  ; }"
4517,"public void run On Main Thread (  Maybe Throwing Runnable<E> runnable )  throws E{ try {     new  Ui Thread Statement ( new  Statement (  )  {         @ Override         public void evaluate (  )  throws E {             runnable . run (  )  ;          }     }, true )  . evaluate (  )  ;  } catch  (  Throwable throwable )  {     @ Suppress Warnings ( ""unchecked"" )  E e =  ( E )  throwable ;      throw e ;  }}"
4518,"public void add (  String name,  String .  .  .  license Uris ) { custom Licenses . add ( new  Custom License ( name, license Uris )  )  ; }"
4519,"public void measure In Window ( int react Tag,  Callback callback ) { if  ( !m View Operations Enabled )  {     return ;  } m Operations Queue . enqueue Measure In Window ( react Tag, callback )  ; }"
4520,"public void set Adapter (  List Adapter adapter ) { if  ( adapter instanceof  Card Expandable List Adapter )  {     set Adapter ( adapter )  ;  } else {      Log . w ( TAG, "" You are using a generic adapter .   Pay attention: your adapter has to call card Array Adapter#get View method"" )  ;      super . set Adapter ( adapter )  ;  }}"
4521,"public com . anychart . core . annotations .  Fibonacci Timezones bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
4522,public void fire Javascript Event (  String action ) { send Event Message ( action )  ; }
4523,"public static  Thread Factory platform Thread Factory (  ) { if  ( !is App Engine With Api Classes (  )  )  {     return  Executors . default Thread Factory (  )  ;  } try {     return  (  Thread Factory )   Class . for Name ( ""com . google . appengine . api .  Thread Manager"" )  . get Method ( ""current Request Thread Factory"" )  . invoke ( null )  ;  /*    *  Do not merge the 3 catch blocks below .  javac would infer a type of    *  Reflective Operation Exception, which  Animal  Sniffer would reject .   (  Old versions of  Android    * don't *seem* to mind, but there might be edge cases of which we're unaware .  )     */ } catch  (  Illegal Access Exception e )  {     throw new  Runtime Exception ( "" Couldn't invoke  Thread Manager . current Request Thread Factory"", e )  ;  } catch  (  Class Not Found Exception e )  {     throw new  Runtime Exception ( "" Couldn't invoke  Thread Manager . current Request Thread Factory"", e )  ;  } catch  (  No Such Method Exception e )  {     throw new  Runtime Exception ( "" Couldn't invoke  Thread Manager . current Request Thread Factory"", e )  ;  } catch  (  Invocation Target Exception e )  {     throw  Throwables . propagate ( e . get Cause (  )  )  ;  }}"
4524,"public void set Interval ( T obj, float interval Size ) { for  (  Cumulative Value value : values )  if  ( value . value == obj )  {     value . interval = interval Size ;      return ;  }}"
4525,public void set Compression Level ( int level ) { compression Level = level ; }
4526,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
4527,"public void put In Cache ( final  Object request Cache Key, final T data,  Request Listener<T> listener ) { put In Cache (  (  Class<T> )  data . get Class (  ) , request Cache Key, data, listener )  ; }"
4528,"public com . anychart . core . annotations .  Infinite Line top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
4529,"public com . anychart . core . annotations .  Fibonacci Arc stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4530,public  Observable< Product> get Product ( int product Id ) { return get All Products (  )  . flat Map (  products ->  Observable . from Iterable ( products )  )  . filter (  product -> product . get Id (  )  == product Id )  . take ( 1 )  ; }
4531,"public com . anychart . charts .  Mekko bounds (  String x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
4532,public void set Dialog Title (  String dialog Title ) { m Dialog Title = dialog Title ; }
4533,"public  Object Id unparsed Commit ( final int sec Delta, final  Rev Tree tree, final  Object Id .  .  .  parents )  throws  Exception{ tick ( sec Delta )  ;  final org . eclipse . jgit . lib .  Commit Builder c ;  c = new org . eclipse . jgit . lib .  Commit Builder (  )  ;  c . set Tree Id ( tree )  ;  c . set Parent Ids ( parents )  ;  c . set Author ( new  Person Ident ( default Author, get Date (  )  )  )  ;  c . set Committer ( new  Person Ident ( default Committer, get Date (  )  )  )  ;  c . set Message ( """" )  ;   Object Id id ;  try  (  Object Inserter ins = inserter )  {     id = ins . insert ( c )  ;      ins . flush (  )  ;  } return id ; }"
4534,"public synchronized  Countly set Should Ignore Crawlers ( boolean should Ignore ) { L . d ( "" Setting if should ignore app crawlers:  [ "" + should Ignore + "" ] "" )  ;  should Ignore Crawlers = should Ignore ;  return this ; }"
4535,public  Builder clear Client Side Tenant (  ) { client Side Tenant_ = get Default Instance (  )  . get Client Side Tenant (  )  ;  on Changed (  )  ;  return this ; }
4536,public long get Auto Noop Timeout (  ) { synchronized  ( lock )  {     return auto Noop Timeout ;  }}
4537,"public static byte [  ]  generate Seed (  String mnemonic,  String passphrase ) { if  ( is Mnemonic Empty ( mnemonic )  )  {     throw new  Illegal Argument Exception ( "" Mnemonic is required to generate a seed"" )  ;  } passphrase = passphrase == null ? """" : passphrase ;   String salt =  String . format ( ""mnemonic%s"", passphrase )  ;  PKCS5 S2 Parameters Generator gen = new PKCS5 S2 Parameters Generator ( new SHA512 Digest (  )  )  ;  gen . init ( mnemonic . get Bytes ( UTF_8 ) , salt . get Bytes ( UTF_8 ) , SEED_ITERATIONS )  ;  return  (  (  Key Parameter )  gen . generate Derived Parameters ( SEED_KEY_SIZE )  )  . get Key (  )  ; }"
4538,public int describe Contents (  ) { return 0 ; }
4539,public void clear Content (  ) { if  ( m Content Stack . is Empty (  )  )  {     //  Nothing to clear .      return ;  } //  Pop every content  View that we can .  boolean did Pop Content = pop Content (  )  ;  while  ( did Pop Content )  {     did Pop Content = pop Content (  )  ;  } //  Clear the root  View .  remove Current Content (  )  ; }
4540,"public void set Aspect Ratio ( int aspect Ratio X, int aspect Ratio Y ) { m Crop Overlay View . set Aspect Ratio X ( aspect Ratio X )  ;  m Crop Overlay View . set Aspect Ratio Y ( aspect Ratio Y )  ;  set Fixed Aspect Ratio ( true )  ; }"
4541,public J Check Box Menu Item get Break On Return (  ) { return break On Return ; }
4542,public boolean is Image Mask (  ) { return image Mask ; }
4543,"public com . anychart . charts .  Tree Map height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
4544,"public com . anychart . core .  State Settings font Size (  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Size ( %s )  ; "", size )  )  ;  return this ; }"
4545,"protected boolean read Advertised Refs (  )  throws  Transport Exception{ try {     return read Advertised Refs Impl (  )  ;  } catch  (  Transport Exception err )  {     close (  )  ;      throw err ;  } catch  ( IO Exception |  Runtime Exception err )  {     close (  )  ;      throw new  Transport Exception ( err . get Message (  ) , err )  ;  }}"
4546,"public void redirect Field Access (  Ct Field field,  Ct Class new Class,  String new Fieldname ) { transformers = new  Transform Field Access ( transformers, field, new Class . get Name (  ) , new Fieldname )  ; }"
4547,"private void animation Custom Card Start (  ) { final int height = get Screen Size ( m Context )  ;  new  Count Down Timer ( 300, 1 )  {     public void on Tick ( long millis Until Finished )  {         m Card View . set Translation Y ( height -  (  ( int )   ( m Start Card Position * 1 . 7 )  )  )  ;      }     public void on Finish (  )  {         m Card View . set Translation Y ( height -  (  ( int )   ( m Start Card Position * 1 . 7 )  )  )  ;      } } . start (  )  ; }"
4548,public void error (  String message ) { logger . severe ( message )  ; }
4549,public static void emit Layout Event (  View Group scroll View ) { for  (  Scroll Listener scroll Listener : s Scroll Listeners )  {     scroll Listener . on Layout ( scroll View )  ;  }}
4550,"static  Hash Code hash Source Path Group (  File Hash Loader file Hash Loader,  Source Path Resolver Adapter resolver,  Immutable List< Source Path> paths )  throws IO Exception{ if  ( paths . size (  )  == 1 )  {     return hash Source Path ( paths . get ( 0 ) , file Hash Loader, resolver )  ;  }  Hasher hasher =  Hashing . md5 (  )  . new Hasher (  )  ;  for  (  Source Path path : paths )  {     hasher . put Bytes ( hash Source Path ( path, file Hash Loader, resolver )  . as Bytes (  )  )  ;  } return hasher . hash (  )  ; }"
4551,"public  Prop Defaults View Model_ no Default So It Is Required ( @ Non Null  Char Sequence no Default So It Is Required ) { if  ( no Default So It Is Required == null )  {     throw new  Illegal Argument Exception ( ""no Default So It Is Required cannot be null"" )  ;  } assigned Attributes_epoxy Generated Model . set ( 1 )  ;  on Mutation (  )  ;  this . no Default So It Is Required_ Char Sequence = no Default So It Is Required ;  return this ; }"
4552,"public void on Configuration Changed (  Activity activity,  Configuration new Config ) { //如果旋转了就全屏 if  ( is Play && item Player != null && orientation Utils != null )  {     item Player . on Configuration Changed ( activity, new Config, orientation Utils, false, true )  ;  }}"
4553,"public static void clear Saved Progress (  Context context,  Object url ) { if  ( url == null )  {      Shared Preferences spn = context . get Shared Preferences ( ""JZVD_PROGRESS"",  Context . MODE_PRIVATE )  ;      spn . edit (  )  . clear (  )  . apply (  )  ;  } else {      Shared Preferences spn = context . get Shared Preferences ( ""JZVD_PROGRESS"",  Context . MODE_PRIVATE )  ;      spn . edit (  )  . put Long ( ""new Version:"" + url . to String (  ) , 0 )  . apply (  )  ;  }}"
4554,"public synchronized void register (  Graph Binding binding ) { if  ( !binding . is Active (  )  )  {     throw new  Runtime Exception ( "" Expected added  Graph Binding to be active: "" + binding )  ;  } if  ( m Is Finishing Bindings )  {     m Bindings To Register . add ( binding )  ;      return ;  } m Bindings . add ( binding )  ;  register Nodes ( binding )  ;  if  ( m Bindings . size (  )  == 1 )  {     m Timing Source . start (  )  ;  } m Is Dirty = true ; }"
4555,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
4556,"public void add Generated Source Code Folder (  Build Target build Target,  Ij Folder generated Folder ) {  Preconditions . check State ( generated Source Code Folders Map . put ( generated Folder . get Path (  ) , generated Folder )  == null )  ;  targets To Generated Sources Map . compute If Absent ( build Target,  target -> new  Array List<> (  )  )  . add ( generated Folder )  ; }"
4557,public void set Scatter Shape Size ( float size ) { m Shape Size = size ; }
4558,"public com . anychart . core . gantt . elements .  Periods Element fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
4559,public  Rounding Params set Border Color ( @ Color Int int color ) { m Border Color = color ;  return this ; }
4560,"public void set Line Width ( final float line Width ) { this . line Width = line Width ;  set Float ( line Width Location, this . line Width )  ; }"
4561,"public static  Ssa Insn make From Rop (  Insn insn,  Ssa Basic Block block ) { return new  Normal Ssa Insn ( insn, block )  ; }"
4562,"public com . anychart . charts .  Polar bar Groups Padding (  Number padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bar Groups Padding ( %s )  ; "", padding )  )  ;  return this ; }"
4563,"public com . anychart . core . lineargauge . pointers .  Led stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4564,"public  Immersion Bar navigation Bar Alpha ( @ Float Range ( from = 0f, to = 1f )  float navigation Alpha ) { m Bar Params . navigation Bar Alpha = navigation Alpha ;  m Bar Params . navigation Bar Temp Alpha = navigation Alpha ;  return this ; }"
4565,"public void add Invokeinterface (  String classname,  String name,  String desc, int count ) { add Invokeinterface ( const Pool . add Class Info ( classname ) , name, desc, count )  ; }"
4566,"public static  Bitmap get Bitmap ( @ Non Null final  String key ) { return get Bitmap ( key, get Default Cache Disk Utils (  )  )  ; }"
4567,"public com . anychart . core . polar . series .  Range Column fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
4568,public int get Sample Rate (  ) { return sample Rate ; }
4569,"public  Query Builder<T> where (  Where Condition cond,  Where Condition .  .  .  cond More ) { where Collector . add ( cond, cond More )  ;  return this ; }"
4570,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
4571,"private int merge File Modes ( int mode B, int mode O, int mode T ) { if  ( mode O == mode T )      return mode O ;  if  ( mode B == mode O )      //  Base equal to  Ours -> chooses  Theirs if that is not missing     return  ( mode T ==  File Mode . MISSING . get Bits (  )  )  ? mode O : mode T ;  if  ( mode B == mode T )      //  Base equal to  Theirs -> chooses  Ours if that is not missing     return  ( mode O ==  File Mode . MISSING . get Bits (  )  )  ? mode T : mode O ;  return  File Mode . MISSING . get Bits (  )  ; }"
4572,public int get Tcp Connection Backlog (  ) { return tcp Connection Backlog ; }
4573,"public void remove Range ( int start, int end ) { int n = size ;  if  ( end >= n )      throw new  Index Out Of Bounds Exception ( ""end can't be >= size: "" + end + "" >= "" + size )  ;  if  ( start > end )      throw new  Index Out Of Bounds Exception ( ""start can't be > end: "" + start + "" > "" + end )  ;  int count = end - start + 1, last Index = n - count ;  if  ( ordered )       System . arraycopy ( items, start + count, items, start, n -  ( start + count )  )  ;  else {     int i =  Math . max ( last Index, end + 1 )  ;       System . arraycopy ( items, i, items, start, n - i )  ;  } size = n - count ; }"
4574,"public com . anychart . charts .  Tag Cloud legend (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . legend ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4575,public int get Request Id (  ) { return m Request Id ; }
4576,"public com . anychart . core . resource . resourcelist .  Text Settings margin (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
4577,"public com . anychart . scales .  Scatter Ticks ticks (  ) { return new com . anychart . scales .  Scatter Ticks ( js Base + "" . ticks (  ) "" )  ; }"
4578,"public com . anychart . core . annotations .  Trend Channel hatch Fill (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "", enabled )  )  ;  return this ; }"
4579,protected  String [  ]  get Parameters (  ) { return new  String [  ]  { get Commit Edit Message File Path (  )  } ; }
4580,"public void navigate To Model Activity ( @ Non Null final  Activity context, @ Non Null final  Mesh Model model ) { final  Intent intent ;  if  ( model . get Model Id (  )  == CONFIGURATION_SERVER )  {     intent = new  Intent ( context,  Configuration Server Activity . class )  ;  } else if  ( model . get Model Id (  )  == CONFIGURATION_CLIENT )  {     intent = new  Intent ( context,  Configuration Client Activity . class )  ;  } else if  ( model . get Model Id (  )  == GENERIC_ON_OFF_SERVER )  {     intent = new  Intent ( context,  Generic On Off Server Activity . class )  ;  } else if  ( model . get Model Id (  )  == GENERIC_LEVEL_SERVER )  {     intent = new  Intent ( context,  Generic Level Server Activity . class )  ;  } else if  ( model . get Model Id (  )  == SCENE_SERVER )  {     intent = new  Intent ( context,  Scene Server Model Activity . class )  ;  } else if  ( model . get Model Id (  )  == SCENE_SETUP_SERVER )  {     intent = new  Intent ( context,  Scene Setup Server Model Activity . class )  ;  } else if  ( model . get Model Id (  )  == SENSOR_SERVER )  {     intent = new  Intent ( context,  Sensor Server Activity . class )  ;  } else if  ( model instanceof  Vendor Model )  {     intent = new  Intent ( context,  Vendor Model Activity . class )  ;  } else {     intent = new  Intent ( context,  Generic Model Configuration Activity . class )  ;  } context . start Activity ( intent )  ; }"
4581,public static boolean is Ignoring Battery Optimizations (  String pkg Name ) { try {      Power Manager pm =  (  Power Manager )   Utils . get App (  )  . get System Service (  Context . POWER_SERVICE )  ;      //noinspection  Constant Conditions     return pm . is Ignoring Battery Optimizations ( pkg Name )  ;  } catch  (  Exception e )  {     return true ;  }}
4582,public  Array Builder add String (  String value ) { try {     get Generator (  )  . write String ( value )  ;  } catch  ( IO Exception e )  {     throw to Assertion Error ( e )  ;  } return this ; }
4583,public  Scaling Utils .  Scale Type get Retry Image Scale Type (  ) { return m Retry Image Scale Type ; }
4584,public int get Label Count (  ) { return m Label Count ; }
4585,"public void to Json (  Boolean stringify ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Json ( %s )  ; "", stringify )  )  ; }"
4586,public void invalidate (  ) { buffer Handle = create Buffer Object (  )  ;  is Dirty = true ; }
4587,"void remove Internal (  Node<K, V> node, boolean unlink ) { if  ( unlink )  {     node . prev . next = node . next ;      node . next . prev = node . prev ;      //  Help the GC  ( for performance )      node . next = node . prev = null ;  }  Node<K, V> left = node . left ;   Node<K, V> right = node . right ;   Node<K, V> original Parent = node . parent ;  if  ( left != null && right != null )  {     /*    *  To remove a node with both left and right subtrees, move an    * adjacent node from one of those subtrees into this node's place .     *    *  Removing the adjacent node may change this node's subtrees .   This    * node may no longer have two subtrees once the adjacent node is    * gone!    */      Node<K, V> adjacent =  ( left . height > right . height )  ? left . last (  )  : right . first (  )  ;      // takes care of rebalance and size--     remove Internal ( adjacent, false )  ;      int left Height = 0 ;      left = node . left ;      if  ( left != null )  {         left Height = left . height ;          adjacent . left = left ;          left . parent = adjacent ;          node . left = null ;      }     int right Height = 0 ;      right = node . right ;      if  ( right != null )  {         right Height = right . height ;          adjacent . right = right ;          right . parent = adjacent ;          node . right = null ;      }     adjacent . height =  Math . max ( left Height, right Height )  + 1 ;      replace In Parent ( node, adjacent )  ;      return ;  } else if  ( left != null )  {     replace In Parent ( node, left )  ;      node . left = null ;  } else if  ( right != null )  {     replace In Parent ( node, right )  ;      node . right = null ;  } else {     replace In Parent ( node, null )  ;  } rebalance ( original Parent, false )  ;  size-- ;  mod Count++ ; }"
4588,"private void show Error (  Char Sequence error ) { m Icon . set Image Resource ( R . drawable . ic_fingerprint_error )  ;  m Error Text View . set Text ( error )  ;  m Error Text View . set Text Color ( m Error Text View . get Resources (  )  . get Color ( R . color . warning_color, null )  )  ;  m Error Text View . remove Callbacks ( m Reset Error Text Runnable )  ;  m Error Text View . post Delayed ( m Reset Error Text Runnable, ERROR_TIMEOUT_MILLIS )  ; }"
4589,public boolean set Exception (  Throwable throwable ) { return super . set Failure ( throwable )  ; }
4590,"public com . anychart . core . stock . scrollerseries .  Jump Line y Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4591,"public com . anychart . standalones .  Data Grid bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
4592,"public com . anychart . core . annotations .  Fibonacci Timezones trend ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . trend ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4593,"public void start (  ) { //  Make sure any currently running dispatchers are stopped .  stop (  )  ;  //  Create the cache dispatcher and start it .  m Cache Dispatcher = new  Cache Dispatcher ( m Cache Queue, m Network Queue, m Cache, m Delivery )  ;  m Cache Dispatcher . start (  )  ;  //  Create network dispatchers  ( and corresponding threads )  up to the pool size .  for  ( int i = 0 ;  i < m Dispatchers . length ;  i++ )  {      Network Dispatcher network Dispatcher = new  Network Dispatcher ( m Network Queue, m Network, m Cache, m Delivery )  ;      m Dispatchers [ i ]  = network Dispatcher ;      network Dispatcher . start (  )  ;  }}"
4594,"public com . anychart . core . ui . scroller .  Thumbs fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
4595,"public  String two Date Distance (  String start Time ) { if  ( start Time . equals ( """" )  )  {     return """" ;  } time Mills =  Long . parse Long ( start Time )  ;   Date start Date = new  Date ( time Mills )  ;  if  ( start Date == null || end Date == null )  {     return null ;  } long time Long = end Date . get Time (  )  - start Date . get Time (  )  ;  if  ( time Long <= 0 )  {     return ""刚刚"" ;  } else if  ( time Long < 60 * 1000 )  {     return time Long / 1000 + ""秒前"" ;  } else if  ( time Long < 60 * 60 * 1000 )  {     time Long = time Long / 1000 / 60 ;      return time Long + ""分钟前"" ;  } else if  ( time Long < 60 * 60 * 24 * 1000 )  {     time Long = time Long / 60 / 60 / 1000 ;      return time Long + ""小时前"" ;  } else if  ( time Long < 60 * 60 * 24 * 1000 * 7 )  {     time Long = time Long / 1000 / 60 / 60 / 24 ;      return time Long + ""天前"" ;  } else if  ( time Long < 60 * 60 * 24 * 1000 * 7 * 4 )  {     time Long = time Long / 1000 / 60 / 60 / 24 / 7 ;      return time Long + ""周前"" ;  } else {     time Long = time Long / 1000 / 60 / 60 / 24 ;      return time Long + ""天前"" ;  }}"
4596,public  Type List get Interfaces (  ) { if  ( interfaces == null )  {     return  Std Type List . EMPTY ;  } return interfaces . get List (  )  ; }
4597,"public  String resolve Buildozer Executable (  ) {  String executable = state . buildozer Executable ;  if  ( executable == null )  {     try {         executable = executable Detector . get Buildozer Executable (  )  ;      } catch  (  Runtime Exception e )  {         // let the user insert the path to the executable         LOG . error ( e + "" .   You can specify the buildozer path from "" + "" Preferences/ Settings >  Tools >  Buck"", e )  ;      } } return executable ; }"
4598,"public com . anychart . core . ui .  Label label (  String index ) { return new com . anychart . core . ui .  Label (  String . format (  Locale . US, js Base + "" . label ( %s ) "", wrap Quotes ( index )  )  )  ; }"
4599,"public com . anychart . charts .  Polar hatch Fill Palette ( com . anychart . graphics . vector . hatchfill .  Hatch Fill Type [  ]  settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill Palette ( %s )  ; "", array To String ( settings )  )  )  ;  return this ; }"
4600,Parameterized Type Name optional Type (  ) { return optional Kind (  )  . of ( value Type (  )  )  ; }
4601,"public com . anychart . core . ui .  Label label (  String index ) { return new com . anychart . core . ui .  Label (  String . format (  Locale . US, js Base + "" . label ( %s ) "", wrap Quotes ( index )  )  )  ; }"
4602,"public void set Margin ( int left Margin, int top Margin, int right Margin, int bottom Margin ) {}"
4603,"public com . anychart . core . cartesian . series .  Spline spline ( com . anychart . data .  View data, com . anychart . data .  Text Parsing Settings csv Settings ) { return new com . anychart . core . cartesian . series .  Spline (  String . format (  Locale . US, js Base + "" . spline ( %s, %s ) "",  ( data != null )  ? data . get Js Base (  )  : null,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
4604,"public static  Element Order<S> stable (  ) { return new  Element Order<S> (  Type . STABLE, null )  ; }"
4605,"protected boolean standard Equals ( @ Nullable  Object object ) { if  ( object instanceof  Entry )  {      Entry<?, ?> that =  (  Entry<?, ?> )  object ;      return  Objects . equal ( this . get Key (  ) , that . get Key (  )  )  &&  Objects . equal ( this . get Value (  ) , that . get Value (  )  )  ;  } return false ; }"
4606,"private  String get Internal Name (  Element element ) { try {      Type Element type Element =  More Elements . as Type ( element )  ;      switch ( type Element . get Nesting Kind (  )  )  {         case TOP_LEVEL:             return type Element . get Qualified Name (  )  . to String (  )  . replace ( ' . ', '/' )  ;          case MEMBER:             return get Internal Name ( type Element . get Enclosing Element (  )  )  + ""$"" + type Element . get Simple Name (  )  ;          default:             throw new  Illegal Argument Exception ( "" Unsupported nesting kind . "" )  ;      } } catch  (  Illegal Argument Exception e )  { //  Not a  Type Element, try something else .  .  .  } if  ( element instanceof  Qualified Nameable )  {      Qualified Nameable qualified Name Element =  (  Qualified Nameable )  element ;      return qualified Name Element . get Qualified Name (  )  . to String (  )  . replace ( ' . ', '/' )  ;  } return element . get Simple Name (  )  . to String (  )  ; }"
4607,public  Load Bundle Task Progress get Result ( @ Non Null  Class<X> exception Type )  throws X{ return delegate . get Result ( exception Type )  ; }
4608,"public com . anychart . core . cartesian . series .  Width Based max Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", width )  )  ;  return this ; }"
4609,"public void shall I Pass (  Context context, final  Gandalf Callback gandalf Callback ) {  Logger Util . log D ( "" Fetching bootstrap"" )  ;  new  Bootstrap Api ( context, ok Http Client, bootstrap Url, custom Deserializer, callback Executor )  . fetch Bootstrap ( new  Bootstrap Callback (  )  {     @ Override     public void on Success (  Bootstrap bootstrap )  {          Logger Util . log D ( "" Fetched bootstrap: "" + bootstrap )  ;          try {             if  ( gate Keeper . update Is Required ( bootstrap )  )  {                  Logger Util . log D ( "" Update is required"" )  ;                  gandalf Callback . on Required Update ( bootstrap . get Required Update (  )  )  ;              } else if  ( gate Keeper . show Alert ( bootstrap )  )  {                  Logger Util . log D ( "" Alert"" )  ;                  gandalf Callback . on Alert ( bootstrap . get Alert (  )  )  ;              } else if  ( gate Keeper . update Is Optional ( bootstrap )  )  {                  Logger Util . log D ( "" Update is optional"" )  ;                  gandalf Callback . on Optional Update ( bootstrap . get Optional Update (  )  )  ;              } else {                  Logger Util . log D ( "" No action is required"" )  ;                  gandalf Callback . on No Action Required (  )  ;              }         } catch  (  Exception e )  {              Logger Util . log E ( e . get Message (  )  )  ;              gandalf Callback . on No Action Required (  )  ;          }     }     @ Override     public void on Error (  Exception e )  {          Logger Util . log E ( "" Error fetching bootstrap: "" + e . get Message (  )  )  ;          // In any error case we should let the user in as to not block based on a bug         gandalf Callback . on No Action Required (  )  ;      } } )  ; }"
4610,"public void test Paragraph Replaced With Break (  ) {  String html = ""line1<p>line2</p>"" ;  assert Equals ( ""line1<br>line2"", format ( html )  )  ; }"
4611,"private void smooth Scroll And Snap ( int velocity ) { double interval =  ( double )  get Snap Interval (  )  ;  double current Offset =  ( double )  get Post Animation Scroll Y (  )  ;  double target Offset =  ( double )  predict Final Scroll Position ( velocity )  ;  int previous Page =  ( int )   Math . floor ( current Offset / interval )  ;  int next Page =  ( int )   Math . ceil ( current Offset / interval )  ;  int current Page =  ( int )   Math . round ( current Offset / interval )  ;  int target Page =  ( int )   Math . round ( target Offset / interval )  ;  if  ( velocity > 0 && next Page == previous Page )  {     next Page++ ;  } else if  ( velocity < 0 && previous Page == next Page )  {     previous Page-- ;  } if  ( // if scrolling towards next page velocity > 0 && // and the middle of the page hasn't been crossed already current Page < next Page && // and it would have been crossed after flinging target Page > previous Page )  {     current Page = next Page ;  } else if  ( // if scrolling towards previous page velocity < 0 && // and the middle of the page hasn't been crossed already current Page > previous Page && // and it would have been crossed after flinging target Page < next Page )  {     current Page = previous Page ;  } target Offset = current Page * interval ;  if  ( target Offset != current Offset )  {     m Actively Scrolling = true ;      react Smooth Scroll To ( get Scroll X (  ) ,  ( int )  target Offset )  ;  }}"
4612,"public static  String concern Stack String (  Block Info block Info ) {  String result = """" ;  for  (  String stack Entry : block Info . thread Stack Entries )  {     if  (  Character . is Letter ( stack Entry . char At ( 0 )  )  )  {          String [  ]  lines = stack Entry . split (  Block Info . SEPARATOR )  ;          for  (  String line : lines )  {              String key Stack String = concern Stack String ( line )  ;              if  ( key Stack String != null )  {                 return key Stack String ;              }         }         return class Simple Name ( lines [ 0 ]  )  ;      } } return result ; }"
4613,"public double distance To ( double x, double y, double z ) { final double a = this . x - x ;  final double b = this . y - y ;  final double c = this . z - z ;  return  Math . sqrt ( a * a + b * b + c * c )  ; }"
4614,"public com . anychart . core . gantt .  Data Grid Button z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
4615,"public com . anychart . standalones .  Labels Factory position Formatter (  String formatter ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . position Formatter ( %s )  ; "", wrap Quotes ( formatter )  )  )  ;  return this ; }"
4616,"public int match Filter (  Tree Walk walker )  throws  Missing Object Exception,  Incorrect Object Type Exception, IO Exception{ return include ( walker )  ? 0 : 1 ; }"
4617,public  Chamber Builder set Pref Listener (  On Data Chamber Change Listener listener ) { set On Data Change Listener ( listener )  ;  return this ; }
4618,"public void copy From (  Column Info src ) { if  ( !mutable )  {     throw new  Unsupported Operation Exception ( "" Attempt to modify an immutable  Column Info"" )  ;  } if  ( null == src )  {     throw new  Null Pointer Exception ( "" Attempt to copy null  Column Info"" )  ;  } columnkeys From Java Field Names . clear (  )  ;  columnkeys From Java Field Names . put All ( src . columnkeys From Java Field Names )  ;  column Keys From Column Names . clear (  )  ;  column Keys From Column Names . put All ( src . column Keys From Column Names )  ;  java Field Name To Internal Names . clear (  )  ;  java Field Name To Internal Names . put All ( src . java Field Name To Internal Names )  ;  copy ( src, this )  ; }"
4619,"public com . anychart . charts .  Tag Cloud credits (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . credits ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
4620,"public void init Item Long Click (  ) { m Edit Layout Height = get Resources (  )  . get Dimension Pixel Size ( R . dimen . edit_layout_height )  ;  m Adapter . set On Item Long Click Listener ( new  On Recycler View Item Long Click Listener (  )  {     @ Override     public boolean on Item Long Click (  View view, int position )  {         if  ( !m Adapter . is Edit Mode (  )  )  {             m Adapter . set Edit Mode ( true )  ;               (  (  Download Activity )  get Activity (  )  )  . enable Edit Mode ( true )  ;              // 增加 padding 是防止底下被删除按钮遮住             m Rv Video List . set Padding ( 0, 0, 0, m Edit Layout Height )  ;          }         // 这里获取对应position对应的 View Holder,需要借助 Recycler View，还有个更简便的做法是自定义的点击事件把 View Holder一起传过来          Base View Holder view Holder =  (  Base View Holder )  m Rv Video List . get Child View Holder ( view )  ;          if  ( view Holder != null )  {             m Adapter . toggle Item Checked ( position, view Holder )  ;          }         return true ;      } } )  ; }"
4621,"public com . anychart . core . cartesian . series .  Column3d min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
4622,"public com . anychart . core . stock . scrollerseries .  Jump Line allow Point Settings (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . allow Point Settings ( %s )  ; "", enabled )  )  ;  return this ; }"
4623,"private void initialize List View (  ) { places List View . set Adapter ( places Adapter )  ;  places List View . set On Item Click Listener ( new  Adapter View .  On Item Click Listener (  )  {     @ Override     public void on Item Click (  Adapter View<?> adapter View,  View view, int position, long id )  {         last Loaded Place Position = position ;          show Place ( position )  ;      } } )  ; }"
4624,"public void write Annotation (  Annotation annotation, boolean top Level ) { boolean annotates = top Level && out . annotates (  )  ;   String Ids Section string Ids = file . get String Ids (  )  ;   Type Ids Section type Ids = file . get Type Ids (  )  ;   Cst Type type = annotation . get Type (  )  ;  int type Idx = type Ids . index Of ( type )  ;  if  ( annotates )  {     out . annotate ( ""  type_idx: "" +  Hex . u4 ( type Idx )  + "" // "" + type . to Human (  )  )  ;  } out . write Uleb128 ( type Ids . index Of ( annotation . get Type (  )  )  )  ;   Collection< Name Value Pair> pairs = annotation . get Name Value Pairs (  )  ;  int size = pairs . size (  )  ;  if  ( annotates )  {     out . annotate ( ""  size: "" +  Hex . u4 ( size )  )  ;  } out . write Uleb128 ( size )  ;  int at = 0 ;  for  (  Name Value Pair pair : pairs )  {      Cst String name = pair . get Name (  )  ;      int name Idx = string Ids . index Of ( name )  ;       Constant value = pair . get Value (  )  ;      if  ( annotates )  {         out . annotate ( 0, ""  elements [ "" + at + "" ] :"" )  ;          at++ ;          out . annotate ( ""    name_idx: "" +  Hex . u4 ( name Idx )  + "" // "" + name . to Human (  )  )  ;      }     out . write Uleb128 ( name Idx )  ;      if  ( annotates )  {         out . annotate ( ""    value: "" + constant To Human ( value )  )  ;      }     write Constant ( value )  ;  } if  ( annotates )  {     out . end Annotation (  )  ;  }}"
4625,"public  Builder with Cache Size ( int max Byte Count ) { if  ( max Byte Count < 0 )  {     throw new  Illegal Argument Exception ( ""max Byte Count < 0: "" + max Byte Count )  ;  } cache = new  Platform Lru Cache ( max Byte Count )  ;  return this ; }"
4626,public final void set Selected Element ( @ Non Null final  Element element ) { m Nrf Mesh Repository . set Selected Element ( element )  ; }
4627,"public boolean check Entry Conditions (  ) { if  ( !this . started )  {     add Error ( "" Attempting to append to a non-started appender: "" + this . get Name (  )  )  ;      return false ;  } if  ( this . event Evaluator == null )  {     add Error ( "" No  Event Evaluator is set for appender  [ "" + name + "" ]  . "" )  ;      return false ;  } if  ( this . layout == null )  {     add Error ( "" No layout set for appender named  [ "" + name + "" ]  .   For more information, please visit http://logback . qos . ch/codes . html#smtp_no_layout"" )  ;      return false ;  } return true ; }"
4628,"public static void over Scroll By ( final  Pull To Refresh Base<?> view, final int delta X, final int scroll X, final int delta Y, final int scroll Y, final boolean is Touch Event ) { over Scroll By ( view, delta X, scroll X, delta Y, scroll Y, 0, is Touch Event )  ; }"
4629,public synchronized int get In Use Count (  ) { return m Cached Entries . get Count (  )  - m Least Frequently Used Exclusive Entries . get Count (  )  - m Most Frequently Used Exclusive Entries . get Count (  )  ; }
4630,"private static int find End Of Tag (  String markup, int start Pos ) { int index = markup . index Of ( CHAR_GREATER_THAN, start Pos )  ;  return index == -1 ? markup . length (  )  : index + 1 ; }"
4631,"public void add Change (  Change change ) { m Changes . add ( change )  ;  final int change Delta = get Change Delta ( change )  ;  m Final Count += change Delta ;  if  ( m Change Set Stats != null )  {     m Change Set Stats = m Change Set Stats . merge (  Change Set Stats . from Change ( change, change Delta )  )  ;  }}"
4632,"private static boolean install Patch If Device Connected (  Android Builder android Builder,  File patch,  String patch Pkg,  Logger logger,  String name ) { final  Android Debug Bridge android Debug Bridge = init Android Debug Bridge ( android Builder )  ;  if  ( !android Debug Bridge . is Connected (  )  )  {     throw new  Runtime Exception ( "" Android  Debug  Bridge is not connected . "" )  ;  } wait For Initial Device List ( android Debug Bridge, logger )  ;   List<I Device> devices =  Arrays . as List ( android Debug Bridge . get Devices (  )  )  ;   String PATCH_INSTALL_DIRECTORY =  String . format ( ""%s%s%s"", PATCH_INSTALL_DIRECTORY_PREFIX, patch Pkg, PATCH_INSTALL_DIRECTORY_SUFFIX )  ;  if  ( devices . size (  )  == 0 )  {     throw new  Runtime Exception (  String . format ( ""%s%s%s%s%s"", ""no device connected,please check whether the connection is "" + ""successful or copy "", patch, "" in build/outputs/awbs/libxxx . so "", PATCH_INSTALL_DIRECTORY, "" and restart you app"" )  )  ;  } if  ( devices . size (  )  > 1 )  {     throw new  Runtime Exception ( ""too much devices be connected,please disconnect the others and try again"" )  ;  }  Command Executor executor =  Command Executor .  Factory . create Default Commmand Executor (  )  ;  executor . set Logger ( logger )  ;  executor . set Capture Std Out ( true )  ;  executor . set Capture Std Err ( true )  ;   List< String> cmd =  Arrays . as List ( ""push"", patch . get Absolute Path (  ) , PATCH_INSTALL_DIRECTORY + name )  ;  try {     executor . execute Command ( android Builder . get Sdk Info (  )  . get Adb (  )  . get Absolute Path (  ) , cmd, false )  ;      return true ;  } catch  (  Execution Exception e )  {     throw new  Runtime Exception ( "" Error while trying to push patch to device "", e )  ;  } finally {      String errout = executor . get Standard Error (  )  ;      if  (  ( errout != null )  &&  ( errout . trim (  )  . length (  )  > 0 )  )  {         logger . error ( errout )  ;      } }}"
4633,"public  To String Builder append (  String field Name, byte [  ]  array, boolean full Detail ) { style . append ( buffer, field Name, array,  Boolean . value Of ( full Detail )  )  ;  return this ; }"
4634,public static  Database Reference thread Ref (  String firebase Id ) { return thread Ref (  )  . child ( firebase Id )  ; }
4635,"public void align Minimum (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . align Minimum (  )  ; "" )  ; }"
4636,"public com . anychart . charts .  Polar padding (  Number value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
4637,"public com . anychart . standalones .  Labels Factory parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
4638,"public  Order order (  String order Id, int grand Total ) { return new  Order ( this, order Id, grand Total )  ; }"
4639,public  Any Long Object Id get Id (  ) { return id ; }
4640,"public com . anychart . core . stock . scrollerseries .  Range Step Area hatch Fill (  String type,  String color,  Number thickness,  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s, %s, %s, %s )  ; "", wrap Quotes ( type ) , wrap Quotes ( color ) , thickness, size )  )  ;  return this ; }"
4641,"void delete File (  String path )  throws IO Exception{ throw new IO Exception (  Message Format . format ( J Git Text . get (  )  . deleting Not Supported, path )  )  ; }"
4642,public void reset (  ) { for  ( int i = 0 ;  i < m Input Size ;  i++ )  {     m Input [ i ]  = 0 ;  } m Input Pointer = -1 ;  update Time (  )  ; }
4643,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
4644,public  Glide Request< Transcode Type> dont Animate (  ) { return  (  Glide Request< Transcode Type> )  super . dont Animate (  )  ; }
4645,"public void on Item Pinned ( int position ) { final  Dialog Fragment dialog =  Item Pinned Message Dialog Fragment . new Instance ( position )  ;  get Support Fragment Manager (  )  . begin Transaction (  )  . add ( dialog, FRAGMENT_TAG_ITEM_PINNED_DIALOG )  . commit (  )  ; }"
4646,public static int get Cache Count ( @ Non Null final  Cache Memory Utils cache Memory Utils ) { return cache Memory Utils . get Cache Count (  )  ; }
4647,public void set Hide Province ( boolean hide Province ) { this . hide Province = hide Province ; }
4648,"public com . anychart . core . stock .  Scroller scroller (  ) { return new com . anychart . core . stock .  Scroller ( js Base + "" . scroller (  ) "" )  ; }"
4649,"public static  Annotation make Inner Class (  Cst String name, int access Flags ) {  Annotation result = new  Annotation ( INNER_CLASS_TYPE, SYSTEM )  ;   Constant name Cst =  ( name != null )  ? name :  Cst Known Null . THE_ONE ;  result . put ( new  Name Value Pair ( NAME_STRING, name Cst )  )  ;  result . put ( new  Name Value Pair ( ACCESS_FLAGS_STRING,  Cst Integer . make ( access Flags )  )  )  ;  result . set Immutable (  )  ;  return result ; }"
4650,public int get Max Component Points (  ) { return this . max Component Points & 0x FFFF ; }
4651,"private  Rect F source To View Rect (  Rect F s Rect ) {  Point F v LT = source To View Coord ( new  Point F ( s Rect . left, s Rect . top )  )  ;   Point F v RB = source To View Coord ( new  Point F ( s Rect . right, s Rect . bottom )  )  ;  return new  Rect F ( v LT . x, v LT . y, v RB . x, v RB . y )  ; }"
4652,"protected  Activity Mvp Delegate<V, P> get Mvp Delegate (  ) { if  ( mvp Delegate == null )  {     mvp Delegate = new  Activity Mvp Delegate Impl ( this, this, true )  ;  } return mvp Delegate ; }"
4653,public long bytes Read (  ) { return total Bytes Read ; }
4654,"public com . anychart . scales .  Scatter Base y Scale (  ) { return new com . anychart . scales .  Scatter Base ( js Base + "" . y Scale (  ) "" )  ; }"
4655,"public com . anychart . core . cartesian . series .  Line3d parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
4656,"public com . anychart . charts .  Tree Map headers Display Mode (  String mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . headers Display Mode ( %s )  ; "", wrap Quotes ( mode )  )  )  ;  return this ; }"
4657,public static  String to Upper Case (  String string ) { int length = string . length (  )  ;  for  ( int i = 0 ;  i < length ;  i++ )  {     if  ( is Lower Case ( string . char At ( i )  )  )  {         char [  ]  chars = string . to Char Array (  )  ;          for  (  ;  i < length ;  i++ )  {             char c = chars [ i ]  ;              if  ( is Lower Case ( c )  )  {                 chars [ i ]  =  ( char )   ( c ^ CASE_MASK )  ;              }         }         return  String . value Of ( chars )  ;      } } return string ; }
4658,"public void right (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . right (  )  ; "" )  ; }"
4659,public  Prop Defaults View Model_ primitives Have Implicit Defaults And Cannot Be Required ( int primitives Have Implicit Defaults And Cannot Be Required ) { on Mutation (  )  ;  this . primitives Have Implicit Defaults And Cannot Be Required_ Int = primitives Have Implicit Defaults And Cannot Be Required ;  return this ; }
4660,"public com . anychart . core . ui .  Callout margin (  String [  ]  margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "", array To String Wrap Quotes ( margin )  )  )  ;  return this ; }"
4661,"protected static int [  ]  get Style For Text View (  Text View view ) { final int [  ]  style Ids = new int [  ]  { -1, -1 } ;  //  Try to find the specific actionbar styles if  ( is Action Bar Title ( view )  )  {     style Ids [ 0 ]  = android . R . attr . action Bar Style ;      style Ids [ 1 ]  = android . R . attr . title Text Style ;  } else if  ( is Action Bar Sub Title ( view )  )  {     style Ids [ 0 ]  = android . R . attr . action Bar Style ;      style Ids [ 1 ]  = android . R . attr . subtitle Text Style ;  } if  ( style Ids [ 0 ]  == -1 )  {     //  Use  Text Appearance as default style     style Ids [ 0 ]  =  Calligraphy Config . get (  )  . get Class Styles (  )  . contains Key ( view . get Class (  )  )  ?  Calligraphy Config . get (  )  . get Class Styles (  )  . get ( view . get Class (  )  )  : android . R . attr . text Appearance ;  } return style Ids ; }"
4662,"public static  Combiner3<V1, V2, V3> when All Succeed (  Closing Future<V1> future1,  Closing Future<V2> future2,  Closing Future<V3> future3 ) { return new  Combiner3<> ( future1, future2, future3 )  ; }"
4663,"public final synchronized void add Media Source ( int index,  Media Source media Source,  Handler handler,  Runnable on Completion Action ) { add Public Media Sources ( index,  Collections . singleton List ( media Source ) , handler, on Completion Action )  ; }"
4664,"public com . anychart . core . annotations .  Fibonacci Fan max Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", width )  )  ;  return this ; }"
4665,public static  Json Type Concatenating Coercer create For Type (  Class<?> type ) { if  (  List . class . is Assignable From ( type )  )  {     return new  List Concatenating Coercer (  )  ;  } if  (  Map . class . is Assignable From ( type )  )  {     return new  Map Concatenating Coercer (  )  ;  } if  (  String . class . equals ( type )  )  {     return new  String Concatenating Coercer (  )  ;  } if  (  Integer . class . equals ( type )  )  {     return new  Int Concatenating Coercer (  )  ;  } return new  Single Element Json Type Concatenating Coercer (  )  ; }
4666,"public static  Cst Long make ( long value ) { /*      *  Note:  Javadoc notwithstanding, this implementation always      * allocates .       */ return new  Cst Long ( value )  ; }"
4667,"public  List<T> top K (  ) {  Arrays . sort ( buffer, 0, buffer Size, comparator )  ;  if  ( buffer Size > k )  {      Arrays . fill ( buffer, k, buffer . length, null )  ;      buffer Size = k ;      threshold = buffer [ k - 1 ]  ;  } // we have to support null elements, so no  Immutable List for us return  Collections . unmodifiable List (  Arrays . as List (  Arrays . copy Of ( buffer, buffer Size )  )  )  ; }"
4668,"public void save As Pdf (  String paper Size Or Width Or Options,  Boolean landscape,  Number x,  Number y,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Pdf ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( paper Size Or Width Or Options ) , landscape, x, y, wrap Quotes ( filename )  )  )  ; }"
4669,private double calculate Delta Scale ( float t ) { double zoom = start Zoom + t *  ( target Zoom - start Zoom )  ;  return zoom / normalized Scale ; }
4670,public  Optional< Buck Cell> find Buck Cell (  Virtual File file ) { return buck Cell Manager . find Cell By Virtual File ( file )  . map (  Buck Cell Finder::to Buck Cell )  ; }
4671,"public com . anychart . charts .  Circular Gauge marker (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . marker ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
4672,public  Identifier get Id1 (  ) { return m Identifiers . get ( 0 )  ; }
4673,"private int interp Color ( int [  ]  colors, float unit ) { if  ( unit <= 0 )  {     return colors [ 0 ]  ;  } if  ( unit >= 1 )  {     return colors [ colors . length - 1 ]  ;  } float p = unit *  ( colors . length - 1 )  ;  int i =  ( int )  p ;  p -= i ;  // now p is just the fractional part  [ 0 .  .  . 1 )  and i is the index int c0 = colors [ i ]  ;  int c1 = colors [ i + 1 ]  ;  int a = ave (  Color . alpha ( c0 ) ,  Color . alpha ( c1 ) , p )  ;  int r = ave (  Color . red ( c0 ) ,  Color . red ( c1 ) , p )  ;  int g = ave (  Color . green ( c0 ) ,  Color . green ( c1 ) , p )  ;  int b = ave (  Color . blue ( c0 ) ,  Color . blue ( c1 ) , p )  ;  return  Color . argb ( a, r, g, b )  ; }"
4674,"public com . anychart . core . axismarkers .  Gantt Range fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
4675,public com . google . protobuf .  Byte String get Username Bytes (  ) { java . lang .  Object ref = username_ ;  if  ( ref instanceof  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      username_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
4676,"public  Build Execution Result create Build Execution Result (  ) { //  Insertion order matters  Linked Hash Map< Build Rule,  Optional< Build Result>> result Builder = new  Linked Hash Map<> (  )  ;  for  ( int i = 0, len = build Results . size (  )  ;  i < len ;  i++ )  {      Build Rule rule = rules To Build . get ( i )  ;      result Builder . put ( rule,  Optional . of Nullable ( build Results . get ( i )  )  )  ;  } return  Immutable Build Execution Result . of ( result Builder, build Results . stream (  )  . filter (  input -> !input . is Success (  )  )  . collect (  Collectors . to List (  )  )  )  ; }"
4677,"public  Drawable rounded Drawable (  Resources resources,  Drawable drawable, @ Nullable  Border Options border Options, @ Nullable  Rounding Options rounding Options ) { if  ( border Options != null && border Options . width > 0 )  {     return rounded Drawable With Border ( resources, drawable, border Options, rounding Options )  ;  } else {     return rounded Drawable Without Border ( resources, drawable, rounding Options )  ;  }}"
4678,"public static  Stream<T> stream (  Iterable<T> iterable ) { return  ( iterable instanceof  Collection )  ?  (  (  Collection<T> )  iterable )  . stream (  )  :  Stream Support . stream ( iterable . spliterator (  ) , false )  ; }"
4679,"public com . anychart . charts .  Pie padding (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
4680,"public com . anychart . charts .  Pareto bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
4681,"public com . anychart . core . stock .  Grouping levels (  String [  ]  levels List ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . levels ( %s )  ; "", array To String Wrap Quotes ( levels List )  )  )  ;  return this ; }"
4682,"public com . anychart . standalones .  Title margin (  String value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
4683,public void is Equal To Ignoring Scale (  String expected ) { compare Values ( new  Big Decimal ( expected )  )  ; }
4684,"public  String get Method Name (  ) { return is Super (  )  ? ""super"" : ""this"" ; }"
4685,"public void update Type (  Rev Walk walk )  throws IO Exception{ if  ( type Is Correct )      return ;  if  ( type ==  Type . UPDATE && ! Any Object Id . is Equal ( old Id, new Id )  )  {      Rev Object o = walk . parse Any ( old Id )  ;       Rev Object n = walk . parse Any ( new Id )  ;      if  ( ! ( o instanceof  Rev Commit )  || ! ( n instanceof  Rev Commit )  || !walk . is Merged Into (  (  Rev Commit )  o,  (  Rev Commit )  n )  )          set Type (  Type . UPDATE_NONFASTFORWARD )  ;  } type Is Correct = true ; }"
4686,static  Realm create Instance (  Os Shared Realm shared Realm ) { return new  Realm ( shared Realm )  ; }
4687,public void attach Controller (  Activity Controller controller ) { this . controller = controller ; }
4688,"public com . anychart . core . stock . indicators . MACD macd ( com . anychart . data .  Table Mapping mapping,  Number fast Period,  Number slow Period,  Number signal Period,  String macd Series Type, com . anychart . enums .  Stock Series Type signal Series Type, com . anychart . enums .  Stock Series Type histogram Series Type ) { return new com . anychart . core . stock . indicators . MACD (  String . format (  Locale . US, js Base + "" . macd ( %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, fast Period, slow Period, signal Period, wrap Quotes ( macd Series Type ) ,  ( signal Series Type != null )  ? signal Series Type . get Js Base (  )  : null,  ( histogram Series Type != null )  ? histogram Series Type . get Js Base (  )  : null )  )  ; }"
4689,"public com . anychart . charts .  Venn margin (  String value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
4690,"public com . anychart . core . annotations .  Infinite Line height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
4691,public void set Use Pie Rotation ( boolean _use Pie Rotation ) { m Use Pie Rotation = _use Pie Rotation ; }
4692,public static  Path file From Path (  String path ) { return  Fs . from Url ( path )  ; }
4693,"protected final  Annotation Spec for Grpc Service (  ) { return  Annotation Spec . builder (  For Grpc Service . class )  . add Member ( ""value"", ""$T . class"", grpc Class (  )  )  . build (  )  ; }"
4694,"public static _ Fields find By Thrift Id Or Throw ( int field Id ) { _ Fields fields = find By Thrift Id ( field Id )  ;  if  ( fields == null )      throw new java . lang .  Illegal Argument Exception ( "" Field "" + field Id + "" doesn't exist!"" )  ;  return fields ; }"
4695,"public void set Saturation Level ( float level ) { directly On ( real Display Manager,  Display Manager . class )  . set Saturation Level ( level )  ; }"
4696,"public void set Channel (  Channel Info channel Info,  Response Listener< Object> listener ) { if  ( channel Info == null )  {     throw new  Null Pointer Exception ( ""channel Info must not be null"" )  ;  }  String uri = ""ssap://tv/open Channel"" ;  JSON Object payload = new JSON Object (  )  ;  try {     if  ( channel Info . get Id (  )  != null )  {         payload . put ( ""channel Id"", channel Info . get Id (  )  )  ;      }     if  ( channel Info . get Number (  )  != null )  {         payload . put ( ""channel Number"", channel Info . get Number (  )  )  ;      } } catch  ( JSON Exception e )  {     e . print Stack Trace (  )  ;  }  Service Command< Response Listener< Object>> request = new  Service Command< Response Listener< Object>> ( this, uri, payload, true, listener )  ;  request . send (  )  ; }"
4697,public void free ( T base Sub ) { get Object Pool ( base Sub . s_name )  . free ( base Sub )  ; }
4698,public  Piped Output Stream get Input Stream Feeder (  ) { return input Stream Feeder ; }
4699,"public com . anychart . core . annotations .  Andrews Pitchfork second X Anchor (  String  Second ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . second X Anchor ( %s )  ; "", wrap Quotes (  Second )  )  )  ;  return this ; }"
4700,public boolean is Opened (  ) { return is Opened ; }
4701,"void update Session ( final int duration ) { check Internal State (  )  ;  L . d ( "" [  Connection  Queue ]  update Session"" )  ;  if  ( duration > 0 )  {     //will only send data if there is something valuable to send     boolean data Available = false ;       String data = prepare Common Request Data (  )  ;      if  (  Countly . shared Instance (  )  . consent (  )  . get Consent (  Countly .  Countly Feature Names . sessions )  )  {         data += ""&session_duration="" + duration ;          data Available = true ;      }     if  (  Countly . shared Instance (  )  . consent (  )  . get Consent (  Countly .  Countly Feature Names . attribution )  )  {         if  (  Countly . shared Instance (  )  . is Attribution Enabled )  {              String cached Ad Id = store_ . get Cached Advertising Id (  )  ;              if  ( !cached Ad Id . is Empty (  )  )  {                 data += ""&aid="" +  Utils Networking . url Encode String ( ""{\""adid\"":\"""" + cached Ad Id + ""\""}"" )  ;                  data Available = true ;              }         }     }     if  ( data Available )  {         store_ . add Connection ( data )  ;          tick (  )  ;      } }}"
4702,public void show Controller (  ) { show Controller ( should Show Controller Indefinitely (  )  )  ; }
4703,public void set Touch Num ( int e_touch Num ) { this . e_touch Num = e_touch Num ; }
4704,"public static long decode (  String string Value ) {  Parse Request request =  Parse Request . from String ( string Value )  ;  try {     return parse Unsigned Long ( request . raw Value, request . radix )  ;  } catch  (  Number Format Exception e )  {      Number Format Exception decode Exception = new  Number Format Exception ( "" Error parsing value: "" + string Value )  ;      decode Exception . init Cause ( e )  ;      throw decode Exception ;  }}"
4705,"public com . anychart . core . cartesian . series .  Continuous Range Base right (  Number right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", right )  )  ;  return this ; }"
4706,"public com . anychart . charts .  Circular Gauge max Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
4707,public  File Download Queue Set add Task Finish Listener ( final  Base Download Task .  Finish Listener finish Listener ) { if  ( this . task Finish Listener List == null )  {     this . task Finish Listener List = new  Array List<> (  )  ;  } this . task Finish Listener List . add ( finish Listener )  ;  return this ; }
4708,"public boolean contains ( @ Non Null final  Optional Update optional Update ) { final  String optional Version = optional Update . get Optional Version (  )  ;  final  String stored Value = prefs . get String ( KEY_OPTIONAL_UPDATE, """" )  ;  return stored Value . equals ( optional Version )  ; }"
4709,"public void auto Redraw (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . auto Redraw (  )  ; "" )  ; }"
4710,"public  Data Gate Client with Auth (  String username,  String password ) { this . username = username ;  this . password = password ;  return this ; }"
4711,public  Complete Builder where Args ( @ Nullable T .  .  .  where Args ) { this . where Args = unmodifiable Non Null List Of Strings ( where Args )  ;  return this ; }
4712,public static X509 Certificate read Single X509 Certificate (  String x509 Certificate As Pem ) { return security Provider Tool . decode Pem Encoded Certificate ( new  String Reader ( x509 Certificate As Pem )  )  ; }
4713,"public  Remote Config call (  )  throws  Git API Exception{ check Callable (  )  ;  try {      Stored Config config = repo . get Config (  )  ;       Remote Config remote = new  Remote Config ( config, name )  ;       Ref Spec ref Spec = new  Ref Spec (  )  ;      ref Spec = ref Spec . set Force Update ( true )  ;      ref Spec = //$NON-NLS-1$     ref Spec . set Source Destination ( //$NON-NLS-1$      Constants . R_HEADS + ""*"", //$NON-NLS-1$      Constants . R_REMOTES + name + ""/*"" )  ;      remote . add Fetch Ref Spec ( ref Spec )  ;      remote . add URI ( uri )  ;      remote . update ( config )  ;      config . save (  )  ;      return remote ;  } catch  ( IO Exception | URI Syntax Exception e )  {     throw new J Git Internal Exception ( e . get Message (  ) , e )  ;  }}"
4714,public  Builder set Locale ( java . lang .  String value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } locale_ = value ;  on Changed (  )  ;  return this ; }
4715,"public com . anychart . charts .  Heat Map hatch Fill ( com . anychart . graphics . vector .  Hatch Fill settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
4716,"public static  Document parse ( @ Non Null  String xml )  throws  Parser Configuration Exception, SAX Exception, IO Exception{ xml =  Xml Utils . strip Bom ( xml )  ;  return parse ( xml, new  Input Source ( new  String Reader ( xml )  ) , true, true )  ; }"
4717,"public void register Callback ( final  Callback Manager callback Manager, final  Facebook Callback< Device Share Dialog .  Result> callback ) { get Dialog (  )  . register Callback ( callback Manager, callback )  ; }"
4718,"List< String> seek (  List< String> imm List,  String to Find ) {  Array List< String> list = new  Array List<> ( imm List . size (  )  )  ;  list . add All ( imm List )  ;  int i ;  for  ( i = 0 ;  i < list . size (  )  ;  i++ )  {     if  ( list . get ( i )  . equals ( to Find )  )  {         break ;      } } return list . sub List ( i, list . size (  )  )  ; }"
4719,"public com . anychart . core . stock . scrollerseries .  Candlestick height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
4720,"public  Reference<K, V> create Reference (  Entry<K, V> entry, int hash,  Reference<K, V> next ) { if  (  Concurrent Reference Hash Map . this . reference Type ==  Reference Type . WEAK )  {     return new  Weak Entry Reference<K, V> ( entry, hash, next, this . queue )  ;  } return new  Soft Entry Reference<K, V> ( entry, hash, next, this . queue )  ; }"
4721,public static  String base64 Encode ( byte [  ]  info ) { return  Base64 . encode ( info )  ; //        return  Base64 . encode Base64 String ( info )  ; }
4722,"public com . anychart . charts .  Waterfall max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
4723,"public  Cart Update cart Update ( int grand Total ) { return new  Cart Update ( this, grand Total )  ; }"
4724,"public com . anychart . core . axismarkers .  Gantt Text letter Spacing (  Number spacing ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . letter Spacing ( %s )  ; "", spacing )  )  ;  return this ; }"
4725,"public void test Distinct Zeros (  ) {  Atomic Double at = new  Atomic Double ( +0 . 0 )  ;  assert False ( at . compare And Set ( -0 . 0, 7 . 0 )  )  ;  assert False ( at . weak Compare And Set ( -0 . 0, 7 . 0 )  )  ;  assert Bit Equals ( +0 . 0, at . get (  )  )  ;  assert True ( at . compare And Set ( +0 . 0, -0 . 0 )  )  ;  assert Bit Equals ( -0 . 0, at . get (  )  )  ;  assert False ( at . compare And Set ( +0 . 0, 7 . 0 )  )  ;  assert False ( at . weak Compare And Set ( +0 . 0, 7 . 0 )  )  ;  assert Bit Equals ( -0 . 0, at . get (  )  )  ; }"
4726,"public  Realm Query<E> between (  String field Name, float from, float to ) { realm . check If Valid (  )  ;   Field Descriptor fd = schema . get Field Descriptors ( field Name,  Realm Field Type . FLOAT )  ;  this . query . between ( fd . get Column Keys (  ) , from, to )  ;  return this ; }"
4727,public  String as JSON (  ) { //  Cycle links are printed as a simple sequence of integers of row keys in the link column .  return os Results . to JSON ( -1 )  ; }
4728,public  List< String> get Claims Locales Supported (  ) { return get ( CLAIMS_LOCALES_SUPPORTED )  ; }
4729,public void set Arrow Icon ( int arrow Icon Res Id ) { this . arrow Icon Res = arrow Icon Res Id ;  this . arrow Icon . set Image Resource ( arrow Icon Res )  ; }
4730,public  Object clone (  )  throws  Clone Not Supported Exception{ return super . clone (  )  ; }
4731,"Only assert Not Cancelled (  String .  .  .  nodes ) { return assert About Nodes ( not ( CANCELLED ) , nodes )  ; }"
4732,"public com . anychart . core . annotations .  Horizontal Line x Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4733,"public com . anychart . charts .  Polar select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
4734,public boolean contains ( @ Non Null  String key ) { return get Chamber (  )  . contains ( hash Key ( key )  )  ; }
4735,"public  Optional< Build Target> get Gtest Default Test Main Dep (  Target Configuration target Configuration ) { return delegate . get Build Target ( cxx Section, GTEST_DEFAULT_TEST_MAIN_DEP, target Configuration )  ; }"
4736,"public com . anychart . core . cartesian . series .  Column3d bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
4737,"public static  Enum Bi Map<K, V> create (  Map<K, V> map ) {  Enum Bi Map<K, V> bimap = create ( infer Key Type ( map ) , infer Value Type ( map )  )  ;  bimap . put All ( map )  ;  return bimap ; }"
4738,public  Web View Manager disable Java Script Open Windows Automatically (  ) { web Settings . set Java Script Can Open Windows Automatically ( false )  ;  return this ; }
4739,public  Builder add Category (  String category ) { categories . add ( category )  ;  return this ; }
4740,public final boolean is Delta Representation (  ) { return delta Base != null ; }
4741,public  Diff Command set Path Filter (  Tree Filter path Filter ) { this . path Filter = path Filter ;  return this ; }
4742,public  Object get Value (  ) { return this . value ; }
4743,public boolean remove Callback (  Job Manager Callback callback ) { return job Manager Thread . remove Callback ( callback )  ; }
4744,"public int get Index Size ( int loc ) { //	 System . out . println ( "" Getting size of index at ""+loc )  ;  int hold = pos ;  pos = loc ;  int count = read Int ( 2 )  ;  if  ( count <= 0 )  {     return 2 ;  } int encsz = read Byte (  )  ;  if  ( encsz < 1 || encsz > 4 )  {     throw new  Runtime Exception ( "" Offsize: "" + encsz + "", must be in range 1-4 . "" )  ;  } // pos is now at the first offset .   last offset is at count*encsz pos += count * encsz ;  int end = read Int ( encsz )  ;  pos = hold ;  return 2 +  ( count + 1 )  * encsz + end ; }"
4745,public void disable Sync Cookies (  ) { use Sync Cookies . set ( false )  ; }
4746,"public static void main (  String [  ]  args ) { // TODO ( bobyf ) : add shutdown handling  Background Task Manager background Task Manager =  Async Background Task Manager . of (  )  ;   Main Without Nailgun main Without Nailgun = new  Main Without Nailgun (  )  ;   Main Runner main Runner = main Without Nailgun . prepare Main Runner ( background Task Manager )  ;  main Runner . run Main Then Exit ( args,  System . nano Time (  )  )  ;  background Task Manager . shutdown Now (  )  ; }"
4747,"static final boolean proxy Start Plugin Process (  Context context, int index ) { //  Content Values values = new  Content Values (  )  ;  values . put ( KEY_METHOD, METHOD_START_PROCESS )  ;  values . put ( KEY_COOKIE, PMF . s Plugin Mgr . m Local Cookie )  ;   Uri uri = context . get Content Resolver (  )  . insert (  Process Pit Provider Base . build Uri ( index ) , values )  ;  if  ( LOG )  {      Log Debug . d ( PLUGIN_TAG, ""proxy Start Plugin Process insert . rc="" +  ( uri != null ? uri . to String (  )  : ""null"" )  )  ;  } if  ( uri == null )  {     if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, ""proxy Start Plugin Process failed"" )  ;      }     return false ;  } return true ; }"
4748,public static  Keyboard value Of ( int value ) { return for Number ( value )  ; }
4749,"public com . anychart . ui .  Context Menu context Menu (  ) { return new com . anychart . ui .  Context Menu ( js Base + "" . context Menu (  ) "" )  ; }"
4750,"public com . anychart . standalones .  Title padding (  Number value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, value3, value4 )  )  ;  return this ; }"
4751,"public void to A11y Table (  String title,  Boolean as String ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to A11y Table ( %s, %s )  ; "", wrap Quotes ( title ) , as String )  )  ; }"
4752,public void set Foreground FPS ( int fps ) { this . config . foreground FPS = fps ; }
4753,"void on Continuous Glucose Measurement Received With Crc Error ( @ Non Null final  Bluetooth Device device, @ Non Null final  Data data ) {// ignore}"
4754,"public  List< User Meta Value> load All Deep From Cursor (  Cursor cursor ) { int count = cursor . get Count (  )  ;   List< User Meta Value> list = new  Array List< User Meta Value> ( count )  ;  if  ( cursor . move To First (  )  )  {     if  ( identity Scope != null )  {         identity Scope . lock (  )  ;          identity Scope . reserve Room ( count )  ;      }     try {         do {             list . add ( load Current Deep ( cursor, false )  )  ;          } while  ( cursor . move To Next (  )  )  ;      } finally {         if  ( identity Scope != null )  {             identity Scope . unlock (  )  ;          }     } } return list ; }"
4755,"public com . anychart . core . map . series .  Choropleth bounds (  Number x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, height )  )  ;  return this ; }"
4756,List<byte [  ] > get Password Bytes ( boolean unicode Conversion ) { // TODO - handle unicode Conversion when we support version 5 if  ( this . password Bytes != null || this . password String == null )  {     return  Collections . singleton List ( this . password Bytes )  ;  } else {     if  ( is Alpha Num7 Bit String ( this . password String )  )  {         // in any other way         return  Collections . singleton List ( PDF String Util . as Bytes ( password String )  )  ;      } else {         return generate Possible Password Bytes ( password String )  ;      } }}
4757,"private void add Icon To Multi Geometry (  String icon Url,  Kml Style url Style,  Kml Style inline Style,  Multi Geometry multi Geometry,  List< Object> objects ) {  Iterator< Geometry> geometries = multi Geometry . get Geometry Object (  )  . iterator (  )  ;   Iterator< Object> obj Itr = objects . iterator (  )  ;  while  ( geometries . has Next (  )  && obj Itr . has Next (  )  )  {      Geometry geometry = geometries . next (  )  ;       Object object = obj Itr . next (  )  ;      add Icon To Geometry ( icon Url, url Style, inline Style, geometry, object )  ;  }}"
4758,"void remove Window (  File Window w ) { file Windows . remove ( w . get Url (  )  )  ;  J Menu window Menu = get Window Menu (  )  ;  int count = window Menu . get Item Count (  )  ;  J Menu Item last Item = window Menu . get Item ( count - 1 )  ;   String name = get Short Name ( w . get Url (  )  )  ;  for  ( int i = 5 ;  i < count ;  i++ )  {     J Menu Item item = window Menu . get Item ( i )  ;      // separator     if  ( item == null )          continue ;       String text = item . get Text (  )  ;      //1 D:\foo . js     //2 D:\bar . js     int pos = text . index Of ( ' ' )  ;      if  ( text . substring ( pos + 1 )  . equals ( name )  )  {         window Menu . remove ( item )  ;          // -------     [ 4 ]          if  ( count == 6 )  {             // remove the final separator             window Menu . remove ( 4 )  ;          } else {             int j = i - 4 ;              for  (  ;  i < count - 1 ;  i++ )  {                 J Menu Item this Item = window Menu . get Item ( i )  ;                  if  ( this Item != null )  {                     //1 D:\foo . js                     //2 D:\bar . js                     text = this Item . get Text (  )  ;                      if  ( text . equals ( "" More  Windows .  .  . "" )  )  {                         break ;                      } else {                         pos = text . index Of ( ' ' )  ;                          this Item . set Text (  ( char )   ( '0' + j )  + "" "" + text . substring ( pos + 1 )  )  ;                          this Item . set Mnemonic ( '0' + j )  ;                          j++ ;                      }                 }             }             if  ( count - 6 == 0 && last Item != item )  {                 if  ( last Item . get Text (  )  . equals ( "" More  Windows .  .  . "" )  )  {                     window Menu . remove ( last Item )  ;                  }             }         }         break ;      } } window Menu . revalidate (  )  ; }"
4759,int get Writes Sent (  ) { return sent Writes . size (  )  ; }
4760,"public static  String preg Match (  String str Content,  String str Pattern ) {  Pattern title Pattern =  Pattern . compile ( str Pattern,  Pattern . CASE_INSENSITIVE )  ;   Matcher title Matcher = title Pattern . matcher ( str Content )  ;  if  ( title Matcher . find (  )  )  {     return title Matcher . group ( 0 )  ;  } return """" ; }"
4761,"public  Optional< Long> get Long (  String key ) { if  ( key == null )  {     logger . debug ( "" The key to get  Remote  Config long value is null . "" )  ;      return  Optional . absent (  )  ;  }  Firebase Remote Config Value rc Value = get Remote Config Value ( key )  ;  if  ( rc Value != null )  {     try {         return  Optional . of ( rc Value . as Long (  )  )  ;      } catch  (  Illegal Argument Exception e )  {         if  ( !rc Value . as String (  )  . is Empty (  )  )  {             logger . debug ( "" Could not parse value: '%s' for key: '%s' . "", rc Value . as String (  ) , key )  ;          }     } } return  Optional . absent (  )  ; }"
4762,private void recover Draggable Panel State (  Bundle saved Instance State ) { final  Draggable State draggable State =  (  Draggable State )  saved Instance State . get Serializable ( DRAGGABLE_PANEL_STATE )  ;  if  ( draggable State == null )  {     draggable Panel . set Visibility (  View . GONE )  ;      return ;  } update Draggable Panel State Delayed ( draggable State )  ; }
4763,"public com . anychart . charts .  Sunburst max Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
4764,protected void cleanup (  ) {// do nothing}
4765,public int get Bits Per Sample (  ) { return  (  Integer )  content . get ( FIELD_BITSPERSAMPLE )  ; }
4766,protected void on Clean Up (  ) {}
4767,public boolean get Wants Package Prefix (  ) { return wants Package Prefix ; }
4768,"public  Uri Components build ( boolean encoded ) { if  ( this . ssp != null )  {     return new  Opaque Uri Components ( this . scheme, this . ssp, this . fragment )  ;  } else {     return new  Hierarchical Uri Components ( this . scheme, this . user Info, this . host, this . port, this . path Builder . build (  ) , this . query Params, this . fragment, encoded, true )  ;  }}"
4769,public void release (  ) { if  ( m Recycler View != null && m Internal Use On Item Touch Listener != null )  {     m Recycler View . remove On Item Touch Listener ( m Internal Use On Item Touch Listener )  ;  } m Internal Use On Item Touch Listener = null ;  m Recycler View = null ; }
4770,"public static void init With Custom Server (  Application application,  String qiscus App Id,  String server Base Url,  String mqtt Broker Url, boolean enable Mqtt LB,  String base URLLB ) { app Instance = application ;  app Id = qiscus App Id ;  app Server = !server Base Url . ends With ( ""/"" )  ? server Base Url + ""/"" : server Base Url ;  chat Config = new  Qiscus Core Chat Config (  )  ;  app Handler = new  Handler (  Qiscus Core . get Apps (  )  . get Application Context (  )  . get Main Looper (  )  )  ;  task Executor = new  Scheduled Thread Pool Executor ( 5 )  ;  local Data Manager = new  Local Data Manager (  )  ;  data Store = new  Qiscus Data Base Helper (  )  ;  heart Beat = 5000 ;  automatic Heart Beat = 30000 ;   Qiscus Core . enable Mqtt LB = enable Mqtt LB ;   Qiscus Core . mqtt Broker Url = mqtt Broker Url ;   Qiscus Core . base URLLB = base URLLB ;  enable Event Report = false ;  local Data Manager . set URLLB ( base URLLB )  ;  get App Config (  )  ;  configure Fcm Token (  )  ; }"
4771,public void on Start (  ) {}
4772,"public void draw (  Canvas canvas, int x, int y, int width, int height,  Paint paint ) { paint . set Anti Alias ( m Renderer . is Antialiasing (  )  )  ;  paint . set Style (  Style . FILL )  ;  paint . set Text Size ( m Renderer . get Labels Text Size (  )  )  ;  int legend Size = get Legend Size ( m Renderer, height / 5, 0 )  ;  int left = x ;  int top = y ;  int right = x + width ;  int c Length = m Dataset . get Categories Count (  )  ;   String [  ]  categories = new  String [ c Length ]  ;  for  ( int category = 0 ;  category < c Length ;  category++ )  {     categories [ category ]  = m Dataset . get Category ( category )  ;  } if  ( m Renderer . is Fit Legend (  )  )  {     legend Size = draw Legend ( canvas, m Renderer, categories, left, right, y, width, height, legend Size, paint, true )  ;  } int bottom = y + height - legend Size ;  draw Background ( m Renderer, canvas, x, y, width, height, paint, false,  Default Renderer . NO_COLOR )  ;  m Step = SHAPE_WIDTH * 3 / 4 ;  int m Radius =  Math . min (  Math . abs ( right - left ) ,  Math . abs ( bottom - top )  )  ;  double r Coef = 0 . 35 * m Renderer . get Scale (  )  ;  double dec Coef = 0 . 2 / c Length ;  int radius =  ( int )   ( m Radius * r Coef )  ;  if  ( m Center X == NO_VALUE )  {     m Center X =  ( left + right )  / 2 ;  } if  ( m Center Y == NO_VALUE )  {     m Center Y =  ( bottom + top )  / 2 ;  } float short Radius = radius * 0 . 9f ;  float long Radius = radius * 1 . 1f ;   List< Rect F> prev Labels Bounds = new  Array List< Rect F> (  )  ;  for  ( int category = 0 ;  category < c Length ;  category++ )  {     int s Length = m Dataset . get Item Count ( category )  ;      double total = 0 ;       String [  ]  titles = new  String [ s Length ]  ;      for  ( int i = 0 ;  i < s Length ;  i++ )  {         total += m Dataset . get Values ( category )  [ i ]  ;          titles [ i ]  = m Dataset . get Titles ( category )  [ i ]  ;      }     float current Angle = m Renderer . get Start Angle (  )  ;       Rect F oval = new  Rect F ( m Center X - radius, m Center Y - radius, m Center X + radius, m Center Y + radius )  ;      for  ( int i = 0 ;  i < s Length ;  i++ )  {         paint . set Color ( m Renderer . get Series Renderer At ( i )  . get Color (  )  )  ;          float value =  ( float )  m Dataset . get Values ( category )  [ i ]  ;          float angle =  ( float )   ( value / total * 360 )  ;          canvas . draw Arc ( oval, current Angle, angle, true, paint )  ;          draw Label ( canvas, m Dataset . get Titles ( category )  [ i ] , m Renderer, prev Labels Bounds, m Center X, m Center Y, short Radius, long Radius, current Angle, angle, left, right, m Renderer . get Labels Color (  ) , paint, true, false )  ;          current Angle += angle ;      }     radius -=  ( int )  m Radius * dec Coef ;      short Radius -= m Radius * dec Coef - 2 ;      if  ( m Renderer . get Background Color (  )  != 0 )  {         paint . set Color ( m Renderer . get Background Color (  )  )  ;      } else {         paint . set Color (  Color . WHITE )  ;      }     paint . set Style (  Style . FILL )  ;      oval = new  Rect F ( m Center X - radius, m Center Y - radius, m Center X + radius, m Center Y + radius )  ;      canvas . draw Arc ( oval, 0, 360, true, paint )  ;      radius -= 1 ;  } prev Labels Bounds . clear (  )  ;  draw Legend ( canvas, m Renderer, categories, left, right, y, width, height, legend Size, paint, false )  ;  draw Title ( canvas, x, y, width, paint )  ; }"
4773,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
4774,"void on Attached (  Layout State Context layout State Context, @ Nullable  List< Attachable> attachables ) { assert Main Thread (  )  ;  if  ( m Attached == null && attachables == null )  {     return ;  } final  Layout State Context previous Layout State Context = m Layout State Context ;  m Layout State Context = layout State Context ;  if  ( attachables == null )  {     detach All (  Preconditions . check Not Null ( previous Layout State Context ) ,  Preconditions . check Not Null ( m Attached )  )  ;      m Attached = null ;      return ;  }  Linked Hash Map< String,  Attachable> attachable Map = new  Linked Hash Map<> ( attachables . size (  )  )  ;  for  (  Attachable attachable : attachables )  {     attachable Map . put ( attachable . get Unique Id (  ) , attachable )  ;  } if  ( m Attached == null )  {     attach All ( attachable Map )  ;      m Attached = attachable Map ;      return ;  } final  Layout State Context safe Layout State Context =  Preconditions . check Not Null ( previous Layout State Context )  ;  for  (  Map .  Entry< String,  Attachable> attached Entry : m Attached . entry Set (  )  )  {     if  ( !attachable Map . contains Key ( attached Entry . get Key (  )  )  )  {         attached Entry . get Value (  )  . detach ( safe Layout State Context )  ;      } } for  (  Map .  Entry< String,  Attachable> attachable Entry : attachable Map . entry Set (  )  )  {     final  Attachable existing = m Attached . get ( attachable Entry . get Key (  )  )  ;      if  ( existing == null )  {         attachable Entry . get Value (  )  . attach ( m Layout State Context )  ;      } else if  ( existing . should Update ( attachable Entry . get Value (  )  )  )  {         existing . detach ( safe Layout State Context )  ;          attachable Entry . get Value (  )  . attach ( m Layout State Context )  ;      } else if  ( !existing . use Legacy Update Behavior (  )  )  {         //  If the attachable already exists and it doesn't need to update, make sure to use the         // existing one .          attachable Entry . set Value ( existing )  ;      } } m Attached = attachable Map ; }"
4775,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_LINKED_INFO ; }
4776,"static boolean does Channel Exist (  Notification Manager notification Manager,  String channel )  throws  Exception{  Object result = notification Manager . get Class (  )  . get Method ( ""get Notification Channel"",  String . class )  . invoke ( notification Manager, channel )  ;  return result != null ; }"
4777,"private void handle Editor Change Received ( JSON Object change Message ) { try {     final JSON Object payload = change Message . get JSON Object ( ""payload"" )  ;      final JSON Array actions = payload . get JSON Array ( ""actions"" )  ;      for  ( int i = 0 ;  i < actions . length (  )  ;  i++ )  {         final JSON Object change = actions . get JSON Object ( i )  ;          final  String target Activity = JSON Utils . optional String Key ( change, ""target_activity"" )  ;          final  String name = change . get String ( ""name"" )  ;          m Editor Changes . put ( name, new MP Pair< String, JSON Object> ( target Activity, change )  )  ;      }     apply Variants And Event Bindings (  )  ;  } catch  ( final JSON Exception e )  {     MP Log . e ( LOGTAG, "" Bad change request received"", e )  ;  }}"
4778,"public static void print In Case Of Errors Or Warnings (  Context context ) { print In Case Of Errors Or Warnings ( context, 0 )  ; }"
4779,public  String to String (  ) { if  ( this . get Object (  )  == null )  {     return this . get Style (  )  . get Null Text (  )  ;  }  Class<?> clazz = this . get Object (  )  . get Class (  )  ;  this . append Fields In ( clazz )  ;  while  ( clazz . get Superclass (  )  != null && clazz != this . get Up To Class (  )  )  {     clazz = clazz . get Superclass (  )  ;      this . append Fields In ( clazz )  ;  } return super . to String (  )  ; }
4780,"public static void create Table (  Database db, boolean if Not Exists ) {  String constraint = if Not Exists ? ""IF NOT EXISTS "" : """" ;  db . exec SQL ( // ""CREATE TABLE "" + constraint + ""\""SIMPLE_ENTITY\""  ( "" + // 0: id ""\""_id\"" INTEGER PRIMARY KEY ,"" + // 1: simple Boolean ""\""SIMPLE_BOOLEAN\"" INTEGER,"" + // 2: simple Byte ""\""SIMPLE_BYTE\"" INTEGER,"" + // 3: simple Short ""\""SIMPLE_SHORT\"" INTEGER,"" + // 4: simple Int ""\""SIMPLE_INT\"" INTEGER,"" + // 5: simple Long ""\""SIMPLE_LONG\"" INTEGER,"" + // 6: simple Float ""\""SIMPLE_FLOAT\"" REAL,"" + // 7: simple Double ""\""SIMPLE_DOUBLE\"" REAL,"" + // 8: simple String ""\""SIMPLE_STRING\"" TEXT,"" + // 9: simple Byte Array ""\""SIMPLE_BYTE_ARRAY\"" BLOB )  ; "" )  ; }"
4781,"public void on Activity Result ( final int request Code, final int result Code, final  Intent data ) { final  String method Name = "":on Activity Result"" ;  if  ( request Code ==  Authentication Constants . UI Request . BROWSER_FLOW )  {     if  ( data == null )  {         //  If data is null,  Request Id is unknown .   It could not find         // callback to respond to this request .           Logger . e ( TAG + method Name, ""on Activity Result BROWSER_FLOW data is null . "", """", ADAL Error . ON_ACTIVITY_RESULT_INTENT_NULL )  ;          return ;      }      Authentication Request State waiting Request ;      final  Bundle extras = data . get Extras (  )  ;      final int request Id = extras . get Int (  Authentication Constants .  Browser . REQUEST_ID )  ;      synchronized  ( DELEGATE_MAP )  {         waiting Request = DELEGATE_MAP . get ( request Id )  ;      }     if  ( waiting Request != null )  {         final  Acquire Token Request acquire Token Request = new  Acquire Token Request ( m Context, this, waiting Request . get API Event (  )  )  ;          acquire Token Request . on Activity Result ( request Code, result Code, data )  ;      } else {          Logger . e ( TAG + method Name, ""on Activity Result did not find the waiting request .  "" + REQUEST_ID + request Id, null, ADAL Error . ON_ACTIVITY_RESULT_INTENT_NULL )  ;      } }}"
4782,"public com . anychart . core . cartesian . series .  Base falling Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { return new com . anychart . core . cartesian . series .  Base (  String . format (  Locale . US, js Base + "" . falling Fill ( %s, %s, %s, %s ) "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ; }"
4783,public  String get Filename (  ) { return  String Utils . get Filename ( this . path )  ; }
4784,"public com . anychart . core . gantt .  Time Line Header font Style ( com . anychart . graphics . vector . text .  Font Style style ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Style ( %s )  ; "",  ( style != null )  ? style . get Js Base (  )  : null )  )  ;  return this ; }"
4785,public void wait Until Not Racy (  )  throws  Interrupted Exception{ long timestamp Resolution = file Store Attribute Cache . get Fs Timestamp Resolution (  )  . to Nanos (  )  ;  while  ( is Racy Clean (  Instant . now (  )  )  )  {      Time Unit . NANOSECONDS . sleep ( timestamp Resolution )  ;  }}
4786,public float get Z Index (  ) { return m Polygon Options . get Z Index (  )  ; }
4787,"public void for Each Insn (  Ssa Insn .  Visitor visitor ) { //  This gets called a LOT, and not using an iterator // saves a lot of allocations and reduces memory usage int len = insns . size (  )  ;  for  ( int i = 0 ;  i < len ;  i++ )  {     insns . get ( i )  . accept ( visitor )  ;  }}"
4788,public static  Hash Function murmur3_32 (  ) { return  Murmur3_32 Hash Function . MURMUR3_32 ; }
4789,"public void start Collecting Gauges (  Perf Session session,  Application Process State application Process State ) { if  ( this . session Id != null )  {     stop Collecting Gauges (  )  ;  } long collection Frequency = start Collecting Gauges ( application Process State, session . get Timer (  )  )  ;  if  ( collection Frequency == INVALID_GAUGE_COLLECTION_FREQUENCY )  {     logger . warn ( "" Invalid gauge collection frequency .   Unable to start collecting  Gauges . "" )  ;      return ;  } this . session Id = session . session Id (  )  ;  this . application Process State = application Process State ;  //  This is needed, otherwise the  Runnable might use a stale value .  final  String session Id For Scheduled Task = session Id ;  final  Application Process State application Process State For Scheduled Task = application Process State ;  try {     gauge Manager Data Collection Job = gauge Manager Executor . schedule At Fixed Rate (  (  )  -> {         sync Flush ( session Id For Scheduled Task, application Process State For Scheduled Task )  ;      }, /*initial Delay=*/     collection Frequency * APPROX_NUMBER_OF_DATA_POINTS_PER_GAUGE_METRIC, /*period=*/     collection Frequency * APPROX_NUMBER_OF_DATA_POINTS_PER_GAUGE_METRIC,  Time Unit . MILLISECONDS )  ;  } catch  (  Rejected Execution Exception e )  {     logger . warn ( "" Unable to start collecting  Gauges: "" + e . get Message (  )  )  ;  }}"
4790,public static  Transition Inflater from ( @ Non Null  Context context ) { return new  Transition Inflater ( context )  ; }
4791,"public static  String encode To Http (  String str,  String encoding ) {  String enc ;  try {     enc = URL Encoder . encode ( str, encoding )  ;  } catch  (  Unsupported Encoding Exception e )  {     e . print Stack Trace (  )  ;       Log . v ( "" Mew X- Net"",  Objects . require Non Null ( e . get Message (  )  )  )  ;      // prevent crash     enc = """" ;  } return enc ; }"
4792,"public com . anychart . standalones .  Resource List bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
4793,public int get Inner Padding Left (  ) { return inner Padding Left ; }
4794,public  Text get Body (  ) { return body ; }
4795,"public com . anychart . core . resource .  Grid bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
4796,"public com . anychart . core . annotations .  Fibonacci Timezones trend ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . trend ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4797,"private static byte [  ]  wrap Secret (  Private Key Entry entry,  Secret Key key )  throws  No Such Padding Exception,  No Such Algorithm Exception,  Invalid Key Exception,  Illegal Block Size Exception,  No Such Provider Exception{  Key Pair m Pair = new  Key Pair ( entry . get Certificate (  )  . get Public Key (  ) , entry . get Private Key (  )  )  ;  //  This is the only cipher that's supported by  Android Keystore  ( api version +18 )  //  The padding makes sure this encryption isn't deterministic  Cipher m Cipher =  Cipher . get Instance ( ""RSA/ECB/PKCS1 Padding"" )  ;  m Cipher . init (  Cipher . WRAP_MODE, m Pair . get Public (  )  )  ;  return m Cipher . wrap ( key )  ; }"
4798,public E get Value (  ) { return value ; }
4799,"public static  Type canonicalize (  Type type ) { if  ( type instanceof  Class )  {      Class<?> c =  (  Class<?> )  type ;      return c . is Array (  )  ? new  Generic Array Type Impl ( canonicalize ( c . get Component Type (  )  )  )  : c ;  } else if  ( type instanceof  Parameterized Type )  {      Parameterized Type p =  (  Parameterized Type )  type ;      return new  Parameterized Type Impl ( p . get Owner Type (  ) , p . get Raw Type (  ) , p . get Actual Type Arguments (  )  )  ;  } else if  ( type instanceof  Generic Array Type )  {      Generic Array Type g =  (  Generic Array Type )  type ;      return new  Generic Array Type Impl ( g . get Generic Component Type (  )  )  ;  } else if  ( type instanceof  Wildcard Type )  {      Wildcard Type w =  (  Wildcard Type )  type ;      return new  Wildcard Type Impl ( w . get Upper Bounds (  ) , w . get Lower Bounds (  )  )  ;  } else {     // type is either serializable as-is or unsupported     return type ;  }}"
4800,"protected void init Root Iterator (  Repository repo ) { repository = repo ;   Entry entry ;  if  ( ignore Node instanceof  Per Directory Ignore Node )      entry =  (  (  Per Directory Ignore Node )  ignore Node )  . entry ;  else     entry = null ;  ignore Node = new  Root Ignore Node ( entry, repo )  ; }"
4801,"public void add ( double value ) { if  ( count == 0 )  {     count = 1 ;      mean = value ;      min = value ;      max = value ;      if  ( !is Finite ( value )  )  {         sum Of Squares Of Deltas =  Na N ;      } } else {     count++ ;      if  ( is Finite ( value )  && is Finite ( mean )  )  {         //  Art of  Computer  Programming vol .  2,  Knuth, 4 . 2 . 2,  ( 15 )  and  ( 16 )          double delta = value - mean ;          mean += delta / count ;          sum Of Squares Of Deltas += delta *  ( value - mean )  ;      } else {         mean = calculate New Mean Non Finite ( mean, value )  ;          sum Of Squares Of Deltas =  Na N ;      }     min =  Math . min ( min, value )  ;      max =  Math . max ( max, value )  ;  }}"
4802,"public static  Sensor Event create Sensor Event ( int value Array Size, int sensor Type ) { check Argument ( value Array Size > 0 )  ;   Class Parameter< Integer> value Array Size Param = new  Class Parameter<> ( int . class, value Array Size )  ;   Sensor Event sensor Event =  Reflection Helpers . call Constructor (  Sensor Event . class, value Array Size Param )  ;  sensor Event . sensor =  Shadow Sensor . new Instance ( sensor Type )  ;  return sensor Event ; }"
4803,"private com . google . protobuf .  Single Field Builder V3<com . facebook . buck . remoteexecution . proto .  Manifold Bucket, com . facebook . buck . remoteexecution . proto .  Manifold Bucket .  Builder, com . facebook . buck . remoteexecution . proto .  Manifold Bucket Or Builder> get Manifold Bucket Field Builder (  ) { if  ( manifold Bucket Builder_ == null )  {     manifold Bucket Builder_ = new com . google . protobuf .  Single Field Builder V3<com . facebook . buck . remoteexecution . proto .  Manifold Bucket, com . facebook . buck . remoteexecution . proto .  Manifold Bucket .  Builder, com . facebook . buck . remoteexecution . proto .  Manifold Bucket Or Builder> ( get Manifold Bucket (  ) , get Parent For Children (  ) , is Clean (  )  )  ;      manifold Bucket_ = null ;  } return manifold Bucket Builder_ ; }"
4804,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
4805,"protected boolean block Until Timestamps (  Duration max Wait ) { if  ( timestamps == null )  {     return true ;  } try {      Proposed Timestamp . block Until ( timestamps, max Wait )  ;      return true ;  } catch  (  Timeout Exception |  Interrupted Exception e )  {      String msg = J Git Text . get (  )  . time Is Uncertain ;      for  (  Receive Command c : commands )  {         if  ( c . get Result (  )  == NOT_ATTEMPTED )  {             c . set Result ( REJECTED_OTHER_REASON, msg )  ;          }     }     return false ;  }}"
4806,public  Stopwatch reset (  ) { elapsed Nanos = 0 ;  is Running = false ;  return this ; }
4807,"public void handle Touch Event (  Motion Event ev,  Event Dispatcher event Dispatcher ) { int action = ev . get Action (  )  &  Motion Event . ACTION_MASK ;  if  ( action ==  Motion Event . ACTION_DOWN )  {     if  ( m Target Tag != -1 )  {         F Log . e (  React Constants . TAG, "" Got DOWN touch before receiving UP or CANCEL from last gesture"" )  ;      }     //  First event for this gesture .   We expect tag to be set to -1, and we use helper method     // {@link #find Target Tag For Touch} to find react view ID that will be responsible for handling     // this gesture     m Child Is Handling Native Gesture = false ;      m Gesture Start Time = ev . get Event Time (  )  ;      m Target Tag = find Target Tag And Set Coordinates ( ev )  ;      event Dispatcher . dispatch Event (  Touch Event . obtain ( get Surface Id (  ) , m Target Tag,  Touch Event Type . START, ev, m Gesture Start Time, m Target Coordinates [ 0 ] , m Target Coordinates [ 1 ] , m Touch Event Coalescing Key Helper )  )  ;  } else if  ( m Child Is Handling Native Gesture )  {     // gesture, so we shouldn't send any more touches related to it .      return ;  } else if  ( m Target Tag == -1 )  {     //  All the subsequent action types are expected to be called after ACTION_DOWN thus target     // is supposed to be set for them .      F Log . e (  React Constants . TAG, "" Unexpected state: received touch event but didn't get starting ACTION_DOWN for this "" + ""gesture before"" )  ;  } else if  ( action ==  Motion Event . ACTION_UP )  {     //  End of the gesture .   We reset target tag to -1 and expect no further event associated with     // this gesture .      find Target Tag And Set Coordinates ( ev )  ;      event Dispatcher . dispatch Event (  Touch Event . obtain ( get Surface Id (  ) , m Target Tag,  Touch Event Type . END, ev, m Gesture Start Time, m Target Coordinates [ 0 ] , m Target Coordinates [ 1 ] , m Touch Event Coalescing Key Helper )  )  ;      m Target Tag = -1 ;      m Gesture Start Time =  Touch Event . UNSET ;  } else if  ( action ==  Motion Event . ACTION_MOVE )  {     //  Update pointer position for current gesture     find Target Tag And Set Coordinates ( ev )  ;      event Dispatcher . dispatch Event (  Touch Event . obtain ( get Surface Id (  ) , m Target Tag,  Touch Event Type . MOVE, ev, m Gesture Start Time, m Target Coordinates [ 0 ] , m Target Coordinates [ 1 ] , m Touch Event Coalescing Key Helper )  )  ;  } else if  ( action ==  Motion Event . ACTION_POINTER_DOWN )  {     //  New pointer goes down, this can only happen after ACTION_DOWN is sent for the first pointer     event Dispatcher . dispatch Event (  Touch Event . obtain ( get Surface Id (  ) , m Target Tag,  Touch Event Type . START, ev, m Gesture Start Time, m Target Coordinates [ 0 ] , m Target Coordinates [ 1 ] , m Touch Event Coalescing Key Helper )  )  ;  } else if  ( action ==  Motion Event . ACTION_POINTER_UP )  {     //  Exactly onw of the pointers goes up     event Dispatcher . dispatch Event (  Touch Event . obtain ( get Surface Id (  ) , m Target Tag,  Touch Event Type . END, ev, m Gesture Start Time, m Target Coordinates [ 0 ] , m Target Coordinates [ 1 ] , m Touch Event Coalescing Key Helper )  )  ;  } else if  ( action ==  Motion Event . ACTION_CANCEL )  {     if  ( m Touch Event Coalescing Key Helper . has Coalescing Key ( ev . get Down Time (  )  )  )  {         dispatch Cancel Event ( ev, event Dispatcher )  ;      } else {         F Log . e (  React Constants . TAG, "" Received an ACTION_CANCEL touch event for which we have no corresponding ACTION_DOWN"" )  ;      }     m Target Tag = -1 ;      m Gesture Start Time =  Touch Event . UNSET ;  } else {     F Log . w (  React Constants . TAG, "" Warning : touch event was ignored .   Action="" + action + ""  Target="" + m Target Tag )  ;  }}"
4808,"public  Map Joiner with Key Value Separator (  String key Value Separator ) { return new  Map Joiner ( this, key Value Separator )  ; }"
4809,"protected P create View Id And Create Presenter (  ) { P presenter = delegate Callback . create Presenter (  )  ;  if  ( presenter == null )  {     throw new  Null Pointer Exception ( "" Presenter returned from create Presenter (  )  is null . "" )  ;  } if  ( keep Presenter During Screen Orientation Change )  {      Context context = delegate Callback . get Context (  )  ;      mosby View Id = UUID . random UUID (  )  . to String (  )  ;       Presenter Manager . put Presenter (  Presenter Manager . get Activity ( context ) , mosby View Id, presenter )  ;  } return presenter ; }"
4810,public boolean is Force Replace Inner Layout (  ) { return m Force Replace Inner Layout ; }
4811,public void set Wifi Aware Session (  Wifi Aware Session session ) { this . session = session ; }
4812,"private byte [  ]  get Advertised Network Id ( final byte [  ]  service Data ) { if  ( service Data == null )      return null ;  final  Byte Buffer advertised Network ID =  Byte Buffer . allocate ( ADVERTISED_NETWORK_ID_LENGTH )  . order (  Byte Order . BIG_ENDIAN )  ;  advertised Network ID . put ( service Data, ADVERTISED_NETWORK_ID_OFFSET, ADVERTISED_HASH_LENGTH )  ;  return advertised Network ID . array (  )  ; }"
4813,"public com . anychart . core . stock . scrollerseries .  Range Area min Point Length (  String length ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Point Length ( %s )  ; "", wrap Quotes ( length )  )  )  ;  return this ; }"
4814,"private void insert Timeout Rule (  String path )  throws IO Exception{  Function< String,  String> transform =  line -> {     if  ( line . starts With ( ""public class"" )  )  {         return line + ""\n\n"" + ""  @org . junit .  Rule\n"" + ""  public org . junit . rules .  Timeout timeout For Tests = "" + ""new org . junit . rules .  Timeout ( 10000 )  ; \n"" ;      } else {         return line + '\n' ;      } } ;  rewrite File With Transform ( path, transform )  ; }"
4815,"public  Mesh update Vertices ( int target Offset, float [  ]  source ) { return update Vertices ( target Offset, source, 0, source . length )  ; }"
4816,public void set Transaction Successful (  ) {}
4817,public synchronized void recycle (  ) { if  ( !m Recycled )  {     native Destroy ( m Native Boxa )  ;      m Recycled = true ;  }}
4818,"public void test Get Damping Ratio (  ) {  Spring Force spring = new  Spring Force (  )  ;  spring . set Damping Ratio ( 1 . 0f )  ;  assert Equals ( 1 . 0f, spring . get Damping Ratio (  ) , 0 . 0f )  ;  spring . set Damping Ratio ( 2 . 0f )  ;  assert Equals ( 2 . 0f, spring . get Damping Ratio (  ) , 0 . 0f )  ; }"
4819,public  User Notification get Notification (  ) { return notification ; }
4820,"public com . anychart . charts .  Scatter marker Palette (  String [  ]  value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . marker Palette ( %s )  ; "", array To String Wrap Quotes ( value )  )  )  ;  return this ; }"
4821,"public com . anychart . charts .  Cartesian x Axis (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Axis ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
4822,"public static  Sync Configuration default Config (  User user, @ Nullable  Long partition Value ) { return new  Sync Configuration .  Builder ( user, partition Value )  . build (  )  ; }"
4823,public void set Max Locals ( int size ) { max Locals = size ; }
4824,"public  List<? extends  Event> apply Listen Complete ( final  Path path ) { return persistence Manager . run In Transaction ( new  Callable< List<? extends  Event>> (  )  {     @ Override     public  List<? extends  Event> call (  )  {         persistence Manager . set Query Complete (  Query Spec . default Query At Path ( path )  )  ;          return apply Operation To Sync Points ( new  Listen Complete (  Operation Source . SERVER, path )  )  ;      } } )  ; }"
4825,void calculate Value ( float fraction ) { m Animated Value = m Keyframe Set . get Value ( fraction )  ; }
4826,"private static  Scope scope (  Dagger Elements elements,  Class<? extends  Annotation> scope Annotation Class ) { return  Scope . scope (  Simple Annotation Mirror . of ( elements . get Type Element ( scope Annotation Class )  )  )  ; }"
4827,public final boolean requires Unmetered Network (  ) { return required Network Type >=  Network Util . UNMETERED ; }
4828,public void set Bubble Scale ( float bubble Scale ) { this . bubble Scale = bubble Scale ; }
4829,public void set Last Updated Label (  Char Sequence label ) {}
4830,"public void set Active Controls Widget Color ( @ Color Int int color ) { m Option Bundle . put Int ( EXTRA_UCROP_COLOR_CONTROLS_WIDGET_ACTIVE, color )  ; }"
4831,"public void log Event Sync (  String event Type, JSON Object event Properties, boolean out Of Session ) { log Event Sync ( event Type, event Properties, null, out Of Session )  ; }"
4832,"public void get Local Artifact Url_handles Existing Artifact Directory (  )  throws  Exception{  Dependency Jar dependency Jar = new  Dependency Jar ( ""group"", ""artifact"", ""1"" )  ;   Maven Jar Artifact maven Jar Artifact = new  Maven Jar Artifact ( dependency Jar )  ;   File jar File = new  File ( local Repository Dir, maven Jar Artifact . jar Path (  )  )  ;   Files . create Parent Dirs ( jar File )  ;  assert That ( jar File . get Parent File (  )  . is Directory (  )  )  . is True (  )  ;  maven Dependency Resolver . get Local Artifact Url ( dependency Jar )  ;  check Jar Artifact ( maven Jar Artifact )  ; }"
4833,public boolean will Include (  Any Object Id id )  throws IO Exception{  Object To Pack obj = objects Map . get ( id )  ;  return obj != null && !obj . is Edge (  )  ; }
4834,public int get Width (  ) { return m Width ; }
4835,"public boolean is Webp Natively Supported (  Image Format webp Format ) { if  ( webp Format ==  Default Image Formats . WEBP_SIMPLE )  {     //  Simple  Web Ps are supported on  Android 4 . 0+     return  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . ICE_CREAM_SANDWICH ;  } else if  ( webp Format ==  Default Image Formats . WEBP_LOSSLESS || webp Format ==  Default Image Formats . WEBP_EXTENDED || webp Format ==  Default Image Formats . WEBP_EXTENDED_WITH_ALPHA )  {     return  Webp Support Status . s Is Extended Webp Supported ;  } else if  ( webp Format ==  Default Image Formats . WEBP_ANIMATED )  {     return false ;  } throw new  Illegal Argument Exception ( "" Image format is not a  Web P . "" )  ; }"
4836,public boolean is Force Update (  ) { return force ; }
4837,public void set Contact (  String contact ) { this . contact = contact ; }
4838,"public void bottom (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . bottom (  )  ; "" )  ; }"
4839,void start Provisioning No OOB ( @ Non Null final  Unprovisioned Mesh Node unprovisioned Mesh Node )  throws  Illegal Argument Exception{ send Provisioning Start ( unprovisioned Mesh Node )  ; }
4840,public  Builder set Url ( @ Nullable final  Uri url ) { this . url = url ;  return this ; }
4841,public static  String get String Value (  Buck Arithmetic Expression arithmetic Expression ) { return  Optional . of ( arithmetic Expression )  . map (  Buck Arithmetic Expression::get Term Expression List )  . filter (  list -> list . size (  )  == 1 )  . map (  list -> list . get ( 0 )  )  . map (  Buck Psi Impl Util::get String Value )  . or Else ( null )  ; }
4842,"public void load (  )  throws IO Exception,  Config Invalid Exception{ final int max Retries = 5 ;  int retry Delay Millis = 20 ;  int retries = 0 ;  while  ( true )  {     final  File Snapshot old Snapshot = snapshot ;      final  File Snapshot new Snapshot ;      // don't use config in this snapshot to avoid endless recursion     new Snapshot =  File Snapshot . save No Config ( get File (  )  )  ;      try {         final byte [  ]  in = IO . read Fully ( get File (  )  )  ;          final  Object Id new Hash = hash ( in )  ;          if  ( hash . equals ( new Hash )  )  {             if  ( old Snapshot . equals ( new Snapshot )  )  {                 old Snapshot . set Clean ( new Snapshot )  ;              } else {                 snapshot = new Snapshot ;              }         } else {             final  String decoded ;              if  ( is Utf8 ( in )  )  {                 decoded =  Raw Parse Utils . decode ( UTF_8, in, 3, in . length )  ;                  utf8 Bom = true ;              } else {                 decoded =  Raw Parse Utils . decode ( in )  ;              }             from Text ( decoded )  ;              snapshot = new Snapshot ;              hash = new Hash ;          }         return ;      } catch  (  File Not Found Exception no File )  {         // might be locked by another process  ( see exception  Javadoc )          if  ( retries < max Retries && config File . exists (  )  )  {             if  ( LOG . is Debug Enabled (  )  )  {                 LOG . debug (  Message Format . format ( J Git Text . get (  )  . config Handle May Be Locked,  Integer . value Of ( retries )  ) , no File )  ;              }             try {                  Thread . sleep ( retry Delay Millis )  ;              } catch  (  Interrupted Exception e )  {                  Thread . current Thread (  )  . interrupt (  )  ;              }             retries++ ;              // max wait 1260 ms             retry Delay Millis *= 2 ;              continue ;          }         if  ( config File . exists (  )  )  {             throw no File ;          }         clear (  )  ;          snapshot = new Snapshot ;          return ;      } catch  ( IO Exception e )  {         if  (  File Utils . is Stale File Handle ( e )  && retries < max Retries )  {             if  ( LOG . is Debug Enabled (  )  )  {                 LOG . debug (  Message Format . format ( J Git Text . get (  )  . config Handle Is Stale,  Integer . value Of ( retries )  ) , e )  ;              }             retries++ ;              continue ;          }         throw new IO Exception (  Message Format . format ( J Git Text . get (  )  . cannot Read File, get File (  )  ) , e )  ;      } catch  (  Config Invalid Exception e )  {         throw new  Config Invalid Exception (  Message Format . format ( J Git Text . get (  )  . cannot Read File, get File (  )  ) , e )  ;      } }}"
4843,public boolean is Set Announcement Request (  ) { return this . announcement Request != null ; }
4844,"public com . anychart . core . resource .  Logo corners (  Number corners ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . corners ( %s )  ; "", corners )  )  ;  return this ; }"
4845,public static  Type Element get Type Element (  Annotation Value value ) { return as Type Element ( get Type Mirror ( value )  )  ; }
4846,"private void json Request (  ) { KJ Http kjh = new KJ Http (  )  ;   Http Params params = new  Http Params (  )  ;  params . put Headers ( "" Cookie"", ""cookie不能告诉你"" )  ;  params . put Json Params ( ""{\""uid\"":863548,\""stickys\"": [ {\""id\"":29058,\""iid\"":0,\""content\"":\""你好\"",\""color\"":\""green\"",\""createtime\"":\""2015-04-16 16:26:17\"",\""updatetime\"":\""2015-04-16 16:26:17\""} ] }"" )  ;  kjh . json Post ( ""http://www . oschina . net/action/api/team_stickynote_batch_update"", params, new  Http Call Back (  )  {     @ Override     public void on Success (  String t )  {         super . on Success ( t )  ;          toast ( t )  ;      } } )  ; }"
4847,"public void test Fling (  )  throws  Interrupted Exception{ m Activity . run On Ui Thread ( new  Runnable (  )  {     @ Override     public void run (  )  {         m Swipe Touch Listener . fling ( 0 )  ;      } } )  ;   Thread . sleep ( 1000 )  ;  assert That ( m Swipe Touch Listener . after View Fling Called, is ( true )  )  ;  assert That ( m Swipe Touch Listener . position, is ( 0 )  )  ; }"
4848,public  Hash Set< Constant> get Insn Constants (  ) { return unprocessed Insns . get All Constants (  )  ; }
4849,"public com . anychart . core . annotations .  Triangle stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4850,private static  Double get Operand (  Edit Text operand Edit Text ) {  String operand Text = get Operand Text ( operand Edit Text )  ;  return  Double . value Of ( operand Text )  ; }
4851,public boolean remove All (  Collection<?> collection ) { boolean removed = false ;  for  (  Object value : collection )  {     removed |= remove ( value )  ;  } return removed ; }
4852,"public void set File Name Rule (  File Name Rule file Name Rule ) { if  ( file Name Rule == null )  {     throw new  Illegal Argument Exception ( "" The file Name Rule of cache can not be null . "" )  ;  } this . file Name Rule = file Name Rule ; }"
4853,"public  Change Mode Controller add Text Color (  View view, int color Id ) { m One Text Color Views . add ( new  Attr Entity< Text View> (  (  Text View )  view, color Id )  )  ;  return this ; }"
4854,"public com . anychart . charts .  Linear Gauge palette (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4855,"public void add Host Key ( @ Non Null  Path key, boolean in Front )  throws IO Exception,  General Security Exception{ try  (  Input Stream in =  Files . new Input Stream ( key )  )  {      Key Pair pair =  Security Utils . load Key Pair Identities ( null,  Named Resource . of Name ( key . to String (  )  ) , in, null )  . iterator (  )  . next (  )  ;      add Host Key ( pair, in Front )  ;  }}"
4856,"public  Todo_ Relation id Between ( long id A, long id B ) { return where Between ( schema . id, id A, id B )  ; }"
4857,"public void id (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . id (  )  ; "" )  ; }"
4858,"public com . anychart . charts .  Sparkline max Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", width )  )  ;  return this ; }"
4859,public static boolean is Loaded ( E object ) { if  ( object instanceof  Realm Object Proxy )  {      Realm Object Proxy proxy =  (  Realm Object Proxy )  object ;      proxy . realm Get$proxy State (  )  . get Realm$realm (  )  . check If Valid (  )  ;      return proxy . realm Get$proxy State (  )  . is Loaded (  )  ;  } return true ; }
4860,"public com . anychart . core . cartesian . series .  Line3d y Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4861,"public com . anychart . core .  State Settings low Hatch Fill ( com . anychart . graphics . vector .  Hatch Fill settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Hatch Fill ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
4862,"public static byte [  ]  to JSON Bytes (  Object object,  Serialize Config config, int default Features,  Serializer Feature .  .  .  features ) { return to JSON Bytes ( object, config, empty Filters, default Features, features )  ; }"
4863,public final  Equivalence< Iterable<S>> pairwise (  ) { // the need for this is so rare that it's not worth making callers deal with the ugly wildcard .  return new  Pairwise Equivalence<> ( this )  ; }
4864,"public void from Config (  Config rc ) { set Max Delta Depth ( rc . get Int ( CONFIG_PACK_SECTION, CONFIG_KEY_DEPTH, get Max Delta Depth (  )  )  )  ;  set Delta Search Window Size ( rc . get Int ( CONFIG_PACK_SECTION, CONFIG_KEY_WINDOW, get Delta Search Window Size (  )  )  )  ;  set Delta Search Memory Limit ( rc . get Long ( CONFIG_PACK_SECTION, CONFIG_KEY_WINDOW_MEMORY, get Delta Search Memory Limit (  )  )  )  ;  set Delta Cache Size ( rc . get Long ( CONFIG_PACK_SECTION, CONFIG_KEY_DELTA_CACHE_SIZE, get Delta Cache Size (  )  )  )  ;  set Delta Cache Limit ( rc . get Int ( CONFIG_PACK_SECTION, CONFIG_KEY_DELTA_CACHE_LIMIT, get Delta Cache Limit (  )  )  )  ;  set Compression Level ( rc . get Int ( CONFIG_PACK_SECTION, CONFIG_KEY_COMPRESSION, rc . get Int ( CONFIG_CORE_SECTION, CONFIG_KEY_COMPRESSION, get Compression Level (  )  )  )  )  ;  set Index Version ( rc . get Int ( CONFIG_PACK_SECTION, CONFIG_KEY_INDEXVERSION, get Index Version (  )  )  )  ;  set Big File Threshold ( rc . get Int ( CONFIG_CORE_SECTION, CONFIG_KEY_BIGFILE_THRESHOLD, get Big File Threshold (  )  )  )  ;  set Threads ( rc . get Int ( CONFIG_PACK_SECTION, CONFIG_KEY_THREADS, get Threads (  )  )  )  ;  //  These variables aren't standardized set Reuse Deltas ( rc . get Boolean ( CONFIG_PACK_SECTION, CONFIG_KEY_REUSE_DELTAS, is Reuse Deltas (  )  )  )  ;  set Reuse Objects ( rc . get Boolean ( CONFIG_PACK_SECTION, CONFIG_KEY_REUSE_OBJECTS, is Reuse Objects (  )  )  )  ;  set Delta Compress ( rc . get Boolean ( CONFIG_PACK_SECTION, CONFIG_KEY_DELTA_COMPRESSION, is Delta Compress (  )  )  )  ;  set Cut Delta Chains ( rc . get Boolean ( CONFIG_PACK_SECTION, CONFIG_KEY_CUT_DELTACHAINS, get Cut Delta Chains (  )  )  )  ;  set Single Pack ( rc . get Boolean ( CONFIG_PACK_SECTION, CONFIG_KEY_SINGLE_PACK, get Single Pack (  )  )  )  ;  set Build Bitmaps ( rc . get Boolean ( CONFIG_PACK_SECTION, CONFIG_KEY_BUILD_BITMAPS, is Build Bitmaps (  )  )  )  ;  set Bitmap Contiguous Commit Count ( rc . get Int ( CONFIG_PACK_SECTION, CONFIG_KEY_BITMAP_CONTIGUOUS_COMMIT_COUNT, get Bitmap Contiguous Commit Count (  )  )  )  ;  set Bitmap Recent Commit Count ( rc . get Int ( CONFIG_PACK_SECTION, CONFIG_KEY_BITMAP_RECENT_COMMIT_COUNT, get Bitmap Recent Commit Count (  )  )  )  ;  set Bitmap Recent Commit Span ( rc . get Int ( CONFIG_PACK_SECTION, CONFIG_KEY_BITMAP_RECENT_COMMIT_COUNT, get Bitmap Recent Commit Span (  )  )  )  ;  set Bitmap Distant Commit Span ( rc . get Int ( CONFIG_PACK_SECTION, CONFIG_KEY_BITMAP_DISTANT_COMMIT_SPAN, get Bitmap Distant Commit Span (  )  )  )  ;  set Bitmap Excessive Branch Count ( rc . get Int ( CONFIG_PACK_SECTION, CONFIG_KEY_BITMAP_EXCESSIVE_BRANCH_COUNT, get Bitmap Excessive Branch Count (  )  )  )  ;  set Bitmap Inactive Branch Age In Days ( rc . get Int ( CONFIG_PACK_SECTION, CONFIG_KEY_BITMAP_INACTIVE_BRANCH_AGE_INDAYS, get Bitmap Inactive Branch Age In Days (  )  )  )  ;  set Wait Prevent Racy Pack ( rc . get Boolean ( CONFIG_PACK_SECTION, CONFIG_KEY_WAIT_PREVENT_RACYPACK, is Wait Prevent Racy Pack (  )  )  )  ;  set Min Size Prevent Racy Pack ( rc . get Long ( CONFIG_PACK_SECTION, CONFIG_KEY_MIN_SIZE_PREVENT_RACYPACK, get Min Size Prevent Racy Pack (  )  )  )  ; }"
4865,"public int delete ( @ Non Null  Delete Query delete Query ) { return sq Lite Open Helper . get Writable Database (  )  . delete ( delete Query . table (  ) , nullable String ( delete Query . where (  )  ) , nullable Array Of Strings From List Of Strings ( delete Query . where Args (  )  )  )  ; }"
4866,"public void test Simple Escaper (  ) {  Unicode Escaper e = new  Percent Escaper ( """", false )  ;  for  ( char c = 0 ;  c < 128 ;  c++ )  {     if  (  ( c >= '0' && c <= '9' )  ||  ( c >= 'a' && c <= 'z' )  ||  ( c >= 'A' && c <= 'Z' )  )  {         assert Unescaped ( e, c )  ;      } else {         assert Escaping ( e, escape Ascii ( c ) , c )  ;      } } //  Testing mutlibyte escape sequences // nul assert Escaping ( e, ""%00"", '"
4867,public  Quaternion compute W (  ) { double t = 1 . 0 -  ( x * x )  -  ( y * y )  -  ( z * z )  ;  if  ( t < 0 . 0 )  {     w = 0 . 0 ;  } else {     // TODO:  Are we sure this should be negative?     w = - Math . sqrt ( t )  ;  } return this ; }
4868,"public com . anychart . core . map . series .  Choropleth id (  Number id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . id ( %s )  ; "", id )  )  ;  return this ; }"
4869,public  Interpolator get Drag Start Item Alpha Animation Interpolator (  ) { return m Dragging Item Effects Info . alpha Interpolator ; }
4870,"public int get Collision Objects Value ( final int [  ]  out, final bt Collision Object other ) { return get Collision Objects Value ( out, out . length,  ( int )  bt Collision Object . get C Ptr ( other )  )  ; }"
4871,void eval (  ) { double den = pop Double (  )  ;  double num = pop Double (  )  ;  if  ( den == 0 . 0 )  {     push Double ( 90 . 0 )  ;  } else {     push Double (  Math . to Degrees (  Math . atan ( num / den )  )  )  ;  }}
4872,public synchronized int get Hue ( final int hue_abs ) { int result = 0 ;  if  ( m Native Ptr != 0 )  {     native Update Hue Limit ( m Native Ptr )  ;      final float range =  Math . abs ( m Hue Max - m Hue Min )  ;      if  ( range > 0 )  {         result =  ( int )   (  ( hue_abs - m Hue Min )  * 100 . f / range )  ;      } } return result ; }
4873,"public void shift Index ( int less Than, int delta ) { int size = info . length ;  for  ( int i = 2 ;  i < size ;  i += 10 )  {     int org =  Byte Array . read U16bit ( info, i + 8 )  ;      if  ( org >= less Than )           Byte Array . write16bit ( org + delta, info, i + 8 )  ;  }}"
4874,"public  Code declare (  Method Id<?, ?> method, int flags ) {  Type Declaration type Declaration = get Type Declaration ( method . declaring Type )  ;  if  ( type Declaration . methods . contains Key ( method )  )  {     throw new  Illegal State Exception ( ""already declared: "" + method )  ;  } int supported Flags =  Modifier . ABSTRACT |  Modifier . NATIVE |  Modifier . PUBLIC |  Modifier . PRIVATE |  Modifier . PROTECTED |  Modifier . STATIC |  Modifier . FINAL |  Modifier . SYNCHRONIZED |  Modifier . TRANSIENT |  Access Flags . ACC_SYNTHETIC |  Access Flags . ACC_BRIDGE ;  if  (  ( flags & ~supported Flags )  != 0 )  {     throw new  Illegal Argument Exception ( "" Unexpected flag: "" +  Integer . to Hex String ( flags )  )  ;  } // replace the SYNCHRONIZED flag with the DECLARED_SYNCHRONIZED flag if  (  ( flags &  Modifier . SYNCHRONIZED )  != 0 )  {     flags =  ( flags & ~ Modifier . SYNCHRONIZED )  |  Access Flags . ACC_DECLARED_SYNCHRONIZED ;  } if  ( method . is Constructor (  )  || method . is Static Initializer (  )  )  {     flags |= ACC_CONSTRUCTOR ;  }  Method Declaration method Declaration = new  Method Declaration ( method, flags )  ;  type Declaration . methods . put ( method, method Declaration )  ;  return method Declaration . code ; }"
4875,"public  String to String (  ) {  String Builder sb = new  String Builder (  )  ;  sb . append ( get Class (  )  . get Name (  )  )  ;  //$NON-NLS-1$ sb . append ( "", status: capacity="" )  ;  sb . append ( capacity (  )  )  ;  //$NON-NLS-1$ sb . append ( "" position="" )  ;  sb . append ( position (  )  )  ;  //$NON-NLS-1$     sb . append ( "" limit="" )  ;  sb . append ( limit (  )  )  ;  return sb . to String (  )  ; }"
4876,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
4877,public void refresh (  ) {// nothing}
4878,final boolean should Start (  ) { for  ( int index = m Listeners . size (  )  - 1 ;  index >= 0 ;  index-- )  {     final  Animation Binding Listener listener = m Listeners . get ( index )  ;      if  ( !listener . should Start ( this )  )  {         return false ;      } } return true ; }
4879,"public com . anychart . palettes .  Hatch Fills hatch Fill Palette (  ) { return new com . anychart . palettes .  Hatch Fills ( js Base + "" . hatch Fill Palette (  ) "" )  ; }"
4880,"public com . anychart . core . annotations .  Andrews Pitchfork bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
4881,private void meta Press ( int code ) { if  (  ( meta State &  ( code << 1 )  )  != 0 )  {     meta State &= ~ ( code << 1 )  ;  } else if  (  ( meta State & code )  != 0 )  {     meta State &= ~code ;      meta State |= code << 1 ;  } else {     meta State |= code ;  } bridge . redraw (  )  ; }
4882,public byte [  ]  get Buffer (  ) { return buf ; }
4883,public  Sms Type get Sms Type (  ) { return sms Type ; }
4884,"public void test Select Tracks Within Capabilities Select Higher Sample Rate (  )  throws  Exception{  Format higher Sample Rate Format =  Format . create Audio Sample Format ( ""audio Format"",  Mime Types . AUDIO_AAC, null,  Format . NO_VALUE,  Format . NO_VALUE, 2, 44100, null, null, 0, null )  ;   Format lower Sample Rate Format =  Format . create Audio Sample Format ( ""audio Format"",  Mime Types . AUDIO_AAC, null,  Format . NO_VALUE,  Format . NO_VALUE, 2, 22050, null, null, 0, null )  ;   Track Group Array track Groups = wrap Formats ( higher Sample Rate Format, lower Sample Rate Format )  ;   Track Selector Result result = track Selector . select Tracks ( new  Renderer Capabilities [  ]  { ALL_AUDIO_FORMAT_SUPPORTED_RENDERER_CAPABILITIES }, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, higher Sample Rate Format )  ; }"
4885,public void abort (  ) { locked . unlock (  )  ;  aborted = true ; }
4886,public  Reset Command reset (  ) { return new  Reset Command ( repo )  ; }
4887,"public com . anychart . core . annotations .  Horizontal Line min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
4888,"public int output Sample Encryption Data (  ) {  Track Encryption Box encryption Box = get Encryption Box If Encrypted (  )  ;  if  ( encryption Box == null )  {     return 0 ;  }  Parsable Byte Array initialization Vector Data ;  int vector Size ;  if  ( encryption Box . per Sample Iv Size != 0 )  {     initialization Vector Data = fragment . sample Encryption Data ;      vector Size = encryption Box . per Sample Iv Size ;  } else {     //  The default initialization vector should be used .      byte [  ]  init Vector Data = encryption Box . default Initialization Vector ;      default Initialization Vector . reset ( init Vector Data, init Vector Data . length )  ;      initialization Vector Data = default Initialization Vector ;      vector Size = init Vector Data . length ;  } boolean subsample Encryption = fragment . sample Has Subsample Encryption Table ( current Sample Index )  ;  //  Write the signal byte, containing the vector size and the subsample encryption flag .  encryption Signal Byte . data [ 0 ]  =  ( byte )   ( vector Size |  ( subsample Encryption ? 0x80 : 0 )  )  ;  encryption Signal Byte . set Position ( 0 )  ;  output . sample Data ( encryption Signal Byte, 1 )  ;  //  Write the vector .  output . sample Data ( initialization Vector Data, vector Size )  ;  //  If we don't have subsample encryption data, we're done .  if  ( !subsample Encryption )  {     return 1 + vector Size ;  } //  Write the subsample encryption data .   Parsable Byte Array subsample Encryption Data = fragment . sample Encryption Data ;  int subsample Count = subsample Encryption Data . read Unsigned Short (  )  ;  subsample Encryption Data . skip Bytes ( -2 )  ;  int subsample Data Length = 2 + 6 * subsample Count ;  output . sample Data ( subsample Encryption Data, subsample Data Length )  ;  return 1 + vector Size + subsample Data Length ; }"
4889,"public com . anychart . core . cartesian . series .  Area3d left (  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", wrap Quotes ( left )  )  )  ;  return this ; }"
4890,public boolean query Like Id (  String id ) {  Realm Results< Realm Like Bean> results = m Realm . where (  Realm Like Bean . class )  . find All (  )  ;  for  (  Realm Like Bean item : results )  {     if  ( item . get Id (  )  . equals ( id )  )  {         return true ;      } } return false ; }
4891,"void test Default Constructor (  )  throws  Remote Service Exception{  Assertions . assert Throws (  Remote Service Exception . class,  (  )  -> {     var obj = new  Delayed Remote Service (  )  ;      obj . call (  )  ;  } )  ; }"
4892,"public void find Subview In ( int react Tag, float target X, float target Y,  Callback callback ) { m Operations Queue . enqueue Find Target For Touch ( react Tag, target X, target Y, callback )  ; }"
4893,"public void set Parallax Header (  View header, final  Recycler View view ) { m Recycler View = view ;  m Header = new  Custom Relative Wrapper ( header . get Context (  ) , m Should Clip View )  ;  m Header . set Layout Params ( new  View Group .  Layout Params (  View Group .  Layout Params . WRAP_CONTENT,  View Group .  Layout Params . WRAP_CONTENT )  )  ;  m Header . add View ( header, new  Relative Layout .  Layout Params (  View Group .  Layout Params . MATCH_PARENT,  View Group .  Layout Params . MATCH_PARENT )  )  ;  view . set On Scroll Listener ( new  Recycler View .  On Scroll Listener (  )  {     @ Override     public void on Scrolled (  Recycler View recycler View, int dx, int dy )  {         super . on Scrolled ( recycler View, dx, dy )  ;          if  ( m Header != null )  {             translate Header ( m Recycler View . get Layout Manager (  )  . get Child At ( 0 )  == m Header ? m Recycler View . compute Vertical Scroll Offset (  )  : m Header . get Height (  )  )  ;          }     } } )  ; }"
4894,"private synchronized void increase Counters (  Entry<K, V> entry ) {  Preconditions . check Not Null ( entry )  ;   Preconditions . check State ( !entry . is Orphan )  ;  entry . client Count++ ;  increase Access Count ( entry )  ; }"
4895,"public static byte reverse Bit Value ( byte source, int pos ) { byte mask =  ( byte )   ( 1 << pos )  ;  return  ( byte )   ( source ^ mask )  ; }"
4896,"public static final int write JSON String (  Output Stream os,  Object object, int default Features,  Serializer Feature .  .  .  features )  throws IO Exception{ return write JSON String ( // os, // IO Utils . UTF8, // object, //  Serialize Config . global Instance, // null, //  null, // default Features, features )  ; }"
4897,"public  Prepared Put Content Values Iterable .  Builder content Values ( @ Non Null  Content Values .  .  .  content Values Array ) { return new  Prepared Put Content Values Iterable .  Builder ( stor IOSQ Lite,  Arrays . as List ( content Values Array )  )  ; }"
4898,"public com . anychart . core . annotations .  Fibonacci Base bottom (  Number bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", bottom )  )  ;  return this ; }"
4899,"private static long timeout Seconds (  ) { // e . g .  using  Thread#active Count (  )  return  Math . max ( 10 L,  Runtime . get Runtime (  )  . total Memory (  )  /  ( 32 L * 1024 L * 1024 L )  )  ; }"
4900,"public void apply To Remote Document (  Mutable Document document,  Mutation Batch Result batch Result ) { int size = mutations . size (  )  ;   List< Mutation Result> mutation Results = batch Result . get Mutation Results (  )  ;  hard Assert ( mutation Results . size (  )  == size, "" Mismatch between mutations length  ( %d )  and results length  ( %d ) "", size, mutation Results . size (  )  )  ;  for  ( int i = 0 ;  i < size ;  i++ )  {      Mutation mutation = mutations . get ( i )  ;      if  ( mutation . get Key (  )  . equals ( document . get Key (  )  )  )  {          Mutation Result mutation Result = mutation Results . get ( i )  ;          mutation . apply To Remote Document ( document, mutation Result )  ;      } }}"
4901,"void remove (  Multi Relay Disposable<T> ps ) { for  (  ;   ;   )  {      Multi Relay Disposable<T> [  ]  a = subscribers . get (  )  ;      if  ( a == EMPTY )  {         return ;      }     int n = a . length ;      int j = -1 ;      for  ( int i = 0 ;  i < n ;  i++ )  {         if  ( a [ i ]  == ps )  {             j = i ;              break ;          }     }     if  ( j < 0 )  {         return ;      }      Multi Relay Disposable<T> [  ]  b ;      if  ( n == 1 )  {         b = EMPTY ;      } else {         b = new  Multi Relay Disposable [ n - 1 ]  ;           System . arraycopy ( a, 0, b, 0, j )  ;           System . arraycopy ( a, j + 1, b, j, n - j - 1 )  ;      }     if  ( subscribers . compare And Set ( a, b )  )  {         return ;      } }}"
4902,"public void set Speed ( @ Float Range ( from = 0, from Inclusive = false )  final float factor ) { m Native Info Handle . set Speed Factor ( factor )  ; }"
4903,public static void close Quietly (  Zip File c ) { try {     if  ( c != null )  {         c . close (  )  ;      } } catch  (  Exception e )  { // ignore }}
4904,"public  String to String (  ) {  String Builder builder = new  String Builder (  )  ;   String func Name = name == null ? ""<incomplete function>"" : get Name (  )  ;  builder . append ( func Name )  . append ( "" ( "" )  ;   Objects . require Non Null ( get Signature (  )  )  . to String Builder ( builder )  ;  int star Idx = builder . index Of ( ""*, "" )  ;  builder . delete ( star Idx, star Idx + 3 )  ;  builder . append ( "" ) "" )  ;  return builder . to String (  )  ; }"
4905,"private  Http2 Connection connect (  Mock Http2 Peer peer,  Push Observer push Observer,  Http2 Connection .  Listener listener )  throws  Exception{  Http2 Connection connection = new  Http2 Connection .  Builder ( true,  Task Runner . INSTANCE )  . socket ( peer . open Socket (  )  )  . push Observer ( push Observer )  . listener ( listener )  . build (  )  ;  connection . start ( /* send Connection Preface = */ false )  ;  // verify the peer received the ACK  In Frame ack Frame = peer . take Frame (  )  ;  assert That ( ack Frame . type )  . is Equal To (  Http2 . TYPE_SETTINGS )  ;  assert That ( ack Frame . stream Id )  . is Equal To ( 0 )  ;  assert That ( ack Frame . ack )  . is True (  )  ;  return connection ; }"
4906,"public  Prepared Get Number Of Results prepare (  ) { if  ( get Resolver == null )  {     get Resolver = STANDARD_GET_RESOLVER ;  } if  ( query != null )  {     return new  Prepared Get Number Of Results ( stor IOSQ Lite, query, get Resolver )  ;  } else if  ( raw Query != null )  {     return new  Prepared Get Number Of Results ( stor IOSQ Lite, raw Query, get Resolver )  ;  } else {     throw new  Illegal State Exception ( "" Please specify query"" )  ;  }}"
4907,"public com . anychart . core . resource .  Logo parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
4908,public java . lang .  String get Edge Id (  ) { java . lang .  Object ref = edge Id_ ;  if  ( ref instanceof java . lang .  String )  {     return  ( java . lang .  String )  ref ;  } else {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      edge Id_ = s ;      return s ;  }}
4909,public  Throwable failure Or Null (  ) { return failure ; }
4910,"private static void get And Set Deployment Target Value (  Immutable Map .  Builder< String,  String> settings Builder,  String sdk Root Value,  List< String> cxx Flags,  Map< String,  String> appended Settings ) { // magic  String deployment Target Key = sdk Root Value . to Upper Case (  )  + ""_DEPLOYMENT_TARGET"" ;   String deployment Target Value = get Config Value For Key ( deployment Target Key, appended Settings, ""-m"",  Optional . of ( ""-version-min="" ) , cxx Flags )  ;  if  ( deployment Target Value != null )  {     settings Builder . put ( deployment Target Key, deployment Target Value )  ;  }}"
4911,public  Factory set Composite Sequenceable Loader Factory (  Composite Sequenceable Loader Factory composite Sequenceable Loader Factory ) {  Assertions . check State ( !is Create Called )  ;  this . composite Sequenceable Loader Factory =  Assertions . check Not Null ( composite Sequenceable Loader Factory )  ;  return this ; }
4912,"public com . anychart . core . cartesian . series .  Width Based bottom (  String bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", wrap Quotes ( bottom )  )  )  ;  return this ; }"
4913,"public  Shader Var negate (  ) {  Shader Var var = new  Shader Var ( m Data Type )  ;  var . set Name ( ""-"" + m Name )  ;  var . m Initialized = true ;  return var ; }"
4914,"public  String to Postfix String (  ) { if  ( flavors . is Empty (  )  )  {     return """" ;  } return ""#"" + to Comma Separated String (  )  ; }"
4915,"public com . anychart . charts .  Waterfall id (  String id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . id ( %s )  ; "", wrap Quotes ( id )  )  )  ;  return this ; }"
4916,"public static  Preprocessor Provider get Preprocessor (  Cxx Platform cxx Platform,  Cxx Source .  Type type ) {  Preprocessor Provider preprocessor ;  switch ( type )  {     case ASSEMBLER_WITH_CPP:         preprocessor = cxx Platform . get Aspp (  )  ;          break ;      case C:         preprocessor = cxx Platform . get Cpp (  )  ;          break ;      case CXX:     case PCM:         preprocessor = cxx Platform . get Cxxpp (  )  ;          break ;      case OBJC:         preprocessor = cxx Platform . get Cpp (  )  ;          break ;      case OBJCXX:         preprocessor = cxx Platform . get Cxxpp (  )  ;          break ;      case CUDA:         if  ( !cxx Platform . get Cudapp (  )  . is Present (  )  )  {             throw new  Human Readable Exception ( ""%s: no cuda preprocessor set"", cxx Platform . get Flavor (  )  )  ;          }         preprocessor = cxx Platform . get Cudapp (  )  . get (  )  ;          break ;      case HIP:         if  ( !cxx Platform . get Hippp (  )  . is Present (  )  )  {             throw new  Human Readable Exception ( ""%s: no hip preprocessor set"", cxx Platform . get Flavor (  )  )  ;          }         preprocessor = cxx Platform . get Hippp (  )  . get (  )  ;          break ;      case ASM_WITH_CPP:         if  ( !cxx Platform . get Asmpp (  )  . is Present (  )  )  {             throw new  Human Readable Exception ( ""%s: no asm preprocessor set"", cxx Platform . get Flavor (  )  )  ;          }         preprocessor = cxx Platform . get Asmpp (  )  . get (  )  ;          break ;      // $CASES-OMITTED$     default:         throw new  Illegal State Exception (  String . format ( ""unexpected type: %s"", type )  )  ;  } return preprocessor ; }"
4917,public void set Asynchronous Sending ( boolean asynchronous Sending ) { this . asynchronous Sending = asynchronous Sending ; }
4918,"public final  Json Writer value (  Buffered Source source )  throws IO Exception{ if  ( promote Value To Name )  {     throw new  Illegal State Exception ( "" Buffered Source cannot be used as a map key in JSON at path "" + get Path (  )  )  ;  } try  (  Buffered Sink sink = value Sink (  )  )  {     source . read All ( sink )  ;  } return this ; }"
4919,"private static int get Max Input Size (  Media Codec Info codec Info,  Format format ) { if  ( format . max Input Size !=  Format . NO_VALUE )  {     //  The format defines an explicit maximum input size .   Add the total size of initialization     // data buffers, as they may need to be queued in the same input buffer as the largest sample .      int total Initialization Data Size = 0 ;      int initialization Data Count = format . initialization Data . size (  )  ;      for  ( int i = 0 ;  i < initialization Data Count ;  i++ )  {         total Initialization Data Size += format . initialization Data . get ( i )  . length ;      }     return format . max Input Size + total Initialization Data Size ;  } else {     // initialization data .      return get Codec Max Input Size ( codec Info, format . sample Mime Type, format . width, format . height )  ;  }}"
4920,public void add Comparator (  Comparator<T> comparator ) { if  ( comparator instanceof  Invertible Comparator )  {     this . comparators . add (  (  Invertible Comparator<T> )  comparator )  ;  } else {     this . comparators . add ( new  Invertible Comparator<T> ( comparator )  )  ;  }}
4921,public boolean contains Value (  Object value ) { return index Of Value ( value )  >= 0 ; }
4922,"public com . anychart . core . gantt .  Overlay overlay (  ) { return new com . anychart . core . gantt .  Overlay ( js Base + "" . overlay (  ) "" )  ; }"
4923,protected void increment And Enqueue (  Runnable runner ) { synchronized  ( LOCK )  {     open Count += 1 ;      enqueue ( runner )  ;  }}
4924,public int get Line Number (  ) { return super . get Line Number (  )  ; }
4925,"public com . anychart . core . ui .  Circular Labels Factory text Direction ( com . anychart . graphics . vector . text .  Direction direction ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Direction ( %s )  ; "",  ( direction != null )  ? direction . get Js Base (  )  : null )  )  ;  return this ; }"
4926,"private static void throw Abstract Method Error (  Code code,  Method method,  Local< String> abstract Method Error Message,  Local< Abstract Method Error> abstract Method Error ) {  Type Id< Abstract Method Error> abstract Method Error Class =  Type Id . get (  Abstract Method Error . class )  ;   Method Id< Abstract Method Error,  Void> abstract Method Error Constructor = abstract Method Error Class . get Constructor (  Type Id . STRING )  ;  code . load Constant ( abstract Method Error Message, ""'"" + method + ""' cannot be called"" )  ;  code . new Instance ( abstract Method Error, abstract Method Error Constructor, abstract Method Error Message )  ;  code . throw Value ( abstract Method Error )  ; }"
4927,"private void set Matrix Array ( float [  ]  array, float f0, float f1, float f2, float f3, float f4, float f5, float f6, float f7 ) { array [ 0 ]  = f0 ;  array [ 1 ]  = f1 ;  array [ 2 ]  = f2 ;  array [ 3 ]  = f3 ;  array [ 4 ]  = f4 ;  array [ 5 ]  = f5 ;  array [ 6 ]  = f6 ;  array [ 7 ]  = f7 ; }"
4928,"private  File get Cached File (  String url )  throws  File Not Found Exception{  File json File = new  File ( parent Dir (  ) , filename For Url ( url,  File Extension . JSON, false )  )  ;  if  ( json File . exists (  )  )  {     return json File ;  }  File zip File = new  File ( parent Dir (  ) , filename For Url ( url,  File Extension . ZIP, false )  )  ;  if  ( zip File . exists (  )  )  {     return zip File ;  } return null ; }"
4929,private static boolean is Proj (  Parsable Byte Array input ) { // size input . skip Bytes ( 4 )  ;  int type = input . read Int (  )  ;  input . set Position ( 0 )  ;  return type == TYPE_PROJ ; }
4930,"public T derivative At ( final T out, final int span, final float u ) { return derivative ( out, continuous ? span :  ( span + 1 ) , u, control Points, continuous, tmp )  ; }"
4931,"public void create View (  ) {  Contact contact = new  App Contact Service ( get Context (  )  )  . get Contact By Id ( typer User Id )  ;  remove All Views (  )  ;  if  ( typing Text == null )  {     typing Text = new  Text View ( get Context (  )  )  ;       Layout Params params = new  Layout Params (  Layout Params . MATCH_PARENT,  Layout Params . MATCH_PARENT )  ;      typing Text . set Layout Params ( params )  ;      typing Text . set Text Size ( 14 )  ;      typing Text . set Text Color ( get Context (  )  . get Resources (  )  . get Color ( R . color . apploizc_black_color )  )  ;  } add View ( typing Text )  ;  if  ( is Typing )  {     typing Text . set Text (  ( contact != null ? contact . get Display Name (  )  : """" )  + "" is  Typing .  .  . "" )  ;  } else {     typing Text . set Text (  ( contact != null ? contact . get Display Name (  )  : """" )  + "" is not  Typing .  .  . "" )  ;  }}"
4932,"public void value Anchor (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . value Anchor (  )  ; "" )  ; }"
4933,"public boolean contains (  Object o ) { if  ( o == null )      return false ;  final  Object [  ]  items = this . items ;  final  Reentrant Lock lock = this . lock ;  lock . lock (  )  ;  try {     for  ( int i = take Index, k = count ;  k > 0 ;  i = inc ( i ) , k-- )  if  ( o . equals ( items [ i ]  )  )          return true ;      return false ;  } finally {     lock . unlock (  )  ;  }}"
4934,"public com . anychart . charts .  Linear Gauge margin (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
4935,"public boolean send Message At Time (  Message msg, long uptime Millis ) { return m Exec . send Message At Time ( msg, uptime Millis )  ; }"
4936,public  Factory set Tag (  Object tag ) {  Assertions . check State ( !is Create Called )  ;  this . tag = tag ;  return this ; }
4937,"public com . anychart . charts .  Stock draw (  Boolean async ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . draw ( %s )  ; "", async )  )  ;  return this ; }"
4938,public boolean renders Component (  ) { return false ; }
4939,"public com . anychart . core . ui .  Paginator z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
4940,public int size (  ) { final  Monitor monitor = this . monitor ;  monitor . enter (  )  ;  try {     return count ;  } finally {     monitor . leave (  )  ;  }}
4941,public  String get Broker Package Name (  ) { return com . microsoft . identity . common . adal . internal .  Authentication Settings . INSTANCE . get Broker Package Name (  )  ; }
4942,public  List< Share Media> get Media (  ) { return this . media ; }
4943,"public static void update (  String qualified Classname )  throws  Cannot Update Exception{ try {      Class c = get Updated Class ( qualified Classname )  ;       Field f = c . get Field ( latest Version Field )  ;      f . set ( null, c )  ;  } catch  (  Class Not Found Exception e )  {     throw new  Cannot Update Exception ( ""cannot update class: "" + qualified Classname )  ;  } catch  (  Exception e )  {     throw new  Cannot Update Exception ( e )  ;  }}"
4944,"public  Gson Builder register Type Adapter (  Type type,  Object type Adapter ) { $ Gson$ Preconditions . check Argument ( type Adapter instanceof  Json Serializer<?> || type Adapter instanceof  Json Deserializer<?> || type Adapter instanceof  Instance Creator<?> || type Adapter instanceof  Type Adapter<?> )  ;  if  ( type Adapter instanceof  Instance Creator<?> )  {     instance Creators . put ( type,  (  Instance Creator )  type Adapter )  ;  } if  ( type Adapter instanceof  Json Serializer<?> || type Adapter instanceof  Json Deserializer<?> )  {      Type Token<?> type Token =  Type Token . get ( type )  ;      factories . add (  Tree Type Adapter . new Factory With Match Raw Type ( type Token, type Adapter )  )  ;  } if  ( type Adapter instanceof  Type Adapter<?> )  {     factories . add (  Type Adapters . new Factory (  Type Token . get ( type ) ,  (  Type Adapter )  type Adapter )  )  ;  } return this ; }"
4945,"public void update X Position ( float vertical Drag Offset ) {  View Helper . set Pivot X ( get View (  ) , get View (  )  . get Width (  )  - get Margin Right (  )  )  ; }"
4946,"public static  Lottie Result< Lottie Composition> from Url Sync (  Context context,  String url ) { return from Url Sync ( context, url, url )  ; }"
4947,"public static  Immutable List Multimap<K, V> of ( K k1, V v1, K k2, V v2, K k3, V v3 ) {  Immutable List Multimap .  Builder<K, V> builder =  Immutable List Multimap . builder (  )  ;  builder . put ( k1, v1 )  ;  builder . put ( k2, v2 )  ;  builder . put ( k3, v3 )  ;  return builder . build (  )  ; }"
4948,"public static  Native Linkable Input get Native Linkable Input (  Linker .  Linkable Dep Type link Style,  Native Linkable native Linkable,  Action Graph Builder graph Builder,  Target Configuration target Configuration ) {  Native Linkable Group .  Linkage link = native Linkable . get Preferred Linkage (  )  ;  return native Linkable . get Native Linkable Input ( get Link Style ( link, link Style ) , graph Builder, target Configuration )  ; }"
4949,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
4950,"public void log Fragment Records (  String tag ) {  List< Debug Fragment Record> fragment Record List = get Fragment Records (  )  ;  if  ( fragment Record List == null )      return ;   String Builder sb = new  String Builder (  )  ;  for  ( int i = fragment Record List . size (  )  - 1 ;  i >= 0 ;  i-- )  {      Debug Fragment Record fragment Record = fragment Record List . get ( i )  ;      if  ( i == fragment Record List . size (  )  - 1 )  {         sb . append ( ""═══════════════════════════════════════════════════════════════════════════════════\n"" )  ;          if  ( i == 0 )  {             sb . append ( ""\t栈顶\t\t\t"" )  . append ( fragment Record . fragment Name )  . append ( ""\n"" )  ;              sb . append ( ""═══════════════════════════════════════════════════════════════════════════════════"" )  ;          } else {             sb . append ( ""\t栈顶\t\t\t"" )  . append ( fragment Record . fragment Name )  . append ( ""\n\n"" )  ;          }     } else if  ( i == 0 )  {         sb . append ( ""\t栈底\t\t\t"" )  . append ( fragment Record . fragment Name )  . append ( ""\n\n"" )  ;          process Child Log ( fragment Record . child Fragment Record, sb, 1 )  ;          sb . append ( ""═══════════════════════════════════════════════════════════════════════════════════"" )  ;           Log . i ( tag, sb . to String (  )  )  ;          return ;      } else {         sb . append ( ""\t↓\t\t\t"" )  . append ( fragment Record . fragment Name )  . append ( ""\n\n"" )  ;      }     process Child Log ( fragment Record . child Fragment Record, sb, 1 )  ;  }}"
4951,"public void set Render View ( I Render View render View ) { // 先清除 if  ( m Render View != null )  {     if  ( m Media Player != null )          m Media Player . set Display ( null )  ;       View render UI View = m Render View . get View (  )  ;      m Render View . remove Render Callback ( m SH Callback )  ;      m Render View = null ;      remove View ( render UI View )  ;  } if  ( render View == null )      return ;  m Render View = render View ;  render View . set Aspect Ratio ( m Current Aspect Ratio )  ;  if  ( m Video Width > 0 && m Video Height > 0 )      render View . set Video Size ( m Video Width, m Video Height )  ;  if  ( m Video Sar Num > 0 && m Video Sar Den > 0 )      render View . set Video Sample Aspect Ratio ( m Video Sar Num, m Video Sar Den )  ;   View render UI View = m Render View . get View (  )  ;   Layout Params lp = new  Layout Params (  Layout Params . MATCH_PARENT,  Layout Params . WRAP_CONTENT,  Gravity . CENTER )  ;  render UI View . set Layout Params ( lp )  ;  add View ( render UI View )  ;  m Render View . add Render Callback ( m SH Callback )  ;  m Render View . set Video Rotation ( m Video Rotation Degree )  ; }"
4952,"public  String path Without Extension (  ) {  String path = file . get Path (  )  . replace ( '\\', '/' )  ;  int dot Index = path . last Index Of ( ' . ' )  ;  if  ( dot Index == -1 )      return path ;  return path . substring ( 0, dot Index )  ; }"
4953,public void destroy (  ) { get Http Client (  )  . get Connection Manager (  )  . shutdown (  )  ; }
4954,"public void discard To ( long time Us, boolean to Keyframe, boolean stop At Read Position ) { discard Downstream To ( metadata Queue . discard To ( time Us, to Keyframe, stop At Read Position )  )  ; }"
4955,"void on Detached (  ) { assert Main Thread (  )  ;  if  ( m Attached == null )  {     return ;  } detach All (  Preconditions . check Not Null ( m Layout State Context ) , m Attached )  ;  m Attached = null ; }"
4956,"public final void contains None Of ( @ Nullable E first Excluded, @ Nullable E second Excluded, @ Nullable E .  .  .  rest Of Excluded ) { contains None In ( accumulate ( first Excluded, second Excluded, rest Of Excluded )  )  ; }"
4957,"public com . anychart . core . lineargauge . pointers .  Thermometer container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
4958,"private static void determine First Digit (  String Builder result String, int lg Pattern Found )  throws  Not Found Exception{ for  ( int d = 0 ;  d < 10 ;  d++ )  {     if  ( lg Pattern Found == FIRST_DIGIT_ENCODINGS [ d ]  )  {         result String . insert ( 0,  ( char )   ( '0' + d )  )  ;          return ;      } } throw  Not Found Exception . get Not Found Instance (  )  ; }"
4959,public  Incoming Message get Response (  ) { return response ; }
4960,public  Activity Builder set Border Line Color ( int border Line Color ) { m Options . border Line Color = border Line Color ;  return this ; }
4961,"static  List< Session Data> get All Session By Hit Count (  ) {  List< Session Data> session Datas = new  Array List< Session Data> (  )  ;  SQ Lite Database db =  Sonic DB Helper . get Instance (  )  . get Writable Database (  )  ;   Cursor cursor = db . query (  Sonic_SESSION_TABLE_NAME, get All Session Data Column (  ) , null, null, null, null, SESSION_DATA_COLUMN_CACHE_HIT_COUNT + "" ASC"" )  ;  while  ( cursor != null && cursor . move To Next (  )  )  {     session Datas . add ( query Session Data ( cursor )  )  ;  } return session Datas ; }"
4962,"public void test Icon From Metadata (  ) { int res Id = 1 ;   Bundle metadata = new  Bundle (  )  ;  metadata . put Int ( METADATA_DEFAULT_ICON, res Id )  ;   Package Info package Info = shadow Of ( context . get Package Manager (  )  )  . get Package Info For Testing ( context . get Package Name (  )  )  ;  package Info . application Info . meta Data = metadata ;   Bundle data = new  Bundle (  )  ;  data . put String ( KEY_TITLE, ""title 123"" )  ;  assert True ( new  Display Notification ( context, new  Notification Params ( data ) , executor )  . handle Notification (  )  )  ;   Notification n = get Single Notification (  )  ;  assert Equals ( ""title 123"", shadow Of ( n )  . get Content Title (  )  . to String (  )  )  ;  assert Equals ( res Id, n . icon )  ; }"
4963,public  Recycler View .  Adapter get Adapter (  ) { return m Recycler View . get Adapter (  )  ; }
4964,"public static  Vector2 triangle Circumcenter ( float x1, float y1, float x2, float y2, float x3, float y3,  Vector2 circumcenter ) { float dx21 = x2 - x1, dy21 = y2 - y1 ;  float dx32 = x3 - x2, dy32 = y3 - y2 ;  float dx13 = x1 - x3, dy13 = y1 - y3 ;  float det = dx32 * dy21 - dx21 * dy32 ;  if  (  Math . abs ( det )  <  Math Utils . FLOAT_ROUNDING_ERROR )      throw new  Illegal Argument Exception ( "" Triangle points must not be colinear . "" )  ;  det *= 2 ;  float sqr1 = x1 * x1 + y1 * y1, sqr2 = x2 * x2 + y2 * y2, sqr3 = x3 * x3 + y3 * y3 ;  circumcenter . set (  ( sqr1 * dy32 + sqr2 * dy13 + sqr3 * dy21 )  / det, - ( sqr1 * dx32 + sqr2 * dx13 + sqr3 * dx21 )  / det )  ;  return circumcenter ; }"
4965,"public com . anychart . core . ui .  Circular Labels Factory padding (  Number value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
4966,public synchronized void restart (  ) {  Logcat .  Listener previous Listener = logcat . get Listener (  )  ;  logcat . stop Reading (  )  ;  logcat . interrupt (  )  ;  logcat =  (  Logcat )  logcat . clone (  )  ;  logcat . set Listener ( previous Listener )  ;  last Notification Time = 0 ;  traces To Notify . clear (  )  ;  logcat . start (  )  ; }
4967,public void set Suggestion Right Icon Color ( int color ) { this . m Suggestion Right Icon Color = color ;  if  ( m Suggestions Adapter != null )  {     m Suggestions Adapter . set Right Icon Color ( this . m Suggestion Right Icon Color )  ;  }}
4968,"public void share With Pinterest (  String link Or Options,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Pinterest ( %s, %s )  ; "", wrap Quotes ( link Or Options ) , wrap Quotes ( description )  )  )  ; }"
4969,public boolean is Show Separators (  ) { return m Show Separators ; }
4970,"public void share With Linked In (  String caption Or Options,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Linked In ( %s, %s )  ; "", wrap Quotes ( caption Or Options ) , wrap Quotes ( description )  )  )  ; }"
4971,"public void remove Index ( int n ) { if  ( n >= size )  {     throw new  Index Out Of Bounds Exception ( ""n >= size (  ) "" )  ;  }  System . arraycopy ( values, n + 1, values, n, size - n - 1 )  ;  size-- ; // sort status is unchanged}"
4972,public  Episode View Model get ( int i ) { return episodes . get ( i )  ; }
4973,"public final void is Not Empty (  ) { if  ( actual . is Empty (  )  )  {     fail Without Actual ( simple Fact ( ""expected not to be empty"" )  )  ;  }}"
4974,"public com . anychart . scales .  Linear max Ticks Count (  Number count ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Ticks Count ( %s )  ; "", count )  )  ;  return this ; }"
4975,"private  Array List< Card> init Card (  ) { // Init an array of  Cards  Array List< Card> cards = new  Array List< Card> (  )  ;  for  ( int i = 0 ;  i < 200 ;  i++ )  {      Picasso Card card = new  Picasso Card ( this . get Activity (  )  )  ;      card . set Title ( ""A simple card loaded with  Picasso "" + i )  ;      card . set Secondary Title ( "" Simple text .  .  . "" + i )  ;      card . set Count ( i )  ;      cards . add ( card )  ;  } return cards ; }"
4976,"public void min Pix Per Point (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Pix Per Point (  )  ; "" )  ; }"
4977,"public final  Attribute parse (  Direct Class File cf, int context, int offset,  Parse Observer observer ) { if  ( cf == null )  {     throw new  Null Pointer Exception ( ""cf == null"" )  ;  } if  (  ( context < 0 )  ||  ( context >= CTX_COUNT )  )  {     throw new  Illegal Argument Exception ( ""bad context"" )  ;  }  Cst String name = null ;  try {      Byte Array bytes = cf . get Bytes (  )  ;       Constant Pool pool = cf . get Constant Pool (  )  ;      int name Idx = bytes . get Unsigned Short ( offset )  ;      int length = bytes . get Int ( offset + 2 )  ;      name =  (  Cst String )  pool . get ( name Idx )  ;      if  ( observer != null )  {         observer . parsed ( bytes, offset, 2, ""name: "" + name . to Human (  )  )  ;          observer . parsed ( bytes, offset + 2, 4, ""length: "" +  Hex . u4 ( length )  )  ;      }     return parse0 ( cf, context, name . get String (  ) , offset + 6, length, observer )  ;  } catch  (  Parse Exception ex )  {     ex . add Context ( "" .  .  . while parsing "" +  (  ( name != null )  ?  ( name . to Human (  )  + "" "" )  : """" )  + ""attribute at offset "" +  Hex . u4 ( offset )  )  ;      throw ex ;  }}"
4978,"public static  Tweak< Double> double Tweak (  String tweak Name, double default Value, double minimum Value, double maximum Value ) { return s Shared Tweaks . double Tweak ( tweak Name, default Value, minimum Value, maximum Value )  ; }"
4979,"public void set Uniformi (  String name, int value1, int value2 ) { GL20 gl =  Gdx . gl20 ;  check Managed (  )  ;  int location = fetch Uniform Location ( name )  ;  gl . gl Uniform2i ( location, value1, value2 )  ; }"
4980,"void set Value ( E entry, V value ) { this . map . entry Helper . set Value ( self (  ) , entry, value )  ; }"
4981,"public com . anychart . math .  Rect get Pixel Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . get Pixel Bounds (  ) "" )  ; }"
4982,public  String get Dynamic Type ( int index ) {  Dynamic Info iv =  (  Dynamic Info )  get Item ( index )  ;  if  ( iv == null )      return null ;   Name And Type Info n =  (  Name And Type Info )  get Item ( iv . name And Type )  ;  if  ( n == null )      return null ;  return get Utf8 Info ( n . type Descriptor )  ; }
4983,"public  Model Returning Class Type With Varargs_ on Bind (  On Model Bound Listener< Model Returning Class Type With Varargs_,  Object> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
4984,public T15 get Value15 (  ) { return value15 ; }
4985,"public static  Immutable Set Multimap<K, V> of ( K k1, V v1, K k2, V v2 ) {  Immutable Set Multimap .  Builder<K, V> builder =  Immutable Set Multimap . builder (  )  ;  builder . put ( k1, v1 )  ;  builder . put ( k2, v2 )  ;  return builder . build (  )  ; }"
4986,public  Expand Direction get Expand Direction (  ) { return expand Direction ; }
4987,"public io . grpc . stub .  Stream Observer<com . facebook . buck . logd . proto .  Log Message> open Log ( io . grpc . stub .  Stream Observer<com . google . rpc .  Status> response Observer ) { return async Client Streaming Call ( get Channel (  )  . new Call ( get Open Log Method Helper (  ) , get Call Options (  )  ) , response Observer )  ; }"
4988,"void rebuild Index (  Index index, boolean is Async ) { not Null ( index, error Message ( ""index can not be null"", VE_REBUILD_INDEX_NULL_INDEX )  )  ;  try {     write Lock . lock (  )  ;      indexing Service . rebuild Index ( index, is Async )  ;  } finally {     write Lock . unlock (  )  ;  }}"
4989,"public static boolean inspect And Inflow Downloaded ( int id,  String path, boolean force Re Download, boolean flow Directly ) { if  ( force Re Download )  {     return false ;  } if  ( path != null )  {     final  File file = new  File ( path )  ;      if  ( file . exists (  )  )  {          Message Snapshot Flow . get Impl (  )  . inflow (  Message Snapshot Taker . catch Can Reused Old File ( id, file, flow Directly )  )  ;          return true ;      } } return false ; }"
4990,"public void select (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . select (  )  ; "" )  ; }"
4991,"public com . anychart . core . axismarkers .  Current Price Indicator stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4992,"protected void do Get (  Http Servlet Request req,  Http Servlet Response rsp )  throws  Servlet Exception, IO Exception{  Any Long Object Id obj = get Object To Transfer ( req, rsp )  ;  if  ( obj != null )  {     if  ( repository . get Size ( obj )  == -1 )  {         send Error ( rsp,  Http Status . SC_NOT_FOUND,  Message Format . format (  Lfs Server Text . get (  )  . object Not Found, obj . get Name (  )  )  )  ;          return ;      }      Async Context context = req . start Async (  )  ;      context . set Timeout ( timeout )  ;      rsp . get Output Stream (  )  . set Write Listener ( new  Object Download Listener ( repository, context, rsp, obj )  )  ;  }}"
4993,public static void main (  String [  ]  args ) {// ed: moved}
4994,"public static bt Collision Shape obtain Static Node Shape ( final  Array< Node> nodes ) { get Shape Parts ( nodes, shape Part Array, 0, shape Part Pool )  ;  bt Collision Shape result = obtain Static Shape ( shape Part Array )  ;  shape Part Pool . free All ( shape Part Array )  ;  shape Part Array . clear (  )  ;  return result ; }"
4995,"public com . anychart . core . annotations .  Fibonacci Timezones x Scale ( com . anychart . scales .  Stock Scatter Date Time settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
4996,"public com . anychart . charts .  Tag Cloud select Marquee Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4997,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
4998,public int length (  ) { return end - start ; }
4999,"public void get Stat ( com . anychart . enums .  Statistics key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Stat ( %s )  ; "",  ( key != null )  ? key . get Js Base (  )  : null )  )  ; }"
5000,"public static  Closeable Reference<T> of ( @ Propagates Nullable T t,  Resource Releaser<T> resource Releaser,  Leak Handler leak Handler, @ Nullable  Throwable stacktrace ) { if  ( t == null )  {     return null ;  } else {     if  ( t instanceof  Bitmap || t instanceof  Has Bitmap )  {         switch ( s Bitmap Closeable Ref Type )  {             case REF_TYPE_FINALIZER:                 return new  Finalizer Closeable Reference<> ( t, resource Releaser, leak Handler, stacktrace )  ;              case REF_TYPE_REF_COUNT:                 return new  Ref Count Closeable Reference<> ( t, resource Releaser, leak Handler, stacktrace )  ;              case REF_TYPE_NOOP:                 return new  No Op Closeable Reference<> ( t, resource Releaser, leak Handler, stacktrace )  ;              case REF_TYPE_DEFAULT:         }     }     return new  Default Closeable Reference<> ( t, resource Releaser, leak Handler, stacktrace )  ;  }}"
5001,"public void load Media (  Intent intent ) { media Loader . handle Intent ( intent, ui View )  ; }"
5002,private void set Reading Adts Header State (  ) { state = STATE_READING_ADTS_HEADER ;  bytes Read = 0 ; }
5003,"private  Path resolve Artifact (  Artifact artifact,  Path project )  throws  Artifact Resolution Exception, IO Exception{  Optional< Path> newer Version File = get Newer Version File ( artifact, project )  ;  if  ( newer Version File . is Present (  )  )  {     return newer Version File . get (  )  ;  }  Artifact Result result = repo Sys . resolve Artifact ( session, new  Artifact Request ( artifact, repos, null )  )  ;  return copy ( result, project )  ; }"
5004,"public void copy File (  String source,  String dest )  throws IO Exception{  Path destination = get Path ( dest )  ;   Files . delete If Exists ( destination )  ;   Files . copy ( get Path ( source ) , destination )  ; }"
5005,"public  Proto Fluent Assertion ignoring Extra Repeated Field Elements Of Fields ( int first Field Number, int .  .  .  rest ) { return using Config ( config . ignoring Extra Repeated Field Elements Of Fields ( as List ( first Field Number, rest )  )  )  ; }"
5006,"private static  String generate Final Key (  String in ) {  String seckey = in . trim (  )  ;   String acc = seckey + ""258 EAFA5-E914-47 DA-95 CA-C5 AB0 DC85 B11"" ;   Message Digest sh1 ;  try {     sh1 =  Message Digest . get Instance ( ""SHA1"" )  ;  } catch  (  No Such Algorithm Exception e )  {     throw new  Illegal State Exception ( e )  ;  } return  Base64 . encode Bytes ( sh1 . digest ( acc . get Bytes (  )  )  )  ; }"
5007,"public com . anychart . charts .  Sparkline fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
5008,"private void select (  Swipe Open View Holder selected, int action State ) { if  ( selected == this . selected && action State == this . action State )  {     return ;  } final int prev Action State = this . action State ;  // prevent duplicate animations end Recover Animation ( selected )  ;  this . action State = action State ;  int action State Mask =  ( 1 <<  ( DIRECTION_FLAG_COUNT + DIRECTION_FLAG_COUNT * action State )  )  - 1 ;  boolean prevent Layout = false ;  // close the previously selected view holder if we're swiping a new one and the flag is true if  ( close On Action && selected != null && prev Selected != null && selected != prev Selected )  {     close Open Holder ( prev Selected )  ;      prev Selected = null ;      prevent Layout = true ;  } // that then has its' state saved if  ( close On Action && opened Positions . size (  )  > 0 )  {     for  ( int i = 0 ;  i < opened Positions . size (  )  ;  i++ )  {          Recycler View .  View Holder holder = recycler View . find View Holder For Adapter Position ( opened Positions . key At ( i )  )  ;          // if our selected isn't the opened position, close it         if  ( holder instanceof  Swipe Open View Holder &&  ( selected == null || holder . get Adapter Position (  )  != selected . get View Holder (  )  . get Adapter Position (  )  )  )  {             close Open Holder (  (  Swipe Open View Holder )  holder )  ;          }         opened Positions . remove At ( i )  ;      } } if  ( this . selected != null )  {     prev Selected = this . selected ;      // we've changed selection, we need to animate it back     if  ( prev Selected . get View Holder (  )  . item View . get Parent (  )  != null )  {         final int swipe Dir = check Previous Swipe Direction ( prev Selected . get View Holder (  )  )  ;          release Velocity Tracker (  )  ;          // find where we should animate to         final float target Translate X, target Translate Y ;          get Selected Dx Dy ( tmp Position )  ;          final float current Translate X = tmp Position [ 0 ]  ;          final float current Translate Y = tmp Position [ 1 ]  ;          // only need to check if we need a recover animation for non-zero translation views         if  ( prev Selected . get Swipe View (  )  . get Translation X (  )  != 0 || prev Selected . get Swipe View (  )  . get Translation Y (  )  != 0 )  {             final float abs Translate X =  Math . abs ( current Translate X )  ;              final float abs Translate Y =  Math . abs ( current Translate Y )  ;              final  Saved Open State state ;              switch ( swipe Dir )  {                 case LEFT:                 case START:                     target Translate Y = 0 ;                      // check if we need to close or go to the open position                     if  ( abs Translate X > prev Selected . get End Hidden View Size (  )  / 2 )  {                         target Translate X = prev Selected . get End Hidden View Size (  )  *  Math . signum ( d X )  ;                          state =  Saved Open State . END_OPEN ;                      } else {                         target Translate X = 0 ;                          state = null ;                      }                     break ;                  case RIGHT:                 case END:                     target Translate Y = 0 ;                      if  ( abs Translate X > prev Selected . get Start Hidden View Size (  )  / 2 )  {                         target Translate X = prev Selected . get Start Hidden View Size (  )  *  Math . signum ( d X )  ;                          state =  Saved Open State . START_OPEN ;                      } else {                         target Translate X = 0 ;                          state = null ;                      }                     break ;                  case UP:                     target Translate X = 0 ;                      if  ( abs Translate Y > prev Selected . get End Hidden View Size (  )  / 2 )  {                         target Translate Y = prev Selected . get End Hidden View Size (  )  *  Math . signum ( d Y )  ;                          state =  Saved Open State . END_OPEN ;                      } else {                         target Translate Y = 0 ;                          state = null ;                      }                     break ;                  case DOWN:                     target Translate X = 0 ;                      if  ( abs Translate Y > prev Selected . get Start Hidden View Size (  )  / 2 )  {                         target Translate Y = prev Selected . get Start Hidden View Size (  )  *  Math . signum ( d Y )  ;                          state =  Saved Open State . START_OPEN ;                      } else {                         target Translate Y = 0 ;                          state = null ;                      }                     break ;                  default:                     state = null ;                      target Translate X = 0 ;                      target Translate Y = 0 ;              }             // if state == null, we're closing it             if  ( state == null )  {                 opened Positions . remove ( prev Selected . get View Holder (  )  . get Adapter Position (  )  )  ;              } else {                 opened Positions . put ( prev Selected . get View Holder (  )  . get Adapter Position (  ) , state )  ;              }             final  Recover Animation rv = new  Recover Animation ( prev Selected, prev Action State, current Translate X, current Translate Y, target Translate X, target Translate Y )  ;              final long duration = callback . get Animation Duration ( recycler View, ANIMATION_TYPE_SWIPE, target Translate X - current Translate X, target Translate Y - current Translate Y )  ;              rv . set Duration ( duration )  ;              recover Animations . add ( rv )  ;              rv . start (  )  ;              prevent Layout = true ;          } else {             // if both translations are 0, it's closed             opened Positions . remove ( prev Selected . get View Holder (  )  . get Adapter Position (  )  )  ;          }     } else {         callback . clear View ( recycler View, prev Selected )  ;      }     this . selected = null ;  } if  ( selected != null )  {     selected Flags =  ( callback . get Abs Movement Flags ( recycler View, selected . get View Holder (  )  )  & action State Mask )  >>  ( this . action State * DIRECTION_FLAG_COUNT )  ;      selected Start X = selected . get View Holder (  )  . item View . get Left (  )  + selected . get Swipe View (  )  . get Translation X (  )  ;      selected Start Y = selected . get View Holder (  )  . item View . get Top (  )  + selected . get Swipe View (  )  . get Translation Y (  )  ;      this . selected = selected ;  } final  View Parent rv Parent = recycler View . get Parent (  )  ;  if  ( rv Parent != null )  {     rv Parent . request Disallow Intercept Touch Event ( this . selected != null )  ;  } if  ( !prevent Layout )  {     recycler View . get Layout Manager (  )  . request Simple Animations In Next Layout (  )  ;  } callback . on Selected Changed ( this . selected, this . action State )  ;  recycler View . invalidate (  )  ; }"
5009,"public void for Each Matching Value (  String string,  Consumer<T> consumer ) { int size = values . size (  )  ;  for  ( int idx = 0 ;  idx < size ;  idx++ )  {      Pair< Pattern, T> pair = values . get ( idx )  ;      if  ( pair . get First (  )  . matcher ( string )  . find (  )  )  {         consumer . accept ( pair . get Second (  )  )  ;      } }}"
5010,public boolean is Crop Supported (  ) { return false ; }
5011,"private void update Modules Index (  Immutable Set< Ij Module> modules Edited )  throws IO Exception{ final  Set< Module Index Entry> existing Modules = modules Parser . get All Modules ( project Filesystem . new File Input Stream ( get Idea Config Dir (  )  . resolve ( ""modules . xml"" )  )  )  ;  final  Set< Path> existing Module Filepaths = existing Modules . stream (  )  . map (  Module Index Entry::get File Path )  . map (  Path Formatter::path With Unix Separators )  . map (  Paths::get )  . collect (  Immutable Set . to Immutable Set (  )  )  ;   Immutable Set< Path> remaining Module Filepaths = modules Edited . stream (  )  . map ( project Paths::get Module Iml File Path )  . map (  Path Formatter::path With Unix Separators )  . map (  Paths::get )  . filter (  module Path -> !existing Module Filepaths . contains ( module Path )  )  . collect (  Immutable Set . to Immutable Set (  )  )  ;  //  Merge the existing and new modules into a single sorted set  Immutable Sorted Set .  Builder< Module Index Entry> final Modules Builder =  Immutable Sorted Set . ordered By (  Comparator . < Module Index Entry>natural Order (  )  )  ;  //  Add the existing definitions final Modules Builder . add All ( existing Modules )  ;  //  Add any new module definitions that we haven't seen yet remaining Module Filepaths . for Each (  module Path -> final Modules Builder . add (  Module Index Entry . of ( get Url ( project Paths . get Project Qualified Path ( module Path )  ) , project Paths . get Project Relative Path ( module Path ) , project Config . get Module Group Name (  )  )  )  )  ;  //  Write out the merged set to disk write Modules Index ( final Modules Builder . build (  )  )  ; }"
5012,"public  Async Operation insert In Tx (  Class<E> entity Class,  Iterable<E> entities, int flags ) { return enque Entity Operation (  Operation Type .  Insert In Tx Iterable, entity Class, entities, flags )  ; }"
5013,"public static void build (  Mesh Part Builder builder,  Vertex Info corner00,  Vertex Info corner10,  Vertex Info corner11,  Vertex Info corner01, int divisions U, int divisions V ) { if  ( divisions U < 1 || divisions V < 1 )  {     throw new  Gdx Runtime Exception ( ""divisions U and division V must be > 0, u,v: "" + divisions U + "", "" + divisions V )  ;  } builder . ensure Vertices (  ( divisions V + 1 )  *  ( divisions U + 1 )  )  ;  builder . ensure Rectangle Indices ( divisions V * divisions U )  ;  for  ( int u = 0 ;  u <= divisions U ;  u++ )  {     final float alpha U =  ( float )  u /  ( float )  divisions U ;      vert Tmp5 . set ( corner00 )  . lerp ( corner10, alpha U )  ;      vert Tmp6 . set ( corner01 )  . lerp ( corner11, alpha U )  ;      for  ( int v = 0 ;  v <= divisions V ;  v++ )  {         final short idx = builder . vertex ( vert Tmp7 . set ( vert Tmp5 )  . lerp ( vert Tmp6,  ( float )  v /  ( float )  divisions V )  )  ;          if  ( u > 0 && v > 0 )              builder . rect (  ( short )   ( idx - divisions V - 2 ) ,  ( short )   ( idx - 1 ) , idx,  ( short )   ( idx - divisions V - 1 )  )  ;      } }}"
5014,"public com . anychart . charts .  Stock label (  String index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , settings )  )  ;  return this ; }"
5015,public long get Deleted Count (  ) { return deleted Count ; }
5016,"public final  String get Resolution (  ) {  Display Metrics metrics = new  Display Metrics (  )  ;  if  ( display != null )  {     display . get Metrics ( metrics )  ;      return  Check Validity Util . check Valid Data ( metrics . height Pixels + ""x"" + metrics . width Pixels )  ;  } return  Check Validity Util . check Valid Data ( """" )  ; }"
5017,"private  Basic Block List convert Basic Blocks (  ) {  Array List< Ssa Basic Block> blocks = ssa Meth . get Blocks (  )  ;  //  Exit block may be null .   Ssa Basic Block exit Block = ssa Meth . get Exit Block (  )  ;  ssa Meth . compute Reachability (  )  ;  int rop Block Count = ssa Meth . get Count Reachable Blocks (  )  ;  //  Don't count the exit block, if it exists and is reachable .  rop Block Count -=  ( exit Block != null && exit Block . is Reachable (  )  )  ? 1 : 0 ;   Basic Block List result = new  Basic Block List ( rop Block Count )  ;  //  Convert all the reachable blocks except the exit block .  int rop Block Index = 0 ;  for  (  Ssa Basic Block b : blocks )  {     if  ( b . is Reachable (  )  && b != exit Block )  {         result . set ( rop Block Index++, convert Basic Block ( b )  )  ;      } } //  The exit block, which is discarded, must do nothing .  if  ( exit Block != null && exit Block . get Insns (  )  . size (  )  != 0 )  {     throw new  Runtime Exception ( "" Exit block must have no insns when leaving SSA form"" )  ;  } return result ; }"
5018,public void set Image Bounds Listener ( @ Nullable  Image Bounds Listener image Bounds Listener ) { m Image Bounds Listener = image Bounds Listener ; }
5019,"public com . anychart . core .  State Settings trend (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . trend ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5020,"public com . anychart . core . annotations .  Trend Channel container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
5021,"public com . anychart . core . stock . scrollerseries .  Step Line min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
5022,"public void in Marquee (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . in Marquee (  )  ; "" )  ; }"
5023,"public com . anychart . charts .  Cartesian y Grid (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Grid ( %s )  ; "", settings )  )  ;  return this ; }"
5024,"public com . anychart . core . gantt . edit .  Element Edit fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
5025,"public com . anychart . charts .  Waterfall height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
5026,private double get Time Per Frame (  ) { return time Per Frame ; }
5027,"private  Build Target find Pch Target (  )  throws IO Exception{ for  (  Build Target target : workspace . get Build Log (  )  . get All Targets (  )  )  {     for  (  Flavor flavor : target . get Flavors (  )  . get Set (  )  )  {         if  ( flavor . get Name (  )  . starts With ( ""pch-"" )  )  {             return target ;          }     } } fail ( ""should have generated a pch target"" )  ;  return null ; }"
5028,public int get Current Position Raw (  ) { int current Pos = start Offset ;  if  ( is Really Playing (  )  )  {     current Pos +=  ( int )   (  System Clock . uptime Millis (  )  - start Time )  ;  } return current Pos ; }
5029,"public com . anychart . standalones .  Data Grid enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
5030,"public com . anychart . core . annotations .  Vertical Line bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
5031,public int get Position (  ) { return byte Offset * 8 + bit Offset ; }
5032,"public void update View Size ( int width, int height ) { m View Width = width ;  m View Height = height ; }"
5033,"public static  Directed Acyclic Graph< Build Rule> get Build Rule Directed Graph Filtered By (  Iterable<? extends  Build Rule> inputs,  Predicate< Object> filter,  Predicate< Object> traverse ) { //  Build up a graph of the inputs and their transitive dependencies, we'll use the graph // to topologically sort the dependencies .   Mutable Directed Graph< Build Rule> graph = new  Mutable Directed Graph<> (  )  ;   Abstract Breadth First Traversal< Build Rule> visitor = new  Abstract Breadth First Traversal< Build Rule> ( inputs )  {     @ Override     public  Iterable< Build Rule> visit (  Build Rule rule )  {         if  ( filter . test ( rule )  )  {             graph . add Node ( rule )  ;              for  (  Build Rule dep : rule . get Build Deps (  )  )  {                 if  ( traverse . test ( dep )  && filter . test ( dep )  )  {                     graph . add Edge ( rule, dep )  ;                  }             }         }         return traverse . test ( rule )  ? rule . get Build Deps (  )  :  Immutable Set . of (  )  ;      } } ;  visitor . start (  )  ;  return new  Directed Acyclic Graph<> ( graph )  ; }"
5034,public  Builder clear Cpu Stat Usage Usec (  ) { cpu Stat Usage Usec_ = 0 L ;  on Changed (  )  ;  return this ; }
5035,"public com . anychart . data .  Table Selectable create Selectable (  ) { return new com . anychart . data .  Table Selectable ( js Base + "" . create Selectable (  ) "" )  ; }"
5036,"public void open Camera ( final  String camera Id ) { m Camera Handler = new  Handler ( m Camera Thread . get Looper (  )  )  ;  m Camera Handler . post ( new  Runnable (  )  {     @ Suppress Warnings ( "" Missing Permission"" )      public void run (  )  {         if  ( m Camera Device != null )  {             throw new  Illegal State Exception ( "" Camera already open"" )  ;          }         try {             m Camera Manager . open Camera ( camera Id, m Camera Device Listener, m Camera Handler )  ;          } catch  (  Camera Access Exception e )  {              String error Message = m Error Displayer . get Error String ( e )  ;              m Error Displayer . show Error Dialog ( error Message )  ;          }     } } )  ; }"
5037,"public com . anychart . charts .  Venn padding (  Number value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
5038,public void set Hex (  String hex ) { this . hex = hex ; }
5039,protected void make Method Private (  Method Node method ) { method . access =  ( method . access |  Opcodes . ACC_PRIVATE )  & ~ (  Opcodes . ACC_PUBLIC |  Opcodes . ACC_PROTECTED )  ; }
5040,"public com . anychart . core . polar . series .  Range Column hatch Fill ( com . anychart . graphics . vector .  Pattern Fill pattern Fill ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "",  ( pattern Fill != null )  ? pattern Fill . get Js Base (  )  : null )  )  ;  return this ; }"
5041,public T rendering Triggered On Draw ( boolean is Rendering Triggered On Draw ) { m Is Rendering Triggered On Draw = is Rendering Triggered On Draw ;  return self (  )  ; }
5042,public  Matrix3 scl (  Vector3 scale ) { val [ M00 ]  *= scale . x ;  val [ M11 ]  *= scale . y ;  return this ; }
5043,"public void save As Png (  String width,  Number height,  Number quality,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Png ( %s, %s, %s, %s )  ; "", wrap Quotes ( width ) , height, quality, wrap Quotes ( filename )  )  )  ; }"
5044,"public void set Q Word Value ( final long value ) { if  ( value < 0 )  {     throw new  Illegal Argument Exception ( ""value out of range  ( 0-"" +  Metadata Descriptor . QWORD_MAXVALUE . to String (  )  + "" ) "" )  ;  } this . content =  Utils . get Bytes ( value, 8 )  ;  this . descriptor Type = TYPE_QWORD ; }"
5045,public void stop (  ) { standalone Media Clock . stop (  )  ; }
5046,"protected void set Row View (  View row View, int position ) { row View . set Background Color (  Color . LTGRAY )  ; }"
5047,public long get Long Bits (  ) { return 0 ; }
5048,public  Builder set Callback ( @ Non Null  Permission Callback callback ) { this . callback = callback ;  return this ; }
5049,"public static  Put Result new Insert Result ( long inserted Id, @ Non Null  String affected Table, @ Nullable  Collection< String> affected Tags ) { check Not Null ( affected Table, "" Please specify affected table"" )  ;  return new  Put Result ( inserted Id, null, singleton ( affected Table ) , non Null Set ( affected Tags )  )  ; }"
5050,"public  Prop Defaults View Model_ object With Default ( @ Non Null  String object With Default ) { if  ( object With Default == null )  {     throw new  Illegal Argument Exception ( ""object With Default cannot be null"" )  ;  } on Mutation (  )  ;  this . object With Default_ String = object With Default ;  return this ; }"
5051,public float get Z Index (  ) { return m Polyline Options . get Z Index (  )  ; }
5052,"public void test (  End To End Test Descriptor test,  End To End Workspace workspace )  throws  Exception{  Process Result result = workspace . run Buck Command ( test )  ;  result . assert Success ( "" Did not successfully build"" )  ; }"
5053,"public com . anychart . core . annotations .  Trend Channel trend Channel (  String settings ) { return new com . anychart . core . annotations .  Trend Channel (  String . format (  Locale . US, js Base + "" . trend Channel ( %s ) "", wrap Quotes ( settings )  )  )  ; }"
5054,"public com . anychart . charts .  Pie hatch Fill (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "", enabled )  )  ;  return this ; }"
5055,"public static  Component Dependencies from (  Immutable Set< Component Descriptor> descriptors,  Immutable Set< Aggregated Deps Metadata> aggregated Deps Metadata,  Immutable Set< Aggregated Uninstall Modules Metadata> aggregated Uninstall Modules Metadata,  Immutable Set< Aggregated Early Entry Point Metadata> aggregated Early Entry Point Metadata,  Elements elements ) {  Immutable Set< Type Element> uninstalled Modules =  Immutable Set . < Type Element>builder (  )  . add All ( aggregated Uninstall Modules Metadata . stream (  )  . flat Map (  metadata -> metadata . uninstall Module Elements (  )  . stream (  )  )  . map (  module ->  Pkg Private Metadata . public Module ( module, elements )  )  . collect ( to Immutable Set (  )  )  )  . add All ( aggregated Deps Metadata . stream (  )  . flat Map (  metadata -> metadata . replaced Dependencies (  )  . stream (  )  )  . collect ( to Immutable Set (  )  )  )  . build (  )  ;   Component Dependencies .  Builder component Dependencies =  Component Dependencies . builder (  )  ;   Immutable Set< Class Name> component Names = descriptors . stream (  )  . map (  Component Descriptor::component )  . collect ( to Immutable Set (  )  )  ;  for  (  Aggregated Deps Metadata metadata : aggregated Deps Metadata )  {     for  (  Type Element component Element : metadata . component Elements (  )  )  {          Class Name component Name =  Class Name . get ( component Element )  ;          check State ( component Names . contains ( component Name ) , ""%s is not a valid  Component . "", component Name )  ;          switch ( metadata . dependency Type (  )  )  {             case MODULE:                 if  ( !uninstalled Modules . contains ( metadata . dependency (  )  )  )  {                     component Dependencies . modules Builder (  )  . put ( component Name, metadata . dependency (  )  )  ;                  }                 break ;              case ENTRY_POINT:                 component Dependencies . entry Points Builder (  )  . put ( component Name, metadata . dependency (  )  )  ;                  break ;              case COMPONENT_ENTRY_POINT:                 component Dependencies . component Entry Points Builder (  )  . put ( component Name, metadata . dependency (  )  )  ;                  break ;          }     } } component Dependencies . entry Points Builder (  )  . put All (  Class Names . SINGLETON_COMPONENT, aggregated Early Entry Point Metadata . stream (  )  . map (  Aggregated Early Entry Point Metadata::early Entry Point )  . map (  entry Point ->  Pkg Private Metadata . public Early Entry Point ( entry Point, elements )  )  . collect ( to Immutable Set (  )  )  )  ;  return component Dependencies . build (  )  ; }"
5056,public double get Quality Value (  ) {  String quality Factory = get Parameter ( PARAM_QUALITY_FACTOR )  ;  return  ( quality Factory != null ?  Double . parse Double ( quality Factory )  : 1 D )  ; }
5057,public static  Builder<B> builder (  ) { return new  Builder<B> (  )  ; }
5058,public static void set Global Debug Logging Enabled ( boolean global Debug Logging Enabled ) {  Epoxy Controller . global Debug Logging Enabled = global Debug Logging Enabled ; }
5059,"public static void web View Load Local Js (  Web View view,  String path ) {  String js Content = asset File2 Str ( view . get Context (  ) , path )  ;  view . load Url ( ""javascript:"" + js Content )  ; }"
5060,"public void remove View (  View view ) { throw new  Unsupported Operation Exception ( "" Removing  Views manually within  Litho Views is not supported"" )  ; }"
5061,public com . facebook . buck . remoteexecution . proto .  Buck Info get Buck Info (  ) { return buck Info_ == null ? com . facebook . buck . remoteexecution . proto .  Buck Info . get Default Instance (  )  : buck Info_ ; }
5062,"protected  Postcard build (  Uri uri ) { if  ( null == uri ||  Text Utils . is Empty ( uri . to String (  )  )  )  {     throw new  Handler Exception (  Consts . TAG + "" Parameter invalid!"" )  ;  } else {      Path Replace Service p Service = A Router . get Instance (  )  . navigation (  Path Replace Service . class )  ;      if  ( null != p Service )  {         uri = p Service . for Uri ( uri )  ;      }     return new  Postcard ( uri . get Path (  ) , extract Group ( uri . get Path (  )  ) , uri, null )  ;  }}"
5063,"private void set Scroll By ( int x, int y ) { scroll By ( x, y )  ; }"
5064,"public V write ( V request ) {  Random Access File dir = null ;   File Lock lock = null ;   Object Output Stream output = null ;  try {     create Directory ( handle . get Parent File (  )  )  ;      dir = new  Random Access File ( handle, ""rw"" )  ;      lock = dir . get Channel (  )  . lock (  )  ;      output = new  Object Output Stream ( new GZIP Output Stream ( new  File Output Stream ( dir . get FD (  )  ) , 8192 )  )  ;      output . write Int ( version )  ;      output . write Object ( request )  ;  } catch  ( IO Exception e )  {      Log . d ( TAG, "" Exception writing cache "" + handle . get Name (  ) , e )  ;      return null ;  } finally {     if  ( output != null )  {         try {             output . close (  )  ;          } catch  ( IO Exception e )  {              Log . d ( TAG, "" Exception closing stream"", e )  ;          }     }     if  ( lock != null )  {         try {             lock . release (  )  ;          } catch  ( IO Exception e )  {              Log . d ( TAG, "" Exception unlocking file"", e )  ;          }     }     if  ( dir != null )  {         try {             dir . close (  )  ;          } catch  ( IO Exception e )  {              Log . d ( TAG, "" Exception closing file"", e )  ;          }     } } return request ; }"
5065,public  String get Address (  ) { return m Device . get Address (  )  ; }
5066,"public void font Style (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Style (  )  ; "" )  ; }"
5067,public static void remove Connection Quality Change Listener (  ) {  Connection Class Manager . get Instance (  )  . remove Listener (  )  ; }
5068,"public void truncate (  )  throws IO Exception{ try {      File Output Stream fos = new  File Output Stream ( m Base Name )  ;      fos . get FD (  )  . sync (  )  ;      fos . close (  )  ;  } catch  (  File Not Found Exception e )  {     throw new IO Exception ( "" Couldn't append "" + m Base Name )  ;  } catch  ( IO Exception e )  { }}"
5069,public void clear (  ) { throw new  Unsupported Operation Exception (  )  ; }
5070,public static  Monitor [  ]  get Monitors (  ) {  Lwjgl3 Application . initialize Glfw (  )  ;   Pointer Buffer glfw Monitors = GLFW . glfw Get Monitors (  )  ;   Monitor [  ]  monitors = new  Monitor [ glfw Monitors . limit (  )  ]  ;  for  ( int i = 0 ;  i < glfw Monitors . limit (  )  ;  i++ )  {     monitors [ i ]  = to Lwjgl3 Monitor ( glfw Monitors . get ( i )  )  ;  } return monitors ; }
5071,public static int get Device Usable Memory (  Context cxt ) {  Activity Manager am =  (  Activity Manager )  cxt . get System Service (  Context . ACTIVITY_SERVICE )  ;   Memory Info mi = new  Memory Info (  )  ;  am . get Memory Info ( mi )  ;  // 返回当前系统的可用内存 return  ( int )   ( mi . avail Mem /  ( 1024 * 1024 )  )  ; }
5072,"public boolean compute Scroll (  ) { if  ( finished )  {     return false ;  } long elapsed =  System Clock . elapsed Realtime (  )  - start Rtc ;  if  ( elapsed >= duration )  {     finished = true ;      curr Value = final Value ;      return false ;  } float time = interpolator . get Interpolation (  ( float )  elapsed / duration )  ;  curr Value = interpolate ( start Value, final Value, time )  ;  return true ; }"
5073,"public static byte [  ]  get Bytes ( @ Non Null final  String key, @ Nullable final byte [  ]  default Value, @ Non Null final  Cache Disk Utils cache Disk Utils ) { return cache Disk Utils . get Bytes ( key, default Value )  ; }"
5074,public void write ( final  String value ) { if  ( value != null )  {     builder . append ( value )  ;  }}
5075,public void dispose (  ) { if  ( m Disposed )  {     return ;  } m Custom Tab Manager . dispose (  )  ;  m Disposed = true ; }
5076,"private void replace File String (  String file Path,  String replace Type,  String replace String ) { try {      File file = new  File ( file Path )  ;       Buffered Reader reader = new  Buffered Reader ( new  File Reader ( file )  )  ;       String line = BLANK_STRING ;       String oldtext = BLANK_STRING ;      while  (  ( line = reader . read Line (  )  )  != null )  {         oldtext += line +  Constants . LINE_END ;      }     reader . close (  )  ;      // replace a word in a file      String newtext = oldtext . replace All ( replace Type, replace String )  ;       Buffered Writer writer = new  Buffered Writer ( new  Output Stream Writer ( new  File Output Stream ( file Path ) , get String ( R . string . csv_encoding )  )  )  ;      writer . write ( newtext )  ;      writer . close (  )  ;  } catch  ( IO Exception e )  {      Log . d ( LOG_TAG, e . get Message (  )  )  ;  }}"
5077,"public com . anychart . charts .  Cartesian min Height (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", value )  )  ;  return this ; }"
5078,public  Track Group Array get Track Groups (  ) { return  Assertions . check Not Null ( track Groups )  ; }
5079,"public int name ( int i ) { return  Byte Array . read U16bit ( info, i * 4 + 1 )  ; }"
5080,"public com . anychart . standalones .  Project Timeline row Selected Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
5081,"public  Authentication Token remove Authentication Token (  String host,  String realm ) { return this . authentication Tokens . remove ( host . concat ( realm )  )  ; }"
5082,"public com . anychart . core . cartesian . series .  Base falling Fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { return new com . anychart . core . cartesian . series .  Base (  String . format (  Locale . US, js Base + "" . falling Fill ( %s, %s, %s, %s ) "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ; }"
5083,public  View get Title View ( final int position ) {  View title View = null ;   View parent View = find View For Position ( position )  ;  if  ( parent View != null )  {      Object tag = parent View . get Tag (  )  ;      if  ( tag instanceof  View Holder )  {         title View =  (  (  View Holder )  tag )  . title View ;      } } return title View ; }
5084,public final boolean is Ready (  ) { return ready Sent ; }
5085,"public static  Rop op Invoke Direct (  Prototype meth ) { return new  Rop (  Reg Ops . INVOKE_DIRECT, meth . get Parameter Frame Types (  ) ,  Std Type List . THROWABLE )  ; }"
5086,"public static  Array List<float [  ] > get Path (  String str, float scale, int gap Between Letter ) {  Array List<float [  ] > list = new  Array List<float [  ] > (  )  ;  float offset For Width = 0 ;  for  ( int i = 0 ;  i < str . length (  )  ;  i++ )  {     int pos = str . char At ( i )  ;      int key = s Point List . index Of Key ( pos )  ;      if  ( key == -1 )  {         continue ;      }     float [  ]  points = s Point List . get ( pos )  ;      int point Count = points . length / 4 ;      for  ( int j = 0 ;  j < point Count ;  j++ )  {         float [  ]  line = new float [ 4 ]  ;          for  ( int k = 0 ;  k < 4 ;  k++ )  {             float l = points [ j * 4 + k ]  ;              // x             if  ( k % 2 == 0 )  {                 line [ k ]  =  ( l + offset For Width )  * scale ;              } else // y             {                 line [ k ]  = l * scale ;              }         }         list . add ( line )  ;      }     offset For Width += 57 + gap Between Letter ;  } return list ; }"
5087,public float get Border Width (  ) { return m Border Width ; }
5088,public int get Label (  ) { return label ; }
5089,"private  Source Path get Jar Path (  Build Rule rule,  Action Graph Builder graph Builder ) {  Source Path jar Path = null ;  if  ( rule instanceof  Has Java Abi )  {      Has Java Abi java Abi Rule =  (  Has Java Abi )  rule ;       Optional< Build Target> optional Build Target = java Abi Rule . get Abi Jar (  )  ;      if  ( optional Build Target . is Present (  )  )  {         jar Path = graph Builder . require Rule ( optional Build Target . get (  )  )  . get Source Path To Output (  )  ;      } } if  ( jar Path == null )  {     jar Path = rule . get Source Path To Output (  )  ;  } return jar Path ; }"
5090,public synchronized int get Focus ( final int focus_abs ) { int result = 0 ;  if  ( m Native Ptr != 0 )  {     native Update Focus Limit ( m Native Ptr )  ;      final float range =  Math . abs ( m Focus Max - m Focus Min )  ;      if  ( range > 0 )  {         result =  ( int )   (  ( focus_abs - m Focus Min )  * 100 . f / range )  ;      } } return result ; }
5091,public static _ Fields find By Name ( java . lang .  String name ) { return by Name . get ( name )  ; }
5092,"public final synchronized void add Media Sources (  Collection< Media Source> media Sources,  Handler handler,  Runnable on Completion Action ) { add Public Media Sources ( media Sources Public . size (  ) , media Sources, handler, on Completion Action )  ; }"
5093,"public com . anychart . core . utils .  Interactivity interactivity (  ) { return new com . anychart . core . utils .  Interactivity ( js Base + "" . interactivity (  ) "" )  ; }"
5094,public  Repository Adapter build (  ) { return new  Repository Adapter ( this )  ; }
5095,public  Sub Mesh get Sub Mesh ( int index ) { return sub Meshes [ index ]  ; }
5096,"public static T linear_derivative ( final T out, final float t, final T p0, final T p1, final T tmp ) { // B1' ( t )  = p1-p0 return out . set ( p1 )  . sub ( p0 )  ; }"
5097,"public  Task< Void> wait For Data Collection Permission (  ) { return  Utils . race ( data Collection Explicitly Approved . get Task (  ) , wait For Automatic Data Collection Enabled (  )  )  ; }"
5098,"public void set Mode ( int op, int uid,  String package Name, int mode ) {  Integer old Mode = app Mode Map . put (  Key . create ( uid, package Name, op ) , mode )  ;   On Op Changed Listener listener = app Op Listeners . get (  Key . create ( null, package Name, op )  )  ;  if  ( listener != null && ! Objects . equals ( old Mode, mode )  )  {      String [  ]  s Op To String =  Reflection Helpers . get Static Field (  App Ops Manager . class, ""s Op To String"" )  ;      listener . on Op Changed ( s Op To String [ op ] , package Name )  ;  }}"
5099,static  Virtual File [  ]  create Path Mocks (  String .  .  .  path ) {  Virtual File root Dir = mock (  Virtual File . class )  ;   Virtual File cur Dir = root Dir ;  for  (  String s : path )  {      Virtual File next Dir = mock (  Virtual File . class )  ;      when ( cur Dir . find Child ( s )  )  . then Return ( next Dir )  ;      when ( next Dir . get Name (  )  )  . then Return ( s )  ;      when ( next Dir . get Parent (  )  )  . then Return ( cur Dir )  ;      cur Dir = next Dir ;  }  Virtual File [  ]  dirs = new  Virtual File [ 2 ]  ;  dirs [ 0 ]  = root Dir ;  dirs [ 1 ]  = cur Dir ;  return dirs ; }
5100,public  Download version (  String version ) { m Version = version ;  return this ; }
5101,public int get Index (  String name ) { return get Index ( get ( name )  )  ; }
5102,"public boolean run Scan Test ( final  Context context ) { initialize With Context ( context )  ;  this . m Scan Test Result = null ;   Log Manager . i ( TAG, "" Starting scan test"" )  ;  final long test Start Time =  System . current Time Millis (  )  ;  if  ( this . m Adapter != null )  {     final  Bluetooth Le Scanner scanner = this . m Adapter . get Bluetooth Le Scanner (  )  ;      final  Scan Callback callback = new  Scan Callback (  )  {         public void on Scan Result ( int callback Type,  Scan Result result )  {             super . on Scan Result ( callback Type, result )  ;               Bluetooth Medic . this . m Scan Test Result = true ;               Log Manager . i (  Bluetooth Medic . TAG, "" Scan test succeeded"" )  ;              try {                 scanner . stop Scan ( this )  ;              }// caught if bluetooth is off here              catch  (  Illegal State Exception e )  {             /* do nothing */             }         }         public void on Batch Scan Results (  List< Scan Result> results )  {             super . on Batch Scan Results ( results )  ;          }         public void on Scan Failed ( int error Code )  {             super . on Scan Failed ( error Code )  ;               Log Manager . d (  Bluetooth Medic . TAG, "" Sending on Scan Failed event"" )  ;               Bluetooth Medic . this . process Medic Action ( ""on Scan Failed"", error Code )  ;              if  ( error Code == 2 )  {                  Log Manager . w (  Bluetooth Medic . TAG, "" Scan test failed in a way we consider a failure"" )  ;                   Bluetooth Medic . this . send Screen Notification ( ""scan failed"", ""bluetooth not ok"" )  ;                   Bluetooth Medic . this . m Scan Test Result = false ;              } else {                  Log Manager . i (  Bluetooth Medic . TAG, "" Scan test failed in a way we do not consider a failure"" )  ;                   Bluetooth Medic . this . m Scan Test Result = true ;              }         }     } ;      if  ( scanner != null )  {         try {             scanner . start Scan ( callback )  ;              while  ( this . m Scan Test Result == null )  {                  Log Manager . d ( TAG, "" Waiting for scan test to complete .  .  . "" )  ;                  try {                      Thread . sleep ( 1000 L )  ;                  } catch  (  Interrupted Exception e )  {                 /* do nothing */                 }                 if  (  System . current Time Millis (  )  - test Start Time > 5000 L )  {                      Log Manager . d ( TAG, "" Timeout running scan test"" )  ;                      break ;                  }             }             scanner . stop Scan ( callback )  ;          } catch  (  Illegal State Exception e )  {              Log Manager . d ( TAG, "" Bluetooth is off .    Cannot run scan test . "" )  ;          } catch  (  Null Pointer Exception e )  {             //  Needed to stop a crash caused by internal NPE thrown by  Android .    See issue #636              Log Manager . e ( TAG, "" Null Pointer Exception .   Cannot run scan test . "", e )  ;          }     } else {          Log Manager . d ( TAG, "" Cannot get scanner"" )  ;      } }  Log Manager . d ( TAG, ""scan test complete"" )  ;  return this . m Scan Test Result == null || this . m Scan Test Result ; }"
5103,"public com . anychart . core . map . series .  Choropleth unselect (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unselect ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ;  return this ; }"
5104,"private  String generate Final Key (  String in ) {  String seckey = in . trim (  )  ;   String acc = seckey + ""258 EAFA5-E914-47 DA-95 CA-C5 AB0 DC85 B11"" ;   Message Digest sh1 ;  try {     sh1 =  Message Digest . get Instance ( ""SHA1"" )  ;  } catch  (  No Such Algorithm Exception e )  {     throw new  Illegal State Exception ( e )  ;  } return  Base64 . encode Bytes ( sh1 . digest ( acc . get Bytes (  )  )  )  ; }"
5105,"public void test Transform Exception Remains Memoized (  )  throws  Throwable{ //  We need to test with two input futures since  Execution List . execute // doesn't catch  Errors and we cannot depend on the order that our // transformations run .   (  So it is possible that the  Error being thrown // could prevent our second transformations from running )  .   Settable Future< Integer> exception Input =  Settable Future . create (  )  ;   Listenable Future< Integer> exception Composed Future = transform ( exception Input, new One Time Exception Thrower (  ) , direct Executor (  )  )  ;  exception Input . set ( 0 )  ;  run Get Idempotency Test ( exception Composed Future,  My Runtime Exception . class )  ;   Settable Future< Integer> error Input =  Settable Future . create (  )  ;   Listenable Future< Integer> error Composed Future = transform ( error Input, new One Time Error Thrower (  ) , direct Executor (  )  )  ;  error Input . set ( 0 )  ;  run Get Idempotency Test ( error Composed Future,  My Error . class )  ;  /*  *  Try again when the input's value is already filled in, since the flow is  * slightly different in that case .   */ exception Composed Future = transform ( exception Input, new One Time Exception Thrower (  ) , direct Executor (  )  )  ;  run Get Idempotency Test ( exception Composed Future,  My Runtime Exception . class )  ;  run Get Idempotency Test ( transform ( error Input, new One Time Error Thrower (  ) , direct Executor (  )  ) ,  My Error . class )  ;  run Get Idempotency Test ( error Composed Future,  My Error . class )  ; }"
5106,public void set Stop Iterations ( int iterations ) { time Based = false ;  next Gate = iterations ; }
5107,public void set Output (  ) { output = true ; }
5108,"private static  Immutable Set Multimap< Key, T> index Binding Declarations By Key (  Iterable<T> declarations ) { return  Immutable Set Multimap . copy Of (  Multimaps . index ( declarations,  Binding Declaration::key )  )  ; }"
5109,"public static  Optional< String> get String Or Environment Variable (  Buck Config buck Config,  String section,  String field ) {  Optional< String> default Value = buck Config . get Value ( section, field )  ;   Optional< String> env Variable = buck Config . get Value ( section, get Env Var Field Name For Field ( field )  )  ;  if  ( !env Variable . is Present (  )  )  {     return default Value ;  }  String env Value = buck Config . get Environment (  )  . get Or Default ( env Variable . get (  ) , """" )  . trim (  )  ;  return env Value . is Empty (  )  ? default Value :  Optional . of ( env Value )  ; }"
5110,"public void triangle Down (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . triangle Down (  )  ; "" )  ; }"
5111,"public static  Object Loader smudge Lfs Blob (  Repository db,  Object Loader loader )  throws IO Exception{ if  ( loader . get Size (  )  >  Lfs Pointer . FULL_SIZE_THRESHOLD )  {     return loader ;  } try  (  Input Stream is = loader . open Stream (  )  )  {      Lfs Pointer ptr =  Lfs Pointer . parse Lfs Pointer ( is )  ;      if  ( ptr != null )  {          Lfs lfs = new  Lfs ( db )  ;           Any Long Object Id oid = ptr . get Oid (  )  ;           Path media File = lfs . get Media File ( oid )  ;          if  ( ! Files . exists ( media File )  )  {              Smudge Filter . download Lfs Resource ( lfs, db, ptr )  ;          }         return new  Lfs Blob Loader ( media File )  ;      } } return loader ; }"
5112,"public void set ( int n,  Insn insn ) { set0 ( n, insn )  ; }"
5113,"public void run (  ) { super . run (  )  ;  try {     process =  Runtime . get Runtime (  )  . exec ( ""logcat -v time"" )  ;  } catch  ( IO Exception e )  {      Log . e ( LOGTAG, ""IO Exception executing logcat command . "", e )  ;  } read Logcat (  )  ; }"
5114,"public void check File Dir Merge Conflict In Virtual Ancestor_ Conflict In Children_ Dir File (  Merge Strategy strategy )  throws  Exception{ if  ( !strategy . equals (  Merge Strategy . RECURSIVE )  )  {     return ;  }  Git git =  Git . wrap ( db )  ;  // master write Trash File ( ""a/content"", ""initial content"" )  ;  git . add (  )  . add Filepattern ( ""a/content"" )  . call (  )  ;   Rev Commit commit I = git . commit (  )  . set Message ( "" Initial commit"" )  . call (  )  ;  write Trash File ( ""a/content"", ""content in  Ancestor 1"" )  ;  git . add (  )  . add Filepattern ( ""a/content"" )  . call (  )  ;   Rev Commit commit A1 = git . commit (  )  . set Message ( "" Ancestor 1"" )  . call (  )  ;  write Trash File ( ""a/content"", ""content in  Child 1  ( commited on master ) "" )  ;  git . add (  )  . add Filepattern ( ""a/content"" )  . call (  )  ;  // commit C1 M git . commit (  )  . set Message ( "" Child 1 on master"" )  . call (  )  ;  git . checkout (  )  . set Create Branch ( true )  . set Start Point ( commit I )  . set Name ( ""branch-to-merge"" )  . call (  )  ;  // ""a"" becomes a file in A2 git . rm (  )  . add Filepattern ( ""a/content"" )  . call (  )  ;  write Trash File ( ""a"", ""content in  Ancestor 2  ( commited on branch-to-merge ) "" )  ;  git . add (  )  . add Filepattern ( ""a"" )  . call (  )  ;   Rev Commit commit A2 = git . commit (  )  . set Message ( "" Ancestor 2"" )  . call (  )  ;  // second branch git . checkout (  )  . set Create Branch ( true )  . set Start Point ( commit A1 )  . set Name ( ""second-branch"" )  . call (  )  ;  write Trash File ( ""a/content"", ""content in  Child 2  ( commited on second-branch ) "" )  ;  git . add (  )  . add Filepattern ( ""a/content"" )  . call (  )  ;  // commit C2 S git . commit (  )  . set Message ( "" Child 2 on second-branch"" )  . call (  )  ;  //  Merge branch-to-merge into second-branch  Merge Result merge Result = git . merge (  )  . include ( commit A2 )  . set Strategy ( strategy )  . call (  )  ;  assert Equals ( merge Result . get New Head (  ) , null )  ;  assert Equals ( merge Result . get Merge Status (  ) ,  Merge Status . CONFLICTING )  ;  //  Resolve the conflict manually - write a file git . rm (  )  . add Filepattern ( ""a"" )  . call (  )  ;  git . rm (  )  . add Filepattern ( ""a/content"" )  . call (  )  ;  delete Trash File ( ""a/content"" )  ;  delete Trash File ( ""a"" )  ;  write Trash File ( ""a"", ""content in  Child 3  ( commited on second-branch )  - merge conflict resolution"" )  ;  git . add (  )  . add Filepattern ( ""a"" )  . call (  )  ;   Rev Commit commit C3 S = git . commit (  )  . set Message ( "" Child 3 on second bug - resolve merge conflict"" )  . call (  )  ;  //  Merge branch-to-merge into master git . checkout (  )  . set Name ( ""master"" )  . call (  )  ;  merge Result = git . merge (  )  . include ( commit A2 )  . set Strategy ( strategy )  . call (  )  ;  assert Equals ( merge Result . get New Head (  ) , null )  ;  assert Equals ( merge Result . get Merge Status (  ) ,  Merge Status . CONFLICTING )  ;  //  Resolve the conflict manually - write a file git . rm (  )  . add Filepattern ( ""a"" )  . call (  )  ;  git . rm (  )  . add Filepattern ( ""a/content"" )  . call (  )  ;  delete Trash File ( ""a/content"" )  ;  delete Trash File ( ""a"" )  ;  write Trash File ( ""a"", ""content in  Child 4  ( commited on master )  - merge conflict resolution"" )  ;  git . add (  )  . add Filepattern ( ""a"" )  . call (  )  ;  // commit C4 M git . commit (  )  . set Message ( "" Child 4 on master - resolve merge conflict"" )  . call (  )  ;  //  Merge C4 M  ( second-branch )  into master  ( C3 S )  //  Conflict in virtual base should be here merge Result = git . merge (  )  . include ( commit C3 S )  . call (  )  ;  assert Equals ( merge Result . get Merge Status (  ) ,  Merge Status . CONFLICTING )  ;   String expected = ""<<<<<<< HEAD\n"" + ""content in  Child 4  ( commited on master )  - merge conflict resolution\n"" + ""=======\n"" + ""content in  Child 3  ( commited on second-branch )  - merge conflict resolution\n"" + "">>>>>>> "" + commit C3 S . name (  )  + ""\n"" ;  assert Equals ( expected, read ( ""a"" )  )  ;  //  Nothing was populated from the ancestors .  assert Equals ( "" [ a, mode:100644, stage:2, content:content in  Child 4  ( commited on master )  - merge conflict resolution ]  [ a, mode:100644, stage:3, content:content in  Child 3  ( commited on second-branch )  - merge conflict resolution ] "", index State ( CONTENT )  )  ; }"
5115,"public void on Host Resume (  Activity activity ) {  Ui Thread Util . assert On Ui Thread (  )  ;  m Current Activity = activity ;  if  ( m Use Developer Support )  {     //  Resume can be called from one of two different states:     // a )  when activity was paused     // b )  when activity has just been created     //  In case of  ( a )  the activity is attached to window and it is ok to add new views to it or     // open dialogs .   In case of  ( b )  there is often a slight delay before such a thing happens .      //  As dev support manager can add views or open dialogs immediately after it gets enabled     //  ( e . g .  in the case when JS bundle is being fetched in background )  we only want to enable     // it once we know for sure the current activity is attached .      //  We check if activity is attached to window by checking if decor view is attached     final  View decor View = m Current Activity . get Window (  )  . get Decor View (  )  ;      if  ( ! View Compat . is Attached To Window ( decor View )  )  {         decor View . add On Attach State Change Listener ( new  View .  On Attach State Change Listener (  )  {             @ Override             public void on View Attached To Window (  View v )  {                 // we can drop listener now that we know the view is attached                 decor View . remove On Attach State Change Listener ( this )  ;                  m Dev Support Manager . set Dev Support Enabled ( true )  ;              }             @ Override             public void on View Detached From Window (  View v )  {             // do nothing             }         } )  ;      } else {         // activity is attached to window, we can enable dev support immediately         m Dev Support Manager . set Dev Support Enabled ( true )  ;      } } move To Resumed Lifecycle State ( false )  ; }"
5116,"public com . anychart . charts .  Gantt palette (  String palette Settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "", wrap Quotes ( palette Settings )  )  )  ;  return this ; }"
5117,"public void measure Layout ( int tag, int ancestor Tag,  Callback error Callback,  Callback success Callback ) { m UI Implementation . measure Layout ( tag, ancestor Tag, error Callback, success Callback )  ; }"
5118,"public com . anychart . core . gauge . pointers .  Knob top Ratio (  Number ratio ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top Ratio ( %s )  ; "", ratio )  )  ;  return this ; }"
5119,public void set Full View Container (  View Group full View Container ) { this . m Full View Container = full View Container ; }
5120,"public  Optional< String> start Debug Server (  String device Udid,  String bundle ID )  throws IO Exception,  Interrupted Exception{  Immutable List< String> command =  Immutable List . of ( idb Path . to String (  ) , ""debugserver"", ""start"", bundle ID, ""--udid"", device Udid )  ;  LOG . debug ( "" Starting the debug server with the command %s"", command )  ;   Process Executor Params process Executor Params =  Process Executor Params . builder (  )  . set Command ( command )  . build (  )  ;   Set< Process Executor .  Option> options =  Enum Set . of (  Process Executor .  Option . EXPECTING_STD_OUT )  ;   Process Executor .  Result result = process Executor . launch And Execute ( process Executor Params, options, /* stdin */  Optional . empty (  ) , /* time Out Ms */  Optional . empty (  ) , /* time Out Handler */  Optional . empty (  )  )  ;  if  ( result . get Exit Code (  )  != 0 )  {     LOG . error ( "" Could not start debug server"" )  ;      return  Optional . empty (  )  ;  } if  ( !result . get Stdout (  )  . is Present (  )  )  {     LOG . error ( "" Could not get debug server command from idb"" )  ;      return  Optional . empty (  )  ;  } return result . get Stdout (  )  ; }"
5121,"public com . anychart . charts .  Linear Gauge padding (  String value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
5122,"public final void clear Async (  ) { assert Single Thread For Change Set (  )  ;  if  (  Sections Debug . ENABLED )  {      Log . d (  Sections Debug . TAG, "" ( "" + hash Code (  )  + "" )  clear"" )  ;  } synchronized  ( this )  {     m Has Async Operations = true ;      final int count = m Async Component Tree Holders . size (  )  ;      // TODO ( t28712163 ) :  Cancel pending layouts for async inserts     m Async Component Tree Holders . clear (  )  ;      final  Async Remove Range Operation operation = new  Async Remove Range Operation ( 0, count )  ;      add To Current Batch ( operation )  ;  }}"
5123,"public com . anychart . core . utils .  Chart A11y title Format (  String format Settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . title Format ( %s )  ; "", wrap Quotes ( format Settings )  )  )  ;  return this ; }"
5124,"public void set Position ( float x, float y ) { translate ( x - this . x, y - this . y )  ; }"
5125,"public com . anychart . charts .  Polar palette ( com . anychart . palettes .  Range Colors settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
5126,"public com . anychart . core . cartesian . series .  Base With Markers bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
5127,public static  Array Deque<E> new Array Deque (  ) { return new  Array Deque<E> (  )  ; }
5128,public static long [  ]  to Array (  Collection<? extends  Number> collection ) { if  ( collection instanceof  Long Array As List )  {     return  (  (  Long Array As List )  collection )  . to Long Array (  )  ;  }  Object [  ]  boxed Array = collection . to Array (  )  ;  int len = boxed Array . length ;  long [  ]  array = new long [ len ]  ;  for  ( int i = 0 ;  i < len ;  i++ )  {     // check Not Null for GWT  ( do not optimize )      array [ i ]  =  (  (  Number )  check Not Null ( boxed Array [ i ]  )  )  . long Value (  )  ;  } return array ; }
5129,"public com . anychart . charts .  Pareto margin (  String value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
5130,public void set Custom Error Message ( @ Nullable  Char Sequence message ) {  Assertions . check State ( error Message View != null )  ;  custom Error Message = message ;  update Error Message (  )  ; }
5131,public static  Capture Result new Capture Result (  ) { return  Reflection Helpers . call Constructor (  Capture Result . class )  ; }
5132,Builder set Agent ( @ Nullable  String agent Value ) { agent = agent Value ;  return this ; }
5133,protected void on Detach (  ) { do Detach (  )  ; }
5134,"public static void vali File Is Directory (  File file )  throws  Illegal Argument Exception{ if  ( !file . is Directory (  )  )  {     throw new  Illegal Argument Exception ( "" File:'"" + file . get Name (  )  + ""'does not exist or not directory!"" )  ;  }}"
5135,private void quit (  ) { synchronized  ( LOCK )  {     this . thread . quit (  )  ;      this . thread = null ;      this . handler = null ;  }}
5136,"public void parse Seek Table (  Parsable Byte Array data ) { data . skip Bytes ( METADATA_LENGTH_OFFSET )  ;  int length = data . read Unsigned Int24 (  )  ;  int number Of Seek Points = length / SEEK_POINT_SIZE ;  seek Point Granules = new long [ number Of Seek Points ]  ;  seek Point Offsets = new long [ number Of Seek Points ]  ;  for  ( int i = 0 ;  i < number Of Seek Points ;  i++ )  {     seek Point Granules [ i ]  = data . read Long (  )  ;      seek Point Offsets [ i ]  = data . read Long (  )  ;      //  Skip "" Number of samples in the target frame . ""     data . skip Bytes ( 2 )  ;  }}"
5137,"public  String get Selection (  ) { if  (  Runtime Environment . get Api Level (  )  >= R )  {     throw new  Unsupported Operation Exception ( ""unsupported on  Android R"" )  ;  } return get Field Reflectively ( ""m Selection"",  String . class )  ; }"
5138,"public static  Array Table<R, C, V> create (  Iterable<? extends R> row Keys,  Iterable<? extends C> column Keys ) { return new  Array Table<> ( row Keys, column Keys )  ; }"
5139,"public com . anychart . charts .  Pie stroke ( com . anychart . graphics . vector .  Colored Fill value,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
5140,"public void title (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . title (  )  ; "" )  ; }"
5141,public final  Cst Method Ref get Ref (  ) { return method ; }
5142,"public com . anychart . charts .  Sankey padding (  String value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, value4 )  )  ;  return this ; }"
5143,"private static  Lottie Task< Lottie Composition> cache ( @ Nullable final  String cache Key,  Callable< Lottie Result< Lottie Composition>> callable ) { final  Lottie Composition cached Composition = cache Key == null ? null :  Lottie Composition Cache . get Instance (  )  . get ( cache Key )  ;  if  ( cached Composition != null )  {     return new  Lottie Task<> ( new  Callable< Lottie Result< Lottie Composition>> (  )  {         @ Override         public  Lottie Result< Lottie Composition> call (  )  {             return new  Lottie Result<> ( cached Composition )  ;          }     } )  ;  } if  ( cache Key != null && task Cache . contains Key ( cache Key )  )  {     return task Cache . get ( cache Key )  ;  }  Lottie Task< Lottie Composition> task = new  Lottie Task<> ( callable )  ;  if  ( cache Key != null )  {     task . add Listener ( new  Lottie Listener< Lottie Composition> (  )  {         @ Override         public void on Result (  Lottie Composition result )  {             task Cache . remove ( cache Key )  ;          }     } )  ;      task . add Failure Listener ( new  Lottie Listener< Throwable> (  )  {         @ Override         public void on Result (  Throwable result )  {             task Cache . remove ( cache Key )  ;          }     } )  ;      task Cache . put ( cache Key, task )  ;  } return task ; }"
5144,public  Array Builder add Null (  ) { try {     get Generator (  )  . write Null (  )  ;  } catch  ( IO Exception e )  {     throw to Assertion Error ( e )  ;  } return this ; }
5145,"public static boolean find Emoji (  String text, int start, int end, int [  ]  result ) { int skip = 0 ;  int icon = 0 ;  char c = text . char At ( start )  ;  if  ( is Soft Bank Emoji ( c )  )  {     icon = get Softbank Emoji Resource ( c )  ;      skip = icon == 0 ? 0 : 1 ;  } if  ( icon == 0 )  {     int unicode =  Character . code Point At ( text, start )  ;      skip =  Character . char Count ( unicode )  ;      if  ( unicode > 0xff )  {         icon = get Emoji Resource ( unicode )  ;      }     if  ( icon == 0 && start + skip < end )  {         int follow Unicode =  Character . code Point At ( text, start + skip )  ;          if  ( follow Unicode == 0x20e3 )  {             int follow Skip =  Character . char Count ( follow Unicode )  ;              switch ( unicode )  {                 case 0x0031:                     icon = R . drawable . emoji_0031 ;                      break ;                  case 0x0032:                     icon = R . drawable . emoji_0032 ;                      break ;                  case 0x0033:                     icon = R . drawable . emoji_0033 ;                      break ;                  case 0x0034:                     icon = R . drawable . emoji_0034 ;                      break ;                  case 0x0035:                     icon = R . drawable . emoji_0035 ;                      break ;                  case 0x0036:                     icon = R . drawable . emoji_0036 ;                      break ;                  case 0x0037:                     icon = R . drawable . emoji_0037 ;                      break ;                  case 0x0038:                     icon = R . drawable . emoji_0038 ;                      break ;                  case 0x0039:                     icon = R . drawable . emoji_0039 ;                      break ;                  case 0x0030:                     icon = R . drawable . emoji_0030 ;                      break ;                  case 0x0023:                     icon = R . drawable . emoji_0023 ;                      break ;                  default:                     follow Skip = 0 ;                      break ;              }             skip += follow Skip ;          } else {             int follow Skip =  Character . char Count ( follow Unicode )  ;              switch ( unicode )  {                 case 0x1f1ef:                     icon =  ( follow Unicode == 0x1f1f5 )  ? R . drawable . emoji_1f1ef_1f1f5 : 0 ;                      break ;                  case 0x1f1fa:                     icon =  ( follow Unicode == 0x1f1f8 )  ? R . drawable . emoji_1f1fa_1f1f8 : 0 ;                      break ;                  case 0x1f1eb:                     icon =  ( follow Unicode == 0x1f1f7 )  ? R . drawable . emoji_1f1eb_1f1f7 : 0 ;                      break ;                  case 0x1f1e9:                     icon =  ( follow Unicode == 0x1f1ea )  ? R . drawable . emoji_1f1e9_1f1ea : 0 ;                      break ;                  case 0x1f1ee:                     icon =  ( follow Unicode == 0x1f1f9 )  ? R . drawable . emoji_1f1ee_1f1f9 : 0 ;                      break ;                  case 0x1f1ec:                     icon =  ( follow Unicode == 0x1f1e7 )  ? R . drawable . emoji_1f1ec_1f1e7 : 0 ;                      break ;                  case 0x1f1ea:                     icon =  ( follow Unicode == 0x1f1f8 )  ? R . drawable . emoji_1f1ea_1f1f8 : 0 ;                      break ;                  case 0x1f1f7:                     icon =  ( follow Unicode == 0x1f1fa )  ? R . drawable . emoji_1f1f7_1f1fa : 0 ;                      break ;                  case 0x1f1e8:                     icon =  ( follow Unicode == 0x1f1f3 )  ? R . drawable . emoji_1f1e8_1f1f3 : 0 ;                      break ;                  case 0x1f1f0:                     icon =  ( follow Unicode == 0x1f1f7 )  ? R . drawable . emoji_1f1f0_1f1f7 : 0 ;                      break ;                  default:                     follow Skip = 0 ;                      break ;              }             skip += follow Skip ;          }     } } boolean is QQ Face = false ;  if  ( icon == 0 )  {     if  ( c == ' [ ' )  {         int emoji Close Index = text . index Of ( ' ] ', start )  ;          if  ( emoji Close Index > 0 && emoji Close Index - start <= 4 )  {              Char Sequence char Sequence = text . sub Sequence ( start, emoji Close Index + 1 )  ;               Integer value = s QQ Face Map . get ( char Sequence . to String (  )  )  ;              if  ( value != null )  {                 icon = value ;                  skip = emoji Close Index + 1 - start ;                  is QQ Face = true ;              }         }     } } result [ 0 ]  = icon ;  result [ 1 ]  = skip ;  result [ 2 ]  = is QQ Face ? 1 : 0 ;  return icon > 0 ; }"
5146,public  Object Id Subclass Map< Object Id> get Base Object Ids (  ) { if  ( base Object Ids != null )      return base Object Ids ;  return new  Object Id Subclass Map<> (  )  ; }
5147,public void set Id3v2 Padding Copy Tag ( boolean id3v2 Padding Copy Tag ) { this . id3v2 Padding Copy Tag = id3v2 Padding Copy Tag ; }
5148,"public com . anychart . core . stock . scrollerseries .  Candlestick falling Stroke (  String value,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( value ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
5149,"public void read Bytes (  Byte Buffer buffer, int length ) { buffer . put ( data, position, length )  ;  position += length ; }"
5150,"public  Target Node Maybe Incompatible get Node (  Cell cell,  Build Target build Target,  Dependency Stack dependency Stack )  throws  Build File Parse Exception,  Build Target Exception{  Preconditions . check State ( !shutting Down . get (  )  )  ;  try {     return get Node Job ( cell, build Target, dependency Stack )  . get (  )  ;  } catch  (  Exception e )  {     throw handle Future Get Exception ( e )  ;  }}"
5151,"public void test Device Filter Multiple Devices (  ) { I Device [  ]  devices = new I Device [  ]  { create Emulator ( ""1"", I Device .  Device State . ONLINE ) , create Emulator ( ""2"", I Device .  Device State . ONLINE ) , create Real Device ( ""4"", I Device .  Device State . ONLINE ) , create Real Device ( ""5"", I Device .  Device State . ONLINE )  } ;   List<I Device> filtered Devices No Multi Install = basic Adb Helper . filter Devices ( devices )  ;  assert Not Null ( filtered Devices No Multi Install )  ;  assert Equals ( devices . length, filtered Devices No Multi Install . size (  )  )  ;   Adb Helper my Adb Helper = create Adb Helper ( create Adb Options ( true ) , new  Target Device Options (  )  )  ;   List<I Device> filtered Devices = my Adb Helper . filter Devices ( devices )  ;  assert Not Null ( filtered Devices )  ;  assert Equals ( devices . length, filtered Devices . size (  )  )  ; }"
5152,public  List< Value> get Transform Results (  ) { return transform Results ; }
5153,"public void calculate Text Position ( int canvas W, int canvas H, boolean should Centre Text,  Rect showcase ) { //left, top, right, bottom int [  ]  areas = new int [ 4 ]  ;  areas [  Showcase View . LEFT_OF_SHOWCASE ]  = showcase . left * canvas H ;  areas [  Showcase View . ABOVE_SHOWCASE ]  = showcase . top * canvas W ;  areas [  Showcase View . RIGHT_OF_SHOWCASE ]  =  ( canvas W - showcase . right )  * canvas H ;  areas [  Showcase View . BELOW_SHOWCASE ]  =  ( canvas H - showcase . bottom )  * canvas W ;  int largest = 0 ;  for  ( int i = 1 ;  i < areas . length ;  i++ )  {     if  ( areas [ i ]  > areas [ largest ]  )          largest = i ;  } if  ( forced Text Position !=  Showcase View . UNDEFINED )  {     largest = forced Text Position ;  } //  Position text in largest area switch ( largest )  {     case  Showcase View . LEFT_OF_SHOWCASE:         m Best Text Position [ INDEX_TEXT_START_X ]  = padding ;          m Best Text Position [ INDEX_TEXT_START_Y ]  = padding ;          m Best Text Position [ INDEX_TEXT_WIDTH ]  = showcase . left - 2 * padding ;          break ;      case  Showcase View . ABOVE_SHOWCASE:         m Best Text Position [ INDEX_TEXT_START_X ]  = padding ;          m Best Text Position [ INDEX_TEXT_START_Y ]  = padding + action Bar Offset ;          m Best Text Position [ INDEX_TEXT_WIDTH ]  = canvas W - 2 * padding ;          break ;      case  Showcase View . RIGHT_OF_SHOWCASE:         m Best Text Position [ INDEX_TEXT_START_X ]  = showcase . right + padding ;          m Best Text Position [ INDEX_TEXT_START_Y ]  = padding ;          m Best Text Position [ INDEX_TEXT_WIDTH ]  =  ( canvas W - showcase . right )  - 2 * padding ;          break ;      case  Showcase View . BELOW_SHOWCASE:         m Best Text Position [ INDEX_TEXT_START_X ]  = padding ;          m Best Text Position [ INDEX_TEXT_START_Y ]  = showcase . bottom + padding ;          m Best Text Position [ INDEX_TEXT_WIDTH ]  = canvas W - 2 * padding ;          break ;  } if  ( should Centre Text )  {     //  Center text vertically or horizontally     switch ( largest )  {         case  Showcase View . LEFT_OF_SHOWCASE:         case  Showcase View . RIGHT_OF_SHOWCASE:             m Best Text Position [ INDEX_TEXT_START_Y ]  += canvas H / 4 ;              break ;          case  Showcase View . ABOVE_SHOWCASE:         case  Showcase View . BELOW_SHOWCASE:             m Best Text Position [ INDEX_TEXT_WIDTH ]  /= 2 ;              m Best Text Position [ INDEX_TEXT_START_X ]  += canvas W / 4 ;              break ;      } } else {     //  As text is not centered add actionbar padding if the text is left or right     switch ( largest )  {         case  Showcase View . LEFT_OF_SHOWCASE:         case  Showcase View . RIGHT_OF_SHOWCASE:             m Best Text Position [ INDEX_TEXT_START_Y ]  += action Bar Offset ;              break ;      } } has Recalculated = true ; }"
5154,"public static boolean equals (  Type a,  Type b ) { if  ( a == b )  {     // also handles  ( a == null && b == null )      return true ;  } else if  ( a instanceof  Class )  {     //  Class already specifies equals (  )  .      return a . equals ( b )  ;  } else if  ( a instanceof  Parameterized Type )  {     if  ( ! ( b instanceof  Parameterized Type )  )  {         return false ;      }     // TODO: save a  . clone (  )  call      Parameterized Type pa =  (  Parameterized Type )  a ;       Parameterized Type pb =  (  Parameterized Type )  b ;      return equal ( pa . get Owner Type (  ) , pb . get Owner Type (  )  )  && pa . get Raw Type (  )  . equals ( pb . get Raw Type (  )  )  &&  Arrays . equals ( pa . get Actual Type Arguments (  ) , pb . get Actual Type Arguments (  )  )  ;  } else if  ( a instanceof  Generic Array Type )  {     if  ( ! ( b instanceof  Generic Array Type )  )  {         return false ;      }      Generic Array Type ga =  (  Generic Array Type )  a ;       Generic Array Type gb =  (  Generic Array Type )  b ;      return equals ( ga . get Generic Component Type (  ) , gb . get Generic Component Type (  )  )  ;  } else if  ( a instanceof  Wildcard Type )  {     if  ( ! ( b instanceof  Wildcard Type )  )  {         return false ;      }      Wildcard Type wa =  (  Wildcard Type )  a ;       Wildcard Type wb =  (  Wildcard Type )  b ;      return  Arrays . equals ( wa . get Upper Bounds (  ) , wb . get Upper Bounds (  )  )  &&  Arrays . equals ( wa . get Lower Bounds (  ) , wb . get Lower Bounds (  )  )  ;  } else if  ( a instanceof  Type Variable )  {     if  ( ! ( b instanceof  Type Variable )  )  {         return false ;      }      Type Variable<?> va =  (  Type Variable<?> )  a ;       Type Variable<?> vb =  (  Type Variable<?> )  b ;      return va . get Generic Declaration (  )  == vb . get Generic Declaration (  )  && va . get Name (  )  . equals ( vb . get Name (  )  )  ;  } else {     //  This isn't a type we support .   Could be a generic array type, wildcard type, etc .      return false ;  }}"
5155,public  Drawee Controller get Controller (  ) { return m Controller ; }
5156,"public com . anychart . core .  State Settings normal (  ) { return new com . anychart . core .  State Settings ( js Base + "" . normal (  ) "" )  ; }"
5157,"public void show (  Git Reference selected Ref ) { ref Single . subscribe (  refs -> {     int checked = -1 ;      if  ( selected Ref != null )  {          String ref = selected Ref . ref (  )  ;          for  ( int i = 0 ;  i < refs . size (  )  ;  i++ )  {              String candidate = refs . get ( i )  . ref (  )  ;              if  ( ref . equals ( candidate )  || ref . equals (  Ref Utils . get Name ( candidate )  )  )  {                 checked = i ;                  break ;              }         }     }      Ref Dialog Fragment . show ( activity, request Code, activity . get String ( R . string . select_ref ) , null, new  Array List<> ( refs ) , checked )  ;  },  e -> {      Log . d ( TAG, "" Exception loading references"", e )  ;       Toast Utils . show ( activity, R . string . error_refs_load )  ;  } )  ; }"
5158,"public com . anychart . charts .  Tag Cloud padding (  Number value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
5159,public boolean is Partial (  ) { return partial ; }
5160,"protected  Chunk get First ( final GUID look For, final  Class<? extends  Chunk> instance Of ) {  Chunk result = null ;  final  List< Chunk> list = this . chunk Table . get ( look For )  ;  if  ( list != null && !list . is Empty (  )  )  {     final  Chunk chunk = list . get ( 0 )  ;      if  ( instance Of . is Assignable From ( chunk . get Class (  )  )  )  {         result = chunk ;      } } return result ; }"
5161,"public com . anychart . standalones .  Project Timeline column Stroke (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . column Stroke ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
5162,public long get Number Of Frames Estimate (  ) { return number Of Frames Estimate ; }
5163,"public static  Vector3 scale And Create ( @ Non Null  Vector3 u, double v ) { return new  Vector3 ( u . x * v, u . y * v, u . z * v )  ; }"
5164,public static int [  ]  make Bit Set ( int max ) { int size =  ( max + 0x1f )  >> 5 ;  return new int [ size ]  ; }
5165,"public com . anychart . core . stock . indicators . TRIX trix ( com . anychart . data .  Table Mapping mapping,  Number period,  Number signal Period, com . anychart . enums .  Moving Average Type ma Type, com . anychart . enums .  Moving Average Type signal Ma Type,  String trix Series Type,  String signal Series Type ) { return new com . anychart . core . stock . indicators . TRIX (  String . format (  Locale . US, js Base + "" . trix ( %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, period, signal Period,  ( ma Type != null )  ? ma Type . get Js Base (  )  : null,  ( signal Ma Type != null )  ? signal Ma Type . get Js Base (  )  : null, wrap Quotes ( trix Series Type ) , wrap Quotes ( signal Series Type )  )  )  ; }"
5166,"public static boolean check Permission (  Context context,  String required Permission ) {  Set< String> permissions = new  Hash Set<> (  )  ;  permissions . add ( required Permission )  ;  return get Denied Permissions ( context, permissions )  . is Empty (  )  ; }"
5167,public  On Action Click Listener get On Action Click Listener (  ) { return m On Action Click Listener ; }
5168,"public com . anychart . core . annotations .  Fibonacci Arc right (  String right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", wrap Quotes ( right )  )  )  ;  return this ; }"
5169,public  Path get Lfs Root (  ) { return root ; }
5170,"private static void select All In Place ( int [  ]  all Required, int required From, int required To, double [  ]  array, int from, int to ) { //  Choose the first selection to do .  .  .  int required Chosen = choose Next Selection ( all Required, required From, required To, from, to )  ;  int required = all Required [ required Chosen ]  ;  //  .  .  . do the first selection .  .  .  select In Place ( required, array, from, to )  ;  //  .  .  . then recursively perform the selections in the range below .  .  .  int required Below = required Chosen - 1 ;  while  ( required Below >= required From && all Required [ required Below ]  == required )  {     // skip duplicates of required in the range below     required Below-- ;  } if  ( required Below >= required From )  {     select All In Place ( all Required, required From, required Below, array, from, required - 1 )  ;  } //  .  .  . and then recursively perform the selections in the range above .  int required Above = required Chosen + 1 ;  while  ( required Above <= required To && all Required [ required Above ]  == required )  {     // skip duplicates of required in the range above     required Above++ ;  } if  ( required Above <= required To )  {     select All In Place ( all Required, required Above, required To, array, required + 1, to )  ;  }}"
5171,"public void add Event (  Event event ) {  List< Event> events At Time = events By Time Stamp . get ( event . get Time Stamp (  )  )  ;  if  ( events At Time == null )  {     events At Time = new  Array List<> ( 1 )  ;      events By Time Stamp . put ( event . get Time Stamp (  ) , events At Time )  ;  } events At Time . add ( event )  ; }"
5172,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
5173,"public com . anychart . charts .  Scatter top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
5174,"public final long get Segment Time Us ( long sequence Number ) { long unscaled Segment Time ;  if  ( segment Timeline != null )  {     unscaled Segment Time = segment Timeline . get (  ( int )   ( sequence Number - start Number )  )  . start Time - presentation Time Offset ;  } else {     unscaled Segment Time =  ( sequence Number - start Number )  * duration ;  } return  Util . scale Large Timestamp ( unscaled Segment Time, C . MICROS_PER_SECOND, timescale )  ; }"
5175,"public static void pop Back Stack Allowing State Loss ( final  Fragment Manager fragment Manager, final  String name, final int flags ) {  Fragmentation Magician . hook State Saved ( fragment Manager, new  Runnable (  )  {     @ Override     public void run (  )  {         fragment Manager . pop Back Stack ( name, flags )  ;      } } )  ; }"
5176,protected boolean is Checked ( int position ) { return position < checked . size (  )  && checked . get ( position )  ; }
5177,public  Grid Point2 set (  Grid Point2 point ) { this . x = point . x ;  this . y = point . y ;  return this ; }
5178,"public boolean match Destination (  String r ) { return match ( r, get Destination (  )  )  ; }"
5179,"public  Builder memory Cache Size Percentage ( int available Memory Percent ) { if  ( available Memory Percent <= 0 || available Memory Percent >= 100 )  {     throw new  Illegal Argument Exception ( ""available Memory Percent must be in range  ( 0 < % < 100 ) "" )  ;  } if  ( memory Cache != null )  {     L . w ( WARNING_OVERLAP_MEMORY_CACHE )  ;  } long available Memory =  Runtime . get Runtime (  )  . max Memory (  )  ;  memory Cache Size =  ( int )   ( available Memory *  ( available Memory Percent / 100f )  )  ;  return this ; }"
5180,"public com . anychart . core . stock . indicators . B Bands middle Series ( com . anychart . enums .  Stock Series Type type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . middle Series ( %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
5181,"public com . anychart . charts .  Cartesian x Minor Grid (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Minor Grid ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5182,"public void scroll Animators ( @ Non Null  List< Animator> animators, int position, boolean is Forward ) {//  Free to implement}"
5183,protected void enqueue (  Runnable runnable ) { synchronized  ( LOCK )  {     check Running (  )  ;      this . handler . post ( runnable )  ;  }}
5184,"private void schedule Accessibility Event Sender (  View host ) { if  ( m Handler . has Messages ( SEND_EVENT, host )  )  {     m Handler . remove Messages ( SEND_EVENT, host )  ;  }  Message msg = m Handler . obtain Message ( SEND_EVENT, host )  ;  m Handler . send Message Delayed ( msg, TIMEOUT_SEND_ACCESSIBILITY_EVENT )  ; }"
5185,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
5186,public SHA1 set Detect Collision ( boolean detect ) { detect Collision = detect ;  return this ; }
5187,"public static  Function< Item,  Boolean> has Face (  String image Data Field ) { return new  Image Face Detector ( image Data Field )  ; }"
5188,"public static long divide ( long dividend, long divisor ) { if  ( divisor < 0 )  {     // i . e . , divisor >= 2^63:     if  ( compare ( dividend, divisor )  < 0 )  {         // dividend < divisor         return 0 ;      } else {         // dividend >= divisor         return 1 ;      } } //  Optimization - use signed division if dividend < 2^63 if  ( dividend >= 0 )  {     return dividend / divisor ;  } /*  *  Otherwise, approximate the quotient, check, and correct if necessary .   Our approximation is  * guaranteed to be either exact or one less than the correct value .   This follows from fact that  * floor ( floor ( x ) /i )  == floor ( x/i )  for any real x and integer i != 0 .   The proof is not quite  * trivial .   */ long quotient =  (  ( dividend >>> 1 )  / divisor )  << 1 ;  long rem = dividend - quotient * divisor ;  return quotient +  ( compare ( rem, divisor )  >= 0 ? 1 : 0 )  ; }"
5189,"static  Archiver Provider from (  Tool Provider archiver,  Platform platform,  Optional< Legacy Archiver Type> legacy Type ) {  Archiver Provider .  Type archiver Type ;  switch ( platform )  {     case MACOS:     case FREEBSD:         archiver Type =  Type . BSD ;          break ;      case LINUX:         archiver Type =  Type . GNU ;          break ;      case WINDOWS:         if  ( legacy Type . is Present (  )  && legacy Type . get (  )  . equals (  Legacy Archiver Type . LLVM_LIB )  )  {             archiver Type =  Type . WINDOWS_CLANG ;          } else {             archiver Type =  Type . WINDOWS ;          }         break ;      case UNKNOWN:     default:         return new  Archiver Provider (  )  {             @ Override             public  Archiver resolve (  Build Rule Resolver resolver,  Target Configuration target Configuration )  {                 throw new  Runtime Exception ( "" Invalid platform for archiver .   Must be one of {MACOS, LINUX, WINDOWS}"" )  ;              }             @ Override             public  Iterable< Build Target> get Parse Time Deps (  Target Configuration target Configuration )  {                 return  Immutable List . of (  )  ;              }         } ;  } return  Archiver Provider . from ( archiver, archiver Type )  ; }"
5190,"public com . anychart . core . stock . scrollerseries .  Candlestick bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
5191,"public void test Wrapped Whitetspace (  ) {  String html = "" content "" ;  assert Equals ( ""content"", format ( html )  )  ; }"
5192,public long to Renderer Time ( long period Time Us ) { return period Time Us + get Renderer Offset (  )  ; }
5193,public static  String get Application Name (  Context context ) {  Application Info application Info = context . get Application Info (  )  ;  int string Id = application Info . label Res ;  return string Id == 0 ? application Info . non Localized Label . to String (  )  : context . get String ( string Id )  ; }
5194,"public static final void validate (  Spec Model spec Model,  Enum Set< Run Mode> run Mode ) {  List< Spec Model Validation Error> validation Errors = spec Model . validate ( run Mode )  ;  if  ( validation Errors == null || validation Errors . is Empty (  )  )  {     return ;  } final  List< Printable Exception> printable Exceptions = new  Array List<> (  )  ;  for  (  Spec Model Validation Error validation Error : validation Errors )  {     printable Exceptions . add ( new  Components Processing Exception (  (  Element )  validation Error . element,  (  Annotation Mirror )  validation Error . annotation, validation Error . message )  )  ;  } throw new  Multi Printable Exception ( printable Exceptions )  ; }"
5195,"public com . anychart . core . ui . scroller .  Thumbs fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
5196,"public com . anychart . standalones .  Color Range stroke ( com . anychart . graphics . vector .  Colored Fill value,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5197,"public boolean max Value (  Integer value, int max ) { return max Value ( value . int Value (  ) , max )  ; }"
5198,public  Builder set Rule Name ( java . lang .  String value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } rule Name_ = value ;  on Changed (  )  ;  return this ; }
5199,public boolean is Firebase Remote Config Available (  ) { if  ( firebase Remote Config == null && firebase Remote Config Provider != null )  {      Remote Config Component rc Component = firebase Remote Config Provider . get (  )  ;      if  ( rc Component != null )  {         firebase Remote Config = rc Component . get ( FIREPERF_FRC_NAMESPACE_NAME )  ;      } } return firebase Remote Config != null ; }
5200,"public float get Visual Value (  ) { if  ( animate Time > 0 )      return animate Interpolation . apply ( animate From Value, value, 1 - animate Time / animate Duration )  ;  return value ; }"
5201,"public com . anychart . core . cartesian . series .  Area3d hover (  Number index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hover ( %s )  ; "", index )  )  ;  return this ; }"
5202,public  Context get Context (  ) { return m Context ; }
5203,"public com . anychart . charts .  Cartesian select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5204,public void set Delta Base Cache Limit ( int new Limit ) { delta Base Cache Limit = new Limit ; }
5205,public  Node List get Child Nodes (  ) { return new  Empty Node List (  )  ; }
5206,"public static void show ( final android . app .  Fragment fragment,  App Group Creation Content app Group Creation Content ) { show ( new  Fragment Wrapper ( fragment ) , app Group Creation Content )  ; }"
5207,public void set Data (  Byte Buffer data ) { this . data = data ; }
5208,"public com . anychart . core . utils .  Legend Item Settings text Direction ( com . anychart . graphics . vector . text .  Direction direction ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Direction ( %s )  ; "",  ( direction != null )  ? direction . get Js Base (  )  : null )  )  ;  return this ; }"
5209,public void set Text Over Image (  Char Sequence text Over Image ) { m Text Over Image = text Over Image ; }
5210,"public com . anychart . charts .  Waterfall label (  String index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , settings )  )  ;  return this ; }"
5211,"private static  Method Spec get Attach Base Context Method (  ) { return  Method Spec . method Builder ( ""attach Base Context"" )  . add Annotation (  Override . class )  . add Modifiers (  Modifier . PROTECTED,  Modifier . FINAL )  . add Parameter (  Class Names . CONTEXT, ""base"" )  . add Statement ( ""super . attach Base Context ( base ) "" )  . add Statement ( ""$N = new $T ( this ) "", COMPONENT_MANAGER, COMPONENT_MANAGER . type )  . build (  )  ; }"
5212,"public void z Distribution (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Distribution (  )  ; "" )  ; }"
5213,public int get Scroll Position (  ) { return m Scroll Position ; }
5214,"public void levels (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . levels (  )  ; "" )  ; }"
5215,"public void text (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text ( %s )  ; "", wrap Quotes ( value )  )  )  ; }"
5216,"public void set Min Progress ( final float min Progress ) { if  ( composition == null )  {     lazy Composition Tasks . add ( new  Lazy Composition Task (  )  {         @ Override         public void run (  Lottie Composition composition )  {             set Min Progress ( min Progress )  ;          }     } )  ;      return ;  } set Min Frame (  ( int )   Misc Utils . lerp ( composition . get Start Frame (  ) , composition . get End Frame (  ) , min Progress )  )  ; }"
5217,public  Metadata Container find Extended Content Description (  ) {  Metadata Container result = get Extended Content Description (  )  ;  if  ( result == null && get Extended Header (  )  != null )  {     result = get Extended Header (  )  . get Extended Content Description (  )  ;  } return result ; }
5218,protected void toggle Player Control Visibility (  ) { if  (  Assertions . check Not Null ( player Control )  . is Visible (  )  )  {     player Control . hide (  )  ;  } else {     player Control . show (  )  ;  }}
5219,"public  Char Sequence get Gmt Display Name (  Context context,  String id, long millis, boolean gray Gmt ) {  Time Zone timezone =  Time Zone . get Time Zone ( id )  ;  if  ( timezone == null )  {     return null ;  } final  Locale default Locale =  Locale . get Default (  )  ;  if  ( !default Locale . equals ( m Default Locale )  )  {     //  If the I Ds and labels haven't been set yet, or if the locale has been changed     // recently, we'll need to re-cache them .      m Default Locale = default Locale ;      cache Overrides ( context )  ;  } return build Gmt Display Name ( timezone, millis, gray Gmt )  ; }"
5220,"public com . anychart . core . ui .  Crosshair parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
5221,"public com . anychart . core . ui .  Separator stroke ( com . anychart . graphics . vector .  Stroke stroke Or Fill,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( stroke Or Fill != null )  ? stroke Or Fill . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
5222,"protected  Generic Converter get Default Converter (  Type Descriptor source Type,  Type Descriptor target Type ) { return  ( source Type . is Assignable To ( target Type )  ? NO_OP_CONVERTER : null )  ; }"
5223,"public void set Y Axis Max ( double max, int scale ) { if  ( !is Max Y Set ( scale )  )  {     initial Range . get ( scale )  [ 3 ]  = max ;  } m Max Y [ scale ]  = max ; }"
5224,"public  Task< Short Dynamic Link> build Short Dynamic Link ( @ Suffix int suffix ) { verify Api Key (  )  ;  builder Parameters . put Int (  Builder . KEY_SUFFIX, suffix )  ;  return firebase Dynamic Links Impl . create Short Dynamic Link ( builder Parameters )  ; }"
5225,public  Legend Horizontal Alignment get Horizontal Alignment (  ) { return m Horizontal Alignment ; }
5226,"public  Android Packageable Collector add Native Libs Directory For System Loader (  Build Target owner,  Source Path native Lib Dir ) { if  ( native Libs To Exclude . contains ( native Lib Dir )  )  {     return this ;  } APK Module module = apk Module Graph . find Module For Target ( owner )  ;  if  ( module . is Root Module (  )  )  {     collection Builder . add Native Libs Directories For System Loader ( native Lib Dir )  ;  } else {     throw new  Human Readable Exception ( ""%s which is marked as use_system_library_loader cannot be included in non-root-module %s"", owner, module . get Name (  )  )  ;  } return this ; }"
5227,"public static void to Take Picture ( int requestcode,  Activity activity ) {  Intent intent = new  Intent (  Intent . ACTION_PICK, null )  ;  intent . set Data And Type (  Media Store .  Images .  Media . EXTERNAL_CONTENT_URI, ""image/*"" )  ;  activity . start Activity For Result ( intent, requestcode )  ; }"
5228,"public void get Type (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Type (  )  ; "" )  ; }"
5229,public T set Custom Image Decoder ( @ Nullable  Image Decoder custom Image Decoder ) { m Custom Image Decoder = custom Image Decoder ;  return get This (  )  ; }
5230,public void update In Tx ( T .  .  .  entities ) { update In Tx (  Arrays . as List ( entities )  )  ; }
5231,"public com . anychart . charts .  Waterfall margin (  Number value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
5232,public static  Builder builder (  ) { return new  Builder ( 10 )  ; }
5233,"public com . anychart . core . ui .  Stage Credits text (  String text ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text ( %s )  ; "", wrap Quotes ( text )  )  )  ;  return this ; }"
5234,"public void set Attribute (  String name, byte [  ]  data ) { declaring Class . check Modify (  )  ;  field Info . add Attribute ( new  Attribute Info ( field Info . get Const Pool (  ) , name, data )  )  ; }"
5235,"public com . anychart . charts .  Sankey bounds (  Number x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, height )  )  ;  return this ; }"
5236,public  Auto Size Config set Vertical ( boolean vertical ) { is Vertical = vertical ;  return this ; }
5237,"public boolean validate With ( @ Non Null MET Validator validator ) {  Char Sequence text = get Text (  )  ;  boolean is Valid = validator . is Valid ( text, text . length (  )  == 0 )  ;  if  ( !is Valid )  {     set Error ( validator . get Error Message (  )  )  ;  } post Invalidate (  )  ;  return is Valid ; }"
5238,"public com . anychart . core . annotations .  Fibonacci Timezones markers (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5239,public void shutdown (  ) { if  ( program != 0 )  {     GLES20 . gl Delete Program ( program )  ;  }}
5240,"public  Map<T,  Put Result> results (  ) { return results ; }"
5241,"void add Expected Key Function Exception (  Class<?> calling Class,  Exception exception,  Object expected ) { if  ( first Pairing Exception == null )  {     truncate Stack Trace ( exception, calling Class )  ;      first Pairing Exception = new  Stored Exception ( exception, ""expected Key Function . apply"", as List ( expected )  )  ;  }}"
5242,public void set Underline Page (  Underline Page Indicator Picker indicator ) { m Underline Page Indicator Picker = indicator ; }
5243,public  List< Repo Project> get Projects (  ) { return projects ; }
5244,"public com . anychart . scales .  Ordinal Color names (  String names ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . names ( %s )  ; "", wrap Quotes ( names )  )  )  ;  return this ; }"
5245,public void set Audio Stream Type ( @C .  Stream Type int stream Type ) { @C .  Audio Usage int usage =  Util . get Audio Usage For Stream Type ( stream Type )  ;  @C .  Audio Content Type int content Type =  Util . get Audio Content Type For Stream Type ( stream Type )  ;   Audio Attributes audio Attributes = new  Audio Attributes .  Builder (  )  . set Usage ( usage )  . set Content Type ( content Type )  . build (  )  ;  set Audio Attributes ( audio Attributes )  ; }
5246,"public void test Serialization (  )  throws  Exception{  Atomic Double Array x = new  Atomic Double Array ( SIZE )  ;  for  ( int i = 0 ;  i < SIZE ;  i++ )  {     x . set ( i,  ( double )  -i )  ;  }  Atomic Double Array y = serial Clone ( x )  ;  assert True ( x != y )  ;  assert Equals ( x . length (  ) , y . length (  )  )  ;  for  ( int i = 0 ;  i < SIZE ;  i++ )  {     assert Bit Equals ( x . get ( i ) , y . get ( i )  )  ;  }  Atomic Double Array a = new  Atomic Double Array ( VALUES )  ;   Atomic Double Array b = serial Clone ( a )  ;  assert False ( a . equals ( b )  )  ;  assert False ( b . equals ( a )  )  ;  assert Equals ( a . length (  ) , b . length (  )  )  ;  for  ( int i = 0 ;  i < VALUES . length ;  i++ )  {     assert Bit Equals ( a . get ( i ) , b . get ( i )  )  ;  }}"
5247,"protected void copy Test Resource (  Class<?> loader,  String resource Name,  File to )  throws IO Exception{ try  (  Input Stream in = loader . get Resource As Stream ( resource Name )  )  {      Files . copy ( in, to . to Path (  )  )  ;  }}"
5248,"void finish (  Request<T> request ) { //  Remove from the set of requests currently being processed .  synchronized  ( m Current Requests )  {     m Current Requests . remove ( request )  ;  } synchronized  ( m Finished Listeners )  {     for  (  Request Finished Listener<T> listener : m Finished Listeners )  {         listener . on Request Finished ( request )  ;      } } send Request Event ( request,  Request Event . REQUEST_FINISHED )  ; }"
5249,"public  Builder send Message (  Target target, int window Index, long position Ms ) { return apply ( new  Send Messages ( tag, target, window Index, position Ms, /* delete After Delivery= */ true )  )  ; }"
5250,"public static void shake (  View view, float cycles, long duration Millis ) { translate ( view, 0 . 0f, 10 . 0f, 0 . 0f, 0 . 0f, cycles, duration Millis, false )  ; }"
5251,"private  Map< Integer,  Mesh Model> populate Models ( final  List< Mesh Model> models ) { final  Linked Hash Map< Integer,  Mesh Model> mesh Models = new  Linked Hash Map<> (  )  ;  for  (  Mesh Model model : models )  {     mesh Models . put ( model . get Model Id (  ) , model )  ;  } return mesh Models ; }"
5252,public void set Filter ( final GPU Image Filter filter ) { this . filter = filter ;  renderer . set Filter ( this . filter )  ;  request Render (  )  ; }
5253,"public com . anychart . core . stock . scrollerseries .  Range Spline Area fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
5254,public void set Layout Manager (  Recycler View .  Layout Manager manager ) { m Recycler View . set Layout Manager ( manager )  ; }
5255,public void connect (  ) {}
5256,public boolean is Constructor (  ) { return get Name (  )  . equals ( name Init )  ; }
5257,"private static  Value Animator load Animator (  Context c,  Resources res,  Resources .  Theme theme,  Attribute Set attrs,  Value Animator anim, float path Error Scale )  throws  Resources .  Not Found Exception{  Typed Array array Animator = null ;   Typed Array array Object Animator = null ;  if  ( theme != null )  {     array Animator = theme . obtain Styled Attributes ( attrs, R . styleable .  Animator, 0, 0 )  ;  } else {     array Animator = res . obtain Attributes ( attrs, R . styleable .  Animator )  ;  } //  If anim is not null, then it is an object animator .  if  ( anim != null )  {     if  ( theme != null )  {         array Object Animator = theme . obtain Styled Attributes ( attrs, R . styleable .  Property Animator, 0, 0 )  ;      } else {         array Object Animator = res . obtain Attributes ( attrs, R . styleable .  Property Animator )  ;      } } if  ( anim == null )  {     anim = new  Value Animator (  )  ;  } parse Animator From Type Array ( anim, array Animator, array Object Animator )  ;  final int res Id = array Animator . get Resource Id ( R . styleable .  Animator_android_interpolator, 0 )  ;  if  ( res Id > 0 )  {     anim . set Interpolator (  Animation Utils . load Interpolator ( c, res Id )  )  ;  } array Animator . recycle (  )  ;  if  ( array Object Animator != null )  {     array Object Animator . recycle (  )  ;  } return anim ; }"
5258,public float get Dragging Item Alpha (  ) { return m Dragging Item Effects Info . alpha ; }
5259,public void set Scale Enabled ( boolean enabled ) { m Is Scale Enabled = enabled ; }
5260,"public com . anychart . core . cartesian . series .  Width Based bounds ( com . anychart . core . utils .  Bounds bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
5261,public static boolean is Persistent Enable (  ) { return  Host Config Helper . PERSISTENT_ENABLE ; }
5262,public void add Url Link (  String value ) {  Text Encoded String Size Terminated text =  (  Text Encoded String Size Terminated )  get Object (  Data Types . OBJ_URLLINK )  ;  text . add Value ( value )  ; }
5263,"public void set Checked ( boolean flag ) { is Checked = flag ;  image View . set Image Resource ( is Checked ? image Resource Id Active : image Resource Id Inactive )  ;  image View . set Color Filter ( is Checked ? active Image Tint : in Active Image Tint,  Porter Duff .  Mode . SRC_ATOP )  ; }"
5264,"public void save As Xml (  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Xml ( %s )  ; "", wrap Quotes ( filename )  )  )  ; }"
5265,"public com . anychart . core . gantt . elements .  Periods Element fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
5266,public PDFC Map get Unicode Map (  ) { return unicode Map ; }
5267,"public com . anychart . standalones .  Resource List stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5268,public int get Width (  ) { return m Gif Info Handle . get Width (  )  ; }
5269,"private static boolean is Abt Supported (  Firebase App firebase App,  String namespace ) { return namespace . equals ( DEFAULT_NAMESPACE )  && is Primary App ( firebase App )  ; }"
5270,public void add Layout (  Loading Layout layout ) { if  ( null != layout )  {     m Loading Layouts . add ( layout )  ;  }}
5271,"private void move Center (  Rect F rect, float x, float y,  Rect F bounds, int view Width, int view Height, float snap Radius ) { float dx = x - rect . center X (  )  ;  float dy = y - rect . center Y (  )  ;  if  ( rect . left + dx < 0 || rect . right + dx > view Width || rect . left + dx < bounds . left || rect . right + dx > bounds . right )  {     dx /= 1 . 05f ;      m Touch Offset . x -= dx / 2 ;  } if  ( rect . top + dy < 0 || rect . bottom + dy > view Height || rect . top + dy < bounds . top || rect . bottom + dy > bounds . bottom )  {     dy /= 1 . 05f ;      m Touch Offset . y -= dy / 2 ;  } rect . offset ( dx, dy )  ;  snap Edges To Bounds ( rect, bounds, snap Radius )  ; }"
5272,public void setup (  ) { repository . save All ( persons )  ; }
5273,"public void peer Sets Zero Flow Control (  )  throws  Exception{ peer . set Client ( true )  ;  //  Write the mocking script .  peer . send Frame (  )  . settings ( new  Settings (  )  . set ( INITIAL_WINDOW_SIZE, 0 )  )  ;  // ACK peer . accept Frame (  )  ;  //  Increase the connection window size .  peer . send Frame (  )  . window Update ( 0, 10 )  ;  // PING peer . accept Frame (  )  ;  peer . send Frame (  )  . ping ( true, AWAIT_PING, 0 )  ;  // HEADERS STREAM 3 peer . accept Frame (  )  ;  peer . send Frame (  )  . window Update ( 3, 5 )  ;  // DATA STREAM 3 ""abcde"" peer . accept Frame (  )  ;  peer . send Frame (  )  . window Update ( 3, 5 )  ;  // DATA STREAM 3 ""fghi"" peer . accept Frame (  )  ;  peer . play (  )  ;  //  Play it back .   Http2 Connection connection = connect ( peer )  ;  //  Ensure the SETTINGS have been received .  connection . write Ping And Await Pong (  )  ;   Http2 Stream stream = connection . new Stream ( header Entries ( ""a"", ""android"" ) , true )  ;   Buffered Sink sink =  Okio . buffer ( stream . get Sink (  )  )  ;  sink . write Utf8 ( ""abcdefghi"" )  ;  sink . flush (  )  ;  //  Verify the peer received what was expected .  // PING peer . take Frame (  )  ;   In Frame headers = peer . take Frame (  )  ;  assert That ( headers . type )  . is Equal To (  Http2 . TYPE_HEADERS )  ;   In Frame data1 = peer . take Frame (  )  ;  assert That ( data1 . type )  . is Equal To (  Http2 . TYPE_DATA )  ;  assert That ( data1 . stream Id )  . is Equal To ( 3 )  ;  assert Array Equals ( ""abcde"" . get Bytes ( UTF_8 ) , data1 . data )  ;   In Frame data2 = peer . take Frame (  )  ;  assert That ( data2 . type )  . is Equal To (  Http2 . TYPE_DATA )  ;  assert That ( data2 . stream Id )  . is Equal To ( 3 )  ;  assert Array Equals ( ""fghi"" . get Bytes ( UTF_8 ) , data2 . data )  ; }"
5274,boolean is Loading Completed (  ) { return m Loading State == null || m Loading State ==  Loading Event .  Loading State . FAILED || m Loading State ==  Loading Event .  Loading State . SUCCEEDED ; }
5275,"public com . anychart . standalones .  Data Grid row Fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
5276,public  Comparator< Pack Source> build (  ) { return new  Pack Source Comparator ( ranks )  ; }
5277,"public com . anychart . ui .  Context Menu attach ( com . anychart . core .  Chart target,  Boolean capture ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . attach ( %s, %s )  ; "",  ( target != null )  ? target . get Js Base (  )  : null, capture )  )  ;  return this ; }"
5278,"public static  Metadata Provider wrap For Rule With Worker Requirements (  Metadata Provider metadata Provider,  Supplier< Worker Requirements> requirements Supplier ) { return new  Metadata Provider (  )  {     @ Override     public  Remote Execution Metadata get (  )  {         return metadata Provider . get (  )  . to Builder (  )  . set Worker Requirements ( requirements Supplier . get (  )  )  . build (  )  ;      }     @ Override     public  Remote Execution Metadata .  Builder get Builder For Action (  String action Digest,  String rule Name )  {         return metadata Provider . get Builder For Action ( action Digest, rule Name )  . set Worker Requirements ( requirements Supplier . get (  )  )  ;      }     @ Override     public  Remote Execution Metadata get For Action (  String action Digest,  String rule Name )  {         return get Builder For Action ( action Digest, rule Name )  . build (  )  ;      } } ; }"
5279,public void keep Strong Reference (  Object obj ) { synchronized  ( lock )  {     keep Strong Reference . add ( obj )  ;  }}
5280,"public final boolean compare And Set ( int i, double expect, double update ) { return longs . compare And Set ( i, double To Raw Long Bits ( expect ) , double To Raw Long Bits ( update )  )  ; }"
5281,"public static  Optional< Buck Target> parse (  String s ) {  Matcher matcher = PATTERN . matcher ( s )  ;  if  ( matcher . matches (  )  )  {     @ Nullable  String cell = matcher . group ( ""cell"" )  ;      @ Nullable  String path = matcher . group ( ""path"" )  ;       String name = matcher . group ( ""name"" )  ;      return  Optional . of ( new  Buck Target ( cell, path, name )  )  ;  } return  Optional . empty (  )  ; }"
5282,"public  Builder set Action Type ( final  String action Type ) { this . put String ( ACTION_TYPE_KEY, action Type )  ;  return this ; }"
5283,private float get Vertical Drag Offset (  ) { return drag View . get Top (  )  / get Vertical Drag Range (  )  ; }
5284,"public com . anychart . charts .  Sunburst fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
5285,"public com . anychart . core . utils .  Quarter bottom Stroke (  String value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( value ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5286,"private static  Vector3 center Point (  Vector3 point0,  Vector3 point1,  Vector3 point2 ) { tmp V0 . set ( point1 )  . sub ( point0 )  . scl ( 0 . 5f )  ;  tmp V1 . set ( point0 )  . add ( tmp V0 )  ;  tmp V0 . set ( point2 )  . sub ( point1 )  . scl ( 0 . 5f )  ;  return tmp V1 . add ( tmp V0 )  ; }"
5287,"public  Media Period create Period ( final  Media Period Id period Id, long start Position Us ) { final  Media Period [  ]  holder = new  Media Period [ 1 ]  ;  run On Playback Thread (  (  )  -> holder [ 0 ]  = media Source . create Period ( period Id, allocator, start Position Us )  )  ;  assert That ( holder [ 0 ]  )  . is Not Null (  )  ;  return holder [ 0 ]  ; }"
5288,"public static void main (  String [  ]  args )  throws  Exception{ if  ( args . length != 1 )  {      System . err . println ( "" Usage: java  Dump <class file name>"" )  ;      return ;  }  Data Input Stream in = new  Data Input Stream ( new  File Input Stream ( args [ 0 ]  )  )  ;   Class File w = new  Class File ( in )  ;   Print Writer out = new  Print Writer (  System . out, true )  ;  out . println ( ""*** constant pool ***"" )  ;  w . get Const Pool (  )  . print ( out )  ;  out . println (  )  ;  out . println ( ""*** members ***"" )  ;   Class File Printer . print ( w, out )  ; }"
5289,boolean is Empty (  ) {  Cursor cursor = null ;  try {     cursor = start Query (  )  ;      return !cursor . move To First (  )  ;  } finally {     if  ( cursor != null )  {         cursor . close (  )  ;      } }}
5290,"public com . anychart . core . ui .  Labels Factory upper Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . upper Labels (  ) "" )  ; }"
5291,public void write (  Random Access File file )  throws IO Exception{}
5292,"public com . anychart . core . gantt . elements .  Tasks Element fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
5293,"public  Test String Overloads View Model_ on Bind (  On Model Bound Listener< Test String Overloads View Model_,  Test String Overloads View> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
5294,public boolean is Opened ( @ Non Null  Activity activity ) { return m Drawer Layout . is Drawer Open ( activity . find View By Id ( m Drawer Id )  )  ; }
5295,public void add Standard Value (  Standard Value _standard Value ) { m Standard Values . add ( _standard Value )  ;  on Data Changed (  )  ; }
5296,protected void reset (  ) { scope Annotation Classes . clear (  )  ;  is Open = true ;  bind Scope Annotation If Name Is Scope Annotation (  )  ; }
5297,public static  Handler get Apps Handler (  ) { check App Id Setup (  )  ;  return app Handler ; }
5298,"protected  Sorted Set<E> standard Head Set ( E to Element ) { return head Set ( to Element, false )  ; }"
5299,private boolean is Front Camera Available (  ) { int num Cameras =  Camera . get Number Of Cameras (  )  ;  return num Cameras > 0 && m Activity . get Package Manager (  )  . has System Feature (  Package Manager . FEATURE_CAMERA_FRONT )  ; }
5300,public boolean is Null (  String field Name ) { proxy State . get Realm$realm (  )  . check If Valid (  )  ;  long column Key = proxy State . get Row$realm (  )  . get Column Key ( field Name )  ;   Realm Field Type type = proxy State . get Row$realm (  )  . get Column Type ( column Key )  ;  switch ( type )  {     case OBJECT:         return proxy State . get Row$realm (  )  . is Null Link ( column Key )  ;      case BOOLEAN:     case INTEGER:     case FLOAT:     case DOUBLE:     case STRING:     case BINARY:     case DATE:     case DECIMAL128:     case OBJECT_ID:         return proxy State . get Row$realm (  )  . is Null ( column Key )  ;      case LIST:     case LINKING_OBJECTS:     case INTEGER_LIST:     case BOOLEAN_LIST:     case STRING_LIST:     case BINARY_LIST:     case DATE_LIST:     case FLOAT_LIST:     case DOUBLE_LIST:     case DECIMAL128_LIST:     case OBJECT_ID_LIST:     // fall through     default:         return false ;  }}
5301,"public static  Tree Traverser<T> using ( final  Function<T, ? extends  Iterable<T>> node To Children Function ) { check Not Null ( node To Children Function )  ;  return new  Tree Traverser<T> (  )  {     @ Override     public  Iterable<T> children ( T root )  {         return node To Children Function . apply ( root )  ;      } } ; }"
5302,static int get Automatic Star Rating Session Limit Internal ( final  Countly Store cs ) {  Star Rating Preferences srp = load Star Rating Preferences ( cs )  ;  return srp . session Limit ; }
5303,"public com . anychart . charts .  Linear Gauge bounds (  String x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
5304,"public com . anychart . core . cartesian . series .  Step Line step Line (  String data,  String csv Settings ) { return new com . anychart . core . cartesian . series .  Step Line (  String . format (  Locale . US, js Base + "" . step Line ( %s, %s ) "", wrap Quotes ( data ) , wrap Quotes ( csv Settings )  )  )  ; }"
5305,"public void start (  ) { if  ( ! Config Resolver . get Instance (  )  . is Performance Monitoring Enabled (  )  )  {     logger . info ( "" Trace feature is disabled . "" )  ;      return ;  }  String err =  Perf Metric Validator . validate Trace Name ( name )  ;  if  ( err != null )  {     logger . error ( "" Cannot start trace '%s' .   Trace name is invalid .  ( %s ) "", name, err )  ;      return ;  } if  ( start Time != null )  {     logger . error ( "" Trace '%s' has already started, should not start again!"", name )  ;      return ;  } start Time = clock . get Time (  )  ;  register For App State (  )  ;   Session Manager session Manager =  Session Manager . get Instance (  )  ;   Perf Session perf Session = session Manager . perf Session (  )  ;   Session Manager . get Instance (  )  . register For Session Updates ( session Aware Object )  ;  update Session ( perf Session )  ;  if  ( perf Session . is Gauge And Event Collection Enabled (  )  )  {     gauge Manager . collect Gauge Metric Once ( perf Session . get Timer (  )  )  ;  }}"
5306,"public  Application Key distribute App Key ( @ Non Null final  Application Key application Key, @ Non Null final byte [  ]  new App Key )  throws  Illegal Argument Exception{ if  ( validate Key ( new App Key )  )  {     if  ( is App Key Exists ( new App Key )  )  {         throw new  Illegal Argument Exception ( "" App key value is already in use . "" )  ;      }     final int key Index = application Key . get Key Index (  )  ;      final  Application Key app Key = get App Key ( key Index )  ;      if  ( app Key . equals ( application Key )  )  {         if  ( app Key . distribute Key ( new App Key )  )  {             update Node Key Status ( app Key )  ;              if  ( update Mesh Key ( app Key )  )  {                 return app Key ;              }         }     } } return null ; }"
5307,"public static void show Text (  Activity activity, int text Resource Id,  Style style ) { show Text ( activity, activity . get String ( text Resource Id ) , style )  ; }"
5308,"static void request Notification Listener (  Source source,  String suffix ) {  Intent intent = new  Intent ( source . get Context (  ) ,  Bridge Activity . class )  ;  intent . put Extra ( KEY_TYPE,  Bridge Request . TYPE_NOTIFY_LISTENER )  ;  intent . put Extra ( KEY_ACTION_SUFFIX, suffix )  ;  source . start Activity ( intent )  ; }"
5309,"public com . anychart . core . ui .  Paginator margin (  String [  ]  space Or Top Or Top And Bottom,  Number right Or Right And Left,  Number bottom,  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( space Or Top Or Top And Bottom ) , right Or Right And Left, bottom, left )  )  ;  return this ; }"
5310,"public  Nullness get Nullness Of Field For Receiver Tree (  Tree Path path,  Context context,  Tree base Expr,  Variable Element field, boolean trim Receiver ) {  Preconditions . check Argument ( field . get Kind (  )  . equals (  Element Kind . FIELD )  )  ;   Analysis Result< Nullness,  Nullness Store> result = data Flow . result For Expr ( path, context, nullness Propagation )  ;  if  ( result == null )  {     return  Nullness . NULLABLE ;  }  Nullness Store store = result . get Store Before ( path . get Leaf (  )  )  ;  // used set of nodes, a tree can have multiple nodes .   Set< Node> base Nodes = result . get Nodes For Tree ( base Expr )  ;  if  ( store == null || base Nodes == null )  {     return  Nullness . NULLABLE ;  } // look for all possible access paths might exist in store .  for  (  Node base Node : base Nodes )  {     // it trims the base Expr to process only the receiver .   ( e . g .  a . f (  )  is trimmed to a )      if  ( trim Receiver && base Node instanceof  Method Access Node )  {         base Node =  (  (  Method Access Node )  base Node )  . get Receiver (  )  ;      }      Access Path access Path =  Access Path . from Base And Element ( base Node, field )  ;      if  ( access Path == null )  {         continue ;      }      Nullness nullness = store . get Nullness Of Access Path ( access Path )  ;      // nullness .      if  ( !nullness . equals (  Nullness . NULLABLE )  )  {         return nullness ;      } } return  Nullness . NULLABLE ; }"
5311,"public short compare Document Position (  Node other )  throws DOM Exception{ DOM Exception ex = new DOM Exception ( DOM Exception . NOT_SUPPORTED_ERR, ""DOM level 3 interfaces are not fully implemented in  Jaxen's  Namespace Node class"" )  ;  throw ex ; }"
5312,"public static void init (  Beauty Photo Info Dao db Dao ) { db Dao . query Builder (  )  . rx (  )  . list (  )  . subscribe On (  Schedulers . io (  )  )  . flat Map ( new  Func1< List< Beauty Photo Info>,  Observable< Beauty Photo Info>> (  )  {     @ Override     public  Observable< Beauty Photo Info> call (  List< Beauty Photo Info> photo List )  {         return  Observable . from ( photo List )  ;      } } )  . filter ( new  Func1< Beauty Photo Info,  Boolean> (  )  {     @ Override     public  Boolean call (  Beauty Photo Info bean )  {         return bean . is Download (  )  ;      } } )  . subscribe ( new  Action1< Beauty Photo Info> (  )  {     @ Override     public void call (  Beauty Photo Info bean )  {         s Dl Photos . put ( bean . get Imgsrc (  )  . hash Code (  ) , true )  ;      } } )  ; }"
5313,boolean is Stopped (  ) { return end Time != null ; }
5314,protected int get Desired Height (  View child ) { if  ( child . get Visibility (  )  ==  View . GONE )  {     return 0 ;  } return child . get Measured Height (  )  ; }
5315,public static boolean can Show (  ) { return true ; }
5316,"public com . anychart . core . resource .  Logo corners (  Number [  ]  corners ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . corners ( %s )  ; "",  Arrays . to String ( corners )  )  )  ;  return this ; }"
5317,"public void switch Content Fragment (  Content Fragment fragment ) {  My Support Fragment content Fragment = find Child Fragment (  Content Fragment . class )  ;  if  ( content Fragment != null )  {     content Fragment . replace Fragment ( fragment, false )  ;  }}"
5318,"public com . anychart . core . annotations .  Fibonacci Retracement stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5319,"public static void set Window Brightness (  Activity activity, float screen Brightness ) { float brightness = screen Brightness ;  if  ( screen Brightness < 1 )  {     brightness = 1 ;  } else if  ( screen Brightness > 255 )  {     brightness = screen Brightness % 255 ;      if  ( brightness == 0 )  {         brightness = 255 ;      } }  Window window = activity . get Window (  )  ;   Window Manager .  Layout Params local Layout Params = window . get Attributes (  )  ;  local Layout Params . screen Brightness =  ( float )  brightness / 255 ;  window . set Attributes ( local Layout Params )  ; }"
5320,"public com . anychart . core . gantt . elements .  Tasks Element stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
5321,"public final void is Empty (  ) { if  ( length (  )  > 0 )  {     fail With Actual ( simple Fact ( ""expected to be empty"" )  )  ;  }}"
5322,public  Builder has Dynamic Item Height ( boolean has Dynamic Item Height ) { m Dynamic Item Height = has Dynamic Item Height ;  return this ; }
5323,public com . google . protobuf .  Byte String get Instance Id Bytes (  ) { java . lang .  Object ref = instance Id_ ;  if  ( ref instanceof java . lang .  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      instance Id_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
5324,public void set Profile Owner (  Component Name admin ) { set Active Admin ( admin )  ;  profile Owner = admin ; }
5325,"public void update (  ) { LOGGER . info ( ""update AI component"" )  ; }"
5326,public com . facebook . buck . remoteexecution . proto .  Executed Action Info get Executed Action Info (  ) { return executed Action Info_ == null ? com . facebook . buck . remoteexecution . proto .  Executed Action Info . get Default Instance (  )  : executed Action Info_ ; }
5327,"protected void on Layout ( boolean changed, int left, int top, int right, int bottom ) { super . on Layout ( changed, left, top, right, bottom )  ;  //  See if the image needs redrawing refresh Image ( false )  ; }"
5328,"public void write (  Full Rule Key rule Key ) { T Serializer serializer = new T Serializer ( new T Compact Protocol .  Factory (  )  )  ;  byte [  ]  out ;  try {     out = serializer . serialize ( rule Key )  ;  } catch  ( T Exception e )  {     logger . warn ( e, "" Could not serialize key for target %s with hash %s"", rule Key . name, rule Key . key )  ;      return ;  } synchronized  ( this )  {     try {         writer . write (  Byte Buffer . allocate ( 4 )  . put Int ( out . length )  . array (  )  )  ;          writer . write ( out )  ;      } catch  ( IO Exception e )  {         logger . warn ( e, "" Could not write key for target %s with hash %s"", rule Key . name, rule Key . key )  ;      } }}"
5329,"public synchronized  Package Resource Table get Compile Time Sdk Resource Table (  ) { if  ( compiletime Sdk Resource Table == null )  {      Resource Table Factory resource Table Factory = new  Resource Table Factory (  )  ;      compiletime Sdk Resource Table = resource Table Factory . new Framework Resource Table ( new  Resource Path ( android . R . class, null, null )  )  ;  } return compiletime Sdk Resource Table ; }"
5330,"public com . anychart . core . ui .  Circular Labels Factory container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
5331,"public com . anychart . charts .  Heat Map x Grid (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Grid ( %s )  ; "", settings )  )  ;  return this ; }"
5332,public void grow Stack ( int diff ) { set Stack Depth ( stack Depth + diff )  ; }
5333,private void make Check Box ( final  String keyword ) { m Checkbox Layout . set Visibility (  View . VISIBLE )  ;  //  Make new checkbox  Check Box check Box = new  Check Box ( this )  ;  check Box . set Text ( keyword )  ;  check Box . set Text Color ( HEATMAP_COLORS [ m Overlays Rendered ]  )  ;  check Box . set Checked ( true )  ;  check Box . set On Click Listener (  view -> {      Check Box c =  (  Check Box )  view ;       Tile Overlay overlay = m Overlays . get ( keyword )  ;      if  ( overlay != null )  {         overlay . set Visible ( c . is Checked (  )  )  ;      } } )  ;  m Checkbox Layout . add View ( check Box )  ; }
5334,public final boolean is Successful (  ) { return m Status Code == 0x00 ; }
5335,"public void min Compression Writes Correct Zip File (  )  throws  Exception{  Path parent = tmp . new Folder ( ""zipstep"" )  ;   Path out = parent . resolve ( ""output . zip"" )  ;   Path to Zip = tmp . new Folder ( ""zipdir"" )  ;  byte [  ]  contents = ""hello world"" . get Bytes (  )  ;   Files . write ( to Zip . resolve ( ""file1 . txt"" ) , contents )  ;   Files . write ( to Zip . resolve ( ""file2 . txt"" ) , contents )  ;   Files . write ( to Zip . resolve ( ""file3 . txt"" ) , contents )  ;   Zip Step step = new  Zip Step ( filesystem,  Paths . get ( ""zipstep/output . zip"" ) ,  Immutable Set . of (  ) , false,  Zip Compression Level . NONE,  Paths . get ( ""zipdir"" )  )  ;  assert Equals ( 0, step . execute (  Test Execution Context . new Instance (  )  )  . get Exit Code (  )  )  ;  // directory and will verify it's valid .  try  (  Zip File zip File = new  Zip File ( out . to File (  )  )  )  {      Enumeration< Zip Archive Entry> entries = zip File . get Entries (  )  ;       Zip Archive Entry entry1 = entries . next Element (  )  ;      assert Array Equals ( contents,  Byte Streams . to Byte Array ( zip File . get Input Stream ( entry1 )  )  )  ;       Zip Archive Entry entry2 = entries . next Element (  )  ;      assert Array Equals ( contents,  Byte Streams . to Byte Array ( zip File . get Input Stream ( entry2 )  )  )  ;       Zip Archive Entry entry3 = entries . next Element (  )  ;      assert Array Equals ( contents,  Byte Streams . to Byte Array ( zip File . get Input Stream ( entry3 )  )  )  ;  }}"
5336,public void select (  Stored Object Representation ref ) {//  Empty by default . }
5337,protected void set Result Cancel (  ) { set Result ( RESULT_CANCELED )  ;  finish (  )  ; }
5338,public static  List<T> unmodifiable Non Null List ( @ Nullable  List<T> list ) { return list == null || list . is Empty (  )  ?  (  List<T> )  empty List (  )  : unmodifiable List ( list )  ; }
5339,"public float distance To Center ( float x, float y ) { MP Point F c = get Center Offsets (  )  ;  float dist = 0f ;  float x Dist = 0f ;  float y Dist = 0f ;  if  ( x > c . x )  {     x Dist = x - c . x ;  } else {     x Dist = c . x - x ;  } if  ( y > c . y )  {     y Dist = y - c . y ;  } else {     y Dist = c . y - y ;  } // pythagoras dist =  ( float )   Math . sqrt (  Math . pow ( x Dist, 2 . 0 )  +  Math . pow ( y Dist, 2 . 0 )  )  ;  MP Point F . recycle Instance ( c )  ;  return dist ; }"
5340,public  Tinker Load Result get Tinker Load Result If Present (  ) { return tinker Load Result ; }
5341,"public void test Tracking (  ) {  Java Only Array frames =  Java Only Array . of ( 0d, 0 . 25d, 0 . 5d, 0 . 75d, 1d )  ;   Java Only Map animation Config =  Java Only Map . of ( ""type"", ""frames"", ""frames"", frames )  ;  create Animated Graph With Tracking Node ( 1000, 0d, animation Config )  ;   Argument Captor< Readable Map> styles Captor =  Argument Captor . for Class (  Readable Map . class )  ;  reset ( m UI Manager Mock )  ;  m Native Animated Nodes Manager . run Updates ( next Frame Time (  )  )  ;  verify ( m UI Manager Mock )  . synchronously Update View On UI Thread ( eq ( 1000 ) , styles Captor . capture (  )  )  ;  assert That ( styles Captor . get Value (  )  . get Double ( ""translate X"" )  )  . is Equal To ( 0d )  ;  // update ""to Value"" to 100, we expect tracking animation to animate now from 0 to 100 in 5 steps m Native Animated Nodes Manager . set Animated Node Value ( 1, 100d )  ;  // kick off the animation m Native Animated Nodes Manager . run Updates ( next Frame Time (  )  )  ;  for  ( int i = 0 ;  i < frames . size (  )  ;  i++ )  {     reset ( m UI Manager Mock )  ;      m Native Animated Nodes Manager . run Updates ( next Frame Time (  )  )  ;      verify ( m UI Manager Mock )  . synchronously Update View On UI Thread ( eq ( 1000 ) , styles Captor . capture (  )  )  ;      assert That ( styles Captor . get Value (  )  . get Double ( ""translate X"" )  )  . is Equal To ( frames . get Double ( i )  * 100d )  ;  } // update ""to Value"" to 0 but run only two frames from the animation, // we expect tracking animation to animate now from 100 to 75 m Native Animated Nodes Manager . set Animated Node Value ( 1, 0d )  ;  // kick off the animation m Native Animated Nodes Manager . run Updates ( next Frame Time (  )  )  ;  for  ( int i = 0 ;  i < 2 ;  i++ )  {     reset ( m UI Manager Mock )  ;      m Native Animated Nodes Manager . run Updates ( next Frame Time (  )  )  ;      verify ( m UI Manager Mock )  . synchronously Update View On UI Thread ( eq ( 1000 ) , styles Captor . capture (  )  )  ;      assert That ( styles Captor . get Value (  )  . get Double ( ""translate X"" )  )  . is Equal To ( 100d *  ( 1d - frames . get Double ( i )  )  )  ;  } // at this point we expect tracking value to be at 75 assert That (  (  (  Value Animated Node )  m Native Animated Nodes Manager . get Node By Id ( 3 )  )  . get Value (  )  )  . is Equal To ( 75d )  ;  // we update ""to Value"" again to 100 and expect the animation to restart from the current place m Native Animated Nodes Manager . set Animated Node Value ( 1, 100d )  ;  // kick off the animation m Native Animated Nodes Manager . run Updates ( next Frame Time (  )  )  ;  for  ( int i = 0 ;  i < frames . size (  )  ;  i++ )  {     reset ( m UI Manager Mock )  ;      m Native Animated Nodes Manager . run Updates ( next Frame Time (  )  )  ;      verify ( m UI Manager Mock )  . synchronously Update View On UI Thread ( eq ( 1000 ) , styles Captor . capture (  )  )  ;      assert That ( styles Captor . get Value (  )  . get Double ( ""translate X"" )  )  . is Equal To ( 50d + 50d * frames . get Double ( i )  )  ;  }}"
5342,public static void close Quietly ( final  Closeable .  .  .  closeables ) { if  ( closeables == null )  {     return ;  } for  ( final  Closeable closeable : closeables )  {     close Quietly ( closeable )  ;  }}
5343,"public final void smooth Scroll To ( int x, int y ) { smooth Scroll By ( x - get Scroll X (  ) , y - get Scroll Y (  )  )  ; }"
5344,public  String get Parameter (  String key ) { return parameters . get ( key )  ; }
5345,"public static boolean is Recent (  Document recent,  Document older ) { if  ( recent . get Revision (  )  == older . get Revision (  )  )  {     return recent . get Last Modified Time (  )  >= older . get Last Modified Time (  )  ;  } return recent . get Revision (  )  > older . get Revision (  )  ; }"
5346,"public static void put ( @ Non Null final  String key, @ Nullable final  Parcelable value, @ Non Null final  Cache Disk Utils cache Disk Utils ) { cache Disk Utils . put ( key, value )  ; }"
5347,"public com . anychart . core . stock . indicators . TRIX trix ( com . anychart . data .  Table Mapping mapping,  Number period,  Number signal Period, com . anychart . enums .  Moving Average Type ma Type, com . anychart . enums .  Moving Average Type signal Ma Type, com . anychart . enums .  Stock Series Type trix Series Type,  String signal Series Type ) { return new com . anychart . core . stock . indicators . TRIX (  String . format (  Locale . US, js Base + "" . trix ( %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, period, signal Period,  ( ma Type != null )  ? ma Type . get Js Base (  )  : null,  ( signal Ma Type != null )  ? signal Ma Type . get Js Base (  )  : null,  ( trix Series Type != null )  ? trix Series Type . get Js Base (  )  : null, wrap Quotes ( signal Series Type )  )  )  ; }"
5348,public void set Selectable Days (  Ummalqura Calendar [  ]  selectable Days ) { for  (  Ummalqura Calendar selectable Day : selectable Days )  trim To Midnight ( selectable Day )  ;  this . selectable Days . add All (  Arrays . as List ( selectable Days )  )  ;  if  ( m Day Picker View != null )      m Day Picker View . on Change (  )  ; }
5349,"public static  Class<?> resolve Return Type Argument (  Method method,  Class<?> generic Ifc ) {  Assert . not Null ( method, ""method must not be null"" )  ;   Type return Type = method . get Return Type (  )  ;   Type generic Return Type = method . get Generic Return Type (  )  ;  if  ( return Type . equals ( generic Ifc )  )  {     if  ( generic Return Type instanceof  Parameterized Type )  {          Parameterized Type target Type =  (  Parameterized Type )  generic Return Type ;           Type [  ]  actual Type Arguments = target Type . get Actual Type Arguments (  )  ;           Type type Arg = actual Type Arguments [ 0 ]  ;          if  ( ! ( type Arg instanceof  Wildcard Type )  )  {             return  (  Class<?> )  type Arg ;          }     } else {         return null ;      } } return resolve Type Argument (  (  Class<?> )  return Type, generic Ifc )  ; }"
5350,"public  Album Page select Album (  String album Title ) { // uses X Path to find list of html anchor tags with the class album in it var album Links =  (  List< Html Anchor> )  page . get By X Path ( ""//tr [ @class='album' ] //a"" )  ;  for  ( var anchor : album Links )  {     if  ( anchor . get Text Content (  )  . equals ( album Title )  )  {         try {             anchor . click (  )  ;              return new  Album Page ( web Client )  ;          } catch  ( IO Exception e )  {             LOGGER . error ( "" An error occured on select Album"", e )  ;          }     } } throw new  Illegal Argument Exception ( "" No links with the album title: "" + album Title )  ; }"
5351,"public void set Gesture Listener (  Context context,  Gesture Detector .  On Gesture Listener listener ) { if  ( listener == null )  {     m Gesture Detector = null ;  } else {     m Gesture Detector = new  Gesture Detector ( context, listener )  ;  }}"
5352,"public void update ( @ Non Null  View from ) { if  (  Gesture Debug . is Debug Animator (  )  )  {      Log . d ( TAG, "" Updating view"" )  ;  } update Internal ( from )  ; }"
5353,public boolean is Empty (  ) { return end == start ; }
5354,"private void generate Frame ( int frame Index, int color Format, byte [  ]  frame Data ) { //  Set to zero .   In YUV this is a dull green .   Arrays . fill ( frame Data,  ( byte )  0 )  ; /**      Mat mat =  Highgui . imread ( frames . get ( frame Index )  . get Absolute Path (  )  )  ; //		 Mat dst = new  Mat ( m Width, m Height * 3 / 2,  Cv Type . CV_8 UC1 )  ;       Mat dst = new  Mat (  )  ;       Imgproc . cvt Color ( mat, dst,  Imgproc . COLOR_RGBA2 YUV_I420 )  ;      // use array instead of mat to improve the speed     dst . get ( 0, 0, frame Data )  ;      byte [  ]  temp = frame Data . clone (  )  ;      int margin = m Height / 4 ;      int location = m Height ;      int step = 0 ;      for  ( int i = m Height ;  i < m Height + margin ;  i++ )      {         for  ( int j = 0 ;  j < m Width ;  j++ )          {             byte u Value = temp [ i * m Width + j ]  ;              byte v Value = temp [  ( i + margin )  * m Width + j ]  ;              frame Data [ location * m Width + step ]  = u Value ;              frame Data [ location * m Width + step + 1 ]  = v Value ;              step += 2 ;              if  ( step >= m Width )              {                 location++ ;                  step = 0 ;              }         }     }      **/}"
5355,"public void test Incremental Mount Vertical View Stack Scroll Up (  ) { final  Test Component child1 = create ( m Context )  . build (  )  ;  final  Test Component child2 = create ( m Context )  . build (  )  ;  final  Component root =  Column . create ( m Context )  . child (  Wrapper . create ( m Context )  . delegate ( child1 )  . width Px ( 10 )  . height Px ( 10 )  )  . child (  Wrapper . create ( m Context )  . delegate ( child2 )  . width Px ( 10 )  . height Px ( 10 )  )  . build (  )  ;  m Litho View Rule . set Root ( root )  . attach To Window (  )  . set Size Specs ( make Size Spec ( 1000, EXACTLY ) , make Size Spec ( 1000, EXACTLY )  )  . measure (  )  . layout (  )  ;  final  Litho View litho View = m Litho View Rule . get Litho View (  )  ;  litho View . get Component Tree (  )  . mount Component ( new  Rect ( 0, -10, 10, -5 ) , true )  ;  assert That ( child1 . is Mounted (  )  )  . is False (  )  ;  assert That ( child2 . is Mounted (  )  )  . is False (  )  ;  litho View . get Component Tree (  )  . mount Component ( new  Rect ( 0, 0, 10, 5 ) , true )  ;  assert That ( child1 . is Mounted (  )  )  . is True (  )  ;  assert That ( child2 . is Mounted (  )  )  . is False (  )  ;  litho View . get Component Tree (  )  . mount Component ( new  Rect ( 0, 5, 10, 15 ) , true )  ;  assert That ( child1 . is Mounted (  )  )  . is True (  )  ;  assert That ( child2 . is Mounted (  )  )  . is True (  )  ;  litho View . get Component Tree (  )  . mount Component ( new  Rect ( 0, 15, 10, 25 ) , true )  ;  assert That ( child1 . is Mounted (  )  )  . is False (  )  ;  assert That ( child2 . is Mounted (  )  )  . is True (  )  ;  litho View . get Component Tree (  )  . mount Component ( new  Rect ( 0, 20, 10, 30 ) , true )  ;  assert That ( child1 . is Mounted (  )  )  . is False (  )  ;  assert That ( child2 . is Mounted (  )  )  . is True (  )  ;  litho View . get Component Tree (  )  . mount Component ( new  Rect ( 0, 21, 10, 30 ) , true )  ;  assert That ( child1 . is Mounted (  )  )  . is False (  )  ;  assert That ( child2 . is Mounted (  )  )  . is False (  )  ; }"
5356,public  Builder set Content Span (  Spannable span ) { this . content Span = span ;  return this ; }
5357,"private void handle Both Attribute Present ( @ Non Null  Merging Report .  Builder report, @ Non Null  Xml Attribute higher Priority,  Attribute Operation Type operation Type ) { if  ( get Xml (  )  . get Namespace URI (  )  != null && get Xml (  )  . get Namespace URI (  )  . equals (  Sdk Constants . TOOLS_URI )  )  {     handle Both Tools Attribute Present ( higher Priority )  ;      return ;  } // 2 .  nothing was specified, the values should be equal or this is an error .  if  ( operation Type ==  Attribute Operation Type . REPLACE )  {     // record the fact the lower priority attribute was rejected .      report . get Action Recorder (  )  . record Attribute Action ( this,  Actions .  Action Type . REJECTED,  Attribute Operation Type . REPLACE )  ;      return ;  } // if the values are the same, then it's fine, otherwise flag the error .  if  ( m Attribute Model != null )  {      String merged Value = m Attribute Model . get Merging Policy (  )  . merge ( higher Priority . get Value (  ) , get Value (  )  )  ;      if  ( merged Value != null )  {         higher Priority . m Xml . set Value ( merged Value )  ;      } else {         add Conflicting Value Message ( report, higher Priority )  ;      }     return ;  } // no merging policy, for now revert on checking manually for equality .  if  ( !get Value (  )  . equals ( higher Priority . get Value (  )  )  )  {     add Conflicting Value Message ( report, higher Priority )  ;  }}"
5358,"public synchronized void reset Buck Global State (  ) { if  ( buck Global State != null )  {     LOG . info ( "" Closing daemon's global state on reset request . "" )  ;      buck Global State . close (  )  ;  } buck Global State = null ; }"
5359,public  View Pager get View Pager (  ) { return view Pager ; }
5360,"public  Optional< Path> get Core Simulator Service Path (  User Id Fetcher user Id Fetcher )  throws IO Exception,  Interrupted Exception{  Immutable Set< String> core Simulator Service Names = get Matching Service Names ( CORE_SIMULATOR_SERVICE_PATTERN )  ;  if  ( core Simulator Service Names . size (  )  != 1 )  {     LOG . debug ( "" Could not get core simulator service name  ( got %s ) "", core Simulator Service Names )  ;      return  Optional . empty (  )  ;  }  String core Simulator Service Name =  Iterables . get Only Element ( core Simulator Service Names )  ;   Immutable List< String> launchctl Print Command =  Immutable List . of ( ""launchctl"", ""print"",  String . format ( ""user/%d/%s"", user Id Fetcher . get User Id (  ) , core Simulator Service Name )  )  ;  LOG . debug ( "" Getting status of service %s with %s"", core Simulator Service Name, launchctl Print Command )  ;   Process Executor Params launchctl Print Params =  Process Executor Params . builder (  )  . set Command ( launchctl Print Command )  . build (  )  ;   Process Executor .  Result launchctl Print Result = process Executor . launch And Execute ( launchctl Print Params )  ;   Optional< Path> result =  Optional . empty (  )  ;  if  ( launchctl Print Result . get Exit Code (  )  != LAUNCHCTL_EXIT_SUCCESS )  {     LOG . error ( launchctl Print Result . get Message For Unexpected Result ( launchctl Print Command . to String (  )  )  )  ;      return result ;  }  String output = launchctl Print Result . get Stdout (  )  . or Else Throw (  (  )  -> new  Illegal State Exception ( ""stdout should be captured"" )  )  ;   Iterable< String> lines =  More Strings . lines ( output )  ;  for  (  String line : lines )  {      Matcher matcher = LAUNCHCTL_PRINT_PATH_PATTERN . matcher ( line )  ;      if  ( matcher . matches (  )  )  {          String path = matcher . group ( 1 )  ;          LOG . debug ( "" Found path of service %s: %s"", core Simulator Service Name, path )  ;          result =  Optional . of (  Paths . get ( path )  )  ;          break ;      } } return result ; }"
5361,"public static I18 N Bundle create Bundle (  File Handle base File Handle,  String encoding ) { return create Bundle Impl ( base File Handle,  Locale . get Default (  ) , encoding )  ; }"
5362,"public com . anychart . core . annotations .  Fibonacci Arc right (  Number right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", right )  )  ;  return this ; }"
5363,"public T get (  String key, T default Value,  Class<T> clazz ) {  Object object = get ( key )  ;  return object == null ? default Value :  ( T )  object ; }"
5364,protected void on Choice Started (  ) { if  ( swipe List View Listener != null )  {     swipe List View Listener . on Choice Started (  )  ;  }}
5365,"static  Apple Debuggable Binary create With Dsym (  Project Filesystem filesystem,  Build Target base Target,  Build Rule stripped Binary Rule,  Apple Dsym dsym ) { return new  Apple Debuggable Binary ( filesystem, base Target . with Appended Flavors ( RULE_FLAVOR,  Apple Debug Format . DWARF_AND_DSYM . get Flavor (  )  ) , stripped Binary Rule,  Optional . of ( dsym ) ,  Stream . empty (  )  )  ; }"
5366,"protected final  String escape Slow (  String s, int index ) { int slen = s . length (  )  ;  //  Get a destination buffer and setup some loop variables .  char [  ]  dest =  Platform . char Buffer From Thread Local (  )  ;  int dest Size = dest . length ;  int dest Index = 0 ;  int last Escape = 0 ;  // destination buffer, which gets grown as needed as well .  for  (  ;  index < slen ;  index++ )  {     //  Get a replacement for the current character .      char [  ]  r = escape ( s . char At ( index )  )  ;      //  If no replacement is needed, just continue .      if  ( r == null )  {         continue ;      }     int rlen = r . length ;      int chars Skipped = index - last Escape ;      //  This is the size needed to add the replacement, not the full size     // needed by the string .   We only regrow when we absolutely must, and     // when we do grow, grow enough to avoid excessive growing .   Grow .      int size Needed = dest Index + chars Skipped + rlen ;      if  ( dest Size < size Needed )  {         dest Size = size Needed + DEST_PAD_MULTIPLIER *  ( slen - index )  ;          dest = grow Buffer ( dest, dest Index, dest Size )  ;      }     //  If we have skipped any characters, we need to copy them now .      if  ( chars Skipped > 0 )  {         s . get Chars ( last Escape, index, dest, dest Index )  ;          dest Index += chars Skipped ;      }     //  Copy the replacement string into the dest buffer as needed .      if  ( rlen > 0 )  {          System . arraycopy ( r, 0, dest, dest Index, rlen )  ;          dest Index += rlen ;      }     last Escape = index + 1 ;  } //  Copy leftover characters if there are any .  int chars Left = slen - last Escape ;  if  ( chars Left > 0 )  {     int size Needed = dest Index + chars Left ;      if  ( dest Size < size Needed )  {         //  Regrow and copy, expensive!  No padding as this is the final copy .          dest = grow Buffer ( dest, dest Index, size Needed )  ;      }     s . get Chars ( last Escape, slen, dest, dest Index )  ;      dest Index = size Needed ;  } return new  String ( dest, 0, dest Index )  ; }"
5367,"public static int checked Pow ( int b, int k ) { check Non Negative ( ""exponent"", k )  ;  switch ( b )  {     case 0:         return  ( k == 0 )  ? 1 : 0 ;      case 1:         return 1 ;      case  ( -1 ) :         return  (  ( k & 1 )  == 0 )  ? 1 : -1 ;      case 2:         check No Overflow ( k <  Integer . SIZE - 1, ""checked Pow"", b, k )  ;          return 1 << k ;      case  ( -2 ) :         check No Overflow ( k <  Integer . SIZE, ""checked Pow"", b, k )  ;          return  (  ( k & 1 )  == 0 )  ? 1 << k : -1 << k ;      default: } int accum = 1 ;  while  ( true )  {     switch ( k )  {         case 0:             return accum ;          case 1:             return checked Multiply ( accum, b )  ;          default:             if  (  ( k & 1 )  != 0 )  {                 accum = checked Multiply ( accum, b )  ;              }             k >>= 1 ;              if  ( k > 0 )  {                 check No Overflow ( -FLOOR_SQRT_MAX_INT <= b & b <= FLOOR_SQRT_MAX_INT, ""checked Pow"", b, k )  ;                  b *= b ;              }     } }}"
5368,public  Mongo Collection< Document> get Accounts Collection (  ) { return accounts Collection ; }
5369,public void set Parser (  Incoming Parser parser ) { this . parser = parser ; }
5370,public  List< Ssa Insn> get Use List For Register ( int reg ) { if  ( unmodifiable Use List == null )  {     build Use List (  )  ;  } return unmodifiable Use List [ reg ]  ; }
5371,"public void letter Spacing (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . letter Spacing (  )  ; "" )  ; }"
5372,"public  Immersion Bar auto Dark Mode Enable ( boolean is Enable, @ Float Range ( from = 0f, to = 1f )  float auto Dark Mode Alpha ) { m Bar Params . auto Status Bar Dark Mode Enable = is Enable ;  m Bar Params . auto Status Bar Dark Mode Alpha = auto Dark Mode Alpha ;  m Bar Params . auto Navigation Bar Dark Mode Enable = is Enable ;  m Bar Params . auto Navigation Bar Dark Mode Alpha = auto Dark Mode Alpha ;  return this ; }"
5373,"public  String object Write (  ) { return ""array Write Object"" ; }"
5374,"public void on Create (  Bundle saved Instance State ) { super . on Create ( saved Instance State )  ;  set Content View ( R . layout . activity_ptr_expandable_list )  ;  m Pull Refresh List View =  (  Pull To Refresh Expandable List View )  find View By Id ( R . id . pull_refresh_expandable_list )  ;  //  Set a listener to be invoked when the list should be refreshed .  m Pull Refresh List View . set On Refresh Listener ( new  On Refresh Listener< Expandable List View> (  )  {     @ Override     public void on Refresh (  Pull To Refresh Base< Expandable List View> refresh View )  {         //  Do work to refresh the list here .          new  Get Data Task (  )  . execute (  )  ;      } } )  ;  for  (  String group : m Group Strings )  {      Map< String,  String> group Map1 = new  Hash Map< String,  String> (  )  ;      group Data . add ( group Map1 )  ;      group Map1 . put ( KEY, group )  ;       List< Map< String,  String>> child List = new  Array List< Map< String,  String>> (  )  ;      for  (  String string : m Child Strings )  {          Map< String,  String> child Map = new  Hash Map< String,  String> (  )  ;          child List . add ( child Map )  ;          child Map . put ( KEY, string )  ;      }     child Data . add ( child List )  ;  } m Adapter = new  Simple Expandable List Adapter ( this, group Data, android . R . layout . simple_expandable_list_item_1, new  String [  ]  { KEY }, new int [  ]  { android . R . id . text1 }, child Data, android . R . layout . simple_expandable_list_item_2, new  String [  ]  { KEY }, new int [  ]  { android . R . id . text1 } )  ;  set List Adapter ( m Adapter )  ; }"
5375,"public void pen ( int red, int green, int blue, int alpha ) { current Pen Color = new  Color ( red, green, blue, alpha )  ; }"
5376,"public void perform KDOP Culling ( bt Dbvt Broadphase broadphase,  Camera camera ) { set Frustum Planes ( camera . frustum )  ;  bt Dbvt . collide KDOP ( broadphase . get Set1 (  )  . get Root (  ) , frustum Normals, frustum Offsets, NUM_PLANES, collider )  ;  bt Dbvt . collide KDOP ( broadphase . get Set0 (  )  . get Root (  ) , frustum Normals, frustum Offsets, NUM_PLANES, collider )  ; }"
5377,public  No SQL with Deserializer (  Data Deserializer deserializer ) { this . single Deserializer = deserializer ;  return this ; }
5378,"public void on Bind Header View Holder (  Recycler View .  View Holder view Holder, int pos ) {}"
5379,"public static RP Layout<T, DBRP Main<T>> data Binding Repository Presenter Of ( @ Nullable final  Class<T> type ) { return new  Data Binding Repository Presenter Compiler (  )  ; }"
5380,"public static  String to Checksum Address (  String address ) {  String lowercase Address =  Numeric . clean Hex Prefix ( address )  . to Lower Case (  )  ;   String address Hash =  Numeric . clean Hex Prefix (  Hash . sha3 String ( lowercase Address )  )  ;   String Builder result = new  String Builder ( lowercase Address . length (  )  + 2 )  ;  result . append ( ""0x"" )  ;  for  ( int i = 0 ;  i < lowercase Address . length (  )  ;  i++ )  {     if  (  Integer . parse Int (  String . value Of ( address Hash . char At ( i )  ) , 16 )  >= 8 )  {         result . append (  String . value Of ( lowercase Address . char At ( i )  )  . to Upper Case (  )  )  ;      } else {         result . append ( lowercase Address . char At ( i )  )  ;      } } return result . to String (  )  ; }"
5381,"public int get Span Size ( int total Span Count, int position, int item Count ) { return 1 ; }"
5382,protected void on Pre Execute (  ) {}
5383,"private boolean handle Move Event ( @ Non Null final  Motion Event event ) { boolean handled = false ;  float delta X = event . get Raw X (  )  - m Down X ;  float delta Y = event . get Raw Y (  )  - m Down Y ;  if  ( m Hover Drawable == null &&  Math . abs ( delta Y )  > m Slop &&  Math . abs ( delta Y )  >  Math . abs ( delta X )  )  {     int position = m Wrapper . point To Position (  ( int )  event . get X (  ) ,  ( int )  event . get Y (  )  )  ;      if  ( position !=  Adapter View . INVALID_POSITION )  {          View down View = m Wrapper . get Child At ( position - m Wrapper . get First Visible Position (  )  )  ;          assert down View != null ;          if  ( m Draggable Manager . is Draggable ( down View, position - m Wrapper . get Header Views Count (  ) , event . get X (  )  - down View . get X (  ) , event . get Y (  )  - down View . get Y (  )  )  )  {             start Dragging ( position - m Wrapper . get Header Views Count (  )  )  ;              handled = true ;          }     } } else if  ( m Hover Drawable != null )  {     m Hover Drawable . handle Move Event ( event )  ;      switch If Necessary (  )  ;      m Wrapper . get List View (  )  . invalidate (  )  ;      handled = true ;  } return handled ; }"
5384,"public void set Handler (  Method Handler mi ) { // if we were using the cache and the handler is non-null then we must stop caching if  ( factory Use Cache && mi != null )  {     factory Use Cache = false ;      // clear any currently held class so we don't try to reuse it or set its handler field     this Class = null ;  } handler = mi ;  // this retains the behaviour of the old code which resets any class we were holding on to // this is probably not what is wanted set Field ( DEFAULT_INTERCEPTOR, handler )  ; }"
5385,"public com . anychart . core . cartesian . series .  Bar3d color Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
5386,"private static boolean matches Type (  Optional< Public Suffix Type> desired Type,  Optional< Public Suffix Type> actual Type ) { return desired Type . is Present (  )  ? desired Type . equals ( actual Type )  : actual Type . is Present (  )  ; }"
5387,"public com . anychart . core . stock . indicators . KDJ kdj ( com . anychart . data .  Table Mapping mapping,  Number k Period,  Number k MA Period,  Number d Period, com . anychart . enums .  Moving Average Type k MA Type,  String d MA Type,  Number k Multiplier,  Number d Multiplier, com . anychart . enums .  Stock Series Type k Series Type,  String d Series Type,  String j Series Type ) { return new com . anychart . core . stock . indicators . KDJ (  String . format (  Locale . US, js Base + "" . kdj ( %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, k Period, k MA Period, d Period,  ( k MA Type != null )  ? k MA Type . get Js Base (  )  : null, wrap Quotes ( d MA Type ) , k Multiplier, d Multiplier,  ( k Series Type != null )  ? k Series Type . get Js Base (  )  : null, wrap Quotes ( d Series Type ) , wrap Quotes ( j Series Type )  )  )  ; }"
5388,public  String get Page Id (  ) { return this . page Id ; }
5389,public void auto Dismiss ( boolean auto Dismiss ) { m Auto Dismiss = auto Dismiss ; }
5390,"private  Stack Entry get Operand From Top ( int offset From Top ) { int index = operand Stack . size (  )  - 1 - offset From Top ;  check State ( index >= 0, "" Invalid offset %s in the list of size %s .   The current method is %s"", offset From Top, operand Stack . size (  ) , method Signature )  ;  return operand Stack . get ( index )  ; }"
5391,private void read Next Word (  )  throws IO Exception{ read Next Word ( false )  ; }
5392,"public static  Simple Exo Player new Simple Instance (  Context context,  Track Selector track Selector ) { return new Simple Instance ( context, new  Default Renderers Factory ( context ) , track Selector )  ; }"
5393,"public static void show (  String message ) { show ( message,  Toast . LENGTH_SHORT )  ; }"
5394,public void recycle (  ) { shutdown (  )  ;  m Buffer . recycle (  )  ; }
5395,"public com . anychart . core .  State Settings font Decoration ( com . anychart . graphics . vector . text .  Decoration value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Decoration ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
5396,"private boolean is Valid Seq Auth ( final int seq Auth, final int src ) { final  Integer last Seq Auth = m Mesh Node . get Seq Auth ( src )  ;  return last Seq Auth == null || last Seq Auth < seq Auth ; }"
5397,public void start Camera (  ) { start Camera ( null )  ; }
5398,public void set Fallback Algorithm (  Diff Algorithm alg ) { fallback = alg ; }
5399,public static  String get Name ( final  Git Reference ref ) { if  ( ref != null )  {     return get Name ( ref . ref (  )  )  ;  } else {     return null ;  }}
5400,"public void start Setup ( final  On Iab Setup Finished Listener listener ) { //  If already set up, can't do it again .  check Not Disposed (  )  ;  if  ( m Setup Done )      throw new  Illegal State Exception ( ""IAB helper is already set up . "" )  ;  //  Connection to IAB service log Debug ( "" Starting in-app billing setup . "" )  ;  m Service Conn = new  Service Connection (  )  {     @ Override     public void on Service Disconnected (  Component Name name )  {         log Debug ( "" Billing service disconnected . "" )  ;          m Service = null ;      }     @ Override     public void on Service Connected (  Component Name name, I Binder service )  {         if  ( m Disposed )              return ;          log Debug ( "" Billing service connected . "" )  ;          m Service = I In App Billing Service .  Stub . as Interface ( service )  ;           String package Name = m Context . get Package Name (  )  ;          try {             log Debug ( "" Checking for in-app billing 3 support . "" )  ;              // check for in-app billing v3 support             int response = m Service . is Billing Supported ( 3, package Name, ITEM_TYPE_INAPP )  ;              if  ( response != BILLING_RESPONSE_RESULT_OK )  {                 if  ( listener != null )                      listener . on Iab Setup Finished ( new  Iab Result ( response, "" Error checking for billing v3 support . "" )  )  ;                  // if in-app purchases aren't supported, neither are subscriptions .                  m Subscriptions Supported = false ;                  return ;              }             log Debug ( "" In-app billing version 3 supported for "" + package Name )  ;              // check for v3 subscriptions support             response = m Service . is Billing Supported ( 3, package Name, ITEM_TYPE_SUBS )  ;              if  ( response == BILLING_RESPONSE_RESULT_OK )  {                 log Debug ( "" Subscriptions AVAILABLE . "" )  ;                  m Subscriptions Supported = true ;              } else {                 log Debug ( "" Subscriptions NOT AVAILABLE .   Response: "" + response )  ;              }             m Setup Done = true ;          } catch  (  Remote Exception e )  {             if  ( listener != null )  {                 listener . on Iab Setup Finished ( new  Iab Result ( IABHELPER_REMOTE_EXCEPTION, "" Remote Exception while setting up in-app billing . "" )  )  ;              }             e . print Stack Trace (  )  ;              return ;          }         if  ( listener != null )  {             listener . on Iab Setup Finished ( new  Iab Result ( BILLING_RESPONSE_RESULT_OK, "" Setup successful . "" )  )  ;          }     } } ;   Intent service Intent = new  Intent ( ""com . android . vending . billing .  In App Billing Service . BIND"" )  ;  service Intent . set Package ( ""com . android . vending"" )  ;   List service = m Context . get Package Manager (  )  . query Intent Services ( service Intent, 0 )  ;  if  ( service != null && !service . is Empty (  )  )  {     // service available to handle that  Intent     m Context . bind Service ( service Intent, m Service Conn,  Context . BIND_AUTO_CREATE )  ;  } else {     // no service available to handle that  Intent     if  ( listener != null )  {         listener . on Iab Setup Finished ( new  Iab Result ( BILLING_RESPONSE_RESULT_BILLING_UNAVAILABLE, "" Billing service unavailable on device . "" )  )  ;      } }}"
5401,public static  Boolean Array with ( boolean .  .  .  array ) { return new  Boolean Array ( array )  ; }
5402,public float get Start Value Float (  ) { if  ( start Value Float == UNSET_FLOAT )  {     start Value Float =  ( float )   (  Float )  start Value ;  } return start Value Float ; }
5403,public  String to String (  ) { return  Short . to String ( get Value (  )  )  ; }
5404,"void restore Child Clipping (  ) { if  ( !m Clipping Temporary Disabled )  {     return ;  } //  The order here is crucial, we first need to update m Clipping Temporary Disabled flag then set // clipping m Clipping Temporary Disabled = false ;  set Clip Children ( m Clipping To Restore )  ; }"
5405,public  String resolve Buck Executable (  ) { return buck Executable Settings Provider . resolve Buck Executable (  )  ; }
5406,public void set Id3v2 Save ( boolean id3v2 Save ) { this . id3v2 Save = id3v2 Save ; }
5407,"public com . anychart . charts .  Stock margin (  Number value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
5408,"public com . anychart . charts .  Cartesian padding (  Number value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
5409,"public com . anychart . core . cartesian . series .  Width Based id (  Number id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . id ( %s )  ; "", id )  )  ;  return this ; }"
5410,public synchronized boolean is Initialized (  ) { return event Queue_ != null ; }
5411,public  Submodule Walk reset (  ) { repo Config = repository . get Config (  )  ;  modules Config = null ;  path To Name = null ;  walk . reset (  )  ;  return this ; }
5412,public static void clear User (  ) {  Qiscus Core . clear User (  )  ; }
5413,"public void verbose (  Throwable exception,  String message ) { logger . log ( FINER, message, exception )  ; }"
5414,"public  Async Operation insert (  Object entity, int flags ) { return enqueue Entity Operation (  Operation Type .  Insert, entity, flags )  ; }"
5415,private void check SSL Context (  ) { try {     javax . net . ssl . SSL Context . get Default (  )  ;  } catch  ( java . security .  No Such Algorithm Exception e )  {     this . set SSL Context Manager (  )  ;  }}
5416,"public void start Monitoring Beacons In Region ( @ Non Null  Region region )  throws  Remote Exception{ if  ( !is Ble Available Or Simulated (  )  )  {      Log Manager . w ( TAG, "" Method invocation will be ignored . "" )  ;      return ;  } if  ( determine If Called From Separate Scanner Process (  )  )  {     return ;  } if  ( m Scheduled Scan Jobs Enabled )  {      Monitoring Status . get Instance For Application ( m Context )  . add Region ( region, new  Callback ( callback Package Name (  )  )  )  ;  } apply Changes To Services (  Beacon Service . MSG_START_MONITORING, region )  ;  if  ( is Scanner In Different Process (  )  )  {      Monitoring Status . get Instance For Application ( m Context )  . add Local Region ( region )  ;  } this . request State For Region ( region )  ; }"
5417,protected  Material Large Image Card Thumbnail initialize Card Thumbnail (  ) { return new  Material Large Image Card Thumbnail ( m Context )  ; }
5418,"public com . anychart . core .  State Settings grid ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . grid ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5419,"public static  Byte Buffer [  ]  sign (  Byte Buffer input Apk,  List< Signer Config> signer Configs )  throws  Apk Parse Exception,  Invalid Key Exception,  Signature Exception{ //  Slice/create a view in the input Apk to make sure that: // 1 .  input Apk is what's between position and limit of the original input Apk, and // 2 .  changes to position, limit, and byte order are not reflected in the original .   Byte Buffer original Input Apk = input Apk ;  input Apk = original Input Apk . slice (  )  ;  input Apk . order (  Byte Order . LITTLE_ENDIAN )  ;  //  Locate ZIP  End of  Central  Directory  (  Eo CD ) ,  Central  Directory, and check that  Central //  Directory is immediately followed by the ZIP  End of  Central  Directory .  int eocd Offset =  Zip Utils . find Zip End Of Central Directory Record ( input Apk )  ;  if  ( eocd Offset == -1 )  {     throw new  Apk Parse Exception ( "" Failed to locate ZIP  End of  Central  Directory"" )  ;  } if  (  Zip Utils . is Zip64 End Of Central Directory Locator Present ( input Apk, eocd Offset )  )  {     throw new  Apk Parse Exception ( ""ZIP64 format not supported"" )  ;  } input Apk . position ( eocd Offset )  ;  long central Dir Size Long =  Zip Utils . get Zip Eocd Central Directory Size Bytes ( input Apk )  ;  if  ( central Dir Size Long >  Integer . MAX_VALUE )  {     throw new  Apk Parse Exception ( ""ZIP  Central  Directory size out of range: "" + central Dir Size Long )  ;  } int central Dir Size =  ( int )  central Dir Size Long ;  long central Dir Offset Long =  Zip Utils . get Zip Eocd Central Directory Offset ( input Apk )  ;  if  ( central Dir Offset Long >  Integer . MAX_VALUE )  {     throw new  Apk Parse Exception ( ""ZIP  Central  Directory offset in file out of range: "" + central Dir Offset Long )  ;  } int central Dir Offset =  ( int )  central Dir Offset Long ;  int expected Eocd Offset = central Dir Offset + central Dir Size ;  if  ( expected Eocd Offset < central Dir Offset )  {     throw new  Apk Parse Exception ( ""ZIP  Central  Directory extent too large .   Offset: "" + central Dir Offset + "", size: "" + central Dir Size )  ;  } if  ( eocd Offset != expected Eocd Offset )  {     throw new  Apk Parse Exception ( ""ZIP  Central  Directory not immeiately followed by ZIP  End of"" + ""  Central  Directory .  CD end: "" + expected Eocd Offset + "",  Eo CD start: "" + eocd Offset )  ;  } //  Create  Byte Buffers holding the contents of everything before ZIP  Central  Directory, // ZIP  Central  Directory, and ZIP  End of  Central  Directory .  input Apk . clear (  )  ;   Byte Buffer before Central Dir = get Byte Buffer ( input Apk, central Dir Offset )  ;   Byte Buffer central Dir = get Byte Buffer ( input Apk, eocd Offset - central Dir Offset )  ;  //  Create a copy of  End of  Central  Directory because we'll need modify its contents later .  byte [  ]  eocd Bytes = new byte [ input Apk . remaining (  )  ]  ;  input Apk . get ( eocd Bytes )  ;   Byte Buffer eocd =  Byte Buffer . wrap ( eocd Bytes )  ;  eocd . order ( input Apk . order (  )  )  ;  //  Figure which which digests to use for APK contents .   Set< Integer> content Digest Algorithms = new  Hash Set<> (  )  ;  for  (  Signer Config signer Config : signer Configs )  {     for  ( int signature Algorithm : signer Config . signature Algorithms )  {         content Digest Algorithms . add ( get Signature Algorithm Content Digest Algorithm ( signature Algorithm )  )  ;      } } //  Compute digests of APK contents .  // digest algorithm ID -> digest  Map< Integer, byte [  ] > content Digests ;  try {     content Digests = compute Content Digests ( content Digest Algorithms, new  Byte Buffer [  ]  { before Central Dir, central Dir, eocd } )  ;  } catch  (  Digest Exception e )  {     throw new  Signature Exception ( "" Failed to compute digests of APK"", e )  ;  } //  Sign the digests and wrap the signatures and signer info into an APK  Signing  Block .   Byte Buffer apk Signing Block =  Byte Buffer . wrap ( generate Apk Signing Block ( signer Configs, content Digests )  )  ;  //  Update  Central  Directory  Offset in  End of  Central  Directory  Record .   Central  Directory // follows the APK  Signing  Block and thus is shifted by the size of the APK  Signing  Block .  central Dir Offset += apk Signing Block . remaining (  )  ;  eocd . clear (  )  ;   Zip Utils . set Zip Eocd Central Directory Offset ( eocd, central Dir Offset )  ;  //  Follow the  Java NIO pattern for  Byte Buffer whose contents have been consumed .  original Input Apk . position ( original Input Apk . limit (  )  )  ;  //  Reset positions  ( to 0 )  and limits  ( to capacity )  in the  Byte Buffers below to follow the //  Java NIO pattern for  Byte Buffers which are ready for their contents to be read by caller .  //  Contrary to the name, this does not clear the contents of these  Byte Buffer .  before Central Dir . clear (  )  ;  central Dir . clear (  )  ;  eocd . clear (  )  ;  //  Insert APK  Signing  Block immediately before the ZIP  Central  Directory .  return new  Byte Buffer [  ]  { before Central Dir, apk Signing Block, central Dir, eocd } ; }"
5420,public boolean remove Animation Listener (  Animation Listener listener ) { return m Listeners . remove ( listener )  ; }
5421,"public void change Charset (  String charset Name )  throws IO Exception{ synchronized  ( this )  {     reader = new  Input Stream Reader ( stream, charset Name )  ;  }}"
5422,"protected float get Score (  Size size,  Size desired ) { if  ( size . width <= 0 || size . height <= 0 )  {     return 0f ;  } float scale X = abs Ratio ( size . width * 1 . 0f / desired . width )  ;  float scale Y = abs Ratio ( size . height * 1 . 0f / desired . height )  ;  float scale Score = 1 . 0f / scale X / scale Y ;  float distortion = abs Ratio (  ( 1 . 0f * size . width / size . height )  /  ( 1 . 0f * desired . width / desired . height )  )  ;  //  Distortion is bad! float distortion Score = 1 . 0f / distortion / distortion / distortion ;  return scale Score * distortion Score ; }"
5423,"public com . anychart . graphics . vector .  Clip shape ( com . anychart . graphics . vector .  Shape shape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . shape ( %s )  ; "",  ( shape != null )  ? shape . get Js Base (  )  : null )  )  ;  return this ; }"
5424,"public void time Levels (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . time Levels (  )  ; "" )  ; }"
5425,"public void write (  Byte Array Output Stream tag Buffer ) { logger . config ( "" Writing frame to buffer:"" + get Identifier (  )  )  ;  // This is where we will write header, move position to where we can //write body  Byte Buffer header Buffer =  Byte Buffer . allocate ( FRAME_HEADER_SIZE )  ;  // Write  Frame  Body  Data  Byte Array Output Stream body Output Stream = new  Byte Array Output Stream (  )  ;   (  (  Abstract ID3v2 Frame Body )  frame Body )  . write ( body Output Stream )  ;  // Write  Frame  Header write  Frame ID if  ( get Identifier (  )  . length (  )  == 3 )  {     identifier = identifier + ' ' ;  } header Buffer . put (  Utils . get Default Bytes ( get Identifier (  ) , ""ISO-8859-1"" ) , 0, FRAME_ID_SIZE )  ;  // Write  Frame  Size int size = frame Body . get Size (  )  ;  logger . fine ( "" Frame  Size  Is:"" + size )  ;  header Buffer . put Int ( frame Body . get Size (  )  )  ;  // Write the  Flags // Status  Flags:leave as they were when we read header Buffer . put ( status Flags . get Write Flags (  )  )  ;  // Remove any non standard flags  (  (  Encoding Flags )  encoding Flags )  . unset Non Standard Flags (  )  ;  // Unset  Compression flag if previously set because we uncompress previously compressed frames on write .   (  (  Encoding Flags )  encoding Flags )  . unset Compression (  )  ;  header Buffer . put ( encoding Flags . get Flags (  )  )  ;  try {     // Add header to the  Byte  Array  Output  Stream     tag Buffer . write ( header Buffer . array (  )  )  ;      if  (  (  (  Encoding Flags )  encoding Flags )  . is Encryption (  )  )  {         tag Buffer . write ( encryption Method )  ;      }     if  (  (  (  Encoding Flags )  encoding Flags )  . is Grouping (  )  )  {         tag Buffer . write ( group Identifier )  ;      }     // Add body to the  Byte  Array  Output  Stream     tag Buffer . write ( body Output Stream . to Byte Array (  )  )  ;  } catch  ( IO Exception ioe )  {     // This could never happen coz not writing to file, so convert to  Runtime Exception     throw new  Runtime Exception ( ioe )  ;  }}"
5426,"private  Node parse Delimiters (  Delimiter Processor delimiter Processor, char delimiter Char ) {  Delimiter Data res = scan Delimiters ( delimiter Processor, delimiter Char )  ;  if  ( res == null )  {     return null ;  } int length = res . count ;  int start Index = index ;  index += length ;   Text node = text ( input, start Index, index )  ;  //  Add entry to stack for this opener last Delimiter = new  Delimiter ( node, delimiter Char, res . can Open, res . can Close, last Delimiter )  ;  last Delimiter . length = length ;  last Delimiter . original Length = length ;  if  ( last Delimiter . previous != null )  {     last Delimiter . previous . next = last Delimiter ;  } return node ; }"
5427,"public com . anychart . core . polar . series .  Range Column max Labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5428,"public void font Style (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Style (  )  ; "" )  ; }"
5429,"public com . anychart . core .  Series Base max Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
5430,"public com . anychart . core . stock . indicators .  Volume MA ma Type (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . ma Type ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
5431,public boolean is Loading (  ) { return state ==  State . LOADING ; }
5432,"public com . anychart . core . axismarkers .  Gantt Text text Direction (  String direction ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Direction ( %s )  ; "", wrap Quotes ( direction )  )  )  ;  return this ; }"
5433,public  Boolean should Allow Request (  String url ) { return null ; }
5434,"public  Realm Query<E> in (  String field Name, @ Nullable  Integer [  ]  values ) { realm . check If Valid (  )  ;  if  ( values == null || values . length == 0 )  {     always False (  )  ;      return this ;  } else {     begin Group Without Thread Validation (  )  . equal To Without Thread Validation ( field Name, values [ 0 ]  )  ;      for  ( int i = 1 ;  i < values . length ;  i++ )  {         or Without Thread Validation (  )  . equal To Without Thread Validation ( field Name, values [ i ]  )  ;      }     return end Group Without Thread Validation (  )  ;  }}"
5435,protected final  Http URL Connection get Connection (  ) { return connection ; }
5436,public boolean is Content (  ) { return state ==  State . CONTENT ; }
5437,"public void dispose (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . dispose (  )  ; "" )  ; }"
5438,"void test Constructor (  ) { final var asteroid = new  Flaming Asteroid ( 1, 2, 3, 4 )  ;  assert Equals ( 1, asteroid . get Left (  )  )  ;  assert Equals ( 2, asteroid . get Top (  )  )  ;  assert Equals ( 3, asteroid . get Right (  )  )  ;  assert Equals ( 4, asteroid . get Bottom (  )  )  ;  assert True ( asteroid . is On Fire (  )  )  ;  assert False ( asteroid . is Damaged (  )  )  ;  assert Equals ( "" Flaming Asteroid at  [ 1,2,3,4 ]  damaged=false on Fire=true"", asteroid . to String (  )  )  ; }"
5439,"void append Timeline (  Component root,  String root Global Key,  State Handler state Handler,  Tree Props props, @ Layout State .  Calculate Layout Source int source, @ Nullable  String attribution ) { assert Holds Lock ( this )  ;  if  ( m Timeline == null )  {     m Timeline = new  Debug Component Time Machine .  Tree Revisions ( root, root Global Key, state Handler, props, source, attribution )  ;  } else {     m Timeline . set Latest ( root, state Handler, props, source, attribution )  ;  }}"
5440,public void set Max Width ( int width ) { m Max Width = width ; }
5441,public boolean is Valid (  String regex ) { if  ( regex == null )  {     return false ;  }  Pattern pattern =  Pattern . compile ( regex )  ;   Matcher matcher = pattern . matcher ( get Text (  )  )  ;  return matcher . matches (  )  ; }
5442,"public void pop To (  Class<?> target Fragment Class, boolean include Target Fragment ) { m Delegate . pop To ( target Fragment Class, include Target Fragment )  ; }"
5443,"public void insert After (  String src, boolean as Finally )  throws  Cannot Compile Exception{ insert After ( src, as Finally, false )  ; }"
5444,"public static  String get Json (  String data,  String url ) { return do Http Action ( data, true, false, url )  ; }"
5445,"public void set Back Button Visible (  ) { skip Button . set Visibility ( GONE )  ;  back Button . set Visibility (  View . VISIBLE )  ;  back Button . set On Click Listener ( new  View .  On Click Listener (  )  {     @ Override     public void on Click (  View v )  {         view Pager . set Current Item ( view Pager . get Previous Item (  ) , true )  ;      } } )  ; }"
5446,protected void set S Mask ( PDF Image s Mask ) { this . s Mask = s Mask ; }
5447,"public com . anychart . core . annotations .  Fibonacci Retracement height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
5448,"public static void open App Store (  Context context, @ Nullable JSON Object parameters,  Daemon Request .  Callback callback ) {  Daemon Request . execute Async ( context, parameters, callback, SDK Message Enum . OPEN_APP_STORE )  ; }"
5449,public boolean did Crash On Previous Execution (  ) { return core . did Crash On Previous Execution (  )  ; }
5450,"private  Insn List filter Move Return Address Insns (  Insn List insns ) { int sz ;  int new Sz = 0 ;  //  First see if we need to filter, and if so what the new size will be sz = insns . size (  )  ;  for  ( int i = 0 ;  i < sz ;  i++ )  {     if  ( insns . get ( i )  . get Opcode (  )  !=  Rops . MOVE_RETURN_ADDRESS )  {         new Sz++ ;      } } if  ( new Sz == sz )  {     return insns ;  } //  Make a new list without the MOVE_RETURN_ADDRESS insns  Insn List new Insns = new  Insn List ( new Sz )  ;  int new Index = 0 ;  for  ( int i = 0 ;  i < sz ;  i++ )  {      Insn insn = insns . get ( i )  ;      if  ( insn . get Opcode (  )  !=  Rops . MOVE_RETURN_ADDRESS )  {         new Insns . set ( new Index++, insn )  ;      } } new Insns . set Immutable (  )  ;  return new Insns ; }"
5451,public  Checkout Command checkout (  ) { return new  Checkout Command ( repo )  ; }
5452,"public com . anychart . core . ui .  Scroll Bar slider Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . slider Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5453,public void start Decoder Thread (  ) { m Gif Info Handle . start Decoder Thread (  )  ; }
5454,protected int get Drawing Order (  ) { return drawing Order ; }
5455,"public com . anychart . charts .  Sparkline first Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . first Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
5456,"public void start ( final int timeout, boolean daemon )  throws IO Exception{ this . my Server Socket = this . get Server Socket Factory (  )  . create (  )  ;  this . my Server Socket . set Reuse Address ( true )  ;   Server Runnable server Runnable = create Server Runnable ( timeout )  ;  this . my Thread = new  Thread ( server Runnable )  ;  this . my Thread . set Daemon ( daemon )  ;  this . my Thread . set Name ( "" Nano Httpd  Main  Listener"" )  ;  this . my Thread . start (  )  ;  while  ( !server Runnable . has Binded (  )  && server Runnable . get Bind Exception (  )  == null )  {     try {          Thread . sleep ( 10 L )  ;      } catch  (  Throwable e )  {     // on android this may not be allowed, that's why we     // catch throwable the wait should be very short because we are     // just waiting for the bind of the socket     } } if  ( server Runnable . get Bind Exception (  )  != null )  {     throw server Runnable . get Bind Exception (  )  ;  }}"
5457,public boolean is Ignored (  Rel Path path ) { for  (  Path Matcher black Listed Path : black Listed Paths )  {     if  ( black Listed Path . matches ( path . get Path (  )  )  )  {         return true ;      } } return false ; }
5458,"public void end (  Stack Map Table .  Writer smap,  Attribute Writer aw ) { if  ( is Abstract )      return ;  // exception_table_length output . write Short ( catch Pos, catch Count )  ;  int attr Count = smap == null ? 0 : 1 ;  write Attribute ( output, aw, attr Count )  ;  if  ( smap != null )  {     if  ( stack Index == 0 )          stack Index = const Pool . add Utf8 Info (  Stack Map Table . tag )  ;      output . write Short ( stack Index )  ;      byte [  ]  data = smap . to Byte Array (  )  ;      output . write Int ( data . length )  ;      output . write ( data )  ;  } //  Code attribute_length output . write Int ( start Pos + 2, output . get Pos (  )  - start Pos - 6 )  ; }"
5459,"private  Handshake State contains Requested Protocol (  String requested Protocol ) { for  ( I Protocol known Protocol : known Protocols )  {     if  ( known Protocol . accept Provided Protocol ( requested Protocol )  )  {         protocol = known Protocol ;          log . trace ( ""accept Handshake -  Matching protocol found: {}"", protocol )  ;          return  Handshake State . MATCHED ;      } } return  Handshake State . NOT_MATCHED ; }"
5460,"public com . anychart . charts .  Gantt width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", width )  )  ;  return this ; }"
5461,"public int get Index Of Child (  Object parent,  Object child ) { if  ( parent == null || child == null )      return -1 ;  return  (  (  Tree Node )  parent )  . get Index (  (  Tree Node )  child )  ; }"
5462,"public static void optimize Imports (  Project project,  Virtual File .  .  .  virtual Files ) { new  Optimize Imports Processor ( project,  Reformat Code Action . convert To Psi Files ( virtual Files, project ) , null )  . run (  )  ; }"
5463,"public com . anychart . core . cartesian . series .  Continuous Range Base parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
5464,"public static void verify ( boolean expression,  String error Message Template, char p1, @ Check For Null  Object p2 ) { if  ( !expression )  {     throw new  Verify Exception ( lenient Format ( error Message Template, p1, p2 )  )  ;  }}"
5465,"public  Assertion Error get Failure (  ) { if  ( failure == null )  {     throw new  Assertion Error ( "" Expect Failure did not capture a failure . "" )  ;  } return failure ; }"
5466,public  Complete Builder to Builder (  ) { return new  Complete Builder ( this )  ; }
5467,public  List< Position Entry> get Position List (  ) { return positions ; }
5468,public float get Inner Padding (  ) { return m Inner Padding ; }
5469,"public  Runtime Type Adapter Factory<T> register Subtype (  Class<? extends T> type,  String label ) { if  ( type == null || label == null )  {     throw new  Null Pointer Exception (  )  ;  } if  ( subtype To Label . contains Key ( type )  || label To Subtype . contains Key ( label )  )  {     throw new  Illegal Argument Exception ( ""types and labels must be unique"" )  ;  } label To Subtype . put ( label, type )  ;  subtype To Label . put ( type, label )  ;  return this ; }"
5470,"public void remove (  Map Object object ) { objects . remove Value ( object, true )  ; }"
5471,protected boolean is Enabled (  ) { return enabled ; }
5472,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings bounds (  String x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
5473,"public static  String get File Path By Url (  String url ) {  File Info info =  File DAO Impl . get Instance (  )  . query ( url )  ;  if  ( info == null )  {     return null ;  }  File file = new  File ( info . get Path (  ) , info . get Name (  )  )  ;  return file . get Absolute Path (  )  ; }"
5474,public void show Content (  ) { show Content ( true )  ; }
5475,public void set Id3v1 Save Comment ( boolean id3v1 Save Comment ) { this . id3v1 Save Comment = id3v1 Save Comment ; }
5476,"private void fix Crop Window Rect By Rules (  Rect F rect ) { if  ( rect . width (  )  < m Crop Window Handler . get Min Crop Width (  )  )  {     float adj =  ( m Crop Window Handler . get Min Crop Width (  )  - rect . width (  )  )  / 2 ;      rect . left -= adj ;      rect . right += adj ;  } if  ( rect . height (  )  < m Crop Window Handler . get Min Crop Height (  )  )  {     float adj =  ( m Crop Window Handler . get Min Crop Height (  )  - rect . height (  )  )  / 2 ;      rect . top -= adj ;      rect . bottom += adj ;  } if  ( rect . width (  )  > m Crop Window Handler . get Max Crop Width (  )  )  {     float adj =  ( rect . width (  )  - m Crop Window Handler . get Max Crop Width (  )  )  / 2 ;      rect . left += adj ;      rect . right -= adj ;  } if  ( rect . height (  )  > m Crop Window Handler . get Max Crop Height (  )  )  {     float adj =  ( rect . height (  )  - m Crop Window Handler . get Max Crop Height (  )  )  / 2 ;      rect . top += adj ;      rect . bottom -= adj ;  } calculate Bounds ( rect )  ;  if  ( m Calc Bounds . width (  )  > 0 && m Calc Bounds . height (  )  > 0 )  {     float left Limit =  Math . max ( m Calc Bounds . left, 0 )  ;      float top Limit =  Math . max ( m Calc Bounds . top, 0 )  ;      float right Limit =  Math . min ( m Calc Bounds . right, get Width (  )  )  ;      float bottom Limit =  Math . min ( m Calc Bounds . bottom, get Height (  )  )  ;      if  ( rect . left < left Limit )  {         rect . left = left Limit ;      }     if  ( rect . top < top Limit )  {         rect . top = top Limit ;      }     if  ( rect . right > right Limit )  {         rect . right = right Limit ;      }     if  ( rect . bottom > bottom Limit )  {         rect . bottom = bottom Limit ;      } } if  ( m Fix Aspect Ratio &&  Math . abs ( rect . width (  )  - rect . height (  )  * m Target Aspect Ratio )  > 0 . 1 )  {     if  ( rect . width (  )  > rect . height (  )  * m Target Aspect Ratio )  {         float adj =  Math . abs ( rect . height (  )  * m Target Aspect Ratio - rect . width (  )  )  / 2 ;          rect . left += adj ;          rect . right -= adj ;      } else {         float adj =  Math . abs ( rect . width (  )  / m Target Aspect Ratio - rect . height (  )  )  / 2 ;          rect . top += adj ;          rect . bottom -= adj ;      } }}"
5477,"public void test Uri With No Name (  ) { assert Null (  Repository Uri Matcher . get Repository (  Uri . parse ( ""http://github . com/defunkt"" )  )  )  ;  assert Null (  Repository Uri Matcher . get Repository (  Uri . parse ( ""http://github . com/defunkt/"" )  )  )  ; }"
5478,"public com . anychart . charts .  Gantt bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
5479,public final boolean is Package Private (  ) { return !is Private (  )  && !is Public (  )  && !is Protected (  )  ; }
5480,"public void connect (  ) { connect ( DEFAULT_DB, DEFAULT_TICKETS_COLLECTION, DEFAULT_COUNTERS_COLLECTION )  ; }"
5481,"public static boolean starts With Pattern ( final byte [  ]  byte Array, final byte [  ]  pattern ) { return has Pattern At ( byte Array, pattern, 0 )  ; }"
5482,public  List<GPU Image Filter> get Filters (  ) { return filters ; }
5483,"public com . anychart . charts .  Heat Map select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
5484,"public com . anychart . charts .  Pie unselect (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . unselect (  )  ; "" )  ;  return this ; }"
5485,"public com . anychart . standalones .  Resource List descriptions (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . descriptions ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5486,public boolean read Bit (  ) { boolean return Value =  ( data [ byte Offset ]  &  ( 0x80 >> bit Offset )  )  != 0 ;  skip Bit (  )  ;  return return Value ; }
5487,"public com . anychart . core . annotations .  Fibonacci Timezones bounds (  String x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
5488,"public static  String join (  List< String> list,  String separator ) { return list == null ? """" :  Text Utils . join ( separator, list )  ; }"
5489,"public  String get String ( int i ) { return get String ( i, i + 1, true )  ; }"
5490,public void set Custom Column Drag Item (  Drag Item drag Item ) {  Drag Item new Drag Item = drag Item != null ? drag Item : new  Drag Item ( get Context (  )  )  ;  if  ( drag Item == null )  {     new Drag Item . set Snap To Touch ( false )  ;  } m Drag Column = new Drag Item ; }
5491,"public com . anychart . charts .  Cartesian3d left (  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", wrap Quotes ( left )  )  )  ;  return this ; }"
5492,public java . lang .  String get Resource Name (  ) { java . lang .  Object ref = resource Name_ ;  if  ( ! ( ref instanceof java . lang .  String )  )  {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      resource Name_ = s ;      return s ;  } else {     return  ( java . lang .  String )  ref ;  }}
5493,public  Sorted Set< Build Rule> get Build Deps (  ) { return total Build Deps . get (  )  ; }
5494,"public  Document Reference get Reference (  ) { return new  Document Reference ( key, firestore )  ; }"
5495,"protected  Media Type get Content Type (  Media Type content Type,  Server Http Request request,  Server Http Response response ) { return  Fast Json Http Message Converter . APPLICATION_JAVASCRIPT ; }"
5496,"public  App Configuration build (  ) { return new  App Configuration ( app Id, app Name, app Version, base Url, default Error Handler, default Client Reset Handler, encryption Key, request Timeout Ms, authorization Header Name, custom Headers, sync Root Dir, codec Registry, http Log Obfuscator )  ; }"
5497,public  Session Data Type get Data Type (  ) { return data Type ; }
5498,private  String get Tag (  ) {  String tag = local Tag . get (  )  ;  if  ( tag != null )  {     local Tag . remove (  )  ;      return tag ;  } return this . tag ; }
5499,public static int get Screen Height (  Context context ) {  Window Manager wm =  (  Window Manager )  context . get System Service (  Context . WINDOW_SERVICE )  ;  return wm . get Default Display (  )  . get Height (  )  ; }
5500,"private static void set Xml Value (  Object t,  String name,  String value ) { try {      Field [  ]  f = t . get Class (  )  . get Declared Fields (  )  ;      for  ( int i = 0 ;  i < f . length ;  i++ )  {         if  ( f [ i ]  . get Name (  )  . equals Ignore Case ( name )  )  {             f [ i ]  . set Accessible ( true )  ;              //获得属性类型              Class<?> field Type = f [ i ]  . get Type (  )  ;              if  ( field Type ==  String . class )  {                 f [ i ]  . set ( t, value )  ;              } else if  ( field Type ==  Integer . TYPE )  {                 f [ i ]  . set ( t,  Integer . parse Int ( value )  )  ;              } else if  ( field Type ==  Float . TYPE )  {                 f [ i ]  . set ( t,  Float . parse Float ( value )  )  ;              } else if  ( field Type ==  Double . TYPE )  {                 f [ i ]  . set ( t,  Double . parse Double ( value )  )  ;              } else if  ( field Type ==  Long . TYPE )  {                 f [ i ]  . set ( t,  Long . parse Long ( value )  )  ;              } else if  ( field Type ==  Short . TYPE )  {                 f [ i ]  . set ( t,  Short . parse Short ( value )  )  ;              } else if  ( field Type ==  Boolean . TYPE )  {                 f [ i ]  . set ( t,  Boolean . parse Boolean ( value )  )  ;              } else {                 f [ i ]  . set ( t, value )  ;              }         }     } } catch  (  Exception e )  {      Log . e ( ""xml error"", e . to String (  )  )  ;  }}"
5501,public  Live Data< List< Product Entity>> get Products (  ) { return m Observable Products ; }
5502,public void add Feature (  Geo Json Feature feature ) { super . add Feature ( feature )  ;  if  ( is Layer On Map (  )  )  {     feature . add Observer ( this )  ;  }}
5503,"public com . anychart . charts .  Sparkline context Menu (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . context Menu ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5504,"public com . anychart . core . ui .  Timeline text Marker (  Number index,  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Marker ( %s, %s )  ; "", index, value )  )  ;  return this ; }"
5505,public void thread Fail (  String reason ) { try {     fail ( reason )  ;  } catch  (  Assertion Failed Error t )  {     thread Record Failure ( t )  ;      fail ( reason )  ;  }}
5506,"public  Closeable Reference< Bitmap> decode From Encoded Image With Color Space (  Encoded Image encoded Image,  Bitmap .  Config bitmap Config, @ Nullable  Rect region To Decode, @ Nullable final  Color Space color Space ) { final  Bitmap Factory .  Options options = get Decode Options For Stream ( encoded Image, bitmap Config )  ;  boolean retry On Fail = options . in Preferred Config !=  Bitmap .  Config . ARGB_8888 ;  try {      Input Stream s =  Preconditions . check Not Null ( encoded Image . get Input Stream (  )  )  ;      return decode From Stream ( s, options, region To Decode, color Space )  ;  } catch  (  Runtime Exception re )  {     if  ( retry On Fail )  {         return decode From Encoded Image With Color Space ( encoded Image,  Bitmap .  Config . ARGB_8888, region To Decode, color Space )  ;      }     throw re ;  }}"
5507,public int get Max Size (  ) { return max Size ; }
5508,public int get Data Field Count (  ) { return m Data Start Offsets . size (  )  ; }
5509,"public com . anychart . scales .  Logarithmic stack Direction ( com . anychart . enums .  Scale Stack Direction direction ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stack Direction ( %s )  ; "",  ( direction != null )  ? direction . get Js Base (  )  : null )  )  ;  return this ; }"
5510,"public int get Device Ram Size Kb (  ) { if  ( VERSION . SDK_INT >= VERSION_CODES . JELLY_BEAN )  {     return  Utils . saturated Int Cast (  Storage Unit . BYTES . to Kilobytes ( memory Info . total Mem )  )  ;  } return read Total RAM ( /* proc File Name= */ ""/proc/meminfo"" )  ; }"
5511,protected final  Cst Type get Definer (  ) { return definer ; }
5512,public void remove All Spring Config (  ) { m Spring Config Map . clear (  )  ; }
5513,"public com . anychart . charts .  Pie animation (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . animation ( %s )  ; "", settings )  )  ;  return this ; }"
5514,"public com . anychart . charts .  Circular Gauge select Marquee Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
5515,"public  Builder set Connection Builder ( @ Non Null  Connection Builder connection Builder ) {  Preconditions . check Not Null ( connection Builder, ""connection Builder cannot be null"" )  ;  m Connection Builder = connection Builder ;  return this ; }"
5516,"public com . anychart . core . cartesian . series .  Base With Markers min Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", width )  )  ;  return this ; }"
5517,"private static  Sorted Map< Path,  Zip Archive Entry> get Zip File Paths Stripping Prefix (  Zip File zip,  Path relative Path,  Path prefix,  Patterns Matcher entries To Exclude ) {  Sorted Map< Path,  Zip Archive Entry> path Map = new  Tree Map<> (  )  ;  for  (  Zip Archive Entry entry :  Collections . list ( zip . get Entries (  )  )  )  {      String entry Name = entry . get Name (  )  ;      if  ( entries To Exclude . matches ( entry Name )  )  {         continue ;      }      Path entry Path =  Paths . get ( entry Name )  ;      if  ( entry Path . starts With ( prefix )  )  {          Path target = relative Path . resolve ( prefix . relativize ( entry Path )  )  . normalize (  )  ;          path Map . put ( target, entry )  ;      } } return path Map ; }"
5518,"public com . anychart . scales .  Linear Color color Scale (  ) { return new com . anychart . scales .  Linear Color ( js Base + "" . color Scale (  ) "" )  ; }"
5519,protected  Optional< Buck Target Locator> get Buck Target Locator (  Data Context data Context ) { return get Project ( data Context )  . map (  Buck Target Locator::get Instance )  ; }
5520,"public T get (  ) { if  ( value == null )  {     throw new  No Such Element Exception ( "" No value present"" )  ;  } return value ; }"
5521,private boolean can Scroll (  ) {  View child = get Child At ( 0 )  ;  if  ( child != null )  {     int child Height = child . get Height (  )  ;      return get Height (  )  < child Height + get Padding Top (  )  + get Padding Bottom (  )  ;  } return false ; }
5522,"public static  Simple Exo Player new Simple Instance (  Context context,  Renderers Factory renderers Factory,  Track Selector track Selector,  Load Control load Control, @ Nullable  Drm Session Manager< Framework Media Crypto> drm Session Manager,  Bandwidth Meter bandwidth Meter ) { return new Simple Instance ( context, renderers Factory, track Selector, load Control, drm Session Manager, bandwidth Meter, new  Analytics Collector .  Factory (  ) ,  Util . get Looper (  )  )  ; }"
5523,"public  Build Config Fields put All (  Build Config Fields fields ) {  Immutable Map .  Builder< String,  Field> name To Field Builder =  Immutable Map . builder (  )  ;  name To Field Builder . put All ( fields . get Name To Field (  )  )  ;  for  (  Field field : this . get Name To Field (  )  . values (  )  )  {     if  ( !fields . get Name To Field (  )  . contains Key ( field . get Name (  )  )  )  {         name To Field Builder . put ( field . get Name (  ) , field )  ;      } } return of ( name To Field Builder . build (  )  )  ; }"
5524,"public final boolean add Scrollable Footer ( @ Non Null T footer Item ) { if  ( !m Scrollable Footers . contains ( footer Item )  )  {     log . d ( "" Add scrollable footer %s"", get Class Name ( footer Item )  )  ;      footer Item . set Selectable ( false )  ;      footer Item . set Draggable ( false )  ;      int progress Fix =  ( footer Item == m Progress Item )  ? m Scrollable Footers . size (  )  : 0 ;      //  Prevent wrong position after a possible update Data Set     if  ( progress Fix > 0 && m Scrollable Footers . size (  )  > 0 )  {         m Scrollable Footers . add ( 0, footer Item )  ;      } else {         m Scrollable Footers . add ( footer Item )  ;      }     perform Insert ( get Item Count (  )  - progress Fix,  Collections . singleton List ( footer Item ) , true )  ;      return true ;  } else {     log . w ( "" Scrollable footer %s already added"", get Class Name ( footer Item )  )  ;      return false ;  }}"
5525,public final C copy Into ( C collection ) { check Not Null ( collection )  ;   Iterable<E> iterable = get Delegate (  )  ;  if  ( iterable instanceof  Collection )  {     collection . add All (  (  Collection<E> )  iterable )  ;  } else {     for  ( E item : iterable )  {         collection . add ( item )  ;      } } return collection ; }
5526,"public com . anychart . charts .  Sparkline min Hatch Fill (  String hatch Fill Function ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Hatch Fill ( %s )  ; "", wrap Quotes ( hatch Fill Function )  )  )  ;  return this ; }"
5527,public void stop ( int page Num ) { PDF Parser parser = cache . get Page Parser ( new  Integer ( page Num )  )  ;  if  ( parser != null )  {     // stop it     parser . stop (  )  ;  }}
5528,public void set Port ( int port ) { this . port = port ; }
5529,"public boolean set Windowed Mode ( int width, int height ) { boolean display Size Unchanged = get Width (  )  == width && get Height (  )  == height && ! Display . is Fullscreen (  )  ;  if  ( display Size Unchanged && !force Display Mode Change )  {     return true ;  } this . force Display Mode Change = false ;  try {     org . lwjgl . opengl .  Display Mode target Display Mode = null ;      boolean fullscreen = false ;      if  ( fullscreen )  {         org . lwjgl . opengl .  Display Mode [  ]  modes =  Display . get Available Display Modes (  )  ;          int freq = 0 ;          for  ( int i = 0 ;  i < modes . length ;  i++ )  {             org . lwjgl . opengl .  Display Mode current = modes [ i ]  ;              if  (  ( current . get Width (  )  == width )  &&  ( current . get Height (  )  == height )  )  {                 if  (  ( target Display Mode == null )  ||  ( current . get Frequency (  )  >= freq )  )  {                     if  (  ( target Display Mode == null )  ||  ( current . get Bits Per Pixel (  )  > target Display Mode . get Bits Per Pixel (  )  )  )  {                         target Display Mode = current ;                          freq = target Display Mode . get Frequency (  )  ;                      }                 }                 // since it's most likely compatible with the monitor                 if  (  ( current . get Bits Per Pixel (  )  ==  Display . get Desktop Display Mode (  )  . get Bits Per Pixel (  )  )  &&  ( current . get Frequency (  )  ==  Display . get Desktop Display Mode (  )  . get Frequency (  )  )  )  {                     target Display Mode = current ;                      break ;                  }             }         }     } else {         target Display Mode = new org . lwjgl . opengl .  Display Mode ( width, height )  ;      }     if  ( target Display Mode == null )  {         return false ;      }     boolean resizable = !fullscreen && config . resizable ;       Display . set Display Mode ( target Display Mode )  ;       Display . set Fullscreen ( fullscreen )  ;      //  Workaround for bug in LWJGL whereby resizable state is lost on  Display Mode change     if  ( resizable ==  Display . is Resizable (  )  )  {          Display . set Resizable ( !resizable )  ;      }      Display . set Resizable ( resizable )  ;      float scale Factor =  Display . get Pixel Scale Factor (  )  ;      config . width =  ( int )   ( target Display Mode . get Width (  )  * scale Factor )  ;      config . height =  ( int )   ( target Display Mode . get Height (  )  * scale Factor )  ;      if  (  Gdx . gl != null )           Gdx . gl . gl Viewport ( 0, 0, config . width, config . height )  ;      resize = true ;      return true ;  } catch  ( LWJGL Exception e )  {     return false ;  }}"
5530,public boolean is Drawing (  ) { return shape Type != null ; }
5531,"private static  Class<? extends  Activity> get Restart Activity Class With Intent Filter ( @ Non Null  Context context ) {  Intent searched Intent = new  Intent (  )  . set Action ( INTENT_ACTION_RESTART_ACTIVITY )  . set Package ( context . get Package Name (  )  )  ;   List< Resolve Info> resolve Infos = context . get Package Manager (  )  . query Intent Activities ( searched Intent,  Package Manager . GET_RESOLVED_FILTER )  ;  if  ( resolve Infos . size (  )  > 0 )  {      Resolve Info resolve Info = resolve Infos . get ( 0 )  ;      try {         return  (  Class<? extends  Activity> )   Class . for Name ( resolve Info . activity Info . name )  ;      } catch  (  Class Not Found Exception e )  {         // Should not happen, print it to the log!          Log . e ( TAG, "" Failed when resolving the restart activity class via intent filter, stack trace follows!"", e )  ;      } } return null ; }"
5532,"void test Collide Meteoroid (  ) { test Collision ( new  Meteoroid ( 1, 1, 3, 4 ) , false, false, false, false )  ; }"
5533,public  Rect F get Rect (  ) { m Get Edges . set ( m Edges )  ;  return m Get Edges ; }
5534,"public final void reset Scale And Center (  ) { this . anim = null ;  this . pending Scale = limited Scale ( 0 )  ;  if  ( is Ready (  )  )  {     this . s Pending Center = new  Point F ( s Width (  )  / 2, s Height (  )  / 2 )  ;  } else {     this . s Pending Center = new  Point F ( 0, 0 )  ;  } invalidate (  )  ; }"
5535,"public com . anychart . charts .  Stock select Range (  String start,  String end,  Boolean dispatch Event ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Range ( %s, %s, %s )  ; "", wrap Quotes ( start ) , wrap Quotes ( end ) , dispatch Event )  )  ;  return this ; }"
5536,public  Completable remove Products (  List< Product> products ) {  List< Product> updated Shopping Cart = new  Array List<> (  )  ;  updated Shopping Cart . add All ( items In Shopping Cart . get Value (  )  )  ;  updated Shopping Cart . remove All ( products )  ;  items In Shopping Cart . on Next ( updated Shopping Cart )  ;  return  Completable . complete (  )  ; }
5537,public static void show Fragment Stack Hierarchy View ( I Support Activity support ) { support . get Support Delegate (  )  . show Fragment Stack Hierarchy View (  )  ; }
5538,"public void test Invalid Equals Null (  ) {  Object obj = new  Invalid Equals Null Object (  )  ;  equals Tester . add Equality Group ( obj )  ;  try {     equals Tester . test Equals (  )  ;  } catch  (  Assertion Failed Error e )  {     assert Error Message ( e, obj + "" must not be  Object#equals to null"" )  ;      return ;  } fail ( "" Should get equal to null error"" )  ; }"
5539,public static  Object Queue<T> create In Memory (  ) { return new  In Memory Object Queue<> (  )  ; }
5540,static void reset (  ) { activity Id Map . clear (  )  ;  for  (  Activity Scoped Cache scoped Cache : activity Scoped Cache Map . values (  )  )  {     scoped Cache . clear (  )  ;  } activity Scoped Cache Map . clear (  )  ; }
5541,public void set Active Cube Face ( int active Cube Face ) { this . m Active Cube Face = active Cube Face ; }
5542,"public boolean is Contain Resource ( R Type r Type,  Id Type id Type,  String name ) { boolean result = false ;  if  ( this . r Type Resource Map . contains Key ( r Type )  )  {      Set<R Dot Txt Entry> resource Set = this . r Type Resource Map . get ( r Type )  ;      if  ( resource Set . contains ( new R Dot Txt Entry ( id Type, r Type, name, ""0x7f000000"" )  )  )  {         result = true ;      } } return result ; }"
5543,"public static  Float Buffer wrap ( float [  ]  array, int start, int len ) { if  ( array == null )  {     throw new  Null Pointer Exception (  )  ;  } if  ( start < 0 || len < 0 ||  ( long )  start +  ( long )  len > array . length )  {     throw new  Index Out Of Bounds Exception (  )  ;  }  Float Buffer buf =  Buffer Factory . new Float Buffer ( array )  ;  buf . position = start ;  buf . limit = start + len ;  return buf ; }"
5544,public void remove From Cache ( final  Object id ) { raw Html Cache . remove ( id )  ;  full Html Cache . remove ( id )  ; }
5545,public  Constant get Constant (  ) { return constant ; }
5546,public int get Current Item Index (  ) { return current Item Index ; }
5547,protected boolean has State (  ) { return false ; }
5548,public  Count Down Latch get Show Latch (  ) { return m Show Latch ; }
5549,public static  Object [  ]  get Enum Constants (  Class c ) { return c . get Enum Constants (  )  ; }
5550,"public com . anychart . charts .  Pert select Marquee Fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
5551,void add Type Supplier (  Supplier< Type Spec> type Spec Supplier ) { component Shard . add Type Supplier ( type Spec Supplier )  ; }
5552,"public static int binary Search (  List<E> list,  Function<? super E, K> key Function, @ Nullable K key,  Key Present Behavior present Behavior,  Key Absent Behavior absent Behavior ) { return binary Search ( list, key Function, key,  Ordering . natural (  ) , present Behavior, absent Behavior )  ; }"
5553,public T get (  ) { return m Object ; }
5554,"public com . anychart . standalones . axes .  Radial minor Ticks (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . minor Ticks ( %s )  ; "", settings )  )  ;  return this ; }"
5555,"static int get Cores From File String (  String str ) { if  ( str == null || !str . matches ( ""0- [ \\d ] +$"" )  )  {     return DEVICEINFO_UNKNOWN ;  } int cores =  Integer . value Of ( str . substring ( 2 )  )  + 1 ;  return cores ; }"
5556,"protected final  Register Spec get Local Target ( boolean is Move ) { if  ( local Target == null )  {     return null ;  } if  ( result Count != 1 )  {     throw new  Sim Exception ( ""local target with "" +  (  ( result Count == 0 )  ? ""no"" : ""multiple"" )  + "" results"" )  ;  }  Type Bearer result = results [ 0 ]  ;   Type result Type = result . get Type (  )  ;   Type local Type = local Target . get Type (  )  ;  if  ( result Type == local Type )  {     /*          *  If this is to be a move operation and the result is a          * known value, make the returned local Target embody that          * value .           */     if  ( is Move )  {         return local Target . with Type ( result )  ;      } else {         return local Target ;      } } if  ( ! Merger . is Possibly Assignable From ( local Type, result Type )  )  {     //  The result and local types are inconsistent .   Complain!     throw Local Mismatch ( result Type, local Type )  ;      return null ;  } if  ( local Type ==  Type . OBJECT )  {     /*          *  The result type is more specific than the local type,          * so use that instead .           */     local Target = local Target . with Type ( result )  ;  } return local Target ; }"
5557,"public  Tag convert Tag (  Tag tag, ID3 V2 Version id3 V2 Version ) { if  ( tag instanceof ID3v24 Tag )  {     switch ( id3 V2 Version )  {         case ID3_V22:             return new ID3v22 Tag (  ( ID3v24 Tag )  tag )  ;          case ID3_V23:             return new ID3v23 Tag (  ( ID3v24 Tag )  tag )  ;          case ID3_V24:             return tag ;      } } else if  ( tag instanceof ID3v23 Tag )  {     switch ( id3 V2 Version )  {         case ID3_V22:             return new ID3v22 Tag (  ( ID3v23 Tag )  tag )  ;          case ID3_V23:             return tag ;          case ID3_V24:             return new ID3v24 Tag (  ( ID3v23 Tag )  tag )  ;      } } else if  ( tag instanceof ID3v22 Tag )  {     switch ( id3 V2 Version )  {         case ID3_V22:             return tag ;          case ID3_V23:             return new ID3v23 Tag (  ( ID3v22 Tag )  tag )  ;          case ID3_V24:             return new ID3v24 Tag (  ( ID3v22 Tag )  tag )  ;      } } return tag ; }"
5558,"public com . anychart . core .  Series Base width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", width )  )  ;  return this ; }"
5559,public boolean is Section Header Position ( int position ) { return m Card Sections . get ( position )  != null ; }
5560,"public com . anychart . core . ui .  Center fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
5561,"public static  String convert Frame ID22 To23 (  String identifier ) { if  ( identifier . length (  )  < 3 )  {     return null ;  } return ID3 Frames . convertv22 Tov23 . get (  (  String )  identifier . sub Sequence ( 0, 3 )  )  ; }"
5562,"public  String trim And Collapse From (  Char Sequence sequence, char replacement ) { //  This implementation avoids unnecessary allocation .  int len = sequence . length (  )  ;  int first = 0 ;  int last = len - 1 ;  while  ( first < len && matches ( sequence . char At ( first )  )  )  {     first++ ;  } while  ( last > first && matches ( sequence . char At ( last )  )  )  {     last-- ;  } return  ( first == 0 && last == len - 1 )  ? collapse From ( sequence, replacement )  : finish Collapse From ( sequence, first, last + 1, replacement, new  String Builder ( last + 1 - first ) , false )  ; }"
5563,"public void set Date ( int year, int month ) { if  ( month < 1 )  {     month = 1 ;  } if  ( month > 12 )  {     month = 12 ;  } month View . set Date ( year, month )  ; }"
5564,public int get Cache Count (  ) { return m Memory Cache . size (  )  ; }
5565,"public void process Touch Event (  Motion Event ev ) { final int action =  Motion Event Compat . get Action Masked ( ev )  ;  final int action Index =  Motion Event Compat . get Action Index ( ev )  ;  if  ( action ==  Motion Event . ACTION_DOWN )  {     //  Reset things for a new event stream, just in case we didn't get     // the whole previous stream .      cancel (  )  ;  } if  ( m Velocity Tracker == null )  {     m Velocity Tracker =  Velocity Tracker . obtain (  )  ;  } m Velocity Tracker . add Movement ( ev )  ;  switch ( action )  {     case  Motion Event . ACTION_DOWN:         {             final float x = ev . get X (  )  ;              final float y = ev . get Y (  )  ;              final int pointer Id =  Motion Event Compat . get Pointer Id ( ev, 0 )  ;              final  View to Capture = find Top Child Under (  ( int )  x,  ( int )  y )  ;              save Initial Motion ( x, y, pointer Id )  ;              //  Since the parent is already directly processing this touch             // event,             // there is no reason to delay for a slop before dragging .              //  Start immediately if possible .              try Capture View For Drag ( to Capture, pointer Id )  ;              final int edges Touched = m Initial Edge Touched [ pointer Id ]  ;              if  (  ( edges Touched & m Tracking Edges )  != 0 )  {                 m Callback . on Edge Touched ( edges Touched & m Tracking Edges, pointer Id )  ;              }             break ;          }     case  Motion Event Compat . ACTION_POINTER_DOWN:         {             final int pointer Id =  Motion Event Compat . get Pointer Id ( ev, action Index )  ;              final float x =  Motion Event Compat . get X ( ev, action Index )  ;              final float y =  Motion Event Compat . get Y ( ev, action Index )  ;              save Initial Motion ( x, y, pointer Id )  ;              // A  View Drag Helper can only manipulate one view at a time .              if  ( m Drag State == STATE_IDLE )  {                 //  If we're idle we can do anything!  Treat it like a normal                 // down event .                  final  View to Capture = find Top Child Under (  ( int )  x,  ( int )  y )  ;                  try Capture View For Drag ( to Capture, pointer Id )  ;                  final int edges Touched = m Initial Edge Touched [ pointer Id ]  ;                  if  (  ( edges Touched & m Tracking Edges )  != 0 )  {                     m Callback . on Edge Touched ( edges Touched & m Tracking Edges, pointer Id )  ;                  }             } else if  ( is Captured View Under (  ( int )  x,  ( int )  y )  )  {                 //  We're still tracking a captured view .   If the same view is                 // under this                 // point, we'll swap to controlling it with this pointer                 // instead .                  //  (  This will still work if we're ""catching"" a settling                 // view .  )                  try Capture View For Drag ( m Captured View, pointer Id )  ;              }             break ;          }     case  Motion Event . ACTION_MOVE:         {             if  ( m Drag State == STATE_DRAGGING )  {                 final int index =  Motion Event Compat . find Pointer Index ( ev, m Active Pointer Id )  ;                  final float x =  Motion Event Compat . get X ( ev, index )  ;                  final float y =  Motion Event Compat . get Y ( ev, index )  ;                  final int idx =  ( int )   ( x - m Last Motion X [ m Active Pointer Id ]  )  ;                  final int idy =  ( int )   ( y - m Last Motion Y [ m Active Pointer Id ]  )  ;                  drag To ( m Captured View . get Left (  )  + idx, m Captured View . get Top (  )  + idy, idx, idy )  ;                  save Last Motion ( ev )  ;              } else {                 //  Check to see if any pointer is now over a draggable view .                  final int pointer Count =  Motion Event Compat . get Pointer Count ( ev )  ;                  for  ( int i = 0 ;  i < pointer Count ;  i++ )  {                     final int pointer Id =  Motion Event Compat . get Pointer Id ( ev, i )  ;                      final float x =  Motion Event Compat . get X ( ev, i )  ;                      final float y =  Motion Event Compat . get Y ( ev, i )  ;                      final float dx = x - m Initial Motion X [ pointer Id ]  ;                      final float dy = y - m Initial Motion Y [ pointer Id ]  ;                      report New Edge Drags ( dx, dy, pointer Id )  ;                      if  ( m Drag State == STATE_DRAGGING )  {                         //  Callback might have started an edge drag .                          break ;                      }                     final  View to Capture = find Top Child Under (  ( int )  x,  ( int )  y )  ;                      if  ( check Touch Slop ( to Capture, dx, dy )  && try Capture View For Drag ( to Capture, pointer Id )  )  {                         break ;                      }                 }                 save Last Motion ( ev )  ;              }             break ;          }     case  Motion Event Compat . ACTION_POINTER_UP:         {             final int pointer Id =  Motion Event Compat . get Pointer Id ( ev, action Index )  ;              if  ( m Drag State == STATE_DRAGGING && pointer Id == m Active Pointer Id )  {                 //  Try to find another pointer that's still holding on to                 // the captured view .                  int new Active Pointer = INVALID_POINTER ;                  final int pointer Count =  Motion Event Compat . get Pointer Count ( ev )  ;                  for  ( int i = 0 ;  i < pointer Count ;  i++ )  {                     final int id =  Motion Event Compat . get Pointer Id ( ev, i )  ;                      if  ( id == m Active Pointer Id )  {                         //  This one's going away, skip .                          continue ;                      }                     final float x =  Motion Event Compat . get X ( ev, i )  ;                      final float y =  Motion Event Compat . get Y ( ev, i )  ;                      if  ( find Top Child Under (  ( int )  x,  ( int )  y )  == m Captured View && try Capture View For Drag ( m Captured View, id )  )  {                         new Active Pointer = m Active Pointer Id ;                          break ;                      }                 }                 if  ( new Active Pointer == INVALID_POINTER )  {                     //  We didn't find another pointer still touching the                     // view, release it .                      release View For Pointer Up (  )  ;                  }             }             clear Motion History ( pointer Id )  ;              break ;          }     case  Motion Event . ACTION_UP:         {             if  ( m Drag State == STATE_DRAGGING )  {                 release View For Pointer Up (  )  ;              }             cancel (  )  ;              break ;          }     case  Motion Event . ACTION_CANCEL:         {             if  ( m Drag State == STATE_DRAGGING )  {                 dispatch View Released ( 0, 0 )  ;              }             cancel (  )  ;              break ;          } }}"
5566,"public void change Device Id (  String device Id ) { L . d ( "" Calling  [ change Device Id ]  only with ID"" )  ;  if  ( !is Initialized (  )  )  {     L . e ( ""init must be called before change Device Id"" )  ;      return ;  } module Device Id . change Device Id With Merge ( device Id )  ; }"
5567,"public void id (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . id (  )  ; "" )  ; }"
5568,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
5569,"public com . anychart . charts .  Waterfall x Zoom (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Zoom ( %s )  ; "", settings )  )  ;  return this ; }"
5570,public boolean test ( T t ) { return leaf Components . stream (  )  . any Match (  comp -> comp . test ( t )  )  ; }
5571,"public com . anychart . charts .  Pareto bounds (  String x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
5572,"public com . anychart . charts .  Pie bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
5573,"public final void is Greater Than ( T other ) { if  ( actual . compare To ( other )  <= 0 )  {     fail With Actual ( ""expected to be greater than"", other )  ;  }}"
5574,"Object Loader get (  Dfs Reader ctx,  Any Object Id id )  throws IO Exception{ long offset = idx ( ctx )  . find Offset ( id )  ;  return 0 < offset && !is Corrupt ( offset )  ? load ( ctx, offset )  : null ; }"
5575,"public static byte [  ]  to JSON Bytes (  Charset charset,  Object object,  Serialize Config config,  Serialize Filter [  ]  filters,  String date Format, int default Features,  Serializer Feature .  .  .  features ) {  Serialize Writer out = new  Serialize Writer ( null, default Features, features )  ;  try {     JSON Serializer serializer = new JSON Serializer ( out, config )  ;      if  ( date Format != null && date Format . length (  )  != 0 )  {         serializer . set Date Format ( date Format )  ;          serializer . config (  Serializer Feature .  Write Date Use Date Format, true )  ;      }     if  ( filters != null )  {         for  (  Serialize Filter filter : filters )  {             serializer . add Filter ( filter )  ;          }     }     serializer . write ( object )  ;      return out . to Bytes ( charset )  ;  } finally {     out . close (  )  ;  }}"
5576,public void set Link (  String link ) { this . link = link ; }
5577,"static boolean add All Impl (  List<E> list, int index,  Iterable<? extends E> elements ) { boolean changed = false ;   List Iterator<E> list Iterator = list . list Iterator ( index )  ;  for  ( E e : elements )  {     list Iterator . add ( e )  ;      changed = true ;  } return changed ; }"
5578,"protected int standard Count ( @ Nullable  Object object ) { for  (  Entry<?> entry : this . entry Set (  )  )  {     if  (  Objects . equal ( entry . get Element (  ) , object )  )  {         return entry . get Count (  )  ;      } } return 0 ; }"
5579,public int get Method Handle Type (  ) { return type ; }
5580,"public  Array<K> to Array (  ) { return to Array ( new  Array<K> ( true, map . size )  )  ; }"
5581,"public com . anychart . charts .  Sparkline padding (  String value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
5582,"private  Media Period Info get Following Media Period Info (  Media Period Holder media Period Holder, long renderer Position Us ) { // TODO:  This method is called repeatedly from  Exo Player Impl Internal . maybe Update Loading Period // but if the timeline is not ready to provide the next period it can't return a non-null value // until the timeline is updated .   Store whether the next timeline period is ready when the // timeline is updated, to avoid repeatedly checking the same timeline .   Media Period Info media Period Info = media Period Holder . info ;  //  The expected delay until playback transitions to the new period is equal the duration of // media that's currently buffered  ( assuming no interruptions )  .   This is used to project forward // the start position for transitions to new windows .  long buffered Duration Us = media Period Holder . get Renderer Offset (  )  + media Period Info . duration Us - renderer Position Us ;  if  ( media Period Info . is Last In Timeline Period )  {     int current Period Index = timeline . get Index Of Period ( media Period Info . id . period Uid )  ;      int next Period Index = timeline . get Next Period Index ( current Period Index, period, window, repeat Mode, shuffle Mode Enabled )  ;      if  ( next Period Index == C . INDEX_UNSET )  {         //  We can't create a next period yet .          return null ;      }     long start Position Us ;      int next Window Index = timeline . get Period ( next Period Index, period, /* set Ids= */     true )  . window Index ;       Object next Period Uid = period . uid ;      long window Sequence Number = media Period Info . id . window Sequence Number ;      if  ( timeline . get Window ( next Window Index, window )  . first Period Index == next Period Index )  {         //  We're starting to buffer a new window .   When playback transitions to this window we'll         // want it to be from its default start position, so project the default start position         // forward by the duration of the buffer, and start buffering from this point .           Pair< Object,  Long> default Position = timeline . get Period Position ( window, period, next Window Index, /* window Position Us= */         C . TIME_UNSET, /* default Position Projection Us= */          Math . max ( 0, buffered Duration Us )  )  ;          if  ( default Position == null )  {             return null ;          }         next Period Uid = default Position . first ;          start Position Us = default Position . second ;           Media Period Holder next Media Period Holder = media Period Holder . get Next (  )  ;          if  ( next Media Period Holder != null && next Media Period Holder . uid . equals ( next Period Uid )  )  {             window Sequence Number = next Media Period Holder . info . id . window Sequence Number ;          } else {             window Sequence Number = next Window Sequence Number++ ;          }     } else {         start Position Us = 0 ;      }      Media Period Id period Id = resolve Media Period Id For Ads ( next Period Uid, start Position Us, window Sequence Number )  ;      return get Media Period Info ( period Id, /* content Position Us= */     start Position Us, start Position Us )  ;  }  Media Period Id current Period Id = media Period Info . id ;  timeline . get Period By Uid ( current Period Id . period Uid, period )  ;  if  ( current Period Id . is Ad (  )  )  {     int ad Group Index = current Period Id . ad Group Index ;      int ad Count In Current Ad Group = period . get Ad Count In Ad Group ( ad Group Index )  ;      if  ( ad Count In Current Ad Group == C . LENGTH_UNSET )  {         return null ;      }     int next Ad Index In Ad Group = period . get Next Ad Index To Play ( ad Group Index, current Period Id . ad Index In Ad Group )  ;      if  ( next Ad Index In Ad Group < ad Count In Current Ad Group )  {         //  Play the next ad in the ad group if it's available .          return !period . is Ad Available ( ad Group Index, next Ad Index In Ad Group )  ? null : get Media Period Info For Ad ( current Period Id . period Uid, ad Group Index, next Ad Index In Ad Group, media Period Info . content Position Us, current Period Id . window Sequence Number )  ;      } else {         //  Play content from the ad group position .   As a special case, if we're transitioning from a         // preroll ad group to content and there are no other ad groups, project the start position         // forward as if this were a transition to a new window .   No attempt is made to handle         // midrolls in live streams, as it's unclear what content position should play after an ad         //  ( server-side dynamic ad insertion is more appropriate for this use case )  .          long start Position Us = media Period Info . content Position Us ;          if  ( period . get Ad Group Count (  )  == 1 && period . get Ad Group Time Us ( 0 )  == 0 )  {              Pair< Object,  Long> default Position = timeline . get Period Position ( window, period, period . window Index, /* window Position Us= */             C . TIME_UNSET, /* default Position Projection Us= */              Math . max ( 0, buffered Duration Us )  )  ;              if  ( default Position == null )  {                 return null ;              }             start Position Us = default Position . second ;          }         return get Media Period Info For Content ( current Period Id . period Uid, start Position Us, current Period Id . window Sequence Number )  ;      } } else {     //  Play the next ad group if it's available .      int next Ad Group Index = period . get Ad Group Index For Position Us ( media Period Info . end Position Us )  ;      if  ( next Ad Group Index == C . INDEX_UNSET )  {         //  The next ad group can't be played .   Play content from the previous end position instead .          return get Media Period Info For Content ( current Period Id . period Uid, /* start Position Us= */         media Period Info . duration Us, current Period Id . window Sequence Number )  ;      }     int ad Index In Ad Group = period . get First Ad Index To Play ( next Ad Group Index )  ;      return !period . is Ad Available ( next Ad Group Index, ad Index In Ad Group )  ? null : get Media Period Info For Ad ( current Period Id . period Uid, next Ad Group Index, ad Index In Ad Group, /* content Position Us= */     media Period Info . duration Us, current Period Id . window Sequence Number )  ;  }}"
5583,"public void set Component (  Component component ) { set Content View (  Litho View . create ( this, component )  )  ; }"
5584,"private void set Clip (  Rect s ) { state . cliprgn = s ;  g . clip Rect ( s,  Op . REPLACE )  ; }"
5585,public void set App Name (  String app Name ) { this . app Name = app Name ; }
5586,public static void set Default Executor (  Executor exec ) { m Default Executor = exec ; }
5587,public boolean is Recycle (  ) { return m Layout State . m Recycle ; }
5588,"public  String get Affiliate Token (  ) { return parameters . get String ( KEY_ITUNES_CONNECT_AT, """" )  ; }"
5589,"public void add Sound Event (  State event, int res Id ) { m Sound Map . put ( event, res Id )  ; }"
5590,"public com . anychart . core . ui .  Timeline offset (  Number offset ) { return new com . anychart . core . ui .  Timeline (  String . format (  Locale . US, js Base + "" . offset ( %s ) "", offset )  )  ; }"
5591,public void set Compressed Size ( long value ) { compressed Size = value ; }
5592,"public  Where Condition or (  Where Condition cond1,  Where Condition cond2,  Where Condition .  .  .  cond More ) { return where Collector . combine Where Conditions ( "" OR "", cond1, cond2, cond More )  ; }"
5593,protected int get Page Color ( int position ) { return m Tutorial . get Page Color ( position )  ; }
5594,"public com . anychart . charts .  Sparkline last Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . last Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
5595,protected  Url Response Info get Current Url Response Info (  ) { return response Info ; }
5596,public void on Host Destroy (  Activity activity ) { if  ( activity == m Current Activity )  {     on Host Destroy (  )  ;  }}
5597,public  Hash Code Builder append ( short [  ]  array ) { if  ( array == null )  {     i Total = i Total * i Constant ;  } else {     for  ( short element : array )  {         append ( element )  ;      } } return this ; }
5598,"public  Reader reader (  String charset ) { try {     return new  Input Stream Reader ( read (  ) , charset )  ;  } catch  (  Unsupported Encoding Exception e )  {     throw new  Gdx Runtime Exception ( "" Encoding '"" + charset + ""' not supported"", e )  ;  }}"
5599,private double read Num (  ) { final byte [  ]  stream_ = this . stream ;  int c = stream_ [ loc++ ]  ;  boolean neg = c == '-' ;  boolean sawdot = c == ' . ' ;  double dotmult = sawdot ? 0 . 1 : 1 ;  double value =  ( c >= '0' && c <= '9' )  ? c - '0' : 0 ;  while  ( true )  {     c = stream_ [ loc++ ]  ;      if  ( c == ' . ' )  {         if  ( sawdot )  {             loc-- ;              break ;          }         sawdot = true ;          dotmult = 0 . 1 ;      } else if  ( c >= '0' && c <= '9' )  {         int val = c - '0' ;          if  ( sawdot )  {             value += val * dotmult ;              dotmult *= 0 . 1 ;          } else {             value = value * 10 + val ;          }     } else {         loc-- ;          break ;      } } return neg ? -value : value ; }
5600,"public com . anychart . core . axes .  Circular draw First Label (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . draw First Label ( %s )  ; "", enabled )  )  ;  return this ; }"
5601,public void remove (  )  throws  Unsupported Operation Exception{ throw new  Unsupported Operation Exception (  )  ; }
5602,public  Builder set Photos ( @ Nullable final  List< Share Photo> photos ) { this . photos . clear (  )  ;  this . add Photos ( photos )  ;  return this ; }
5603,public  Optional< Conflicting Headers Result> check Conflicting Headers (  ) { return lazy Conflicting Headers Check Result . get (  )  ; }
5604,"public com . anychart . core . ui .  Labels Factory labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . labels (  ) "" )  ; }"
5605,"public void text Direction (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . text Direction (  )  ; "" )  ; }"
5606,"private void apply And Animate Additions (  List<T> from,  List<T> new Items ) { //  Using  Hash for performance m Hash Items = new  Hash Set<> ( from )  ;  int in = 0 ;  for  ( int position = 0 ;  position < new Items . size (  )  ;  position++ )  {     if  ( m Filter Async Task != null && m Filter Async Task . is Cancelled (  )  )  {         return ;      }     final T item = new Items . get ( position )  ;      if  ( !m Hash Items . contains ( item )  )  {         log . v ( ""calculate Additions add position=%s item=%s"", position, item )  ;          if  ( notify Move Of Filtered Items )  {             //  We add always at the end to animate moved items at the missing position             from . add ( item )  ;              m Notifications . add ( new  Notification ( from . size (  ) ,  Notification . ADD )  )  ;          } else {             // #328 -  Filtering issue during delete search query  ( make sure position is in bounds )              if  ( position < from . size (  )  )  {                 from . add ( position, item )  ;              } else {                 from . add ( item )  ;              }             m Notifications . add ( new  Notification ( position,  Notification . ADD )  )  ;          }         in++ ;      } } m Hash Items = null ;  log . d ( ""calculate Additions total new=%s"", in )  ; }"
5607,public void switch Scene ( int scene ) { switch Scene ( m Scenes . get ( scene )  )  ; }
5608,"public static  String reflow Line (  String line ) { final int max Len = 78 ;  //  Most of time the line will fit in the given length and this will be a no-op int n = line . length (  )  ;  int cr = line . index Of ( '\n' )  ;  if  ( n <= max Len &&  ( cr == -1 || cr == n - 1 )  )  {     return line ;  } int prefix Size = line . index Of ( ':' )  + 1 ;  //  If there' some spacing after the colon, use the same when wrapping if  ( prefix Size > 0 && prefix Size < max Len )  {     while  ( prefix Size < n && line . char At ( prefix Size )  == ' ' )  {         prefix Size++ ;      } } else {     prefix Size = 4 ;  }  String prefix =  String . format ( //$NON-NLS-1$ //$NON-NLS-2$ ""%-"" +  Integer . to String ( prefix Size )  + ""s"", //$NON-NLS-1$ "" "" )  ;   String Builder output = new  String Builder ( n + prefix Size )  ;  while  ( n > 0 )  {     cr = line . index Of ( '\n' )  ;      if  ( n <= max Len &&  ( cr == -1 || cr == n - 1 )  )  {         output . append ( line )  ;          break ;      }     //  Line is longer than the max length, find the first character before and after     // the whitespace where we want to break the line .      int pos Next = max Len ;      if  ( cr != -1 && cr != n - 1 && cr <= pos Next )  {         pos Next = cr + 1 ;          while  ( pos Next < n && line . char At ( pos Next )  == '\n' )  {             pos Next++ ;          }     }     while  ( pos Next < n && line . char At ( pos Next )  == ' ' )  {         pos Next++ ;      }     while  ( pos Next > 0 )  {         char c = line . char At ( pos Next - 1 )  ;          if  ( c != ' ' && c != '\n' )  {             pos Next-- ;          } else {             break ;          }     }     if  ( pos Next == 0 ||  ( pos Next >= n && max Len < n )  )  {         //  We found no whitespace separator .   This should generally not occur .          pos Next = max Len ;      }     int pos Prev = pos Next ;      while  ( pos Prev > 0 )  {         char c = line . char At ( pos Prev - 1 )  ;          if  ( c == ' ' || c == '\n' )  {             pos Prev-- ;          } else {             break ;          }     }     output . append ( line . substring ( 0, pos Prev )  )  . append ( '\n' )  ;      line = prefix + line . substring ( pos Next )  ;      n = line . length (  )  ;  } return output . to String (  )  ; }"
5609,"public  Rebase Result call (  )  throws  Git API Exception,  No Head Exception,  Ref Not Found Exception,  Wrong Repository State Exception{ new Head = null ;  last Step Was Forward = false ;  check Callable (  )  ;  check Parameters (  )  ;  try {     switch ( operation )  {         case ABORT:             try {                 return abort (  Rebase Result . ABORTED_RESULT )  ;              } catch  ( IO Exception ioe )  {                 throw new J Git Internal Exception ( ioe . get Message (  ) , ioe )  ;              }         case PROCESS_STEPS:         case SKIP:         case CONTINUE:              String upstream Commit Id = rebase State . read File ( ONTO )  ;              try {                 upstream Commit Name = rebase State . read File ( ONTO_NAME )  ;              } catch  (  File Not Found Exception e )  {                 //  Fall back to commit ID if file doesn't exist  ( e . g .  rebase                 // was started by C  Git )                  upstream Commit Name = upstream Commit Id ;              }             this . upstream Commit = walk . parse Commit ( repo . resolve ( upstream Commit Id )  )  ;              preserve Merges = rebase State . get Rewritten Dir (  )  . is Directory (  )  ;              break ;          case BEGIN:             auto Stash (  )  ;              if  ( stop After Initialization || !walk . is Merged Into ( walk . parse Commit ( repo . resolve (  Constants . HEAD )  ) , upstream Commit )  )  {                 org . eclipse . jgit . api .  Status status =  Git . wrap ( repo )  . status (  )  . set Ignore Submodules (  Ignore Submodule Mode . ALL )  . call (  )  ;                  if  ( status . has Uncommitted Changes (  )  )  {                      List< String> list = new  Array List<> (  )  ;                      list . add All ( status . get Uncommitted Changes (  )  )  ;                      return  Rebase Result . uncommitted Changes ( list )  ;                  }             }              Rebase Result res = init Files And Rewind (  )  ;              if  ( stop After Initialization )                  return  Rebase Result . INTERACTIVE_PREPARED_RESULT ;              if  ( res != null )  {                 auto Stash Apply (  )  ;                  if  ( rebase State . get Dir (  )  . exists (  )  )                       File Utils . delete ( rebase State . get Dir (  ) ,  File Utils . RECURSIVE )  ;                  return res ;              }     }     if  ( monitor . is Cancelled (  )  )          return abort (  Rebase Result . ABORTED_RESULT )  ;      if  ( operation ==  Operation . CONTINUE )  {         new Head = continue Rebase (  )  ;           List< Rebase Todo Line> done Lines = repo . read Rebase Todo ( rebase State . get Path ( DONE ) , true )  ;           Rebase Todo Line step = done Lines . get ( done Lines . size (  )  - 1 )  ;          if  ( new Head != null && step . get Action (  )  !=  Action . PICK )  {              Rebase Todo Line new Step = new  Rebase Todo Line ( step . get Action (  ) ,  Abbreviated Object Id . from Object Id ( new Head ) , step . get Short Message (  )  )  ;               Rebase Result result = process Step ( new Step, false )  ;              if  ( result != null )                  return result ;          }          File amend File = rebase State . get File ( AMEND )  ;          boolean amend Exists = amend File . exists (  )  ;          if  ( amend Exists )  {              File Utils . delete ( amend File )  ;          }         if  ( new Head == null && !amend Exists )  {             // either do changes or skip the commit instead of continue .              return  Rebase Result . NOTHING_TO_COMMIT_RESULT ;          }     }     if  ( operation ==  Operation . SKIP )          new Head = checkout Current Head (  )  ;       List< Rebase Todo Line> steps = repo . read Rebase Todo ( rebase State . get Path ( GIT_REBASE_TODO ) , false )  ;      if  ( steps . is Empty (  )  )  {         return finish Rebase ( walk . parse Commit ( repo . resolve (  Constants . HEAD )  ) , false )  ;      }     if  ( is Interactive (  )  )  {         interactive Handler . prepare Steps ( steps )  ;          repo . write Rebase Todo File ( rebase State . get Path ( GIT_REBASE_TODO ) , steps, false )  ;      }     check Steps ( steps )  ;      for  (  Rebase Todo Line step : steps )  {         pop Steps ( 1 )  ;           Rebase Result result = process Step ( step, true )  ;          if  ( result != null )  {             return result ;          }     }     return finish Rebase ( new Head, last Step Was Forward )  ;  } catch  (  Checkout Conflict Exception cce )  {     return  Rebase Result . conflicts ( cce . get Conflicting Paths (  )  )  ;  } catch  ( IO Exception ioe )  {     throw new J Git Internal Exception ( ioe . get Message (  ) , ioe )  ;  }}"
5610,public Y Axis .  Axis Dependency get Axis (  ) { return axis ; }
5611,"private  Eol Stream Type get Eol Stream Type (  Operation Type op Type )  throws IO Exception{ if  ( eol Stream Type Holder == null )  {      Eol Stream Type type = null ;      if  ( state . walk != null )  {         type = state . walk . get Eol Stream Type ( op Type )  ;           Operation Type operation Type = op Type != null ? op Type : state . walk . get Operation Type (  )  ;          if  (  Operation Type . CHECKIN_OP . equals ( operation Type )  &&  Eol Stream Type . AUTO_LF . equals ( type )  && has Cr Lf In Index ( get Dir Cache Iterator (  )  )  )  {             //  If text=auto  ( or core . autocrlf=true )  and the file has             // already been committed with CR/LF, then don't convert .              type =  Eol Stream Type . DIRECT ;          }     } else {         switch ( get Options (  )  . get Auto CRLF (  )  )  {             case FALSE:                 type =  Eol Stream Type . DIRECT ;                  break ;              case TRUE:             case INPUT:                 type =  Eol Stream Type . AUTO_LF ;                  break ;          }     }     eol Stream Type Holder = new  Holder<> ( type )  ;  } return eol Stream Type Holder . get (  )  ; }"
5612,"public void test000_openrepo_default_relative_workdirconfig (  )  throws IO Exception{  File repo1 Parent = new  File ( trash . get Parent File (  ) , ""r1"" )  ;   File workdir = new  File ( trash . get Parent File (  ) , ""rw"" )  ;   File Utils . mkdir ( workdir )  ;  try  (  File Repository repo1initial = new  File Repository ( new  File ( repo1 Parent,  Constants . DOT_GIT )  )  )  {     repo1initial . create (  )  ;      final  File Based Config cfg = repo1initial . get Config (  )  ;      cfg . set String ( ""core"", null, ""worktree"", "" .  . / .  . /rw"" )  ;      cfg . save (  )  ;  }  File the Dir = new  File ( repo1 Parent,  Constants . DOT_GIT )  ;  try  (  File Repository r =  (  File Repository )  new  File Repository Builder (  )  . set Git Dir ( the Dir )  . build (  )  )  {     assert Equals Path ( the Dir, r . get Directory (  )  )  ;      assert Equals Path ( workdir, r . get Work Tree (  )  )  ;      assert Equals Path ( new  File ( the Dir, ""index"" ) , r . get Index File (  )  )  ;      assert Equals Path ( new  File ( the Dir,  Constants . OBJECTS ) , r . get Object Database (  )  . get Directory (  )  )  ;  }}"
5613,"public static boolean contains Git Modules File (  Repository repository )  throws IO Exception{ if  ( repository . is Bare (  )  )  {     return false ;  }  File modules File = new  File ( repository . get Work Tree (  ) ,  Constants . DOT_GIT_MODULES )  ;  return  ( modules File . exists (  )  )  ; }"
5614,public  Playlist Control get Playlist Control (  ) { return this ; }
5615,public  Builder set Negative Button ( @ String Res int text Id ) { m Negative Button Text = m Context . get String ( text Id )  ;  return this ; }
5616,"public com . anychart . core . stock . scrollerseries .  Range Spline Area rendering (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rendering ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5617,"public  File Cache Store store (  String key ) { return new  File Cache Store ( this, store Cache, key )  ; }"
5618,public void pause (  ) { is Running = false ; }
5619,"public void add Deps (  Immutable Set< Path> source Paths,  Iterable< Build Target> build Targets,  Dependency Type dependency Type ) { for  (  Build Target build Target : build Targets )  {     if  ( circular Dependency Inducing Targets . contains ( build Target )  )  {         continue ;      }     if  ( source Paths . is Empty (  )  )  {          Dependency Type . put With Merge ( dependency Type Map, build Target, dependency Type )  ;      } else {         for  (  Path source Path : source Paths )  {             dependency Origin Map . put ( source Path, build Target )  ;          }     } }}"
5620,"public com . anychart . charts .  Linear Gauge hatch Fill Palette (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill Palette ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5621,"public static  String join (  List< String> list ) { return join ( list, DEFAULT_JOIN_SEPARATOR )  ; }"
5622,public  View Animator get View Animator (  ) { return m View Animator ; }
5623,"public void test Intended Success_truth Correspondence (  ) {  Intent i = new  Intent (  )  ;  i . set Action (  Intent . ACTION_VIEW )  ;  i . put Extra ( ""ignoreextra"", """" )  ;  i . set Flags (  Intent . FLAG_ACTIVITY_NEW_TASK )  ;  get Application Context (  )  . start Activity ( i )  ;   Intent also Sent Intent But Dont Care = new  Intent (  Intent . ACTION_MAIN )  ;  also Sent Intent But Dont Care . set Flags (  Intent . FLAG_ACTIVITY_NEW_TASK )  ;  get Application Context (  )  . start Activity ( also Sent Intent But Dont Care )  ;  assert That ( get Intents (  )  )  . comparing Elements Using ( action (  )  )  . contains ( new  Intent (  Intent . ACTION_VIEW )  )  ; }"
5624,"public boolean seek (  Byte Buffer byte Buffer ) { byte [  ]  buffer = new byte [ FIELD_TAGID_LENGTH ]  ;  // read the TAG value byte Buffer . get ( buffer, 0, FIELD_TAGID_LENGTH )  ;  if  ( ! (  Arrays . equals ( buffer, TAG_ID )  )  )  {     return false ;  } //  Check for the empty byte before the TRACK byte Buffer . position ( FIELD_TRACK_INDICATOR_POS )  ;  if  ( byte Buffer . get (  )  != END_OF_FIELD )  {     return false ;  } //because on next read will be v1 tag .  return byte Buffer . get (  )  != END_OF_FIELD ; }"
5625,"public int is Member (  String classname,  String membername, int index ) {  Memberref Info minfo =  (  Memberref Info )  get Item ( index )  ;  if  ( get Class Info ( minfo . class Index )  . equals ( classname )  )  {      Name And Type Info ntinfo =  (  Name And Type Info )  get Item ( minfo . name And Type Index )  ;      if  ( get Utf8 Info ( ntinfo . member Name )  . equals ( membername )  )          return ntinfo . type Descriptor ;  } // false return 0 ; }"
5626,"public void logo Src (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . logo Src (  )  ; "" )  ; }"
5627,"public  Object evaluate ( float fraction,  Object start Value,  Object end Value ) { int start Int =  (  Integer )  start Value ;  int start A =  ( start Int >> 24 )  & 0xff ;  int start R =  ( start Int >> 16 )  & 0xff ;  int start G =  ( start Int >> 8 )  & 0xff ;  int start B = start Int & 0xff ;  int end Int =  (  Integer )  end Value ;  int end A =  ( end Int >> 24 )  & 0xff ;  int end R =  ( end Int >> 16 )  & 0xff ;  int end G =  ( end Int >> 8 )  & 0xff ;  int end B = end Int & 0xff ;  return  ( start A +  ( int )   ( fraction *  ( end A - start A )  )  )  << 24 |  ( start R +  ( int )   ( fraction *  ( end R - start R )  )  )  << 16 |  ( start G +  ( int )   ( fraction *  ( end G - start G )  )  )  << 8 |  ( start B +  ( int )   ( fraction *  ( end B - start B )  )  )  ; }"
5628,"public void set Field (  String vorbis Comment Key,  String value )  throws  Key Not Found Exception,  Field Data Invalid Exception{  Tag Field tagfield = create Field ( vorbis Comment Key, value )  ;  set Field ( tagfield )  ; }"
5629,"public void get Pixel Point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Pixel Point Width (  )  ; "" )  ; }"
5630,"public  Stream Strategy get Strategy (  Uri uri )  throws  Illegal Argument Exception{  String path = uri . get Path (  )  ;   Map .  Entry< String,  Stream Strategy> best = null ;  for  (  Map .  Entry< String,  Stream Strategy> entry : strategies . entry Set (  )  )  {     if  ( path . starts With ( ""/"" + entry . get Key (  )  )  )  {         if  ( best == null || best . get Key (  )  . length (  )  < entry . get Key (  )  . length (  )  )  {             best = entry ;          }     } } if  ( best == null )  {     throw new  Illegal Argument Exception ( "" Unable to find configured strategy for "" + uri )  ;  } return  ( best . get Value (  )  )  ; }"
5631,"public final void show Next ( long delay ) { if  ( DEBUG )       Log . d ( TAG, ""show Next "" +  ( get Displayed Child (  )  + 1 )  + "" delay="" + delay )  ;  this . flip ( get Displayed Child (  )  + 1, delay )  ; }"
5632,public static  Model File Download Service get Instance (  ) { return  Firebase App . get Instance (  )  . get (  Model File Download Service . class )  ; }
5633,public void set Class Pool (  Class Pool loader ) { class Pool = loader ; }
5634,"public  Void visit Method (  Method Tree node,  Void a Void ) {  Element element = get Enclosing Element (  )  ;  //  Skip private since they're not part of the interface if  ( is Private ( element )  )  {     return null ;  } return super . visit Method ( node, a Void )  ; }"
5635,private static void save Aside (  User Account user Account ) {  Db Manager . update Db ( user Account )  ;   Cache Store . invalidate ( user Account . get User Id (  )  )  ; }
5636,public void assert Manifests Equal (  Object .  .  .  manifests ) { assert That ( this . manifests )  . contains Exactly Elements In (  Arrays . as List ( manifests )  )  . in Order (  )  ; }
5637,public void set Pie Rotation ( int rotation ) { m Pie Rotation =  ( rotation % 360 + 360 )  % 360 ;  m Graph . rotate To ( m Pie Rotation )  ;  calc Current Item (  )  ; }
5638,"public com . anychart . charts .  Gantt row Hover Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Hover Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
5639,public long expires Sec (  ) { return expires Sec ; }
5640,public final void set Badge Icon Type ( @ Notification Compat .  Badge Icon Type int badge Icon Type ) { if  ( this . badge Icon Type == badge Icon Type )  {     return ;  } switch ( badge Icon Type )  {     case  Notification Compat . BADGE_ICON_NONE:     case  Notification Compat . BADGE_ICON_SMALL:     case  Notification Compat . BADGE_ICON_LARGE:         this . badge Icon Type = badge Icon Type ;          break ;      default:         throw new  Illegal Argument Exception (  )  ;  } invalidate (  )  ; }
5641,"public static void throw If Any Cause Instance Of (  Throwable throwable,  Class<X> declared Type )  throws X{ for  (  Throwable cause :  Throwable Cause Iterable . of ( throwable )  )  {      Throwables . throw If Instance Of ( cause, declared Type )  ;  }}"
5642,"public void use Emulator ( @ Non Null  String host, int port ) { if  ( this . repo != null )  {     throw new  Illegal State Exception ( "" Cannot call use Emulator (  )  after instance has already been initialized . "" )  ;  } this . emulator Settings = new  Emulated Service Settings ( host, port )  ; }"
5643,"public static  Camera Dialog show Dialog ( final  Activity parent ) /* add parameters here if you need */{  Camera Dialog dialog = new Instance (  )  ;  try {     dialog . show ( parent . get Fragment Manager (  ) , TAG )  ;  } catch  ( final  Illegal State Exception e )  {     dialog = null ;  } return dialog ; }"
5644,"public void set Boolean (  String field Name, boolean value ) { check Non Empty Field Name ( field Name )  ;  base Realm . check If Valid And In Transaction (  )  ;  field Name = map Field Name To Internal Name ( field Name )  ;  check Type ( field Name,  Realm Field Type . BOOLEAN )  ;  os Results . set Boolean ( field Name, value )  ; }"
5645,public  Builder set Media Type (  Media Type media Type ) { this . media Type = media Type ;  return this ; }
5646,"private  On Click Listener get Item Message Click Listener ( final  String url ) { return new  On Click Listener (  )  {     @ Override     public void on Click (  View v )  {         UI Helper . to Browser ( cxt, url )  ;      } } ; }"
5647,"public boolean is Cell Editable (  Event Object e ) { if  ( e instanceof  Mouse Event )  {      Mouse Event me =  (  Mouse Event )  e ;      // button )  .      if  ( me . get Modifiers (  )  == 0 ||  (  ( me . get Modifiers (  )  &  (  Input Event . BUTTON1_MASK | 1024 )  )  != 0 &&  ( me . get Modifiers (  )  &  (  Input Event . SHIFT_MASK |  Input Event . CTRL_MASK |  Input Event . ALT_MASK |  Input Event . BUTTON2_MASK |  Input Event . BUTTON3_MASK | //SHIFT_DOWN_MASK     64 | //CTRL_DOWN_MASK     128 | // ALT_DOWN_MASK     512 | //BUTTON2_DOWN_MASK     2048 | //BUTTON3_DOWN_MASK     4096 )  )  == 0 )  )  {         int row = row At Point ( me . get Point (  )  )  ;          for  ( int counter = get Column Count (  )  - 1 ;  counter >= 0 ;  counter-- )  {             if  (  Tree Table Model . class == get Column Class ( counter )  )  {                  Mouse Event new ME = new  Mouse Event (  My Tree Table . this . tree, me . get ID (  ) , me . get When (  ) , me . get Modifiers (  ) , me . get X (  )  - get Cell Rect ( row, counter, true )  . x, me . get Y (  ) , me . get Click Count (  ) , me . is Popup Trigger (  )  )  ;                   My Tree Table . this . tree . dispatch Event ( new ME )  ;                  break ;              }         }     }     if  ( me . get Click Count (  )  >= 3 )  {         return true ;      }     return false ;  } if  ( e == null )  {     return true ;  } return false ; }"
5648,public void set Position (  Vector3 pos ) { this . position . set ( pos )  ;  updated = false ; }
5649,public void set Packed Git MMAP ( boolean usemmap ) { packed Git MMAP = usemmap ; }
5650,"private void read Object ( java . io .  Object Input Stream s )  throws java . io . IO Exception,  Class Not Found Exception{ s . default Read Object (  )  ;  //  Read in size and allocate array int size = s . read Int (  )  ;  allocate Elements ( size )  ;  head = 0 ;  tail = size ;  //  Read in all elements in the proper order .  for  ( int i = 0 ;  i < size ;  i++ )  elements [ i ]  = s . read Object (  )  ; }"
5651,public void add State Listener (  State Listener listener ) { state Listeners . add ( listener )  ; }
5652,"public com . anychart . core . stock . scrollerseries .  Step Area fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
5653,"public com . anychart . core . cartesian . series .  Width Based bounds (  Number x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
5654,"public com . anychart . core . annotations .  Triangle selected (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5655,public  List< Fault Reason> get Reasons (  ) { return reasons ; }
5656,"protected void auto Adaptation (  ) {  Context context = get Context (  )  ;  if  ( is Vertical Video (  )  )  {     int [  ]  location = new int [ 2 ]  ;      get Location On Screen ( location )  ;      //如果系统没有将布局下移，那么此时处理     if  ( location [ 1 ]  == 0 )  {         set Padding ( 0,  Common Util . get Status Bar Height ( context ) , 0, 0 )  ;           Debuger . printf Log ( ""竖屏，系统未将布局下移"" )  ;      } else {          Debuger . printf Log ( ""竖屏，系统将布局下移；y:"" + location [ 1 ]  )  ;      } }}"
5657,"public void set Min And Max Frame ( final  String marker Name ) { if  ( composition == null )  {     lazy Composition Tasks . add ( new  Lazy Composition Task (  )  {         @ Override         public void run (  Lottie Composition composition )  {             set Min And Max Frame ( marker Name )  ;          }     } )  ;      return ;  }  Marker marker = composition . get Marker ( marker Name )  ;  if  ( marker == null )  {     throw new  Illegal Argument Exception ( "" Cannot find marker with name "" + marker Name + "" . "" )  ;  } int start Frame =  ( int )  marker . start Frame ;  set Min And Max Frame ( start Frame, start Frame +  ( int )  marker . duration Frames )  ; }"
5658,"public  String substring ( int start ) { if  ( 0 <= start && start <= length )  {     if  ( start == length )  {         return """" ;      }     //  Remove  String sharing for more performance     return new  String ( chars, start, length - start )  ;  } throw new  String Index Out Of Bounds Exception ( start )  ; }"
5659,public final  Immutable List<V> remove All (  Object key ) { throw new  Unsupported Operation Exception (  )  ; }
5660,public long get As Long (  ) { throw new  Unsupported Operation Exception ( get Class (  )  . get Simple Name (  )  )  ; }
5661,"public static long read Pcr From Packet (  Parsable Byte Array packet Buffer, int start Of Packet, int pcr Pid ) { packet Buffer . set Position ( start Of Packet )  ;  if  ( packet Buffer . bytes Left (  )  < 5 )  {     //  Header = 4 bytes, adaptation Field Length = 1 byte .      return C . TIME_UNSET ;  } //  Note:  See ISO/IEC 13818-1, section 2 . 4 . 3 . 2 for details of the header format .  int ts Packet Header = packet Buffer . read Int (  )  ;  if  (  ( ts Packet Header & 0x800000 )  != 0 )  {     // transport_error_indicator != 0 means there are uncorrectable errors in this packet .      return C . TIME_UNSET ;  } int pid =  ( ts Packet Header & 0x1 FFF00 )  >> 8 ;  if  ( pid != pcr Pid )  {     return C . TIME_UNSET ;  } boolean adaptation Field Exists =  ( ts Packet Header & 0x20 )  != 0 ;  if  ( !adaptation Field Exists )  {     return C . TIME_UNSET ;  } int adaptation Field Length = packet Buffer . read Unsigned Byte (  )  ;  if  ( adaptation Field Length >= 7 && packet Buffer . bytes Left (  )  >= 7 )  {     int flags = packet Buffer . read Unsigned Byte (  )  ;      boolean pcr Flag Set =  ( flags & 0x10 )  == 0x10 ;      if  ( pcr Flag Set )  {         byte [  ]  pcr Bytes = new byte [ 6 ]  ;          packet Buffer . read Bytes ( pcr Bytes, /* offset= */         0, pcr Bytes . length )  ;          return read Pcr Value From Pcr Bytes ( pcr Bytes )  ;      } } return C . TIME_UNSET ; }"
5662,"public com . anychart . core . cartesian . series .  Width Based max Point Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Point Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
5663,"public com . anychart . core . resource .  Logo corners (  String top Left,  Number top Right,  Number bottom Right,  Number bottom Left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . corners ( %s, %s, %s, %s )  ; "", wrap Quotes ( top Left ) , top Right, bottom Right, bottom Left )  )  ;  return this ; }"
5664,"public  Mesh Part part ( final  String id, final  Mesh mesh, int primitive Type, int offset, int size, final  Material material ) { final  Mesh Part mesh Part = new  Mesh Part (  )  ;  mesh Part . id = id ;  mesh Part . primitive Type = primitive Type ;  mesh Part . mesh = mesh ;  mesh Part . offset = offset ;  mesh Part . size = size ;  part ( mesh Part, material )  ;  return mesh Part ; }"
5665,public void set Rotation Enabled ( boolean enabled ) { m Rotate Enabled = enabled ; }
5666,public static  Shadow Looper get Shadow Main Looper (  ) { return shadow Looper ( get Main Looper (  )  )  ; }
5667,"public float get Width ( char code,  String name ) { if  ( widths == null )  {     return 1f ;  }  Float w = widths . get ( new  Character ( code )  )  ;  if  ( w == null )  {     return 1f ;  } return w . float Value (  )  / get Default Width (  )  ; }"
5668,"public  String format (  Key key ) { switch ( this )  {     case INSTANCE:         return key . to String (  )  ;      case PROVIDER_OF_LAZY:         return  String . format ( "" Provider< Lazy<%s>>"", key )  ;      case MEMBERS_INJECTION:         return  String . format ( ""inject Members ( %s ) "", key )  ;      case FUTURE:         return  String . format ( "" Listenable Future<%s>"", key )  ;      default:         return  String . format ( ""%s<%s>"", UPPER_UNDERSCORE . to ( UPPER_CAMEL, name (  )  ) , key )  ;  }}"
5669,"public void attach Recycler View ( @ Non Null  Recycler View rv ) { if  ( is Released (  )  )  {     throw new  Illegal State Exception ( "" Accessing released object"" )  ;  } if  ( m Recycler View != null )  {     throw new  Illegal State Exception ( "" Recycler View instance has already been set"" )  ;  } m Recycler View = rv ;  m Recycler View . add On Item Touch Listener ( m Internal Use On Item Touch Listener )  ;  m Touch Slop =  View Configuration . get ( m Recycler View . get Context (  )  )  . get Scaled Touch Slop (  )  ; }"
5670,public void show Message (  String message ) { show Error ( message )  ; }
5671,public void set Max Date (  Ummalqura Calendar calendar ) { m Max Date = trim To Midnight (  (  Ummalqura Calendar )  calendar . clone (  )  )  ;  if  ( m Day Picker View != null )  {     m Day Picker View . on Change (  )  ;  }}
5672,"public void left (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . left (  )  ; "" )  ; }"
5673,"protected  Optional<? extends  Buck Cell Manager .  Cell> get Cell From Parameters (  Data Context data Context,  String [  ]  args ) {  Optional< Buck Cell Manager> buck Cell Manager = get Buck Cell Manager ( data Context )  ;  if  ( args . length == 0 || """" . equals ( args [ 0 ]  )  )  {     return buck Cell Manager . flat Map (  Buck Cell Manager::get Default Cell )  ;  } else {     return buck Cell Manager . flat Map (  bcm -> bcm . find Cell By Name ( args [ 0 ]  )  )  ;  }}"
5674,"void test Get Product Mobile (  ) { var price = ""20"" ;  when ( price Client . get Price (  )  )  . then Return ( price )  ;  var mobile Product = api Gateway . get Product Mobile (  )  ;  assert Equals ( price, mobile Product . get Price (  )  )  ; }"
5675,"public com . anychart . core . cartesian . series .  Column3d left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
5676,public void set Share Content ( final  Share Content share Content ) { this . share Content = share Content ;  if  ( !enabled Explicitly Set )  {     internal Set Enabled ( can Share (  )  )  ;  }}
5677,"public com . anychart . core . gantt . elements .  Periods Element anchor (  String anchor ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . anchor ( %s )  ; "", wrap Quotes ( anchor )  )  )  ;  return this ; }"
5678,"public void change Account (  String account )  throws  Illegal State Exception, IO Exception, FTP Illegal Reply Exception, FTP Exception{ synchronized  ( lock )  {     //  Is this client connected?     if  ( !connected )  {         throw new  Illegal State Exception ( "" Client not connected"" )  ;      }     //  Is this client authenticated?     if  ( !authenticated )  {         throw new  Illegal State Exception ( "" Client not authenticated"" )  ;      }     //  Send the ACCT command .      communication . send FTP Command ( ""ACCT "" + account )  ;      //  Gets the reply .      FTP Reply r = communication . read FTP Reply (  )  ;      //  Resets auto noop timer .      touch Auto Noop Timer (  )  ;      //  Evaluates the response .      if  ( !r . is Success Code (  )  )  {         throw new FTP Exception ( r )  ;      } }}"
5679,public float get Padding (  ) { return m Padding ; }
5680,"public static void execute Pending Transactions Allowing State Loss ( final  Fragment Manager fragment Manager ) {  Fragmentation Magician . hook State Saved ( fragment Manager, new  Runnable (  )  {     @ Override     public void run (  )  {         fragment Manager . execute Pending Transactions (  )  ;      } } )  ; }"
5681,public  Media Codec Info Builder set Is Software Only ( boolean is Software Only ) { this . is Software Only = is Software Only ;  return this ; }
5682,"protected void intercept Invoke Virtual Method (  Mutable Class mutable Class,  List Iterator< Abstract Insn Node> instructions,  Method Insn Node target Method ) { intercept Invoke Virtual Method Without Invoke Dynamic ( mutable Class, instructions, target Method )  ; }"
5683,public static  App Widget Provider Info Builder new Builder (  ) { return new  App Widget Provider Info Builder (  )  ; }
5684,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
5685,"public  Map< String,  String> get Device Info (  ) { return m Device Info ; }"
5686,public static _ Fields find By Thrift Id ( int field Id ) { switch ( field Id )  {     case // WAS_SUCCESSFUL     1:         return WAS_SUCCESSFUL ;      case // ERROR_MESSAGE     2:         return ERROR_MESSAGE ;      case // TYPE     10:         return TYPE ;      case // ANNOUNCEMENT_RESPONSE     19:         return ANNOUNCEMENT_RESPONSE ;      case // FETCH_RULE_KEY_LOGS_RESPONSE     26:         return FETCH_RULE_KEY_LOGS_RESPONSE ;      default:         return null ;  }}
5687,"public boolean start ( @ Nullable  Output Stream os ) { if  ( os == null )      return false ;  boolean ok = true ;  close Stream = false ;  out = os ;  try {     // header     write String ( ""GIF89a"" )  ;  } catch  ( IO Exception e )  {     ok = false ;  } return started = ok ; }"
5688,"public static  String encrypt Hmac SHA384 To String ( final byte [  ]  data, final byte [  ]  key ) { return  Utils Bridge . bytes2 Hex String ( encrypt Hmac SHA384 ( data, key )  )  ; }"
5689,"public static  Class<?> get Map Value Parameter Type (  Method Parameter method Param ) { return get Generic Parameter Type ( method Param,  Map . class, 1 )  ; }"
5690,"public  Result generate Workspace And Dependent Projects (  Listening Executor Service listening Executor Service )  throws IO Exception,  Interrupted Exception{ LOG . debug ( "" Generating workspace for target %s"", workspace Build Target )  ;   String workspace Name =  Xcode Workspace Config Description . get Workspace Name From Arg ( workspace Arguments )  ;   Path output Directory = workspace Build Target . get Cell Relative Base Path (  )  . get Path (  )  . to Path ( root Cell . get Filesystem (  )  . get File System (  )  )  ;   Workspace Generator workspace Generator = new  Workspace Generator ( root Cell . get Filesystem (  ) , workspace Name, output Directory )  ;   Immutable Map .  Builder< String,  Xcode Workspace Config Description Arg> scheme Configs Builder =  Immutable Map . builder (  )  ;   Immutable Set Multimap .  Builder< String,  Optional< Target Node<?>>> scheme Name To Src Target Node Builder =  Immutable Set Multimap . builder (  )  ;   Immutable Set Multimap .  Builder< String,  Target Node<?>> build For Test Nodes Builder =  Immutable Set Multimap . builder (  )  ;   Immutable Set Multimap .  Builder< String,  Target Node< Apple Test Description Arg>> tests Builder =  Immutable Set Multimap . builder (  )  ;  build Workspace Schemes ( project Graph, project Generator Options . should Include Tests (  ) , project Generator Options . should Include Dependencies Tests (  ) , workspace Name, workspace Arguments, scheme Configs Builder, scheme Name To Src Target Node Builder, build For Test Nodes Builder, tests Builder )  ;   Immutable Map< String,  Xcode Workspace Config Description Arg> scheme Configs = scheme Configs Builder . build (  )  ;   Immutable Set Multimap< String,  Optional< Target Node<?>>> scheme Name To Src Target Node = scheme Name To Src Target Node Builder . build (  )  ;   Immutable Set Multimap< String,  Target Node<?>> build For Test Nodes = build For Test Nodes Builder . build (  )  ;   Immutable Set Multimap< String,  Target Node< Apple Test Description Arg>> tests = tests Builder . build (  )  ;   Immutable Set< Build Target> targets In Required Projects =  Stream . concat ( scheme Name To Src Target Node . values (  )  . stream (  )  . flat Map (  Rich Stream::from ) , build For Test Nodes . values (  )  . stream (  )  )  . map (  Target Node::get Build Target )  . collect (  Immutable Set . to Immutable Set (  )  )  ;   Immutable Map .  Builder< Build Target, PBX Target> build Target To Pbx Target Map Builder =  Immutable Map . builder (  )  ;   Immutable Map .  Builder<PBX Target,  Path> target To Project Path Map Builder =  Immutable Map . builder (  )  ;  PBX Object GID Factory object Factory = new PBX Object GID Factory (  )  ;   Xcode Project Write Options xcode Project Write Options =  Xcode Project Write Options . of ( object Factory . create Project ( workspace Name ) , object Factory, output Directory )  ;  generate Project ( listening Executor Service, xcode Project Write Options, workspace Generator, targets In Required Projects, build Target To Pbx Target Map Builder, target To Project Path Map Builder )  ;  write Workspace Meta Data ( output Directory, workspace Name )  ;   Immutable Map< Build Target, PBX Target> build Target To PBX Target = build Target To Pbx Target Map Builder . build (  )  ;   Immutable Map<PBX Target,  Path> target To Project Path Map = target To Project Path Map Builder . build (  )  ;   Immutable Set Multimap< String, PBX Target> scheme Build For Test Node Targets =  Workspace And Project Generator . map From Scheme To PBX Project ( build For Test Nodes, build Target To PBX Target )  ;   Immutable Set Multimap< String, PBX Target> scheme Ungrouped Test Targets =  Workspace And Project Generator . map From Scheme To PBX Project ( tests, build Target To PBX Target )  ;  LOG . debug ( "" Generating schemes for all sub-projects . "" )  ;  write Workspace Schemes ( workspace Name, output Directory, scheme Configs, scheme Name To Src Target Node, scheme Build For Test Node Targets, scheme Ungrouped Test Targets, target To Project Path Map, build Target To PBX Target )  ;  required Build Targets Builder . add All ( get Modular Nodes To Generate (  )  )  ;   Path workspace Path = workspace Generator . write Workspace (  )  ;  return new  Result ( workspace Path, xcode Project Write Options . project (  ) , build Target To PBX Target )  ; }"
5691,"public static void send Error (  Http Servlet Request req,  Http Servlet Response res, int http Status )  throws IO Exception{ send Error ( req, res, http Status, null )  ; }"
5692,"public com . anychart . standalones .  Markers Factory z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
5693,public  List< Git Comment> get ( final int line ) {  List< Git Comment> line Comments = comments . get ( line )  ;  return line Comments != null ? line Comments :  Collections . empty List (  )  ; }
5694,public  Activity get Activity (  ) { return this ; }
5695,"public com . anychart . core . gantt . elements .  Progress Element stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5696,public void set Current Day (  Integer current Day ) { m Current Day = current Day ;  update Day Display (  )  ; }
5697,"public static  Menu Item Transition Builder transit (  String id, @ Non Null  Toolbar toolbar ) { return new  Menu Item Transition Builder ( id, toolbar )  ; }"
5698,"public com . anychart . charts .  Tree Map color Range (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Range ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5699,"public  Component get Table Cell Renderer Component ( J Table table,  Object value, boolean is Selected, boolean has Focus, int row, int column ) { if  ( is Selected )      set Background ( table . get Selection Background (  )  )  ;  else     set Background ( table . get Background (  )  )  ;  visible Row = row ;  return this ; }"
5700,public  Time Zone get Time Zone (  ) { return mock System Reader . get Time Zone (  )  ; }
5701,"public static void traverse (  Iterable<? extends  Node> initial Nodes,  Visitor< Node,  Runtime Exception> visitor ) { new  Static Breadth First Traversal<> ( initial Nodes, visitor )  . start (  )  ; }"
5702,"protected  Dir Cache Iterator get Dir Cache Iterator (  ) { if  ( state . dir Cache Tree >= 0 && state . walk != null )  {     return state . walk . get Tree ( state . dir Cache Tree,  Dir Cache Iterator . class )  ;  } return null ; }"
5703,"public com . anychart . charts .  Mekko line Marker (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Marker ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5704,"private void remove Listeners Of All Pending Cached Requests (  )  throws  Interrupted Exception{ synchronized  ( map Pending Request To Request Listener )  {     if  ( !map Pending Request To Request Listener . is Empty (  )  )  {         for  ( final  Cached Spice Request<?> cached Spice Request : map Pending Request To Request Listener . key Set (  )  )  {             final  Set< Request Listener<?>> set Request Listeners = map Pending Request To Request Listener . get ( cached Spice Request )  ;              if  ( set Request Listeners != null )  {                  Ln . d ( "" Removing listeners of pending request : "" + cached Spice Request . to String (  )  + "" : "" + set Request Listeners . size (  )  )  ;                  spice Service . dont Notify Request Listeners For Request ( cached Spice Request, set Request Listeners )  ;              }         }         map Pending Request To Request Listener . clear (  )  ;      } }  Ln . v ( "" Cleared listeners of all pending requests"" )  ; }"
5705,"public  Countly Config set Auto Tracking Exceptions (  Class [  ]  exceptions ) { if  ( exceptions != null )  {     for  (  Class exception : exceptions )  {         if  ( exception == null )  {             throw new  Illegal Argument Exception ( ""set Auto Tracking Exceptions (  )  does not accept 'null' activities"" )  ;          }     } } auto Tracking Exceptions = exceptions ;  return this ; }"
5706,"public static  Object Filter text (  String field,  String value ) { return new  Text Object Filter ( field, value )  ; }"
5707,public  String get Update State Attribution (  ) { return m Update State Attribution ; }
5708,"public com . anychart . core . stock . scrollerseries .  Spline min Point Length (  Number length ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Point Length ( %s )  ; "", length )  )  ;  return this ; }"
5709,"public com . anychart . core . resource . resourcelist .  Image Settings margin (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
5710,public  Line Number List get Line Numbers (  ) { return line Numbers ; }
5711,"public static void create Table (  Database db, boolean if Not Exists ) {  String constraint = if Not Exists ? ""IF NOT EXISTS "" : """" ;  db . exec SQL ( // ""CREATE TABLE "" + constraint + ""\""THREAD\""  ( "" + // 0: id ""\""_id\"" INTEGER PRIMARY KEY ,"" + // 1: entity ID ""\""ENTITY_ID\"" TEXT,"" + // 2: user Account ID ""\""USER_ACCOUNT_ID\"" TEXT,"" + // 3: creation Date ""\""CREATION_DATE\"" INTEGER,"" + // 4: type ""\""TYPE\"" INTEGER,"" + // 5: creator Id ""\""CREATOR_ID\"" INTEGER,"" + // 6: load Messages From ""\""LOAD_MESSAGES_FROM\"" INTEGER,"" + // 7: deleted ""\""DELETED\"" INTEGER,"" + // 8: draft ""\""DRAFT\"" TEXT,"" + // 9: can Delete Messages From ""\""CAN_DELETE_MESSAGES_FROM\"" INTEGER )  ; "" )  ; }"
5712,public int get Weight (  ) { return  ( m Weight ==  React Text Shadow Node . UNSET ? 0 : m Weight )  ; }
5713,"public static  String get Param Descriptor (  String decl ) { return decl . substring ( 0, decl . index Of ( ' ) ' )  + 1 )  ; }"
5714,public static int set Public ( int accflags ) { return  ( accflags & ~ ( PRIVATE | PROTECTED )  )  | PUBLIC ; }
5715,"public  Map< String,  Object> get Data ( @ Non Null  Server Timestamp Behavior server Timestamp Behavior ) { check Not Null ( server Timestamp Behavior, "" Provided server Timestamp Behavior value must not be null . "" )  ;   Map< String,  Object> result = super . get Data ( server Timestamp Behavior )  ;   Assert . hard Assert ( result != null, "" Data in a  Query Document Snapshot should be non-null"" )  ;  return result ; }"
5716,"public void log (  ) { final long nano Time =  Time Utils . nano Time (  )  ;  if  ( nano Time - start Time > 1000000000 )  /* 1,000,000,000ns == one second */ {     final int fps =  Gdx . graphics . get Frames Per Second (  )  ;      if  ( fps < bound )  {          Gdx . app . log ( ""FPS Logger"", ""fps: "" + fps )  ;          start Time = nano Time ;      } }}"
5717,"static void add Error (  Annotation Holder holder,  Spec Model Validation Error error ) { add Error ( holder, error,  Collections . empty List (  )  )  ; }"
5718,private boolean has Local Optional Binding Contribution (  Resolved Bindings resolved Bindings ) { if  ( resolved Bindings . contribution Bindings (  )  . stream (  )  . map (  Contribution Binding::kind )  . any Match ( is Equal ( OPTIONAL )  )  )  {     return !get Local Explicit Bindings ( key Factory . unwrap Optional ( resolved Bindings . key (  )  )  . get (  )  )  . is Empty (  )  ;  } else {     //  Foo on its own     return !get Optional Binding Declarations ( resolved Bindings . key (  )  )  . is Empty (  )  ;  }}
5719,"public com . anychart . charts .  Gantt full Screen (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . full Screen ( %s )  ; "", enabled )  )  ;  return this ; }"
5720,"public void measure In Window ( int react Tag,  Callback callback ) { m UI Implementation . measure In Window ( react Tag, callback )  ; }"
5721,"public com . anychart . standalones .  Data Grid row Selected Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
5722,public static int get Nav Bar Color ( @ Non Null final  Activity activity ) { return get Nav Bar Color ( activity . get Window (  )  )  ; }
5723,"private void merge Lo ( int base1, int len1, int base2, int len2 ) { if  ( DEBUG )      assert len1 > 0 && len2 > 0 && base1 + len1 == base2 ;  //  Copy first run into temp array //  For performance  Object [  ]  a = this . a ;   Object [  ]  tmp = ensure Capacity ( len1 )  ;   System . arraycopy ( a, base1, tmp, 0, len1 )  ;  //  Indexes into tmp array int cursor1 = 0 ;  //  Indexes int a int cursor2 = base2 ;  //  Indexes int a int dest = base1 ;  //  Move first element of second run and deal with degenerate cases a [ dest++ ]  = a [ cursor2++ ]  ;  if  ( --len2 == 0 )  {      System . arraycopy ( tmp, cursor1, a, dest, len1 )  ;      return ;  } if  ( len1 == 1 )  {      System . arraycopy ( a, cursor2, a, dest, len2 )  ;      //  Last elt of run 1 to end of merge     a [ dest + len2 ]  = tmp [ cursor1 ]  ;      return ;  } //  Use local variable for performance int min Gallop = this . min Gallop ;  outer: while  ( true )  {     //  Number of times in a row that first run won     int count1 = 0 ;      //  Number of times in a row that second run won     int count2 = 0 ;      /*			 *  Do the straightforward thing until  ( if ever )  one run starts winning consistently . 			 */     do {         if  ( DEBUG )              assert len1 > 1 && len2 > 0 ;          if  (  (  (  Comparable )  a [ cursor2 ]  )  . compare To ( tmp [ cursor1 ]  )  < 0 )  {             a [ dest++ ]  = a [ cursor2++ ]  ;              count2++ ;              count1 = 0 ;              if  ( --len2 == 0 )                  break outer ;          } else {             a [ dest++ ]  = tmp [ cursor1++ ]  ;              count1++ ;              count2 = 0 ;              if  ( --len1 == 1 )                  break outer ;          }     } while  (  ( count1 | count2 )  < min Gallop )  ;      /*			 *  One run is winning so consistently that galloping may be a huge win .   So try that, and continue galloping until  ( if			 * ever )  neither run appears to be winning consistently anymore . 			 */     do {         if  ( DEBUG )              assert len1 > 1 && len2 > 0 ;          count1 = gallop Right (  (  Comparable )  a [ cursor2 ] , tmp, cursor1, len1, 0 )  ;          if  ( count1 != 0 )  {              System . arraycopy ( tmp, cursor1, a, dest, count1 )  ;              dest += count1 ;              cursor1 += count1 ;              len1 -= count1 ;              if  ( // len1 == 1 || len1 == 0             len1 <= 1 )                  break outer ;          }         a [ dest++ ]  = a [ cursor2++ ]  ;          if  ( --len2 == 0 )              break outer ;          count2 = gallop Left (  (  Comparable )  tmp [ cursor1 ] , a, cursor2, len2, 0 )  ;          if  ( count2 != 0 )  {              System . arraycopy ( a, cursor2, a, dest, count2 )  ;              dest += count2 ;              cursor2 += count2 ;              len2 -= count2 ;              if  ( len2 == 0 )                  break outer ;          }         a [ dest++ ]  = tmp [ cursor1++ ]  ;          if  ( --len1 == 1 )              break outer ;          min Gallop-- ;      } while  ( count1 >= MIN_GALLOP | count2 >= MIN_GALLOP )  ;      if  ( min Gallop < 0 )          min Gallop = 0 ;      //  Penalize for leaving gallop mode     min Gallop += 2 ;  } //  End of ""outer"" loop //  Write back to field this . min Gallop = min Gallop < 1 ? 1 : min Gallop ;  if  ( len1 == 1 )  {     if  ( DEBUG )          assert len2 > 0 ;       System . arraycopy ( a, cursor2, a, dest, len2 )  ;      //  Last elt of run 1 to end of merge     a [ dest + len2 ]  = tmp [ cursor1 ]  ;  } else if  ( len1 == 0 )  {     throw new  Illegal Argument Exception ( "" Comparison method violates its general contract!"" )  ;  } else {     if  ( DEBUG )          assert len2 == 0 ;      if  ( DEBUG )          assert len1 > 1 ;       System . arraycopy ( tmp, cursor1, a, dest, len1 )  ;  }}"
5724,"public com . anychart . core .  Separate Chart margin (  Number value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
5725,"public int end Cache (  ) { if  ( current Cache == null )      throw new  Illegal State Exception ( ""begin Cache must be called before end Cache . "" )  ;   Cache cache = current Cache ;  int cache Count = mesh . get Vertices Buffer (  )  . position (  )  - cache . offset ;  if  ( cache . textures == null )  {     //  New cache .      cache . max Count = cache Count ;      cache . texture Count = textures . size ;      cache . textures = textures . to Array (  Texture . class )  ;      cache . counts = new int [ cache . texture Count ]  ;      for  ( int i = 0, n = counts . size ;  i < n ;  i++ )  cache . counts [ i ]  = counts . get ( i )  ;       (  (  Buffer )  mesh . get Vertices Buffer (  )  )  . flip (  )  ;  } else {     //  Redefine existing cache .      if  ( cache Count > cache . max Count )  {         throw new  Gdx Runtime Exception ( "" If a cache is not the last created, it cannot be redefined with more entries than when it was first created: "" + cache Count + ""  ( "" + cache . max Count + "" max ) "" )  ;      }     cache . texture Count = textures . size ;      if  ( cache . textures . length < cache . texture Count )          cache . textures = new  Texture [ cache . texture Count ]  ;      for  ( int i = 0, n = cache . texture Count ;  i < n ;  i++ )  cache . textures [ i ]  = textures . get ( i )  ;      if  ( cache . counts . length < cache . texture Count )          cache . counts = new int [ cache . texture Count ]  ;      for  ( int i = 0, n = cache . texture Count ;  i < n ;  i++ )  cache . counts [ i ]  = counts . get ( i )  ;       Float Buffer vertices = mesh . get Vertices Buffer (  )  ;       (  (  Buffer )  vertices )  . position ( 0 )  ;       Cache last Cache = caches . get ( caches . size - 1 )  ;       (  (  Buffer )  vertices )  . limit ( last Cache . offset + last Cache . max Count )  ;  } current Cache = null ;  textures . clear (  )  ;  counts . clear (  )  ;  return cache . id ; }"
5726,"public com . anychart . standalones .  Labels Factory padding (  String value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
5727,"public void fill To ( int to Index, long val ) { while  ( count < to Index )  add ( val )  ; }"
5728,"public com . anychart . core . stock . scrollerseries .  Range Area fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
5729,private void init Card (  ) { // Create a  Card  Google Now Stock Card card = new  Google Now Stock Card ( get Activity (  )  )  ;  // Set card in the card View card View =  (  Card View )  get Activity (  )  . find View By Id ( R . id . carddemo_ Google Now Stock )  ;  card View . set Card ( card )  ; }
5730,"private  Glyph get Glyph ( char c ) { char [  ]  chars = { c } ;   Glyph Vector vector = unicode Font . get Font (  )  . layout Glyph Vector (  Glyph Page . render Context, chars, 0, chars . length,  Font . LAYOUT_LEFT_TO_RIGHT )  ;   Rectangle bounds = vector . get Glyph Pixel Bounds ( 0,  Glyph Page . render Context, 0, 0 )  ;  return unicode Font . get Glyph ( vector . get Glyph Code ( 0 ) , c, bounds, vector, 0 )  ; }"
5731,"public com . anychart . core . stock . scrollerseries .  Discrete Base min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
5732,public boolean is Set ( _ Fields field ) { if  ( field == null )  {     throw new java . lang .  Illegal Argument Exception (  )  ;  } switch ( field )  { } throw new java . lang .  Illegal State Exception (  )  ; }
5733,"public com . anychart . core .  State Settings font Padding (  String padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Padding ( %s )  ; "", wrap Quotes ( padding )  )  )  ;  return this ; }"
5734,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
5735,public boolean on Intercept Touch Event (  Motion Event event ) { if  ( canvas Quad == null )  {     //  Not in VR mode so use standard behavior .      return super . on Intercept Touch Event ( event )  ;  } if  (  Activity Manager . is Running In Test Harness (  )  )  {     // is in VR .      return false ;  } // screen where this hidden view is attached .  if  ( event . get Source (  )  !=  Input Device . SOURCE_GAMEPAD )  {     //  Intercept and suppress touchscreen events so child buttons aren't clicked .      return true ;  } else {     //  Don't intercept SOURCE_GAMEPAD events .  on Touch Event will handle these .      return false ;  }}
5736,"public void set Field (  Mp4 Field Key field Key,  String value )  throws  Key Not Found Exception,  Field Data Invalid Exception{  Tag Field tagfield = create Field ( field Key, value )  ;  set Field ( tagfield )  ; }"
5737,public static  String get String Value (  Buck And Expression and Expression ) { return  Optional . of ( and Expression )  . map (  Buck And Expression::get Not Expression List )  . filter (  list -> list . size (  )  == 1 )  . map (  list -> list . get ( 0 )  )  . map (  Buck Psi Impl Util::get String Value )  . or Else ( null )  ; }
5738,"public final void smooth Scroll To ( int x, int y ) { smooth Scroll By ( x - m Scroll X, y - m Scroll Y )  ; }"
5739,public  List< String> order (  List< String> insertion Order ) { return insertion Order ; }
5740,long bit Size (  ) { return  ( long )  data . length (  )  *  Long . SIZE ; }
5741,"public com . anychart . core . gantt . elements .  Timeline Element stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5742,"public com . anychart . core . ui .  Separator margin (  Number space Or Top Or Top And Bottom,  String right Or Right And Left,  String bottom,  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", space Or Top Or Top And Bottom, wrap Quotes ( right Or Right And Left ) , wrap Quotes ( bottom ) , left )  )  ;  return this ; }"
5743,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
5744,"public com . anychart . charts .  Polar labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5745,void on Fetch (  Fetch V2 Request req )  throws  Service May Not Continue Exception{//  Do nothing by default}
5746,public com . facebook . buck . remoteexecution . proto .  Execution Engine Info Or Builder get Engine Info Or Builder (  ) { if  ( engine Info Builder_ != null )  {     return engine Info Builder_ . get Message Or Builder (  )  ;  } else {     return engine Info_ == null ? com . facebook . buck . remoteexecution . proto .  Execution Engine Info . get Default Instance (  )  : engine Info_ ;  }}
5747,public void set Show Candle Bar ( boolean show Candle Bar ) { m Show Candle Bar = show Candle Bar ; }
5748,"void add States (  Map< String,  Activity State> all States,  Hash Set< String> containers,  String prefix, int launch Mode, boolean translucent, int count ) {  String infix = get Infix ( launch Mode, translucent )  ;   Hash Map< String,  Activity State> states = m States . get ( infix )  ;  if  ( states == null )  {     states = new  Hash Map<> (  )  ;      m States . put ( infix, states )  ;  } for  ( int i = 0 ;  i < count ;  i++ )  {      String key = prefix + infix + i ;      // 只有开启“详细日志”时才输出每一个坑位的信息，防止刷屏     if  (  Re Plugin . get Config (  )  . is Print Detail Log (  )  )  {          Log Debug . d ( TAG, "" Launch Mode States . add ( "" + key + "" ) "" )  ;      }      Activity State state = new  Activity State ( key )  ;      states . put ( key, state )  ;      all States . put ( key, state )  ;      containers . add ( key )  ;  }}"
5749,"public com . anychart . core . ui .  Paginator margin (  String [  ]  space Or Top Or Top And Bottom,  Number right Or Right And Left,  String bottom,  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( space Or Top Or Top And Bottom ) , right Or Right And Left, wrap Quotes ( bottom ) , left )  )  ;  return this ; }"
5750,"public  Async Operation delete In Tx (  Class<E> entity Class,  Iterable<E> entities, int flags ) { return enque Entity Operation (  Operation Type .  Delete In Tx Iterable, entity Class, entities, flags )  ; }"
5751,"public  Optional< String> get Flavor (  ) { return  Optional . of ( ""windows-x86_64"" )  ; }"
5752,"public void keep ( int pos, int cnt ) { before Add ( cache . get Entry ( pos )  )  ;  fast Keep ( pos, cnt )  ; }"
5753,"public static void add ( @ Non Null final  Fragment Manager fm, @ Non Null final  List< Fragment> adds, @ Id Res final int container Id, final int show Index ) { add ( fm, adds . to Array ( new  Fragment [ 0 ]  ) , container Id, null, show Index )  ; }"
5754,"public boolean remove User ( int user Handle ) { check Manage Users Permission ( "" Only the system can remove users"" )  ;  final V User Info user ;  synchronized  ( m Packages Lock )  {     user = m Users . get ( user Handle )  ;      if  ( user Handle == 0 || user == null )  {         return false ;      }     m Removing User Ids . add ( user Handle )  ;      //  Set this to a partially created user, so that the user will be purged     // on next startup, in case the runtime stops now before stopping and     // removing the user completely .      user . partial = true ;      write User Locked ( user )  ;  } if  ( DBG )      V Log . i ( LOG_TAG, "" Stopping user "" + user Handle )  ;  int res = V Activity Manager Service . get (  )  . stop User ( user Handle, new I Stop User Callback .  Stub (  )  {     @ Override     public void user Stopped ( int user Id )  {         finish Remove User ( user Id )  ;      }     @ Override     public void user Stop Aborted ( int user Id )  {     } } )  ;  return res ==  Activity Manager Compat . USER_OP_SUCCESS ; }"
5755,"public  Builder<K, V> put ( K key, V value ) { super . put ( key, value )  ;  return this ; }"
5756,"public  Test Field Prop Callback Prop View Model_ on Bind (  On Model Bound Listener< Test Field Prop Callback Prop View Model_,  Test Field Prop Callback Prop View> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
5757,public  List< Requested Claim> get Access Token Claims Requested (  ) { return m Access Token Claims Requested ; }
5758,public  Future<?> submit Transaction (  Runnable task ) {  Future<?> future = super . submit ( new  Bg Priority Runnable ( task )  )  ;  return future ; }
5759,"public  String get First (  String generic Key ) {  Field Key matching Key =  Field Key . value Of ( generic Key )  ;  if  ( matching Key != null )  {     return get First ( matching Key )  ;  } else {     return """" ;  }}"
5760,"protected final void set0 ( int n,  Object obj ) { throw If Immutable (  )  ;  try {     arr [ n ]  = obj ;  } catch  (  Array Index Out Of Bounds Exception ex )  {     //  Translate the exception .      throw Index ( n )  ;  }}"
5761,"public final void set Pan Limit ( int pan Limit ) { if  ( !VALID_PAN_LIMITS . contains ( pan Limit )  )  {     throw new  Illegal Argument Exception ( "" Invalid pan limit: "" + pan Limit )  ;  } this . pan Limit = pan Limit ;  if  ( is Ready (  )  )  {     fit To Bounds ( true )  ;      invalidate (  )  ;  }}"
5762,public int get Start Pc (  ) { return start Pc ; }
5763,"private void draw Lane To Child ( final int commit Index,  Plot Commit child,  Plot Lane lane To Continue ) { for  ( int r = commit Index - 1 ;  r >= 0 ;  r-- )  {     final  Plot Commit r Obj = get ( r )  ;      if  ( r Obj == child )          break ;      if  ( r Obj != null )          r Obj . add Passing Lane ( lane To Continue )  ;  }}"
5764,"private static  Linked List< Diff> diff_line Mode (  String text1,  String text2 ) { //  Scan the text on a line-by-line basis first .   Lines To Chars Result a = diff_lines To Chars ( text1, text2 )  ;  text1 = a . chars1 ;  text2 = a . chars2 ;   List< String> linearray = a . line Array ;   Linked List< Diff> diffs = diff_main ( text1, text2, false )  ;  //  Convert the diff back to original text .  diff_chars To Lines ( diffs, linearray )  ;  //  Eliminate freak matches  ( e . g .  blank lines )  diff_cleanup Semantic ( diffs )  ;  //  Rediff any replacement blocks, this time character-by-character .  //  Add a dummy entry at the end .  diffs . add ( new  Diff (  Operation . EQUAL, """" )  )  ;  int count_delete = 0 ;  int count_insert = 0 ;   String text_delete = """" ;   String text_insert = """" ;   List Iterator< Diff> pointer = diffs . list Iterator (  )  ;   Diff this Diff = pointer . next (  )  ;  while  ( this Diff != null )  {     switch ( this Diff . operation )  {         case INSERT:             count_insert++ ;              text_insert += this Diff . text ;              break ;          case DELETE:             count_delete++ ;              text_delete += this Diff . text ;              break ;          case EQUAL:             //  Upon reaching an equality, check for prior redundancies .              if  ( count_delete >= 1 && count_insert >= 1 )  {                 //  Delete the offending records and add the merged ones .                  pointer . previous (  )  ;                  for  ( int j = 0 ;  j < count_delete + count_insert ;  j++ )  {                     pointer . previous (  )  ;                      pointer . remove (  )  ;                  }                 for  (  Diff sub Diff : diff_main ( text_delete, text_insert, false )  )  {                     pointer . add ( sub Diff )  ;                  }             }             count_insert = 0 ;              count_delete = 0 ;              text_delete = """" ;              text_insert = """" ;              break ;      }     this Diff = pointer . has Next (  )  ? pointer . next (  )  : null ;  } //  Remove the dummy entry at the end .  diffs . remove Last (  )  ;  return diffs ; }"
5765,"public com . anychart . standalones .  Markers Factory position (  String position ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . position ( %s )  ; "", wrap Quotes ( position )  )  )  ;  return this ; }"
5766,"private static boolean set Status Bar Light Mode (  Activity activity, @ Status Bar Type int type ) { if  ( type == STATUSBAR_TYPE_MIUI )  {     return MIUI Set Status Bar Light Mode ( activity . get Window (  ) , true )  ;  } else if  ( type == STATUSBAR_TYPE_FLYME )  {     return  Flyme Set Status Bar Light Mode ( activity . get Window (  ) , true )  ;  } else if  ( type == STATUSBAR_TYPE_ANDROID6 )  {     return  Android6 Set Status Bar Light Mode ( activity . get Window (  ) , true )  ;  } return false ; }"
5767,"private int measure Height ( int measure Spec ) { int result = 0 ;  int spec Mode =  Measure Spec . get Mode ( measure Spec )  ;  int spec Size =  Measure Spec . get Size ( measure Spec )  ;  //  We were told how big to be if  ( spec Mode ==  Measure Spec . EXACTLY )  {     result = spec Size ;  } else //  Measure the height {     result =  ( int )   ( 2 * m Radius + get Padding Top (  )  + get Padding Bottom (  )  + 1 )  ;      // measure Spec     if  ( spec Mode ==  Measure Spec . AT_MOST )  {         result =  Math . min ( result, spec Size )  ;      } } return result ; }"
5768,"public  Item_ Selector select From Item (  ) { return new  Item_ Selector ( connection,  Item_ Schema . INSTANCE )  ; }"
5769,public void cancel Prepare (  String tag ) { final  Component Tree Holder holder = m Cache . remove ( tag )  ;  if  ( holder == null || holder . get Component Tree (  )  == null )  {     return ;  } holder . get Component Tree (  )  . cancel Layout And Release Tree (  )  ; }
5770,"protected  List< Usage Stats> query Usage Stats ( int interval Type, long begin Time, long end Time ) {  List< Usage Stats> results = new  Array List<> (  )  ;   Range< Long> query Range =  Range . closed ( begin Time, end Time )  ;  for  (  Usage Stats stats : usage Stats By Interval Type . get ( interval Type )  )  {      Range< Long> stats Range =  Range . closed ( stats . get First Time Stamp (  ) , stats . get Last Time Stamp (  )  )  ;      if  ( query Range . is Connected ( stats Range )  )  {         results . add ( stats )  ;      } } return results ; }"
5771,"public final  Fluent Future<V> with Timeout ( long timeout,  Time Unit unit,  Scheduled Executor Service scheduled Executor ) { return  (  Fluent Future<V> )   Futures . with Timeout ( this, timeout, unit, scheduled Executor )  ; }"
5772,"private  Mutation Batch decode Inline Mutation Batch ( int batch Id, byte [  ]  bytes ) { try {     if  ( bytes . length < BLOB_MAX_INLINE_LENGTH )  {         return serializer . decode Mutation Batch ( com . google . firebase . firestore . proto .  Write Batch . parse From ( bytes )  )  ;      }      Blob Accumulator accumulator = new  Blob Accumulator ( bytes )  ;      while  ( accumulator . more )  {         //  As we read in chunks the start of the next chunk should be the total accumulated length         // plus 1  ( since SUBSTR (  )  counts from 1 )  .   The second argument is not adjusted because it's         // the length of the chunk, not the end index .          int start = accumulator . num Chunks (  )  * BLOB_MAX_INLINE_LENGTH + 1 ;          db . query ( ""SELECT SUBSTR ( mutations, ?, ? )  FROM mutations WHERE uid = ? AND batch_id = ?"" )  . binding ( start, BLOB_MAX_INLINE_LENGTH, uid, batch Id )  . first ( accumulator )  ;      }      Byte String blob = accumulator . result (  )  ;      return serializer . decode Mutation Batch ( com . google . firebase . firestore . proto .  Write Batch . parse From ( blob )  )  ;  } catch  (  Invalid Protocol Buffer Exception e )  {     throw fail ( "" Mutation Batch failed to parse: %s"", e )  ;  }}"
5773,protected void cleanup (  ) { this . dead = true ;  this . overflow = null ;  this . header Buffer = null ;  this . expect Buffer = null ;  this . expect Handler = null ;  this . unfragmented Buffer Pool = null ;  this . fragmented Buffer Pool = null ;  this . state = null ;  this . current Message = null ; /*  this . onerror = null ;   this . ontext = null ;   this . onbinary = null ;   this . onclose = null ;   this . onping = null ;   this . onpong = null ; */}
5774,public void set In Multi Window Mode ( boolean value ) { in Multi Window Mode = value ; }
5775,public static  Rev Filter has Any (  Rev Flag .  .  .  a ) { final  Rev Flag Set set = new  Rev Flag Set (  )  ;  set . add All (  Arrays . as List ( a )  )  ;  return new  Has Any ( set )  ; }
5776,"public int add Fieldref Info ( int class Info, int name And Type Info ) { return add Item ( new  Fieldref Info ( class Info, name And Type Info, num Of Items )  )  ; }"
5777,"public com . anychart . charts .  Mekko min Labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5778,public final void await Running (  Duration timeout )  throws  Timeout Exception{  Service . super . await Running ( timeout )  ; }
5779,"public void insert Node Into (  Mutable Tree Node new Child,  Mutable Tree Node parent, int index ) { parent . insert ( new Child, index )  ;  int [  ]  new Indexs = new int [ 1 ]  ;  new Indexs [ 0 ]  = index ;  nodes Were Inserted ( parent, new Indexs )  ; }"
5780,public  Yoga Node JNI Base get Owner (  ) { return m Owner ; }
5781,"static I Binder get Plugin Service (  String plugin Name,  String service Name, int pid, I Binder death Monitor )  throws  Remote Exception{  Plugin Service Record pr ;  synchronized  ( s Record Map )  {     final  String key = generate Map Key ( plugin Name, service Name )  ;      pr = s Record Map . get ( key )  ;      if  ( pr != null && !pr . is Service Alive (  )  )  {         pr = null ;      }     if  ( pr == null )  {         pr = new  Plugin Service Record ( plugin Name, service Name )  ;          s Record Map . put ( key, pr )  ;      } } return pr . get Service ( pid, death Monitor )  ; }"
5782,"public void max Font Size (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Font Size (  )  ; "" )  ; }"
5783,public UR Iish set Path (  String n ) { final UR Iish r = new UR Iish ( this )  ;  r . path = n ;  r . raw Path = n ;  return r ; }
5784,public static  Immutable Set< Build Target> convert (  Immutable Set< Unconfigured Build Target> build Targets ) { return build Targets . stream (  )  . map (  Configuration Build Targets::convert )  . collect (  Immutable Set . to Immutable Set (  )  )  ; }
5785,"public void set Min And Max Progress ( @ Float Range ( from = 0f, to = 1f )  float min Progress, @ Float Range ( from = 0f, to = 1f )  float max Progress ) { lottie Drawable . set Min And Max Progress ( min Progress, max Progress )  ; }"
5786,"public boolean try Dispatch Mount Items (  ) { // to execute anything out-of-order .  if  ( m In Dispatch )  {     return false ;  } final boolean did Dispatch Items ;  try {     did Dispatch Items = dispatch Mount Items (  )  ;  } catch  (  Throwable e )  {     m Re Dispatch Counter = 0 ;      throw e ;  } finally {     //  Clean up after running dispatch Mount Items - even if an exception was thrown     m In Dispatch = false ;  } m Item Dispatch Listener . did Dispatch Mount Items (  )  ;  //  Decide if we want to try reentering if  ( m Re Dispatch Counter < 10 && did Dispatch Items )  {     //  Executing twice in a row is normal .   Only log after that point .      if  ( m Re Dispatch Counter > 2 )  {          React Soft Exception . log Soft Exception ( TAG, new  React No Crash Soft Exception ( "" Re-dispatched "" + m Re Dispatch Counter + "" times .   This indicates set State  ( ? )  is likely being called too many times during mounting . "" )  )  ;      }     m Re Dispatch Counter++ ;      try Dispatch Mount Items (  )  ;  } m Re Dispatch Counter = 0 ;  return did Dispatch Items ; }"
5787,"Weak Value Reference<K, V, E> get Weak Value Reference For Testing (  Internal Entry<K, V, ?> entry ) { throw new  Assertion Error (  )  ; }"
5788,public  List< Application Key> get App Keys (  ) { return  Collections . unmodifiable List ( app Keys )  ; }
5789,public void set Button Radius ( int button Radius ) { if  ( this . button Radius == button Radius )      return ;  this . button Radius = button Radius ;  init Button (  )  ;  to Layout (  )  ; }
5790,public  Result<T> if Absent Failure Send To ( @ Non Null final  Receiver<? super  Throwable> receiver ) { if  ( failure == ABSENT_THROWABLE )  {     receiver . accept ( failure )  ;  } return this ; }
5791,"public com . anychart . core . stock . scrollerseries .  Spline point Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . point Width ( %s )  ; "", width )  )  ;  return this ; }"
5792,protected void on Error View Clicked (  ) { load Data ( false )  ; }
5793,public static  String escape Json For String Embedding (  String input ) {  String Builder builder = new  String Builder ( input . length (  )  )  ;  for  ( int i = 0 ;  i < input . length (  )  ;  i++ )  {     char c = input . char At ( i )  ;      if  ( c > 0x7f || OUTPUT_ESCAPES [ c ]  == 0 )  {         builder . append ( c )  ;      } else if  ( OUTPUT_ESCAPES [ c ]  == -1 )  {         builder . append ( '\\' )  . append ( 'u' )  . append ( '0' )  . append ( '0' )  ;          if  ( c < 0x10 )  {             builder . append ( '0' )  ;          }         builder . append (  Integer . to Hex String ( c )  )  ;      } else {         builder . append ( '\\' )  . append (  ( char )  OUTPUT_ESCAPES [ c ]  )  ;      } } return builder . to String (  )  ; }
5794,"public void get Output (  Short Buffer buffer ) { int frames To Read =  Math . min ( buffer . remaining (  )  / channel Count, output Frame Count )  ;  buffer . put ( output Buffer, 0, frames To Read * channel Count )  ;  output Frame Count -= frames To Read ;   System . arraycopy ( output Buffer, frames To Read * channel Count, output Buffer, 0, output Frame Count * channel Count )  ; }"
5795,"private synchronized void rebuild Journal (  )  throws IO Exception{ if  ( journal Writer != null )  {     journal Writer . close (  )  ;  }  Writer writer = new  Buffered Writer ( new  Output Stream Writer ( new  File Output Stream ( journal File Tmp ) ,  Util . US_ASCII )  )  ;  try {     writer . write ( MAGIC )  ;      writer . write ( ""\n"" )  ;      writer . write ( VERSION_1 )  ;      writer . write ( ""\n"" )  ;      writer . write (  Integer . to String ( app Version )  )  ;      writer . write ( ""\n"" )  ;      writer . write (  Integer . to String ( value Count )  )  ;      writer . write ( ""\n"" )  ;      writer . write ( ""\n"" )  ;      for  (  Entry entry : lru Entries . values (  )  )  {         if  ( entry . current Editor != null )  {             writer . write ( DIRTY + ' ' + entry . key + '\n' )  ;          } else {             writer . write ( CLEAN + ' ' + entry . key + entry . get Lengths (  )  + '\n' )  ;          }     } } finally {     writer . close (  )  ;  } if  ( journal File . exists (  )  )  {     rename To ( journal File, journal File Backup, true )  ;  } rename To ( journal File Tmp, journal File, false )  ;  journal File Backup . delete (  )  ;  journal Writer = new  Buffered Writer ( new  Output Stream Writer ( new  File Output Stream ( journal File, true ) ,  Util . US_ASCII )  )  ; }"
5796,"public  Path get Lfs Tmp Dir (  ) { if  ( tmp Dir == null )  {     //$NON-NLS-1$     tmp Dir = root . resolve ( ""tmp"" )  ;  } return tmp Dir ; }"
5797,"private void update Media Session ( final  String what ) { int play State = m Is Supposed To Be Playing ?  Playback State Compat . STATE_PLAYING :  Playback State Compat . STATE_PAUSED ;  if  ( what . equals ( PLAYSTATE_CHANGED )  || what . equals ( POSITION_CHANGED )  )  {     //播放状态改变时     if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . LOLLIPOP )  {         m Session . set Playback State ( new  Playback State Compat .  Builder (  )  . set State ( play State, position (  ) , 1 . 0f )  . set Actions (  Playback State Compat . ACTION_PLAY |  Playback State Compat . ACTION_PAUSE |  Playback State Compat . ACTION_PLAY_PAUSE |  Playback State Compat . ACTION_SKIP_TO_NEXT |  Playback State Compat . ACTION_SKIP_TO_PREVIOUS )  . build (  )  )  ;      } } else if  ( what . equals ( META_CHANGED )  || what . equals ( QUEUE_CHANGED )  )  {     //当前播放歌曲的信息或者播放队列改变      Bitmap album Art =  Image Loader . get Instance (  )  . load Image Sync (  Listener Util . get Album Art Uri ( get Album Id (  )  )  . to String (  )  )  ;      if  ( album Art != null )  {          Bitmap .  Config config = album Art . get Config (  )  ;          if  ( config == null )  {             config =  Bitmap .  Config . ARGB_8888 ;          }         album Art = album Art . copy ( config, false )  ;      }     if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . LOLLIPOP )  {         m Session . set Metadata ( new  Media Metadata Compat .  Builder (  )  . put String (  Media Metadata Compat . METADATA_KEY_ARTIST, get Artist Name (  )  )  . put String (  Media Metadata Compat . METADATA_KEY_ALBUM_ARTIST, get Album Artist Name (  )  )  . put String (  Media Metadata Compat . METADATA_KEY_ALBUM, get Album Name (  )  )  . put String (  Media Metadata Compat . METADATA_KEY_TITLE, get Track Name (  )  )  . put Long (  Media Metadata Compat . METADATA_KEY_DURATION, duration (  )  )  . put Long (  Media Metadata Compat . METADATA_KEY_TRACK_NUMBER, get Queue Position (  )  + 1 )  . put Long (  Media Metadata Compat . METADATA_KEY_NUM_TRACKS, get Queue (  )  . length )  . put String (  Media Metadata Compat . METADATA_KEY_GENRE, get Genre Name (  )  )  . put Bitmap (  Media Metadata Compat . METADATA_KEY_ALBUM_ART, m Show Album Art On Lockscreen ? album Art : null )  . build (  )  )  ;          m Session . set Playback State ( new  Playback State Compat .  Builder (  )  . set State ( play State, position (  ) , 1 . 0f )  . set Actions (  Playback State Compat . ACTION_PLAY |  Playback State Compat . ACTION_PAUSE |  Playback State Compat . ACTION_PLAY_PAUSE |  Playback State Compat . ACTION_SKIP_TO_NEXT |  Playback State Compat . ACTION_SKIP_TO_PREVIOUS )  . build (  )  )  ;      } }}"
5798,"public void set Comment (  String comment ) { params . put ( ""comment"", comment )  ; }"
5799,public static void initialize ( @ Non Null final  Lottie Config lottie Config ) { L . set Fetcher ( lottie Config . network Fetcher )  ;  L . set Cache Provider ( lottie Config . cache Provider )  ;  L . set Trace Enabled ( lottie Config . enable Systrace Markers )  ; }
5800,"public com . anychart . charts .  Sunburst stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5801,"private static void run Extensive Merger Test (  Merger merger )  throws  Interrupted Exception{ int input Count = new  Test Future Batch (  )  . all Futures . size (  )  ;  for  ( int i = 0 ;  i < input Count ;  i++ )  {     for  ( int j = 0 ;  j < input Count ;  j++ )  {         for  ( boolean i Before J : new boolean [  ]  { true, false } )  {              Test Future Batch inputs = new  Test Future Batch (  )  ;               Listenable Future< String> i Future = inputs . all Futures . get ( i )  . future ;               Listenable Future< String> j Future = inputs . all Futures . get ( j )  . future ;               Listenable Future< List< String>> future = merger . merged ( i Future, j Future )  ;              //  Test timed get before we've completed any delayed futures .              try {                  List< String> result = future . get ( 0, MILLISECONDS )  ;                  assert True ( "" Got "" + result, as List ( ""a"", null )  . contains All ( result )  )  ;              } catch  (  Cancellation Exception e )  {                 assert True ( merger ==  Merger . all Merger )  ;                  inputs . assert Has Immediate Cancel ( i Future, j Future, e )  ;              } catch  (  Execution Exception e )  {                 assert True ( merger ==  Merger . all Merger )  ;                  inputs . assert Has Immediate Failure ( i Future, j Future, e )  ;              } catch  (  Timeout Exception e )  {                 inputs . assert Has Delayed ( i Future, j Future, e )  ;              }             //  Same tests with pseudo Timed Get .              try {                  List< String> result = conditional Pseudo Timed Get Uninterruptibly ( inputs, i Future, j Future, future, 20, MILLISECONDS )  ;                  assert True ( "" Got "" + result, as List ( ""a"", null )  . contains All ( result )  )  ;              } catch  (  Cancellation Exception e )  {                 assert True ( merger ==  Merger . all Merger )  ;                  inputs . assert Has Immediate Cancel ( i Future, j Future, e )  ;              } catch  (  Execution Exception e )  {                 assert True ( merger ==  Merger . all Merger )  ;                  inputs . assert Has Immediate Failure ( i Future, j Future, e )  ;              } catch  (  Timeout Exception e )  {                 inputs . assert Has Delayed ( i Future, j Future, e )  ;              }             //  Finish the two futures in the currently specified order:             inputs . all Futures . get ( i Before J ? i : j )  . finisher . run (  )  ;              inputs . all Futures . get ( i Before J ? j : i )  . finisher . run (  )  ;              //  Test untimed get now that we've completed any delayed futures .              try {                  List< String> result = get Done ( future )  ;                  assert True ( "" Got "" + result, as List ( ""a"", ""b"", null )  . contains All ( result )  )  ;              } catch  (  Cancellation Exception e )  {                 assert True ( merger ==  Merger . all Merger )  ;                  inputs . assert Has Cancel ( i Future, j Future, e )  ;              } catch  (  Execution Exception e )  {                 assert True ( merger ==  Merger . all Merger )  ;                  inputs . assert Has Failure ( i Future, j Future, e )  ;              }         }     } }}"
5802,"public void write (  Pack Bitmap Index Builder bitmaps, byte [  ]  pack Data Checksum )  throws IO Exception{ if  ( bitmaps == null || pack Data Checksum . length != 20 )      throw new  Illegal State Exception (  )  ;  write Header ( bitmaps . get Options (  ) , bitmaps . get Bitmap Count (  ) , pack Data Checksum )  ;  write Body ( bitmaps )  ;  write Footer (  )  ;  out . flush (  )  ; }"
5803,public void set Photo View Attacher (  Photo View Attacher new Photo View Attacher ) { this . photo View Attacher = new Photo View Attacher ; }
5804,"public void layout (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . layout (  )  ; "" )  ; }"
5805,"public com . anychart . core . utils .  Map Interactivity copy Format (  String format Function ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . copy Format ( %s )  ; "", wrap Quotes ( format Function )  )  )  ;  return this ; }"
5806,"public com . anychart . standalones .  Resource Timeline row Even Fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Even Fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
5807,"public static KJDB create (  Context context,  String db Name, boolean is Debug, int db Version,  Db Update Listener db Update Listener ) {  Dao Config config = new  Dao Config (  )  ;  config . set Context ( context )  ;  config . set Db Name ( db Name )  ;  config . set Debug ( is Debug )  ;  config . set Db Version ( db Version )  ;  config . set Db Update Listener ( db Update Listener )  ;  return create ( config )  ; }"
5808,"public void acquire Token (  Activity activity,  String resource,  String client Id, @ Nullable  String redirect Uri, @ Nullable  String login Hint, @ Nullable  Prompt Behavior prompt, @ Nullable  String extra Query Parameters,  Authentication Callback< Authentication Result> callback ) { acquire Token ( resource, client Id, redirect Uri, login Hint, prompt, extra Query Parameters, null, callback,  Event Strings . ACQUIRE_TOKEN_5, wrap Activity ( activity ) , false )  ; }"
5809,"public  Ignore Require Hash Code View Model_ click Listener ( @ Non Null  View .  On Click Listener click Listener ) { if  ( click Listener == null )  {     throw new  Illegal Argument Exception ( ""click Listener cannot be null"" )  ;  } assigned Attributes_epoxy Generated Model . set ( 0 )  ;  on Mutation (  )  ;  this . click Listener_ On Click Listener = click Listener ;  return this ; }"
5810,"public static float to Pixel From SP ( float value, float max Font Scale ) {  Display Metrics display Metrics =  Display Metrics Holder . get Window Display Metrics (  )  ;  float scaled Density = display Metrics . scaled Density ;  float current Font Scale = scaled Density / display Metrics . density ;  if  ( max Font Scale >= 1 && max Font Scale < current Font Scale )  {     scaled Density = display Metrics . density * max Font Scale ;  } return value * scaled Density ; }"
5811,"private void set Left Adapter (  ) {  Animation Adapter anim Card Array Adapter = new  Swing Left In Animation Adapter ( m Card Array Adapter )  ;  set Common Animation ( anim Card Array Adapter )  ;  anim Card Array Adapter . set Abs List View ( staggered View )  ;  staggered View . set External Adapter ( anim Card Array Adapter, m Card Array Adapter )  ; }"
5812,"public  Builder set Client Id ( @ Non Null  String client Id ) { m Client Id = check Not Empty ( client Id, ""client ID cannot be null or empty"" )  ;  return this ; }"
5813,public I Support Fragment get Top Fragment (  ) { return  Support Helper . get Top Fragment ( get Fragment Manager (  )  )  ; }
5814,"public static void replace ( @ Non Null final  Fragment src Fragment, @ Non Null final  Fragment dest Fragment, final boolean is Add Stack, final  View .  .  .  shared Elements ) { replace ( src Fragment, dest Fragment, null, is Add Stack, shared Elements )  ; }"
5815,"static boolean should Measure Item For Size ( int width Spec, int height Spec, int scroll Direction, boolean can Remeasure ) { final boolean can Use Size Spec = scroll Direction == VERTICAL ?  Size Spec . get Mode ( width Spec )  ==  Size Spec . EXACTLY :  Size Spec . get Mode ( height Spec )  ==  Size Spec . EXACTLY ;  return !can Use Size Spec && can Remeasure ; }"
5816,"public static  Function< Item,  Item> set Field (  String field To Set,  Function< Item, T Value> field Value Computer ) { return new  Field Setter<> ( field To Set, field Value Computer )  ; }"
5817,"public com . anychart . core . axes .  Circular Ticks stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
5818,"public void max Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Width (  )  ; "" )  ; }"
5819,"public com . anychart . charts .  Tag Cloud z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
5820,private void change Card3 (  ) { card3 . set Inner Layout ( R . layout . carddemo_suggested_inner_content )  ;  card3 . force = true ;  card View3 . replace Card ( card3 )  ; }
5821,"protected  Value Node get Input (  String name ) { final  Value Node input = get Input Unsafe ( name )  ;  if  ( input == null )  {     throw new  Runtime Exception ( "" Tried to get non-existent input '"" + name + ""' .   Node only has these inputs: "" + build Debug Inputs String (  )  )  ;  } return input ; }"
5822,"public static float get Float ( @ Non Null final  String key, @ Non Null final SP Utils sp Utils ) { return sp Utils . get Float ( key )  ; }"
5823,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
5824,public static void set Skip SSL Chain ( boolean skip SSL Chain ) { s Skip SSL Chain = skip SSL Chain ; }
5825,"public void align Maximum (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . align Maximum (  )  ; "" )  ; }"
5826,"public  Attribute Info copy (  Const Pool new Cp,  Map< String,  String> classnames ) { byte [  ]  src = get (  )  ;  byte [  ]  dest = new byte [ src . length ]  ;   Const Pool cp = get Const Pool (  )  ;   Inner Classes Attribute attr = new  Inner Classes Attribute ( new Cp, dest )  ;  int n =  Byte Array . read U16bit ( src, 0 )  ;   Byte Array . write16bit ( n, dest, 0 )  ;  int j = 2 ;  for  ( int i = 0 ;  i < n ;  ++i )  {     int inner Class =  Byte Array . read U16bit ( src, j )  ;      int outer Class =  Byte Array . read U16bit ( src, j + 2 )  ;      int inner Name =  Byte Array . read U16bit ( src, j + 4 )  ;      int inner Access =  Byte Array . read U16bit ( src, j + 6 )  ;      if  ( inner Class != 0 )          inner Class = cp . copy ( inner Class, new Cp, classnames )  ;       Byte Array . write16bit ( inner Class, dest, j )  ;      if  ( outer Class != 0 )          outer Class = cp . copy ( outer Class, new Cp, classnames )  ;       Byte Array . write16bit ( outer Class, dest, j + 2 )  ;      if  ( inner Name != 0 )          inner Name = cp . copy ( inner Name, new Cp, classnames )  ;       Byte Array . write16bit ( inner Name, dest, j + 4 )  ;       Byte Array . write16bit ( inner Access, dest, j + 6 )  ;      j += 8 ;  } return attr ; }"
5827,"public com . anychart . charts .  Sparkline min Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
5828,"public com . anychart . charts .  Cartesian3d select Marquee Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
5829,protected void on Attached To Window (  ) { super . on Attached To Window (  )  ;  if  ( is Visible (  )  )  {     resume Presenter (  )  ;  }}
5830,"private static  Service Method Adapter Info parse Service Method Adapter Info (  Method method ) {  Type [  ]  generic Parameter Types = method . get Generic Parameter Types (  )  ;  if  ( generic Parameter Types . length != 0 )  {      Type last Parameter Type = generic Parameter Types [ generic Parameter Types . length - 1 ]  ;      if  ( last Parameter Type instanceof  Parameterized Type )  {          Parameterized Type parameterized Last Parameter Type =  (  Parameterized Type )  last Parameter Type ;          try {             if  ( parameterized Last Parameter Type . get Raw Type (  )  ==  Continuation . class )  {                  Type result Type = parameterized Last Parameter Type . get Actual Type Arguments (  )  [ 0 ]  ;                  if  ( result Type instanceof  Wildcard Type )  {                     result Type =  (  (  Wildcard Type )  result Type )  . get Lower Bounds (  )  [ 0 ]  ;                  }                 if  ( result Type instanceof  Parameterized Type )  {                      Parameterized Type parameterized Result Type =  (  Parameterized Type )  result Type ;                      if  ( parameterized Result Type . get Raw Type (  )  ==  Response . class )  {                          Type body Type = parameterized Result Type . get Actual Type Arguments (  )  [ 0 ]  ;                           Type call Type = new  Call Parameterized Type Impl ( body Type )  ;                          return new  Service Method Adapter Info ( true, true, call Type )  ;                      }                 }                  Type call Type = new  Call Parameterized Type Impl ( result Type )  ;                  return new  Service Method Adapter Info ( true, false, call Type )  ;              }         } catch  (  No Class Def Found Error ignored )  {         //  Not using coroutines .          }     } } return new  Service Method Adapter Info ( false, false, method . get Generic Return Type (  )  )  ; }"
5831,"private void to Clean Web Cache (  ) { if  ( this . m Agent Web != null )  {     //清理所有跟 Web View相关的缓存 ，数据库， 历史记录 等。     this . m Agent Web . clear Web Cache (  )  ;       Toast . make Text ( get Activity (  ) , ""已清理缓存"",  Toast . LENGTH_SHORT )  . show (  )  ;  //清空所有  Agent Web 硬盘缓存，包括  Web View 的缓存 ,  Agent Web 下载的图片 ，视频 ，apk 等文件。 //             Agent Web Config . clear Disk Cache ( this . get Context (  )  )  ;  }}"
5832,public static  String [  ]  to String Array (  Js Array String js Array String ) {  String [  ]  strings = new  String [ js Array String . length (  )  ]  ;  for  ( int i = 0 ;  i < js Array String . length (  )  ;  i++ )  {     strings [ i ]  = js Array String . get ( i )  ;  } return strings ; }
5833,"public com . anychart . charts .  Pie select Marquee Fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
5834,"void test Render (  ) { final var layers =  List . of ( new  Cake Layer Info ( ""layer1"", 1000 ) , new  Cake Layer Info ( ""layer2"", 2000 ) , new  Cake Layer Info ( ""layer3"", 3000 )  )  ;  final var cake = new  Cake Info ( new  Cake Topping Info ( ""topping"", 1000 ) , layers )  ;  final var cakes =  List . of ( cake )  ;  final var baking Service = mock (  Cake Baking Service . class )  ;  when ( baking Service . get All Cakes (  )  )  . then Return ( cakes )  ;  final var cake View = new  Cake View Impl ( baking Service )  ;  assert Equals ( 0, appender . get Log Size (  )  )  ;  cake View . render (  )  ;  assert Equals ( cake . to String (  ) , appender . get Last Message (  )  )  ; }"
5835,"public static  View get View With React Test Id (  View root View,  String test Id ) { return find Child ( root View, has Tag Value ( test Id )  )  ; }"
5836,public float get Font Size (  ) { return fsize ; }
5837,"private  Immutable List< Fact> description (  ) {  String description = infer Description (  )  ;  boolean description Is Interesting = description != null ;  for  (  Step step : steps )  {     if  ( step . is Check Call (  )  )  {         check State ( description != null )  ;          if  ( step . description Update == null )  {             description = null ;              description Is Interesting = false ;          } else {             description = verify Not Null ( step . description Update . apply ( description )  )  ;              description Is Interesting = true ;          }         continue ;      }     if  ( description == null )  {         description = step . subject . type Description (  )  ;      } } return description Is Interesting ?  Immutable List . of ( fact ( ""value of"", description )  )  :  Immutable List . < Fact>of (  )  ; }"
5838,public  String get Encoding (  ) { return CHARSET_UTF_8 ; }
5839,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
5840,void eval (  ) { long int2 = pop Long (  )  ;  long int1 = pop Long (  )  ;  push Long ( int1 / int2 )  ; }
5841,"public void use Html (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . use Html (  )  ; "" )  ; }"
5842,"public com . anychart . core . utils .  Quarter margin (  String [  ]  margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "", array To String Wrap Quotes ( margin )  )  )  ;  return this ; }"
5843,"static  Default Deps Aware Task<U> of (  Callable<U> callable,  Deps Aware Task .  Deps Supplier< Default Deps Aware Task<U>> deps Supplier ) { return new  Default Deps Aware Task<> ( callable, deps Supplier )  ; }"
5844,public int get Offscreen Page Limit (  ) { return m Offscreen Page Limit ; }
5845,public void add Dload ( int n ) { if  ( n < 4 )      // dload_<n>     add Opcode ( 38 + n )  ;  else if  ( n < 0x100 )  {     // dload     add Opcode ( DLOAD )  ;      add ( n )  ;  } else {     add Opcode ( WIDE )  ;      add Opcode ( DLOAD )  ;      add Index ( n )  ;  }}
5846,"public static  Tester Requirements build Declared Tester Requirements (  Annotated Element class Or Method )  throws  Conflicting Requirements Exception{  Tester Requirements requirements = new  Tester Requirements (  )  ;   Iterable< Annotation> tester Annotations = get Tester Annotations ( class Or Method )  ;  for  (  Annotation tester Annotation : tester Annotations )  {      Tester Requirements more Requirements = build Tester Requirements ( tester Annotation )  ;      incorporate Requirements ( requirements, more Requirements, tester Annotation )  ;  } return requirements ; }"
5847,"public static  Combiner when All Succeed (  Closing Future<?> future1,  Closing Future<?> future2,  Closing Future<?> future3,  Closing Future<?> future4,  Closing Future<?> future5,  Closing Future<?> future6,  Closing Future<?> .  .  .  more Futures ) { return when All Succeed (  Fluent Iterable . of ( future1, future2, future3, future4, future5, future6 )  . append ( more Futures )  )  ; }"
5848,public void iter (  ) { iter = head ; }
5849,"public com . anychart . standalones .  Labels Factory text Settings (  String name,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Settings ( %s, %s )  ; "", wrap Quotes ( name ) , wrap Quotes ( settings )  )  )  ;  return this ; }"
5850,"public void use Html (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . use Html (  )  ; "" )  ; }"
5851,public boolean is Child (  ) { return  ( m Flags &  Expandable Item Constants . STATE_FLAG_IS_CHILD )  != 0 ; }
5852,"public boolean offer ( E element ) { check Not Null ( element )  ;  mod Count++ ;  int insert Index = size++ ;  grow If Needed (  )  ;  //  Adds the element to the end of the heap and bubbles it up to the correct // position .  heap For Index ( insert Index )  . bubble Up ( insert Index, element )  ;  return size <= maximum Size || poll Last (  )  != element ; }"
5853,"public  Boolean get Is Performance Collection Deactivated (  ) {  Collection Deactivated deactivated =  Collection Deactivated . get Instance (  )  ;  //  Fetches  Collection Deactivated from  Android  Manifest .   If true, always disable collection .   Optional< Boolean> metadata Value = get Metadata Boolean ( deactivated )  ;  if  ( metadata Value . is Available (  )  )  {     return metadata Value . get (  )  ;  } return deactivated . get Default (  )  ; }"
5854,public void print (  ) { print This Before (  )  ;  children . for Each (  Letter Composite::print )  ;  print This After (  )  ; }
5855,"public com . anychart . standalones .  Resource List max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
5856,public boolean is Author Name Implicit (  ) { return is Author Name Implicit ; }
5857,public void set Row Header Width ( int row Header Width ) { this . m Row Header Width = row Header Width ;  //  Update  Row Header layout width  View Group .  Layout Params layout Params Row = m Row Header Recycler View . get Layout Params (  )  ;  layout Params Row . width = row Header Width ;  m Row Header Recycler View . set Layout Params ( layout Params Row )  ;  m Row Header Recycler View . request Layout (  )  ;  //  Update  Column Header left margin  Layout Params layout Params Column =  (  Layout Params )  m Column Header Recycler View . get Layout Params (  )  ;  //  If the corner is on the right the margin needs to be on the right if  ( m Corner View Location ==  Corner View Location . TOP_RIGHT || m Corner View Location ==  Corner View Location . BOTTOM_RIGHT )  {     layout Params Column . right Margin = row Header Width ;  } else {     layout Params Column . left Margin = row Header Width ;  } m Column Header Recycler View . set Layout Params ( layout Params Column )  ;  m Column Header Recycler View . request Layout (  )  ;  //  Update  Cells left margin  Layout Params layout Params Cell =  (  Layout Params )  m Cell Recycler View . get Layout Params (  )  ;  if  ( m Corner View Location ==  Corner View Location . TOP_RIGHT || m Corner View Location ==  Corner View Location . BOTTOM_RIGHT )  {     layout Params Cell . right Margin = row Header Width ;  } else {     layout Params Cell . left Margin = row Header Width ;  } m Cell Recycler View . set Layout Params ( layout Params Cell )  ;  m Cell Recycler View . request Layout (  )  ;  if  ( get Adapter (  )  != null )  {     // update  Corner View size     get Adapter (  )  . set Row Header Width ( row Header Width )  ;  }}
5858,public  Builder sub Unable Text (  String sub Unable Text ) { if  ( this . sub Unable Text == null || !this . sub Unable Text . equals ( sub Unable Text )  )  {     this . sub Unable Text = sub Unable Text ;       Boom Button button = button (  )  ;      if  ( button != null )  {         button . sub Unable Text = sub Unable Text ;          button . update Sub Text (  )  ;      } } return this ; }
5859,"public com . anychart . charts .  Scatter x Grid (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Grid ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
5860,"public com . anychart . charts .  Heat Map credits (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . credits ( %s )  ; "", value )  )  ;  return this ; }"
5861,public  Sync Session .  Error Handler get Error Handler (  ) { return error Handler ; }
5862,"protected  List< Path> get Default Identities ( @ Non Null  File ssh Dir ) { return  Arrays . as List (  Ssh Constants . DEFAULT_IDENTITIES )  . stream (  )  . map (  s -> new  File ( ssh Dir, s )  . to Path (  )  )  . filter (  Files::exists )  . collect (  Collectors . to List (  )  )  ; }"
5863,"private boolean has Posix Rename (  ) { //$NON-NLS-1$//$NON-NLS-2$ return ""1"" . equals ( ftp . get Extension ( ""posix-rename@openssh . com"" )  )  ; }"
5864,"private void refresh Plugins From Host Svc (  ) {  List< Plugin Info> plugins = null ;  try {     plugins =  Plugin Process Main . get Plugin Host (  )  . list Plugins (  )  ;  } catch  (  Throwable e )  {     if  ( LOGR )  {          Log Release . e ( PLUGIN_TAG, ""lst . p: "" + e . get Message (  ) , e )  ;      } } // 将插件信息存入 Map refresh Plugin Map ( plugins )  ;  // 判断是否有需要更新的插件 // FIXME 执行此操作前，判断下当前插件的运行进程，具体可以限制仅允许该插件运行在一个进程且为自身进程中  List< Plugin Info> updated Plugins = null ;  if  ( is Need To Update ( plugins )  )  {     if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, ""plugins need to perform update operations"" )  ;      }     try {         updated Plugins =  Plugin Manager Proxy . update All Plugins (  )  ;      } catch  (  Remote Exception e )  {         e . print Stack Trace (  )  ;      } } // 将需要更新的插件更新到 Map中 if  ( updated Plugins != null )  {     refresh Plugin Map ( updated Plugins )  ;  }}"
5865,"public void test_0 (  )  throws  Exception{ A a = new A (  )  ;  B b = new B (  )  ;  C c = new C (  )  ;  a . set B ( b )  ;  b . set C ( c )  ;  c . set B ( b )  ;  b . set A ( a )  ;  JSON Object json Object = new JSON Object (  )  ;  json Object . put ( ""a"", a )  ;  json Object . put ( ""c"", c )  ;   String text = JSON . to JSON String ( json Object,  Serializer Feature .  Pretty Format )  ;   System . out . println ( text )  ; }"
5866,"public final void set Bitmap Decoder Factory ( @ Non Null  Decoder Factory<? extends  Image Decoder> bitmap Decoder Factory ) { //noinspection  Constant Conditions if  ( bitmap Decoder Factory == null )  {     throw new  Illegal Argument Exception ( "" Decoder factory cannot be set to null"" )  ;  } this . bitmap Decoder Factory = bitmap Decoder Factory ; }"
5867,public void set Annotation (  Annotation annotation ) { set Annotations ( new  Annotation [  ]  { annotation } )  ; }
5868,"public com . anychart . core . ui .  Separator width (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
5869,"public  Optional< String> get Simulator Udid For Test (  ) {  Immutable Set< Apple Device> simulators = get Simulators (  )  ;  if  ( simulators . is Empty (  )  )  {     return  Optional . empty (  )  ;  } for  (  Apple Device simulator : simulators )  {     if  ( simulator . get State (  )  . to Lower Case (  )  . equals ( ""booted"" )  )  {         return  Optional . of ( simulator . get Udid (  )  )  ;      } } for  (  Apple Device simulator : simulators )  {     if  ( get Device Kind ( simulator )  ==  Apple Device Kind Enum . MOBILE )  {         return  Optional . of ( simulator . get Udid (  )  )  ;      } } return  Optional . empty (  )  ; }"
5870,"public void share With Facebook (  String caption Or Options,  String link,  String name,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Facebook ( %s, %s, %s, %s )  ; "", wrap Quotes ( caption Or Options ) , wrap Quotes ( link ) , wrap Quotes ( name ) , wrap Quotes ( description )  )  )  ; }"
5871,"public void set Margin Fraction ( double margin Fraction ) { if  ( margin Fraction >= 0 . 5d )  {     throw new  Illegal Argument Exception ( "" The margin fraction must be less than 0 . 5"" )  ;  } this . margin Fraction = margin Fraction ; }"
5872,"public com . anychart . core . gantt . elements .  Connector Element fill (  String [  ]  color,  Number cx,  Number cy, com . anychart . graphics . math .  Rect opacity Or Mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( color ) , cx, cy,  ( opacity Or Mode != null )  ? opacity Or Mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
5873,"private  Map< Integer,  Integer> get Type Indexes Per Level (  ) { if  ( this . type Indexes Per Level == null )  {     this . type Indexes Per Level = new  Hash Map< Integer,  Integer> ( 4 )  ;  } return this . type Indexes Per Level ; }"
5874,"public com . anychart . charts .  Pareto y Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
5875,"public com . anychart . charts .  Circular Gauge background (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5876,"public com . anychart . charts .  Sunburst margin (  String value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
5877,"public void set Description (  String description ) { set Object Value (  Data Types . OBJ_DESCRIPTION, description )  ; }"
5878,"public final  String get Serial (  ) {  String result = null ;  if  (  Build . VERSION . SDK_INT <  Build . VERSION_CODES . O )  {     result =  Build . SERIAL ;  } else {     if  (  Permission Util . has Permission ( context,  Manifest . permission . READ_PHONE_STATE )  )  {         result =  Build . get Serial (  )  ;      } } return  Check Validity Util . check Valid Data ( result )  ; }"
5879,public  Prop Groups View Model_ something ( @ Nullable  Char Sequence something ) { assigned Attributes_epoxy Generated Model . set ( 0 )  ;  assigned Attributes_epoxy Generated Model . clear ( 1 )  ;  this . something_ Int = 0 ;  on Mutation (  )  ;  this . something_ Char Sequence = something ;  return this ; }
5880,synchronized boolean can Allocate ( int size In Bytes ) { if  ( m Ignore Hard Cap )  {     return true ;  } int hard Cap = m Pool Params . max Size Hard Cap ;  //  Return immediately - no point in trimming any space if  ( size In Bytes > hard Cap - m Used . m Num Bytes )  {     m Pool Stats Tracker . on Hard Cap Reached (  )  ;      return false ;  } // trim if we need to int soft Cap = m Pool Params . max Size Soft Cap ;  if  ( size In Bytes > soft Cap -  ( m Used . m Num Bytes + m Free . m Num Bytes )  )  {     trim To Size ( soft Cap - size In Bytes )  ;  } // check again to see if we're below the hard cap if  ( size In Bytes > hard Cap -  ( m Used . m Num Bytes + m Free . m Num Bytes )  )  {     m Pool Stats Tracker . on Hard Cap Reached (  )  ;      return false ;  } return true ; }
5881,public void add Android Event Listener (  Android Event Listener listener ) { synchronized  ( android Event Listeners )  {     android Event Listeners . add ( listener )  ;  }}
5882,"public boolean auto Load More ( int delayed, final int duration, final float drag Rate, final boolean animation Only ) { if  ( m State ==  Refresh State .  None &&  ( is Enable Refresh Or Load More ( m Enable Load More )  && !m Footer No More Data )  )  {      Runnable runnable = new  Runnable (  )  {         @ Override         public void run (  )  {             if  ( m Vice State !=  Refresh State .  Loading )                  return ;              if  ( rebound Animator != null )  {                 //cancel会触发 End调用，可以判断0来确定是否被cancel                 rebound Animator . set Duration ( 0 )  ;                  //会触发 cancel 和 end 调用                 rebound Animator . cancel (  )  ;                  rebound Animator = null ;              }             final  View this View =  Smart Refresh Layout . this ;              m Last Touch X = this View . get Measured Width (  )  / 2f ;              m Kernel . set State (  Refresh State .  Pull Up To Load )  ;              final float height = m Footer Height == 0 ? m Footer Trigger Rate : m Footer Height ;              final float drag Height = drag Rate < 10 ? drag Rate * height : drag Rate ;              rebound Animator =  Value Animator . of Int ( m Spinner, - ( int )   ( drag Height )  )  ;              rebound Animator . set Duration ( duration )  ;              rebound Animator . set Interpolator ( new  Smart Util (  Smart Util . INTERPOLATOR_VISCOUS_FLUID )  )  ;              rebound Animator . add Update Listener ( new  Animator Update Listener (  )  {                 @ Override                 public void on Animation Update (  Value Animator animation )  {                     if  ( rebound Animator != null && m Refresh Footer != null )  {                         m Kernel . move Spinner (  ( int )  animation . get Animated Value (  ) , true )  ;                      }                 }             } )  ;              rebound Animator . add Listener ( new  Animator Listener Adapter (  )  {                 @ Override                 public void on Animation End (  Animator animation )  {                     if  ( animation != null && animation . get Duration (  )  == 0 )  {                         //0 表示被取消                         return ;                      }                     rebound Animator = null ;                      if  ( m Refresh Footer != null )  {                         if  ( m State !=  Refresh State .  Release To Load )  {                             m Kernel . set State (  Refresh State .  Release To Load )  ;                          }                         set State Loading ( !animation Only )  ;                      } else {                         /*                              * 2019-12-24 修复 m Refresh Footer=null 时状态错乱问题                              */                         m Kernel . set State (  Refresh State .  None )  ;                      }                 }             } )  ;              rebound Animator . start (  )  ;          }     } ;      set Vice State (  Refresh State .  Loading )  ;      if  ( delayed > 0 )  {         m Handler . post Delayed ( runnable, delayed )  ;      } else {         runnable . run (  )  ;      }     return true ;  } else {     return false ;  }}"
5883,"public byte [  ]  to Byte Array (  ) { int old Data Position = data Position ;  try {      Byte Array Output Stream bos = new  Byte Array Output Stream (  )  ;       Object Output Stream oos = new  Object Output Stream ( bos )  ;      // NOTE:  Serializing the data array would be simpler, and serialization would actually     // preserve reference equality between entries .    However, the length-encoded format here     // preserves the previous format, which some tests appear to rely on .       List< Fake Encoded Item> entries = new  Array List<> (  )  ;      // NOTE:  Use read Next Item to scan so the contents can be proactively validated .      data Position = 0 ;      while  ( data Position < data Size )  {         entries . add ( read Next Item (  Object . class )  )  ;      }     oos . write Int ( entries . size (  )  )  ;      for  (  Fake Encoded Item item : entries )  {         oos . write Int ( item . size Bytes )  ;          oos . write Object ( item . value )  ;      }     oos . flush (  )  ;      return bos . to Byte Array (  )  ;  } catch  ( IO Exception e )  {     throw new  Unreliable Behavior Error ( "" Error Prone unable to serialize its custom format"", e )  ;  } finally {     data Position = old Data Position ;  }}"
5884,"public static final  Service Info query Service Info (  String name,  String class Name ) {  Component List component List = s Plugin Manager . query Plugin Component List ( name )  ;  if  ( component List != null )  {     return component List . get Service ( class Name )  ;  } else {     return null ;  }}"
5885,public void generate Normalized (  ) { float sum = 0 ;  for  ( int i = 0 ;  i < values . size ;  ++i )  {     sum += values . items [ i ]  . interval ;  } float interval Sum = 0 ;  for  ( int i = 0 ;  i < values . size ;  ++i )  {     interval Sum += values . items [ i ]  . interval / sum ;      values . items [ i ]  . frequency = interval Sum ;  }}
5886,public final void is Not Equal To ( @ Nullable  Object other ) { super . is Not Equal To ( other )  ; }
5887,"public com . anychart . core . stock .  Plot background (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background ( %s )  ; "", settings )  )  ;  return this ; }"
5888,"public void test Parameterized Subclass Fields (  ) {  Class With Parameterized Base Fields target = new  Class With Parameterized Base Fields ( new  Parameterized Sub< String> ( ""one"", ""two"" )  )  ;   String json = gson . to Json ( target )  ;  assert True ( json . contains ( ""\""t\"":\""one\"""" )  )  ;  assert False ( json . contains ( ""\""s\"""" )  )  ; }"
5889,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
5890,"public static void verify ( boolean expression,  String error Message Template, long p1, long p2 ) { if  ( !expression )  {     throw new  Verify Exception ( lenient Format ( error Message Template, p1, p2 )  )  ;  }}"
5891,"public  List Multimap Builder<K0,  Object> linked List Values (  ) { return new  List Multimap Builder<K0,  Object> (  )  {     @ Override     public <K extends K0, V>  List Multimap<K, V> build (  )  {         return  Multimaps . new List Multimap (  Multimap Builder With Keys . this . <K, V>create Map (  ) ,  Linked List Supplier . <V>instance (  )  )  ;      } } ; }"
5892,"public com . anychart . core . axismarkers .  Range range Marker (  Number index ) { return new com . anychart . core . axismarkers .  Range (  String . format (  Locale . US, js Base + "" . range Marker ( %s ) "", index )  )  ; }"
5893,"public  Box get Box ( int index ) { int native Box = native Get Box ( m Native Pixa, index )  ;  if  ( native Box == 0 )  {     return null ;  } return new  Box ( native Box )  ; }"
5894,public  Matrix get Matrix (  ) { return m Matrix ; }
5895,"public void save As Xlsx (  String chart Data Export Mode,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Xlsx ( %s, %s )  ; "", wrap Quotes ( chart Data Export Mode ) , wrap Quotes ( filename )  )  )  ; }"
5896,public  String show Dialog (  Component comp ) { value = null ;  set Location Relative To ( comp )  ;  set Visible ( true )  ;  return value ; }
5897,"public com . anychart . palettes .  Hatch Fills hatch Fill Palette (  ) { return new com . anychart . palettes .  Hatch Fills ( js Base + "" . hatch Fill Palette (  ) "" )  ; }"
5898,public boolean is Set Metadata (  ) { return this . metadata != null ; }
5899,public  String get Type Name (  ) { return type Name ; }
5900,"public void local To Global (  Number x Coord,  Number y Coord ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . local To Global ( %s, %s )  ; "", x Coord, y Coord )  )  ; }"
5901,"public void set Max Motor Torque ( float torque ) { jni Set Max Motor Torque ( addr, torque )  ; }"
5902,"public void text Settings (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . text Settings (  )  ; "" )  ; }"
5903,public final  String get TSUID (  ) { return tsuid ; }
5904,public final void set Connection Observer ( @ Nullable final  Connection Observer callback ) { this . connection Observer = callback ; }
5905,"public void is Absent (  ) { if  ( actual == null )  {     fail With Actual ( simple Fact ( ""expected absent optional"" )  )  ;  } else if  ( actual . is Present (  )  )  {     fail Without Actual ( simple Fact ( ""expected to be absent"" ) , fact ( ""but was present with value"", actual . get (  )  )  )  ;  }}"
5906,"public void set External Adapter (  List Adapter adapter,  Card Grid Cursor Adapter card Cursor Adapter ) { set Adapter ( adapter )  ;  m Cursor Adapter = card Cursor Adapter ;  m Cursor Adapter . set Card Grid View ( this )  ;  m Cursor Adapter . set Row Layout Id ( list_card_layout_resource ID )  ; }"
5907,"public static int convert Day Of Week From Time To Calendar ( int time Day Of Week ) { switch ( time Day Of Week )  {     case  Time . MONDAY:         return  Calendar . MONDAY ;      case  Time . TUESDAY:         return  Calendar . TUESDAY ;      case  Time . WEDNESDAY:         return  Calendar . WEDNESDAY ;      case  Time . THURSDAY:         return  Calendar . THURSDAY ;      case  Time . FRIDAY:         return  Calendar . FRIDAY ;      case  Time . SATURDAY:         return  Calendar . SATURDAY ;      case  Time . SUNDAY:         return  Calendar . SUNDAY ;      default:         throw new  Illegal Argument Exception ( "" Argument must be between  Time . SUNDAY and "" + "" Time . SATURDAY"" )  ;  }}"
5908,"public XC_ Layout Inflated .  Unhook hook Layout ( int id, XC_ Layout Inflated callback ) { return hook Layout Internal ( m Res Dir, id, get Resource Names ( id ) , callback )  ; }"
5909,public  Any Long Object Id get Oid (  ) { return oid ; }
5910,public static void enable Strict Mode For Dev Release (  ) {  Strict Mode . set Thread Policy ( new  Strict Mode .  Thread Policy .  Builder (  )  . detect Disk Reads (  )  . detect Disk Writes (  )  . detect Network (  )  . penalty Flash Screen (  )  . build (  )  )  ; }
5911,public  Integer get Message Ttl (  ) { return message Ttl ; }
5912,public boolean is Expired (  ) { return is Expired (  System . current Time Millis (  )  )  ; }
5913,"public QMUI Fragment Effect Registration register ( @ Non Null final  Lifecycle Owner lifecycle Owner, @ Non Null final QMUI Fragment Effect Handler<T> effect Handler ) { final int rc = m Next Rc . get And Increment (  )  ;   Lifecycle lifecycle = lifecycle Owner . get Lifecycle (  )  ;  m Key To Handler . put ( rc, new  Effect Handler Wrapper<T> ( effect Handler, lifecycle )  )  ;  lifecycle . add Observer ( new  Lifecycle Event Observer (  )  {     @ Override     public void on State Changed ( @ Non Null  Lifecycle Owner lifecycle Owner, @ Non Null  Lifecycle .  Event event )  {         if  (  Lifecycle .  Event . ON_DESTROY . equals ( event )  )  {             unregister ( rc )  ;          }     } } )  ;  return new QMUI Fragment Effect Registration (  )  {     @ Override     public void unregister (  )  {         QMUI Fragment Effect Registry . this . unregister ( rc )  ;      } } ; }"
5914,"public  Map< String,  String> get All Attributes (  ) { return attributes ; }"
5915,public static  String get Method Descriptor (  Executable Element element ) { return element . get Simple Name (  )  + get Descriptor ( element . as Type (  )  )  ; }
5916,"public void set Mm Tel Capabilities Available ( @ Non Null  Mm Tel Capabilities capabilities ) { this . mm Tel Capabilities Available = capabilities ;  if  ( ims Registration Tech !=  Ims Registration Impl Base . REGISTRATION_TECH_NONE )  {     for  (  Map .  Entry< Capability Callback,  Executor> entry : capability Callback Executor Map . entry Set (  )  )  {         entry . get Value (  )  . execute (  (  )  -> entry . get Key (  )  . on Capabilities Status Changed ( capabilities )  )  ;      } }}"
5917,"public com . anychart . standalones .  Resource Timeline text Marker (  Number index, com . anychart . enums .  Gantt Date Time Markers value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Marker ( %s, %s )  ; "", index,  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
5918,"public com . anychart . core . stock . scrollerseries .  Hilo bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
5919,static byte [  ]  ascii (  String string ) { byte [  ]  bytes = new byte [ string . length (  )  ]  ;  for  ( int i = 0 ;  i < string . length (  )  ;  i++ )  {     bytes [ i ]  =  ( byte )  string . char At ( i )  ;  } return bytes ; }
5920,private void remove Entry (  String key ) {  Cache Header removed = m Entries . remove ( key )  ;  if  ( removed != null )  {     m Total Size -= removed . size ;  }}
5921,"public void pause Tag ( @ Non Null  Object tag ) { check Not Null ( tag, ""tag == null"" )  ;  dispatcher . dispatch Pause Tag ( tag )  ; }"
5922,"public  String next (  ) { int next Index = tag . get Lyric (  )  . index Of ( '\n', last Index )  ;  remove Index = last Index ;   String line ;  if  ( last Index >= 0 )  {     if  ( next Index >= 0 )  {         line = tag . get Lyric (  )  . substring ( last Index, next Index )  ;      } else {         line = tag . get Lyric (  )  . substring ( last Index )  ;      }     last Index = next Index ;  } else {     throw new  No Such Element Exception ( "" Iteration has no more elements . "" )  ;  } return line ; }"
5923,public int get Value ( int n ) { return values . get ( n )  ; }
5924,"private void validate Factory Method (  Executable Element method ) { validate Not Generic ( method )  ;  if  ( !validate Factory Method Return Type ( method )  )  {     // validating its parameters .      return ;  } for  (  Variable Element parameter : method . get Parameters (  )  )  {     if  ( !is Annotation Present ( parameter,  Binds Instance . class )  && parameter . as Type (  )  . get Kind (  )  . is Primitive (  )  )  {         error ( method, messages . non Binds Instance Parameters May Not Be Primitives (  ) , messages . inherited Non Binds Instance Parameters May Not Be Primitives (  )  )  ;      } }}"
5925,public  String get Line Source (  ) { return line Source (  )  ; }
5926,public void set Effect ( GSY Video GL View .  Shader Interface shader Effect ) { if  ( shader Effect != null )  {     m Effect = shader Effect ;  } m Change Program = true ;  m Change Program Support Error = true ; }
5927,"public com . anychart . charts .  Venn unselect (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . unselect (  )  ; "" )  ;  return this ; }"
5928,"public static void web View Load Js (  Web View view,  String url ) {  String js = ""var newscript = document . create Element ( \""script\"" )  ; "" ;  js += ""newscript . src=\"""" + url + ""\"" ; "" ;  js += ""document . scripts [ 0 ]  . parent Node . insert Before ( newscript,document . scripts [ 0 ]  )  ; "" ;  view . load Url ( ""javascript:"" + js )  ; }"
5929,"public com . anychart . core .  No Data Settings no Data (  ) { return new com . anychart . core .  No Data Settings ( js Base + "" . no Data (  ) "" )  ; }"
5930,"public com . anychart . core . stock . scrollerseries .  Step Area y Scale ( com . anychart . scales .  Scatter Base settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
5931,"public com . anychart . core . ui .  Label label (  Number index ) { return new com . anychart . core . ui .  Label (  String . format (  Locale . US, js Base + "" . label ( %s ) "", index )  )  ; }"
5932,String get Passive Auth Endpoint (  ) { return m Passive Auth Endpoint ; }
5933,"public com . anychart . core . ui .  Stage Credits url (  String url ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . url ( %s )  ; "", wrap Quotes ( url )  )  )  ;  return this ; }"
5934,public static  String get App Id (  ) { check App Id Setup (  )  ;  return app Id ; }
5935,"public static  Track Selection [  ]  create Track Selections For Definitions ( @ Nullable Type  Definition [  ]  definitions,  Adaptive Track Selection Factory adaptive Track Selection Factory ) {  Track Selection [  ]  selections = new  Track Selection [ definitions . length ]  ;  boolean created Adaptive Track Selection = false ;  for  ( int i = 0 ;  i < definitions . length ;  i++ )  {      Definition definition = definitions [ i ]  ;      if  ( definition == null )  {         continue ;      }     if  ( definition . tracks . length > 1 && !created Adaptive Track Selection )  {         created Adaptive Track Selection = true ;          selections [ i ]  = adaptive Track Selection Factory . create Adaptive Track Selection ( definition )  ;      } else {         selections [ i ]  = new  Fixed Track Selection ( definition . group, definition . tracks [ 0 ] , definition . reason, definition . data )  ;      } } return selections ; }"
5936,"public static  View Drag Helper create (  View Group for Parent, float sensitivity,  Callback cb ) { final  View Drag Helper helper = create ( for Parent, cb )  ;  helper . m Touch Slop =  ( int )   ( helper . m Touch Slop *  ( 1 / sensitivity )  )  ;  return helper ; }"
5937,public boolean is Torch On (  ) {  Camera .  Parameters parameters = camera . get Parameters (  )  ;  if  ( parameters != null )  {      String flash Mode = parameters . get Flash Mode (  )  ;      return flash Mode != null &&  (  Camera .  Parameters . FLASH_MODE_ON . equals ( flash Mode )  ||  Camera .  Parameters . FLASH_MODE_TORCH . equals ( flash Mode )  )  ;  } else {     return false ;  }}
5938,public  String get Last Loaded Url (  ) { return last Url ; }
5939,Integer get Orientation From Activity (  Activity act ) { if  ( act == null )  {     return null ;  }  Resources resources = act . get Resources (  )  ;  if  ( resources != null )  {     return resources . get Configuration (  )  . orientation ;  } else {     return null ;  }}
5940,"public com . anychart . core . polar . series .  Continuous Base x Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
5941,public void prepare For Next Run (  ) { for  ( int i = 0 ;  i < 5 ;  i++ )  {      System . gc (  )  ;      try {          Thread . sleep ( 20 )  ;      } catch  (  Interrupted Exception e )  {         e . print Stack Trace (  )  ;      } }}
5942,public byte get Instruction ( int index ) { return instructions [ index ]  ; }
5943,"private void init Adimgs (  String [  ]  urls ) {  Linear Layout .  Layout Params params = new  Linear Layout .  Layout Params (  Linear Layout .  Layout Params . MATCH_PARENT,  Linear Layout .  Layout Params . MATCH_PARENT )  ;  int length = urls . length + 2 ;  m Image Views = new  Image View [ length ]  ;  for  ( int i = 0 ;  i < length ;  i++ )  {      Image View image View = new  Image View ( context )  ;      image View . set Layout Params ( params )  ;      image View . set Scale Type (  Image View .  Scale Type . CENTER_CROP )  ;      m Image Views [ i ]  = image View ;  } set Img ( length, urls )  ; }"
5944,"public com . anychart . core . ui .  Chart Scroller outline Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . outline Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
5945,"public com . anychart . core . ui .  Scroll Bar min Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", height )  )  ;  return this ; }"
5946,public  Observable< Object [  ] > update In Tx ( final T .  .  .  entities ) { return wrap ( new  Callable< Object [  ] > (  )  {     @ Override     public  Object [  ]  call (  )  throws  Exception {         dao . update In Tx ( entities )  ;          return entities ;      } } )  ; }
5947,public void cancel Pairing (  ) {}
5948,"public com . anychart . core . stock . scrollerseries .  Stick color Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
5949,"public com . anychart . core . resource .  Grid min Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", height )  )  ;  return this ; }"
5950,public  String get Id (  ) { return m Id ; }
5951,public void set Value ( float value ) { m Value = value ; }
5952,public com . facebook . buck . remoteexecution . proto .  Execution Engine Info Or Builder get Engine Info Or Builder (  ) { return get Engine Info (  )  ; }
5953,"public static  Unsigned Long from Long Bits ( long bits ) { // TODO ( lowasser ) : consider caching small values, like  Long . value Of return new  Unsigned Long ( bits )  ; }"
5954,public  Long get Total Distance (  ) { return total Distance ; }
5955,public  Optional< Buck Cell> find Buck Cell From Canonical Path (  String canonical Path ) { return buck Cell Manager . find Cell By Path (  Paths . get ( canonical Path )  )  . map (  Buck Cell Finder::to Buck Cell )  ; }
5956,"public void enable Dashed Line ( float line Length, float space Length, float phase ) { m Dash Path Effect = new  Dash Path Effect ( new float [  ]  { line Length, space Length }, phase )  ; }"
5957,public long get Advertised (  ) { return statistics . advertised ; }
5958,"public com . anychart . core . ui .  Crosshair Label text Settings (  String name,  Number settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Settings ( %s, %s )  ; "", wrap Quotes ( name ) , settings )  )  ;  return this ; }"
5959,private  Immutable List< Section Using Dynamic Strings> get Section Procesors (  Elf elf )  throws IO Exception{  Immutable List .  Builder< Section Using Dynamic Strings> builder =  Immutable List . builder (  )  ;  builder . add ( get Dynamic Processor ( elf )  )  ;  builder . add ( get Dyn Sym Processor ( elf )  )  ;  get Verdef Processor ( elf )  . if Present ( builder::add )  ;  return builder . build (  )  ; }
5960,public void remove Influencer (  Class<K> type ) { int index = find Index ( type )  ;  if  ( index > -1 )      influencers . remove Index ( index )  ; }
5961,"public com . anychart . core .  State Settings hovered (  ) { return new com . anychart . core .  State Settings ( js Base + "" . hovered (  ) "" )  ; }"
5962,"public final  String get Path (  ) { return  Json Scope . get Path ( stack Size, scopes, path Names, path Indices )  ; }"
5963,public static void add Event (  Event Log .  Event event ) { events . add ( event )  ; }
5964,public void close (  ) { closed = true ; }
5965,public int get Port (  ) { assert Already Set Up (  )  ;  return connector . get Local Port (  )  ; }
5966,"public void restore Instance State (  Bundle saved Instance State ) { init Callback Service = saved Instance State . get String ( ""callback Service"" )  ;  saved Plugin State = saved Instance State . get Bundle ( ""plugin"" )  ;  activity Was Destroyed = true ; }"
5967,public T3 get Value3 (  ) { return value3 ; }
5968,"public com . anychart . charts .  Sunburst bounds (  Number x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
5969,public void update Sources To Definitions (  Ssa Method ssa Meth ) { for  (  Operand o : operands )  {      Register Spec def = ssa Meth . get Definition For Register ( o . reg Spec . get Reg (  )  )  . get Result (  )  ;      o . reg Spec = o . reg Spec . with Type ( def . get Type (  )  )  ;  } sources = null ; }
5970,"public void add Swift Stdlib Step If Needed (  Source Path Resolver Adapter resolver,  Path destination Path,  Optional< Supplier< Code Sign Identity>> code Sign Identity Supplier,  Immutable List .  Builder< Step> steps Builder, boolean is For Packaging ) {  Apple Resource Processing . add Swift Stdlib Step If Needed ( resolver, destination Path, bundle Root, code Sign Identity Supplier, steps Builder, is For Packaging, extension, copy Swift Stdlib To Frameworks, use Lipo Thin, swift Stdlib Tool, get Project Filesystem (  ) , get Build Target (  ) , sdk Path, lipo, bundle Binary Path, destinations, is App Clip . or Else ( false )  )  ; }"
5971,"private static  String get Path Without Bucket ( @ Non Null  Uri gs Uri ) {  String path = gs Uri . get Path (  )  ;  if  ( path == null )  {     return """" ;  } return path . starts With ( ""/"" )  ? path . substring ( 1 )  : path ; }"
5972,"public boolean seek To Us ( long position Us, boolean force Reset ) { last Seek Position Us = position Us ;  if  ( is Pending Reset (  )  )  {     // A reset is already pending .   We only need to update its position .      pending Reset Position Us = position Us ;      return true ;  } //  If we're not forced to reset, try and seek within the buffer .  if  ( sample Queues Built && !force Reset && seek Inside Buffer Us ( position Us )  )  {     return false ;  } //  We can't seek inside the buffer, and so need to reset .  pending Reset Position Us = position Us ;  loading Finished = false ;  media Chunks . clear (  )  ;  if  ( loader . is Loading (  )  )  {     loader . cancel Loading (  )  ;  } else {     reset Sample Queues (  )  ;  } return true ; }"
5973,"public  Map< String, V> filter Matching Map Keys (  Map< String, V> entries ) { if  ( matches Any )  {     return entries ;  } return  Maps . filter Entries ( entries,  entry -> matches ( entry . get Key (  )  )  )  ; }"
5974,"public com . anychart . core . grids .  Polar x Grid (  Number index ) { return new com . anychart . core . grids .  Polar (  String . format (  Locale . US, js Base + "" . x Grid ( %s ) "", index )  )  ; }"
5975,"public com . anychart . charts .  Venn bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
5976,public int get Page Number (  ) { return page Number ; }
5977,"public static  Converter< String, T> string Converter ( final  Class<T> enum Class ) { return new  String Converter<T> ( enum Class )  ; }"
5978,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
5979,"public  Prop Groups View Model_ required Group ( @ Non Null  String required Group ) { if  ( required Group == null )  {     throw new  Illegal Argument Exception ( ""required Group cannot be null"" )  ;  } assigned Attributes_epoxy Generated Model . set ( 12 )  ;  assigned Attributes_epoxy Generated Model . clear ( 13 )  ;  this . required Group_ Char Sequence = null ;  on Mutation (  )  ;  this . required Group_ String = required Group ;  return this ; }"
5980,public  Uri get Op Policy Uri (  ) { return get ( OP_POLICY_URI )  ; }
5981,public  Builder set Max Cache Size On Very Low Disk Space ( long max Cache Size On Very Low Disk Space ) { m Max Cache Size On Very Low Disk Space = max Cache Size On Very Low Disk Space ;  return this ; }
5982,public  String get Background Package (  ) { return background Package ; }
5983,"public com . anychart . charts .  Tag Cloud select Marquee Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
5984,"public static void dim Background ( final float from, final float to,  Activity context ) { final  Window window = context . get Window (  )  ;   Value Animator value Animator =  Value Animator . of Float ( from, to )  ;  value Animator . set Duration ( 500 )  ;  value Animator . add Update Listener ( new  Value Animator .  Animator Update Listener (  )  {     @ Override     public void on Animation Update (  Value Animator animation )  {          Window Manager .  Layout Params params = window . get Attributes (  )  ;          params . alpha =  (  Float )  animation . get Animated Value (  )  ;          window . set Attributes ( params )  ;      } } )  ;  value Animator . start (  )  ; }"
5985,"public  Observable< Mail> add Mail With Delay ( final  Mail mail ) { return  Observable . defer ( new  Func0< Observable< Mail>> (  )  {     @ Override     public  Observable< Mail> call (  )  {         delay (  )  ;           Observable o = check Exceptions (  )  ;          if  ( o != null )  {             return o ;          }         return  Observable . just ( mail )  ;      } } )  . flat Map ( new  Func1< Mail,  Observable< Mail>> (  )  {     @ Override     public  Observable< Mail> call (  Mail mail )  {         return add Mail ( mail )  ;      } } )  ; }"
5986,"public void is Full Screen Available (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . is Full Screen Available (  )  ; "" )  ; }"
5987,public boolean is Showing (  ) { return current_tab_position != -1 ; }
5988,"public static R Dot Txt Entry match Custom Drawables ( R Dot Txt Entry entry ) { return  Fake Entry . create With Custom Drawable ( entry . id Type, entry . type, entry . name, entry . custom Type )  ; }"
5989,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
5990,"public  Notification build Progress Notification ( @ Drawable Res int small Icon, @ Nullable  Pending Intent content Intent, @ Nullable  String message,  List< Download> downloads ) { float total Percentage = 0 ;  int download Task Count = 0 ;  boolean all Download Percentages Unknown = true ;  boolean have Downloaded Bytes = false ;  boolean have Download Tasks = false ;  boolean have Remove Tasks = false ;  for  ( int i = 0 ;  i < downloads . size (  )  ;  i++ )  {      Download download = downloads . get ( i )  ;      if  ( download . state ==  Download . STATE_REMOVING )  {         have Remove Tasks = true ;          continue ;      }     if  ( download . state !=  Download . STATE_RESTARTING && download . state !=  Download . STATE_DOWNLOADING )  {         continue ;      }     have Download Tasks = true ;      float download Percentage = download . get Percent Downloaded (  )  ;      if  ( download Percentage != C . PERCENTAGE_UNSET )  {         all Download Percentages Unknown = false ;          total Percentage += download Percentage ;      }     have Downloaded Bytes |= download . get Bytes Downloaded (  )  > 0 ;      download Task Count++ ;  } int title String Id = have Download Tasks ? R . string . exo_download_downloading :  ( have Remove Tasks ? R . string . exo_download_removing : NULL_STRING_ID )  ;  int progress = 0 ;  boolean indeterminate = true ;  if  ( have Download Tasks )  {     progress =  ( int )   ( total Percentage / download Task Count )  ;      indeterminate = all Download Percentages Unknown && have Downloaded Bytes ;  } return build Notification ( small Icon, content Intent, message, title String Id, /* max Progress= */ 100, progress, indeterminate, /* ongoing= */ true, /* show When= */ false )  ; }"
5991,"public  Observable< Qiscus Chat Room> build (  ) { return  Qiscus Api . get Instance (  )  . chat User ( email, options )  . do On Next (  qiscus Chat Room ->  Qiscus . get Data Store (  )  . add Or Update ( qiscus Chat Room )  )  ; }"
5992,public static float get Previous Span X (  Scale Gesture Detector scale Gesture Detector ) { if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . HONEYCOMB )  {     return scale Gesture Detector . get Previous Span X (  )  ;  } else {     return scale Gesture Detector . get Previous Span (  )  ;  }}
5993,"public com . anychart . core . gantt . edit .  Element Edit fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
5994,public void set Glyph Page Height ( int glyph Page Height ) { this . glyph Page Height = glyph Page Height ; }
5995,"private static  Multimap<K, V> filter Filtered (  Filtered Multimap<K, V> multimap,  Predicate<? super  Entry<K, V>> entry Predicate ) {  Predicate< Entry<K, V>> predicate =  Predicates . < Entry<K, V>>and ( multimap . entry Predicate (  ) , entry Predicate )  ;  return new  Filtered Entry Multimap<> ( multimap . unfiltered (  ) , predicate )  ; }"
5996,"public com . anychart . core . ui . scroller .  Thumbs fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
5997,"public  Observable< Boolean> should Show Request Permission Rationale ( final  Activity activity, final  String .  .  .  permissions ) { if  ( !is Marshmallow (  )  )  {     return  Observable . just ( false )  ;  } return  Observable . just ( should Show Request Permission Rationale Implementation ( activity, permissions )  )  ; }"
5998,Byte Buffer get Data (  ) { return  Byte Buffer . allocate ( 0 )  ; }
5999,"public void set Block Variable (  String name,  Object value )  throws  Util Eval Error{ super . set Variable ( name, value, false, /*strict?*/ false )  ; }"
6000,public  String get Image Path (  String image Url ) { return  ( this . contains Key ( image Url )  )  ? new  String Builder ( cache Folder )  . append (  File . separator )  . append ( file Name Rule . get File Name ( image Url )  )  . to String (  )  : null ; }
6001,public boolean exists (  ) { return  ( resolve URL (  )  != null )  ; }
6002,"public com . anychart . core . stock . scrollerseries . OHLC point Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . point Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
6003,"public com . anychart . charts .  Venn unselect (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unselect ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ;  return this ; }"
6004,"public com . anychart . charts .  Circular Gauge credits (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . credits ( %s )  ; "", value )  )  ;  return this ; }"
6005,"protected  Set Value Request set Descriptor Value ( @ Nullable final  Bluetooth Gatt Descriptor server Descriptor, @ Nullable final  Data data ) { return  Request . new Set Value Request ( server Descriptor, data != null ? data . get Value (  )  : null )  . set Request Handler ( request Handler )  ; }"
6006,"public int read ( byte [  ]  bytes, int off, int len )  throws IO Exception{ int num Of Bytes Read = in . read ( bytes, off, len )  ;  if  ( num Of Bytes Read != -1 )  {     hasher . put Bytes ( bytes, off, num Of Bytes Read )  ;  } return num Of Bytes Read ; }"
6007,"public  Aspect Ratio inverse (  ) { //noinspection  Suspicious Name Combination return  Aspect Ratio . of ( m Y, m X )  ; }"
6008,"public  Observable< List< Feed Item>> load First Page (  ) { return grouped Loader . get Grouped First Page (  )  . delay ( 2,  Time Unit . SECONDS )  ; }"
6009,"public com . anychart . core . resource . resourcelist .  Image Settings align (  String align ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . align ( %s )  ; "", wrap Quotes ( align )  )  )  ;  return this ; }"
6010,"public  Litho View Rule set Tree Prop (  Class<?> klass,  Object instance ) {  Tree Props props = m Context . get Tree Props (  )  ;  if  ( props == null )  {     props = new  Tree Props (  )  ;  } props . put ( klass, instance )  ;  m Context . set Tree Props ( props )  ;  return this ; }"
6011,public void set Cache (  Object obj )  throws IO Exception{ if  ( type == INDIRECT )  {     dereference (  )  . set Cache ( obj )  ;      return ;  } else {     cache = new  Soft Reference< Object> ( obj )  ;  }}
6012,"public  List<T> to Java List (  Class<T> clazz ) {  List<T> list = new  Array List<T> ( this . size (  )  )  ;   Parser Config config =  Parser Config . get Global Instance (  )  ;  for  (  Object item : this )  {     T class Item =  ( T )   Type Utils . cast ( item, clazz, config )  ;      list . add ( class Item )  ;  } return list ; }"
6013,"public  Group Prop Multiple Supported Attribute Different Name Model View Model_ on Bind (  On Model Bound Listener< Group Prop Multiple Supported Attribute Different Name Model View Model_,  Group Prop Multiple Supported Attribute Different Name Model View> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
6014,"public static  String get Android System Property (  String key ) { try {     return  System Properties Proxy . get Instance (  )  . get ( key, null )  ;  } catch  (  Illegal Argument Exception e )  {     return null ;  }}"
6015,"void move Last Entry ( int dst Index, int mask ) { int src Index = size (  )  - 1 ;  if  ( dst Index < src Index )  {     // move last entry to deleted spot     @ Nullable  Object object = elements [ src Index ]  ;      elements [ dst Index ]  = object ;      elements [ src Index ]  = null ;      // move the last entry to the removed spot, just like we moved the element     entries [ dst Index ]  = entries [ src Index ]  ;      entries [ src Index ]  = 0 ;      // also need to update whoever's ""next"" pointer was pointing to the last entry place     int table Index = smeared Hash ( object )  & mask ;      int next =  Compact Hashing . table Get ( table, table Index )  ;      int src Next = src Index + 1 ;      if  ( next == src Next )  {         // we need to update the root pointer          Compact Hashing . table Set ( table, table Index, dst Index + 1 )  ;      } else {         // we need to update a pointer in an entry         int entry Index ;          int entry ;          do {             entry Index = next - 1 ;              entry = entries [ entry Index ]  ;              next =  Compact Hashing . get Next ( entry, mask )  ;          } while  ( next != src Next )  ;          // here, entries [ entry Index ]  points to the old entry location ;  update it         entries [ entry Index ]  =  Compact Hashing . mask Combine ( entry, dst Index + 1, mask )  ;      } } else {     elements [ dst Index ]  = null ;      entries [ dst Index ]  = 0 ;  }}"
6016,public  String get Module Name (  ) { return module Name ; }
6017,protected UR Iish to UR Iish (  String path )  throws URI Syntax Exception{ URI u = server . get URI (  )  . resolve ( path )  ;  return new UR Iish ( u . to String (  )  )  ; }
6018,public void notify Data Changed (  ) { calc Min Max (  )  ; }
6019,"static void report Algorithm Status (  String algorithm )  throws  Exception{ final boolean present = is Algorithm Present ( algorithm )  ;  final boolean allowed = present && is Algorithm Allowed ( algorithm )  ;  final  String provider = present ? security Provider Name ( algorithm )  : ""N/A"" ;   String status = "" Algorithm: "" + algorithm + "" @ "" + provider + "" ;  "" + ""present/allowed : "" + present + ""/"" + allowed ;  if  ( allowed )  {     logger . info ( "" Testing "" + status )  ;  } else {     logger . warn ( "" Missing "" + status )  ;  }}"
6020,"public void set Uniform Matrix3fv (  String name,  Float Buffer buffer, int count, boolean transpose ) { GL20 gl =  Gdx . gl20 ;  check Managed (  )  ;   (  (  Buffer )  buffer )  . position ( 0 )  ;  int location = fetch Uniform Location ( name )  ;  gl . gl Uniform Matrix3fv ( location, count, transpose, buffer )  ; }"
6021,"protected int preload Data Backward ( K key,  List<K> key List, int cache Count ) { int getting Data Count = 0 ;  if  ( key != null && ! List Utils . is Empty ( key List )  && on Get Data Listener != null )  {     int cached Count = 0 ;      boolean begin Count = false ;      for  ( int i = key List . size (  )  - 1 ;  i >= 0 && cached Count <= cache Count ;  i-- )  {         K k = key List . get ( i )  ;          if  (  Object Utils . is Equals ( k, key )  )  {             begin Count = true ;              continue ;          }         if  ( k != null && begin Count )  {             cached Count++ ;              if  ( getting Data ( k )  != null )  {                 getting Data Count++ ;              }         }     } } return getting Data Count ; }"
6022,protected boolean realm Exists (  ) { return new  File ( canonical Path )  . exists (  )  ; }
6023,"public void check Content Merge Large Binaries (  Merge Strategy strategy )  throws  Exception{  Git git =  Git . wrap ( db )  ;  final int LINELEN = 72 ;  // setup a merge that would work correctly if we disconsider the stray '\0' // that the file contains near the start .  byte [  ]  binary = new byte [ LINELEN * 2000 ]  ;  for  ( int i = 0 ;  i < binary . length ;  i++ )  {     binary [ i ]  =  ( byte )   (  ( i % LINELEN )  == 0 ? '\n' : 'x' )  ;  } binary [ 50 ]  = '\0' ;  write Trash File ( ""file"", new  String ( binary, UTF_8 )  )  ;  git . add (  )  . add Filepattern ( ""file"" )  . call (  )  ;   Rev Commit first = git . commit (  )  . set Message ( ""added file"" )  . call (  )  ;  //  Generate an edit in a single line .  int idx = LINELEN * 1200 + 1 ;  byte save = binary [ idx ]  ;  binary [ idx ]  = '@' ;  write Trash File ( ""file"", new  String ( binary, UTF_8 )  )  ;  binary [ idx ]  = save ;  git . add (  )  . add Filepattern ( ""file"" )  . call (  )  ;   Rev Commit master Commit = git . commit (  )  . set All ( true )  . set Message ( ""modified file l 1200"" )  . call (  )  ;  git . checkout (  )  . set Create Branch ( true )  . set Start Point ( first )  . set Name ( ""side"" )  . call (  )  ;  binary [ LINELEN * 1500 + 1 ]  = '!' ;  write Trash File ( ""file"", new  String ( binary, UTF_8 )  )  ;  git . add (  )  . add Filepattern ( ""file"" )  . call (  )  ;   Rev Commit side Commit = git . commit (  )  . set All ( true )  . set Message ( ""modified file l 1500"" )  . call (  )  ;  try  (  Object Inserter ins = db . new Object Inserter (  )  )  {     //  Check that we don't read the large blobs .       Object Inserter forbid Inserter = new  Object Inserter .  Filter (  )  {         @ Override         protected  Object Inserter delegate (  )  {             return ins ;          }         @ Override         public  Object Reader new Reader (  )  {             return new  Big Read Forbidden Reader ( super . new Reader (  ) , 8000 )  ;          }     } ;       Resolve Merger merger =  (  Resolve Merger )  strategy . new Merger ( forbid Inserter, db . get Config (  )  )  ;      boolean no Problems = merger . merge ( master Commit, side Commit )  ;      assert False ( no Problems )  ;  }}"
6024,"public boolean add Sub Item ( @ Int Range ( from = 0 )  int parent Position, @ Int Range ( from = 0 )  int sub Position, @ Non Null T item, boolean expand Parent, @ Nullable  Object payload ) { if  ( item == null )  {     log . e ( ""add Sub Item  No items to add!"" )  ;      return false ;  } //  Build a new list with 1 item to chain the methods of add Sub Items return add Sub Items ( parent Position, sub Position,  Collections . singleton List ( item ) , expand Parent, payload )  ; }"
6025,"public  Matrix4 set Translation ( double x, double y, double z ) { m [ M03 ]  = x ;  m [ M13 ]  = y ;  m [ M23 ]  = z ;  return this ; }"
6026,public void add Exception (  Hack Assertion Exception exception ) { m Assertion Err . add ( exception )  ; }
6027,"private static boolean is ID3 V2 Header (  Random Access File raf )  throws IO Exception{ long start = raf . get File Pointer (  )  ;  byte [  ]  tag Identifier = new byte [ FIELD_TAGID_LENGTH ]  ;  raf . read ( tag Identifier )  ;  raf . seek ( start )  ;  if  ( ! (  Arrays . equals ( tag Identifier, TAG_ID )  )  )  {     return false ;  } return true ; }"
6028,public static final  Component List query Plugin Component List (  String name ) { return s Plugin Manager . query Plugin Component List ( name )  ; }
6029,"protected void recycle (  ) { unschedule (  )  ;  directly On ( real Message,  Message . class, ""recycle"" )  ; }"
6030,"public static  Repository get Submodule Repository ( final  Repository parent, final  String path )  throws IO Exception{ return get Submodule Repository ( parent . get Work Tree (  ) , path, parent . get FS (  )  )  ; }"
6031,"public com . anychart . core . axes .  Circular Ticks length (  Number length ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . length ( %s )  ; "", length )  )  ;  return this ; }"
6032,"public static byte [  ]  read File2 Bytes By Stream ( final  String file Path, final  On Progress Update Listener listener ) { return read File2 Bytes By Stream (  Utils Bridge . get File By Path ( file Path ) , listener )  ; }"
6033,"public static  List< Car> get Sedan Cars Owned Sorted By Date (  List< Person> persons ) {  List< Car> cars = new  Array List<> (  )  ;  for  (  Person person : persons )  {     cars . add All ( person . get Cars (  )  )  ;  }  List< Car> sedan Cars = new  Array List<> (  )  ;  for  (  Car car : cars )  {     if  (  Category . SEDAN . equals ( car . get Category (  )  )  )  {         sedan Cars . add ( car )  ;      } } sedan Cars . sort ( new  Comparator< Car> (  )  {     @ Override     public int compare (  Car o1,  Car o2 )  {         return o1 . get Year (  )  - o2 . get Year (  )  ;      } } )  ;  return sedan Cars ; }"
6034,public  Set< Managed Object> get Refreshed Objects (  ) { return refreshed Objects ; }
6035,"public void on Bind Footer Item View Holder ( @ Non Null  Footer VH holder, int local Position,  List< Object> payloads ) { on Bind Footer Item View Holder ( holder, local Position )  ; }"
6036,"public  String get Desc (  ) { return "" The monthly temperature  ( vertical range chart ) "" ; }"
6037,"public void on Save Instance State (  Bundle saved Instance State ) { int [  ]  panes Type = new int [ panes Layout . get Num Panes (  )  ]  ;  boolean [  ]  panes Focused = new boolean [ panes Layout . get Num Panes (  )  ]  ;  for  ( int i = 0 ;  i < panes Layout . get Num Panes (  )  ;  i++ )  {      Pane View p = panes Layout . get Pane ( i )  ;      panes Type [ i ]  = p . type ;      panes Focused [ i ]  = p . focused ;  } saved Instance State . put Int Array ( "" Panes Layout_panes Type"", panes Type )  ;  saved Instance State . put Boolean Array ( "" Panes Layout_panes Focused"", panes Focused )  ;  saved Instance State . put Int ( "" Panes Layout_current Index"", panes Layout . get Current Index (  )  )  ; }"
6038,public void set Indeterminate Tint List ( @ Nullable  Color State List tint ) { log Progress Bar Tint Warning (  )  ;  set Support Indeterminate Tint List ( tint )  ; }
6039,public int tries Size (  ) { finish Processing If Necessary (  )  ;  return table . size (  )  ; }
6040,"public com . anychart . core . gantt . edit .  Element Edit thumbs (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . thumbs ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6041,"public boolean get Geometry ( int index, @ Size ( min = 4 )  int [  ]  geometry ) { if  ( m Recycled )      throw new  Illegal State Exception (  )  ;  if  ( geometry . length < 4 )  {     throw new  Illegal Argument Exception ( "" Geometry array must be at least 4 elements long"" )  ;  } return native Get Geometry ( m Native Boxa, index, geometry )  ; }"
6042,public  Container<T> background ( @ Null  Drawable background ) { set Background ( background )  ;  return this ; }
6043,public static void cancel Full Screen (  Activity activity ) {  Window window = activity . get Window (  )  ;  window . clear Flags (  Window Manager .  Layout Params . FLAG_FULLSCREEN )  ;  window . clear Flags (  Window Manager .  Layout Params . FLAG_LAYOUT_NO_LIMITS )  ; }
6044,"public com . anychart . charts .  Circular Gauge needle (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . needle ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6045,public static  String get Hex ( byte [  ]  raw ) { if  ( raw == null )      return null ;  final  String Builder hex = new  String Builder ( 2 * raw . length )  ;  for  ( final byte b : raw )  hex . append ( HEXES . char At (  ( b & 0x F0 )  >> 4 )  )  . append ( HEXES . char At (  ( b & 0x0 F )  )  )  ;  return hex . to String (  )  ; }
6046,"static  String process Class Loader String (  String input ) { if  ( input . contains ( "" Dex Path List"" )  )  {     return process Class Loader String43 Or Later ( input )  ;  } else {     return process Class Loader String42 Or Earlier ( input )  ;  }}"
6047,"public static JS Bundle Loader create File Loader ( final  String file Name ) { return create File Loader ( file Name, file Name, false )  ; }"
6048,"public com . anychart . core .  State Settings markers (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", settings )  )  ;  return this ; }"
6049,"private void insert Content Values (  List< Key Value> list,  Content Values cv ) { if  ( list != null && cv != null )  {     for  (  Key Value kv : list )  {         cv . put ( kv . get Key (  ) , kv . get Value (  )  . to String (  )  )  ;      } } else {     KJ Loger . debug ( get Class (  )  . get Name (  )  + ""insert Content Values:  List< Key Value> is empty or  Content Values is empty!"" )  ;  }}"
6050,"public  Class Name generated Component (  Class Name root,  Class Name component ) { return generated Components Wrapper ( root )  . nested Class ( component Name ( component )  )  ; }"
6051,"public com . anychart . core . stock . scrollerseries .  Step Area step Direction ( com . anychart . enums .  Step Direction value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . step Direction ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
6052,"public void set Security ( int security )  throws  Illegal State Exception,  Illegal Argument Exception{ if  ( security != SECURITY_FTP && security != SECURITY_FTPS && security != SECURITY_FTPES )  {     throw new  Illegal Argument Exception ( "" Invalid security"" )  ;  } synchronized  ( lock )  {     if  ( connected )  {         throw new  Illegal State Exception ( "" The security level of the connection can't be "" + ""changed while the client is connected"" )  ;      }     this . security = security ;  }}"
6053,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
6054,public int get Unbind Request Count (  ) { return unbind Request Count . get (  )  ; }
6055,"private void handle Exception (  Throwable throwable ) { check Not Null ( throwable )  ;  if  ( all Must Succeed )  {     //  As soon as the first one fails, make that failure the result of the output future .      //  The results of all other inputs are then ignored  ( except for logging any failures )  .      boolean completed With Failure = set Exception ( throwable )  ;      if  ( !completed With Failure )  {         //  Go up the causal chain to see if we've already seen this cause ;  if we have, even if         // it's wrapped by a different exception, don't log it .          boolean first Time Seeing This Exception = add Causal Chain ( get Or Init Seen Exceptions (  ) , throwable )  ;          if  ( first Time Seeing This Exception )  {             log ( throwable )  ;              return ;          }     } } /*  * TODO ( cpovirk ) :  Should when All Complete (  )  . call* (  )  log errors, too?  Currently, it doesn't call  * handle Exception (  )  at all .   */ if  ( throwable instanceof  Error )  {     /*    * TODO ( cpovirk ) :  Do we really want to log this if we called set Exception ( throwable )  and it    * returned true?  This was intentional  ( CL 46470009 ) , but it seems odd compared to how we    * normally handle  Error .     *    *  Similarly, do we really want to log the same  Error more than once?    */     log ( throwable )  ;  }}"
6056,public static  Rev Filter has All (  Rev Flag Set a ) { return new  Has All ( new  Rev Flag Set ( a )  )  ; }
6057,"public void test Serialize Invalid User Id (  ) { final  File Mock Context mock Context = new  File Mock Context ( get Instrumentation (  )  . get Context (  )  )  ;  final  Default Token Cache Store mock Cache = new  Default Token Cache Store ( mock Context )  ;  add FRT Cache Item ( mock Cache )  ;  final  Authentication Context context = get Authentication Context ( mock Context, VALID_AUTHORITY, false, mock Cache )  ;  try {     context . serialize ( """" )  ;       Assert . fail ( ""not expected"" )  ;  } catch  ( final  Exception exception )  {     assert True ( exception instanceof  Illegal Argument Exception )  ;  } try {     context . serialize ( null )  ;       Assert . fail ( ""not expected"" )  ;  } catch  ( final  Exception exception )  {     assert True ( exception instanceof  Illegal Argument Exception )  ;  }}"
6058,"static  Thread new Thread (  String name,  Runnable runnable ) { check Not Null ( name )  ;  check Not Null ( runnable )  ;   Thread result = platform Thread Factory (  )  . new Thread ( runnable )  ;  try {     result . set Name ( name )  ;  } catch  (  Security Exception e )  { // OK if we can't set the name in this environment .  } return result ; }"
6059,"private void add Response Header Fields (  String key,  String .  .  .  args ) {  Array List< String> field = new  Array List<> ( args . length )  ;   Collections . add All ( field, args )  ;  get Response Header Fields (  )  . put ( key . to Lower Case (  ) , field )  ; }"
6060,"public com . anychart . charts .  Heat Map interactivity (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . interactivity ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6061,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
6062,public void set Z ( float z ) { this . z = z ;  invalidate Line = true ; }
6063,private synchronized void enable Parameter Tampering Protection Internal (  String salt ) {  Connection Processor . salt = salt ; }
6064,"public void set Windows (  ) { reset Os Names (  )  ;  set Property ( ""os . name"", "" Windows"" )  ;  set Property ( ""file . separator"", ""\\"" )  ;  set Property ( ""path . separator"", "" ; "" )  ;  set Property ( ""line . separator"", ""\r\n"" )  ;  set Platform Checker (  )  ; }"
6065,"private void notify Swipe Directions (  Swipe Open View Holder holder, boolean is Rtl, float d X, float d Y ) { // check if we are about to start a swipe to open start or open end positions  View swipe View = holder . get Swipe View (  )  ;  // 0 or negative translation X, heading to positive translation X if  ( swipe View . get Translation X (  )  <= 0 && d X > 0 )  {     if  ( is Rtl )  {         holder . notify End Open (  )  ;      } else {         holder . notify Start Open (  )  ;      } // 0 or positive translation X, heading to negative translation X } else if  ( swipe View . get Translation X (  )  >= 0 && d X < 0 )  {     if  ( is Rtl )  {         holder . notify Start Open (  )  ;      } else {         holder . notify End Open (  )  ;      } // 0 or positive translation Y, heading to negative translation Y } else if  ( swipe View . get Translation Y (  )  >= 0 && d Y < 0 )  {     holder . notify End Open (  )  ;  } else if  ( swipe View . get Translation Y (  )  <= 0 && d Y > 0 )  {     holder . notify Start Open (  )  ;  }}"
6066,"public  Document Reference document ( @ Non Null  String document Path ) { check Not Null ( document Path, "" Provided document path must not be null . "" )  ;  ensure Client Configured (  )  ;  return  Document Reference . for Path (  Resource Path . from String ( document Path ) , this )  ; }"
6067,"Optional< Executable Element> get Property Getter (  Variable Element field Element ) { return element Field Getter Method Map . compute If Absent ( field Element, this::get Property Getter Uncached )  ; }"
6068,private int get Normalized Position ( int position ) { return m Is Circular ? position % m Component Tree Holders . size (  )  : position ; }
6069,"private void deserialize Heartbeat ( @ Non Null final  Json Object json Object, @ Non Null final  Provisioned Mesh Node node ) { final  Configuration Server Model model = get Configuration Server Model ( node )  ;  if  ( model != null )  {     if  ( json Object . has ( ""heartbeat Pub"" )  )  {         final  Json Object json Heartbeat Pub = json Object . get ( ""heartbeat Pub"" )  . get As Json Object (  )  ;          final int dst ;          if  ( json Heartbeat Pub . has ( ""address"" )  )  {             dst =  Integer . parse Int ( json Heartbeat Pub . get ( ""address"" )  . get As String (  ) , 16 )  ;          } else {             dst =  Integer . parse Int ( json Heartbeat Pub . get ( ""destination"" )  . get As String (  ) , 16 )  ;          }         if  ( dst != UNASSIGNED_ADDRESS )  {             final  Json Array json Features = json Heartbeat Pub . get ( ""features"" )  . get As Json Array (  )  ;              int relay = 0 ;              int proxy = 0 ;              int friend = 0 ;              int low Power = 0 ;              for  (  Json Element element : json Features )  {                 if  ( element . get As String (  )  . equals Ignore Case ( ""relay"" )  )  {                     relay =  Features . ENABLED ;                  } else if  ( element . get As String (  )  . equals Ignore Case ( ""proxy"" )  )  {                     proxy =  Features . ENABLED ;                  } else if  ( element . get As String (  )  . equals Ignore Case ( ""friend"" )  )  {                     friend =  Features . ENABLED ;                  } else if  ( element . get As String (  )  . equals Ignore Case ( ""low Power"" )  )  {                     low Power =  Features . ENABLED ;                  }             }             final  Features features = new  Features ( friend, low Power, proxy, relay )  ;              final int index = json Heartbeat Pub . get ( ""index"" )  . get As Int (  )  ;              final byte period =  Heartbeat . decode Heartbeat Period ( json Heartbeat Pub . get ( ""period"" )  . get As Int (  )  )  ;              final int ttl = json Heartbeat Pub . get ( ""ttl"" )  . get As Int (  )  ;              model . set Heartbeat Publication ( new  Heartbeat Publication ( dst,  ( byte )  0, period, ttl, features, index )  )  ;          }     }     if  ( json Object . has ( ""heartbeat Sub"" )  )  {         final  Json Object json Heartbeat Sub = json Object . get ( ""heartbeat Sub"" )  . get As Json Object (  )  ;          final int dst =  Integer . parse Int ( json Heartbeat Sub . get ( ""destination"" )  . get As String (  ) , 16 )  ;          final int src =  Integer . parse Int ( json Heartbeat Sub . get ( ""source"" )  . get As String (  ) , 16 )  ;          if  ( dst != UNASSIGNED_ADDRESS || src != UNASSIGNED_ADDRESS )              model . set Heartbeat Subscription ( new  Heartbeat Subscription ( src, dst,  ( byte )  0,  ( byte )  0, 0, 0 )  )  ;      } }}"
6070,public void set Minor Ticks Spacing ( double spacing ) { m Minor Tick Spacing = spacing ; }
6071,"public com . anychart . graphics . vector .  Pattern Fill attr (  String key,  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . attr ( %s, %s )  ; "", wrap Quotes ( key ) , wrap Quotes ( value )  )  )  ;  return this ; }"
6072,"public void unselect (  Number [  ]  index Or Indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unselect ( %s )  ; "",  Arrays . to String ( index Or Indexes )  )  )  ; }"
6073,public  Builder set Type ( com . didiglobal . booster . aapt2 .  Resources .  File Reference .  Type value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } type_ = value . get Number (  )  ;  on Changed (  )  ;  return this ; }
6074,"public com . anychart . core . annotations .  Horizontal Line y Scale ( com . anychart . scales .  Base settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
6075,public static boolean is Valid (  String str ) { if  ( str == null || str . length (  )  == 0 )  {     return false ;  } JSON Scanner lexer = new JSON Scanner ( str )  ;  try {     lexer . next Token (  )  ;      final int token = lexer . token (  )  ;      switch ( token )  {         case JSON Token . LBRACE:             if  ( lexer . get Current (  )  == JSON Lexer . EOI )  {                 return false ;              }             lexer . skip Object ( true )  ;              break ;          case JSON Token . LBRACKET:             lexer . skip Array ( true )  ;              break ;          case JSON Token . LITERAL_INT:         case JSON Token . LITERAL_STRING:         case JSON Token . LITERAL_FLOAT:         case JSON Token . LITERAL_ISO8601_DATE:         case JSON Token . NULL:         case JSON Token . TRUE:         case JSON Token . FALSE:             lexer . next Token (  )  ;              break ;          default:             return false ;      }     return lexer . token (  )  == JSON Token . EOF ;  } catch  (  Exception ex )  {     return false ;  } finally {     lexer . close (  )  ;  }}
6076,"public com . anychart . charts .  Sparkline negative Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . negative Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
6077,"final  Entry<K, V> remove Entry For Key (  Object key ) { int hash =  ( key == null )  ? 0 :  ( key instanceof  String )  ? hash ( hash String (  (  String )  key )  )  : hash ( key . hash Code (  )  )  ;  int i = index For ( hash, table . length )  ;   Entry<K, V> prev = table [ i ]  ;   Entry<K, V> e = prev ;  while  ( e != null )  {      Entry<K, V> next = e . next ;       Object k ;      if  ( e . hash == hash &&  (  ( k = e . key )  == key ||  ( key != null && key . equals ( k )  )  )  )  {         mod Count++ ;          size-- ;          if  ( prev == e )              table [ i ]  = next ;          else             prev . next = next ;          return e ;      }     prev = e ;      e = next ;  } return e ; }"
6078,public float get Phase X (  ) { return m Phase X ; }
6079,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
6080,public  Set< Document Key> get Resolved Limbo Documents (  ) { return resolved Limbo Documents ; }
6081,public void delete Artwork Field (  )  throws  Key Not Found Exception{ throw new  Unsupported Operation Exception (  Error Message . GENERIC_NOT_SUPPORTED . get Msg (  )  )  ; }
6082,public void pause (  ) { pause Lock . lock (  )  ;  try {     is Paused = true ;  } finally {     pause Lock . unlock (  )  ;  }}
6083,"public com . anychart . charts .  Scatter parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
6084,public  Timestamp Adjuster get Pcr Timestamp Adjuster (  ) { return pcr Timestamp Adjuster ; }
6085,"public I Binder get Service ( final  String name ) { if  (  Log Debug . LOG )  {      Log Debug . d ( TAG, ""get service for I Plugin . query, name = "" + name )  ;  } if  (  Text Utils . is Empty ( name )  )  {     throw new  Illegal Argument Exception ( ""service name can not value null"" )  ;  } I Binder ret = m Services . get ( name )  ;  if  ( ret == null )  {     return null ;  } if  ( !ret . is Binder Alive (  )  || !ret . ping Binder (  )  )  {     m Services . remove ( name )  ;      return null ;  } return ret ; }"
6086,"private boolean item Is Obscured By Header (  Recycler View parent,  View item,  View header, int orientation ) {  Recycler View .  Layout Params layout Params =  (  Recycler View .  Layout Params )  item . get Layout Params (  )  ;   Rect header Margins = m Dimension Calculator . get Margins ( header )  ;  int adapter Position = parent . get Child Adapter Position ( item )  ;  if  ( adapter Position ==  Recycler View . NO_POSITION || m Header Provider . get Header ( parent, adapter Position )  != header )  {     //  Handles an edge case where a trailing header is smaller than the current sticky header .      return false ;  } if  ( orientation ==  Linear Layout Manager . VERTICAL )  {     int item Top = item . get Top (  )  - layout Params . top Margin ;      int header Bottom = header . get Bottom (  )  + header Margins . bottom + header Margins . top ;      if  ( item Top > header Bottom )  {         return false ;      } } else {     int item Left = item . get Left (  )  - layout Params . left Margin ;      int header Right = header . get Right (  )  + header Margins . right + header Margins . left ;      if  ( item Left > header Right )  {         return false ;      } } return true ; }"
6087,"public com . anychart . standalones .  Title padding (  String value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
6088,"public com . anychart . core .  Chart padding (  Number value1,  Number value2,  String value3,  Number value4 ) { return new com . anychart . core .  Chart (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s ) "", value1, value2, wrap Quotes ( value3 ) , value4 )  )  ; }"
6089,public int get Min Version (  ) { return min Version ; }
6090,public static void clear Cached Info (  ) { DISK_CACHE_CLIENT . clear Cached Info (  )  ; }
6091,"public  String get User Agent (  ) { return "" Mozilla/5 . 0  (  Linux ;   Android 5 . 1 . 1 ;   Nexus 6  Build/LYZ28 E )   Apple Web Kit/537 . 36  ( KHTML, like  Gecko )   Chrome/61 . 0 . 3163 . 100  Mobile  Safari/537 . 36"" ; }"
6092,"public static void visible View By Alpha ( final  View view ) { visible View By Alpha ( view,  Animation Utils . DEFAULT_ANIMATION_DURATION, false, null )  ; }"
6093,public synchronized int get Gamma (  ) { return get Gamma ( native Get Gamma ( m Native Ptr )  )  ; }
6094,public int get Tile Width (  ) { return tile Width ; }
6095,public boolean is Enabled (  Class<? extends  Experiment> clazz ) { return experiments . contains Key ( clazz )  ; }
6096,"public static byte [  ]  to JSON Bytes (  Object object,  Serialize Config config,  Serializer Feature .  .  .  features ) { return to JSON Bytes ( object, config, empty Filters, DEFAULT_GENERATE_FEATURE, features )  ; }"
6097,"public void add Or Update Activity (  Activity Info activity Info ) { add Component ( activity Filters,  p -> p . activities,  (  p,  a )  -> p . activities = a, new  Activity Info ( activity Info ) , true )  ; }"
6098,public boolean is Array (  ) { return false ; }
6099,"public com . anychart . charts .  Heat Map labels Display Mode (  String mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels Display Mode ( %s )  ; "", wrap Quotes ( mode )  )  )  ;  return this ; }"
6100,"public static  Scriptable get Function Prototype (  Scriptable scope ) { return get Class Prototype ( scope, "" Function"" )  ; }"
6101,"private  Producer< Encoded Image> new Local Transformations Sequence (  Producer< Encoded Image> input Producer,  Thumbnail Producer< Encoded Image> [  ]  thumbnail Producers ) {  Producer< Encoded Image> local Image Producer =  Producer Factory . new Add Image Transform Meta Data Producer ( input Producer )  ;  local Image Producer = m Producer Factory . new Resize And Rotate Producer ( local Image Producer, true, m Image Transcoder Factory )  ;   Throttling Producer< Encoded Image> local Image Throttling Producer = m Producer Factory . new Throttling Producer ( local Image Producer )  ;  return m Producer Factory . new Branch On Separate Images Producer ( new Local Thumbnail Producer ( thumbnail Producers ) , local Image Throttling Producer )  ; }"
6102,public void record Load Success (  ) {  Preconditions . check State ( state ==  State . MISS )  ;  long end Time = clock . current Time Millis (  )  ;  total Load Time . add ( end Time - start Load Time )  ;  // add the load time in addition to what we recorded in {@code record Miss (  ) } and {@code // record Miss Match (  ) } to get the total time spent when missed cache total Miss Time . add ( end Time - start Load Time )  ;  total Load Success Count . increment (  )  ;  state =  State . LOADED ; }
6103,"public com . anychart . core . ui .  Chart Scroller selected Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
6104,private static  Geo Json Multi Point create Multi Point ( JSON Array coordinates )  throws JSON Exception{  Array List< Geo Json Point> geo Json Points = new  Array List< Geo Json Point> (  )  ;  for  ( int i = 0 ;  i < coordinates . length (  )  ;  i++ )  {     geo Json Points . add ( create Point ( coordinates . get JSON Array ( i )  )  )  ;  } return new  Geo Json Multi Point ( geo Json Points )  ; }
6105,"public static  Command Result exec Cmd ( final  String command, final boolean is Rooted ) { return exec Cmd ( new  String [  ]  { command }, is Rooted, true )  ; }"
6106,public void notify Data Changed (  ) { int current = m Current Selected Index ;  reset Select (  )  ;  m Tab Adapter . setup (  )  ;  select Tab ( current )  ; }
6107,"private static void save Channel By Shared Preferences (  Context context,  String channel ) {  Shared Preferences sp =  Preference Manager . get Default Shared Preferences ( context )  ;   Editor editor = sp . edit (  )  ;  editor . put String ( CHANNEL_KEY, channel )  ;  editor . put Int ( CHANNEL_VERSION_KEY, get Version Code ( context )  )  ;  editor . commit (  )  ; }"
6108,"public  Model With Annotated Class And Super Attributes$ Sub Model With Annotated Class And Super Attributes_ on Bind (  On Model Bound Listener< Model With Annotated Class And Super Attributes$ Sub Model With Annotated Class And Super Attributes_,  Object> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
6109,"public com . anychart . core . axismarkers .  Current Price Indicator rising Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rising Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6110,"public com . anychart . charts .  Sparkline negative Hatch Fill ( com . anychart . graphics . vector . hatchfill .  Hatch Fill Type type,  String color,  Number thickness,  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . negative Hatch Fill ( %s, %s, %s, %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null, wrap Quotes ( color ) , thickness, size )  )  ;  return this ; }"
6111,"private void set Rang Date (  ) { wheel Time . set Rang Date ( m Picker Options . start Date, m Picker Options . end Date )  ;  init Default Selected Date (  )  ; }"
6112,public  Epoxy Model<?> get Model By Id ( long id ) { for  (  Epoxy Model<?> model : get Current Models (  )  )  {     if  ( model . id (  )  == id )  {         return model ;      } } return null ; }
6113,"public com . anychart . charts .  Tree Map min Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
6114,public final int get Item Count Of Types (  Integer .  .  .  view Types ) {  List< Integer> view Type List =  Arrays . as List ( view Types )  ;  int count = 0 ;  for  ( int i = 0 ;  i < get Item Count (  )  ;  i++ )  {     if  ( view Type List . contains ( get Item View Type ( i )  )  )  {         count++ ;      } } return count ; }
6115,"public P Stream get Data ( P Stream Provider p Stream Provider,  Purpose purpose ) { this . provider2 Purpose . put ( p Stream Provider, purpose )  ;  return new P Stream ( this, p Stream Provider )  ; }"
6116,"protected void prepare Video (  ) { if  ( m Set Up Lazy )  {     super . set Up ( m Origin Url, m Cache, m Cache Path, m Map Head Data, m Title )  ;  } super . prepare Video (  )  ; }"
6117,"public void test Has Opt Out Tracking Or Not (  )  throws  Interrupted Exception{ // opt Out Track calls m Clean Up Calls = new  Count Down Latch ( 4 )  ;  m Mixpanel API = new  Mixpanel API ( get Context (  ) , m Mock Referrer Preferences, TOKEN, true, null )  {     @ Override      Persistent Identity get Persistent Identity (  Context context,  Future< Shared Preferences> referrer Preferences,  String token )  {         m Persistent Identity = super . get Persistent Identity ( context, referrer Preferences, token )  ;          return m Persistent Identity ;      }     @ Override      Analytics Messages get Analytics Messages (  )  {         return m Analytics Messages ;      } } ;  assert True ( m Mixpanel API . has Opted Out Tracking (  )  )  ;  m Mixpanel API . opt In Tracking (  )  ;  assert False ( m Mixpanel API . has Opted Out Tracking (  )  )  ;  m Mixpanel API . opt Out Tracking (  )  ;  assert True ( m Mixpanel API . has Opted Out Tracking (  )  )  ;  assert True ( m Clean Up Calls . await ( MAX_TIMEOUT_POLL,  Time Unit . MILLISECONDS )  )  ; }"
6118,public void on Detach (  ) { m Event Tracker . record Event (  Event . ON_HOLDER_DETACH )  ;  m Is Holder Attached = false ;  attach Or Detach Controller (  )  ; }
6119,"public int mul ( int .  .  .  nums ) { LOGGER . info ( "" Arithmetic mul {}"", VERSION )  ;  return old Source . accumulate Mul ( nums )  ; }"
6120,"private static X509 Extended Trust Manager get Default Extended Trust Manager (  ) {  Trust Manager Factory trust Manager Factory ;  try {     trust Manager Factory =  Trust Manager Factory . get Instance (  Trust Manager Factory . get Default Algorithm (  )  )  ;      // initialize the  Trust Manager Factory with the default  Key Store     trust Manager Factory . init (  (  Key Store )  null )  ;  } catch  (  No Such Algorithm Exception |  Key Store Exception e )  {     log . debug ( "" Unable to initialize default  Trust Manager Factory .   Using no-op X509 Extended Trust Manager . "", e )  ;      return NOOP_EXTENDED_TRUST_MANAGER ;  } // find the X509 Extended Trust Manager in the list of registered trust managers for  (  Trust Manager tm : trust Manager Factory . get Trust Managers (  )  )  {     if  ( tm instanceof X509 Extended Trust Manager )  {         return  ( X509 Extended Trust Manager )  tm ;      } } // no default X509 Extended Trust Manager found, so return a no-op log . debug ( "" No default X509 Extended Trust Manager found .   Using no-op . "" )  ;  return NOOP_EXTENDED_TRUST_MANAGER ; }"
6121,"public void get (  Number index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get ( %s )  ; "", index )  )  ; }"
6122,"public void minimum Gap (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . minimum Gap (  )  ; "" )  ; }"
6123,"private  Immutable List< Method Spec> create Partitioned Methods (  String method Name,  Iterable< Parameter Spec> parameters,  List< Code Block> statements,  Function< String,  Method Spec .  Builder> method Builder Creator ) { return  Lists . partition ( statements, STATEMENTS_PER_METHOD )  . stream (  )  . map (  partition -> method Builder Creator . apply ( get Unique Method Name ( method Name )  )  . add Modifiers ( PRIVATE )  . add Parameters ( parameters )  . add Code (  Code Blocks . concat ( partition )  )  . build (  )  )  . collect ( to Immutable List (  )  )  ; }"
6124,public boolean is Valid (  ) { long now = new  Date (  )  . get Time (  )  / 1000 ;  if  ( now > et )  {     return false ;  } if  ( msg == null )  {     return false ;  } if  ( !msg . is Valid (  )  )  {     return false ;  } return true ; }
6125,public boolean is Motor Enabled (  ) { return jni Is Motor Enabled ( addr )  ; }
6126,"public com . anychart . core . map . series .  Choropleth labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6127,"public void set Abs List View ( @ Non Null final  Abs List View abs List View ) { if  ( abs List View instanceof  List View )  {     set List View (  (  List View )  abs List View )  ;  } else {     throw new  Illegal Argument Exception ( "" Animate Addition Adapter requires a  List View!"" )  ;  }}"
6128,"public void exhaust Response (  Input Stream response Body As Stream ) { if  ( response Body As Stream != null )  {     try {         response Body As Stream . close (  )  ;      } catch  ( IO Exception io )  {          Timber . e ( io, "" Unexpected exception while exhausting not interesting HTTP response ;  will be IGNORED"" )  ;      } }}"
6129,"public static void set External Storage State (  File directory,  String state ) { storage State . put ( directory . to Path (  ) , state )  ; }"
6130,public static void set Exception On Missing Key ( boolean enabled ) { exception On Missing Key = enabled ; }
6131,"public com . anychart . scales .  Ordinal x Scale (  ) { return new com . anychart . scales .  Ordinal ( js Base + "" . x Scale (  ) "" )  ; }"
6132,public final  Ref get Advertised Ref (  String name ) { return advertised Refs . get ( name )  ; }
6133,public  String to String Url (  ) { return get Safe String Url (  )  ; }
6134,public T finish Loading Asset (  Asset Descriptor asset Desc ) { return finish Loading Asset ( asset Desc . file Name )  ; }
6135,public void set App Lock (  App Lock app Locker ) { if  ( m App Locker != null )  {     m App Locker . disable (  )  ;  } m App Locker = app Locker ; }
6136,"static byte [  ]  new Pre Filled Byte Array ( int offset, int size ) { byte [  ]  array = new byte [ size ]  ;  for  ( int i = 0 ;  i < size ;  i++ )  {     array [ i ]  =  ( byte )   ( offset + i )  ;  } return array ; }"
6137,public  String get Format Type (  ) { return  (  String )  get Object Value (  Data Types . OBJ_IMAGE_FORMAT )  ; }
6138,"public com . anychart . core . polar . series .  Polygon polygon (  String data, com . anychart . enums .  Text Parsing Mode csv Settings ) { return new com . anychart . core . polar . series .  Polygon (  String . format (  Locale . US, js Base + "" . polygon ( %s, %s ) "", wrap Quotes ( data ) ,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
6139,"public static  Iterable< Module Holder> get Native Module Iterator (  React Package react Package,  React Application Context react Application Context,  React Instance Manager react Instance Manager ) { F Log . d (  React Constants . TAG, react Package . get Class (  )  . get Simple Name (  )  + "" is not a  Lazy React Package, falling back to old version . "" )  ;  final  List< Native Module> native Modules ;  if  ( react Package instanceof  React Instance Package )  {      React Instance Package react Instance Package =  (  React Instance Package )  react Package ;      native Modules = react Instance Package . create Native Modules ( react Application Context, react Instance Manager )  ;  } else {     native Modules = react Package . create Native Modules ( react Application Context )  ;  } return new  Iterable< Module Holder> (  )  {     @ Non Null     @ Override     public  Iterator< Module Holder> iterator (  )  {         return new  Iterator< Module Holder> (  )  {             int position = 0 ;              @ Override             public  Module Holder next (  )  {                 return new  Module Holder ( native Modules . get ( position++ )  )  ;              }             @ Override             public boolean has Next (  )  {                 return position < native Modules . size (  )  ;              }             @ Override             public void remove (  )  {                 throw new  Unsupported Operation Exception ( "" Cannot remove methods "" )  ;              }         } ;      } } ; }"
6140,public int get Scroll Position Offset (  ) { return m Scroll Position Offset ; }
6141,"public com . anychart . charts .  Pert start Select Marquee (  Boolean repeat ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . start Select Marquee ( %s )  ; "", repeat )  )  ;  return this ; }"
6142,public  List< Interpreter> get Installed Interpreters (  ) {  List< Interpreter> interpreters = new  Array List< Interpreter> (  )  ;  for  (  Interpreter i : m Interpreter Set )  {     if  ( i . is Installed (  )  )  {         interpreters . add ( i )  ;      } } return interpreters ; }
6143,"public com . anychart . core . cartesian . series .  Range Bar top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
6144,"protected double convert Item Position Diff To Smooth Position Diff ( final float item Position Diff ) { // generally item moves the same way above center and bellow it .   So we don't care about diff sign .  final float abs Iem Position Diff =  Math . abs ( item Position Diff )  ;  // we detect if this item is close for center or not .   We use  ( 1 / max Visible Item )  ^  ( 1/3 )  as close definer .  if  ( abs Iem Position Diff >  Strict Math . pow ( 1 . 0f / m Layout Helper . m Max Visible Items, 1 . 0f / 3 )  )  {     // this item is far from center line, so we should make it move like square root function     return  Strict Math . pow ( abs Iem Position Diff / m Layout Helper . m Max Visible Items, 1 / 2 . 0f )  ;  } else {     // so square function in range of  [ 0,  ( 1/max Visible ) ^ ( 1/3 )  ]  is quite good in it ;      return  Strict Math . pow ( abs Iem Position Diff, 2 . 0f )  ;  }}"
6145,public static  Cycle Detecting Lock Factory new Instance (  Policy policy ) { return new  Cycle Detecting Lock Factory ( policy )  ; }
6146,"public com . anychart . core . stock . scrollerseries .  Range Step Area low Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
6147,public void set Last Seen On Wifi (  String last Seen On Wifi ) { this . last Seen On Wifi = last Seen On Wifi ; }
6148,public final int array Offset (  ) { return protected Array Offset (  )  ; }
6149,"public void do Super Import (  )  throws  Util Eval Error{ try {     get Class Path (  )  . insure Initialized (  )  ;      // prime the lookup table     get Class Name By Unq Name ( """" )  ;  // always true now //get Class Path (  )  . set Name Completion Include Unq Names ( true )  ;  } catch  (  Class Path Exception e )  {     throw new  Util Eval Error ( "" Error importing classpath "" + e )  ;  } super Import = true ; }"
6150,"private  Path get Build Artifacts Directory (  Build Target target, boolean is Scratch Dir ) { return is Scratch Dir ?  Build Target Paths . get Scratch Path ( get Project Filesystem (  ) , target, ""__lib%s"" )  :  Build Target Paths . get Gen Path ( get Project Filesystem (  ) , target, ""__lib%s"" )  ; }"
6151,public  Service Info get Service (  String class Name ) { return m Services . get ( class Name )  ; }
6152,public int [  ]  get State Set ( int index ) { return m State List State . m State Sets [ index ]  ; }
6153,"public void bottom (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . bottom (  )  ; "" )  ; }"
6154,public  Task< Void> terminate (  ) { credentials Provider . remove Change Listener (  )  ;  return async Queue . enqueue And Initiate Shutdown (  (  )  -> {     remote Store . shutdown (  )  ;      persistence . shutdown (  )  ;      if  ( gc Scheduler != null )  {         gc Scheduler . stop (  )  ;      } } )  ; }
6155,public com . google . ads . interactivemedia . v3 . api .  Ads Loader get Ads Loader (  ) { return ads Loader ; }
6156,protected static byte [  ]  value To Buffer ( int size ) { byte [  ]  buffer = new byte [ 4 ]  ;  buffer [ 0 ]  =  ( byte )   (  ( size & 0x0 FE00000 )  >> 21 )  ;  buffer [ 1 ]  =  ( byte )   (  ( size & 0x001 FC000 )  >> 14 )  ;  buffer [ 2 ]  =  ( byte )   (  ( size & 0x00003 F80 )  >> 7 )  ;  buffer [ 3 ]  =  ( byte )   ( size & 0x0000007 F )  ;  return buffer ; }
6157,public void set Lifecycle Callback (  Lifecycle Callback lifecycle Callback ) { this . lifecycle Callback = lifecycle Callback ; }
6158,"public  Rx Inserter< Todo> prepare Insert Into Todo ( @ On Conflict int on Conflict Algorithm, boolean without Auto Id ) { return new  Rx Inserter< Todo> ( connection,  Todo_ Schema . INSTANCE, on Conflict Algorithm, without Auto Id )  ; }"
6159,"public static void print (  Ct Method method,  Print Stream stream ) {  ( new  Instruction Printer ( stream )  )  . print ( method )  ; }"
6160,public  Complete Builder<T> with Get Resolver ( @ Nullable  Get Resolver<T> get Resolver ) { this . get Resolver = get Resolver ;  return this ; }
6161,public void set Highlight Circle Width ( float width ) { for  ( I Bubble Data Set set : m Data Sets )  {     set . set Highlight Circle Width ( width )  ;  }}
6162,"public static  Object get Stop Iteration Object (  Scriptable scope ) {  Scriptable top =  Scriptable Object . get Top Level Scope ( scope )  ;  return  Scriptable Object . get Top Scope Value ( top, ITERATOR_TAG )  ; }"
6163,"public com . anychart . charts .  Gantt credits (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . credits ( %s )  ; "", value )  )  ;  return this ; }"
6164,public void set Show Indicator ( boolean _show Indicator ) { m Show Indicator = _show Indicator ;  invalidate Global (  )  ; }
6165,"private static boolean is Output (  String path ) { //  Guessing if the path is build output return contains Or Ends With Segment ( path, BUCK_OUT_BASE )  || contains Or Ends With Segment ( path, GRADLE_OUTPUT_BASE )  ; }"
6166,"public static  Drm Init Data load Drm Init Data (  Data Source data Source,  Period period )  throws IO Exception,  Interrupted Exception{ int primary Track Type = C . TRACK_TYPE_VIDEO ;   Representation representation = get First Representation ( period, primary Track Type )  ;  if  ( representation == null )  {     primary Track Type = C . TRACK_TYPE_AUDIO ;      representation = get First Representation ( period, primary Track Type )  ;      if  ( representation == null )  {         return null ;      } }  Format manifest Format = representation . format ;   Format sample Format =  Dash Util . load Sample Format ( data Source, primary Track Type, representation )  ;  return sample Format == null ? manifest Format . drm Init Data : sample Format . copy With Manifest Format Info ( manifest Format )  . drm Init Data ; }"
6167,public  Login Behavior get Login Behavior (  ) { return login Behavior ; }
6168,public int get Family Vertical Padding (  ) { return  ( m Parent != null ? m Parent . get Family Vertical Padding (  )  : 0 )  + get Vertical Padding (  )  ; }
6169,"public static byte [  ]  asset As Byte Array (  Resources res,  String path )  throws IO Exception{  Input Stream is = res . get Assets (  )  . open ( path )  ;   Byte Array Output Stream buf = new  Byte Array Output Stream (  )  ;  byte [  ]  temp = new byte [ 1024 ]  ;  int read ;  while  (  ( read = is . read ( temp )  )  > 0 )  {     buf . write ( temp, 0, read )  ;  } is . close (  )  ;  return buf . to Byte Array (  )  ; }"
6170,"public static void migrate Realm (  Realm Configuration configuration )  throws  File Not Found Exception{ migrate Realm ( configuration, null )  ; }"
6171,"public void create View For Rating Level (  View root View, int index, @ Id Res int button Res Id, @ Id Res int text View Res Id ) {  Feedback Rating feedback Rating Object = new  Feedback Rating (  )  ;  feedback Rating Object . rating Button = root View . find View By Id ( button Res Id )  ;  feedback Rating Object . feedback Text View = root View . find View By Id ( text View Res Id )  ;  feedback Rating Object . rating Button . set Tag ( index )  ;  feedback Rating Object . rating Button . set On Click Listener (  Feedback Input Fragment . this )  ;  feedback Rating Object . rating Button . set Scale X ( 0 . 8f )  ;  feedback Rating Object . rating Button . set Scale Y ( 0 . 8f )  ;  feedback Rating Object . rating Value = FEEDBACK_RATING_VALUES . get ( index )  ;  feedback Rating Object . feedback Text View . set Visibility (  View . GONE )  ;  feedback Rating [ index ]  = feedback Rating Object ; }"
6172,"public static  Drawable get Drawable ( @ Non Null final  String key, @ Nullable final  Drawable default Value ) { return get Drawable ( key, default Value, get Default Cache Disk Utils (  )  )  ; }"
6173,"public void test Deserialize No Token Cache Item (  )  throws  Authentication Exception{ final  String additional Attribute String = ""{\""version\"":1}"" ;  final  File Mock Context mock Context = new  File Mock Context ( get Instrumentation (  )  . get Context (  )  )  ;  final  Default Token Cache Store mock Cache = new  Default Token Cache Store ( mock Context )  ;  final  Authentication Context context = get Authentication Context ( mock Context, VALID_AUTHORITY, false, mock Cache )  ;  context . deserialize ( additional Attribute String )  ; }"
6174,public long get Num Ofs Delta (  ) { return num Ofs Delta ; }
6175,"public void selectable (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . selectable (  )  ; "" )  ; }"
6176,public void set Unfocused Handler ( @ Nullable  Function< Void> unfocused Handler ) { m Unfocused Handler = unfocused Handler ; }
6177,"public com . anychart . charts .  Cartesian marker Palette (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . marker Palette ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6178,public  Iterator<E> iterator (  ) { return new  Itr ( to Array (  )  )  ; }
6179,public final  Vec2 set (  Vec2 v ) { this . x = v . x ;  this . y = v . y ;  return this ; }
6180,"public com . anychart . core . gauge . pointers .  Needle stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6181,public void on Animation Repeat (  Animator animation ) {}
6182,public  String get Identifier (  ) { return ID3v23 Frames . FRAME_ID_V3_TSIZ ; }
6183,"public static  Long Buffer wrap ( long [  ]  array ) { return wrap ( array, 0, array . length )  ; }"
6184,"public void test Dangling Commit Should Continue Lane (  )  throws  Exception{ final  Rev Commit a1 = commit (  )  ;  final  Rev Commit a2 = commit ( a1 )  ;  final  Rev Commit a3 = commit ( a2 )  ;  final  Rev Commit b1 = commit ( a1 )  ;  try  (  Plot Walk pw = new  Plot Walk ( db )  )  {     pw . mark Start ( pw . lookup Commit ( a3 )  )  ;      pw . mark Start ( pw . lookup Commit ( b1 )  )  ;       Plot Commit List< Plot Lane> pcl = new  Plot Commit List<> (  )  ;      pcl . source ( pw )  ;      // don't process a1     pcl . fill To ( 2 )  ;       Set< Integer> positions = as Set ( 0, 1 )  ;       Commit List Assert test = new  Commit List Assert ( pcl )  ;       Plot Lane lane B = test . commit ( b1 )  . lane Pos ( positions )  . current . get Lane (  )  ;      int pos A = test . commit ( a3 )  . lane Pos ( positions )  . get Lane Pos (  )  ;      test . commit ( a2 )  . lane Pos ( pos A )  ;      assert Array Equals ( "" Although the parent of b1, a1, is not processed yet, the b lane should still be drawn"", new  Plot Lane [  ]  { lane B }, test . current . passing Lanes )  ;      test . no More Commits (  )  ;  }}"
6185,"public  Model create Capsule ( float radius, float height, int divisions, final  Material material, final long attributes ) { return create Capsule ( radius, height, divisions, GL20 . GL_TRIANGLES, material, attributes )  ; }"
6186,"public void is Not Equal To Default Instance (  ) { if  ( actual != null && actual . equals ( actual . get Default Instance For Type (  )  )  )  {     fail Without Actual ( simple Fact ( lenient Format ( "" Not true that  ( %s )  <%s> is not a default proto instance .   It has no set values . "", actual . get Class (  )  . get Name (  ) , actual Custom String Representation For Proto Package Members To Call (  )  )  )  )  ;  }}"
6187,"public void start Rotate ( boolean clockwise,  Animation Speed speed ) {  Animation rotate ;  //set up the rotation animation if  ( clockwise )  {     rotate = new  Rotate Animation ( 0, 360,  Animation . RELATIVE_TO_SELF, 0 . 5f,  Animation . RELATIVE_TO_SELF, 0 . 5f )  ;  } else {     rotate = new  Rotate Animation ( 360, 0,  Animation . RELATIVE_TO_SELF, 0 . 5f,  Animation . RELATIVE_TO_SELF, 0 . 5f )  ;  } //set up some extra variables rotate . set Repeat Count (  Animation . INFINITE )  ;  rotate . set Interpolator ( new  Linear Interpolator (  )  )  ;  rotate . set Start Offset ( 0 )  ;  rotate . set Repeat Mode (  Animation . RESTART )  ;  rotate . set Duration ( speed . get Rotate Duration (  )  )  ;  start Animation ( rotate )  ; }"
6188,"public void on Properties Changed (  Bundle properties ) { super . on Properties Changed ( properties )  ;  m Low Bit Ambient = properties . get Boolean ( PROPERTY_LOW_BIT_AMBIENT, false )  ;  m Burn In Protection = properties . get Boolean ( PROPERTY_BURN_IN_PROTECTION, false )  ;  if  (  Log . is Loggable ( TAG,  Log . DEBUG )  )  {      Log . d ( TAG, ""on Properties Changed: low-bit ambient = "" + m Low Bit Ambient + "", "" + ""burn-in protection = "" + m Burn In Protection )  ;  }}"
6189,public static  Finder specialized Finder (  String .  .  .  queries ) { var finder = ident Mult (  )  ;  for  (  String query : queries )  {     finder = finder . and (  Finder . contains ( query )  )  ;  } return finder ; }
6190,public static  Optional< Archive Format> get Format From Short Name (  String short Name ) { return  Stream . of (  Archive Format . values (  )  )  . filter (  format -> short Name . ends With ( format . short Name )  )  . find First (  )  ; }
6191,"public void save File Existing Folder (  ) { // create as folder assert True ( new  File ( BASE_TEMP_FILE_FULL_NAME_PATH )  . mkdirs (  )  )  ;  assert False (  Light Cache . save File ( BASE_TEMP_FILE_FULL_NAME_PATH, new byte [  ]  { 'd', 'e', 'f' }, true )  )  ; }"
6192,private boolean to Rect Left (  ) { return translate X <= 0 ; }
6193,"public com . anychart . core . cartesian . series .  Range Bar max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
6194,public byte [  ]  get Checksum (  ) { return pack Checksum ; }
6195,"public static  String [  ]  stories For Current Draft (  )  throws URI Syntax Exception{ URL resource =  Hpack Json Util . class . get Resource ( ""/hpack-test-case"" )  ;  if  ( resource == null )  {     return new  String [ 0 ]  ;  }  File test Case Directory = new  File ( resource . to URI (  )  )  ;   List< String> story Names = new  Array List<> (  )  ;  for  (  File path : test Case Directory . list Files (  )  )  {     if  ( path . is Directory (  )  && as List ( path . list (  )  )  . contains ( ""story_00 . json"" )  )  {         try {              Story first Story = read Story ( new  File ( path, ""story_00 . json"" )  )  ;              if  ( first Story . get Draft (  )  >= BASE_DRAFT )  {                 story Names . add ( path . get Name (  )  )  ;              }         } catch  ( IO Exception ignored )  {         //  Skip this path .          }     } } return story Names . to Array ( new  String [ 0 ]  )  ; }"
6196,"public void remove End Listener (  On Animation End Listener listener ) { remove Entry ( m End Listeners, listener )  ; }"
6197,"public com . anychart . core .  Visual Base With Bounds bottom (  Number bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", bottom )  )  ;  return this ; }"
6198,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
6199,public  Spruce Builder add Interpolator (  Interpolator interpolator ) { this . interpolator = interpolator ;  return this ; }
6200,"public void time Bag Of Primitives Reflection Streaming ( int reps )  throws  Exception{ for  ( int i = 0 ;  i < reps ;  ++i )  {      String Reader reader = new  String Reader ( json )  ;       Json Reader jr = new  Json Reader ( reader )  ;      jr . begin Object (  )  ;       Bag Of Primitives bag = new  Bag Of Primitives (  )  ;      while  ( jr . has Next (  )  )  {          String name = jr . next Name (  )  ;          for  (  Field field :  Bag Of Primitives . class . get Declared Fields (  )  )  {             if  ( field . get Name (  )  . equals ( name )  )  {                  Class<?> field Type = field . get Type (  )  ;                  if  ( field Type . equals ( long . class )  )  {                     field . set Long ( bag, jr . next Long (  )  )  ;                  } else if  ( field Type . equals ( int . class )  )  {                     field . set Int ( bag, jr . next Int (  )  )  ;                  } else if  ( field Type . equals ( boolean . class )  )  {                     field . set Boolean ( bag, jr . next Boolean (  )  )  ;                  } else if  ( field Type . equals (  String . class )  )  {                     field . set ( bag, jr . next String (  )  )  ;                  } else {                     throw new  Runtime Exception ( "" Unexpected: type: "" + field Type + "", name: "" + name )  ;                  }             }         }     }     jr . end Object (  )  ;  }}"
6201,"private  Path get Stub Dir (  ) { return get Output Dir (  )  . resolve ( ""stubs"" )  ; }"
6202,private void pop Frame (  ) { frame Stack . pop (  )  ; }
6203,"public T format ( @ Non Null  Decode Format format ) {  Preconditions . check Not Null ( format )  ;  return set (  Downsampler . DECODE_FORMAT, format )  . set (  Gif Options . DECODE_FORMAT, format )  ; }"
6204,public void enable (  ) { context . set Enabled ( true )  ;  this Table . set Enabled ( true )  ;  locals Table . set Enabled ( true )  ;  evaluator . set Enabled ( true )  ;  cmd Line . set Enabled ( true )  ; }
6205,"public com . anychart . charts .  Cartesian3d select Marquee Stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6206,"public com . anychart . core . utils .  Exports exports (  ) { return new com . anychart . core . utils .  Exports ( js Base + "" . exports (  ) "" )  ; }"
6207,public  State get_readable State (  ) { return _readable State ; }
6208,public static int get Nav Bar Color ( @ Non Null final  Window window ) { return window . get Navigation Bar Color (  )  ; }
6209,protected static int get Default Sms Subscription Id (  ) { return default Sms Subscription Id ; }
6210,"public  Bottom List Sheet Builder add Item ( int image Res,  Char Sequence text,  String tag, boolean has Red Point, boolean disabled ) { m Items . add ( new QMUI Bottom Sheet List Item Model ( text, tag )  . image ( image Res )  . red Point ( has Red Point )  . disabled ( disabled )  )  ;  return this ; }"
6211,"public com . anychart . core . gantt .  Data Grid Button padding (  String value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
6212,"public  String to Human (  String prefix,  String separator,  String suffix ) { return to String0 ( prefix, separator, suffix, true )  ; }"
6213,"public com . anychart . core . cartesian . series .  Continuous Range Base width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", width )  )  ;  return this ; }"
6214,public  Glide Request< Transcode Type> center Inside (  ) { return  (  Glide Request< Transcode Type> )  super . center Inside (  )  ; }
6215,"public com . anychart . core . ui .  Timeline position ( com . anychart . enums .  Anchor position ) { return new com . anychart . core . ui .  Timeline (  String . format (  Locale . US, js Base + "" . position ( %s ) "",  ( position != null )  ? position . get Js Base (  )  : null )  )  ; }"
6216,"public static  String get Library Version (  ) { return name Of Lib + "" : v"" +  Build Config . VERSION_NAME + ""  [ build-v"" +  String . value Of (  Build Config . VERSION_CODE )  + "" ] "" ; }"
6217,"public com . anychart . core . grids .  Map Settings vertical (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . vertical ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6218,"public com . anychart . charts .  Venn interactivity (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . interactivity ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6219,public boolean new Line At End (  ) { return text . length (  )  != 0 &&  ( text . char At ( text . length (  )  - 1 )  == NEWLINE || text . char At ( text . length (  )  - 1 )  == CARRIAGE_RETURN )  ; }
6220,public void add All ( int .  .  .  values ) { for  ( int value : values )  {     add ( value )  ;  }}
6221,public  Ndef Message get Ndef Push Message (  ) { if  ( !ndef Push Message Set )  {     throw new  Illegal State Exception (  )  ;  } return ndef Push Message ; }
6222,"public static void throw Local Mismatch (  Type Bearer found,  Type Bearer local ) { throw new  Sim Exception ( ""local variable type mismatch: "" + ""attempt to set or access a value of type "" + found . to Human (  )  + "" using a local variable of type "" + local . to Human (  )  + "" .   This is symptomatic of  . class transformation tools "" + ""that ignore local variable information . "" )  ; }"
6223,"public com . anychart . core . polar . series .  Range Column color Scale ( com . anychart . scales .  Ordinal Color settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
6224,"public void set Active ( boolean flag ) { if  ( flag )  {     jni Set Active ( addr, flag )  ;  } else {     this . world . deactivate Body ( this )  ;  }}"
6225,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
6226,"private X509 Trust Manager default Trust Manager (  )  throws  General Security Exception{  Trust Manager Factory trust Manager Factory =  Trust Manager Factory . get Instance (  Trust Manager Factory . get Default Algorithm (  )  )  ;  trust Manager Factory . init (  (  Key Store )  null )  ;   Trust Manager [  ]  trust Managers = trust Manager Factory . get Trust Managers (  )  ;  if  ( trust Managers . length != 1 || ! ( trust Managers [ 0 ]  instanceof X509 Trust Manager )  )  {     throw new  Illegal State Exception ( "" Unexpected default trust managers:"" +  Arrays . to String ( trust Managers )  )  ;  } return  ( X509 Trust Manager )  trust Managers [ 0 ]  ; }"
6227,"public  Builder set Scan Mode ( final int scan Mode ) { if  ( scan Mode < SCAN_MODE_OPPORTUNISTIC || scan Mode > SCAN_MODE_LOW_LATENCY )  {     throw new  Illegal Argument Exception ( ""invalid scan mode "" + scan Mode )  ;  } this . scan Mode = scan Mode ;  return this ; }"
6228,boolean has Data (  ) { return this . buffer != null ; }
6229,"public com . anychart . core . ui .  Timeline row Even Fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Even Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
6230,protected void set Drag Handle View ( @ Non Null  View view ) { if  ( view != null )  {     view . set On Touch Listener ( this )  ;  }}
6231,"public void put All (  Map<? extends K, ? extends V> m ) { int num Keys To Be Added = m . size (  )  ;  if  ( num Keys To Be Added == 0 )      return ;  /*		 *  Expand the map if the map if the number of mappings to be added is		 * greater than or equal to threshold .   This is conservative ;  the obvious		 * condition is  ( m . size (  )  + size )  >= threshold, but this condition could		 * result in a map with twice the appropriate capacity, if the keys to		 * be added overlap with the keys already in this map .   By using the		 * conservative calculation, we subject ourself to at most one extra		 * resize . 		 */ if  ( num Keys To Be Added > threshold )  {     int target Capacity =  ( int )   ( num Keys To Be Added / load Factor + 1 )  ;      if  ( target Capacity > MAXIMUM_CAPACITY )          target Capacity = MAXIMUM_CAPACITY ;      int new Capacity = table . length ;      while  ( new Capacity < target Capacity )  new Capacity <<= 1 ;      if  ( new Capacity > table . length )          resize ( new Capacity )  ;  } for  (  Iterator<? extends  Map .  Entry<? extends K, ? extends V>> i = m . entry Set (  )  . iterator (  )  ;  i . has Next (  )  ;   )  {      Map .  Entry<? extends K, ? extends V> e = i . next (  )  ;      put ( e . get Key (  ) , e . get Value (  )  )  ;  }}"
6232,private static void edge Split (  Ssa Method result ) { edge Split Predecessors ( result )  ;  edge Split Move Exceptions And Results ( result )  ;  edge Split Successors ( result )  ; }
6233,public void remove System Service (  String name ) { removed System Services . add ( name )  ; }
6234,"public void clear ( int maximum Capacity ) { int table Size = table Size ( maximum Capacity, load Factor )  ;  if  ( key Table . length <= table Size )  {     clear (  )  ;      return ;  } size = 0 ;  resize ( table Size )  ; }"
6235,"public static  Buck File create File (  Project project,  String text ) {  Psi File Factory psi File Factory =  Psi File Factory . get Instance ( project )  ;  return  (  Buck File )  psi File Factory . create File From Text (  Buck Language . INSTANCE, text )  ; }"
6236,"private void trim (  ) { int left = 0 ;  int right = 2 * k - 1 ;  int min Threshold Position = 0 ;  //  The leftmost position at which the greatest of the k lower elements // -- the new value of threshold -- might be found .  int iterations = 0 ;  int max Iterations =  Int Math . log2 ( right - left,  Rounding Mode . CEILING )  * 3 ;  while  ( left < right )  {     int pivot Index =  ( left + right + 1 )  >>> 1 ;      int pivot New Index = partition ( left, right, pivot Index )  ;      if  ( pivot New Index > k )  {         right = pivot New Index - 1 ;      } else if  ( pivot New Index < k )  {         left =  Math . max ( pivot New Index, left + 1 )  ;          min Threshold Position = pivot New Index ;      } else {         break ;      }     iterations++ ;      if  ( iterations >= max Iterations )  {         //  We've already taken O ( k log k ) , let's make sure we don't take longer than O ( k log k )  .           Arrays . sort ( buffer, left, right, comparator )  ;          break ;      } } buffer Size = k ;  threshold = buffer [ min Threshold Position ]  ;  for  ( int i = min Threshold Position + 1 ;  i < k ;  i++ )  {     if  ( comparator . compare ( buffer [ i ] , threshold )  > 0 )  {         threshold = buffer [ i ]  ;      } }}"
6237,"public  Map< String,  Firebase Remote Config Value> get All (  ) { return get Handler . get All (  )  ; }"
6238,"public void add Markers (  ) { // 添加 Marker点  Lat Lng ll A = new  Lat Lng ( 39 . 963175, 116 . 400244 )  ;   Lat Lng ll B = new  Lat Lng ( 39 . 942821, 116 . 369199 )  ;   Lat Lng ll C = new  Lat Lng ( 39 . 939723, 116 . 425541 )  ;   Lat Lng ll D = new  Lat Lng ( 39 . 906965, 116 . 401394 )  ;   Lat Lng ll E = new  Lat Lng ( 39 . 956965, 116 . 331394 )  ;   Lat Lng ll F = new  Lat Lng ( 39 . 886965, 116 . 441394 )  ;   Lat Lng ll G = new  Lat Lng ( 39 . 996965, 116 . 411394 )  ;   List< My Item> items = new  Array List< My Item> (  )  ;  items . add ( new  My Item ( ll A )  )  ;  items . add ( new  My Item ( ll B )  )  ;  items . add ( new  My Item ( ll C )  )  ;  items . add ( new  My Item ( ll D )  )  ;  items . add ( new  My Item ( ll E )  )  ;  items . add ( new  My Item ( ll F )  )  ;  items . add ( new  My Item ( ll G )  )  ;  m Cluster Manager . add Items ( items )  ; }"
6239,public void flush (  ) { input Frame Count = 0 ;  output Frame Count = 0 ;  pitch Frame Count = 0 ;  old Rate Position = 0 ;  new Rate Position = 0 ;  remaining Input To Copy Frame Count = 0 ;  prev Period = 0 ;  prev Min Diff = 0 ;  min Diff = 0 ;  max Diff = 0 ; }
6240,"public com . anychart . charts .  Venn stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6241,"static  Member Select local Field (  Component Implementation owning Component,  String field Name ) { return new  Local Field ( owning Component, field Name )  ; }"
6242,"private boolean adjust Bottom Lines (  ) { //  Bail out if we have a zero width ;  lines will be adjusted during next layout .  if  ( get Width (  )  == 0 )  {     return false ;  } int dest Bottom Lines ;  text Paint . set Text Size ( bottom Text Size )  ;  if  ( temp Error Text != null || helper Text != null )  {      Layout .  Alignment alignment =  ( get Gravity (  )  &  Gravity . RIGHT )  ==  Gravity . RIGHT || is RTL (  )  ?  Layout .  Alignment . ALIGN_OPPOSITE :  ( get Gravity (  )  &  Gravity . LEFT )  ==  Gravity . LEFT ?  Layout .  Alignment . ALIGN_NORMAL :  Layout .  Alignment . ALIGN_CENTER ;      text Layout = new  Static Layout ( temp Error Text != null ? temp Error Text : helper Text, text Paint, get Width (  )  - get Bottom Text Left Offset (  )  - get Bottom Text Right Offset (  )  - get Padding Left (  )  - get Padding Right (  ) , alignment, 1 . 0f, 0 . 0f, true )  ;      dest Bottom Lines =  Math . max ( text Layout . get Line Count (  ) , min Bottom Text Lines )  ;  } else {     dest Bottom Lines = min Bottom Lines ;  } if  ( bottom Lines != dest Bottom Lines )  {     get Bottom Lines Animator ( dest Bottom Lines )  . start (  )  ;  } bottom Lines = dest Bottom Lines ;  return true ; }"
6243,"public void add Resource ( R Type r Type,  Id Type id Type,  String name,  String id Value ) {  Set<R Dot Txt Entry> resource Set = null ;  if  ( this . r Type Resource Map . contains Key ( r Type )  )  {     resource Set = this . r Type Resource Map . get ( r Type )  ;  } else {     resource Set = new  Hash Set<R Dot Txt Entry> (  )  ;      this . r Type Resource Map . put ( r Type, resource Set )  ;  } R Dot Txt Entry r Dot Txt Entry = new R Dot Txt Entry ( id Type, r Type, name, id Value )  ;  boolean increase Resource = false ;  if  ( !resource Set . contains ( r Dot Txt Entry )  )  {     if  ( this . original Resource Map . contains Key ( r Dot Txt Entry )  )  {         this . r Type Enumerator Map . get ( r Type )  . previous (  )  ;          r Dot Txt Entry = this . original Resource Map . get ( r Dot Txt Entry )  ;      } else {         increase Resource = true ;      }     resource Set . add ( r Dot Txt Entry )  ;  }  Set<R Dot Txt Entry> increase Resource Set = null ;  //new r dot txt entry if  ( this . r Type Increase Resource Map . contains Key ( r Type )  )  {     increase Resource Set = this . r Type Increase Resource Map . get ( r Type )  ;  } else {     increase Resource Set = new  Hash Set<R Dot Txt Entry> (  )  ;      this . r Type Increase Resource Map . put ( r Type, increase Resource Set )  ;  } if  ( increase Resource )  {     increase Resource Set . add ( r Dot Txt Entry )  ;  // add Resource Directory ( r Type, name, resource Directory )  ;  }}"
6244,"protected void log To Dex Meta (  File new File,  File old File,  File dex Diff File,  String dest Md5 In Dvm,  String dest Md5 In Art,  String dex Diff Md5, long new Or Full Patched Crc ) { if  ( meta Writer == null && log Writer == null )  {     return ;  }  String parent Relative = get Parent Relative Path String To New File ( new File )  ;   String relative = get Relative Path String To New File ( new File )  ;  if  ( meta Writer != null )  {      String file Name = new File . get Name (  )  ;       String dex Mode = ""jar"" ;      if  ( config . m Dex Raw )  {         dex Mode = ""raw"" ;      }     //new file      String old Crc ;      if  ( old File == null )  {         old Crc = ""0"" ;           Logger . d ( "" Dex Decoder:add newly dex file: %s"", parent Relative )  ;      } else {         old Crc =  File Operation . get Zip Entry Crc ( config . m Old Apk File, relative )  ;          if  ( old Crc == null || old Crc . equals ( ""0"" )  )  {             throw new  Tinker Patch Exception (  String . format ( ""can't find zip Entry %s from old apk file %s"", relative, config . m Old Apk File . get Path (  )  )  )  ;          }     }      String meta = file Name + "","" + parent Relative + "","" + dest Md5 In Dvm + "","" + dest Md5 In Art + "","" + dex Diff Md5 + "","" + old Crc + "","" + new Or Full Patched Crc + "","" + dex Mode ;       Logger . d ( "" Dex Decoder:write meta file data: %s"", meta )  ;      meta Writer . write Line To Info File ( meta )  ;  } if  ( log Writer != null )  {      String log = relative + "", old Size="" +  File Operation . get File Sizes ( old File )  + "", new Size="" +  File Operation . get File Sizes ( new File )  + "", diff Size="" +  File Operation . get File Sizes ( dex Diff File )  ;      log Writer . write Line To Info File ( log )  ;  }}"
6245,"public com . anychart . core . grids .  Polar y Minor Grid (  Number index ) { return new com . anychart . core . grids .  Polar (  String . format (  Locale . US, js Base + "" . y Minor Grid ( %s ) "", index )  )  ; }"
6246,"public void color (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . color (  )  ; "" )  ; }"
6247,"public T get (  Class<T> an Interface ) { if  ( !allowed Direct Interfaces . contains ( an Interface )  )  {     throw new  Dependency Exception (  String . format ( "" Attempting to request an undeclared dependency %s . "", an Interface )  )  ;  } //  The container is guaranteed to contain a class keyed with  Publisher . class .   This is what we // want to restrict access to, if anyone wants to register their own  Component that for whatever // reason implements  Publisher, we don't want to interfere with it .   Hence the equals check and // not  Publisher . class . is Assignable From ( an Tnterface )  T value = delegate Container . get ( an Interface )  ;  if  ( !an Interface . equals (  Publisher . class )  )  {     return value ;  } @ Suppress Warnings ( ""unchecked"" )  T publisher =  ( T )  new  Restricted Publisher ( allowed Published Events,  (  Publisher )  value )  ;  return publisher ; }"
6248,protected boolean is Show X Sequence Horizontal Line ( int col ) { return true ; }
6249,"public com . anychart . charts .  Tree Map select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
6250,public boolean is Set Manifest (  ) { return this . manifest != null ; }
6251,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
6252,"public  String pack (  ) {  String view Str = view . flatten To String (  )  ;   String viewport Str = viewport . flatten To String (  )  ;   String visible Str = visible . flatten To String (  )  ;   String image Str = image . flatten To String (  )  ;  return  Text Utils . join ( DELIMITER, new  String [  ]  { view Str, viewport Str, visible Str, image Str } )  ; }"
6253,"public static void limit Process Time (  String activity Name,  Use Case use Case, long start Time, long end Time ) { initialize If Not Yet (  )  ;  long process Time = end Time - start Time ;  if  ( activity Name == null || process Time < ACTIVITY_PROCESS_TIME_THRESHOLD )  {     return ;  } switch ( use Case )  {     case CODELESS:         update Activity Map ( use Case, activity Name, activity Process Time Map Codeless, banned Codeless Activity Set )  ;          break ;      case SUGGESTED_EVENT:         update Activity Map ( use Case, activity Name, activity Process Time Map Se, banned Suggested Event Activity Set )  ;          break ;  }}"
6254,"private static float get Position Relative To Root Host (  View mount Content, boolean get X ) { float pos = 0 ;  @ Nullable  View current View = mount Content ;  while  ( true )  {     if  ( current View == null || ! ( current View . get Parent (  )  instanceof  View )  )  {         return pos ;      }     if  ( current View instanceof  Host && current View instanceof  Root Host )  {         return pos ;      }     pos += get X ? current View . get X (  )  : current View . get Y (  )  ;      current View =  (  View )  current View . get Parent (  )  ;  }}"
6255,"public void share With Pinterest (  String link Or Options,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Pinterest ( %s, %s )  ; "", wrap Quotes ( link Or Options ) , wrap Quotes ( description )  )  )  ; }"
6256,"private  Immutable Set< String> get Wanted Primary Dex Entries (  Proguard Translator Factory translator Factory,  Supplier< Immutable List< Class Node>> classes Supplier )  throws IO Exception{  Immutable Set .  Builder< String> builder =  Immutable Set . builder (  )  ;  // are wanted but not required, and therefore get added here .  if  ( dex Split Mode . is Primary Dex Scenario Overflow Allowed (  )  && primary Dex Scenario File . is Present (  )  )  {     add Scenario Classes ( translator Factory, classes Supplier, builder, primary Dex Scenario File . get (  )  )  ;  } return builder . build (  )  . stream (  )  . map (  input -> input + "" . class"" )  . collect (  Immutable Set . to Immutable Set (  )  )  ; }"
6257,public  Set< String> affects Tags (  ) { return affects Tags ; }
6258,"public com . anychart . charts .  Stock label (  String index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , wrap Quotes ( settings )  )  )  ;  return this ; }"
6259,public  File get Original File (  ) { return original File ; }
6260,"public void get Type (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Type (  )  ; "" )  ; }"
6261,public int get Big File Threshold (  ) { return big File Threshold ; }
6262,"public static  Unflavored Build Target of (  Cell Relative Path cell Relative Base Path,  String short Name ) { return interner . intern ( new  Unflavored Build Target ( cell Relative Base Path, short Name )  )  ; }"
6263,public  Confidence Level get Min Confidence Level (  ) { return min Confidence Level ; }
6264,public boolean get Allow Prefetching (  ) { return m Allow Prefetching ; }
6265,public boolean calls Super (  )  throws  Cannot Compile Exception{  Code Attribute code Attr = method Info . get Code Attribute (  )  ;  if  ( code Attr != null )  {      Code Iterator it = code Attr . iterator (  )  ;      try {         int index = it . skip Super Constructor (  )  ;          return index >= 0 ;      } catch  (  Bad Bytecode e )  {         throw new  Cannot Compile Exception ( e )  ;      } } return false ; }
6266,"public  Method Info obfuscated Method Info (  String original Class Name,  String original Method Name,  String original Method Desc ) {  Desc Info desc Info = parse Method Desc ( original Method Desc, true )  ;  //  Class name -> obfuscated method names .   Map< String,  Set< Method Info>> method Map = m Original Class Method Map . get ( original Class Name )  ;  if  ( method Map != null )  {      Set< Method Info> method Set = method Map . get ( original Method Name )  ;      if  ( null != method Set )  {         //  Find all matching methods .           Iterator< Method Info> method Info Iterator = method Set . iterator (  )  ;          while  ( method Info Iterator . has Next (  )  )  {              Method Info method Info = method Info Iterator . next (  )  ;               Method Info new Method Info = new  Method Info ( method Info )  ;              obfuscated Method Info ( new Method Info )  ;              if  ( new Method Info . matches ( desc Info . return Type, desc Info . arguments )  )  {                 new Method Info . set Desc ( desc Info . desc )  ;                  return new Method Info ;              }         }     } }  Method Info default Method Info =  Method Info . de Fault (  )  ;  default Method Info . set Desc ( desc Info . desc )  ;  default Method Info . set Original Name ( original Method Name )  ;  return default Method Info ; }"
6267,"protected  Stream Strategy build Strategy (  Context context,  String tag,  String name,  String path, boolean read Only,  Hash Map< String,  String> attrs )  throws IO Exception{  Stream Strategy result ;  if  ( TAG_RAW . equals ( tag )  )  {     return  ( new  Raw Resource Strategy ( context, path )  )  ;  } else if  ( TAG_ASSET . equals ( tag )  )  {     return  ( new  Asset Strategy ( context, path )  )  ;  } else {     result = build Local Strategy ( context, tag, name, path, read Only, attrs )  ;  } return  ( result )  ; }"
6268,"public  Find Iterable< Result T> find ( final  Class< Result T> result Class, final  Find Options options ) { return os Mongo Collection . find ( result Class, options )  ; }"
6269,"void report View Duration (  ) { L . d ( "" [  Module Views ]   View  [ "" + last View + "" ]  is getting closed, reporting duration:  [ "" +  (  Utils Time . current Timestamp Seconds (  )  - last View Start )  + "" ] , current timestamp:  [ "" +  Utils Time . current Timestamp Seconds (  )  + "" ] , last views start:  [ "" + last View Start + "" ] "" )  ;  if  ( last View != null && last View Start <= 0 )  {     L . e ( "" [  Module Views ]   Last view start value is not normal:  [ "" + last View Start + "" ] "" )  ;  } if  ( !_cly . get Consent (  Countly .  Countly Feature Names . views )  )  {     return ;  } //and therefore will be ignored if  ( last View != null && last View Start > 0 )  {      Hash Map< String,  Object> segments = new  Hash Map<> (  )  ;      segments . put ( ""name"", last View )  ;      segments . put ( ""dur"",  String . value Of (  Utils Time . current Timestamp Seconds (  )  - last View Start )  )  ;      segments . put ( ""segment"", "" Android"" )  ;      _cly . module Events . record Event Internal ( VIEW_EVENT_KEY, segments, 1, 0, 0, null, true )  ;      last View = null ;      last View Start = 0 ;  }}"
6270,public int hash Code (  ) { return hash Code ( parent )  + hash Code ( name )  + hash Code ( value )  ; }
6271,"public static void shake (  View view ) { translate ( view, 0 . 0f, 10 . 0f, 0 . 0f, 0 . 0f, 7, 700, false )  ; }"
6272,"public com . anychart . charts .  Stock scroller Grouping ( com . anychart . core . stock . grouping .  Level value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . scroller Grouping ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
6273,protected boolean is Build File Case Sensitive (  ) { return true ; }
6274,"private static  String strip Regexs (  String selector ) { return selector . replace All ( "" [ $ ] "", """" )  . replace All ( ""#$"", """" )  ; }"
6275,public int get Size (  ) { int len = 0 ;  if  ( value != null )  {     len =  (  ( byte [  ]  )  value )  . length ;  } return len ; }
6276,"public static  Authorization Exception from Json ( @ Non Null  String json Str )  throws JSON Exception{ check Not Empty ( json Str, ""json Str cannot be null or empty"" )  ;  return from Json ( new JSON Object ( json Str )  )  ; }"
6277,public boolean should Promote Grandchildren (  ) { return false ; }
6278,public synchronized  Rectangle get Rect (  String name ) { for  (  Page page : pages )  {      Rectangle rect = page . rects . get ( name )  ;      if  ( rect != null )          return rect ;  } return null ; }
6279,"public com . anychart . core . ui .  Timeline line Marker (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Marker ( %s )  ; "", value )  )  ;  return this ; }"
6280,"public byte [  ]  to Dex (  Writer human Out, boolean verbose )  throws IO Exception{ boolean annotate =  ( human Out != null )  ;   Byte Array Annotated Output result = to Dex0 ( annotate, verbose )  ;  if  ( annotate )  {     result . write Annotations To ( human Out )  ;  } return result . get Array (  )  ; }"
6281,"public static  Function< Optional<T>,  Stream<T>> present Values (  ) { return  optional -> optional . map (  Stream::of )  . or Else (  Stream . empty (  )  )  ; }"
6282,"private static  Code Block invoke (  Injection Site injection Site,  Class Name generated Type Name,  Code Block instance Code Block,  Function< Dependency Request,  Code Block> dependency Usage,  Kotlin Metadata Util metadata Util ) {  Immutable List .  Builder< Code Block> arguments =  Immutable List . builder (  )  ;  arguments . add ( instance Code Block )  ;  if  ( !injection Site . dependencies (  )  . is Empty (  )  )  {     arguments . add All ( injection Site . dependencies (  )  . stream (  )  . map ( dependency Usage )  . collect ( to List (  )  )  )  ;  }  Class Name enclosing Class = members Injector Name For Type ( as Type ( injection Site . element (  )  . get Enclosing Element (  )  )  )  ;   Method Spec method Spec = create ( injection Site, metadata Util )  ;  return invoke Method ( method Spec, arguments . build (  ) , enclosing Class, generated Type Name )  ; }"
6283,public void add Controller (  Media Controller controller ) { controllers . add ( controller )  ;  for  (  On Active Sessions Changed Listener listener : listeners )  {     listener . on Active Sessions Changed ( controllers )  ;  }}
6284,"public  List<? extends  Event> apply Tagged Listen Complete ( final  Tag tag ) { return persistence Manager . run In Transaction ( new  Callable< List<? extends  Event>> (  )  {     @ Override     public  List<? extends  Event> call (  )  {          Query Spec query = query For Tag ( tag )  ;          if  ( query != null )  {             persistence Manager . set Query Complete ( query )  ;               Operation op = new  Listen Complete (  Operation Source . for Server Tagged Query ( query . get Params (  )  ) ,  Path . get Empty Path (  )  )  ;              return apply Tagged Operation ( query, op )  ;          } else {             //  We've already removed the query .   No big deal, ignore the update             return  Collections . empty List (  )  ;          }     } } )  ; }"
6285,"public com . anychart . core . resource . resourcelist .  Image Settings margin (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
6286,public  Scriptable get Error Object (  ) { return null ; }
6287,"public static int get Port (  Project project,  String path )  throws  Number Format Exception, IO Exception,  Execution Exception{  String exec =  Buck Executable Settings Provider . get Instance ( project )  . resolve Buck Executable (  )  ;  if  (  Strings . is Null Or Empty ( exec )  )  {     throw new  Runtime Exception ( "" Buck executable is not defined in settings . "" )  ;  }  General Command Line command Line = new  General Command Line (  )  ;  command Line . set Exe Path ( exec )  ;  command Line . with Work Directory ( path )  ;  command Line . with Environment (  Environment Util . get Environment Map (  )  )  ;  command Line . add Parameter ( ""server"" )  ;  command Line . add Parameter ( ""status"" )  ;  command Line . add Parameter ( ""--reuse-current-config"" )  ;  command Line . add Parameter ( ""--http-port"" )  ;  command Line . set Redirect Error Stream ( true )  ;   Process p = command Line . create Process (  )  ;   Buffered Reader reader = new  Buffered Reader ( new  Input Stream Reader ( p . get Input Stream (  )  )  )  ;   String line ;  while  (  ( line = reader . read Line (  )  )  != null )  {     if  ( line . starts With ( SEARCH_FOR )  )  {         return  Integer . parse Int ( line . substring ( SEARCH_FOR . length (  )  )  )  ;      } } throw new  Runtime Exception ( "" Configured buck executable did not report a valid port string,"" + "" ensure "" + command Line . get Command Line String (  )  + "" can be run from "" + path )  ; }"
6288,"public com . anychart . math .  Rect get Pixel Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . get Pixel Bounds (  ) "" )  ; }"
6289,private void cancel Incomplete Timer (  ) { // Remove the existing incomplete timer m Incomplete Timer Started = false ;  m Handler . remove Callbacks ( m Incomplete Timer Runnable )  ; }
6290,"public static  Immutable List<? extends  Native Linkable> get Native Linkables (  Action Graph Builder graph Builder,  Iterable<? extends  Native Linkable> inputs,  Linker .  Linkable Dep Type link Style,  Predicate<? super  Native Linkable> traverse ) { return get Native Linkables ( graph Builder, inputs, link Style, traverse,  Optional . empty (  )  )  ; }"
6291,"public  Double Stream stream (  ) { return  Arrays . stream ( array, start, end )  ; }"
6292,private static boolean is Long Time Unit Based (  Method method ) {  Class<?> [  ]  parameter Types = method . get Parameter Types (  )  ;  return parameter Types . length >= 2 && parameter Types [ parameter Types . length - 2 ]  == long . class && parameter Types [ parameter Types . length - 1 ]  ==  Time Unit . class ; }
6293,"public com . anychart . charts .  Heat Map fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
6294,"protected void validate Impl ( final  Http URL Connection u, final  String prefix, final  String version, final  String name )  throws IO Exception{  String v ;  v = u . get Header Field ( prefix + JETS3 T_CRYPTO_VER )  ;  if  ( v == null )      //$NON-NLS-1$     v = """" ;  if  ( !version . equals ( v )  )      throw new IO Exception (  Message Format . format ( J Git Text . get (  )  . unsupported Encryption Version, v )  )  ;  v = u . get Header Field ( prefix + JETS3 T_CRYPTO_ALG )  ;  if  ( v == null )      //$NON-NLS-1$     v = """" ;  // http://docs . oracle . com/javase/8/docs/technotes/guides/security/ Standard Names . html if  ( !name . equals Ignore Case ( v )  )      throw new IO Exception (  Message Format . format ( J Git Text . get (  )  . unsupported Encryption Algorithm, v )  )  ; }"
6295,public static  Rounding Params from Corners Radii ( float [  ]  radii ) { return  ( new  Rounding Params (  )  )  . set Corners Radii ( radii )  ; }
6296,"public com . anychart . charts .  Circular Gauge marker (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . marker ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
6297,"protected void set Organization Name (  Component Name admin, @ Nullable  Char Sequence name ) { if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . O )  {     enforce Device Owner Or Profile Owner ( admin )  ;  } else {     enforce Profile Owner ( admin )  ;  } if  (  Text Utils . is Empty ( name )  )  {     organization Name = null ;  } else {     organization Name = name ;  }}"
6298,public  String json Serialize String (  ) { return json Serialize (  )  . to String (  )  ; }
6299,"public void show Error Dialog (  String error Message ) {  Message Dialog Fragment . new Instance ( error Message )  . show ( get Support Fragment Manager (  ) , FRAGMENT_DIALOG )  ; }"
6300,"private void validate Default Environment (  List< Throwable> errors ) {  List< Framework Method> environment Methods = get Test Class (  )  . get Annotated Methods (  Environment . class )  ;  if  ( environment Methods . is Empty (  )  )  {     errors . add ( new  Illegal Argument Exception ( "" Class requires a default environment, please add a static method marked"" + "" by @ Environment that returns an  End To End Environment to provide the runner"" + "" with a default environment .   Example:\n\n"" + ""@ Environment\n"" + "" End To End Environment create End To End Environment (  )  {\n\n}"" )  )  ;  } else if  ( environment Methods . size (  )  > 1 )  {     errors . add ( new  Illegal Argument Exception ( "" More than one default environment found .   If you would like to use an environment"" + ""for any particular tests, use the @ Environment For annotation .   Example: \n\n"" + ""@ Environment For ( \""test Name Should Build\"" ) \n"" + "" End To End Environment create End To End Environment For Case (  )  {\n\n}"" )  )  ;  } else {      Framework Method environment Method = environment Methods . get ( 0 )  ;      validate Environment Method ( environment Method, errors )  ;  }}"
6301,public void set Show Full Animation ( boolean show Full Animation ) { this . m Show Full Animation = show Full Animation ; }
6302,"static  Authorization Management Response response From ( @ Non Null  Intent data Intent ) { if  (  End Session Response . contains End Session Response ( data Intent )  )  {     return  End Session Response . from Intent ( data Intent )  ;  } if  (  Authorization Response . contains Authorization Response ( data Intent )  )  {     return  Authorization Response . from Intent ( data Intent )  ;  } throw new  Illegal Argument Exception ( "" Malformed intent"" )  ; }"
6303,"public void bottom (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . bottom (  )  ; "" )  ; }"
6304,"public void set Gesture Start Angle ( float x, float y ) { m Start Angle = m Chart . get Angle For Point ( x, y )  - m Chart . get Raw Rotation Angle (  )  ; }"
6305,"public void put String (  String s ) { int len = s . length (  )  ;  char [  ]  tmp = new char [ len ]  ;  s . get Chars ( 0, len, tmp, 0 )  ;  put String ( tmp, null, 0, len )  ; }"
6306,"public com . anychart . core . resource .  Logo right (  String right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", wrap Quotes ( right )  )  )  ;  return this ; }"
6307,public  Builder initialization Callback ( @ Nullable  Os Shared Realm .  Initialization Callback initialization Callback ) { this . initialization Callback = initialization Callback ;  return this ; }
6308,"public static void apply ( @ Non Null  View Position pos, @ Non Null  Point point ) { pos . view . set ( point . x, point . y, point . x + 1, point . y + 1 )  ;  pos . viewport . set ( pos . view )  ;  pos . visible . set ( pos . view )  ;  pos . image . set ( pos . view )  ; }"
6309,"public com . anychart . charts .  Circular Gauge left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
6310,public final  Optional< Type Mirror> contributed Primitive Type (  ) { return binding Element (  )  . filter (  binding Element -> binding Element instanceof  Executable Element )  . map (  binding Element ->  More Elements . as Executable ( binding Element )  . get Return Type (  )  )  . filter (  type -> type . get Kind (  )  . is Primitive (  )  )  ; }
6311,"public com . anychart . core . resource . resourcelist .  Text Settings margin (  Number value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
6312,"public com . anychart . charts .  Heat Map fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
6313,"public void get Stat ( com . anychart . enums .  Statistics key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Stat ( %s )  ; "",  ( key != null )  ? key . get Js Base (  )  : null )  )  ; }"
6314,"public com . anychart . core . stock . indicators .  Keltner Channels atr Period (  Number period ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . atr Period ( %s )  ; "", period )  )  ;  return this ; }"
6315,"public static  String format Stack Trace (  String title,  Stack Frame [  ]  stack ) {  String Builder stack Trace = new  String Builder (  )  ;  stack Trace . append ( title )  . append ( ""\n"" )  ;  for  (  Stack Frame frame : stack )  {     stack Trace . append ( frame . get Method (  )  )  . append ( ""\n"" )  . append ( ""    "" )  . append ( format Frame Source ( frame )  )  . append ( ""\n"" )  ;  } return stack Trace . to String (  )  ; }"
6316,"public com . anychart . core . gantt . edit .  Structure Edit fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
6317,"public static  Network<N, E> transpose (  Network<N, E> network ) { if  ( !network . is Directed (  )  )  {     // the transpose of an undirected network is an identical network     return network ;  } if  ( network instanceof  Transposed Network )  {     return  (  (  Transposed Network<N, E> )  network )  . network ;  } return new  Transposed Network<> ( network )  ; }"
6318,public static  Set< String> non Null Set ( @ Nullable  Collection< String> collection ) { return collection == null || collection . is Empty (  )  ?  Collections . < String>empty Set (  )  : new  Hash Set< String> ( collection )  ; }
6319,private  Storage Reference get Mock Storage Reference (  String path ) {  Storage Reference reference = mock (  Storage Reference . class )  ;  when ( m Storage . get Reference ( path )  )  . then Return ( reference )  ;  return reference ; }
6320,public void set Patch Service Notification Id ( int id ) {  Tinker Patch Service . set Tinker Notification Id ( id )  ; }
6321,"public void write Watch Change (  Watch Change change,  Snapshot Version snapshot Version ) { watch Stream . write Watch Change ( change, snapshot Version )  ; }"
6322,"public com . anychart . core . cartesian . series .  Line3d min Labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6323,"public static  Function< List< Item>,  Double> sum (  String num Field ) { return new  Field Sum Statistic ( num Field )  ; }"
6324,"public com . anychart . core . axes .  Map Ticks stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
6325,"public com . anychart . charts .  Sankey margin (  String value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, value4 )  )  ;  return this ; }"
6326,"synchronized  Countly record Exception Internal ( final  Throwable exception, final boolean it Is Handled, final  Map< String,  Object> custom Segmentation ) { L . i ( "" [  Module Crash ]   Logging exception, handled: [ "" + it Is Handled + "" ] "" )  ;  if  ( !_cly . is Initialized (  )  )  {     throw new  Illegal State Exception ( "" Countly . shared Instance (  )  . init must be called before recording exceptions"" )  ;  } if  ( !_cly . get Consent (  Countly .  Countly Feature Names . crashes )  )  {     return _cly ;  } if  ( exception == null )  {     L . d ( "" [  Module Crash ]  record Exception, provided exception was null, returning"" )  ;      return _cly ;  }  String Writer sw = new  String Writer (  )  ;   Print Writer pw = new  Print Writer ( sw )  ;  exception . print Stack Trace ( pw )  ;  if  ( record All Threads )  {     add All Thread Information To Crash ( pw )  ;  }  String exception String = sw . to String (  )  ;  if  ( crash Filter Check ( exception String )  )  {     L . d ( "" [  Module Crash ]   Crash filter found a match, exception will be ignored,  [ "" + exception String . substring ( 0,  Math . min ( exception String . length (  ) , 60 )  )  + "" ] "" )  ;  } else {     _cly . connection Queue_ . send Crash Report ( exception String, it Is Handled, false, custom Segmentation )  ;  } return _cly ; }"
6327,"public boolean clip Begin (  ) { return clip Begin ( x, y, width, height )  ; }"
6328,"public  Bit Array get Black Row ( int y,  Bit Array row )  throws  Not Found Exception{ return binarizer . get Black Row ( y, row )  ; }"
6329,public void set Model View Matrix (  Matrix4 model View Matrix ) { m Model View Matrix = model View Matrix . get Float Values (  )  ;  m Vertex Shader . set Model View Matrix ( m Model View Matrix )  ; }
6330,"public void common Then Alternative (  )  throws  Exception{ server . enqueue ( new  Mock Response (  )  )  ;  server . enqueue ( new  Mock Response (  )  )  ;  assert200 Http2 Response ( execute ( url ) , server . get Host Name (  )  )  ;   Http Url san Url = url . new Builder (  )  . host ( ""san . com"" )  . build (  )  ;  assert200 Http2 Response ( execute ( san Url ) , ""san . com"" )  ;  assert That ( client . connection Pool (  )  . connection Count (  )  )  . is Equal To ( 1 )  ; }"
6331,public  String get App Name (  ) { return app Name ; }
6332,"public static void assert Get Stream Keys And Manifest Filter Integration (  Filterable Manifest Media Period Factory<T> media Period Factory, T manifest, int period Index, @ Nullable  String ignored Mime Type ) {  Media Period media Period = media Period Factory . create Media Period ( manifest, period Index )  ;   Track Group Array track Group Array = get Track Groups ( media Period )  ;  //  Create test vector of query test selections: //  -  One selection with one track per group, two tracks or all tracks .  //  -  Two selections with tracks from multiple groups, or tracks from a single group .  //  -  Multiple selections with tracks from all groups .   List< List< Track Selection>> test Selections = new  Array List<> (  )  ;  for  ( int i = 0 ;  i < track Group Array . length ;  i++ )  {      Track Group track Group = track Group Array . get ( i )  ;      for  ( int j = 0 ;  j < track Group . length ;  j++ )  {         test Selections . add (  Collections . singleton List ( new  Test Track Selection ( track Group, j )  )  )  ;      }     if  ( track Group . length > 1 )  {         test Selections . add (  Collections . singleton List ( new  Test Track Selection ( track Group, 0, 1 )  )  )  ;          test Selections . add (  Arrays . as List ( new  Track Selection [  ]  { new  Test Track Selection ( track Group, 0 ) , new  Test Track Selection ( track Group, 1 )  } )  )  ;      }     if  ( track Group . length > 2 )  {         int [  ]  all Tracks = new int [ track Group . length ]  ;          for  ( int j = 0 ;  j < track Group . length ;  j++ )  {             all Tracks [ j ]  = j ;          }         test Selections . add (  Collections . singleton List ( new  Test Track Selection ( track Group, all Tracks )  )  )  ;      } } if  ( track Group Array . length > 1 )  {     for  ( int i = 0 ;  i < track Group Array . length - 1 ;  i++ )  {         for  ( int j = i + 1 ;  j < track Group Array . length ;  j++ )  {             test Selections . add (  Arrays . as List ( new  Track Selection [  ]  { new  Test Track Selection ( track Group Array . get ( i ) , 0 ) , new  Test Track Selection ( track Group Array . get ( j ) , 0 )  } )  )  ;          }     } } if  ( track Group Array . length > 2 )  {      List< Track Selection> selections From All Groups = new  Array List<> (  )  ;      for  ( int i = 0 ;  i < track Group Array . length ;  i++ )  {         selections From All Groups . add ( new  Test Track Selection ( track Group Array . get ( i ) , 0 )  )  ;      }     test Selections . add ( selections From All Groups )  ;  } // contain at least all requested formats .  for  (  List< Track Selection> test Selection : test Selections )  {      List< Stream Key> stream Keys = media Period . get Stream Keys ( test Selection )  ;      if  ( stream Keys . is Empty (  )  )  {         //  Manifests won't be filtered if stream key is empty .          continue ;      }     T filtered Manifest = manifest . copy ( stream Keys )  ;      //  The filtered manifest should only have one period left .       Media Period filtered Media Period = media Period Factory . create Media Period ( filtered Manifest, /* period Index= */     0 )  ;       Track Group Array filtered Track Group Array = get Track Groups ( filtered Media Period )  ;      for  (  Track Selection track Selection : test Selection )  {         if  ( ignored Mime Type != null && ignored Mime Type . equals ( track Selection . get Format ( 0 )  . sample Mime Type )  )  {             continue ;          }          Format [  ]  expected Formats = new  Format [ track Selection . length (  )  ]  ;          for  ( int k = 0 ;  k < track Selection . length (  )  ;  k++ )  {             expected Formats [ k ]  = track Selection . get Format ( k )  ;          }         assert One Track Group Contains Formats ( filtered Track Group Array, expected Formats )  ;      } }}"
6333,public static  Spring Looper create (  ) { return new  Legacy Android Spring Looper ( new  Handler (  )  )  ; }
6334,"public com . anychart . charts .  Pert select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6335,public  Builder set Config ( @ Nullable  Bitmap .  Config config ) { this . config = config ;  return this ; }
6336,"public void read Bytes (  Parsable Bit Array bit Array, int length ) { read Bytes ( bit Array . data, 0, length )  ;  bit Array . set Position ( 0 )  ; }"
6337,public  Device Property get Sensor Setting Property Id (  ) { return sensor Setting Property Id ; }
6338,public static  Builder< Comparable> maximum Size ( int maximum Size ) { return new  Builder< Comparable> (  Ordering . natural (  )  )  . maximum Size ( maximum Size )  ; }
6339,"protected void calculate Bounds ( float _ Width, float _ Margin ) { float max Value = 0 ;  int last = 0 ;  for  (  Bar Model model : m Data )  {     if  ( model . get Value (  )  > max Value )  {         max Value = model . get Value (  )  ;      } } int value Padding = m Show Values ?  ( int )  m Value Paint . get Text Size (  )  + m Value Distance : 0 ;  float height Multiplier =  ( m Graph Height - value Padding )  / max Value ;  for  (  Bar Model model : m Data )  {     float height = model . get Value (  )  * height Multiplier ;      last += _ Margin / 2 ;      model . set Bar Bounds ( new  Rect F ( last, m Graph Height - height, last + _ Width, m Graph Height )  )  ;      model . set Legend Bounds ( new  Rect F ( last, 0, last + _ Width, m Legend Height )  )  ;      last += _ Width +  ( _ Margin / 2 )  ;  }  Utils . calculate Legend Information ( m Data, 0, m Content Rect . width (  ) , m Legend Paint )  ; }"
6340,"public T find By Id (  Object id,  Class<T> clazz ) { check Table Exist ( clazz )  ;   Sql Info sql Info =  Sql Builder . get Select Sql As Sql Info ( clazz, id )  ;  if  ( sql Info != null )  {     debug Sql ( sql Info . get Sql (  )  )  ;       Cursor cursor = db . raw Query ( sql Info . get Sql (  ) , sql Info . get Bind Args As String Array (  )  )  ;      try {         if  ( cursor . move To Next (  )  )  {             return  Cursor Helper . get Entity ( cursor, clazz, this )  ;          }     } catch  (  Exception e )  {         e . print Stack Trace (  )  ;      } finally {         cursor . close (  )  ;      } } return null ; }"
6341,public  String get Path (  ) { return query . get Path (  )  . canonical String (  )  ; }
6342,"private static  Test Case generate Wait For When Not Occupying Test Case ( final  Method method, final boolean fair ) { //  Not going to bother with all timeouts, just 0ms .  final boolean timed = is Timed ( method )  ;   String test Name = method . get Name (  )  +  ( fair ? "" ( fair ) "" : "" ( nonfair ) "" )  +  ( timed ? "" ( 0ms ) "" : "" (  ) "" )  + ""/ Not Occupying->IMSE"" ;  return new  Test Case ( test Name )  {     @ Override     protected void run Test (  )  throws  Throwable {          Monitor monitor = new  Monitor ( fair )  ;           Flag Guard guard = new  Flag Guard ( monitor )  ;           List< Object> arguments = new  Array List<> (  )  ;          arguments . add ( guard )  ;          if  ( is Duration Based ( method )  )  {             arguments . add (  Duration . ZERO )  ;          }         if  ( is Long Time Unit Based ( method )  )  {             arguments . add ( 0 L )  ;              arguments . add (  Time Unit . MILLISECONDS )  ;          }         try {             method . invoke ( monitor, arguments . to Array (  )  )  ;              fail ( ""expected  Illegal Monitor State Exception"" )  ;          } catch  (  Invocation Target Exception e )  {             assert Equals (  Illegal Monitor State Exception . class, e . get Target Exception (  )  . get Class (  )  )  ;          }     } } ; }"
6343,"public static byte [  ]  encode Base64 Chunked ( byte [  ]  binary Data ) { return encode Base64 ( binary Data, true )  ; }"
6344,protected final void clear Result (  ) { result Count = 0 ; }
6345,"public  Async Operation update In Tx (  Class<E> entity Class, int flags, E .  .  .  entities ) { return enque Entity Operation (  Operation Type .  Update In Tx Array, entity Class, entities, flags )  ; }"
6346,"public static  Matcher< Bundle> matcher (  Bundle expected ) { return new  Base Matcher< Bundle> (  )  {     @ Override     public boolean matches (  Object o )  {         if  ( ! ( o instanceof  Bundle )  )  {             return false ;          }          Bundle actual =  (  Bundle )  o ;          if  ( expected . size (  )  != actual . size (  )  || !expected . key Set (  )  . contains All ( actual . key Set (  )  )  )  {             return false ;          }         for  (  String key : expected . key Set (  )  )  {              Object actual Value = actual . get ( key )  ;               Object expected Value = expected . get ( key )  ;              if  ( expected Value instanceof  Bundle )  {                 if  ( !matcher (  (  Bundle )  expected Value )  . matches ( actual Value )  )  {                     return false ;                  }             } else {                 if  ( ! Objects . equal ( expected Value, actual Value )  )  {                     return false ;                  }             }         }         return true ;      }     @ Override     public void describe To (  Description description )  {         description . append Text ( expected . to String (  )  )  ;      } } ; }"
6347,public  Unsupported Encoding Exception get Encoding Exception (  ) { return encoding Exception ; }
6348,public  Commit Command set Sign (  Boolean sign ) { check Callable (  )  ;  this . sign Commit = sign ;  return this ; }
6349,"public com . anychart . charts .  Sparkline bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
6350,public  To String Helper add Value ( double value ) { return add Unconditional Holder (  String . value Of ( value )  )  ; }
6351,"public static  Android Packageable Filter create From Configuration Matcher (  Build Target build Target,  Android Native Target Configuration Matcher configuration Matcher ) { if  ( configuration Matcher instanceof  Noop Android Native Target Configuration Matcher )  {     return new  Noop Android Packageable Filter (  )  ;  } return new  Constraint Based Android Packageable Filter ( build Target . get Target Configuration (  )  )  ; }"
6352,"public com . anychart . core . resource .  Grid even Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . even Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
6353,public long get Buffered Position Us (  ) { if  ( !prepared )  {     return info . start Position Us ;  } long buffered Position Us = has Enabled Tracks ? media Period . get Buffered Position Us (  )  : C . TIME_END_OF_SOURCE ;  return buffered Position Us == C . TIME_END_OF_SOURCE ? info . duration Us : buffered Position Us ; }
6354,public boolean is Binary (  ) { return false ; }
6355,"public void enable Motor ( boolean flag ) { jni Enable Motor ( addr, flag )  ; }"
6356,"public com . anychart . charts .  Scatter x Axis (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Axis ( %s )  ; "", settings )  )  ;  return this ; }"
6357,"public com . anychart . core . ui .  Labels Factory min Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . min Labels (  ) "" )  ; }"
6358,"public void on Bind View Holder (  Recycler View .  View Holder holder, int position ) {}"
6359,"void mark Initialization Started (  ) { background Worker . check Running On Thread (  )  ;  //  Create the  Crashlytics initialization marker file, which is used to determine // whether the app crashed before initialization could complete .  initialization Marker . create (  )  ;   Logger . get Logger (  )  . v ( "" Initialization marker file was created . "" )  ; }"
6360,public static long get Heart Beat (  ) { return  Qiscus Core . get Heart Beat (  )  ; }
6361,"public static void d (  String tag,  String s,  Throwable e ) { if  ( LOG . DEBUG >= LOGLEVEL )       Log . d ( tag, s, e )  ; }"
6362,public void set Visual Pressed ( boolean visual Pressed ) { if  ( visual Pressed )      visual Pressed Time =  Time Utils . millis (  )  +  ( long )   ( visual Pressed Duration * 1000 )  ;  else     visual Pressed Time = 0 ; }
6363,public  Item get ( int n ) { return  (  Item )  get0 ( n )  ; }
6364,"public static void reveal ( final  View view, int center X, int center Y ) { if  ( !has Lollipop (  )  )  {     view . set Visibility (  View . VISIBLE )  ;      return ;  } //  Get the final radius for the clipping circle int final Radius =  Math . max ( view . get Width (  ) , view . get Height (  )  )  ;  //  Create the animator for this view  ( the start radius is zero )   Animator animator =  View Animation Utils . create Circular Reveal ( view, center X, center Y, 0, final Radius )  ;  //  Make the view visible and start the animation view . set Visibility (  View . VISIBLE )  ;  animator . start (  )  ; }"
6365,public void set Z ( double z ) { m Position . z = z ;  if  ( m Look At Enabled && m Look At Valid )      reset To Look At (  )  ;  mark Model Matrix Dirty (  )  ; }
6366,"public static  Function< List< Item>,  Number> min (  String num Field ) { return new  Field Min Statistic ( num Field )  ; }"
6367,public static  View Transition Builder transit ( @ Nullable  View view ) { return new  View Transition Builder ( view )  ; }
6368,public  Activity get Current Activity (  ) { if  ( m Current Activity == null )  {     return null ;  } return m Current Activity . get (  )  ; }
6369,public float get Friction (  ) { return jni Get Friction ( addr )  ; }
6370,"public static int get Status Bar Height (  Context context ) { if  (  Skin Device Utils . is Xiaomi (  )  )  {     int resource Id = context . get Resources (  )  . get Identifier ( ""status_bar_height"", ""dimen"", ""android"" )  ;      if  ( resource Id > 0 )  {         return context . get Resources (  )  . get Dimension Pixel Size ( resource Id )  ;      }     return 0 ;  } try {      Class<?> c =  Class . for Name ( ""com . android . internal . R$dimen"" )  ;       Object obj = c . new Instance (  )  ;       Field field = c . get Field ( ""status_bar_height"" )  ;      int x =  Integer . parse Int ( field . get ( obj )  . to String (  )  )  ;      if  ( x > 0 )  {         return context . get Resources (  )  . get Dimension Pixel Size ( x )  ;      } } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  } return 0 ; }"
6371,"public void add Import (  String type )  throws IO Exception{  Matcher matcher = TYPE_PATTERN . matcher ( type )  ;  if  ( !matcher . matches (  )  )  {     throw new  Illegal Argument Exception ( type )  ;  } if  ( imported Types . put ( type, matcher . group ( 1 )  )  != null )  {     throw new  Illegal Argument Exception ( type )  ;  } out . write ( ""import "" )  ;  out . write ( type )  ;  out . write ( "" ; \n"" )  ; }"
6372,public static  String create Css Tag (  List< String> urls ) { final  String Builder sb = new  String Builder (  )  ;  for  (  String url : urls )  {     sb . append ( create Css Tag ( url )  )  ;  } return sb . to String (  )  ; }
6373,"public com . anychart . charts .  Venn fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
6374,"public com . anychart . core . ui .  Scroll Bar slider Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . slider Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
6375,"public com . anychart . core . gantt .  Time Line Header adjust Font Size (  Boolean adjust Or Adjust By Width,  Boolean adjust By Height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . adjust Font Size ( %s, %s )  ; "", adjust Or Adjust By Width, adjust By Height )  )  ;  return this ; }"
6376,"public com . anychart . core .  State Settings hovered (  ) { return new com . anychart . core .  State Settings ( js Base + "" . hovered (  ) "" )  ; }"
6377,"public com . anychart . charts .  Pareto select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
6378,"private void write Entry (  Input Stream input,  Jar Entry entry )  throws IO Exception{ // add the entry to the jar archive m Output Jar . put Next Entry ( entry )  ;  // read the content of the entry from the input stream, and write it into the archive .  int count ;  while  (  ( count = input . read ( m Buffer )  )  != -1 )  {     m Output Jar . write ( m Buffer, 0, count )  ;      // update the digest     if  ( m Message Digest != null )  {         m Message Digest . update ( m Buffer, 0, count )  ;      } } // close the entry for this file m Output Jar . close Entry (  )  ;  if  ( m Manifest != null )  {     // update the manifest for this entry .       Attributes attr = m Manifest . get Attributes ( entry . get Name (  )  )  ;      if  ( attr == null )  {         attr = new  Attributes (  )  ;          m Manifest . get Entries (  )  . put ( entry . get Name (  ) , attr )  ;      }     attr . put Value ( DIGEST_ATTR, new  String (  Base64 . encode ( m Message Digest . digest (  )  ) , ""ASCII"" )  )  ;  }}"
6379,"public static  Function< Item,  Number> min (  String num List Field ) { return new  Field Min Statistic ( num List Field )  ; }"
6380,public static long nano Time (  ) { return nano Time ; }
6381,"public void set Attributef (  String name, float value1, float value2, float value3, float value4 ) { GL20 gl =  Gdx . gl20 ;  int location = fetch Attribute Location ( name )  ;  gl . gl Vertex Attrib4f ( location, value1, value2, value3, value4 )  ; }"
6382,public static long get On Progress Threshold (  ) {  Validate . sdk Initialized (  )  ;  return on Progress Threshold . get (  )  ; }
6383,public void set Memory Class ( int memory Class ) { this . memory Class = memory Class ; }
6384,"private static boolean comments Equal (  Xml Cursor xml One,  Xml Cursor xml Two ) { boolean result = false ;  if  ( xml One . is Comment (  )  && xml Two . is Comment (  )  )  {     if  ( xml One . get Text Value (  )  . equals ( xml Two . get Text Value (  )  )  )  {         result = true ;      } } return result ; }"
6385,public com . google . protobuf .  Byte String get Locale Bytes (  ) { java . lang .  Object ref = locale_ ;  if  ( ref instanceof  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      locale_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
6386,public void set Legend Text Size ( float _legend Text Size ) { m Legend Text Size =  Utils . dp To Px ( _legend Text Size )  ; }
6387,"public T delay Scale X ( float .  .  .  transition ) { get Delayed Processor (  )  . add Process ( SCALE_X, transition )  ;  return self (  )  ; }"
6388,public static  Scheduled Thread Pool Executor get Task Executor (  ) { return  Qiscus Core . get Task Executor (  )  ; }
6389,"public com . anychart . core . annotations .  Trend Channel stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6390,"public  String get Uri ( long download Id ) { return get String ( download Id,  Download Manager . COLUMN_URI )  ; }"
6391,public void set Data ( V data ) { this . data = data ; }
6392,public static _ Fields find By Thrift Id ( int field Id ) { switch ( field Id )  {     case // STORES_WRITTEN_INTO     1:         return STORES_WRITTEN_INTO ;      case // ARTIFACT_SIZE_BYTES     2:         return ARTIFACT_SIZE_BYTES ;      default:         return null ;  }}
6393,public  List< Persistent Store> get Persistent Stores (  ) { return new  Array List< Persistent Store> ( store Uuid To Persistent Store . values (  )  )  ; }
6394,"public static  Rop op Or (  Type List types ) { return pick Binary Op ( types, OR_CONST_INT, OR_CONST_LONG, null, null, OR_INT, OR_LONG, null, null )  ; }"
6395,"private void bind Logging Event ( SQ Lite Statement stmt, I Logging Event event )  throws SQL Exception{ stmt . bind Long ( TIMESTMP_INDEX, event . get Time Stamp (  )  )  ;  stmt . bind String ( FORMATTED_MESSAGE_INDEX, event . get Formatted Message (  )  )  ;  stmt . bind String ( LOGGER_NAME_INDEX, event . get Logger Name (  )  )  ;  stmt . bind String ( LEVEL_STRING_INDEX, event . get Level (  )  . to String (  )  )  ;  stmt . bind String ( THREAD_NAME_INDEX, event . get Thread Name (  )  )  ;  stmt . bind Long ( REFERENCE_FLAG_INDEX, compute Reference Mask ( event )  )  ; }"
6396,public static  Application get Apps (  ) { check App Id Setup (  )  ;  return app Instance ; }
6397,public  Builder sub Unable Text Res ( int sub Unable Text Res ) { if  ( this . sub Unable Text Res != sub Unable Text Res )  {     this . sub Unable Text Res = sub Unable Text Res ;       Boom Button button = button (  )  ;      if  ( button != null )  {         button . sub Unable Text Res = sub Unable Text Res ;          button . update Sub Text (  )  ;      } } return this ; }
6398,public boolean is Set Build Target (  ) { return this . build Target != null ; }
6399,"void init Script (  Script Or Fn Node script Node,  Node body ) {  Node children = body . get First Child (  )  ;  if  ( children != null )  {     script Node . add Children To Back ( children )  ;  }}"
6400,"public void include Point (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . include Point ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ; }"
6401,"public com . anychart . core . gauge . pointers .  Knob stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6402,"public  Component Descriptor root Component Descriptor (  Type Element type Element ) { return create ( type Element, check Annotation ( type Element,  Component Annotation::root Component Annotation, ""must have a component annotation"" )  )  ; }"
6403,public  React Instance Manager Builder set Java Script Executor Factory ( @ Nullable  Java Script Executor Factory java Script Executor Factory ) { m Java Script Executor Factory = java Script Executor Factory ;  return this ; }
6404,"public static  String encrypt (  String input Text,  String algorithm Name ) { if  ( input Text == null || """" . equals ( input Text . trim (  )  )  )  {     return """" ;  } if  ( algorithm Name == null || """" . equals ( algorithm Name . trim (  )  )  )  {     algorithm Name = ""md5"" ;  }  String encrypt Text = null ;  try {      Message Digest m =  Message Digest . get Instance ( algorithm Name )  ;      m . update ( input Text . get Bytes ( ""UTF8"" )  )  ;      byte [  ]  s = m . digest (  )  ;      return hex ( s )  ;  } catch  (  No Such Algorithm Exception e )  {     e . print Stack Trace (  )  ;  } catch  (  Unsupported Encoding Exception e )  {     e . print Stack Trace (  )  ;  } return encrypt Text ; }"
6405,"public com . anychart . charts .  Mekko a11y (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . a11y ( %s )  ; "", settings )  )  ;  return this ; }"
6406,"private void configure Response Spinner (  Spinner spinner, final  Class<T> response Class ) { final  Enum Adapter<T> adapter = new  Enum Adapter<> ( get Context (  ) , response Class )  ;  spinner . set Enabled ( is Mock Mode )  ;  spinner . set Adapter ( adapter )  ;  spinner . set Selection ( mock Response Supplier . get ( response Class )  . ordinal (  )  )  ;   Rx Adapter View . item Selections ( spinner )  . map ( adapter::get Item )  . filter (  item -> item != mock Response Supplier . get ( response Class )  )  . subscribe (  selected -> {      Timber . d ( "" Setting %s to %s"", response Class . get Simple Name (  ) , selected )  ;      mock Response Supplier . set ( selected )  ;  } )  ; }"
6407,public  String to String (  ) { return  Byte . to String ( get Value (  )  )  ; }
6408,"public static  Bottom Sheet Decoration Dialog new Instance ( @ Layout Res int layout Res Id, @ Nullable  Fragment fragment ) {  Bottom Sheet Decoration Dialog bottom Sheet Fragment = new  Bottom Sheet Decoration Dialog (  )  ;   Bundle args = new  Bundle (  )  ;  args . put Int ( ARG_LAYOUT, layout Res Id )  ;  bottom Sheet Fragment . set Arguments ( args )  ;  if  ( fragment != null )      bottom Sheet Fragment . set Target Fragment ( fragment, 0 )  ;  return bottom Sheet Fragment ; }"
6409,public  Span Size Lookup get Span Size Lookup (  ) { return adapter . get Span Size Lookup (  )  ; }
6410,"public int get Listener Count (  Class<?> t ) {  Object [  ]  l List = listener List ;  return get Listener Count ( l List, t )  ; }"
6411,public  Image Request build (  ) { validate (  )  ;  return new  Image Request ( this )  ; }
6412,public void set Rewind Increment Ms ( int rewind Ms ) {  Assertions . check State ( controller != null )  ;  controller . set Rewind Increment Ms ( rewind Ms )  ; }
6413,"public com . anychart . charts .  Tree Map select Marquee Stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
6414,protected boolean is Available (  ) { return true ; }
6415,"public com . anychart . charts .  Pie select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6416,"public final void solve33 To Out (  Vec3 b,  Vec3 out ) { assert  ( b != out )  ;   Vec3 . cross To Out Unsafe ( ey, ez, out )  ;  float det =  Vec3 . dot ( ex, out )  ;  if  ( det != 0 . 0f )  {     det = 1 . 0f / det ;  }  Vec3 . cross To Out Unsafe ( ey, ez, out )  ;  final float x = det *  Vec3 . dot ( b, out )  ;   Vec3 . cross To Out Unsafe ( b, ez, out )  ;  final float y = det *  Vec3 . dot ( ex, out )  ;   Vec3 . cross To Out Unsafe ( ey, b, out )  ;  float z = det *  Vec3 . dot ( ex, out )  ;  out . x = x ;  out . y = y ;  out . z = z ; }"
6417,"public com . anychart . charts .  Tag Cloud min Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
6418,public  Script Context get Context (  ) { return context ; }
6419,short get Char Index (  String char Name ) { return  ( short )  0 ; }
6420,"private void calculate Edits (  Edit r ) { middle . initialize ( r . begin A, r . end A, r . begin B, r . end B )  ;  if  ( middle . begin A >= middle . end A && middle . begin B >= middle . end B )      return ;  calculate Edits ( middle . begin A, middle . end A, middle . begin B, middle . end B )  ; }"
6421,public int get Edge Count (  ) { return outgoing Edges . size (  )  ; }
6422,public static void release All Videos (  ) { if  ( GSY Exo Video Manager . instance (  )  . listener (  )  != null )  {     GSY Exo Video Manager . instance (  )  . listener (  )  . on Completion (  )  ;  } GSY Exo Video Manager . instance (  )  . release Media Player (  )  ; }
6423,"public com . anychart . core . lineargauge . pointers .  Thermometer parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
6424,private void set Lengths (  String [  ]  strings )  throws IO Exception{ if  ( strings . length != value Count )  {     throw invalid Lengths ( strings )  ;  } try {     for  ( int i = 0 ;  i < strings . length ;  i++ )  {         lengths [ i ]  =  Long . parse Long ( strings [ i ]  )  ;      } } catch  (  Number Format Exception e )  {     throw invalid Lengths ( strings )  ;  }}
6425,"public void load Media (  Media Info media, boolean auto Play, int position )  throws  Transient Network Disconnection Exception,  No Connection Exception{ load Media ( media, auto Play, position, null )  ; }"
6426,public T text Padding (  Rect text Padding ) { if  ( this . text Padding != text Padding )  {     this . text Padding = text Padding ;       Boom Button button = button (  )  ;      if  ( button != null )  {         button . text Padding = text Padding ;          button . update Text Padding (  )  ;      } } return  ( T )  this ; }
6427,public boolean is Async Save Enabled (  ) { return is Async Save Enabled ; }
6428,"public  Notification build Download Completed Notification ( @ Drawable Res int small Icon, @ Nullable  Pending Intent content Intent, @ Nullable  String message ) { int title String Id = R . string . exo_download_completed ;  return build End State Notification ( small Icon, content Intent, message, title String Id )  ; }"
6429,public  Sort State View Provider get Header Sort State View Provider (  ) { return sortable Table Header View . get Sort State View Provider (  )  ; }
6430,"public  Model Do Not Use In To String_ on Unbind (  On Model Unbound Listener< Model Do Not Use In To String_,  Object> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
6431,"public long [  ]  set Size ( int new Size ) { if  ( new Size < 0 )      throw new  Illegal Argument Exception ( ""new Size must be >= 0: "" + new Size )  ;  if  ( new Size > items . length )      resize (  Math . max ( 8, new Size )  )  ;  size = new Size ;  return items ; }"
6432,"public static void drop Table (  Database db, boolean if Exists ) {  String sql = ""DROP TABLE "" +  ( if Exists ? ""IF EXISTS "" : """" )  + ""\""AN_ACTIVE_ENTITY\"""" ;  db . exec SQL ( sql )  ; }"
6433,"public com . anychart . core . lineargauge . pointers .  Tank stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
6434,"public com . anychart . charts .  Tag Cloud select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
6435,private void wait For Some Traces (  ) { try {      Thread . sleep ( 5000 )  ;  } catch  (  Interrupted Exception e )  {     e . print Stack Trace (  )  ;  }}
6436,public void does Not Contain ( int element ) { check (  )  . that ( actual List )  . does Not Contain ( element )  ; }
6437,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
6438,public static  Producer Monitor no Op (  ) { return NO_OP ; }
6439,public static  Builder builder (  ) { return new  Builder (  )  ; }
6440,"public static int reflection Hash Code ( int initial Non Zero Odd Number, int multiplier Non Zero Odd Number, T object, boolean test Transients,  Class<? super T> reflect Up To Class,  String .  .  .  exclude Fields ) { if  ( object == null )  {     throw new  Illegal Argument Exception ( "" The object to build a hash code for must not be null"" )  ;  }  Hash Code Builder builder = new  Hash Code Builder ( initial Non Zero Odd Number, multiplier Non Zero Odd Number )  ;   Class<?> clazz = object . get Class (  )  ;  reflection Append ( object, clazz, builder, test Transients, exclude Fields )  ;  while  ( clazz . get Superclass (  )  != null && clazz != reflect Up To Class )  {     clazz = clazz . get Superclass (  )  ;      reflection Append ( object, clazz, builder, test Transients, exclude Fields )  ;  } return builder . to Hash Code (  )  ; }"
6441,"static  Retry Info should Retry Exception (  Request<?> request, IO Exception exception, long request Start Ms, @ Nullable  Http Response http Response, @ Nullable byte [  ]  response Contents )  throws  Volley Error{ if  ( exception instanceof  Socket Timeout Exception )  {     return new  Retry Info ( ""socket"", new  Timeout Error (  )  )  ;  } else if  ( exception instanceof  Malformed URL Exception )  {     throw new  Runtime Exception ( "" Bad URL "" + request . get Url (  ) , exception )  ;  } else {     int status Code ;      if  ( http Response != null )  {         status Code = http Response . get Status Code (  )  ;      } else {         if  ( request . should Retry Connection Errors (  )  )  {             return new  Retry Info ( ""connection"", new  No Connection Error (  )  )  ;          }         throw new  No Connection Error ( exception )  ;      }      Volley Log . e ( "" Unexpected response code %d for %s"", status Code, request . get Url (  )  )  ;       Network Response network Response ;      if  ( response Contents != null )  {          List< Header> response Headers ;          response Headers = http Response . get Headers (  )  ;          network Response = new  Network Response ( status Code, response Contents, /* not Modified= */         false,  System Clock . elapsed Realtime (  )  - request Start Ms, response Headers )  ;          if  ( status Code ==  Http URL Connection . HTTP_UNAUTHORIZED || status Code ==  Http URL Connection . HTTP_FORBIDDEN )  {             return new  Retry Info ( ""auth"", new  Auth Failure Error ( network Response )  )  ;          }         if  ( status Code >= 400 && status Code <= 499 )  {             //  Don't retry other client errors .              throw new  Client Error ( network Response )  ;          }         if  ( status Code >= 500 && status Code <= 599 )  {             if  ( request . should Retry Server Errors (  )  )  {                 return new  Retry Info ( ""server"", new  Server Error ( network Response )  )  ;              }         }         //  Server error and client has opted out of retries, or 3xx .   No reason to retry .          throw new  Server Error ( network Response )  ;      }     return new  Retry Info ( ""network"", new  Network Error (  )  )  ;  }}"
6442,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
6443,"public  Elf Section get Section By Index ( int index ) {  Preconditions . check Argument ( index >= 0 && index < header . e_shnum )  ;   Elf Section section = sections . get ( index )  ;  if  ( section == null )  {     buffer . position (  ( int )   ( header . e_shoff + index * header . e_shentsize )  )  ;      section =  Elf Section . parse ( header . ei_class, buffer )  ;      sections . set ( index, section )  ;  } return section ; }"
6444,public void set Target Extends (  Class<?> extends Class ) { target Extends = extends Class ; }
6445,public static synchronized void disable Cache Folder Locking (  ) { cache Folder Locking Disabled = true ;  locked Cache Dirs . clear (  )  ; }
6446,"public void test Get Id_ Server Error_ Unregistered FID (  )  throws  Exception{ // start with an unregistered fid persisted Installation . insert Or Update Persisted Installation Entry (  Persisted Installation Entry . INSTANCE . with Unregistered Fid ( TEST_FID_1 )  )  ;  // have the server return a server error for the registration when ( mock Backend . create Firebase Installation ( any String (  ) , any String (  ) , any String (  ) , any String (  ) , any (  )  )  )  . then Return (  Installation Response . builder (  )  . set Response Code (  Response Code . BAD_CONFIG )  . build (  )  )  ;   Test On Complete Listener< String> on Complete Listener = new  Test On Complete Listener<> (  )  ;   Task< String> task = firebase Installations . get Id (  )  ;  task . add On Complete Listener ( executor, on Complete Listener )  ;   String fid = on Complete Listener . await (  )  ;  // do a get Id (  ) , the unregistered TEST_FID_1 should be returned assert With Message ( ""get Id  Task failed . "" )  . that ( fid )  . is Equal To ( TEST_FID_1 )  ;  //  Waiting for  Task that registers FID on the FIS  Servers .  executor . await Termination ( 500,  Time Unit . MILLISECONDS )  ;  //  We expect that the server error will cause the FID to be put into the error state .  //  There is nothing more we can do .   Persisted Installation Entry updated Installation Entry = persisted Installation . read Persisted Installation Entry Value (  )  ;  assert That ( updated Installation Entry . get Firebase Installation Id (  ) , equal To ( TEST_FID_1 )  )  ;  assert True ( ""the entry doesn't have an error fid: "" + updated Installation Entry, updated Installation Entry . is Errored (  )  )  ; }"
6447,"public static void f (  String tag,  String msg ) { if  ( s Level > LEVEL_FATAL )  {     return ;  }  Log . wtf ( tag, msg )  ; }"
6448,"public com . anychart . core . gantt . timelineheader .  Level Wrapper h Align ( com . anychart . graphics . vector . text . H Align value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . h Align ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
6449,"public com . anychart . core . annotations .  Fibonacci Fan hovered (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hovered ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6450,"public static  Bitmap bitmap From Stream (  Input Stream is,  Rect out Padding, int req Width, int req Height ) {  Bitmap bmp = null ;  if  ( req Height == 0 || req Width == 0 )  {     try {         return  Bitmap Factory . decode Stream ( is )  ;      } catch  (  Out Of Memory Error e )  {     } }  Bitmap Factory .  Options options = new  Bitmap Factory .  Options (  )  ;  options . in Just Decode Bounds = true ;  options . in Purgeable = true ;   Bitmap Factory . decode Stream ( is, out Padding, options )  ;  options = calculate In Sample Size ( options, req Width, req Height )  ;  bmp =  Bitmap Factory . decode Stream ( is, out Padding, options )  ;  return bmp ; }"
6451,"public com . anychart . charts .  Heat Map interactivity ( com . anychart . enums .  Hover Mode settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . interactivity ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
6452,"public com . anychart . core . ui .  Paginator padding (  Number [  ]  space Or Top Or Top And Bottom,  Number right Or Right And Left,  String bottom,  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "",  Arrays . to String ( space Or Top Or Top And Bottom ) , right Or Right And Left, wrap Quotes ( bottom ) , wrap Quotes ( left )  )  )  ;  return this ; }"
6453,"public com . anychart . ui .  Context Menu context Menu (  ) { return new com . anychart . ui .  Context Menu ( js Base + "" . context Menu (  ) "" )  ; }"
6454,"public void height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . height (  )  ; "" )  ; }"
6455,"public com . anychart . core . ui .  Label label (  String index ) { return new com . anychart . core . ui .  Label (  String . format (  Locale . US, js Base + "" . label ( %s ) "", wrap Quotes ( index )  )  )  ; }"
6456,public void test Write Pack4 Size Thin Vs No Thin (  )  throws  Exception{ test Write Pack4 (  )  ;  final long size Pack4 = os . size (  )  ;  tear Down (  )  ;  set Up (  )  ;  test Write Pack4 Thin Pack (  )  ;  final long size Pack4 Thin = os . size (  )  ;  assert True ( size Pack4 > size Pack4 Thin )  ; }
6457,"static int index For ( int h, int length ) { return h &  ( length - 1 )  ; }"
6458,public synchronized int get Zoom ( final int zoom_abs ) { int result = 0 ;  if  ( m Native Ptr != 0 )  {     native Update Zoom Limit ( m Native Ptr )  ;      final float range =  Math . abs ( m Zoom Max - m Zoom Min )  ;      if  ( range > 0 )  {         result =  ( int )   (  ( zoom_abs - m Zoom Min )  * 100 . f / range )  ;      } } return result ; }
6459,public final void prepare (  ) { throw If Prepared (  )  ;  prepare0 (  )  ;  prepared = true ; }
6460,public void on Pause (  ) { media Loader . pause (  )  ;  sensor Manager . unregister Listener ( phone Orientation Listener )  ;  super . on Pause (  )  ; }
6461,"public void set Canned Response ( @ What int what,  Bundle response ) { canned Responses . put ( what, response )  ; }"
6462,"public com . anychart . core . series .  Rendering Settings rendering (  ) { return new com . anychart . core . series .  Rendering Settings ( js Base + "" . rendering (  ) "" )  ; }"
6463,public  Sorting Order get Sorted Order (  ) { return sorted Order ; }
6464,public  Builder clear Type (  ) { type_ = 0 ;  on Changed (  )  ;  return this ; }
6465,"public void on Registration Id (  String registration Id,  Countly Messaging Mode mode ) { on Registration Id ( registration Id, mode,  Countly Messaging Provider . FCM )  ; }"
6466,"public static boolean load Timeline Snapshot (  Debug Component node,  String destination ) {  Thread Utils . assert Main Thread (  )  ;  final  Component Tree old Tree = node . get Context (  )  . get Component Tree (  )  ;  final  Tree Revisions tree Revisions = old Tree . get Timeline (  )  ;  if  ( tree Revisions != null )  {     final  Tree Revision selected = tree Revisions . find By Key ( destination )  ;      if  ( selected != null )  {         old Tree . reset State ( selected . revision Number, selected . root, selected . props, selected . handler )  ;      }     return true ;  } return false ; }"
6467,"private PDF Object find In Array ( PDF Object [  ]  array,  String key )  throws IO Exception{ int start = 0 ;  int end = array . length / 2 ;  while  ( end >= start && start >= 0 && end < array . length )  {     // find the key at the midpoint     int pos = start +  (  ( end - start )  / 2 )  ;       String pos Key = array [ pos * 2 ]  . get String Value (  )  ;      // compare the key to the key we are looking for     int comp = key . compare To ( pos Key )  ;      if  ( comp == 0 )  {         // they match .    Return the value         return array [  ( pos * 2 )  + 1 ]  ;      } else if  ( comp > 0 )  {         // too big, search the top half of the tree         start = pos + 1 ;      } else if  ( comp < 0 )  {         // too small, search the bottom half of the tree         end = pos - 1 ;      } } // not found return null ; }"
6468,public  Long get Id Value (  ) { if  ( id Value != null )      return id Value ;  return null ; }
6469,public int index Of Register ( int reg ) { int sz = size (  )  ;  for  ( int i = 0 ;  i < sz ;  i++ )  {      Register Spec rs ;      rs = get ( i )  ;      if  ( rs . get Reg (  )  == reg )  {         return i ;      } } return -1 ; }
6470,"private  Input Stream open URL ( URL url ) { try {     return url . open Stream (  )  ;  } catch  ( IO Exception e )  {     optional Warning ( "" Failed to open  [ "" + url . to String (  )  + "" ] "", e )  ;      return null ;  }}"
6471,"public  Member Value get Default Value (  ) { try {     return new  Annotations Attribute .  Parser ( info, const Pool )  . parse Member Value (  )  ;  } catch  (  Exception e )  {     throw new  Runtime Exception ( e . to String (  )  )  ;  }}"
6472,protected void set Author (  Person Ident new Author ) { author =  Objects . require Non Null ( new Author )  ; }
6473,public boolean is Incomplete Timer Expired (  ) { return incomplete Timer Expired ; }
6474,"public static int compare U Int32 ( final int a, final int b ) { final int cmp =  ( a >>> 1 )  -  ( b >>> 1 )  ;  if  ( cmp != 0 )      return cmp ;  return  ( a & 1 )  -  ( b & 1 )  ; }"
6475,public T3 get Value3 (  ) { return value3 ; }
6476,"public com . anychart . core . utils .  Bounds bounds (  ) { return new com . anychart . core . utils .  Bounds ( js Base + "" . bounds (  ) "" )  ; }"
6477,"public static int get Navigation Bar Height (  Context activity ) { if  ( !check Device Has Navigation Bar ( activity )  )  {     return 0 ;  }  Resources resources = activity . get Resources (  )  ;  int resource Id = resources . get Identifier ( ""navigation_bar_height"", ""dimen"", ""android"" )  ;  //获取 Navigation Bar的高度 int height = resources . get Dimension Pixel Size ( resource Id )  ;  return height ; }"
6478,public boolean set Image From Data (  ) { throw new  Unsupported Operation Exception (  )  ; }
6479,"public static void enqueue Work (  Context context,  Intent work ) { enqueue Work (  Applozic Service . get Context ( context ) ,  Conversation Intent Service . class, JOB_ID, work )  ; }"
6480,public  Volume Control get Volume Control (  ) { return get Capability (  Volume Control . class )  ; }
6481,"public  Ima Ads Loader build For Ad Tag (  Uri ad Tag Uri ) { return new  Ima Ads Loader ( context, ad Tag Uri, ima Sdk Settings, null, vast Load Timeout Ms, media Load Timeout Ms, media Bitrate, focus Skip Button When Available, ad Ui Elements, ad Event Listener, ima Factory )  ; }"
6482,"private static int calculate Size (  List<E> sorted Input List,  Comparator<? super E> comparator ) { int permutations = 1 ;  int n = 1 ;  int r = 1 ;  while  ( n < sorted Input List . size (  )  )  {     int comparison = comparator . compare ( sorted Input List . get ( n - 1 ) , sorted Input List . get ( n )  )  ;      if  ( comparison < 0 )  {         //  We move to the next non-repeated element .          permutations =  Int Math . saturated Multiply ( permutations,  Int Math . binomial ( n, r )  )  ;          r = 0 ;          if  ( permutations ==  Integer . MAX_VALUE )  {             return  Integer . MAX_VALUE ;          }     }     n++ ;      r++ ;  } return  Int Math . saturated Multiply ( permutations,  Int Math . binomial ( n, r )  )  ; }"
6483,"public com . anychart . charts .  Polar min Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
6484,"public final  Using Correspondence<V, V> formatting Diffs Using (  Diff Formatter<? super V, ? super V> formatter ) { return comparing Values Using (  Correspondence . <V>equality (  )  . formatting Diffs Using ( formatter )  )  ; }"
6485,"public com . anychart . core . stock .  Plot bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
6486,"public  Byte Catch List list For ( int pc ) { int sz = size (  )  ;   Item [  ]  result Arr = new  Item [ sz ]  ;  int result Sz = 0 ;  for  ( int i = 0 ;  i < sz ;  i++ )  {      Item one = get ( i )  ;      if  ( one . covers ( pc )  && type Not Found ( one, result Arr, result Sz )  )  {         result Arr [ result Sz ]  = one ;          result Sz++ ;      } } if  ( result Sz == 0 )  {     return EMPTY ;  }  Byte Catch List result = new  Byte Catch List ( result Sz )  ;  for  ( int i = 0 ;  i < result Sz ;  i++ )  {     result . set ( i, result Arr [ i ]  )  ;  } result . set Immutable (  )  ;  return result ; }"
6487,"public  Json Element next (  )  throws  Json Parse Exception{ if  ( !has Next (  )  )  {     throw new  No Such Element Exception (  )  ;  } try {     return  Streams . parse ( parser )  ;  } catch  (  Stack Overflow Error e )  {     throw new  Json Parse Exception ( "" Failed parsing JSON source to  Json"", e )  ;  } catch  (  Out Of Memory Error e )  {     throw new  Json Parse Exception ( "" Failed parsing JSON source to  Json"", e )  ;  } catch  (  Json Parse Exception e )  {     throw e . get Cause (  )  instanceof EOF Exception ? new  No Such Element Exception (  )  : e ;  }}"
6488,private boolean is Inside ( int rgb ) { return  ( rgb & 0x808080 )  != 0 &&  ( rgb & 0x80000000 )  != 0 ; }
6489,public void set Tag (  String tag ) { this . tag = tag ; }
6490,"public com . anychart . standalones .  Project Timeline baseline Bar Anchor (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . baseline Bar Anchor ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
6491,"public com . anychart . core .  Separate Chart get Current Chart (  ) { return new com . anychart . core .  Separate Chart ( js Base + "" . get Current Chart (  ) "" )  ; }"
6492,public static boolean is Circle Anim ( int anim Type ) { if  ( anim Type >= 0 && anim Type <= 360 )  {     return true ;  } return false ; }
6493,public boolean on Resolved Layout Direction Changed ( int layout Direction ) { return false ; }
6494,public  Test Injector< Object> test Injector (  ) { return test Injector ; }
6495,public  Rev Flag new Flag (  String name ) { return rev Pool . new Flag ( name )  ; }
6496,public  Polyline Options to Polyline Options (  ) {  Polyline Options polyline Options = new  Polyline Options (  )  ;  polyline Options . color ( m Polyline Options . get Color (  )  )  ;  polyline Options . clickable ( m Polyline Options . is Clickable (  )  )  ;  polyline Options . geodesic ( m Polyline Options . is Geodesic (  )  )  ;  polyline Options . visible ( m Polyline Options . is Visible (  )  )  ;  polyline Options . width ( m Polyline Options . get Width (  )  )  ;  polyline Options . z Index ( m Polyline Options . get Z Index (  )  )  ;  polyline Options . pattern ( get Pattern (  )  )  ;  return polyline Options ; }
6497,public  Chat Builder with Options ( JSON Object options ) { this . options = options ;  return this ; }
6498,public static void invert Array ( final byte [  ]  array ) { final int size = array . length ;  byte temp ;  for  ( int i = 0 ;  i < size / 2 ;  i++ )  {     temp = array [ i ]  ;      array [ i ]  = array [ size - 1 - i ]  ;      array [ size - 1 - i ]  = temp ;  }}
6499,"public void set Message And Attchment Icon (  Text View message Tv,  Image View attachment Icon ) { if  ( message . has Attachment (  )  && ! Message .  Content Type . TEXT_URL . get Value (  )  . equals ( message . get Content Type (  )  )  )  {     message Tv . set Text ( message . get File Metas (  )  == null && message . get File Paths (  )  != null ? message . get File Paths (  )  . get ( 0 )  . substring ( message . get File Paths (  )  . get ( 0 )  . last Index Of ( ""/"" )  + 1 )  : message . get File Metas (  )  != null ? message . get File Metas (  )  . get Name (  )  : """" )  ;      if  ( attachment Icon != null )  {         attachment Icon . set Visibility (  View . VISIBLE )  ;          attachment Icon . set Image Resource ( R . drawable . applozic_ic_action_attachment )  ;      } } else if  (  Message .  Content Type . LOCATION . get Value (  )  . equals ( message . get Content Type (  )  )  )  {     message Tv . set Text ( context . get String ( R . string .  Location )  )  ;      if  ( attachment Icon != null )  {         attachment Icon . set Visibility (  View . VISIBLE )  ;          attachment Icon . set Image Resource ( R . drawable . mobicom_notification_location_icon )  ;      } } else if  (  Message .  Content Type . TEXT_HTML . get Value (  )  . equals ( message . get Content Type (  )  )  )  {     message Tv . set Text ( message . get Message (  )  )  ;      if  ( attachment Icon != null )  {         attachment Icon . set Visibility (  View . GONE )  ;      } } else if  (  Message .  Content Type . PRICE . get Value (  )  . equals ( message . get Content Type (  )  )  )  {     if  ( attachment Icon != null )  {         attachment Icon . set Visibility (  View . GONE )  ;      } //return  Emoticon Utils . get Smiled Text ( context,  Conversation UI Service . FINAL_PRICE_TEXT + message . get Message (  ) , emojicon Handler )  } else {     message Tv . set Text (  ( ! Text Utils . is Empty ( message . get Message (  )  )  ? message . get Message (  )  . substring ( 0,  Math . min ( message . get Message (  )  . length (  ) , 50 )  )  : """" )  )  ;      if  ( attachment Icon != null )  {         attachment Icon . set Visibility (  View . GONE )  ;      } }}"
6500,"public static  Collector<T, ?, T> only Element (  ) { return  (  Collector )  ONLY_ELEMENT ; }"
6501,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
6502,"public com . anychart . core . stock . series .  Base max Labels (  String settings ) { return new com . anychart . core . stock . series .  Base (  String . format (  Locale . US, js Base + "" . max Labels ( %s ) "", wrap Quotes ( settings )  )  )  ; }"
6503,"private  Immutable Set< Path> get Trace Paths Of Builds (  Immutable Set< Build Log Entry> entries ) {  Immutable Set .  Builder< Path> trace Paths = new  Immutable Set .  Builder<> (  )  ;  long report Size Bytes = 0 ;  for  (  Build Log Entry entry : entries )  {     report Size Bytes += entry . get Size (  )  ;      if  ( entry . get Trace File (  )  . is Present (  )  )  {         try {              Path trace File = filesystem . get Path For Relative Existing Path ( entry . get Trace File (  )  . get (  )  )  ;              long trace File Size Bytes =  Files . size ( trace File )  ;              if  ( doctor Config . get Report Max Size Bytes (  )  . is Present (  )  )  {                 if  ( report Size Bytes + trace File Size Bytes < doctor Config . get Report Max Size Bytes (  )  . get (  )  )  {                     trace Paths . add ( entry . get Trace File (  )  . get (  )  )  ;                      report Size Bytes += trace File Size Bytes ;                  }             } else {                 trace Paths . add ( entry . get Trace File (  )  . get (  )  )  ;                  report Size Bytes += trace File Size Bytes ;              }         } catch  ( IO Exception e )  {             LOG . info ( "" Trace path %s wasn't valid, skipping it . "", entry . get Trace File (  )  . get (  )  )  ;          }     } } return trace Paths . build (  )  ; }"
6504,"public com . anychart . core . stock . scrollerseries .  Range Spline Area low Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6505,"public void test Update Ref Detached (  )  throws  Exception{  Object Id pid = db . resolve ( ""refs/heads/master"" )  ;   Object Id ppid = db . resolve ( ""refs/heads/master^"" )  ;   Ref Update update Ref = db . update Ref ( ""HEAD"", true )  ;  update Ref . set Force Update ( true )  ;  update Ref . set New Object Id ( ppid )  ;   Result update = update Ref . update (  )  ;  assert Equals (  Result . FORCED, update )  ;  assert Equals ( ppid, db . resolve ( ""HEAD"" )  )  ;   Ref ref = db . exact Ref ( ""HEAD"" )  ;  assert Equals ( ""HEAD"", ref . get Name (  )  )  ;  assert True ( ""is detached"", !ref . is Symbolic (  )  )  ;  // the branch HEAD referred to is left untouched assert Equals ( pid, db . resolve ( ""refs/heads/master"" )  )  ;   Reflog Reader reflog Reader = db . get Reflog Reader ( ""HEAD"" )  ;   Reflog Entry e = reflog Reader . get Reverse Entries (  )  . get ( 0 )  ;  assert Equals ( pid, e . get Old Id (  )  )  ;  assert Equals ( ppid, e . get New Id (  )  )  ;  assert Equals ( ""GIT_COMMITTER_EMAIL"", e . get Who (  )  . get Email Address (  )  )  ;  assert Equals ( ""GIT_COMMITTER_NAME"", e . get Who (  )  . get Name (  )  )  ;  assert Equals ( 1250379778000 L, e . get Who (  )  . get When (  )  . get Time (  )  )  ; }"
6506,private int compute Needed Room (  Metadata Block Info block Info ) { int length = 0 ;  for  (  Metadata Block a Metadata Block Application : block Info . metadata Block Application )  {     length += a Metadata Block Application . get Length (  )  ;  } for  (  Metadata Block a Metadata Block Seek Table : block Info . metadata Block Seek Table )  {     length += a Metadata Block Seek Table . get Length (  )  ;  } for  (  Metadata Block a Metadata Block Cue Sheet : block Info . metadata Block Cue Sheet )  {     length += a Metadata Block Cue Sheet . get Length (  )  ;  } return length ; }
6507,public static  Value Animator of Property Values Holder (  Property Values Holder .  .  .  values ) {  Value Animator anim = new  Value Animator (  )  ;  anim . set Values ( values )  ;  return anim ; }
6508,public static  Byte Source concat (  Iterator<? extends  Byte Source> sources ) { return concat (  Immutable List . copy Of ( sources )  )  ; }
6509,"public com . anychart . core . axes .  Ticks stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6510,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_PLAY_COUNTER ; }
6511,"public void period (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . period (  )  ; "" )  ; }"
6512,public void task Replace ( A Texture texture ) { try {     texture . replace (  )  ;  } catch  (  Texture Exception e )  {     throw new  Runtime Exception ( e )  ;  }}
6513,"public static void resolve Key Path (  Key Path key Path, int depth,  List< Key Path> accumulator,  Key Path current Partial Key Path,  Key Path Element Content content ) { if  ( key Path . fully Resolves To ( content . get Name (  ) , depth )  )  {     current Partial Key Path = current Partial Key Path . add Key ( content . get Name (  )  )  ;      accumulator . add ( current Partial Key Path . resolve ( content )  )  ;  }}"
6514,"private void perform Refresh Complete (  ) { m Status = PTR_STATUS_COMPLETE ;  // if is auto refresh do nothing, wait scroller stop if  ( m Scroll Checker . m Is Running && is Auto Refresh (  )  )  {     // do nothing     if  ( DEBUG )  {          Ptr C Log . d ( LOG_TAG, ""perform Refresh Complete do nothing, scrolling: %s, auto refresh: %s"", m Scroll Checker . m Is Running, m Flag )  ;      }     return ;  } notify UI Refresh Complete ( false )  ; }"
6515,public void set Reset On Touch Up ( boolean reset ) { this . reset On Touch Up = reset ; }
6516,"public com . anychart . core . polar . series .  Continuous Base max Point Width (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Point Width ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
6517,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
6518,"public  Immersion Bar auto Navigation Bar Dark Mode Enable ( boolean is Enable, @ Float Range ( from = 0f, to = 1f )  float auto Dark Mode Alpha ) { m Bar Params . auto Navigation Bar Dark Mode Enable = is Enable ;  m Bar Params . auto Navigation Bar Dark Mode Alpha = auto Dark Mode Alpha ;  return this ; }"
6519,"public static void request Purchase (  Context context,  String item Id ) { request Purchase ( context, item Id, false, null )  ; }"
6520,"public static double constrain To Range ( double value, double min, double max ) { //  Reject  Na N by testing for the good case  ( min <= max )  instead of the bad  ( min > max )  .  if  ( min <= max )  {     return  Math . min (  Math . max ( value, min ) , max )  ;  } throw new  Illegal Argument Exception ( lenient Format ( ""min  ( %s )  must be less than or equal to max  ( %s ) "", min, max )  )  ; }"
6521,"private static  Timeline [  ]  get Clipped Timelines ( long start Us, long end Us, boolean allow Dynamic Updates, boolean from Default Position,  Timeline first Timeline,  Timeline .  .  .  additional Timelines )  throws IO Exception{  Fake Media Source fake Media Source = new  Fake Media Source ( first Timeline, /* manifest= */ null )  ;   Clipping Media Source media Source = new  Clipping Media Source ( fake Media Source, start Us, end Us, /* enable Initial Discontinuity= */ true, allow Dynamic Updates, from Default Position )  ;  return get Clipped Timelines ( fake Media Source, media Source, additional Timelines )  ; }"
6522,public com . google . protobuf .  Bool Value Or Builder get Is Fallback Enabled For Completed Action Or Builder (  ) { if  ( is Fallback Enabled For Completed Action Builder_ != null )  {     return is Fallback Enabled For Completed Action Builder_ . get Message Or Builder (  )  ;  } else {     return is Fallback Enabled For Completed Action_ == null ? com . google . protobuf .  Bool Value . get Default Instance (  )  : is Fallback Enabled For Completed Action_ ;  }}
6523,public void show Soft Input (  View view ) {  Support Helper . show Soft Input ( view )  ; }
6524,"public com . anychart . core . cartesian . series .  Column3d point Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . point Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
6525,public long get Metadata Allocation Byte Count (  ) { return m Metadata Bytes Count ; }
6526,public  Set< String> affects Tables (  ) { return affects Tables ; }
6527,"public void save As Pdf (  Number paper Size Or Width Or Options,  Boolean landscape,  Number x,  Number y,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Pdf ( %s, %s, %s, %s, %s )  ; "", paper Size Or Width Or Options, landscape, x, y, wrap Quotes ( filename )  )  )  ; }"
6528,"public void set Result ( T Result result ) { if  ( !try Set Result ( result )  )  {     throw new  Illegal State Exception ( "" Cannot set the result of a completed task . "" )  ;  }}"
6529,"protected void establish Route (  Http Route route,  Http Context context )  throws  Http Exception, IO Exception{  Http Route Director rowdy = new  Basic Route Director (  )  ;  int step ;  do {      Http Route fact = managed Conn . get Route (  )  ;      step = rowdy . next Step ( route, fact )  ;      switch ( step )  {         case  Http Route Director . CONNECT_TARGET:         case  Http Route Director . CONNECT_PROXY:             managed Conn . open ( route, context, this . params )  ;              break ;          case  Http Route Director . TUNNEL_TARGET:             {                 boolean secure = create Tunnel To Target ( route, context )  ;                  this . log . debug ( "" Tunnel to target created . "" )  ;                  managed Conn . tunnel Target ( secure, this . params )  ;              }             break ;          case  Http Route Director . TUNNEL_PROXY:             {                 //  The most simple example for this case is a proxy chain                 // of two proxies, where P1 must be tunnelled to P2 .                  // route:  Source -> P1 -> P2 ->  Target  ( 3 hops )                  // fact:   Source -> P1 ->  Target        ( 2 hops )                  // the hop to establish                 final int hop = fact . get Hop Count (  )  - 1 ;                  boolean secure = create Tunnel To Proxy ( route, hop, context )  ;                  this . log . debug ( "" Tunnel to proxy created . "" )  ;                  managed Conn . tunnel Proxy ( route . get Hop Target ( hop ) , secure, this . params )  ;              }             break ;          case  Http Route Director . LAYER_PROTOCOL:             managed Conn . layer Protocol ( context, this . params )  ;              break ;          case  Http Route Director . UNREACHABLE:             throw new  Illegal State Exception ( "" Unable to establish route . "" + ""\nplanned = "" + route + ""\ncurrent = "" + fact )  ;          case  Http Route Director . COMPLETE:             // do nothing             break ;          default:             throw new  Illegal State Exception ( "" Unknown step indicator "" + step + "" from  Route Director . "" )  ;      } // switch } while  ( step >  Http Route Director . COMPLETE )  ; }"
6530,public boolean equals ( @ Check For Null  Object obj ) { if  ( obj == null )  {     return false ;  } if  ( get Class (  )  != obj . get Class (  )  )  {     return false ;  }  Stats other =  (  Stats )  obj ;  return count == other . count && double To Long Bits ( mean )  == double To Long Bits ( other . mean )  && double To Long Bits ( sum Of Squares Of Deltas )  == double To Long Bits ( other . sum Of Squares Of Deltas )  && double To Long Bits ( min )  == double To Long Bits ( other . min )  && double To Long Bits ( max )  == double To Long Bits ( other . max )  ; }
6531,"public static  Immutable Multimap<K, V> of ( K k1, V v1, K k2, V v2, K k3, V v3 ) { return  Immutable List Multimap . of ( k1, v1, k2, v2, k3, v3 )  ; }"
6532,protected int get Bits Per Component (  ) { return bpc ; }
6533,public void set Ref Log Ident (  Person Ident pi ) { ref Log Ident = pi ; }
6534,"public void remote Config Update ( final  Remote Config .  Remote Config Callback provided Callback ) { L . d ( "" [  Countly ]   Manually calling to update Remote Config"" )  ;  if  ( !is Initialized (  )  )  {     L . e ( "" Countly . shared Instance (  )  . init must be called before remote Config Update"" )  ;      return ;  } if  ( provided Callback == null )  {     remote Config (  )  . update ( null )  ;  } else {     remote Config (  )  . update ( new  Remote Config Callback (  )  {         @ Override         public void callback (  String error )  {             provided Callback . callback ( error )  ;          }     } )  ;  }}"
6535,"public com . anychart . core . cartesian . series .  Area3d bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
6536,"private void flush Left (  )  throws IO Exception{ append Newline If Necessary ( left Buf, left Column )  ;  while  ( left Buf . length (  )  != 0 )  {     right Column . write ( '\n' )  ;      output Full Lines (  )  ;  }}"
6537,public boolean equals (  Object obj ) { if  ( this == obj )      return true ;  return obj instanceof  Abstract Tag Item ; }
6538,public  Request Builder< Drawable> load ( @ Nullable byte [  ]  model ) { return as Drawable (  )  . load ( model )  ; }
6539,"public static void add Contents (  Dex File file,  Annotation annotation ) {  Type Ids Section type Ids = file . get Type Ids (  )  ;   String Ids Section string Ids = file . get String Ids (  )  ;  type Ids . intern ( annotation . get Type (  )  )  ;  for  (  Name Value Pair pair : annotation . get Name Value Pairs (  )  )  {     string Ids . intern ( pair . get Name (  )  )  ;      add Contents ( file, pair . get Value (  )  )  ;  }}"
6540,"int copy (  Block Based File file, long position, byte [  ]  dstbuf, int dstoff, int cnt )  throws IO Exception{ if  ( cnt == 0 )      return 0 ;  long length = file . length ;  if  ( 0 <= length && length <= position )      return 0 ;  int need = cnt ;  do {     pin ( file, position )  ;      int r = block . copy ( position, dstbuf, dstoff, need )  ;      position += r ;      dstoff += r ;      need -= r ;      if  ( length < 0 )          length = file . length ;  } while  ( 0 < need && position < length )  ;  return cnt - need ; }"
6541,"public static  Service Type value Of (  String s )  throws  Invalid Value Exception{ if  ( s == null )      throw new  Invalid Value Exception ( "" Can't parse null string"" )  ;   Service Type service Type = null ;  //  Sometimes crazy U Pn P devices deliver spaces in a URN, don't ask .  .  .  s = s . replace All ( ""\\s"", """" )  ;  //  First try UDA Service Type parse try {     service Type = UDA Service Type . value Of ( s )  ;  } catch  (  Exception ex )  { //  Ignore } if  ( service Type != null )      return service Type ;  //  Now try a generic  Service Type parse try {      Matcher matcher =  Service Type . PATTERN . matcher ( s )  ;      if  ( matcher . matches (  )  && matcher . group Count (  )  >= 3 )  {         return new  Service Type ( matcher . group ( 1 ) , matcher . group ( 2 ) ,  Integer . value Of ( matcher . group ( 3 )  )  )  ;      }     matcher =  Service Type . BROKEN_PATTERN . matcher ( s )  ;      if  ( matcher . matches (  )  && matcher . group Count (  )  >= 3 )  {         return new  Service Type ( matcher . group ( 1 ) , matcher . group ( 2 ) ,  Integer . value Of ( matcher . group ( 3 )  )  )  ;      }     // TODO: UPNP VIOLATION:  Eye TV  Netstream uses colons in service type token     // urn:schemas-microsoft-com:service:pbda:tuner:1     matcher =  Pattern . compile ( ""urn: ( "" +  Constants . REGEX_NAMESPACE + "" ) :service: (  . +? ) : (  [ 0-9 ] + )  . *"" )  . matcher ( s )  ;      if  ( matcher . matches (  )  && matcher . group Count (  )  >= 3 )  {          String clean Token = matcher . group ( 2 )  . replace All ( "" [ ^a-z A-Z_0-9\\- ] "", ""-"" )  ;          log . warning ( ""U Pn P specification violation, replacing invalid service type token '"" + matcher . group ( 2 )  + ""' with: "" + clean Token )  ;          return new  Service Type ( matcher . group ( 1 ) , clean Token,  Integer . value Of ( matcher . group ( 3 )  )  )  ;      }     // TODO: UPNP VIOLATION:  Ceyton  Infini TV uses colons in service type token and 'service Id' instead of 'service'     // urn:schemas-opencable-com:service Id:dri2:debug:1     matcher =  Pattern . compile ( ""urn: ( "" +  Constants . REGEX_NAMESPACE + "" ) :service Id: (  . +? ) : (  [ 0-9 ] + )  . *"" )  . matcher ( s )  ;      if  ( matcher . matches (  )  && matcher . group Count (  )  >= 3 )  {          String clean Token = matcher . group ( 2 )  . replace All ( "" [ ^a-z A-Z_0-9\\- ] "", ""-"" )  ;          log . warning ( ""U Pn P specification violation, replacing invalid service type token '"" + matcher . group ( 2 )  + ""' with: "" + clean Token )  ;          return new  Service Type ( matcher . group ( 1 ) , clean Token,  Integer . value Of ( matcher . group ( 3 )  )  )  ;      } } catch  (  Runtime Exception e )  {     throw new  Invalid Value Exception (  String . format ( "" Can't parse service type string  ( namespace/type/version )  '%s': %s"", s, e . to String (  )  )  )  ;  } throw new  Invalid Value Exception ( "" Can't parse service type string  ( namespace/type/version ) : "" + s )  ; }"
6542,"public static  File Key exact (  File directory, FS fs ) { return new  File Key ( directory, fs )  ; }"
6543,public void set Prevent Zero Size View Swipes ( boolean prevent Zero Size View Swipes ) { this . prevent Zero Size View Swipes = prevent Zero Size View Swipes ; }
6544,"public void in Marquee (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . in Marquee (  )  ; "" )  ; }"
6545,public void set Split Action Bar ( boolean split ) { m Split Action Bar = split ; }
6546,protected int determine Scale (  Number Format format ) { if  ( !is Strict (  )  )  {     return -1 ;  } if  ( !is Allow Fractions (  )  || format . is Parse Integer Only (  )  )  {     return 0 ;  } int minimum Fraction = format . get Minimum Fraction Digits (  )  ;  int maximum Fraction = format . get Maximum Fraction Digits (  )  ;  if  ( minimum Fraction != maximum Fraction )  {     return -1 ;  } int scale = minimum Fraction ;  if  ( format instanceof  Decimal Format )  {     int multiplier =  (  (  Decimal Format )  format )  . get Multiplier (  )  ;      if  ( multiplier == 100 )  {         scale += 2 ;      } else if  ( multiplier == 1000 )  {         scale += 3 ;      } } else if  ( format Type == PERCENT_FORMAT )  {     scale += 2 ;  } return scale ; }
6547,"public void dispatch Command ( int react Tag, int command Id, @ Nullable  Readable Array command Args ) { m UI Implementation . dispatch View Manager Command ( react Tag, command Id, command Args )  ; }"
6548,"public int insert Ex At ( int pos, byte [  ]  code )  throws  Bad Bytecode{ return insert0 ( pos, code, true )  ; }"
6549,"public void process Data (  )  throws  Cannot Read Exception{ while  ( data Buffer . has Remaining (  )  )  {     byte next = data Buffer . get (  )  ;      if  ( next !=  ( byte )  'e' )  {         continue ;      }     // Have we found esds identifier, if so adjust buffer to start of esds atom      Byte Buffer temp Buffer = data Buffer . slice (  )  ;      if  (  ( temp Buffer . get (  )  ==  ( byte )  's' )  &  ( temp Buffer . get (  )  ==  ( byte )  'd' )  &  ( temp Buffer . get (  )  ==  ( byte )  's' )  )  {         data Buffer . position ( data Buffer . position (  )  - 1 -  Mp4 Box Header . OFFSET_LENGTH )  ;          return ;      } }}"
6550,private void parse To End If Necessary (  ) { if  ( attributes == null )  {     parse (  )  ;  }}
6551,"public static  Immutable List< Arg> from Args (  Function<? super  String,  String> sanitizer,  Iterable< Arg> args ) {  Immutable List .  Builder< Arg> converted =  Immutable List . builder (  )  ;  for  (  Arg arg : args )  {     if  ( arg instanceof  String Arg )  {          String arg Value =  (  (  String Arg )  arg )  . get Arg (  )  ;          if  ( !arg Value . is Empty (  )  )  {             converted . add ( create ( sanitizer, arg Value )  )  ;          }     } else {         converted . add ( arg )  ;      } } return converted . build (  )  ; }"
6552,"public com . anychart . core . annotations .  Andrews Pitchfork bounds (  String x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
6553,"public void test Random Points (  ) {  System . gc (  )  ;   Random random = new  Random (  )  ;  for  ( int i = 0 ;  i < 100000 ;  i++ )  {     m Tree . add ( new  Item ( random . next Double (  ) , random . next Double (  )  )  )  ;  } search All (  )  ;  m Tree . search ( new  Bounds ( 0, 0 . 5, 0, 0 . 5 )  )  ;  m Tree . search ( new  Bounds ( 0, 0 . 25, 0, 0 . 25 )  )  ;  m Tree . search ( new  Bounds ( 0, 0 . 125, 0, 0 . 125 )  )  ;  m Tree . search ( new  Bounds ( 0, 0 . 999, 0, 0 . 999 )  )  ;  m Tree . search ( new  Bounds ( 0, 1, 0, 0 . 01 )  )  ;  m Tree . search ( new  Bounds ( 0 . 4, 0 . 6, 0 . 4, 0 . 6 )  )  ;  m Tree . search ( new  Bounds ( 0 . 356, 0 . 574, 0 . 678, 0 . 987 )  )  ;  m Tree . search ( new  Bounds ( 0 . 123, 0 . 456, 0 . 456, 0 . 789 )  )  ;  m Tree . search ( new  Bounds ( 0 . 111, 0 . 222, 0 . 333, 0 . 444 )  )  ;  m Tree . clear (  )  ;   System . gc (  )  ; }"
6554,"public void save Level ( T level,  String filename ) {  File levels Dir = get Levels Dir (  )  ;  if  ( !levels Dir . exists (  )  && !levels Dir . mkdirs (  )  )  {     //  If we are unable to find or make the desired output directory, log a warning and     // fail .       Santa Log . w ( TAG, "" Unable to reach dir: "" + levels Dir . get Absolute Path (  )  )  ;      return ;  } try {      File Output Stream output Stream = new  File Output Stream ( new  File ( levels Dir, filename )  )  ;      save Level ( level, output Stream )  ;  } catch  (  File Not Found Exception e )  {      Santa Log . w ( TAG, "" Unable to save file: "" + filename )  ;  }}"
6555,"protected void __constructor__ ( boolean sentinel ) { in Non System Constructor = true ;  try {     // call real constructor so field initialization happens .      invoke Constructor (  Asset Manager . class, real Asset Manager,  Class Parameter . from ( boolean . class, sentinel )  )  ;  } finally {     in Non System Constructor = false ;  }}"
6556,"public boolean is On Pie Chart (  Point screen Point ) { //  Using a bit of  Pythagoras // inside circle if  ( x-center_x ) **2 +  ( y-center_y ) **2 <= radius**2: double sq Value =  (  Math . pow ( m Center X - screen Point . get X (  ) , 2 )  +  Math . pow ( m Center Y - screen Point . get Y (  ) , 2 )  )  ;  double radius Squared = m Pie Chart Radius * m Pie Chart Radius ;  boolean is On Pie Chart = sq Value <= radius Squared ;  return is On Pie Chart ; }"
6557,public byte [  ]  get (  ) { return copy (  )  ; }
6558,"public static  String get Channel (  Context context ) { return get Channel ( context, "" Channel_ Default"" )  ; }"
6559,"public com . anychart . core . axes .  Circular fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
6560,public  Iterable Of Protos Fluent Assertion<M> ignoring Extra Repeated Field Elements Of Fields (  Iterable< Integer> field Numbers ) { return using Config ( config . ignoring Extra Repeated Field Elements Of Fields ( field Numbers )  )  ; }
6561,"public  Array<T> get By Type (  Class<T> type ) { return get By Type ( type, new  Array<T> (  )  )  ; }"
6562,"public short [  ]  interface Type Indices From Class Def Index ( int class Def Index ) { check Bounds ( class Def Index, table Of Contents . class Defs . size )  ;  int position = table Of Contents . class Defs . off +  (  Size Of . CLASS_DEF_ITEM * class Def Index )  ;  // type position +=  Size Of . UINT ;  // access Flags position +=  Size Of . UINT ;  // super Type position +=  Size Of . UINT ;  int interfaces Offset = data . get Int ( position )  ;  if  ( interfaces Offset == 0 )  {     return EMPTY_SHORT_ARRAY ;  } position = interfaces Offset ;  int size = data . get Int ( position )  ;  if  ( size <= 0 )  {     throw new  Assertion Error ( "" Unexpected interfaces list size: "" + size )  ;  } position +=  Size Of . UINT ;  short [  ]  types = new short [ size ]  ;  for  ( int i = 0 ;  i < size ;  i++ )  {     types [ i ]  = data . get Short ( position )  ;      position +=  Size Of . USHORT ;  } return types ; }"
6563,"public com . anychart . charts .  Waterfall y Axis (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Axis ( %s )  ; "", settings )  )  ;  return this ; }"
6564,"public long get And Decrement ( K key ) { return get And Add ( key, -1 )  ; }"
6565,public void set Controller (  Controller controller ) { this . controller = controller ; }
6566,public final  String locale Variant String (  ) { return byte Array To String ( locale Variant )  ; }
6567,protected  Binary Bitmap to Bitmap (  Luminance Source source ) { if  ( is Inverted )  {     is Inverted = false ;      return new  Binary Bitmap ( new  Hybrid Binarizer ( source . invert (  )  )  )  ;  } else {     is Inverted = true ;      return new  Binary Bitmap ( new  Hybrid Binarizer ( source )  )  ;  }}
6568,public  Builder force Width Percent ( float force Width Percent ) { this . force Width Percent = force Width Percent ;  return this ; }
6569,"public com . anychart . charts .  Scatter select Marquee Stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
6570,public int get Line (  ) { return line ; }
6571,"public void in Marquee (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . in Marquee (  )  ; "" )  ; }"
6572,"public static void fetch Drop In Result (  App Compat Activity activity,  String client Token, @ Non Null final  Drop In Result Listener listener ) { try {     if  ( ! (  Authorization . from String ( client Token )  instanceof  Client Token )  )  {         listener . on Error ( new  Invalid Argument Exception ( "" Drop In Result#fetch Drop In Result must "" + ""be called with a client token"" )  )  ;          return ;      } } catch  (  Invalid Argument Exception e )  {     listener . on Error ( e )  ;      return ;  } final  Braintree Fragment fragment ;  try {     fragment =  Braintree Fragment . new Instance ( activity, client Token )  ;  } catch  (  Invalid Argument Exception e )  {     listener . on Error ( e )  ;      return ;  } final  List< Braintree Listener> previous Listeners = fragment . get Listeners (  )  ;  final  Listener Holder listener Holder = new  Listener Holder (  )  ;   Braintree Error Listener error Listener = new  Braintree Error Listener (  )  {     @ Override     public void on Error (  Exception error )  {         reset Listeners ( fragment, listener Holder, previous Listeners )  ;          listener . on Error ( error )  ;      } } ;  listener Holder . listeners . add ( error Listener )  ;   Payment Method Nonces Updated Listener payment Methods Listener = new  Payment Method Nonces Updated Listener (  )  {     @ Override     public void on Payment Method Nonces Updated ( java . util .  List< Payment Method Nonce> payment Method Nonces )  {         reset Listeners ( fragment, listener Holder, previous Listeners )  ;          if  ( payment Method Nonces . size (  )  > 0 )  {              Payment Method Nonce payment Method = payment Method Nonces . get ( 0 )  ;              listener . on Result ( new  Drop In Result (  )  . payment Method Nonce ( payment Method )  )  ;          } else {             listener . on Result ( new  Drop In Result (  )  )  ;          }     } } ;  listener Holder . listeners . add ( payment Methods Listener )  ;  fragment . add Listener ( error Listener )  ;  fragment . add Listener ( payment Methods Listener )  ;  final  Payment Method Type last Used Payment Method Type =  Payment Method Type . for Type (  Braintree Shared Preferences . get Shared Preferences ( activity )  . get String ( LAST_USED_PAYMENT_METHOD_TYPE, null )  )  ;  if  ( last Used Payment Method Type ==  Payment Method Type . GOOGLE_PAYMENT )  {      Braintree Response Listener< Boolean> is Ready To Pay Callback = new  Braintree Response Listener< Boolean> (  )  {         @ Override         public void on Response (  Boolean is Ready To Pay )  {             if  ( is Ready To Pay )  {                 reset Listeners ( fragment, listener Holder, previous Listeners )  ;                   Drop In Result result = new  Drop In Result (  )  ;                  result . m Payment Method Type = last Used Payment Method Type ;                  listener . on Result ( result )  ;              } else {                  Payment Method . get Payment Method Nonces ( fragment )  ;              }         }     } ;       Google Payment . is Ready To Pay ( fragment, is Ready To Pay Callback )  ;  } else {      Payment Method . get Payment Method Nonces ( fragment )  ;  }}"
6573,"public com . anychart . standalones . axismarkers .  Line stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
6574,"private int add New Card (  Row Data Holder grid Row, int absolute Cardposition, int data List Size ) { boolean is Empty Card = false ;  if  ( absolute Cardposition >= data List Size )  {     //  Create new row and add new cards into it, but if we have     // consumed till last card of the grid Structured Data-list but     // still if row has cards to be filled then let's fill it with     // empty block, which will be cleared out when next chunk of     // grid Structured Data comes .      is Empty Card = true ;  } int type = -1 ;  if  ( is Empty Card == true )  {     type =  Card Position Info . TYPE_EMPTY ;  } else {     type =  Card Position Info . TYPE_CONTENT ;  } //  Lets tag our grid card with absolute Cardposition, which is its // position in the grid, this index helps us keep mapping between our // linear-data to grid structure .   Card Position Info card Position Info = new  Card Position Info ( type, absolute Cardposition )  ;  grid Row . get Card Position Infos (  )  . add ( card Position Info )  ;  // return absolute Cardposition, is kept as to keep mapping for card of // grid structure to the data list of input .  absolute Cardposition++ ;  return absolute Cardposition ; }"
6575,public void set Gui Callback (  Gui Callback callback ) { this . callback = callback ; }
6576,public PDF Image get S Mask (  ) { return s Mask ; }
6577,"public com . anychart . core . stock . scrollerseries .  Step Area min Labels (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Labels ( %s )  ; "", settings )  )  ;  return this ; }"
6578,"public void emit New Intent Received (  Uri uri ) {  React Application Context react Application Context = get React Application Context If Active Or Warn (  )  ;  if  ( react Application Context != null )  {      Writable Map map =  Arguments . create Map (  )  ;      map . put String ( ""url"", uri . to String (  )  )  ;      react Application Context . get JS Module ( RCT Device Event Emitter . class )  . emit ( ""url"", map )  ;  }}"
6579,"static  String auto Value Class Name (  Element element ) {  String Builder sb = new  String Builder ( element . get Simple Name (  )  . to String (  )  )  ;   Element enclosing Element = element . get Enclosing Element (  )  ;  while  ( ! ( enclosing Element instanceof  Package Element )  )  {     sb . insert ( 0, '_' )  ;      sb . insert ( 0, enclosing Element . get Simple Name (  )  . to String (  )  )  ;      enclosing Element = enclosing Element . get Enclosing Element (  )  ;  } sb . insert ( 0, "" Auto Value_"" )  ;  return sb . to String (  )  ; }"
6580,private static void check Element ( @ Nullable  Object node ) { if  ( node == null )  {     throw new  No Such Element Exception (  )  ;  }}
6581,"public static  Keypair generate Keypair (  ) { try {     return generate Keypair (  Asymmetric Key . KEYTYPE_EC )  ;  } catch  (  Invalid Argument Exception e )  {     throw new  Key Generation Exception ( ""failed to generate keypair"", e )  ;  }}"
6582,public  Gson Builder set Date Format (  String pattern ) { // TODO (  Joel ) :  Make this fail fast if it is an invalid date format this . date Pattern = pattern ;  return this ; }
6583,public  String get Client Capabilities (  ) { return this . m Client Capabilities ; }
6584,"public void row Selected Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . row Selected Fill (  )  ; "" )  ; }"
6585,"public com . anychart . core . polar . series .  Continuous Base id (  Number id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . id ( %s )  ; "", id )  )  ;  return this ; }"
6586,"public  Test Callback Prop View Model_ listener ( @ Nullable final  On Model Click Listener< Test Callback Prop View Model_,  Test Callback Prop View> listener ) { on Mutation (  )  ;  if  ( listener == null )  {     this . listener_ On Click Listener = null ;  } else {     this . listener_ On Click Listener = new  Wrapped Epoxy Model Click Listener ( listener )  ;  } return this ; }"
6587,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings min Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", height )  )  ;  return this ; }"
6588,public  Drawable get Retry Image (  ) { return m Retry Image ; }
6589,public static void set Advertiser ID Collection Enabled ( boolean flag ) {  User Settings Manager . set Advertiser ID Collection Enabled ( flag )  ; }
6590,"private void loosen (  Object Directory Inserter inserter,  Object Reader reader,  Pack pack,  Hash Set< Object Id> existing )  throws IO Exception{ for  (  Pack Index .  Mutable Entry entry : pack )  {      Object Id oid = entry . to Object Id (  )  ;      if  ( existing . contains ( oid )  )  {         continue ;      }     existing . add ( oid )  ;       Object Loader loader = reader . open ( oid )  ;      inserter . insert ( loader . get Type (  ) , loader . get Size (  ) , loader . open Stream (  ) , true )  ;  }}"
6591,"List< Class<?>> find Classes To Test (  Iterable<? extends  Class<?>> classes,  Iterable< String> explicit Test Names ) { // ""a . b .  Foo"" -> a . b .  Foo . class  Tree Map< String,  Class<?>> class Map =  Maps . new Tree Map (  )  ;  for  (  Class<?> cls : classes )  {     class Map . put ( cls . get Name (  ) , cls )  ;  } //  Foo . class ->  [  Foo Test . class,  Foo Tests . class,  Foo Test Suite . class,  .  .  .  ]   Multimap< Class<?>,  Class<?>> test Classes =  Hash Multimap . create (  )  ;   Linked Hash Set< Class<?>> candidate Classes =  Sets . new Linked Hash Set (  )  ;  for  (  Class<?> cls : classes )  {      Optional< String> tested Class Name = TEST_SUFFIX . chop ( cls . get Name (  )  )  ;      if  ( tested Class Name . is Present (  )  )  {          Class<?> tested Class = class Map . get ( tested Class Name . get (  )  )  ;          if  ( tested Class != null )  {             test Classes . put ( tested Class, cls )  ;          }     } else {         candidate Classes . add ( cls )  ;      } }  List< Class<?>> result =  Lists . new Array List (  )  ;  NEXT_CANDIDATE: for  (  Class<?> candidate :  Iterables . filter ( candidate Classes, class Filter )  )  {     for  (  Class<?> test Class : test Classes . get ( candidate )  )  {         if  ( has Test ( test Class, explicit Test Names )  )  {             // covered by explicit test             continue NEXT_CANDIDATE ;          }     }     result . add ( candidate )  ;  } return result ; }"
6592,"private static  Immutable Sorted Set< Source Path> calc Compilation Classpath (  Java Library base Library ) { return base Library . get Build Deps (  )  . stream (  )  . filter ( // take only deps that produce jars  Has Java Abi . class::is Instance )  . filter (  x -> !are Building Interface For Same Library ( base Library, x )  )  . map (  Build Rule::get Source Path To Output )  . filter (  Objects::non Null )  . collect (  Immutable Sorted Set . to Immutable Sorted Set (  Comparator . natural Order (  )  )  )  ; }"
6593,public static  Atomic Reference<V> new Reference (  ) { return new  Atomic Reference<V> (  )  ; }
6594,protected  Retry Manager get Retry Manager (  ) { if  ( m Retry Manager == null )  {     m Retry Manager = new  Retry Manager (  )  ;  } return m Retry Manager ; }
6595,"protected void native_flush (  ) { // mode, the client needs to call start (  )  .  if  ( !is Async )  {     input Buffers Pending Dequeue . clear (  )  ;      output Buffers Pending Dequeue . clear (  )  ;      input Buffers Pending Queuing . clear (  )  ;      for  ( int i = 0 ;  i < BUFFER_COUNT ;  i++ )  {         input Buffers Pending Dequeue . add ( i )  ;           (  (  Buffer )  input Buffers [ i ]  )  . clear (  )  ;      } }}"
6596,public void increment Difference Count (  )  throws  Max Differences Exception{ int differences = found Differences . increment And Get (  )  ;  if  ( max Differences != INFINITE_DIFFERENCES && differences > max Differences )  {     throw new  Max Differences Exception (  )  ;  }}
6597,"public com . anychart . core . ui .  Paginator margin (  String space Or Top Or Top And Bottom,  String right Or Right And Left,  String bottom,  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( space Or Top Or Top And Bottom ) , wrap Quotes ( right Or Right And Left ) , wrap Quotes ( bottom ) , wrap Quotes ( left )  )  )  ;  return this ; }"
6598,public H Logger get Root Logger (  ) { return root ; }
6599,public  Orientation get Orientation (  ) { return m Orientation ; }
6600,"public com . anychart . core . lineargauge . pointers .  Tank empty Hatch Fill (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . empty Hatch Fill ( %s )  ; "", enabled )  )  ;  return this ; }"
6601,public  Status Command set Progress Monitor (  Progress Monitor progress Monitor ) { this . progress Monitor = progress Monitor ;  return this ; }
6602,"public com . anychart . charts .  Heat Map padding (  String value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
6603,"public void max Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Width (  )  ; "" )  ; }"
6604,public  React Instance Manager get React Instance Manager (  ) { if  ( m React Instance Manager == null )  {      React Marker . log Marker (  React Marker Constants . GET_REACT_INSTANCE_MANAGER_START )  ;      m React Instance Manager = create React Instance Manager (  )  ;       React Marker . log Marker (  React Marker Constants . GET_REACT_INSTANCE_MANAGER_END )  ;  } return m React Instance Manager ; }
6605,public void add (  Map Object object ) { this . objects . add ( object )  ; }
6606,public  String get App Id (  ) { return app Id ; }
6607,public  Immersion Bar set On Navigation Bar Listener (  On Navigation Bar Listener on Navigation Bar Listener ) { if  ( on Navigation Bar Listener != null )  {     if  ( m Bar Params . on Navigation Bar Listener == null )  {         m Bar Params . on Navigation Bar Listener = on Navigation Bar Listener ;           Navigation Bar Observer . get Instance (  )  . add On Navigation Bar Listener ( m Bar Params . on Navigation Bar Listener )  ;      } } else {     if  ( m Bar Params . on Navigation Bar Listener != null )  {          Navigation Bar Observer . get Instance (  )  . remove On Navigation Bar Listener ( m Bar Params . on Navigation Bar Listener )  ;          m Bar Params . on Navigation Bar Listener = null ;      } } return this ; }
6608,"public  Set Multimap Builder<K0, V0> enum Set Values ( final  Class<V0> value Class ) { check Not Null ( value Class, ""value Class"" )  ;  return new  Set Multimap Builder<K0, V0> (  )  {     @ Override     public <K extends K0, V extends V0>  Set Multimap<K, V> build (  )  {         // V must actually be V0, since enums are effectively final         //  ( their subclasses are inaccessible )          @ Suppress Warnings ( { ""unchecked"", ""rawtypes"" } )   Supplier< Set<V>> factory =  (  Supplier )  new  Enum Set Supplier<V0> ( value Class )  ;          return  Multimaps . new Set Multimap (  Multimap Builder With Keys . this . <K, V>create Map (  ) , factory )  ;      } } ; }"
6609,public static int round ( float val ) { if  ( val > 0 )  {     return  ( int )   ( val + 0 . 5 )  ;  } else {     return  ( int )   ( val - 0 . 5 )  ;  }}
6610,"public com . anychart . scales .  Ordinal x Scale (  ) { return new com . anychart . scales .  Ordinal ( js Base + "" . x Scale (  ) "" )  ; }"
6611,"static  Transitive Cxx Preprocessor Input Function from Library Rule (  ) { return  (  target,  graph Builder,  cxx Platform,  ignored,  private Deps )  -> {      Build Target raw Target = target . without Flavors (  Immutable Set . < Flavor>builder (  )  . add All ( LIBRARY_TYPE . get Flavors (  )  )  . add ( cxx Platform . get Flavor (  )  )  . build (  )  )  ;       Build Rule raw Rule = graph Builder . require Rule ( raw Target )  ;       Cxx Library Group rule =  (  Cxx Library Group )  raw Rule ;       Immutable Map< Build Target,  Cxx Preprocessor Input> inputs = rule . get Transitive Cxx Preprocessor Input ( cxx Platform, graph Builder )  ;       Immutable List< Cxx Preprocessor Dep> private Deps For Platform =  Rich Stream . from ( private Deps . get ( graph Builder, cxx Platform )  )  . filter (  Cxx Preprocessor Dep . class )  . to Immutable List (  )  ;      if  ( private Deps For Platform . is Empty (  )  )  {         //  Nothing to add .          return inputs . values (  )  . stream (  )  ;      } else {          Map< Build Target,  Cxx Preprocessor Input> result = new  Linked Hash Map<> ( inputs )  ;          for  (  Cxx Preprocessor Dep dep : private Deps For Platform )  {             result . put All ( dep . get Transitive Cxx Preprocessor Input ( cxx Platform, graph Builder )  )  ;          }         return result . values (  )  . stream (  )  ;      } } ; }"
6612,"public com . anychart . core . stock . scrollerseries .  Range Spline Area fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
6613,public double compute (  Collection<? extends  Number> dataset ) { return compute In Place (  Doubles . to Array ( dataset )  )  ; }
6614,public void context Switch ( int frame Index ) { this . frame Index = frame Index ; }
6615,"public static boolean is Email ( final  Char Sequence input ) { return is Match (  Regex Constants . REGEX_EMAIL, input )  ; }"
6616,boolean is Desugar Enabled (  ) { return false ; }
6617,public boolean has Activate Indicator Shadow (  ) { return m Activate Indicator Shadow ; }
6618,"public final A append To ( A appendable, @ Check For Null  Object first, @ Check For Null  Object second, @ Nullable  Object .  .  .  rest )  throws IO Exception{ return append To ( appendable, iterable ( first, second, rest )  )  ; }"
6619,private static  Readable wrap As Generic Readable ( final  Readable a ) { return new  Readable (  )  {     @ Override     public int read (  Char Buffer cb )  throws IO Exception {         return a . read ( cb )  ;      } } ; }
6620,"public com . anychart . core . lineargauge . pointers .  Marker marker (  Number data Index ) { return new com . anychart . core . lineargauge . pointers .  Marker (  String . format (  Locale . US, js Base + "" . marker ( %s ) "", data Index )  )  ; }"
6621,"private boolean contains Package Op Pair (  List< Package Ops> pkg Ops,  String package Name, int op, int mode ) { for  (  Package Ops pkg Op : pkg Ops )  {     for  (  Op Entry entry : pkg Op . get Ops (  )  )  {         if  ( package Name . equals ( pkg Op . get Package Name (  )  )  && entry . get Op (  )  == op && entry . get Mode (  )  == mode )  {             return true ;          }     } } return false ; }"
6622,"public static  String change Return Type (  String classname,  String desc ) { int i = desc . index Of ( ' ) ' )  ;  if  ( i < 0 )      return desc ;   String Buffer newdesc = new  String Buffer (  )  ;  newdesc . append ( desc . substring ( 0, i + 1 )  )  ;  newdesc . append ( 'L' )  ;  newdesc . append ( classname . replace ( ' . ', '/' )  )  ;  newdesc . append ( ' ; ' )  ;  return newdesc . to String (  )  ; }"
6623,public void __set Dao Session (  Dao Session dao Session ) { this . dao Session = dao Session ;  my Dao = dao Session != null ? dao Session . get To Many Entity Dao (  )  : null ; }
6624,public boolean is Dashed Highlight Line Enabled (  ) { return m Highlight Dash Path Effect == null ? false : true ; }
6625,"public com . anychart . charts .  Pie padding (  Number [  ]  padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "",  Arrays . to String ( padding )  )  )  ;  return this ; }"
6626,"public com . anychart . core .  Series Base z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
6627,"Document get Document (  Document Key key ) {  List< Mutation Batch> batches = mutation Queue . get All Mutation Batches Affecting Document Key ( key )  ;  return get Document ( key, batches )  ; }"
6628,public boolean is Enabled (  ) { return enabled ; }
6629,"public void write16bit ( int value, int index ) {  Byte Array . write16bit ( value, bytecode, index )  ; }"
6630,public  String get Mpeg Version (  ) { return mp3 Frame Header . get Version As String (  )  ; }
6631,"protected void assert More Invariants (  Map<K, V> map ) {}"
6632,"void add Refreshable View (  View view,  View Delegate view Delegate ) { if  ( is Destroyed (  )  )      return ;  //  Check to see if view is null if  ( view == null )  {      Log . i ( LOG_TAG, "" Refreshable  View is null . "" )  ;      return ;  } //  View Delegate if  ( view Delegate == null )  {     view Delegate =  Instance Creation Utils . get Built In View Delegate ( view )  ;  } //  View to detect refreshes for m Refreshable Views . put ( view, view Delegate )  ; }"
6633,"public com . anychart . core . stock . scrollerseries .  Range Step Area z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
6634,"public com . anychart . core . ui .  Paginator padding (  String space Or Top Or Top And Bottom,  String right Or Right And Left,  String bottom,  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( space Or Top Or Top And Bottom ) , wrap Quotes ( right Or Right And Left ) , wrap Quotes ( bottom ) , wrap Quotes ( left )  )  )  ;  return this ; }"
6635,public void test Write Pack1 No Object Reuse (  )  throws IO Exception{ config . set Reuse Deltas ( false )  ;  config . set Reuse Objects ( false )  ;  write Verify Pack1 (  )  ; }
6636,public com . google . protobuf .  Byte String get Build Id Bytes (  ) { java . lang .  Object ref = build Id_ ;  if  ( ref instanceof  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      build Id_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
6637,"void connect ( final  Context context, final  Extended Bluetooth Device device, final boolean connect To Network ) { m Mesh Network Live Data . set Node Name ( device . get Name (  )  )  ;  m Is Provisioning Complete = false ;  m Is Composition Data Received = false ;  m Is Default Ttl Received = false ;  m Is App Key Add Completed = false ;  m Is Network Retransmit Set Completed = false ;  //clear Extended Mesh Node (  )  ;  final  Log Session log Session =  Logger . new Session ( context, null, device . get Address (  ) , device . get Name (  )  )  ;  m Ble Mesh Manager . set Logger ( log Session )  ;  init Is Connected Live Data ( connect To Network )  ;  m Connection State . post Value ( "" Connecting .  .  .  . "" )  ;  // Added a 1 second delay for connection, mostly to wait for a disconnection to complete before connecting, in case a device was previously connected .   Log . d ( ""AA"", "" Connect issued"" )  ;  m Ble Mesh Manager . connect ( device . get Device (  )  )  . retry ( 3, 200 )  . enqueue (  )  ; }"
6638,"public final  Stream< Build Rule> get Deps (  Source Path Rule Finder rule Finder ) { return  Stream . of (  Immutable List . of ( get Package Db (  )  ) , get Libraries (  ) , get Interfaces (  )  )  . flat Map (  input -> rule Finder . filter Build Rule Inputs ( input )  . stream (  )  )  ; }"
6639,public void expect Calculation (  ) { phaser . register (  )  ; }
6640,"public void write Packed Refs (  )  throws IO Exception{ boolean peeled = false ;  for  (  Ref r : refs )  {     if  ( r . get Storage (  )  . is Packed (  )  && r . is Peeled (  )  )  {         peeled = true ;          break ;      } } final  String Writer w = new  String Writer (  )  ;  if  ( peeled )  {     w . write (  Ref Directory . PACKED_REFS_HEADER )  ;      if  ( peeled )          w . write (  Ref Directory . PACKED_REFS_PEELED )  ;      w . write ( '\n' )  ;  } final char [  ]  tmp = new char [  Constants . OBJECT_ID_STRING_LENGTH ]  ;  for  (  Ref r : refs )  {     if  ( r . get Storage (  )  !=  Ref .  Storage . PACKED )          continue ;       Object Id object Id = r . get Object Id (  )  ;      if  ( object Id == null )  {         // to an unborn branch .          throw new  Null Pointer Exception (  )  ;      }     object Id . copy To ( tmp, w )  ;      w . write ( ' ' )  ;      w . write ( r . get Name (  )  )  ;      w . write ( '\n' )  ;       Object Id peeled Object Id = r . get Peeled Object Id (  )  ;      if  ( peeled Object Id != null )  {         w . write ( '^' )  ;          peeled Object Id . copy To ( tmp, w )  ;          w . write ( '\n' )  ;      } } write File (  Constants . PACKED_REFS,  Constants . encode ( w . to String (  )  )  )  ; }"
6641,public void set Up Color ( int value ) { this . upcolor = value ; }
6642,"public com . anychart . core . ui .  Circular Labels Factory letter Spacing (  Number spacing ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . letter Spacing ( %s )  ; "", spacing )  )  ;  return this ; }"
6643,"public com . anychart . scales .  Scatter Base x Scale (  ) { return new com . anychart . scales .  Scatter Base ( js Base + "" . x Scale (  ) "" )  ; }"
6644,"public int find Position (  Position Finder<H, T> position Finder, boolean un Fold Target Section ) { if  ( !un Fold Target Section )  {     for  ( int i = 0 ;  i < get Item Count (  )  ;  i++ )  {         QMUI Section<H, T> section = get Section ( i )  ;          if  ( section == null )  {             continue ;          }         int item Index = get Item Index ( i )  ;          if  ( item Index == ITEM_INDEX_SECTION_HEADER )  {             if  ( position Finder . find ( section, null )  )  {                 return i ;              }         } else if  ( item Index >= 0 )  {             if  ( position Finder . find ( section, section . get Item At ( item Index )  )  )  {                 return i ;              }         }     }     return  Recycler View . NO_POSITION ;  } QMUI Section<H, T> target Section = null ;  T target Item = null ;  loop: for  ( int i = 0 ;  i < m Current Data . size (  )  ;  i++ )  {     QMUI Section<H, T> section = m Current Data . get ( i )  ;      if  ( position Finder . find ( section, null )  )  {         target Section = section ;          break ;      }     for  ( int j = 0 ;  j < section . get Item Count (  )  ;  j++ )  {         if  ( position Finder . find ( section, section . get Item At ( j )  )  )  {             target Section = section ;              target Item = section . get Item At ( j )  ;              boolean is Fold = section . is Fold (  )  ;              if  ( is Fold )  {                 section . set Fold ( false )  ;                  lock ( section )  ;                  diff ( false, true )  ;              }             break loop ;          }     } } for  ( int i = 0 ;  i < get Item Count (  )  ;  i++ )  {     QMUI Section<H, T> section = get Section ( i )  ;      if  ( section != target Section )  {         continue ;      }     int item Index = get Item Index ( i )  ;      if  ( item Index == ITEM_INDEX_SECTION_HEADER && target Item == null )  {         return i ;      } else if  ( item Index >= 0 )  {         if  ( section . get Item At ( item Index )  . is Same Item ( target Item )  )  {             return i ;          }     } } return  Recycler View . NO_POSITION ; }"
6645,public  String get Line (  ) { return line ; }
6646,"public com . anychart . core . lineargauge . pointers .  Thermometer enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
6647,"public com . anychart . charts .  Venn tooltip (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . tooltip ( %s )  ; "", settings )  )  ;  return this ; }"
6648,public final int get Same Type Position Of ( @ Non Null I Flexible item ) { int position = -1 ;  for  ( T current : m Items )  {     if  ( current . get Item View Type (  )  == item . get Item View Type (  )  )  {         position++ ;          if  ( current . equals ( item )  )  {             break ;          }     } } return position ; }
6649,"void test Build Weak Wizard (  ) { final var character =  Character Step Builder . new Builder (  )  . name ( "" Merlin"" )  . wizard Class ( ""alchemist"" )  . with Spell ( ""poison"" )  . no Abilities (  )  . build (  )  ;  assert Equals ( "" Merlin"", character . get Name (  )  )  ;  assert Equals ( ""alchemist"", character . get Wizard Class (  )  )  ;  assert Equals ( ""poison"", character . get Spell (  )  )  ;  assert Null ( character . get Abilities (  )  )  ;  assert Not Null ( character . to String (  )  )  ; }"
6650,"public void set Custom Tab View ( int layout Res Id, int text View Id ) { m Tab View Layout Id = layout Res Id ;  m Tab View Text View Id = text View Id ; }"
6651,public  Observable< Void> delete In Tx ( final  Iterable<T> entities ) { return wrap ( new  Callable< Void> (  )  {     @ Override     public  Void call (  )  throws  Exception {         dao . delete In Tx ( entities )  ;          return null ;      } } )  ; }
6652,"public  Exo Player Test Runner block Until Action Schedule Finished ( long timeout Ms )  throws  Timeout Exception,  Interrupted Exception{ if  ( !action Schedule Finished Count Down Latch . await ( timeout Ms,  Time Unit . MILLISECONDS )  )  {     throw new  Timeout Exception ( "" Test playback timed out waiting for action schedule to finish . "" )  ;  } return this ; }"
6653,"public void set Motor Speed ( float speed ) { jni Set Motor Speed ( addr, speed )  ; }"
6654,"public void enclose With Straight Line (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enclose With Straight Line (  )  ; "" )  ; }"
6655,public boolean is Fix Aspect Ratio (  ) { return m Fix Aspect Ratio ; }
6656,"public com . anychart . charts .  Cartesian3d point Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . point Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
6657,"public com . anychart . core . axismarkers .  Circular Range corners Rounding (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . corners Rounding ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
6658,public final boolean is Swipeable (  ) { I Flexible item = m Adapter . get Item ( get Flexible Adapter Position (  )  )  ;  return item != null && item . is Swipeable (  )  ; }
6659,"public void show Edit Text Body (  Comment Config comment Config ) { m View . update Edit Text Body Visible (  View . VISIBLE, comment Config )  ; }"
6660,"public static void set Service Availability (  String service, boolean available ) { if  ( available )  {     unavailable Services . remove ( service )  ;  } else {     unavailable Services . add ( service )  ;  }}"
6661,public void set Need New Object Ids ( boolean b ) { if  ( b )      new Object Ids = new  Object Id Subclass Map<> (  )  ;  else     new Object Ids = null ; }
6662,public byte [  ]  get Key (  ) { return key ; }
6663,"public static int CCITT_ Kermit ( @ Non Null final byte [  ]  data, final int offset, final int length ) { return CRC ( 0x1021, 0x0000, data, offset, length, true, true, 0x0000 )  ; }"
6664,"public void put ( @ Non Null final  String key, final  Bitmap value ) { put ( key, value, -1 )  ; }"
6665,"public com . anychart . core . stock . scrollerseries .  Range Area normal (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . normal ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6666,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
6667,"public static void parse Cache Control (  String value,  Cache Control Handler handler ) { if  ( value == null )      return ;  int pos = 0 ;  while  ( pos < value . length (  )  )  {     int token Start = pos ;      pos = skip Until ( value, pos, ""=,"" )  ;       String directive = value . substring ( token Start, pos )  . trim (  )  ;      if  ( pos == value . length (  )  || value . char At ( pos )  == ',' )  {         // consume ','  ( if necessary )          pos++ ;          handler . handle ( directive, null )  ;          continue ;      }     // consume '='     pos++ ;      pos = skip Whitespace ( value, pos )  ;       String parameter ;      // quoted string     if  ( pos < value . length (  )  && value . char At ( pos )  == '\""' )  {         // consume '""' open quote         pos++ ;          int parameter Start = pos ;          pos = skip Until ( value, pos, ""\"""" )  ;          parameter = value . substring ( parameter Start, pos )  ;          // consume '""' close quote  ( if necessary )          pos++ ;      // unquoted string     } else {         int parameter Start = pos ;          pos = skip Until ( value, pos, "","" )  ;          parameter = value . substring ( parameter Start, pos )  . trim (  )  ;      }     handler . handle ( directive, parameter )  ;  }}"
6668,"public static  Field get Field By Column Name (  Class<?> clazz,  String column Name ) {  Field field = null ;  if  ( column Name != null )  {      Field [  ]  fields = clazz . get Declared Fields (  )  ;      if  ( fields != null && fields . length > 0 )  {         if  ( column Name . equals (  Class Utils . get Primary Key Column ( clazz )  )  )              field =  Class Utils . get Primary Key Field ( clazz )  ;          if  ( field == null )  {             for  (  Field f : fields )  {                  Property property = f . get Annotation (  Property . class )  ;                  if  ( property != null && column Name . equals ( property . column (  )  )  )  {                     field = f ;                      break ;                  }                  Many To One many To One = f . get Annotation (  Many To One . class )  ;                  if  ( many To One != null && many To One . column (  )  . trim (  )  . length (  )  != 0 )  {                     field = f ;                      break ;                  }             }         }         if  ( field == null )  {             field = get Field By Name ( clazz, column Name )  ;          }     } } return field ; }"
6669,"public boolean remove Entry ( float x Value, int data Set Index ) { if  ( data Set Index >= m Data Sets . size (  )  )      return false ;  I Data Set data Set = m Data Sets . get ( data Set Index )  ;   Entry e = data Set . get Entry For X Value ( x Value,  Float .  Na N )  ;  if  ( e == null )      return false ;  return remove Entry ( e, data Set Index )  ; }"
6670,"public com . anychart . core . stock . scrollerseries . OHLC labels (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", settings )  )  ;  return this ; }"
6671,"public static  Date parse (  String date Str,  Calendar now,  Locale locale )  throws  Parse Exception{ date Str = date Str . trim (  )  ;   Date ret ;  if  ( //$NON-NLS-1$ ""never"" . equals Ignore Case ( date Str )  )      return NEVER ;  ret = parse_relative ( date Str, now )  ;  if  ( ret != null )      return ret ;  for  (  Parseable Simple Date Format f :  Parseable Simple Date Format . values (  )  )  {     try {         return parse_simple ( date Str, f, locale )  ;      } catch  (  Parse Exception e )  {     // simply proceed with the next parser     } }  Parseable Simple Date Format [  ]  values =  Parseable Simple Date Format . values (  )  ;   String Builder all Formats = //$NON-NLS-1$ new  String Builder ( ""\"""" )  . append ( values [ 0 ]  . format Str )  ;  for  ( int i = 1 ;  i < values . length ;  i++ )  //$NON-NLS-1$ all Formats . append ( ""\"", \"""" )  . append ( values [ i ]  . format Str )  ;  //$NON-NLS-1$ all Formats . append ( ""\"""" )  ;  throw new  Parse Exception (  Message Format . format ( J Git Text . get (  )  . cannot Parse Date, date Str, all Formats . to String (  )  ) , 0 )  ; }"
6672,"static int last Index Of (  Char Sequence cs, int search Char, int start ) { if  ( cs instanceof  String )  {     return  (  (  String )  cs )  . last Index Of ( search Char, start )  ;  } else {     int sz = cs . length (  )  ;      if  ( start < 0 )  {         return -1 ;      }     if  ( start >= sz )  {         start = sz - 1 ;      }     for  ( int i = start ;  i >= 0 ;  --i )  {         if  ( cs . char At ( i )  == search Char )  {             return i ;          }     }     return -1 ;  }}"
6673,Node create String (  String string ) { return  Node . new String ( string )  ; }
6674,"public static  String format Date Time (  Date date ) { return format Date Time ( date, DATE_TIME_FORMAT )  ; }"
6675,"public static  Date calculate Expires On ( final  String expires In ) { final  Calendar expires = new  Gregorian Calendar (  )  ;  //  Compute token expiration expires . add (  Calendar . SECOND, get Expiry Or Default ( expires In )  )  ;  return expires . get Time (  )  ; }"
6676,public T8 get Value8 (  ) { return value8 ; }
6677,public void set Appender Factory (  Appender Factory<E> appender Factory ) { this . appender Factory = appender Factory ; }
6678,"public static  Byte Buffer is Vbri Frame (  Byte Buffer bb, MPEG Frame Header mpeg Frame Header ) { // We store this so can return here after scanning through buffer int start Position = bb . position (  )  ;  MP3 File . logger . finest ( "" Checking VBRI  Frame at"" + start Position )  ;  bb . position ( start Position + VBRI_OFFSET )  ;  // Create header from here  Byte Buffer header = bb . slice (  )  ;  //  Return  Buffer to start  Point bb . position ( start Position )  ;  // Check  Identifier byte [  ]  identifier = new byte [ VBRI_IDENTIFIER_BUFFER_SIZE ]  ;  header . get ( identifier )  ;  if  (  ( ! Arrays . equals ( identifier, VBRI_VBR_ID )  )  )  {     return null ;  } MP3 File . logger . finest ( "" Found VBRI  Frame"" )  ;  return header ; }"
6679,"public void add Phi Insn For Reg (  Register Spec result Spec ) { insns . add ( 0, new  Phi Insn ( result Spec, this )  )  ; }"
6680,protected  Set< Event Listener> get Listeners (  ) { return listeners ; }
6681,"public com . anychart . charts .  Tree Map no Data (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . no Data ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6682,public  Builder set Should Try Larger Worker On Oom ( boolean value ) { should Try Larger Worker On Oom_ = value ;  on Changed (  )  ;  return this ; }
6683,protected  Date get Not After (  ) { return new  Date (  System . current Time Millis (  )  + 365 L * 24 L * 60 L * 60 L * 1000 L )  ; }
6684,"public com . anychart . standalones .  Markers Factory fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
6685,"public com . anychart . charts .  Radar palette ( com . anychart . palettes .  Distinct Colors settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
6686,"public static void is True ( final boolean expression, final  String message, final long value ) { if  ( expression == false )  {     throw new  Illegal Argument Exception (  String . format ( message,  Long . value Of ( value )  )  )  ;  }}"
6687,"public static  String to JSON String (  Object object ) { return to JSON String ( object, empty Filters )  ; }"
6688,public static void set Wtf Is Fatal ( boolean fatal ) { wtf Is Fatal = fatal ; }
6689,"private static  String get Test Method Name With Parameters ( I Test Result i Test Result ) {  Object [  ]  parameters = i Test Result . get Parameters (  )  ;   String name = i Test Result . get Name (  )  ;  if  ( parameters == null || parameters . length == 0 )  {     return name ;  }  String Builder builder = new  String Builder ( name )  . append ( ""  ( "" )  ;  builder . append (  Arrays . stream ( parameters )  . map (  parameter -> {     try {         return  String . value Of ( parameter )  ;      } catch  (  Exception e )  {         return "" Unstringable object"" ;      } } )  . collect (  Collectors . joining ( "", "" )  )  )  ;  builder . append ( "" ) "" )  ;  return builder . to String (  )  ; }"
6690,public static  Comparison Chain start (  ) { return ACTIVE ; }
6691,"public boolean on Create Options Menu (  Menu menu ) { get Menu Inflater (  )  . inflate ( R . menu . ef_image_picker_menu_main, menu )  ;  return true ; }"
6692,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_REMIXED ; }
6693,"public com . anychart . core . stock . scrollerseries .  Base high Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { return new com . anychart . core . stock . scrollerseries .  Base (  String . format (  Locale . US, js Base + "" . high Fill ( %s, %s, %s, %s ) "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ; }"
6694,"public static  Scope open Scope (  Object name ) { return open Scope ( name, true )  ; }"
6695,"public void inverted (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . inverted (  )  ; "" )  ; }"
6696,public static boolean not Marked With No Auto Start (  Object o ) { if  ( o == null )  {     return false ;  }  Class<?> clazz = o . get Class (  )  ;   No Auto Start a = clazz . get Annotation (  No Auto Start . class )  ;  return a == null ; }
6697,public void is In Order (  ) { check (  )  . that ( actual List )  . is In Order (  )  ; }
6698,"Q for Current Thread (  ) { //  Process . my Tid (  )  seems to have issues on some devices  ( see  Github #376 )  and  Robolectric  ( #171 ) : //  We use current Thread (  )  . get Id (  )  instead  ( unfortunately return a long, can not use  Sparse Array )  .  // PS . : thread ID may be reused, which should be fine because old thread will be gone anyway .  long thread Id =  Thread . current Thread (  )  . get Id (  )  ;  synchronized  ( queries For Threads )  {      Weak Reference<Q> query Ref = queries For Threads . get ( thread Id )  ;      Q query = query Ref != null ? query Ref . get (  )  : null ;      if  ( query == null )  {         gc (  )  ;          query = create Query (  )  ;          queries For Threads . put ( thread Id, new  Weak Reference<Q> ( query )  )  ;      } else {          System . arraycopy ( initial Values, 0, query . parameters, 0, initial Values . length )  ;      }     return query ;  }}"
6699,"public com . anychart . core . lineargauge . pointers .  Led hatch Fill ( com . anychart . graphics . vector . hatchfill .  Hatch Fill Type type,  String color,  Number thickness,  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s, %s, %s, %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null, wrap Quotes ( color ) , thickness, size )  )  ;  return this ; }"
6700,"public boolean validate (  String regex,  Char Sequence error Text ) { boolean is Valid = is Valid ( regex )  ;  if  ( !is Valid )  {     set Error ( error Text )  ;  } post Invalidate (  )  ;  return is Valid ; }"
6701,"private static int days In Lunar Month ( int year, int month ) { if  (  ( LUNAR_INFO [ year - MIN_YEAR ]  &  ( 0x100000 >> month )  )  == 0 )      return 29 ;  else     return 30 ; }"
6702,"private void add Opacity Stops To Gradient If Needed (  Gradient Color gradient Color,  List< Float> array ) { int start Index = color Points * 4 ;  if  ( array . size (  )  <= start Index )  {     return ;  } int opacity Stops =  ( array . size (  )  - start Index )  / 2 ;  double [  ]  positions = new double [ opacity Stops ]  ;  double [  ]  opacities = new double [ opacity Stops ]  ;  for  ( int i = start Index, j = 0 ;  i < array . size (  )  ;  i++ )  {     if  ( i % 2 == 0 )  {         positions [ j ]  = array . get ( i )  ;      } else {         opacities [ j ]  = array . get ( i )  ;          j++ ;      } } for  ( int i = 0 ;  i < gradient Color . get Size (  )  ;  i++ )  {     int color = gradient Color . get Colors (  )  [ i ]  ;      color =  Color . argb ( get Opacity At Position ( gradient Color . get Positions (  )  [ i ] , positions, opacities ) ,  Color . red ( color ) ,  Color . green ( color ) ,  Color . blue ( color )  )  ;      gradient Color . get Colors (  )  [ i ]  = color ;  }}"
6703,public  String get Key At Index ( int index ) {  Paired Text Encoded String Null Terminated text =  (  Paired Text Encoded String Null Terminated )  get Object (  Data Types . OBJ_TEXT )  ;  return text . get Value (  )  . get Mapping (  )  . get ( index )  . get Key (  )  ; }
6704,"public void get Transformed Bounds (  Rect F out Bounds ) { get Parent Transform ( s Temp Transform )  ;  // IMPORTANT: {@code get Bounds} should be called after {@code get Parent Transform}, // because the parent may have to change our bounds .  out Bounds . set ( get Bounds (  )  )  ;  s Temp Transform . map Rect ( out Bounds )  ; }"
6705,"public  String get Package Name (  ) { // descriptor is a string like "" [  [  Ljava/util/ String ; ""  String descriptor = get Descriptor (  )  . get String (  )  ;  int last Slash = descriptor . last Index Of ( '/' )  ;  // -1 unless this is an array int last Left Square = descriptor . last Index Of ( ' [ ' )  ;  if  ( last Slash == -1 )  {     return ""default"" ;  } else {     // +2 to skip the ' [ ' and the 'L' prefix     return descriptor . substring ( last Left Square + 2, last Slash )  . replace ( '/', ' . ' )  ;  }}"
6706,public boolean is Set Debug Info (  ) { return this . debug Info != null ; }
6707,"public com . anychart . core . gantt . elements .  Tasks Element stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
6708,"public static boolean had Init Freeline (  Project project ) { if  ( project != null )  {      String project Path = project . get Base Path (  )  ;      // freeline directory      File freeline Dir = new  File ( project Path, ""freeline"" )  ;      // freeline . py file      File freeline_py = new  File ( project Path, ""freeline . py"" )  ;      if  ( freeline Dir . exists (  )  && freeline_py . exists (  )  )  {         return true ;      } } return false ; }"
6709,private static boolean is Duration Based (  Method method ) {  Class<?> [  ]  parameter Types = method . get Parameter Types (  )  ;  return parameter Types . length >= 1 && parameter Types [ parameter Types . length - 1 ]  ==  Duration . class ; }
6710,public void set Publish Permissions (  List< String> permissions ) { properties . set Permissions ( permissions )  ; }
6711,"protected  String get Tag ( I Logging Event event ) { // format tag based on encoder layout ;  truncate if max length // exceeded  ( only necessary for is Loggable (  ) , which throws //  Illegal Argument Exception )   String tag =  ( this . tag Encoder != null )  ? this . tag Encoder . get Layout (  )  . do Layout ( event )  : event . get Logger Name (  )  ;  if  ( check Loggable &&  ( tag . length (  )  > MAX_TAG_LENGTH )  )  {     tag = tag . substring ( 0, MAX_TAG_LENGTH - 1 )  + ""*"" ;  } return tag ; }"
6712,public void test Cartesian Product_zeroary (  ) { assert That (  Sets . cartesian Product (  )  )  . contains Exactly ( list (  )  )  ; }
6713,"public com . anychart . core . gantt . edit .  Thumb fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
6714,public void set Clear Button Mode (  Clear Button Mode clear Button Mode ) { this . m Clear Button Mode = clear Button Mode ; }
6715,public static  Predicate<T> not Null (  ) { return  Object Predicate . NOT_NULL . with Narrowed Type (  )  ; }
6716,"public void log ( @ Non Null  Perf Metric perf Metric ) { if  ( !initialize Flg Transport Client (  )  )  {     logger . warn ( "" Unable to dispatch event because  Flg  Transport is not available"" )  ;      return ;  } flg Transport . send (  Event . of Data ( perf Metric )  )  ; }"
6717,"public void read (  Byte Buffer byte Buffer )  throws  Invalid Frame Exception,  Invalid Data Type Exception{  String identifier = read Identifier ( byte Buffer )  ;  if  ( !is Valid ID3v2 Frame Identifier ( identifier )  )  {     logger . config ( get Logging Filename (  )  + "": Invalid identifier:"" + identifier )  ;      byte Buffer . position ( byte Buffer . position (  )  -  ( get Frame Id Size (  )  - 1 )  )  ;      throw new  Invalid Frame Identifier Exception ( get Logging Filename (  )  + "":"" + identifier + "":is not a valid ID3v2 . 30 frame"" )  ;  } // Read the size field  ( as  Big  Endian  Int - byte buffers always initialised to  Big  Endian order )  frame Size = byte Buffer . get Int (  )  ;  if  ( frame Size < 0 )  {     logger . warning ( get Logging Filename (  )  + "": Invalid  Frame  Size:"" + frame Size + "":"" + identifier )  ;      throw new  Invalid Frame Exception ( identifier + "" is invalid frame:"" + frame Size )  ;  } else if  ( frame Size == 0 )  {     logger . warning ( get Logging Filename (  )  + "": Empty  Frame  Size:"" + identifier )  ;      // We don't process this frame or add to frame Map because contains no useful information     // Skip the two flag bytes so in correct position for subsequent frames     byte Buffer . get (  )  ;      byte Buffer . get (  )  ;      throw new  Empty Frame Exception ( identifier + "" is empty frame"" )  ;  } else if  ( frame Size > byte Buffer . remaining (  )  )  {     logger . warning ( get Logging Filename (  )  + "": Invalid  Frame size of "" + frame Size + "" larger than size of"" + byte Buffer . remaining (  )  + "" before mp3 audio:"" + identifier )  ;      throw new  Invalid Frame Exception ( identifier + "" is invalid frame:"" + frame Size + "" larger than size of"" + byte Buffer . remaining (  )  + "" before mp3 audio:"" + identifier )  ;  } // Read the flag bytes status Flags = new  Status Flags ( byte Buffer . get (  )  )  ;  encoding Flags = new  Encoding Flags ( byte Buffer . get (  )  )  ;   String id ;  // If this identifier is a valid v24 identifier or easily converted to v24 id = ID3 Tags . convert Frame ID23 To24 ( identifier )  ;  //  Cant easily be converted to v24 but is it a valid v23 identifier if  ( id == null )  {     //  frame body for it .      if  ( ID3 Tags . is ID3v23 Frame Identifier ( identifier )  )  {         id = identifier ;      } else //  Unknown so will be created as  Frame Body Unsupported     {         id = UNSUPPORTED_ID ;      } } logger . fine ( get Logging Filename (  )  + "": Identifier was:"" + identifier + "" reading using:"" + id + ""with frame size:"" + frame Size )  ;  // Read extra bits appended to frame header for various encodings // These are not included in header size but are included in frame size but won't be read when we actually //try to read the frame body data int extra Header Bytes Count = 0 ;  int decompressed Frame Size = -1 ;  if  (  (  (  Encoding Flags )  encoding Flags )  . is Compression (  )  )  {     // Read the  Decompressed  Size     decompressed Frame Size = byte Buffer . get Int (  )  ;      extra Header Bytes Count = FRAME_COMPRESSION_UNCOMPRESSED_SIZE ;      logger . fine ( get Logging Filename (  )  + "": Decompressed frame size is:"" + decompressed Frame Size )  ;  } if  (  (  (  Encoding Flags )  encoding Flags )  . is Encryption (  )  )  {     // Consume the encryption byte     extra Header Bytes Count += FRAME_ENCRYPTION_INDICATOR_SIZE ;      encryption Method = byte Buffer . get (  )  ;  } if  (  (  (  Encoding Flags )  encoding Flags )  . is Grouping (  )  )  {     // Read the  Grouping byte, but do nothing with it     extra Header Bytes Count += FRAME_GROUPING_INDICATOR_SIZE ;      group Identifier = byte Buffer . get (  )  ;  } if  (  (  (  Encoding Flags )  encoding Flags )  . is Non Standard Flags (  )  )  {     // Probably corrupt so treat as a standard frame     logger . severe ( get Logging Filename (  )  + "": Invalid Encoding Flags:"" +  Hex . as Hex (  (  (  Encoding Flags )  encoding Flags )  . get Flags (  )  )  )  ;  } if  (  (  (  Encoding Flags )  encoding Flags )  . is Compression (  )  )  {     if  ( decompressed Frame Size >  ( 100 * frame Size )  )  {         throw new  Invalid Frame Exception ( identifier + "" is invalid frame, frame size "" + frame Size + "" cannot be:"" + decompressed Frame Size + "" when uncompressed"" )  ;      } } // Work out the real size of the frame Body data int real Frame Size = frame Size - extra Header Bytes Count ;  if  ( real Frame Size <= 0 )  {     throw new  Invalid Frame Exception ( identifier + "" is invalid frame, realframe Size is:"" + real Frame Size )  ;  }  Byte Buffer frame Body Buffer ;  // Read the body data try {     if  (  (  (  Encoding Flags )  encoding Flags )  . is Compression (  )  )  {         frame Body Buffer = ID3 Compression . uncompress ( identifier, get Logging Filename (  ) , byte Buffer, decompressed Frame Size, real Frame Size )  ;          if  (  (  (  Encoding Flags )  encoding Flags )  . is Encryption (  )  )  {             frame Body = read Encrypted Body ( id, frame Body Buffer, decompressed Frame Size )  ;          } else {             frame Body = read Body ( id, frame Body Buffer, decompressed Frame Size )  ;          }     } else if  (  (  (  Encoding Flags )  encoding Flags )  . is Encryption (  )  )  {         frame Body = read Encrypted Body ( identifier, byte Buffer, frame Size )  ;      } else {         // Create  Buffer that only contains the body of this frame rather than the remainder of tag         frame Body Buffer = byte Buffer . slice (  )  ;          frame Body Buffer . limit ( real Frame Size )  ;          frame Body = read Body ( id, frame Body Buffer, real Frame Size )  ;      }     //it then be created as  Frame Body Unsupported     if  ( ! ( frame Body instanceof ID3v23 Frame Body )  )  {         logger . config ( get Logging Filename (  )  + "": Converted frame Body with:"" + identifier + "" to deprecated frame Body"" )  ;          frame Body = new  Frame Body Deprecated (  (  Abstract ID3v2 Frame Body )  frame Body )  ;      } } finally {     // Update position of main buffer, so no attempt is made to reread these bytes     byte Buffer . position ( byte Buffer . position (  )  + real Frame Size )  ;  }}"
6718,"public  Fragment Mvi Delegate<V, P> get Mvp Delegate (  ) { if  ( mvp Delegate == null )  {     mvp Delegate = new  Fragment Mvi Delegate Impl<V, P> ( this, this )  ;  } return mvp Delegate ; }"
6719,"public long size (  Diff Entry .  Side side,  Diff Entry ent )  throws IO Exception{ switch ( side )  {     case OLD:         return old Source . size ( ent . old Path, ent . old Id . to Object Id (  )  )  ;      case NEW:         return new Source . size ( ent . new Path, ent . new Id . to Object Id (  )  )  ;      default:         throw new  Illegal Argument Exception (  )  ;  }}"
6720,"public  Hms Picker Builder set Time In Seconds ( int time In Seconds ) { int hours = time In Seconds / 3600 ;  int remaining = time In Seconds % 3600 ;  int minutes = remaining / 60 ;  int seconds = remaining % 60 ;  return this . set Time ( hours, minutes, seconds )  ; }"
6721,public final void set Fail On Unknown ( boolean fail On Unknown ) { this . fail On Unknown = fail On Unknown ; }
6722,public  String json Serialize String (  ) { return json Serialize (  )  . to String (  )  ; }
6723,"private int [  ]  pick Auto Detected Local Address (  )  throws IO Exception{  Inet Address address Obj =  Inet Address . get Local Host (  )  ;  byte [  ]  addr = address Obj . get Address (  )  ;  int b1 = addr [ 0 ]  & 0xff ;  int b2 = addr [ 1 ]  & 0xff ;  int b3 = addr [ 2 ]  & 0xff ;  int b4 = addr [ 3 ]  & 0xff ;  int [  ]  ret = { b1, b2, b3, b4 } ;  return ret ; }"
6724,public  String get Name (  ) { return name ; }
6725,public float get Granularity (  ) { return m Granularity ; }
6726,"public static void check Not Null ( @ Nullable  Object object, @ Non Null  String message ) { if  ( object == null )  {     throw new  Null Pointer Exception ( message )  ;  }}"
6727,public final boolean is Sim Network Locked (  ) { return tm != null && tm . get Sim State (  )  ==  Telephony Manager . SIM_STATE_NETWORK_LOCKED ; }
6728,private int get Normal Reg Count (  ) { return max Locals + method . get Max Stack (  )  ; }
6729,public void set Activity Sorter (  Activity Sorter activity Sorter ) { synchronized  ( m Instance Lock )  {     if  ( m Activity Sorter == activity Sorter )  {         return ;      }     m Activity Sorter = activity Sorter ;      if  ( sort Activities If Needed (  )  )  {         notify Changed (  )  ;      } }}
6730,"public static long to Uint32 ( double d ) { long l =  ( long )  d ;  if  ( l == d )  {     //  This covers -0 . 0 as well     return l & 0xffffffff L ;  } if  ( d != d || d ==  Double . POSITIVE_INFINITY || d ==  Double . NEGATIVE_INFINITY )  {     return 0 ;  } d =  ( d >= 0 )  ?  Math . floor ( d )  :  Math . ceil ( d )  ;  // 0x100000000 gives me a numeric overflow .  .  .  double two32 = 4294967296 . 0 ;  l =  ( long )   Math . IEE Eremainder ( d, two32 )  ;  return l & 0xffffffff L ; }"
6731,private boolean is CCCD ( @ Nullable final  Bluetooth Gatt Descriptor descriptor ) { return descriptor != null &&  Ble Manager . CLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR_UUID . equals ( descriptor . get Uuid (  )  )  ; }
6732,public  Immutable Range Set<C> difference (  Range Set<C> other ) {  Range Set<C> copy =  Tree Range Set . create ( this )  ;  copy . remove All ( other )  ;  return copy Of ( copy )  ; }
6733,public  List< String> get Phones (  ) { return phones ; }
6734,"public void is Empty (  ) { if  ( actual == null )  {     fail With Actual ( simple Fact ( ""expected empty string"" )  )  ;  } else if  ( !actual . is Empty (  )  )  {     fail With Actual ( simple Fact ( ""expected to be empty"" )  )  ;  }}"
6735,"public void color (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . color (  )  ; "" )  ; }"
6736,"public com . anychart . charts .  Scatter min Bubble Size (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Bubble Size ( %s )  ; "", value )  )  ;  return this ; }"
6737,public byte [  ]  get Tx Network Key (  ) { switch ( phase )  {     case KEY_DISTRIBUTION:         return old Key ;      case USING_NEW_KEYS:     default:         return key ;  }}
6738,public  Dfs Pack File get Pack File (  ) { return pack ; }
6739,"public com . anychart . charts .  Sankey select Marquee Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
6740,public  Http Request Builder url (  String url ) { validate (  )  ;  http Request . set Url ( base Url + url )  ;  return this ; }
6741,"public void period (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . period (  )  ; "" )  ; }"
6742,"public  List< User Meta Value> query Deep (  String where,  String .  .  .  selection Arg ) {  Cursor cursor = db . raw Query ( get Select Deep (  )  + where, selection Arg )  ;  return load Deep All And Close Cursor ( cursor )  ; }"
6743,"public com . anychart . core . stock .  Grouping grouping (  ) { return new com . anychart . core . stock .  Grouping ( js Base + "" . grouping (  ) "" )  ; }"
6744,"public void test Select Tracks Select Preferred Audio Language (  )  throws  Exception{  Format fr Audio Format =  Format . create Audio Sample Format ( ""audio"",  Mime Types . AUDIO_AAC, null,  Format . NO_VALUE,  Format . NO_VALUE, 2, 44100, null, null, 0, ""fra"" )  ;   Format en Audio Format =  Format . create Audio Sample Format ( ""audio"",  Mime Types . AUDIO_AAC, null,  Format . NO_VALUE,  Format . NO_VALUE, 2, 44100, null, null, 0, ""eng"" )  ;   Track Group Array track Groups = wrap Formats ( fr Audio Format, en Audio Format )  ;  track Selector . set Parameters (  Parameters . DEFAULT . build Upon (  )  . set Preferred Audio Language ( ""eng"" )  . build (  )  )  ;   Track Selector Result result = track Selector . select Tracks ( new  Renderer Capabilities [  ]  { ALL_AUDIO_FORMAT_SUPPORTED_RENDERER_CAPABILITIES }, wrap Formats ( fr Audio Format, en Audio Format ) , period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, en Audio Format )  ; }"
6745,"public void domain Ignored With Trailing Dot (  )  throws  Exception{  Cookie cookie =  Cookie . parse ( url, ""a=b ;  domain=example . com . "" )  ;  assert That ( cookie . matches (  Http Url . get ( ""http://example . com"" )  )  )  . is True (  )  ;  assert That ( cookie . matches (  Http Url . get ( ""http://www . example . com"" )  )  )  . is False (  )  ;  assert That ( cookie . matches (  Http Url . get ( ""http://square . com"" )  )  )  . is False (  )  ; }"
6746,protected int get Desired Width (  View child ) { if  ( child . get Visibility (  )  ==  View . GONE )  {     return 0 ;  } return child . get Measured Width (  )  ; }
6747,private void disable Animated Images (  ) { get Instrumentation (  )  . run On Main Sync ( new  Runnable (  )  {     @ Override     public void run (  )  {         m Activity . set Allow Animations ( false )  ;      } } )  ; }
6748,public UI Config<T> set Show Names In Group Chat View ( boolean request ) { this . show Names In Group Chat View = request ;  return this ; }
6749,"public com . anychart . core . annotations .  Trend Channel second Value Anchor (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . second Value Anchor ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
6750,"public static  Mutable Document new Found Document (  Document Key document Key,  Snapshot Version version,  Object Value value ) { return new  Mutable Document ( document Key )  . convert To Found Document ( version, value )  ; }"
6751,"public  Builder set Request ( @ Non Null  Token Request request ) { m Request = check Not Null ( request, ""request cannot be null"" )  ;  return this ; }"
6752,"public com . anychart . core .  State Settings trend (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . trend ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6753,"public com . anychart . charts .  Gantt palette ( com . anychart . palettes .  Range Colors palette Settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "",  ( palette Settings != null )  ? palette Settings . get Js Base (  )  : null )  )  ;  return this ; }"
6754,public void remove From Sprite Group (  Base Sub sprite ) { l_sprite_group . remove ( sprite )  ; }
6755,"public com . anychart . charts .  Scatter auto Redraw (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . auto Redraw ( %s )  ; "", enabled )  )  ;  return this ; }"
6756,"public com . anychart . core . annotations .  Base get Selected Annotation (  ) { return new com . anychart . core . annotations .  Base ( js Base + "" . get Selected Annotation (  ) "" )  ; }"
6757,"protected void override Mtu ( @ Int Range ( from = 23, to = 517 )  final int mtu ) { request Handler . override Mtu ( mtu )  ; }"
6758,"public void mouse Moved ( P Input Event e ) { process Event ( new SV Event ( SV Event Type . SVET_MOTION, sv Window,  ( int )  e . get Position (  )  . get X (  ) ,  ( int )  e . get Position (  )  . get Y (  ) , 0, 0, null )  )  ; }"
6759,public void set Avoid Super Change Font Metrics ( boolean avoid Super Change Font Metrics ) { m Avoid Super Change Font Metrics = avoid Super Change Font Metrics ; }
6760,public int get Swipe Action Left (  ) { return swipe Action Left ; }
6761,"private void metaball (  Canvas canvas, int j, int i, float v, float handle_len_rate, float max Distance ) { final  Circle circle1 = circle Paths . get ( i )  ;  final  Circle circle2 = circle Paths . get ( j )  ;   Rect F ball1 = new  Rect F (  )  ;  ball1 . left = circle1 . center [ 0 ]  - circle1 . radius + get Padding Left (  )  ;  ball1 . top = circle1 . center [ 1 ]  - circle1 . radius ;  ball1 . right = ball1 . left + circle1 . radius * 2 ;  ball1 . bottom = ball1 . top + circle1 . radius * 2 ;   Rect F ball2 = new  Rect F (  )  ;  ball2 . left = circle2 . center [ 0 ]  - circle2 . radius ;  ball2 . top = circle2 . center [ 1 ]  - circle2 . radius ;  ball2 . right = ball2 . left + circle2 . radius * 2 ;  ball2 . bottom = ball2 . top + circle2 . radius * 2 ;  float [  ]  center1 = new float [  ]  { ball1 . center X (  ) , ball1 . center Y (  )  } ;  float [  ]  center2 = new float [  ]  { ball2 . center X (  ) , ball2 . center Y (  )  } ;  float d = get Distance ( center1, center2 )  ;  float radius1 = ball1 . width (  )  / 2 ;  float radius2 = ball2 . width (  )  / 2 ;  float pi2 =  ( float )   (  Math . PI / 2 )  ;  float u1, u2 ;  if  ( d > max Distance )  {     //            canvas . draw Circle ( ball1 . center X (  ) , ball1 . center Y (  ) , circle1 . radius, paint )  ;      canvas . draw Circle ( ball2 . center X (  ) , ball2 . center Y (  ) , circle2 . radius, paint )  ;  } else {     float scale2 = 1 + SCALE_RATE *  ( 1 - d / max Distance )  ;      float scale1 = 1 - SCALE_RATE *  ( 1 - d / max Distance )  ;      radius2 *= scale2 ;      //            radius1 *= scale1 ;      //            canvas . draw Circle ( ball1 . center X (  ) , ball1 . center Y (  ) , radius1, paint )  ;      canvas . draw Circle ( ball2 . center X (  ) , ball2 . center Y (  ) , radius2, paint )  ;  } //         Log . d ( "" Metaball_radius"", ""radius1:"" + radius1 + "",radius2:"" + radius2 )  ;  if  ( radius1 == 0 || radius2 == 0 )  {     return ;  } if  ( d > max Distance || d <=  Math . abs ( radius1 - radius2 )  )  {     return ;  } else if  ( d < radius1 + radius2 )  {     u1 =  ( float )   Math . acos (  ( radius1 * radius1 + d * d - radius2 * radius2 )  /  ( 2 * radius1 * d )  )  ;      u2 =  ( float )   Math . acos (  ( radius2 * radius2 + d * d - radius1 * radius1 )  /  ( 2 * radius2 * d )  )  ;  } else {     u1 = 0 ;      u2 = 0 ;  } //         Log . d ( "" Metaball"", ""center2:"" +  Arrays . to String ( center2 )  + "",center1:"" +  Arrays . to String ( center1 )  )  ;  float [  ]  centermin = new float [  ]  { center2 [ 0 ]  - center1 [ 0 ] , center2 [ 1 ]  - center1 [ 1 ]  } ;  float angle1 =  ( float )   Math . atan2 ( centermin [ 1 ] , centermin [ 0 ]  )  ;  float angle2 =  ( float )   Math . acos (  ( radius1 - radius2 )  / d )  ;  float angle1a = angle1 + u1 +  ( angle2 - u1 )  * v ;  float angle1b = angle1 - u1 -  ( angle2 - u1 )  * v ;  float angle2a =  ( float )   ( angle1 +  Math . PI - u2 -  (  Math . PI - u2 - angle2 )  * v )  ;  float angle2b =  ( float )   ( angle1 -  Math . PI + u2 +  (  Math . PI - u2 - angle2 )  * v )  ;  //         Log . d ( "" Metaball"", ""angle1:"" + angle1 + "",angle2:"" + angle2 + "",angle1a:"" + angle1a + "",angle1b:"" + angle1b + "",angle2a:"" + angle2a + "",angle2b:"" + angle2b )  ;  float [  ]  p1a1 = get Vector ( angle1a, radius1 )  ;  float [  ]  p1b1 = get Vector ( angle1b, radius1 )  ;  float [  ]  p2a1 = get Vector ( angle2a, radius2 )  ;  float [  ]  p2b1 = get Vector ( angle2b, radius2 )  ;  float [  ]  p1a = new float [  ]  { p1a1 [ 0 ]  + center1 [ 0 ] , p1a1 [ 1 ]  + center1 [ 1 ]  } ;  float [  ]  p1b = new float [  ]  { p1b1 [ 0 ]  + center1 [ 0 ] , p1b1 [ 1 ]  + center1 [ 1 ]  } ;  float [  ]  p2a = new float [  ]  { p2a1 [ 0 ]  + center2 [ 0 ] , p2a1 [ 1 ]  + center2 [ 1 ]  } ;  float [  ]  p2b = new float [  ]  { p2b1 [ 0 ]  + center2 [ 0 ] , p2b1 [ 1 ]  + center2 [ 1 ]  } ;  //         Log . d ( "" Metaball"", ""p1a:"" +  Arrays . to String ( p1a )  + "",p1b:"" +  Arrays . to String ( p1b )  + "",p2a:"" +  Arrays . to String ( p2a )  + "",p2b:"" +  Arrays . to String ( p2b )  )  ;  float [  ]  p1_p2 = new float [  ]  { p1a [ 0 ]  - p2a [ 0 ] , p1a [ 1 ]  - p2a [ 1 ]  } ;  float total Radius =  ( radius1 + radius2 )  ;  float d2 =  Math . min ( v * handle_len_rate, get Length ( p1_p2 )  / total Radius )  ;  d2 *=  Math . min ( 1, d * 2 /  ( radius1 + radius2 )  )  ;  //         Log . d ( "" Metaball"", ""d2:"" + d2 )  ;  radius1 *= d2 ;  radius2 *= d2 ;  float [  ]  sp1 = get Vector ( angle1a - pi2, radius1 )  ;  float [  ]  sp2 = get Vector ( angle2a + pi2, radius2 )  ;  float [  ]  sp3 = get Vector ( angle2b - pi2, radius2 )  ;  float [  ]  sp4 = get Vector ( angle1b + pi2, radius1 )  ;  //         Log . d ( "" Metaball"", ""sp1:"" +  Arrays . to String ( sp1 )  + "",sp2:"" +  Arrays . to String ( sp2 )  + "",sp3:"" +  Arrays . to String ( sp3 )  + "",sp4:"" +  Arrays . to String ( sp4 )  )  ;   Path path1 = new  Path (  )  ;  path1 . move To ( p1a [ 0 ] , p1a [ 1 ]  )  ;  path1 . cubic To ( p1a [ 0 ]  + sp1 [ 0 ] , p1a [ 1 ]  + sp1 [ 1 ] , p2a [ 0 ]  + sp2 [ 0 ] , p2a [ 1 ]  + sp2 [ 1 ] , p2a [ 0 ] , p2a [ 1 ]  )  ;  path1 . line To ( p2b [ 0 ] , p2b [ 1 ]  )  ;  path1 . cubic To ( p2b [ 0 ]  + sp3 [ 0 ] , p2b [ 1 ]  + sp3 [ 1 ] , p1b [ 0 ]  + sp4 [ 0 ] , p1b [ 1 ]  + sp4 [ 1 ] , p1b [ 0 ] , p1b [ 1 ]  )  ;  path1 . line To ( p1a [ 0 ] , p1a [ 1 ]  )  ;  path1 . close (  )  ;  canvas . draw Path ( path1, paint )  ; }"
6762,"public  Fake Data append Read Data ( byte [  ]  data ) {  Assertions . check State ( data != null && data . length > 0 )  ;  segments . add ( new  Segment ( data, get Last Segment (  )  )  )  ;  return this ; }"
6763,public byte [  ]  get Created From Bytes (  ) { return created From Bytes ; }
6764,"public void get Selected Points (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Selected Points (  )  ; "" )  ; }"
6765,public void set Icon URL (  String icon URL ) { this . icon URL = icon URL ; }
6766,"public void remove Entry (  Field Path field Path,  Value field Value,  Document Key document Key ) { throw new  Runtime Exception ( "" Not yet implemented . "" )  ; }"
6767,"public com . anychart . core . axes .  Linear y Axis (  Number index ) { return new com . anychart . core . axes .  Linear (  String . format (  Locale . US, js Base + "" . y Axis ( %s ) "", index )  )  ; }"
6768,"public void into ( @ Non Null  Remote Views remote Views, @ Id Res int view Id, int notification Id, @ Non Null  Notification notification ) { into ( remote Views, view Id, notification Id, notification, null )  ; }"
6769,"public com . anychart . core . venn .  Intersections labels (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", settings )  )  ;  return this ; }"
6770,"public void add Template To Workspace (  Path template Path )  throws IO Exception{ pre Add Template Actions ( template Path )  ;  // renames those with FIXTURE_SUFFIX, removes those with EXPECTED_SUFFIX  Most Files . copy Recursively ( template Path, dest Path,  (  Path path )  -> copy File Path ( path )  . or Else ( null )  )  ;  if  (  Platform . detect (  )  ==  Platform . WINDOWS )  {     //  Hack for symlinks on  Windows .       Simple File Visitor< Path> copy Dir Visitor = new  Simple File Visitor< Path> (  )  {         @ Override         public  File Visit Result visit File (  Path path,  Basic File Attributes attrs )  throws IO Exception {             //  On NTFS length of path must be greater than 0 and less than 4096 .              if  ( attrs . size (  )  > 0 && attrs . size (  )  <= 4096 )  {                  String link To = new  String (  Files . read All Bytes ( path ) , UTF_8 )  ;                   Path link To File ;                  try {                     link To File = template Path . resolve ( link To )  ;                  } catch  (  Invalid Path Exception e )  {                     // link .                      return  File Visit Result . CONTINUE ;                  }                 if  (  Files . is Regular File ( link To File )  )  {                      Files . copy ( link To File, path,  Standard Copy Option . REPLACE_EXISTING )  ;                  } else if  (  Files . is Directory ( link To File )  )  {                      Files . delete ( path )  ;                       Most Files . copy Recursively ( link To File, path )  ;                  }             }             return  File Visit Result . CONTINUE ;          }     } ;       Files . walk File Tree ( dest Path, copy Dir Visitor )  ;  } post Add Template Actions (  )  ; }"
6771,"protected void on Page Scrolled ( int position, float offset, int offset Pixels ) { if  ( m On Page Change Listener != null )  {     m On Page Change Listener . on Page Scrolled ( position, offset, offset Pixels )  ;  } if  ( m Internal Page Change Listener != null )  {     m Internal Page Change Listener . on Page Scrolled ( position, offset, offset Pixels )  ;  }}"
6772,"public void x Anchor (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . x Anchor (  )  ; "" )  ; }"
6773,"public static byte [  ]  encrypt DES2 Base64 ( final byte [  ]  data, final byte [  ]  key, final  String transformation, final byte [  ]  iv ) { return  Utils Bridge . base64 Encode ( encrypt DES ( data, key, transformation, iv )  )  ; }"
6774,public static long pts To Us ( long pts ) { return  ( pts * C . MICROS_PER_SECOND )  / 90000 ; }
6775,synchronized boolean remove Topic Operation (  Topic Operation topic Operation ) { return topic Operations Queue . remove ( topic Operation . serialize (  )  )  ; }
6776,public static boolean is Host Initialized (  ) { return m Host Initialized ; }
6777,"private static boolean has Always Denied Permission (  Source source,  List< String> denied Permissions ) { for  (  String permission : denied Permissions )  {     if  ( !source . is Show Rationale Permission ( permission )  )  {         return true ;      } } return false ; }"
6778,public  Builder set Skip Nonce Verification (  Boolean skip Nonce Verification ) { m Skip Nonce Verification = skip Nonce Verification ;  return this ; }
6779,"public com . anychart . standalones .  Resource List odd Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . odd Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
6780,public int get Overlay Color (  ) { return m Overlay Color ; }
6781,"static boolean retain Presenter Instance ( boolean keep Presenter Instance,  Activity activity ) { return keep Presenter Instance &&  ( activity . is Changing Configurations (  )  || !activity . is Finishing (  )  )  ; }"
6782,"private void show Progress Item (  ) { //  Clear previous delayed message m Handler . remove Messages ( LOAD_MORE_COMPLETE )  ;  log . v ( ""on Load More     show progress Item"" )  ;  if  ( m Top Endless )  {     add Scrollable Header ( m Progress Item )  ;  } else {     add Scrollable Footer ( m Progress Item )  ;  }}"
6783,"public com . anychart . core . stock . scrollerseries .  Spline bounds ( com . anychart . core . utils .  Bounds bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
6784,"protected void on Cluster Item Rendered ( T cluster Item,  Marker marker ) {}"
6785,"public  Text Prop Model View Model_ on Visibility Changed (  On Model Visibility Changed Listener< Text Prop Model View Model_,  Text Prop Model View> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
6786,public void add On Item Selection Listener ( @ Non Null final  On Center Item Selection Listener on Center Item Selection Listener ) { m On Center Item Selection Listeners . add ( on Center Item Selection Listener )  ; }
6787,public  Interpolator get Interpolator Map ( int position ) { if  ( interpolator Map . contains Key ( position )  )  {     return interpolator Map . get ( position )  ;  } else {     return new  Linear Interpolator (  )  ;  }}
6788,public  Drawable get Top Level Drawable (  ) { return m Drawee Holder . get Top Level Drawable (  )  ; }
6789,public  String get Issuer (  ) { return payload . iss ; }
6790,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
6791,"public void destroy (  ) {  Log . v ( TAG, "" Destroying  Lib VLC instance"" )  ;  native Destroy (  )  ;  detach Event Handler (  )  ;  m Is Initialized = false ; }"
6792,"public  String get Dependency String ( boolean print File Size ) {  String Builder sb = new  String Builder (  )  ;  sb . append ( get Group (  )  )  . append ( "":"" )  ;  sb . append ( get Name (  )  )  . append ( "":"" )  ;  //FIXME REPLACE IT LATER if  (  Atlas Build Context . s Builder Adapter . pretty Dependency Format )  {     sb . append ( get Version (  )  )  . append ( ""@"" )  ;      sb . append ( get Type (  )  )  ;  } else {     sb . append ( get Type (  )  )  ;      if  ( org . apache . commons . lang .  String Utils . is Not Blank ( get Classifier (  )  )  )  {         sb . append ( "":"" )  . append ( get Classifier (  )  )  ;      }     sb . append ( "":"" )  . append ( get Version (  )  )  ;  } if  ( print File Size )  {      File file = get Resolved Artifact (  )  . get File (  )  ;      long file Length = file . length (  )  ;      sb . append ( "" "" )  ;      sb . append ( file Length )  ;  } return sb . to String (  )  ; }"
6793,"public float get Float (  String name ) {  String value = get ( name, null )  ;  if  ( value == null )      throw new  Gdx Runtime Exception ( "" Element "" + this . name + "" doesn't have attribute or child: "" + name )  ;  return  Float . parse Float ( value )  ; }"
6794,"public static boolean has Annotation (  Annotation Mirror mirror,  Class<? extends  Annotation> annotation ) { return has Annotation ( mirror . get Annotation Type (  )  . as Element (  ) , annotation )  ; }"
6795,"public com . anychart . charts .  Sunburst width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", width )  )  ;  return this ; }"
6796,public  Canvas lock Canvas (  ) { return display Surface == null ? null : display Surface . lock Canvas ( null )  ; }
6797,void set Sorted Order ( final  Sorting Order sorted Order ) { this . sorted Order = sorted Order ; }
6798,public static  Object skylark Value From Nullable ( @ Nullable  Object object ) { return object == null ?  Runtime . NONE : object ; }
6799,"Component Creator Implementation build (  ) { set Modifiers (  )  ;  set Supertype (  )  ;  add Constructor (  )  ;  this . fields = add Fields (  )  ;  add Setter Methods (  )  ;  add Factory Method (  )  ;  return  Component Creator Implementation . create ( class Builder . build (  ) , component Implementation . get Creator Name (  ) , fields )  ; }"
6800,public  Animated Drawable Options build (  ) { return new  Animated Drawable Options ( this )  ; }
6801,public void set Programmatic Change Events ( boolean programmatic Change Events ) { this . programmatic Change Events = programmatic Change Events ; }
6802,"public void schedule Refresh ( long time To Refresh Millis ) { //  Cancel any previously scheduled refresh attempt .  cancel (  )  ;  delay After Failure Seconds = UNSET_DELAY ;  refresh Future = scheduled Executor Service . schedule ( this::on Refresh,  Math . max ( 0, time To Refresh Millis ) , MILLISECONDS )  ; }"
6803,public  Scene get Current Scene (  ) { return m Current Scene ; }
6804,public void add Listener ( @ Non Null  Lifecycle Listener listener ) { lifecycle Listeners . add ( listener )  ;  if  ( is Destroyed )  {     listener . on Destroy (  )  ;  } else if  ( is Started )  {     listener . on Start (  )  ;  } else {     listener . on Stop (  )  ;  }}
6805,public static boolean is ID3v22 Frame Identifier (  String identifier ) { // If less than 3 cant be an identifier if  ( identifier . length (  )  < 3 )  {     return false ;  } else     // If 3 is it a known identifier     return identifier . length (  )  == 3 && ID3v22 Frames . get Instance Of (  )  . get Id To Value Map (  )  . contains Key ( identifier )  ; }
6806,"public com . anychart . charts .  Stock margin (  String value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
6807,"public static final  Graphical View get Cube Line Chart View (  Context context, XY Multiple Series Dataset dataset, XY Multiple Series Renderer renderer, float smoothness ) { check Parameters ( dataset, renderer )  ;  XY Chart chart = new  Cubic Line Chart ( dataset, renderer, smoothness )  ;  return new  Graphical View ( context, chart )  ; }"
6808,"public static int convert To Color Int (  String argb )  throws  Illegal Argument Exception{ if  ( !argb . starts With ( ""#"" )  )  {     argb = ""#"" + argb ;  } return  Color . parse Color ( argb )  ; }"
6809,public double get Longitude (  ) { return longitude ; }
6810,public  Prepared Get .  Builder get (  ) { return new  Prepared Get .  Builder ( this )  ; }
6811,"public com . anychart . charts .  Linear Gauge padding (  String value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
6812,"public static char from Byte Array ( byte [  ]  bytes ) { check Argument ( bytes . length >= BYTES, ""array too small: %s < %s"", bytes . length, BYTES )  ;  return from Bytes ( bytes [ 0 ] , bytes [ 1 ]  )  ; }"
6813,"public com . anychart . core . stock .  Plot y Minor Grid (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Minor Grid ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6814,public  Refresh Layout set Enable Scroll Content When Refreshed ( boolean enabled ) { this . m Enable Scroll Content When Refreshed = enabled ;  return this ; }
6815,"public static  String get MD5 Sum (  String file )  throws IO Exception{ try {      Message Digest digest =  Message Digest . get Instance ( ""MD5"" )  ;       Input Stream is = new  File Input Stream ( file )  ;      byte [  ]  buffer = new byte [ 8192 ]  ;      int read = 0 ;      while  (  ( read = is . read ( buffer )  )  > 0 )  {         digest . update ( buffer, 0, read )  ;      }     is . close (  )  ;      byte [  ]  md5sum = digest . digest (  )  ;       Big Integer big Int = new  Big Integer ( 1, md5sum )  ;      return big Int . to String ( 16 )  ;  } catch  (  No Such Algorithm Exception e )  {     return """" ;  }}"
6816,"public com . anychart . standalones .  Resource Timeline row Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
6817,"public void thread Should Throw (  ) { thread Fail ( ""should throw exception"" )  ; }"
6818,"public  Iterable< String> get Events (  ) { return get Delegate (  )  . get List Without Comments ( BUILDFILE_SECTION_NAME, ""events"" )  ; }"
6819,"public void series Type (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . series Type (  )  ; "" )  ; }"
6820,"public void set Consent (  String [  ]  feature Names, boolean is Consent Given ) { synchronized  ( _cly )  {     _cly . set Consent Internal ( feature Names, is Consent Given )  ;  }}"
6821,"void destroy Fixture (  Body body,  Fixture fixture ) { jni Destroy Fixture ( addr, body . addr, fixture . addr )  ; }"
6822,"public com . anychart . standalones . axismarkers .  Line enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
6823,"public static void failed ( @ Non Null  Oid mechanism ) { synchronized  ( LOCK )  {      Boolean worked = supported Mechanisms . get ( mechanism )  ;      if  ( worked != null && !worked . boolean Value (  )  )  {         //  If it never worked, remove it         supported Mechanisms . remove ( mechanism )  ;      } }}"
6824,public  Builder with Delete Resolver ( @ Nullable  Delete Resolver< Delete Query> delete Resolver ) { this . delete Resolver = delete Resolver ;  return this ; }
6825,public static int get SDK Version (  ) { return android . os .  Build . VERSION . SDK_INT ; }
6826,public  Http Connection Factory get Http Connection Factory (  ) { return factory ; }
6827,void on Radio Toggle ( int index ) { for  ( int i = 0 ;  i < get Child Count (  )  ;  i++ )  {     if  ( i != index )  {          Bootstrap Button b = retrieve Button Child ( i )  ;          b . set Selected ( false )  ;      } }}
6828,Immutable Sorted Set< Path> get Classpath Entries (  ) { return pipeline . get Compiler Parameters (  )  . get Classpath Entries (  )  ; }
6829,"public T sample Size ( @ Int Range ( from = 1, to =  Character . MAX_VALUE )  final int sample Size ) { m Options . set In Sample Size ( sample Size )  ;  return self (  )  ; }"
6830,"public void text Settings (  String name ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Settings ( %s )  ; "", wrap Quotes ( name )  )  )  ; }"
6831,public static  Country get Country By Description (  String description ) { return description Map . get ( description )  ; }
6832,public synchronized void dispose (  ) { if  ( m Shell == null )  {     return ;  } try {     m Shell . close (  )  ;  } catch  (  Exception ignored )  { } m Shell = null ;  m Callback Thread . quit (  )  ;  m Callback Thread = null ; }
6833,public void set On Item Moved Listener ( @ Nullable final  On Item Moved Listener on Item Moved Listener ) { m On Item Moved Listener = on Item Moved Listener ; }
6834,public boolean is Min X Set (  ) { return is Min X Set ( 0 )  ; }
6835,"public static byte [  ]  [  ]  split Nal Units ( byte [  ]  data ) { if  ( !is Nal Start Code ( data, 0 )  )  {     // data does not consist of NAL start code delimited units .      return null ;  }  List< Integer> starts = new  Array List<> (  )  ;  int nal Unit Index = 0 ;  do {     starts . add ( nal Unit Index )  ;      nal Unit Index = find Nal Start Code ( data, nal Unit Index + NAL_START_CODE . length )  ;  } while  ( nal Unit Index != C . INDEX_UNSET )  ;  byte [  ]  [  ]  split = new byte [ starts . size (  )  ]  [  ]  ;  for  ( int i = 0 ;  i < starts . size (  )  ;  i++ )  {     int start Index = starts . get ( i )  ;      int end Index = i < starts . size (  )  - 1 ? starts . get ( i + 1 )  : data . length ;      byte [  ]  nal = new byte [ end Index - start Index ]  ;       System . arraycopy ( data, start Index, nal, 0, nal . length )  ;      split [ i ]  = nal ;  } return split ; }"
6836,public boolean is Geodesic (  ) { return m Polyline Options . is Geodesic (  )  ; }
6837,"public com . anychart . core . resource . resourcelist .  Text Settings h Align (  String align ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . h Align ( %s )  ; "", wrap Quotes ( align )  )  )  ;  return this ; }"
6838,"public com . anychart . core . stock . indicators .  Price Channels range Series ( com . anychart . enums .  Stock Series Type type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . range Series ( %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
6839,public void log Event (  String event Name ) { logger Impl . log Event ( event Name )  ; }
6840,public final int get Constant Width (  ) { if  ( !m Checked Constant Size )  {     compute Constant Size (  )  ;  } return m Constant Width ; }
6841,"public com . anychart . core . stock . scrollerseries .  Hilo color Scale ( com . anychart . scales .  Ordinal Color settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
6842,public  Appender Tracker<E> get Appender Tracker (  ) { return appender Tracker ; }
6843,"public com . anychart . core . stock . indicators . AO ao ( com . anychart . data .  Table Mapping mapping,  Number fast Period,  Number slow Period, com . anychart . enums .  Moving Average Type ma Type,  String series Type ) { return new com . anychart . core . stock . indicators . AO (  String . format (  Locale . US, js Base + "" . ao ( %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, fast Period, slow Period,  ( ma Type != null )  ? ma Type . get Js Base (  )  : null, wrap Quotes ( series Type )  )  )  ; }"
6844,"private void start Worker If Needed (  ) { //  Perform a compare-and-swap retry loop for synchronization to make sure we don't start more // workers than desired .  int current Count = m Pending Workers . get (  )  ;  while  ( current Count < m Max Concurrency )  {     int updated Count = current Count + 1 ;      if  ( m Pending Workers . compare And Set ( current Count, updated Count )  )  {         //  Start a new worker .          F Log . v ( TAG, ""%s: starting worker %d of %d"", m Name, updated Count, m Max Concurrency )  ;          m Executor . execute ( m Task Runner )  ;          break ;      }     // else: compare And Set failed due to race ;  snapshot the new count and try again     F Log . v ( TAG, ""%s: race in start Worker If Needed ;  retrying"", m Name )  ;      current Count = m Pending Workers . get (  )  ;  }}"
6845,public  Builder initial Data (  Realm .  Transaction transaction ) { initial Data Transaction = transaction ;  return this ; }
6846,"public static int check Signature And Tinker ID (  Context context,  File patch File,  Share Security Check security Check ) { if  ( !security Check . verify Patch Meta Signature ( patch File )  )  {     return  Share Constants . ERROR_PACKAGE_CHECK_SIGNATURE_FAIL ;  }  String old Tinker Id = get Manifest Tinker ID ( context )  ;  if  ( old Tinker Id == null )  {     return  Share Constants . ERROR_PACKAGE_CHECK_APK_TINKER_ID_NOT_FOUND ;  }  Hash Map< String,  String> properties = security Check . get Package Properties If Present (  )  ;  if  ( properties == null )  {     return  Share Constants . ERROR_PACKAGE_CHECK_PACKAGE_META_NOT_FOUND ;  }  String patch Tinker Id = properties . get (  Share Constants . TINKER_ID )  ;  if  ( patch Tinker Id == null )  {     return  Share Constants . ERROR_PACKAGE_CHECK_PATCH_TINKER_ID_NOT_FOUND ;  } if  ( !old Tinker Id . equals ( patch Tinker Id )  )  {      Share Tinker Log . e ( TAG, ""tinker Id is not equal, base is "" + old Tinker Id + "", but patch is "" + patch Tinker Id )  ;      return  Share Constants . ERROR_PACKAGE_CHECK_TINKER_ID_NOT_EQUAL ;  } return  Share Constants . ERROR_PACKAGE_CHECK_OK ; }"
6847,"public static boolean check Method Annotations In Jar (  String jar File,  Map< String,  String> expected To Actual Annotations )  throws IO Exception{  Preconditions . check Argument ( jar File . ends With ( "" . jar"" ) , ""invalid jar file: "" + jar File )  ;   Jar File jar = new  Jar File ( jar File )  ;  for  (  Jar Entry entry :  (  Iterable< Jar Entry> )  jar . stream (  ) ::iterator )  {     if  ( entry . get Name (  )  . ends With ( "" . class"" )  && !check Method Annotations In Class ( jar . get Input Stream ( entry ) , expected To Actual Annotations )  )  {         return false ;      } } return true ; }"
6848,public boolean contains (  Circle circle ) { return  ( circle . x - circle . radius >= x )  &&  ( circle . x + circle . radius <= x + width )  &&  ( circle . y - circle . radius >= y )  &&  ( circle . y + circle . radius <= y + height )  ; }
6849,"public static  Function< Item,  Image Data> blur (  String image Data Field ) { return new  Image Blur Operator ( image Data Field )  ; }"
6850,"public com . anychart . core . utils .  Padding set (  String value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
6851,public  Drop In Request disable Pay Pal (  ) { m Pay Pal Enabled = false ;  return this ; }
6852,"public static int find Target Tag For Touch ( float event X, float event Y,  View Group view Group, @ Nullable int [  ]  native View Id ) { return find Target Tag And Coordinates For Touch ( event X, event Y, view Group, m Event Coords, native View Id )  ; }"
6853,"static int apply Mask Penalty Rule3 (  Byte Matrix matrix ) { int num Penalties = 0 ;  byte [  ]  [  ]  array = matrix . get Array (  )  ;  int width = matrix . get Width (  )  ;  int height = matrix . get Height (  )  ;  for  ( int y = 0 ;  y < height ;  y++ )  {     for  ( int x = 0 ;  x < width ;  x++ )  {         //  We can at least optimize this access         byte [  ]  array Y = array [ y ]  ;          if  ( x + 6 < width && array Y [ x ]  == 1 && array Y [ x + 1 ]  == 0 && array Y [ x + 2 ]  == 1 && array Y [ x + 3 ]  == 1 && array Y [ x + 4 ]  == 1 && array Y [ x + 5 ]  == 0 && array Y [ x + 6 ]  == 1 &&  ( is White Horizontal ( array Y, x - 4, x )  || is White Horizontal ( array Y, x + 7, x + 11 )  )  )  {             num Penalties++ ;          }         if  ( y + 6 < height && array [ y ]  [ x ]  == 1 && array [ y + 1 ]  [ x ]  == 0 && array [ y + 2 ]  [ x ]  == 1 && array [ y + 3 ]  [ x ]  == 1 && array [ y + 4 ]  [ x ]  == 1 && array [ y + 5 ]  [ x ]  == 0 && array [ y + 6 ]  [ x ]  == 1 &&  ( is White Vertical ( array, x, y - 4, y )  || is White Vertical ( array, x, y + 7, y + 11 )  )  )  {             num Penalties++ ;          }     } } return num Penalties * N3 ; }"
6854,"public com . anychart . charts .  Waterfall bounds (  String x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, height )  )  ;  return this ; }"
6855,"public com . anychart . core .  State Settings max Labels (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Labels ( %s )  ; "", settings )  )  ;  return this ; }"
6856,"public  Realm Query<E> in (  String field Name, @ Nullable  Byte [  ]  values ) { realm . check If Valid (  )  ;  if  ( values == null || values . length == 0 )  {     always False (  )  ;      return this ;  } else {     begin Group Without Thread Validation (  )  . equal To Without Thread Validation ( field Name, values [ 0 ]  )  ;      for  ( int i = 1 ;  i < values . length ;  i++ )  {         or Without Thread Validation (  )  . equal To Without Thread Validation ( field Name, values [ i ]  )  ;      }     return end Group Without Thread Validation (  )  ;  }}"
6857,"public T [  ]  to Array ( T [  ]  a ) { final E [  ]  items = this . items ;  final  Monitor monitor = this . monitor ;  monitor . enter (  )  ;  try {     if  ( a . length < count )          a =  Object Arrays . new Array ( a, count )  ;      int k = 0 ;      int i = take Index ;      while  ( k < count )  {         //  This cast is not itself safe, but the following statement         // will fail if the runtime type of items [ i ]  is not assignable         // to the runtime type of a [ k++ ] , which is all that the method         // contract requires  ( see @throws  Array Store Exception above )  .          @ Suppress Warnings ( ""unchecked"" )  T t =  ( T )  items [ i ]  ;          a [ k++ ]  = t ;          i = inc ( i )  ;      }     if  ( a . length > count )          a [ count ]  = null ;      return a ;  } finally {     monitor . leave (  )  ;  }}"
6858,public boolean breakable Line ( int line ) { return  ( line < this . breakable Lines . length )  && this . breakable Lines [ line ]  ; }
6859,"public void orientation (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . orientation (  )  ; "" )  ; }"
6860,"protected void draw Form (  Canvas c, float x, float y,  Legend Entry entry,  Legend legend ) { if  ( entry . form Color ==  Color Template . COLOR_SKIP || entry . form Color ==  Color Template . COLOR_NONE || entry . form Color == 0 )      return ;  int restore Count = c . save (  )  ;   Legend .  Legend Form form = entry . form ;  if  ( form ==  Legend .  Legend Form . DEFAULT )      form = legend . get Form (  )  ;  m Legend Form Paint . set Color ( entry . form Color )  ;  final float form Size =  Utils . convert Dp To Pixel (  Float . is Na N ( entry . form Size )  ? legend . get Form Size (  )  : entry . form Size )  ;  final float half = form Size / 2f ;  switch ( form )  {     case NONE:         //  Do nothing         break ;      case EMPTY:         //  Do not draw, but keep space for the form         break ;      case DEFAULT:     case CIRCLE:         m Legend Form Paint . set Style (  Paint .  Style . FILL )  ;          c . draw Circle ( x + half, y, half, m Legend Form Paint )  ;          break ;      case SQUARE:         m Legend Form Paint . set Style (  Paint .  Style . FILL )  ;          c . draw Rect ( x, y - half, x + form Size, y + half, m Legend Form Paint )  ;          break ;      case LINE:         {             final float form Line Width =  Utils . convert Dp To Pixel (  Float . is Na N ( entry . form Line Width )  ? legend . get Form Line Width (  )  : entry . form Line Width )  ;              final  Dash Path Effect form Line Dash Effect = entry . form Line Dash Effect == null ? legend . get Form Line Dash Effect (  )  : entry . form Line Dash Effect ;              m Legend Form Paint . set Style (  Paint .  Style . STROKE )  ;              m Legend Form Paint . set Stroke Width ( form Line Width )  ;              m Legend Form Paint . set Path Effect ( form Line Dash Effect )  ;              m Line Form Path . reset (  )  ;              m Line Form Path . move To ( x, y )  ;              m Line Form Path . line To ( x + form Size, y )  ;              c . draw Path ( m Line Form Path, m Legend Form Paint )  ;          }         break ;  } c . restore To Count ( restore Count )  ; }"
6861,"public com . anychart . charts .  Tree Map fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
6862,public  Sensor Setting Access get Sensor Setting Access (  ) { return sensor Setting Access ; }
6863,"private boolean fix Branches (  ) { int size = insns . size (  )  ;  boolean any Fixed = false ;  for  ( int i = 0 ;  i < size ;  i++ )  {      Dalv Insn insn = insns . get ( i )  ;      if  ( ! ( insn instanceof  Target Insn )  )  {         //  This loop only needs to inspect  Target Insns .          continue ;      }      Dop opcode = insn . get Opcode (  )  ;       Target Insn target =  (  Target Insn )  insn ;      if  ( opcode . get Format (  )  . branch Fits ( target )  )  {         continue ;      }     if  ( opcode . get Family (  )  ==  Opcodes . GOTO )  {         //  It is a goto ;  widen it if possible .          opcode = find Opcode For Insn ( insn, opcode )  ;          if  ( opcode == null )  {             /*                  *  The branch is already maximally large .   This should                  * only be possible if a method somehow manages to have                  * more than 2^31 code units .                   */             throw new  Unsupported Operation Exception ( ""method too long"" )  ;          }         insns . set ( i, insn . with Opcode ( opcode )  )  ;      } else {         /*              *  It is a conditional:  Reverse its sense, and arrange for              * it to branch around an absolute goto to the original              * branch target .               *              *  Note:  An invariant of the list being processed is              * that every  Target Insn is followed by a  Code Address .               *  Hence, it is always safe to get the next element              * after a  Target Insn and cast it to  Code Address, as              * is happening a few lines down .               *              *  Also note:  Size gets incremented by one here, as we              * have -- in the net -- added one additional element              * to the list, so we increment i to match .   The added              * and changed elements will be inspected by a repeat              * call to this method after this invocation returns .               */          Code Address new Target ;          try {             new Target =  (  Code Address )  insns . get ( i + 1 )  ;          } catch  (  Index Out Of Bounds Exception ex )  {             //  The  Target Insn /  Code Address invariant was violated .              throw new  Illegal State Exception ( ""unpaired  Target Insn  ( dangling ) "" )  ;          } catch  (  Class Cast Exception ex )  {             //  The  Target Insn /  Code Address invariant was violated .              throw new  Illegal State Exception ( ""unpaired  Target Insn"" )  ;          }          Target Insn goto Insn = new  Target Insn (  Dops . GOTO, target . get Position (  ) ,  Register Spec List . EMPTY, target . get Target (  )  )  ;          insns . set ( i, goto Insn )  ;          insns . add ( i, target . with New Target And Reversed ( new Target )  )  ;          size++ ;          i++ ;      }     any Fixed = true ;  } return any Fixed ; }"
6864,"public void validate (  ) {  Array<T> array = this . array ;  if  ( array . size == 0 )  {     clear (  )  ;      return ;  } boolean changed = false ;  for  (  Iterator<T> iter = items (  )  . iterator (  )  ;  iter . has Next (  )  ;   )  {     T selected = iter . next (  )  ;      if  ( !array . contains ( selected, false )  )  {         iter . remove (  )  ;          changed = true ;      } } if  ( required && selected . size == 0 )      set ( array . first (  )  )  ;  else if  ( // changed )      changed (  )  ; }"
6865,"public com . anychart . core . utils .  Unbound Regions Settings fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
6866,"protected boolean need Scale (  Char Sequence end ) { // || ! Text Utils . equals ( end, ""\n"" )  ;  return  Text Utils . equals ( end, "" "" )  ; }"
6867,"public com . anychart . standalones . axismarkers .  Line stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6868,public void close (  )  throws IO Exception{ while  ( stack . size != 0 )  pop (  )  ;  writer . close (  )  ; }
6869,"public void series Type (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . series Type (  )  ; "" )  ; }"
6870,public static boolean is Video ( @ Nullable  String mime Type ) { return BASE_TYPE_VIDEO . equals ( get Top Level Type ( mime Type )  )  ; }
6871,"public void test000_openrepo_default_git Dir And Work Tree Set (  )  throws IO Exception{  File repo1 Parent = new  File ( trash . get Parent File (  ) , ""r1"" )  ;  try  (  Repository repo1initial = new  File Repository ( new  File ( repo1 Parent,  Constants . DOT_GIT )  )  )  {     repo1initial . create (  )  ;  }  File the Dir = new  File ( repo1 Parent,  Constants . DOT_GIT )  ;  try  (  File Repository r =  (  File Repository )  new  File Repository Builder (  )  . set Git Dir ( the Dir )  . set Work Tree ( repo1 Parent . get Parent File (  )  )  . build (  )  )  {     assert Equals Path ( the Dir, r . get Directory (  )  )  ;      assert Equals Path ( repo1 Parent . get Parent File (  ) , r . get Work Tree (  )  )  ;      assert Equals Path ( new  File ( the Dir, ""index"" ) , r . get Index File (  )  )  ;      assert Equals Path ( new  File ( the Dir,  Constants . OBJECTS ) , r . get Object Database (  )  . get Directory (  )  )  ;  }}"
6872,public void set Animation Time ( int _animation Time ) { m Animation Time = _animation Time ; }
6873,public void set Apply Index ( boolean apply Index ) { this . restore Index = apply Index ; }
6874,"public com . anychart . charts .  Mekko bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
6875,"public void take Screenshot ( final  String name, final int quality ) {  View decor View = get Screenshot View (  )  ;  if  ( decor View == null )      return ;  init Screen Shot Saver (  )  ;   Screenshot Runnable runnable = new  Screenshot Runnable ( decor View, name, quality )  ;  synchronized  ( screenshot Mutex )  {      Activity activity = activity Utils . get Current Activity ( false )  ;      if  ( activity != null )          activity . run On Ui Thread ( runnable )  ;      else         instrumentation . run On Main Sync ( runnable )  ;      try {         screenshot Mutex . wait ( TIMEOUT_SCREENSHOT_MUTEX )  ;      } catch  (  Interrupted Exception ignored )  {     } }}"
6876,"public com . anychart . core . ui .  Paginator current Page (  String page Number ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . current Page ( %s )  ; "", wrap Quotes ( page Number )  )  )  ;  return this ; }"
6877,public static boolean has Push Status Bug ( int [  ]  version ) { return false ; }
6878,"public void test Cartesian Product_unary (  ) { assert That (  Sets . cartesian Product ( set ( 1, 2 )  )  )  . contains Exactly ( list ( 1 ) , list ( 2 )  )  ; }"
6879,"public void text Overflow (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . text Overflow (  )  ; "" )  ; }"
6880,public boolean contains (  Object key ) { return index Of ( key )  >= 0 ; }
6881,public  Page Table Data<T> set Data (  List<T> data ) { if  ( annotation Parser == null )  {     annotation Parser = new  Annotation Parser<> ( config . dp10 )  ;  }  Page Table Data<T> table Data = annotation Parser . parse ( data )  ;  if  ( table Data != null )  {     set Table Data ( table Data )  ;  } return table Data ; }
6882,public com . google . protobuf .  Byte String get Log Message Bytes (  ) { java . lang .  Object ref = log Message_ ;  if  ( ref instanceof  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      log Message_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
6883,public  Working Tree Options get Options (  ) { return state . options ; }
6884,"void test Counter Date Values (  ) { for  ( var value : result )  {     assert Equals ( expected Counter Date Values, value . get Date List (  )  . size (  )  )  ;  }}"
6885,public  Vector3 inverse (  ) { x = -x ;  y = -y ;  z = -z ;  return this ; }
6886,"public com . anychart . core . utils .  Bounds bounds (  ) { return new com . anychart . core . utils .  Bounds ( js Base + "" . bounds (  ) "" )  ; }"
6887,"public  Spring add Listener (  Spring Listener new Listener ) { if  ( new Listener == null )  {     throw new  Illegal Argument Exception ( ""new Listener is required"" )  ;  } m Listeners . add ( new Listener )  ;  return this ; }"
6888,public int read Little Endian Int24 (  ) { return  ( data [ position++ ]  & 0x FF )  |  ( data [ position++ ]  & 0x FF )  << 8 |  ( data [ position++ ]  & 0x FF )  << 16 ; }
6889,"public  Scriptable wrap New Object (  Context cx,  Scriptable scope,  Object obj ) { if  ( obj instanceof  Scriptable )  {     return  (  Scriptable )  obj ;  }  Class<?> cls = obj . get Class (  )  ;  if  ( cls . is Array (  )  )  {     return  Native Java Array . wrap ( scope, obj )  ;  } return wrap As Java Object ( cx, scope, obj, null )  ; }"
6890,"public com . anychart . standalones .  Data Grid background Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
6891,"public com . anychart . charts .  Sparkline bounds (  Number x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
6892,public int key At ( int index ) { return m Keys [ index ]  ; }
6893,public void set Custom Drag Item (  Drag Item drag Item ) {  Drag Item new Drag Item = drag Item != null ? drag Item : new  Drag Item ( get Context (  )  )  ;  if  ( drag Item == null )  {     new Drag Item . set Snap To Touch ( true )  ;  } m Drag Item = new Drag Item ;  m Root Layout . remove View At ( 1 )  ;  m Root Layout . add View ( m Drag Item . get Drag Item View (  )  )  ; }
6894,"public void write To Log ( long timestamp,  String msg ) { current Log . write To Log ( timestamp, msg )  ; }"
6895,public  Activity Builder set Crop Menu Crop Button Title (  Char Sequence title ) { m Options . crop Menu Crop Button Title = title ;  return this ; }
6896,"public void fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . fill (  )  ; "" )  ; }"
6897,"public com . anychart . core . utils .  Legend Item Settings legend Item (  ) { return new com . anychart . core . utils .  Legend Item Settings ( js Base + "" . legend Item (  ) "" )  ; }"
6898,"public com . anychart . core . cartesian . series .  Bar3d width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
6899,"public com . anychart . charts .  Heat Map select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
6900,public  Integer get Backlog (  ) { return backlog ; }
6901,"public com . anychart . core . cartesian . series .  Line3d series Type (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . series Type ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
6902,"public com . anychart . charts .  Radar top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
6903,"public  List< Track Selection> get Track Selections ( int period Index, int renderer Index ) { assert Prepared With Media (  )  ;  return immutable Track Selections By Period And Renderer [ period Index ]  [ renderer Index ]  ; }"
6904,public  Init Custom Maker connection Creator (  File Download Helper .  Connection Creator creator ) { this . m Connection Creator = creator ;  return this ; }
6905,public void set Has Enrolled Fingerprints ( boolean has Enrolled Fingerprints ) { set Default Fingerprints ( has Enrolled Fingerprints ? 1 : 0 )  ; }
6906,"public void on Row Header Double Clicked ( @ Non Null  Recycler View .  View Holder row Header View, int row ) { //  Do whatever you want .  show Toast ( "" Row header "" + row + "" has been double clicked . "" )  ; }"
6907,private void set Finding Sample State (  ) { state = STATE_FINDING_SAMPLE ;  bytes Read = 0 ;  match State = MATCH_STATE_START ; }
6908,"public com . anychart . core . stock . scrollerseries .  Candlestick rising Stroke ( com . anychart . graphics . vector .  Stroke value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rising Stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6909,public boolean is Card Checkable ( int position ) {  Multi Choice Adapter adapter =  (  Multi Choice Adapter )  owner ;   Card card = adapter . get Item ( position )  ;  if  ( card != null )      return card . is Checkable (  )  ;  return false ; }
6910,"public void test Handle Intent_blocking (  )  throws  Exception{  Test Enhanced Intent Service service = new  Test Enhanced Intent Service (  )  ;   Intent original Intent = new  Intent (  )  ;  service . block On Intent ( original Intent )  ;  assert Equals (  Service . START_REDELIVER_INTENT, execute Service On Start Command Grabbing Wake Lock ( service, original Intent, NO_FLAGS, 1 )  )  ;  verify Handle Intent ( original Intent, service . pop Handle Intent Call (  )  )  ;  assert Null ( service . pop Stop Self Call (  )  )  ;  assert That ( wake Lock . is Held (  )  )  . is True (  )  ;  service . unblock Intent ( original Intent )  ;  assert Equals (  Integer . value Of ( 1 ) , service . pop Stop Self Call (  )  )  ;  assert That ( wake Lock . is Held (  )  )  . is False (  )  ; }"
6911,"public void test To String Basic With Namespace (  ) { final  String prefix = ""prefix"" ;  //  First declare the namespace's prefix so we can test that too get XML Object (  )  . declare Prefix ( prefix, get XML Object (  )  . get Namespace (  )  )  ;   String as String = get XML Object (  )  . to String (  )  ;  assert Equals ( as String, ""<"" + prefix + "":"" + get XML Object (  )  . get Name (  )  + "" xmlns:"" + prefix + ""=\"""" + get XML Object (  )  . get Namespace (  )  + ""\"" />"" )  ; }"
6912,public static  Stopwatch create Unstarted (  Ticker ticker ) { return new  Stopwatch ( ticker )  ; }
6913,"public static  Pattern Matched Collection<T> concat (  Iterable< Pattern Matched Collection<T>> collections ) {  Pattern Matched Collection .  Builder<T> builder =  Pattern Matched Collection . builder (  )  ;  collections . for Each (  collection -> collection . get Patterns And Values (  )  . for Each (  pair -> builder . add ( pair . get First (  ) , pair . get Second (  )  )  )  )  ;  return builder . build (  )  ; }"
6914,public int get Inner Padding Color (  ) { return m Inner Padding Color ; }
6915,"public void write Output (  Appendable output )  throws IO Exception{ //  Sorting the edges to have deterministic output and be able to test this .  output . append ( ""digraph "" )  . append ( graph Name )  . append ( "" {"" )  ;  output . append (  System . line Separator (  )  )  ;  switch ( output Order )  {     case BFS:         {             new  Abstract Breadth First Throwing Traversal<T, IO Exception> ( graph . get Nodes With No Incoming Edges (  )  )  {                 @ Override                 public  Iterable<T> visit ( T node )  throws IO Exception {                      Immutable Sorted Set<T> deps =  Immutable Sorted Set . copy Of ( graph . get Outgoing Nodes For ( node )  )  ;                      if  ( should Contain Node . test ( node )  )  {                         output . append ( print Node ( node,  Dot . this::get Node Id, node To Name, node To Type Name, node To Attributes, compact Mode )  )  ;                          for  ( T dep :  Sets . filter ( deps, should Contain Node::test )  )  {                             output . append ( print Edge ( node, dep, node To Name,  Dot . this::get Node Id, compact Mode )  )  ;                          }                     }                     return deps ;                  }             } . start (  )  ;              break ;          }     case SORTED:         {             for  ( T node :  Immutable Sorted Set . copy Of ( graph . get Nodes (  )  )  )  {                 if  ( should Contain Node . test ( node )  )  {                     output . append ( print Node ( node,  Dot . this::get Node Id, node To Name, node To Type Name, node To Attributes, compact Mode )  )  ;                      for  ( T dep :  Sets . filter (  Immutable Sorted Set . copy Of ( graph . get Outgoing Nodes For ( node )  ) , should Contain Node::test )  )  {                         output . append ( print Edge ( node, dep, node To Name,  Dot . this::get Node Id, compact Mode )  )  ;                      }                 }             }             break ;          } } output . append ( ""}"" )  ;  output . append (  System . line Separator (  )  )  ; }"
6916,"public boolean make Reflective (  String clazz,  String metaobject,  String metaclass )  throws  Cannot Compile Exception,  Not Found Exception{ return reflection . make Reflective ( clazz, metaobject, metaclass )  ; }"
6917,"public com . anychart . charts .  Venn marker Palette (  String [  ]  settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . marker Palette ( %s )  ; "", array To String Wrap Quotes ( settings )  )  )  ;  return this ; }"
6918,"public com . anychart . charts .  Tag Cloud padding (  Number value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
6919,"public  Basic Model With Attribute_ on Visibility State Changed (  On Model Visibility State Changed Listener< Basic Model With Attribute_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
6920,"public com . anychart . charts .  Cartesian3d padding (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
6921,"public com . anychart . charts .  Pie outside Labels Critical Angle (  Number angle ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . outside Labels Critical Angle ( %s )  ; "", angle )  )  ;  return this ; }"
6922,"public  Closeable Image decode Web P ( final  Encoded Image encoded Image, final  Image Decode Options options, final  Bitmap .  Config bitmap Config ) { if  ( s Webp Animated Image Decoder == null )  {     throw new  Unsupported Operation Exception ( "" To encode animated webp please add the dependency "" + ""to the animated-webp module"" )  ;  } final  Closeable Reference< Pooled Byte Buffer> bytes Ref = encoded Image . get Byte Buffer Ref (  )  ;   Preconditions . check Not Null ( bytes Ref )  ;  try {     final  Pooled Byte Buffer input = bytes Ref . get (  )  ;       Animated Image web P Image ;      if  ( input . get Byte Buffer (  )  != null )  {         web P Image = s Webp Animated Image Decoder . decode From Byte Buffer ( input . get Byte Buffer (  ) , options )  ;      } else {         web P Image = s Webp Animated Image Decoder . decode From Native Memory ( input . get Native Ptr (  ) , input . size (  ) , options )  ;      }     return get Closeable Image ( options, web P Image, bitmap Config )  ;  } finally {      Closeable Reference . close Safely ( bytes Ref )  ;  }}"
6923,public short get Metric Data Format (  ) { return this . metric Data Format ; }
6924,"public void meta (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . meta ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
6925,"public void test Dismissable Manager (  )  throws  Interrupted Exception{ m Swipe Touch Listener . set Dismissable Manager ( new  Dismissable Manager (  )  {     @ Override     public boolean is Dismissable ( final long id, final int position )  {         return false ;      } } )  ;   List< Motion Event> motion Events =  Motion Event Utils . create Motion Events ( m Abs List View, 0, 10, m View Width - 10 )  ;   Motion Event Utils . dispatch Motion Events ( get Instrumentation (  ) , motion Events )  ;  assert That ( m Swipe Touch Listener . after View Fling Called, is ( false )  )  ; }"
6926,"public com . anychart . charts .  Linear Gauge scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
6927,"public com . anychart . scales .  Linear Color inverted (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . inverted ( %s )  ; "", enabled )  )  ;  return this ; }"
6928,"public com . anychart . core . ui .  Paginator padding (  Number [  ]  space Or Top Or Top And Bottom,  String right Or Right And Left,  Number bottom,  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "",  Arrays . to String ( space Or Top Or Top And Bottom ) , wrap Quotes ( right Or Right And Left ) , bottom, left )  )  ;  return this ; }"
6929,public void set Region State Persistence Enabled ( boolean enabled ) { m Region State Persistence Enabled = enabled ;  if  ( !is Scanner In Different Process (  )  )  {     if  ( enabled )  {          Monitoring Status . get Instance For Application ( m Context )  . start Status Preservation (  )  ;      } else {          Monitoring Status . get Instance For Application ( m Context )  . stop Status Preservation (  )  ;      } } this . apply Settings (  )  ; }
6930,"public void begin ( final long attributes ) { begin ( create Attributes ( attributes ) , -1 )  ; }"
6931,public  Ct Class [  ]  get Interfaces (  )  throws  Not Found Exception{ return new  Ct Class [ 0 ]  ; }
6932,"boolean clear Value For Testing ( K key, int hash,  Weak Value Reference<K, V, ? extends  Internal Entry<K, V, ?>> value Reference ) { lock (  )  ;  try {      Atomic Reference Array<E> table = this . table ;      int index = hash &  ( table . length (  )  - 1 )  ;      E first = table . get ( index )  ;      for  ( E e = first ;  e != null ;  e = e . get Next (  )  )  {         K entry Key = e . get Key (  )  ;          if  ( e . get Hash (  )  == hash && entry Key != null && map . key Equivalence . equivalent ( key, entry Key )  )  {              Weak Value Reference<K, V, E> v =  (  (  Weak Value Entry<K, V, E> )  e )  . get Value Reference (  )  ;              if  ( v == value Reference )  {                 E new First = remove From Chain ( first, e )  ;                  table . set ( index, new First )  ;                  return true ;              }             return false ;          }     }     return false ;  } finally {     unlock (  )  ;  }}"
6933,"public static  Server Socket create Server Socket (  Server Socket Factory socket Factory )  throws IO Exception{  Server Socket socket = null ;  int retries = 10 ;  while  ( retries-- > 0 && socket == null )  {     int port =  ( int )   (  ( 65536 - 1024 )  *  Math . random (  )  )  + 1024 ;      try {         socket = socket Factory . create Server Socket ( port )  ;      } catch  (  Bind Exception ex )  {     // try again with different port     } } if  ( socket == null )  {     throw new  Bind Exception ( ""cannot find an unused port to bind"" )  ;  } return socket ; }"
6934,"public void put ( int key Address, int value Address ) { map . put ( key Address, value Address )  ; }"
6935,"public void add Adapters ( int position, @ Nullable  List< Adapter> adapters ) { if  ( adapters == null || adapters . size (  )  == 0 )  {     return ;  } if  ( position < 0 )  {     position = 0 ;  } if  ( position > m Adapters . size (  )  )  {     position = m Adapters . size (  )  ;  }  List< Adapter> new Adapter = new  Array List<> (  )  ;   Iterator< Pair< Adapter Data Observer,  Adapter>> itr = m Adapters . iterator (  )  ;  while  ( itr . has Next (  )  )  {      Pair< Adapter Data Observer,  Adapter> pair = itr . next (  )  ;       Adapter the Origin = pair . second ;      new Adapter . add ( the Origin )  ;  } for  (  Adapter adapter : adapters )  {     new Adapter . add ( position, adapter )  ;      position++ ;  } set Adapters ( new Adapter )  ; }"
6936,"public  Glide Request< Transcode Type> transform ( @ Non Null  Class<Y> clazz, @ Non Null  Transformation<Y> transformation ) { return  (  Glide Request< Transcode Type> )  super . transform ( clazz, transformation )  ; }"
6937,protected PDF Color Space get Color Space (  ) { return color Space ; }
6938,"public void begin Cache ( int cache ID ) { if  ( drawing )      throw new  Illegal State Exception ( ""end must be called before begin Cache"" )  ;  if  ( current Cache != null )      throw new  Illegal State Exception ( ""end Cache must be called before begin . "" )  ;  if  ( cache ID == caches . size - 1 )  {      Cache old Cache = caches . remove Index ( cache ID )  ;       (  (  Buffer )  mesh . get Vertices Buffer (  )  )  . limit ( old Cache . offset )  ;      begin Cache (  )  ;      return ;  } current Cache = caches . get ( cache ID )  ;   (  (  Buffer )  mesh . get Vertices Buffer (  )  )  . position ( current Cache . offset )  ; }"
6939,"static JSON Object invalid Geometry Collection Invalid Geometries (  )  throws  Exception{ return new JSON Object ( ""{ \""type\"": \"" Geometry Collection\"",\n"" + ""  \""doge\"":  [ \n"" + ""    { \""type\"": \"" Point\"",\n"" + ""      \""coordinates\"":  [ 100 . 0, 0 . 0 ] \n"" + ""      },\n"" + ""    { \""type\"": \"" Line String\"",\n"" + ""      \""coordinates\"":  [   [ 101 . 0, 0 . 0 ] ,  [ 102 . 0, 1 . 0 ]   ] \n"" + ""      }\n"" + ""   ] \n"" + ""}"" )  ; }"
6940,static boolean is View Enabled ( int flags ) { return  ( flags & FLAG_VIEW_ENABLED )  == FLAG_VIEW_ENABLED ; }
6941,public void reset (  ) { revision = 0 ;  type = 0 ;  granule Position = 0 ;  stream Serial Number = 0 ;  page Sequence Number = 0 ;  page Checksum = 0 ;  page Segment Count = 0 ;  header Size = 0 ;  body Size = 0 ; }
6942,"public com . anychart . scales .  Geo Ticks y Ticks (  ) { return new com . anychart . scales .  Geo Ticks ( js Base + "" . y Ticks (  ) "" )  ; }"
6943,"static double ensure Non Negative ( double value ) { check Argument ( !is Na N ( value )  )  ;  return  Math . max ( value, 0 . 0 )  ; }"
6944,public  Rebase Command set Preserve Merges ( boolean preserve ) { this . preserve Merges = preserve ;  return this ; }
6945,"public com . anychart . core . ui .  Labels Factory labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . labels (  ) "" )  ; }"
6946,"public com . anychart . core . cartesian . series .  Range Bar fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
6947,"public void regular Listener (  )  throws  Exception{ final  Remote Device discovered Device = new  Remote Device (  Sample Data . create Remote Device Identity (  )  )  ;  final  Remote Device hydrated Device =  Sample Data . create Remote Device (  )  ;   Mock Upnp Service upnp Service = new  Mock Upnp Service (  )  {     @ Override     protected  Mock Router create Router (  )  {         return new  Mock Router ( get Configuration (  ) , get Protocol Factory (  )  )  {             @ Override             public  Stream Response Message [  ]  get Stream Response Messages (  )  {                 try {                      String device Descriptor XML = get Configuration (  )  . get Device Descriptor Binder UDA10 (  )  . generate ( hydrated Device, new  Remote Client Info (  ) , get Configuration (  )  . get Namespace (  )  )  ;                       String service One XML = get Configuration (  )  . get Service Descriptor Binder UDA10 (  )  . generate ( hydrated Device . find Services (  )  [ 0 ]  )  ;                       String service Two XML = get Configuration (  )  . get Service Descriptor Binder UDA10 (  )  . generate ( hydrated Device . find Services (  )  [ 1 ]  )  ;                       String service Three XML = get Configuration (  )  . get Service Descriptor Binder UDA10 (  )  . generate ( hydrated Device . find Services (  )  [ 2 ]  )  ;                      return new  Stream Response Message [  ]  { new  Stream Response Message ( device Descriptor XML,  Content Type Header . DEFAULT_CONTENT_TYPE_UTF8 ) , new  Stream Response Message ( service One XML,  Content Type Header . DEFAULT_CONTENT_TYPE_UTF8 ) , new  Stream Response Message ( service Two XML,  Content Type Header . DEFAULT_CONTENT_TYPE_UTF8 ) , new  Stream Response Message ( service Three XML,  Content Type Header . DEFAULT_CONTENT_TYPE_UTF8 )  } ;                  } catch  (  Exception ex )  {                     throw new  Runtime Exception ( ex )  ;                  }             }         } ;      } } ;   My Listener listener = new  My Listener (  )  ;  upnp Service . get Registry (  )  . add Listener ( listener )  ;   Retrieve Remote Descriptors retrieve Descriptors = new  Retrieve Remote Descriptors ( upnp Service, discovered Device )  ;  retrieve Descriptors . run (  )  ;  upnp Service . get Registry (  )  . remove All Remote Devices (  )  ;  assert Equals ( listener . added, true )  ;  assert Equals ( listener . removed, true )  ; }"
6948,"public static void put ( @ Non Null final  String key, @ Nullable final JSON Object value ) { put ( key, value, get Default Cache Disk Utils (  )  )  ; }"
6949,"public com . anychart . core . resource . resourcelist .  Image Settings margin (  String value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
6950,public final int get Transition (  ) { return transition ; }
6951,"public com . anychart . core . stock .  Plot bounds (  String x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
6952,public synchronized  Throwable init Cause (  Throwable cause ) { my Cause = cause ;  return this ; }
6953,public void set Seed Account Name (  String seed Account Name ) { this . seed Account Name = seed Account Name ; }
6954,public static  Immutable Double Array copy Of (  Double Stream stream ) { //  Note this uses very different growth behavior from copy Of (  Iterable )  and the builder .  double [  ]  array = stream . to Array (  )  ;  return  ( array . length == 0 )  ? EMPTY : new  Immutable Double Array ( array )  ; }
6955,"public  Node get Node ( final  String id, boolean recursive ) { return get Node ( id, recursive, false )  ; }"
6956,"public com . anychart . core . stock . scrollerseries .  Stick color Scale ( com . anychart . scales .  Ordinal Color settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
6957,"public boolean is In Range (  Double value, double min, double max ) { return is In Range ( value . double Value (  ) , min, max )  ; }"
6958,public  Builder set Expected Player Ended Count ( int expected Player Ended Count ) { this . expected Player Ended Count = expected Player Ended Count ;  return this ; }
6959,public long get C Pointer (  ) { return c Pointer ; }
6960,"public com . anychart . core . annotations .  Vertical Line bounds (  String x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
6961,protected final  Policy get Notification Policy (  ) { return notification Policy ; }
6962,"public com . anychart . charts .  Heat Map id (  String id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . id ( %s )  ; "", wrap Quotes ( id )  )  )  ;  return this ; }"
6963,public void put All (  Register Spec Set set ) { int max = set . get Max Size (  )  ;  for  ( int i = 0 ;  i < max ;  i++ )  {      Register Spec spec = set . get ( i )  ;      if  ( spec != null )  {         put ( spec )  ;      } }}
6964,"protected void on Progress Update (  Result Type .  .  .  item ) { item Registry . notify New Item (  List Request Impl . this, item [ 0 ]  )  ; }"
6965,"public static void set ( @ Non Null T [  ]  array, @ Non Null  Property<? super T, V> setter, @ Nullable V value ) { //noinspection  For Loop Replaceable By For Each for  ( int i = 0, count = array . length ;  i < count ;  i++ )  {     setter . set ( array [ i ] , value )  ;  }}"
6966,"public void dialog Create Alert ( @ Rpc Parameter ( name = ""title"" )  @ Rpc Optional  String title, @ Rpc Parameter ( name = ""message"" )  @ Rpc Optional  String message ) { //  Dismiss any existing dialog .  dialog Dismiss (  )  ;  m Dialog Task = new  Alert Dialog Task ( title, message )  ; }"
6967,"public void update Size ( int width, int height ) {}"
6968,"public static  View find View From View Stub (  View parent View, int view Stub Id, int inflated View Id, int inflate Layout Res Id ) { if  ( null == parent View )  {     return null ;  }  View view = parent View . find View By Id ( inflated View Id )  ;  if  ( null == view )  {      View Stub vs =  (  View Stub )  parent View . find View By Id ( view Stub Id )  ;      if  ( null == vs )  {         return null ;      }     if  ( vs . get Layout Resource (  )  < 1 && inflate Layout Res Id > 0 )  {         vs . set Layout Resource ( inflate Layout Res Id )  ;      }     view = vs . inflate (  )  ;      if  ( null != view )  {         view = view . find View By Id ( inflated View Id )  ;      } } return view ; }"
6969,public  String get Class Name (  ) { int index = iterator . u16bit At ( current Pos + 1 )  ;  return get Const Pool (  )  . get Fieldref Class Name ( index )  ; }
6970,public void set View ( @ Non Null  View view ) { if  ( size != null || view Target != null )  {     return ;  } view Target = new  Size View Target ( view )  ;  view Target . get Size ( this )  ; }
6971,"public  Socket create Socket (  String host, int port )  throws IO Exception,  Unknown Host Exception{  Socket socket = create Socket (  )  ;  socket . connect ( new  Inet Socket Address ( host, port )  )  ;  verify Hostname ( socket, target Host Name )  ;  return socket ; }"
6972,public  Warlord create Warlord (  ) { return warlord . copy (  )  ; }
6973,"public void on View Released (  View released Child, float x Vel, float y Vel ) { super . on View Released ( released Child, x Vel, y Vel )  ;  if  ( draggable View . is Drag View At Bottom (  )  && !draggable View . is Drag View At Right (  )  )  {     trigger On Release Actions While Horizontal Drag ( x Vel )  ;  } else {     trigger On Release Actions While Vertical Drag ( y Vel )  ;  }}"
6974,"private boolean consider Adding Consumers ( boolean poke All Waiting ) {  Jq Log . d ( ""considering adding a new consumer .   Should poke all waiting? %s is Running? %s"" + "" waiting workers? %d"", poke All Waiting, job Manager Thread . is Running (  ) , waiting Consumers . size (  )  )  ;  if  ( !job Manager Thread . is Running (  )  )  {      Jq Log . d ( ""jobqueue is not running, no consumers will be added"" )  ;      return false ;  } if  ( waiting Consumers . size (  )  > 0 )  {      Jq Log . d ( ""there are waiting workers, will poke them instead"" )  ;      for  ( int i = waiting Consumers . size (  )  - 1 ;  i >= 0 ;  i-- )  {          Consumer consumer = waiting Consumers . remove ( i )  ;           Command Message command = factory . obtain (  Command Message . class )  ;          command . set (  Command Message . POKE )  ;          consumer . message Queue . post ( command )  ;          if  ( !poke All Waiting )  {             break ;          }     }      Jq Log . d ( ""there were waiting workers, poked them and I'm done"" )  ;      return true ;  } boolean is Above Load Factor = is Above Load Factor (  )  ;   Jq Log . d ( ""nothing has been poked .  are we above load factor? %s"", is Above Load Factor )  ;  if  ( is Above Load Factor )  {     add Worker (  )  ;      return true ;  } return false ; }"
6975,"public com . anychart . core . stock . scrollerseries . OHLC min Point Length (  Number length ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Point Length ( %s )  ; "", length )  )  ;  return this ; }"
6976,public int get App Key Index (  ) { return app Key Index ; }
6977,public static  Markwon Theme create ( @ Non Null  Context context ) { return builder With Defaults ( context )  . build (  )  ; }
6978,"public  Upload Response upload Report (  Full Build Report report )  throws IO Exception{ report . version Control Stats (  )  . flat Map (  Full Version Control Stats::get Diff )  . if Present (  diff Supplier -> {     try {          Input Stream input Stream = diff Supplier . get (  )  ;           Upload Response upload Response = build Report File Uploader . upload Diff File ( input Stream )  ;          LOG . debug ( "" Successfully uploaded diff file: "" + upload Response . to String (  )  )  ;      } catch  (  Version Control Command Failed Exception |  Interrupted Exception | IO Exception e )  {         LOG . warn ( e, "" Error when uploading diff file"" )  ;      } } )  ;  return upload Full Build Report ( report )  ; }"
6979,"public static  String create Buck Test Output Line Regex (  String status, @ Nullable  Integer passed Count, @ Nullable  Integer skipped Count, @ Nullable  Integer failed Count,  String test Class Name ) {  String passed Pattern =  ( passed Count == null )  ? ""\\d+"" :  String . value Of ( passed Count )  ;   String skipped Pattern =  ( skipped Count == null )  ? ""\\d+"" :  String . value Of ( skipped Count )  ;   String failed Pattern =  ( failed Count == null )  ? ""\\d+"" :  String . value Of ( failed Count )  ;   String line =  Joiner . on ( ""\\s+"" )  . join (  Pattern . quote ( status ) , BUCK_TIME_OUTPUT_FORMAT, passed Pattern, "" Passed"", skipped Pattern, "" Skipped"", failed Pattern, "" Failed"",  Pattern . quote ( test Class Name )  )  ;  return "" ( ?m ) ^"" + line + ""$"" ; }"
6980,"public com . anychart . core . gauge . pointers .  Needle fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
6981,"public  Identify pre Insert (  String property, double value ) { add To User Properties (  Constants . AMP_OP_PREINSERT, property, value )  ;  return this ; }"
6982,"public void transform (  String value,  Number sub Range Ratio ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . transform ( %s, %s )  ; "", wrap Quotes ( value ) , sub Range Ratio )  )  ; }"
6983,"public void auto Redraw (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . auto Redraw (  )  ; "" )  ; }"
6984,"public static  Array Based Escaper Map create (  Map< Character,  String> replacements ) { return new  Array Based Escaper Map ( create Replacement Array ( replacements )  )  ; }"
6985,"public static bt Indexed Mesh obtain ( final  Object tag, final  Float Buffer vertices, int size In Bytes Of Each Vertex, int vertex Count, int position Offset In Bytes, final  Short Buffer indices, int index Offset, int index Count ) { if  ( tag == null )      throw new  Gdx Runtime Exception ( ""tag cannot be null"" )  ;  bt Indexed Mesh result = get Instance ( tag )  ;  if  ( result == null )  {     result = new bt Indexed Mesh ( vertices, size In Bytes Of Each Vertex, vertex Count, position Offset In Bytes, indices, index Offset, index Count )  ;      result . tag = tag ;      instances . add ( result )  ;  } result . obtain (  )  ;  return result ; }"
6986,"public  Repo Command set Target URI (  String uri ) { //  The repo name is interpreted as a directory, for example //  Gerrit  ( http://gerrit . googlesource . com/gerrit )  has a //  . gitmodules referencing  .  . /plugins/hooks, which is // on http://gerrit . googlesource . com/plugins/hooks, //$NON-NLS-1$ this . target Uri = URI . create ( uri + ""/"" )  ;  return this ; }"
6987,"public  Visit Variables visit Variables (  Custom Variables custom Variables ) { return new  Visit Variables ( this, custom Variables )  ; }"
6988,"private boolean try Replacing With Constant (  Normal Ssa Insn insn ) {  Insn original Rop Insn = insn . get Original Rop Insn (  )  ;   Rop opcode = original Rop Insn . get Opcode (  )  ;   Register Spec result = insn . get Result (  )  ;  if  ( result != null && !ssa Meth . is Reg A Local ( result )  && opcode . get Opcode (  )  !=  Reg Ops . CONST )  {      Type Bearer type = insn . get Result (  )  . get Type Bearer (  )  ;      if  ( type . is Constant (  )  && type . get Basic Type (  )  ==  Type . BT_INT )  {         //  Replace the instruction with a constant         replace Plain Insn ( insn,  Register Spec List . EMPTY,  Reg Ops . CONST,  (  Constant )  type )  ;          //  Remove the source as well if this is a move-result-pseudo         if  ( opcode . get Opcode (  )  ==  Reg Ops . MOVE_RESULT_PSEUDO )  {             int pred = insn . get Block (  )  . get Predecessors (  )  . next Set Bit ( 0 )  ;               Array List< Ssa Insn> pred Insns = ssa Meth . get Blocks (  )  . get ( pred )  . get Insns (  )  ;               Normal Ssa Insn source Insn =  (  Normal Ssa Insn )  pred Insns . get ( pred Insns . size (  )  - 1 )  ;              replace Plain Insn ( source Insn,  Register Spec List . EMPTY,  Reg Ops . GOTO, null )  ;          }         return true ;      } } return false ; }"
6989,public  Retrofit2 Converter Factory set Parser Feature Values ( int feature Values ) { return this ; }
6990,public int hash Code (  ) { int my Position = position ;  int hash = 0 ;  while  ( my Position < limit )  {     hash = hash + get ( my Position++ )  ;  } return hash ; }
6991,"public com . anychart . core . utils .  Padding padding (  ) { return new com . anychart . core . utils .  Padding ( js Base + "" . padding (  ) "" )  ; }"
6992,"public com . anychart . core . stock . scrollerseries .  Range Step Area high Stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . high Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6993,"final boolean contains (  Descriptor root Descriptor,  Sub Scope Id sub Scope Id ) { return policy For ( root Descriptor, sub Scope Id )  . included (  )  ; }"
6994,public  Grid Point3 cpy (  ) { return new  Grid Point3 ( this )  ; }
6995,public  String get Key (  ) { return m Node . get Components (  )  . get ( m Component Index )  . get Key (  )  ; }
6996,public  Matchable Call then Return (  Mock Response .  .  .  mock Responses ) { if  ( mock Responses != null )  {      Mock Answer [  ]  mock Answers = new  Mock Answer [ mock Responses . length ]  ;      int i = 0 ;      for  (  Mock Response response : mock Responses )  {         if  ( response != null )  {             mock Answers [ i++ ]  = new  Simple Mock Response Answer ( response )  ;          }     }     then Answer ( mock Answers )  ;  } return this ; }
6997,"public boolean may Launch Url (  Uri uri,  Bundle extras,  List< Bundle> other Likely Bundles ) { if  ( m Client == null )      return false ;   Custom Tabs Session session = get Session (  )  ;  if  ( session == null )      return false ;  return session . may Launch Url ( uri, extras, other Likely Bundles )  ; }"
6998,"public  Blame Generator reverse (  Any Object Id start,  Collection<? extends  Object Id> end )  throws IO Exception{ init Rev Pool ( true )  ;   Reverse Commit result =  (  Reverse Commit )  rev Pool . parse Commit ( start )  ;  if  ( !find ( result, result Path )  )      return this ;  rev Pool . mark Uninteresting ( result )  ;  for  (  Object Id id : end )  rev Pool . mark Start ( rev Pool . parse Commit ( id )  )  ;  while  ( rev Pool . next (  )  != null )  { // just pump the queue }  Reverse Candidate c = new  Reverse Candidate ( get Repository (  ) , result, result Path )  ;  c . source Blob = id Buf . to Object Id (  )  ;  c . load Text ( reader )  ;  c . region List = new  Region ( 0, 0, c . source Text . size (  )  )  ;  remaining = c . source Text . size (  )  ;  push ( c )  ;  return this ; }"
6999,"private static void assert Interrupted (  ) { try {     /*    *  The sleep (  )  will end immediately if we've already been interrupted or    * wait patiently for the interrupt if not .     */      Thread . sleep ( LONG_DELAY_MS )  ;      fail ( "" Dude, where's my interrupt?"" )  ;  } catch  (  Interrupted Exception expected )  { }}"
7000,"public void on Configuration Changed (  Context updated Context, @ Nullable  Configuration new Config ) {  Ui Thread Util . assert On Ui Thread (  )  ;   React Context current React Context = get Current React Context (  )  ;  if  ( current React Context != null )  {      Appearance Module appearance Module = current React Context . get Native Module (  Appearance Module . class )  ;      if  ( appearance Module != null )  {         appearance Module . on Configuration Changed ( updated Context )  ;      } }}"
7001,"public  Immutable List< String> get Default Raw Excluded Label Selectors (  ) { return get Delegate (  )  . get List Without Comments ( TEST_SECTION_HEADER, ""excluded_labels"" )  ; }"
7002,public boolean not Empty (  ) { return size > 0 ; }
7003,"public void write Classpath Argfile (  Project Filesystem filesystem,  Path argfile )  throws IO Exception{  String Builder builder = new  String Builder (  )  ;  builder . append ( ""-classpath"" )  ;  builder . append (  System . line Separator (  )  )  ;  builder . append ( '""' )  ;  builder . append ( escape Path For Argfile ( get Test Runner Classpath (  )  . to String (  )  )  )  ;  for  (  String classpath Entry : filesystem . read Lines ( get Classpath File (  )  )  )  {     builder . append (  File . path Separator Char )  ;      builder . append ( '\\' )  ;      builder . append (  System . line Separator (  )  )  ;      builder . append ( escape Path For Argfile ( classpath Entry )  )  ;  } builder . append ( '""' )  ;  builder . append (  System . line Separator (  )  )  ;  filesystem . write Contents To Path ( builder . to String (  ) , argfile )  ; }"
7004,public boolean detach Appender (  Appender<E> appender ) { if  ( appender == null )  {     return false ;  } boolean result ;  result = appender List . remove ( appender )  ;  return result ; }
7005,public byte [  ]  get Image Data (  ) { return  ( byte [  ]  )  get Object Value (  Data Types . OBJ_PICTURE_DATA )  ; }
7006,"public  Observable< Collection Change< Realm List<E>>> as Changeset Observable (  ) { if  ( base Realm instanceof  Realm )  {     return base Realm . configuration . get Rx Factory (  )  . changesets From (  (  Realm )  base Realm, this )  ;  } else if  ( base Realm instanceof  Dynamic Realm )  {      Dynamic Realm dynamic Realm =  (  Dynamic Realm )  base Realm ;       Realm List< Dynamic Realm Object> dynamic Results =  (  Realm List< Dynamic Realm Object> )  this ;      return  (  Observable )  base Realm . configuration . get Rx Factory (  )  . changesets From ( dynamic Realm, dynamic Results )  ;  } else {     throw new  Unsupported Operation Exception ( base Realm . get Class (  )  + "" does not support  Rx Java2 . "" )  ;  }}"
7007,public  Future<?> did Generate Project For Target (  ) { return run Async (  (  )  -> {     number Of Generated Project Files . increment And Get (  )  ;      calculate Project Files Generation Estimated Progress (  )  ;  } )  ; }
7008,public  Builder set Source ( com . didiglobal . booster . aapt2 .  Resources .  Source Position value ) { if  ( source Builder_ == null )  {     if  ( value == null )  {         throw new  Null Pointer Exception (  )  ;      }     source_ = value ;      on Changed (  )  ;  } else {     source Builder_ . set Message ( value )  ;  } return this ; }
7009,"public  Iterable Of Protos Fluent Assertion<M> using Float Tolerance For Fields ( float tolerance,  Iterable< Integer> field Numbers ) { return using Config ( config . using Float Tolerance For Fields ( tolerance, field Numbers )  )  ; }"
7010,public boolean is Force Replace Inner Layout (  ) { return m Force Replace Inner Layout ; }
7011,"public com . anychart . palettes .  Markers marker Palette (  ) { return new com . anychart . palettes .  Markers ( js Base + "" . marker Palette (  ) "" )  ; }"
7012,public  String get Protection Type (  ) { return this . protection Type ; }
7013,void detach Activity (  ) { activity = null ; }
7014,public static boolean check Init (  ) { return  Auto Size Config . get Instance (  )  . get Init Density (  )  != -1 ; }
7015,"public static T not Empty ( final T map, final  String message, final  Object .  .  .  values ) { if  ( map == null )  {     throw new  Null Pointer Exception (  String . format ( message, values )  )  ;  } if  ( map . is Empty (  )  )  {     throw new  Illegal Argument Exception (  String . format ( message, values )  )  ;  } return map ; }"
7016,"public  String Builder append ( char [  ]  str, int offset, int len ) { append0 ( str, offset, len )  ;  return this ; }"
7017,"public com . anychart . charts .  Scatter palette ( com . anychart . palettes .  Range Colors settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
7018,"private void remove On Progress Listener ( @ Non Null  On Progress Listener< Load Bundle Task Progress> listener ) { synchronized  ( lock )  {     progress Listeners . remove ( new  Managed Listener ( /* executor= */     null, listener )  )  ;  }}"
7019,"public void test Await Full Gc (  ) { final  Count Down Latch finalizer Ran = new  Count Down Latch ( 1 )  ;  final  Weak Reference< Object> ref = new  Weak Reference< Object> ( new  Object (  )  {     @ Override     protected void finalize (  )  {         finalizer Ran . count Down (  )  ;      } } )  ;  //  Don't copy this into your own test! //  Use e . g .  await Clear or await (  Count Down Latch )  instead .   Gc Finalization . await Full Gc (  )  ;  //  If this test turns out to be flaky, add a second call to await Full Gc (  )  //  Gc Finalization . await Full Gc (  )  ;  assert Equals ( 0, finalizer Ran . get Count (  )  )  ;  assert Null ( ref . get (  )  )  ; }"
7020,"public com . anychart . core . cartesian . series .  Range Area range Area (  String [  ]  data, com . anychart . data .  Text Parsing Settings csv Settings ) { return new com . anychart . core . cartesian . series .  Range Area (  String . format (  Locale . US, js Base + "" . range Area ( %s, %s ) "", array To String Wrap Quotes ( data ) ,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
7021,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
7022,public int get Wait Queue Length (  Guard guard ) { if  ( guard . monitor != this )  {     throw new  Illegal Monitor State Exception (  )  ;  } lock . lock (  )  ;  try {     return guard . waiter Count ;  } finally {     lock . unlock (  )  ;  }}
7023,"public static  Iterable< Object [  ] > data (  ) { return  Arrays . as List ( new  Object [  ]  [  ]  { {  Primary Key Required As String . class,  String . class, ""424123"",  String . class, "" Some Secondary Value"" }, {  Primary Key Required As Boxed Byte . class,  Byte . class,  Byte . value Of ( ""67"" ) ,  String . class, "" This- Is- Second- One"" }, {  Primary Key Required As Boxed Short . class,  Short . class,  Short . value Of ( ""1729"" ) ,  String . class, "" Any Value Is Accepted"" }, {  Primary Key Required As Boxed Integer . class,  Integer . class,  Integer . value Of ( ""19"" ) ,  String . class, "" Play With Seond Fied!"" }, {  Primary Key Required As Boxed Long . class,  Long . class,  Long . value Of ( ""62914"" ) ,  String . class, "" Let's name a value"" } } )  ; }"
7024,public final void flip Silently ( boolean show Rear ) { flip Silently ( show Rear ? REAR_VIEW_INDEX : FRONT_VIEW_INDEX )  ; }
7025,public boolean substring Matches (  String string ) { if  ( matches Any )  {     return true ;  } for  (  Pattern pattern : patterns )  {     if  ( pattern . matcher ( string )  . find (  )  )  {         return true ;      } } return false ; }
7026,"public com . anychart . graphics . vector .  Rect rect (  Number x,  Number y,  Number width,  Number height ) { return new com . anychart . graphics . vector .  Rect (  String . format (  Locale . US, js Base + "" . rect ( %s, %s, %s, %s ) "", x, y, width, height )  )  ; }"
7027,"public  List< Thread Meta Value> load All Deep From Cursor (  Cursor cursor ) { int count = cursor . get Count (  )  ;   List< Thread Meta Value> list = new  Array List< Thread Meta Value> ( count )  ;  if  ( cursor . move To First (  )  )  {     if  ( identity Scope != null )  {         identity Scope . lock (  )  ;          identity Scope . reserve Room ( count )  ;      }     try {         do {             list . add ( load Current Deep ( cursor, false )  )  ;          } while  ( cursor . move To Next (  )  )  ;      } finally {         if  ( identity Scope != null )  {             identity Scope . unlock (  )  ;          }     } } return list ; }"
7028,public final  Service start Async (  ) { delegate . start Async (  )  ;  return this ; }
7029,"public void height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . height (  )  ; "" )  ; }"
7030,"public void calculate Bounding Box (  Bounding Box bbox ) { final int num Vertices = get Num Vertices (  )  ;  if  ( num Vertices == 0 )      throw new  Gdx Runtime Exception ( "" No vertices defined"" )  ;  final  Float Buffer verts = vertices . get Buffer (  )  ;  bbox . inf (  )  ;  final  Vertex Attribute pos Attrib = get Vertex Attribute (  Usage .  Position )  ;  final int offset = pos Attrib . offset / 4 ;  final int vertex Size = vertices . get Attributes (  )  . vertex Size / 4 ;  int idx = offset ;  switch ( pos Attrib . num Components )  {     case 1:         for  ( int i = 0 ;  i < num Vertices ;  i++ )  {             bbox . ext ( verts . get ( idx ) , 0, 0 )  ;              idx += vertex Size ;          }         break ;      case 2:         for  ( int i = 0 ;  i < num Vertices ;  i++ )  {             bbox . ext ( verts . get ( idx ) , verts . get ( idx + 1 ) , 0 )  ;              idx += vertex Size ;          }         break ;      case 3:         for  ( int i = 0 ;  i < num Vertices ;  i++ )  {             bbox . ext ( verts . get ( idx ) , verts . get ( idx + 1 ) , verts . get ( idx + 2 )  )  ;              idx += vertex Size ;          }         break ;  }}"
7031,"public void test Start On Non Animation Handler Thread (  )  throws  Interrupted Exception{ m Expected Exception . expect (  Android Runtime Exception . class )  ;   Spruce Spring Animation anim = new  Spruce Spring Animation ( m View1,  Spruce Dynamics . ALPHA, 0f )  ;   Instrumentation Registry . get Instrumentation (  )  . run On Main Sync (  (  )  -> {     anim . set Animation Handler ( anim . get Animation Handler (  )  )  ;  } )  ;  run Runnable On New Thread ( anim::start )  ; }"
7032,"private  String _clip Show Text (  String ori Text,  Paint paint, float max Text Width ) { float tmp Width = 0 ;   String Builder str Builder = new  String Builder (  )  ;  for  ( int i = 0 ;  i < ori Text . length (  )  ;  i++ )  {     char c = ori Text . char At ( i )  ;      float c Width = paint . measure Text (  String . value Of ( c )  )  ;      // 计算每个字符的宽度之和，如果超过能显示的长度则退出     if  ( tmp Width + c Width > max Text Width )  {         break ;      }     str Builder . append ( c )  ;      tmp Width += c Width ;  } // 末尾添加3个 . 并设置为显示字符 str Builder . append ( "" .  .  . "" )  ;  return str Builder . to String (  )  ; }"
7033,public void set Search Hint (  String search Hint ) { m Search Hint = search Hint != null ? search Hint : get Resources (  )  . get String ( R . string . abc_search_hint )  ;  m Search Input . set Hint ( m Search Hint )  ; }
7034,"public com . anychart . charts .  Radar padding (  String value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, value4 )  )  ;  return this ; }"
7035,public static long get Combined Group Id ( long group Id ) { return  Item Id Composer . compose Expandable Group Id ( group Id )  ; }
7036,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
7037,public  Builder set Renderers (  Renderer .  .  .  renderers ) { assert That ( renderers Factory )  . is Null (  )  ;  this . renderers = renderers ;  return this ; }
7038,"private static  Method Info make Forwarder (  String this Class Name,  Method meth,  String desc,  Const Pool cp,  Class<?> decl Class,  String delegator Name, int index,  List< Find2 Methods Args> forwarders ) {  Method Info forwarder = new  Method Info ( cp, meth . get Name (  ) , desc )  ;  forwarder . set Access Flags (  Modifier . FINAL |  ( meth . get Modifiers (  )  & ~ (  Modifier . ABSTRACT |  Modifier . NATIVE |  Modifier . SYNCHRONIZED )  )  )  ;  set Throws ( forwarder, cp, meth )  ;  int args =  Descriptor . param Size ( desc )  ;   Bytecode code = new  Bytecode ( cp, 0, args + 2 )  ;  /*      * static {      *   methods [ index * 2 ]       *     =  Runtime Support . find Super Method ( this, <overridden name>, <desc> )  ;       *   methods [ index * 2 + 1 ]       *     =  Runtime Support . find Method ( this, <delegator name>, <desc> )  ;       *     or = null // the original method is abstract .       * }      *     :      * return  ( $r ) handler . invoke ( this, methods [ index * 2 ] ,      *                methods [ index * 2 + 1 ] , $args )  ;       */ int orig Index = index * 2 ;  int del Index = index * 2 + 1 ;  int array Var = args + 1 ;  code . add Getstatic ( this Class Name, HOLDER, HOLDER_TYPE )  ;  code . add Astore ( array Var )  ;  forwarders . add ( new  Find2 Methods Args ( meth . get Name (  ) , delegator Name, desc, orig Index )  )  ;  code . add Aload ( 0 )  ;  code . add Getfield ( this Class Name, HANDLER, HANDLER_TYPE )  ;  code . add Aload ( 0 )  ;  code . add Aload ( array Var )  ;  code . add Iconst ( orig Index )  ;  code . add Opcode (  Opcode . AALOAD )  ;  code . add Aload ( array Var )  ;  code . add Iconst ( del Index )  ;  code . add Opcode (  Opcode . AALOAD )  ;  make Parameter List ( code, meth . get Parameter Types (  )  )  ;  code . add Invokeinterface (  Method Handler . class . get Name (  ) , ""invoke"", "" (  Ljava/lang/ Object ;  Ljava/lang/reflect/ Method ;  Ljava/lang/reflect/ Method ;  [  Ljava/lang/ Object ;  )  Ljava/lang/ Object ; "", 5 )  ;   Class<?> ret Type = meth . get Return Type (  )  ;  add Unwrapper ( code, ret Type )  ;  add Return ( code, ret Type )  ;   Code Attribute ca = code . to Code Attribute (  )  ;  forwarder . set Code Attribute ( ca )  ;  return forwarder ; }"
7039,"public long get And Accumulate ( K key, long x,  Long Binary Operator accumulator Function ) { check Not Null ( accumulator Function )  ;  return get And Update ( key,  old Value -> accumulator Function . apply As Long ( old Value, x )  )  ; }"
7040,"public com . anychart . charts .  Waterfall top (  Number top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", top )  )  ;  return this ; }"
7041,protected void check Parameters (  ) { for  (  Variable Element parameter : element . get Parameters (  )  )  {     check Parameter ( parameter )  ;  }}
7042,public java . lang .  String get Edge Id (  ) { java . lang .  Object ref = edge Id_ ;  if  ( ! ( ref instanceof java . lang .  String )  )  {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      edge Id_ = s ;      return s ;  } else {     return  ( java . lang .  String )  ref ;  }}
7043,"public static  Object get Property (  Scriptable obj, int index ) {  Scriptable start = obj ;   Object result ;  do {     result = obj . get ( index, start )  ;      if  ( result !=  Scriptable . NOT_FOUND )          break ;      obj = obj . get Prototype (  )  ;  } while  ( obj != null )  ;  return result ; }"
7044,"void register Broadcast Receivers (  ) { m Context . register Receiver ( m Bluetooth State Broadcast Receiver, new  Intent Filter (  Bluetooth Adapter . ACTION_STATE_CHANGED )  )  ;  if  (  Utils . is Marshmallow Or Above (  )  )  {     m Context . register Receiver ( m Location Provider Changed Receiver, new  Intent Filter (  Location Manager . MODE_CHANGED_ACTION )  )  ;  }}"
7045,protected  Re Plugin Config create Config (  ) {  Re Plugin Config c = new  Re Plugin Config (  )  ;  // 允许“插件使用宿主类” // 打开这个开关之后，当插件 Class Loader找不到类时，会去看宿主是否有这个类 // 从而，实现插件复用宿主中的 Java类 c . set Use Host Class If Not Found ( true )  ;  return c ; }
7046,"public boolean is Match (  String path, boolean directory, boolean path Match ) { if  ( path == null )      return false ;  if  ( path . length (  )  == 0 )      return false ;  boolean match = matcher . matches ( path, directory, path Match )  ;  return match ; }"
7047,public void set Scale ( float scale ) { m Scale = scale ; }
7048,public long get Time Spent In Gc Ms (  ) { return time Spent In Gc Ms ; }
7049,"public com . anychart . charts .  Circular Gauge enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
7050,"public float set Speed ( float speed ) { speed =  Util . constrain Value ( speed, MINIMUM_SPEED, MAXIMUM_SPEED )  ;  if  ( this . speed != speed )  {     this . speed = speed ;      pending Sonic Recreation = true ;  } flush (  )  ;  return speed ; }"
7051,public void zoom To Span (  ) { if  ( m Baidu Map == null )  {     return ;  } if  ( m Overlay List . size (  )  > 0 )  {      Lat Lng Bounds .  Builder builder = new  Lat Lng Bounds .  Builder (  )  ;      for  (  Overlay overlay : m Overlay List )  {         // polyline 中的点可能太多，只按marker 缩放         if  ( overlay instanceof  Marker )  {             builder . include (  (  (  Marker )  overlay )  . get Position (  )  )  ;          }     }     m Baidu Map . set Map Status (  Map Status Update Factory . new Lat Lng Bounds ( builder . build (  )  )  )  ;  }}
7052,public boolean preload Bundle (  Bundle bundle ) { return true ; }
7053,"public com . anychart . standalones .  Resource Timeline row Selected Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
7054,"private  Optional< Path> get Output Path For Remote File (  Remote File Description Arg arg,  Build Target build Target,  Project Filesystem filesystem ) { //  This matches the implementation in  Remote File Description for the output filename // calculation  String filename = arg . get Out (  )  . or Else ( build Target . get Short Name And Flavor Postfix (  )  )  ;  //  This matches the output path calculation in  Remote File's constructor return  Optional . of (  Build Target Paths . get Gen Path ( filesystem, build Target, ""%s/"" + filename )  )  ; }"
7055,public synchronized void remove ( int index ) { m Categories . remove ( index )  ;  m Values . remove ( index )  ; }
7056,"public static  Object Animator of Int (  Object target,  String property Name, int .  .  .  values ) {  Object Animator anim = new  Object Animator ( target, property Name )  ;  anim . set Int Values ( values )  ;  return anim ; }"
7057,"public static  App Link Data create From Activity (  Activity activity ) {  Validate . not Null ( activity, ""activity"" )  ;   Intent intent = activity . get Intent (  )  ;  if  ( intent == null )  {     return null ;  }  App Link Data app Link Data = create From Al Applink Data ( intent )  ;  if  ( app Link Data == null )  {      String app Link Args Json String = intent . get String Extra ( BUNDLE_APPLINK_ARGS_KEY )  ;      app Link Data = create From Json ( app Link Args Json String )  ;  } if  ( app Link Data == null )  {     //  Try regular app linking     app Link Data = create From Uri ( intent . get Data (  )  )  ;  } return app Link Data ; }"
7058,"public com . anychart . charts .  Pareto x Zoom (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Zoom ( %s )  ; "", settings )  )  ;  return this ; }"
7059,public void set Reading ( boolean reading ) { this . reading = reading ; }
7060,"public static void inform Context Of URL Used For Configuration (  Context context, URL url ) {  Configuration Watch List Util . set Main Watch URL ( context, url )  ; }"
7061,public static  Image Request Builder new Builder With Source (  Uri uri ) { return new  Image Request Builder (  )  . set Source ( uri )  ; }
7062,"public  Builder before (  Animator anim ) {  Node node = m Node Map . get ( anim )  ;  if  ( node == null )  {     node = new  Node ( anim )  ;      m Node Map . put ( anim, node )  ;      m Nodes . add ( node )  ;  }  Dependency dependency = new  Dependency ( m Current Node,  Dependency . AFTER )  ;  node . add Dependency ( dependency )  ;  return this ; }"
7063,"public  String get Debug Version String (  ) { return "" Type: "" + type + ""\n"" + "" Version: "" + major Version + "":"" + minor Version + "":"" + release Version + ""\n"" + "" Vendor: "" + vendor String + ""\n"" + "" Renderer: "" + renderer String ; }"
7064,"public  Result<V> if Succeeded Attempt Merge From ( @ Non Null final  Supplier<U> merge Value Supplier, @ Non Null final  Merger<? super T, ? super U,  Result<V>> attempt Merger ) { if  ( value != null )  {     return attempt Merger . merge ( value, merge Value Supplier . get (  )  )  ;  } return same Failure (  )  ; }"
7065,"private void do Close Sessions ( boolean skip Current Session ) { final int offset = skip Current Session ? 1 : 0 ;   List< String> sorted Open Sessions = reporting Coordinator . list Sorted Open Session Ids (  )  ;  if  ( sorted Open Sessions . size (  )  <= offset )  {      Logger . get Logger (  )  . v ( "" No open sessions to be closed . "" )  ;      return ;  } final  String most Recent Session Id To Close = sorted Open Sessions . get ( offset )  ;  if  ( native Component . has Crash Data For Session ( most Recent Session Id To Close )  )  {     //  We only finalize the current session if it's a  Java crash, so only finalize native crash     // data when we aren't including current .      finalize Previous Native Session ( most Recent Session Id To Close )  ;      if  ( !native Component . finalize Session ( most Recent Session Id To Close )  )  {          Logger . get Logger (  )  . w ( "" Could not finalize native session: "" + most Recent Session Id To Close )  ;      } }  String current Session Id = null ;  if  ( skip Current Session )  {     current Session Id = sorted Open Sessions . get ( 0 )  ;  } reporting Coordinator . finalize Sessions ( get Current Timestamp Seconds (  ) , current Session Id )  ; }"
7066,"public com . anychart . core . polar . series .  Range Column bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
7067,"public void request ( @ Int Range ( from = 1, to =  Integer . MAX_VALUE )  final int request Code ) {  Ask Permission permission ;  if  ( activity != null )  {     permission = new  Ask Permission ( activity, callback, error Callback )  ;      permission . request App Permissions ( this, request Code )  ;  } else if  ( fragment != null )  {     permission = new  Ask Permission ( fragment, callback, error Callback )  ;      permission . request App Permissions ( this, request Code )  ;  } else if  ( support Fragment != null )  {     permission = new  Ask Permission ( support Fragment, callback, error Callback )  ;      permission . request App Permissions ( this, request Code )  ;  }}"
7068,"public void test Builder_brute Force (  ) { for  ( int i = 0 ;  i < reduce Iterations If Gwt ( 100 )  ;  i++ )  {      Immutable Int Array .  Builder builder =  Immutable Int Array . builder ( RANDOM . next Int ( 20 )  )  ;       Atomic Integer counter = new  Atomic Integer ( 0 )  ;      while  ( counter . get (  )  < 1000 )  {          Builder Op op =  Builder Op . random Op (  )  ;          op . do It ( builder, counter )  ;      }      Immutable Int Array iia = builder . build (  )  ;      for  ( int j = 0 ;  j < iia . length (  )  ;  j++ )  {         assert That ( iia . get ( j )  )  . is Equal To ( j )  ;      } }}"
7069,protected static int count ( int [  ]  array ) { return  Math Utils . sum ( array )  ; }
7070,"private  Authentication Result try Acquire Token Silent With Assertion ( final  Authentication Request authentication Request )  throws  Authentication Exception{ final  String method Name = "":try Acquire Token Silent With Assertion"" ;   Logger . v ( TAG + method Name, "" Try to silently get token using SAML  Assertion . "" )  ;  final  Acquire Token Silent Handler acquire Token Silent Handler = new  Acquire Token Silent Handler ( m Context, authentication Request, m Token Cache Accessor )  ;  return acquire Token Silent Handler . get Access Token Using Assertion (  )  ; }"
7071,private void output (  Byte Buffer data ) { int length = data . remaining (  )  ;  replace Output Buffer ( length )  . put ( data )  . flip (  )  ;  if  ( length > 0 )  {     has Output Noise = true ;  }}
7072,public  Action Type get Action Type (  ) { return this . action Type ; }
7073,public  List< Filter> get Filters (  ) { return filters ; }
7074,"public com . anychart . core . gantt . timelineheader .  Level Wrapper adjust Font Size (  String both Or By Width,  Boolean by Height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . adjust Font Size ( %s, %s )  ; "", wrap Quotes ( both Or By Width ) , by Height )  )  ;  return this ; }"
7075,"public void set Address (  String address ) { params . put ( ""address"", address )  ; }"
7076,public  Gesture Result Callback callback (  ) { return callback ; }
7077,"public static  Set Multimap<K, V> filter Entries (  Set Multimap<K, V> unfiltered,  Predicate<? super  Entry<K, V>> entry Predicate ) { check Not Null ( entry Predicate )  ;  return  ( unfiltered instanceof  Filtered Set Multimap )  ? filter Filtered (  (  Filtered Set Multimap<K, V> )  unfiltered, entry Predicate )  : new  Filtered Entry Set Multimap<K, V> ( check Not Null ( unfiltered ) , entry Predicate )  ; }"
7078,"private void init_standard_header_with_overflow_button_dynamic_menu (  ) { // Create a  Card  Card card = new  Card ( get Activity (  )  )  ;  // Create a  Card Header  Card Header header = new  Card Header ( get Activity (  )  )  ;  // Set the header title header . set Title ( get String ( R . string . demo_header_basetitle )  )  ;  // Add a popup menu .   This method set  Over Flow button to visible header . set Popup Menu ( R . menu . popupmain, new  Card Header .  On Click Card Header Popup Menu Listener (  )  {     @ Override     public void on Menu Item Click (  Base Card card,  Menu Item item )  {          Toast . make Text ( get Activity (  ) , "" Click on "" + item . get Title (  ) ,  Toast . LENGTH_SHORT )  . show (  )  ;      } } )  ;  // Add a  Popup Menu Prepare Listener to add dynamically a menu entry //it is optional .  header . set Popup Menu Prepare Listener ( new  Card Header .  On Prepare Card Header Popup Menu Listener (  )  {     @ Override     public boolean on Prepare Popup Menu (  Base Card card,  Popup Menu popup Menu )  {         popup Menu . get Menu (  )  . add ( "" Dynamic item"" )  ;          return true ;      } } )  ;  card . add Card Header ( header )  ;  // Set card in the  Card View  Card View card View =  (  Card View )  get Activity (  )  . find View By Id ( R . id . carddemo_header_overflow_dynamic )  ;  card View . set Card ( card )  ; }"
7079,static  String get Sonic Header Path (  String session Id ) { return get Sonic Cache Dir Path (  )  + session Id + HEADER_EXT ; }
7080,"public void reject (  String code,  Throwable throwable,  Writable Map user Info ) { reject ( code, /* Message*/ null, throwable, user Info )  ; }"
7081,"public static void verify ( boolean expression,  String error Message Template, @ Check For Null  Object p1, @ Check For Null  Object p2 ) { if  ( !expression )  {     throw new  Verify Exception ( lenient Format ( error Message Template, p1, p2 )  )  ;  }}"
7082,"public com . anychart . charts .  Heat Map cancel Marquee (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . cancel Marquee (  )  ; "" )  ;  return this ; }"
7083,public static  String encrypt SHA224 To String ( final byte [  ]  data ) { return  Utils Bridge . bytes2 Hex String ( encrypt SHA224 ( data )  )  ; }
7084,"public static  Fragment get Top Show In Stack ( @ Non Null final  Fragment Manager fm ) { return get Top Show Is In Stack ( fm, null, true )  ; }"
7085,"public B set Move Type ( @ Move Type . MOVE_TYPE int move Type, int slide Left Margin, int slide Right Margin ) { m Move Type = move Type ;  m Slide Left Margin = slide Left Margin ;  m Slide Right Margin = slide Right Margin ;  return this ; }"
7086,"private  Animator Set build Scale Down Animation (  View target, float target Scale X, float target Scale Y ) {  Animator Set scale Down = new  Animator Set (  )  ;  scale Down . play Together (  Object Animator . of Float ( target, ""scale X"", target Scale X ) ,  Object Animator . of Float ( target, ""scale Y"", target Scale Y )  )  ;  scale Down . set Interpolator (  Animation Utils . load Interpolator ( activity, android . R . anim . decelerate_interpolator )  )  ;  // 250 scale Down . set Duration ( 130 )  ;  return scale Down ; }"
7087,"protected void draw Series ( XY Series series,  Canvas canvas,  Paint paint,  List< Float> points List, XY Series Renderer series Renderer, float y Axis Value, int series Index,  Orientation or, int start Index ) {  Basic Stroke stroke = series Renderer . get Stroke (  )  ;   Cap cap = paint . get Stroke Cap (  )  ;   Join join = paint . get Stroke Join (  )  ;  float miter = paint . get Stroke Miter (  )  ;   Path Effect path Effect = paint . get Path Effect (  )  ;   Style style = paint . get Style (  )  ;  if  ( stroke != null )  {      Path Effect effect = null ;      if  ( stroke . get Intervals (  )  != null )  {         effect = new  Dash Path Effect ( stroke . get Intervals (  ) , stroke . get Phase (  )  )  ;      }     set Stroke ( stroke . get Cap (  ) , stroke . get Join (  ) , stroke . get Miter (  ) ,  Style . FILL_AND_STROKE, effect, paint )  ;  } // float [  ]  points =  Math Helper . get Floats ( points List )  ;  draw Series ( canvas, paint, points List, series Renderer, y Axis Value, series Index, start Index )  ;  draw Points ( canvas, paint, points List, series Renderer, y Axis Value, series Index, start Index )  ;  paint . set Text Size ( series Renderer . get Chart Values Text Size (  )  )  ;  if  ( or ==  Orientation . HORIZONTAL )  {     paint . set Text Align (  Align . CENTER )  ;  } else {     paint . set Text Align (  Align . LEFT )  ;  } if  ( series Renderer . is Display Chart Values (  )  )  {     paint . set Text Align ( series Renderer . get Chart Values Text Align (  )  )  ;      draw Chart Values Text ( canvas, series, series Renderer, paint, points List, series Index, start Index )  ;  } if  ( stroke != null )  {     set Stroke ( cap, join, miter, style, path Effect, paint )  ;  }}"
7088,"public void on Post Create (  Bundle saved Instance State ) { if  ( m View Behind == null || m View Above == null )  {     throw new  Illegal State Exception ( "" Both set Behind Content View must be called "" + ""in on Create in addition to set Content View . "" )  ;  } m On Post Create Called = true ;  m Sliding Menu . attach To Activity ( m Activity, m Enable Slide ?  Sliding Menu . SLIDING_WINDOW :  Sliding Menu . SLIDING_CONTENT )  ;  final boolean open ;  final boolean secondary ;  if  ( saved Instance State != null )  {     open = saved Instance State . get Boolean ( "" Sliding Activity Helper . open"" )  ;      secondary = saved Instance State . get Boolean ( "" Sliding Activity Helper . secondary"" )  ;  } else {     open = false ;      secondary = false ;  } new  Handler (  )  . post ( new  Runnable (  )  {     public void run (  )  {         if  ( open )  {             if  ( secondary )  {                 m Sliding Menu . show Secondary Menu ( false )  ;              } else {                 m Sliding Menu . show Menu ( false )  ;              }         } else {             m Sliding Menu . show Content ( false )  ;          }     } } )  ; }"
7089,public static boolean maybe Skip Next Snapshot (  Debug Component node ) { final  Litho View litho View = node . get Litho View (  )  ;  if  ( litho View == null )  {     return false ;  } final  Component Tree component Tree = litho View . get Component Tree (  )  ;  if  ( component Tree == null )  {     return false ;  } skip Next Snapshot ( component Tree )  ;  return true ; }
7090,"public com . anychart . core . grids .  Linear x Grid (  Number index ) { return new com . anychart . core . grids .  Linear (  String . format (  Locale . US, js Base + "" . x Grid ( %s ) "", index )  )  ; }"
7091,public void evict All (  ) { cache . clear (  )  ; }
7092,"public com . anychart . core . stock .  Plot bounds (  String x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
7093,public void  On Net Trace Finished (  ) {}
7094,public float get Right (  ) { return right ; }
7095,public static  Option View get Option View (  ) { return option View ; }
7096,"public static  Hash Function hmac Sha512 ( byte [  ]  key ) { return hmac Sha512 ( new  Secret Key Spec ( check Not Null ( key ) , "" Hmac SHA512"" )  )  ; }"
7097,public boolean pop Content (  ) { if  ( m Content Stack . size (  )  > 1 )  {     //  Remove the currently visible content .      remove Current Content (  )  ;      //  Add back the previous content  ( if there is any )  .      if  ( !m Content Stack . is Empty (  )  )  {         show Content ( m Content Stack . peek (  )  )  ;      }     return true ;  } else {     return false ;  }}
7098,"public static  Component Name create Component Name (  String plugin Name,  String cls ) { return new  Component Name ( plugin Name, cls )  ; }"
7099,protected void start (  ) {}
7100,"public static  Function<T, T> log As (  String log Tag ) { return new  Echo Operator<> ( log Tag, false )  ; }"
7101,"public static  List< File> list Executable Scripts Recursively (  File directory,  Interpreter Configuration config ) { // NOTE ( damonkohler ) :  Creating a  Linked List here is necessary in order to be able to filter it // later .   List< File> scripts = new  Linked List< File> (  )  ;   List< File> files = list All Scripts ( directory )  ;  //  Filter out any files that don't have interpreters installed .  for  (  Iterator< File> it = files . iterator (  )  ;  it . has Next (  )  ;   )  {      File file = it . next (  )  ;      if  ( file . is Directory (  )  )  {         scripts . add All ( list Executable Scripts Recursively ( file, config )  )  ;      }      Interpreter interpreter = config . get Interpreter For Script ( file . get Name (  )  )  ;      if  ( interpreter != null && interpreter . is Installed (  )  )  {         scripts . add ( file )  ;      } }  Collections . sort ( scripts )  ;  return scripts ; }"
7102,"public void add Video Player ( final int position,  View img View,  String tag,  View Group container,  View play Btn ) { container . remove All Views (  )  ;  if  ( is Current View Playing ( position, tag )  )  {     if  ( !is Full )  {          View Group view Group =  (  View Group )  gsy Video Player . get Parent (  )  ;          if  ( view Group != null )              view Group . remove All Views (  )  ;          container . add View ( gsy Video Player )  ;          play Btn . set Visibility (  View . INVISIBLE )  ;      } } else {     play Btn . set Visibility (  View . VISIBLE )  ;      //增加封面     container . remove All Views (  )  ;      container . add View ( img View )  ;  }}"
7103,"public com . anychart . core . cartesian . series .  Continuous Range Base bounds (  String x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
7104,"public void star7 (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . star7 (  )  ; "" )  ; }"
7105,"public  String get Augmented Error With Context (  String indent,  Human Readable Exception Augmentor error Augmentor ) {  String Builder message Builder = new  String Builder (  )  ;  // TODO ( cjhopman ) :  Based on verbosity, get the stacktrace here instead of just the message .  message Builder . append ( get Message ( false )  )  ;   Optional< String> context = get Context ( indent )  ;  if  ( context . is Present (  )  )  {     message Builder . append (  System . line Separator (  )  )  ;      message Builder . append ( context . get (  )  )  ;  } return error Augmentor . get Augmented Error ( message Builder . to String (  )  )  ; }"
7106,public void visit Non Move Insn (  Normal Ssa Insn insn ) { /* for each use of some variable X in S */ insn . map Source Registers ( mapper )  ;  process Result Reg ( insn )  ; }
7107,"public boolean update Job ( @ Nullable  Encoded Image encoded Image, @ Consumer .  Status int status ) { if  ( !should Process ( encoded Image, status )  )  {     return false ;  }  Encoded Image old Encoded Image ;  synchronized  ( this )  {     old Encoded Image = m Encoded Image ;      m Encoded Image =  Encoded Image . clone Or Null ( encoded Image )  ;      m Status = status ;  }  Encoded Image . close Safely ( old Encoded Image )  ;  return true ; }"
7108,public static PDF Paint get Paint ( int p ) { PDF Paint result = new PDF Paint ( p )  ;  //        result . get Paint (  )  . set Style (  Style . STROKE )  ;  result . get Paint (  )  . set Style (  Style . FILL )  ;  return result ; }
7109,"public static  Intent get Intent Of Uri (  Uri uri ) { return new  Intent (  Intent . ACTION_VIEW, uri )  ; }"
7110,"public  Equals Builder append ( boolean lhs, boolean rhs ) { if  ( is Equals == false )  {     return this ;  } is Equals =  ( lhs == rhs )  ;  return this ; }"
7111,"public  Code Block field Reference (  ) { // can accomodate the component missing in some classes if it's not used .  return is Component Shard (  )  ? component Field Reference (  )  :  Code Block . of ( ""$L . $N"", component Field Reference (  ) , shard Fields By Implementation . get ( this )  )  ; }"
7112,"public static  Fragment Controller<T> build Fragment (  Class<T> fragment Class,  Bundle arguments ) { return  Fragment Controller . of (  Reflection Helpers . call Constructor ( fragment Class ) , arguments )  ; }"
7113,"public com . anychart . core . gantt .  Data Grid Button use Html (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . use Html ( %s )  ; "", enabled )  )  ;  return this ; }"
7114,public int get Height (  ) { return height ; }
7115,"public void logs Exception When Message Has No Trailing Newline (  ) { add Logcat Appender To Root (  )  ;   Shadow Log . reset (  )  ;  context . get Logger ( LOGGER_NAME )  . debug ( ""msg"", new  Null Pointer Exception (  )  )  ;  assert Logcat Contains (  Log . DEBUG,  Null Pointer Exception . class . get Name (  )  )  ; }"
7116,"public com . anychart . core . cartesian . series .  Column3d unselect (  Number index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unselect ( %s )  ; "", index )  )  ;  return this ; }"
7117,public void set Allow Adaptive Selections ( boolean allow Adaptive Selections ) { if  ( this . allow Adaptive Selections != allow Adaptive Selections )  {     this . allow Adaptive Selections = allow Adaptive Selections ;      update Views (  )  ;  }}
7118,public  Builder clear Wide Color Gamut (  ) { wide Color Gamut_ = 0 ;  on Changed (  )  ;  return this ; }
7119,"public com . anychart . core . cartesian . series .  Bar3d max Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
7120,"public com . anychart . core . venn .  Intersections fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
7121,"public com . anychart . core . venn .  Intersections normal (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . normal ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7122,"public com . anychart . core . resource .  Logo bounds (  Number x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
7123,public  Swipe Builder3< Epoxy Model> for All Models (  ) { return with Target (  Epoxy Model . class )  ; }
7124,"public void get Excluded Points (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Excluded Points (  )  ; "" )  ; }"
7125,"public void font Size (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Size (  )  ; "" )  ; }"
7126,"public void enable Dashed Line ( float line Length, float space Length, float phase ) { m Dash Path Effect = new  Dash Path Effect ( new float [  ]  { line Length, space Length }, phase )  ; }"
7127,public static  Glide Requests with ( @ Non Null  Context context ) { return  (  Glide Requests )   Glide . with ( context )  ; }
7128,public boolean is Started (  ) { return m Started ; }
7129,"Node create Name (  String name ) { check Activation Name ( name,  Token . NAME )  ;  return  Node . new String (  Token . NAME, name )  ; }"
7130,public void launch Activity And Find View_espresso (  )  throws  Exception{ on View ( with Id ( R . id . edit_text )  )  . check ( matches ( is Completely Displayed (  )  )  )  ; }
7131,public  Intent Sender Request get Last Intent Sender Request (  ) { return last Intent Sender Request ; }
7132,"private int read Internal ( byte [  ]  buffer, int offset, int read Length )  throws IO Exception{ if  ( read Length == 0 )  {     return 0 ;  } if  ( bytes To Read != C . LENGTH_UNSET )  {     long bytes Remaining = bytes To Read - bytes Read ;      if  ( bytes Remaining == 0 )  {         return C . RESULT_END_OF_INPUT ;      }     read Length =  ( int )   Math . min ( read Length, bytes Remaining )  ;  } int read = input Stream . read ( buffer, offset, read Length )  ;  if  ( read == -1 )  {     if  ( bytes To Read != C . LENGTH_UNSET )  {         //  End of stream reached having not read sufficient data .          throw new EOF Exception (  )  ;      }     return C . RESULT_END_OF_INPUT ;  } bytes Read += read ;  bytes Transferred ( read )  ;  return read ; }"
7133,public static  Bytes Key Generator shared ( int key Length ) { return new  Shared Key Generator ( secure Random ( 16 )  . generate Key (  )  )  ; }
7134,public void set Antialiasing ( boolean antialiasing ) { m Antialiasing = antialiasing ; }
7135,"public final long [  ]  get Column Keys (  ) { compile If Necessary (  )  ;  return  Arrays . copy Of ( column Keys, column Keys . length )  ; }"
7136,"public void exists (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . exists (  )  ; "" )  ; }"
7137,"public com . anychart . charts .  Pie credits (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . credits ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
7138,"public com . anychart . charts .  Scatter select Marquee Fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
7139,"public com . anychart . math .  Rect get Pixel Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . get Pixel Bounds (  ) "" )  ; }"
7140,"public void verbose ( @ Nullable  Throwable exception,  String format,  Object .  .  .  args ) { log Appendable Log Record ( FINER, ""VERBOSE"", exception, format, args )  ; }"
7141,public void response Sent (  Stream Response Message response Message ) {}
7142,"public boolean contains ( float x, float y ) { final float [  ]  vertices = get Transformed Vertices (  )  ;  final int num Floats = vertices . length ;  int intersects = 0 ;  for  ( int i = 0 ;  i < num Floats ;  i += 2 )  {     float x1 = vertices [ i ]  ;      float y1 = vertices [ i + 1 ]  ;      float x2 = vertices [  ( i + 2 )  % num Floats ]  ;      float y2 = vertices [  ( i + 3 )  % num Floats ]  ;      if  (  (  ( y1 <= y && y < y2 )  ||  ( y2 <= y && y < y1 )  )  && x <  (  ( x2 - x1 )  /  ( y2 - y1 )  *  ( y - y1 )  + x1 )  )          intersects++ ;  } return  ( intersects & 1 )  == 1 ; }"
7143,"public com . anychart . charts .  Stock select Marquee Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
7144,"public com . anychart . core . gantt . edit .  Thumb horizontal Offset (  Number offset ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . horizontal Offset ( %s )  ; "", offset )  )  ;  return this ; }"
7145,"public com . anychart . core . cartesian . series .  Spline spline ( com . anychart . data .  View data,  String csv Settings ) { return new com . anychart . core . cartesian . series .  Spline (  String . format (  Locale . US, js Base + "" . spline ( %s, %s ) "",  ( data != null )  ? data . get Js Base (  )  : null, wrap Quotes ( csv Settings )  )  )  ; }"
7146,protected  Object select Single Node For Context (  Context context )  throws  Jaxen Exception{  List results = select Nodes For Context ( context )  ;  if  ( results . is Empty (  )  )  {     return null ;  } return results . get ( 0 )  ; }
7147,"protected void perform Dismiss ( final  View dismiss View, final int dismiss Position, boolean do Pending Dismiss ) { enable Disable View Group (  (  View Group )  dismiss View, false )  ;  final  View Group .  Layout Params lp = dismiss View . get Layout Params (  )  ;  final int original Height = dismiss View . get Height (  )  ;   Value Animator animator =  Value Animator . of Int ( original Height, 1 )  . set Duration ( animation Time )  ;  if  ( do Pending Dismiss )  {     animator . add Listener ( new  Animator Listener Adapter (  )  {         @ Override         public void on Animation End (  Animator animation )  {             --dismiss Animation Ref Count ;              if  ( dismiss Animation Ref Count == 0 )  {                 remove Pending Dismisses ( original Height )  ;              }         }     } )  ;  } animator . add Listener ( new  Animator Listener Adapter (  )  {     @ Override     public void on Animation End (  Animator animation )  {         enable Disable View Group (  (  View Group )  dismiss View, true )  ;      } } )  ;  animator . add Update Listener ( new  Value Animator .  Animator Update Listener (  )  {     @ Override     public void on Animation Update (  Value Animator value Animator )  {         lp . height =  (  Integer )  value Animator . get Animated Value (  )  ;          dismiss View . set Layout Params ( lp )  ;      } } )  ;  pending Dismisses . add ( new  Pending Dismiss Data ( dismiss Position, dismiss View )  )  ;  animator . start (  )  ; }"
7148,"public  Dfs Pack Description set Delta Count ( long cnt ) { delta Count =  Math . max ( 0, cnt )  ;  return this ; }"
7149,"public void println (  ) { print ( ""\n"" )  ;  text . repaint (  )  ; }"
7150,"public void test Exhaustive (  )  throws  Exception{ // will iteratively make more debuggable, each time it breaks  Random random = new  Random ( 0 )  ;  for  ( int total Insertions = 0 ;  total Insertions < 200 ;  total Insertions++ )  {      List< Sink> sinks =  Lists . new Array List (  )  ;      for  ( int chunk Size = 4 ;  chunk Size <= 32 ;  chunk Size++ )  {         for  ( int buffer Size = chunk Size ;  buffer Size <= chunk Size * 4 ;  buffer Size += chunk Size )  {             // yes, that's a lot of sinks!             sinks . add ( new  Sink ( chunk Size, buffer Size )  )  ;          //  For convenience, testing only with big endianness, to match  Data Output Stream .          // I regard highly unlikely that both the little endianness tests above and this one         // passes, and there is still a little endianness bug lurking around .          }     }      Control control = new  Control (  )  ;       Hasher control Sink = control . new Hasher ( 1024 )  ;       Iterable< Hasher> sinks And Control =  Iterables . concat ( sinks,  Collections . singleton ( control Sink )  )  ;      for  ( int insertion = 0 ;  insertion < total Insertions ;  insertion++ )  {          Random Hasher Action . pick At Random ( random )  . perform Action ( random, sinks And Control )  ;      }     //  We need to ensure that at least 4 bytes have been put into the hasher or else     //  Hasher#hash will throw an ISE .      int int To Put = random . next Int (  )  ;      for  (  Hasher hasher : sinks And Control )  {         hasher . put Int ( int To Put )  ;      }     for  (  Sink sink : sinks )  {          Hash Code unused = sink . hash (  )  ;      }     byte [  ]  expected = control Sink . hash (  )  . as Bytes (  )  ;      for  (  Sink sink : sinks )  {         sink . assert Invariants ( expected . length )  ;          sink . assert Bytes ( expected )  ;      } }}"
7151,"public void in Marquee (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . in Marquee (  )  ; "" )  ; }"
7152,public void set Use Progress Bar ( boolean use Progress Bar ) { this . use Progress Bar = use Progress Bar ; }
7153,"public com . anychart . charts .  Sparkline negative Markers (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . negative Markers ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7154,"public com . anychart . standalones .  Data Grid bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
7155,"public  Inserter< Model> inserter (  ) { return inserter (  On Conflict . NONE, true )  ; }"
7156,"public void set ( int a, int b, int c, int d, int e ) { w1 = a ;  w2 = b ;  w3 = c ;  w4 = d ;  w5 = e ; }"
7157,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
7158,"public com . anychart . charts .  Pareto x Grid (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Grid ( %s )  ; "", settings )  )  ;  return this ; }"
7159,public final  String get Device (  ) { return  Check Validity Util . check Valid Data (  Build . DEVICE )  ; }
7160,"public void set Value (  Object value ) { if  ( value != null )  {     this . value = value . to String (  )  . replace ( ' ', 'T' )  ;  }}"
7161,"public void check Untracked Folder Is Not A Conflict (  Merge Strategy strategy )  throws  Exception{  Git git =  Git . wrap ( db )  ;  write Trash File ( ""d/1"", ""1"" )  ;  git . add (  )  . add Filepattern ( ""d/1"" )  . call (  )  ;   Rev Commit first = git . commit (  )  . set Message ( ""added d/1"" )  . call (  )  ;  write Trash File ( ""e/1"", ""4"" )  ;  git . add (  )  . add Filepattern ( ""e/1"" )  . call (  )  ;   Rev Commit master Commit = git . commit (  )  . set Message ( ""added e/1"" )  . call (  )  ;  git . checkout (  )  . set Create Branch ( true )  . set Start Point ( first )  . set Name ( ""side"" )  . call (  )  ;  write Trash File ( ""f/1"", ""5"" )  ;  git . add (  )  . add Filepattern ( ""f/1"" )  . call (  )  ;  git . commit (  )  . set All ( true )  . set Message ( ""added f/1"" )  . call (  )  ;  //  Untracked directory e shall not conflict with merged e/1 write Trash File ( ""e/2"", ""d two"" )  ;   Merge Result merge Res = git . merge (  )  . set Strategy ( strategy )  . include ( master Commit )  . call (  )  ;  assert Equals (  Merge Status . MERGED, merge Res . get Merge Status (  )  )  ;  assert Equals ( "" [ d/1, mode:100644, content:1 ]  [ e/1, mode:100644, content:4 ]  [ f/1, mode:100644, content:5 ] "", index State ( CONTENT )  )  ; }"
7162,"public  Take Photo get Take Photo (  ) { if  ( take Photo == null )  {     take Photo =  (  Take Photo )   Take Photo Invocation Handler . of ( this )  . bind ( new  Take Photo Impl ( this, this )  )  ;  } return take Photo ; }"
7163,"public  Base Adapter Helper set Image Bitmap ( int view Id,  Bitmap bitmap ) {  Image View view = retrieve View ( view Id )  ;  view . set Image Bitmap ( bitmap )  ;  return this ; }"
7164,"public com . anychart . core . gauge . pointers .  Knob stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7165,"public com . anychart . charts .  Gantt label (  String index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , wrap Quotes ( settings )  )  )  ;  return this ; }"
7166,"String get Api Url (  String text, int page ) {  String base = ""https://api . flickr . com/services/feeds/photos_public . gne?format=json&nojsoncallback=?"" ;  if  ( text != null && !text . is Empty (  )  )  {     base += ""&tags="" + text ;  } return base ; }"
7167,"public com . anychart . core . gantt . elements .  Periods Element anchor ( com . anychart . enums .  Anchor anchor ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . anchor ( %s )  ; "",  ( anchor != null )  ? anchor . get Js Base (  )  : null )  )  ;  return this ; }"
7168,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_GENRE ; }
7169,public int get Swipe Action Right (  ) { return swipe Action Right ; }
7170,static boolean is View Selected ( int flags ) { return  ( flags & FLAG_VIEW_SELECTED )  == FLAG_VIEW_SELECTED ; }
7171,"public  Intent get Last Assistant Activity Intent (  ) { return  Iterables . get Last ( assistant Activity Intents, /* default Value= */ null )  ; }"
7172,"private  String fetch Table Name (  String query ) { for  (  String table Name : m Table Names )  {     if  ( query . contains ( table Name )  )  {         return table Name ;      } } return """" ; }"
7173,"void verify Build Target (  Cell cell,  Rule Type build Rule Type,  Path build File,  Unconfigured Build Target target,  Base Description<?> description,  Map< String,  Object> raw Node ) {  Unflavored Build Target unflavored Build Target View = target . get Unflavored Build Target (  )  ;  if  ( target . is Flavored (  )  )  {     if  ( description instanceof  Flavored )  {         // TODO ( nga ) : use proper target configuration         if  ( ! (  (  Flavored )  description )  . has Flavors (  Immutable Set . copy Of ( target . get Flavors (  )  . get Set (  )  ) ,  Unconfigured Target Configuration . INSTANCE )  )  {             throw  Unexpected Flavor Exception . create With Suggestions (  (  Flavored )  description, target )  ;          }     } else {         LOG . warn ( "" Target %s  ( type %s )  must implement the  Flavored interface "" + ""before we can check if it supports flavors: %s"", unflavored Build Target View, build Rule Type, target . get Flavors (  )  )  ;           Immutable Set< String> invalid Flavors Str = target . get Flavors (  )  . get Set (  )  . stream (  )  . map (  Flavor::to String )  . collect (  Immutable Set . to Immutable Set (  )  )  ;           String invalid Flavors Display Str =  String . join ( "", "", invalid Flavors Str )  ;          throw new  Human Readable Exception ( "" The following flavor ( s )  are not supported on target %s:\n"" + ""%s . \n\n"" + "" Please try to remove them when referencing this target . "", unflavored Build Target View, invalid Flavors Display Str )  ;      } }  Unflavored Build Target unflavored Build Target View From Raw Data =  Unflavored Build Target Factory . create From Raw Node ( cell . get Root (  )  . get Path (  ) , cell . get Canonical Name (  ) , raw Node, build File )  ;  if  ( !unflavored Build Target View . equals ( unflavored Build Target View From Raw Data )  )  {     throw new  Illegal State Exception (  String . format ( "" Inconsistent internal state, target from data: %s, expected: %s, raw data: %s"", unflavored Build Target View From Raw Data, unflavored Build Target View,  Joiner . on ( ',' )  . with Key Value Separator ( ""->"" )  . join ( raw Node )  )  )  ;  }}"
7174,"private void duplicate Touch Event For Children (  Motion Event ev,  Motion Event .  .  .  pending Events ) { if  ( ev == null )  {     return ;  } for  ( int i = get Child Count (  )  - 1 ;  0 <= i ;  i-- )  {      View child View = get Child At ( i )  ;      if  ( child View != null )  {          Rect child Rect = new  Rect (  )  ;          child View . get Hit Rect ( child Rect )  ;           Motion Event event =  Motion Event . obtain No History ( ev )  ;          if  ( !child Rect . contains (  ( int )  event . get X (  ) ,  ( int )  event . get Y (  )  )  )  {             continue ;          }         float offset X = -child View . get Left (  )  ;          float offset Y = -child View . get Top (  )  ;          boolean consumed = false ;          if  ( pending Events != null )  {             for  (  Motion Event pe : pending Events )  {                 if  ( pe != null )  {                      Motion Event pe Adjusted =  Motion Event . obtain No History ( pe )  ;                      pe Adjusted . offset Location ( offset X, offset Y )  ;                      consumed |= child View . dispatch Touch Event ( pe Adjusted )  ;                  }             }         }         event . offset Location ( offset X, offset Y )  ;          consumed |= child View . dispatch Touch Event ( event )  ;          if  ( consumed )  {             break ;          }     } }}"
7175,public  Proto Fluent Assertion ignoring Field Descriptors (  Iterable< Field Descriptor> field Descriptors ) { return using Config ( config . ignoring Field Descriptors ( field Descriptors )  )  ; }
7176,public void set Maximized Monitor (  Graphics .  Monitor monitor ) { this . maximized Monitor =  (  Lwjgl3 Graphics .  Lwjgl3 Monitor )  monitor ; }
7177,"public  Usb Device Info get Device Info ( final  Usb Device device ) { return update Device Info ( m Usb Manager, device, null )  ; }"
7178,"public com . anychart . charts .  Radar bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
7179,public long get Item Id ( int position ) { return position ; }
7180,"public static  Function<A, B> memoize (  Function<A, B> function ) {  Concurrent Hash Map<A, B> map = new  Concurrent Hash Map<> (  )  ;  return  a -> map . compute If Absent ( a, function )  ; }"
7181,public void set On Item Click Listener ( @ Non Null final  Group Model Adapter .  On Item Click Listener listener ) { m On Item Click Listener = listener ; }
7182,"public void disable Pointer Events (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . disable Pointer Events (  )  ; "" )  ; }"
7183,public char get Value (  ) { return  ( char )  cp . get Integer Info ( value Index )  ; }
7184,"public static  Identifier from Bytes ( byte [  ]  bytes, int start, int end, boolean little Endian ) { if  ( bytes == null )  {     throw new  Null Pointer Exception ( "" Identifiers cannot be constructed from null pointers but \""bytes\"" is null . "" )  ;  } if  ( start < 0 || start > bytes . length )  {     throw new  Array Index Out Of Bounds Exception ( ""start < 0 || start > bytes . length"" )  ;  } if  ( end > bytes . length )  {     throw new  Array Index Out Of Bounds Exception ( ""end > bytes . length"" )  ;  } if  ( start > end )  {     throw new  Illegal Argument Exception ( ""start > end"" )  ;  } byte [  ]  byte Range =  Arrays . copy Of Range ( bytes, start, end )  ;  if  ( little Endian )  {     reverse Array ( byte Range )  ;  } return new  Identifier ( byte Range )  ; }"
7185,public final B apply ( @ Check For Null A a ) { return convert ( a )  ; }
7186,"public static boolean add Links (  Spannable s,  Pattern p,  String scheme,  Match Filter match Filter,  Transform Filter transform Filter ) { boolean has Matches = false ;   String prefix =  ( scheme == null )  ? """" : scheme . to Lower Case (  Locale . ROOT )  ;   Matcher m = p . matcher ( s )  ;  while  ( m . find (  )  )  {     int start = m . start (  )  ;      int end = m . end (  )  ;      boolean allowed = true ;      if  ( match Filter != null )  {         allowed = match Filter . accept Match ( s, start, end )  ;      }     if  ( allowed )  {          String url = make Url ( m . group ( 0 ) , new  String [  ]  { prefix }, m, transform Filter )  ;          apply Link ( url, start, end, s, null, null, null )  ;          has Matches = true ;      } } return has Matches ; }"
7187,public  Observable< Iterable<T>> save In Tx ( final  Iterable<T> entities ) { return wrap ( new  Callable< Iterable<T>> (  )  {     @ Override     public  Iterable<T> call (  )  throws  Exception {         dao . save In Tx ( entities )  ;          return entities ;      } } )  ; }
7188,public float get Upper Limit (  ) { return jni Get Upper Limit ( addr )  ; }
7189,"public com . anychart . core . utils .  Ordinal Zoom x Zoom (  ) { return new com . anychart . core . utils .  Ordinal Zoom ( js Base + "" . x Zoom (  ) "" )  ; }"
7190,"public  Builder set State ( @ Nullable  String state ) { check Null Or Not Empty ( state, ""state must not be empty"" )  ;  m State = state ;  return this ; }"
7191,public void set Pinch Zoom ( boolean enabled ) { m Pinch Zoom Enabled = enabled ; }
7192,public boolean is Only Entry Animation (  ) { return only Entry Animation ; }
7193,public  Pack Source get Pack Source (  ) { return pack Source ; }
7194,private static boolean node Needs Unique Predecessor (  Ssa Basic Block block ) { /*      *  Any block with that has both multiple successors and multiple      * predecessors needs a new predecessor node .       */ int count Predecessors = block . get Predecessors (  )  . cardinality (  )  ;  int count Successors = block . get Successors (  )  . cardinality (  )  ;  return  ( count Predecessors > 1 && count Successors > 1 )  ; }
7195,"public  Immersion Bar title Bar (  View view, boolean status Bar Color Transform Enable ) { if  ( view == null )  {     return this ;  } if  ( m Fits Status Bar Type == FLAG_FITS_DEFAULT )  {     m Fits Status Bar Type = FLAG_FITS_TITLE ;  } m Bar Params . title Bar View = view ;  m Bar Params . status Bar Color Enabled = status Bar Color Transform Enable ;  return this ; }"
7196,public double max (  ) { check State ( count != 0 )  ;  return max ; }
7197,"protected T execute (  Reference<K, V> reference,  Entry<K, V> entry,  Entries entries ) { return execute ( reference, entry )  ; }"
7198,"private void add Interfence ( int new Reg, int old Reg ) { new Reg Interference . ensure Capacity ( new Reg + 1 )  ;  while  ( new Reg >= new Reg Interference . size (  )  )  {     new Reg Interference . add ( new  Bit Int Set ( new Reg + 1 )  )  ;  } old Reg Interference . merge Interference Set ( old Reg, new Reg Interference . get ( new Reg )  )  ; }"
7199,public final int get Present Hue (  ) { return m Present Hsl Hue ; }
7200,"public com . anychart . scales .  Linear Color color Scale (  ) { return new com . anychart . scales .  Linear Color ( js Base + "" . color Scale (  ) "" )  ; }"
7201,"public com . anychart . core . map . series .  Choropleth left (  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", wrap Quotes ( left )  )  )  ;  return this ; }"
7202,public void set Draggable Listener (  Draggable Listener listener ) { this . listener = listener ; }
7203,"public  Group create Group ( @ Non Null final UUID address Label, @ Nullable final UUID parent Label, @ Non Null final  String name ) { if  (  Text Utils . is Empty ( name )  )  {     throw new  Illegal Argument Exception ( "" Group name cannot be empty"" )  ;  } final int address =  Mesh Address . generate Virtual Address ( address Label )  ;  final  Group group = new  Group ( address Label, parent Label, mesh UUID )  ;  group . set Name ( name )  ;  return group ; }"
7204,private void init_card_thumb_custom_source (  ) { // Create a  Card  Card card = new  Gplay Card Custom Source ( get Activity (  )  )  ;  // Set card in the card View  Card View card View =  (  Card View )  get Activity (  )  . find View By Id ( R . id . carddemo_thumb_customsource )  ;  card View . set Card ( card )  ; }
7205,"public com . anychart . charts .  Pie select Marquee Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7206,public  Texture Region get Texture Region (  ) { return this . material . texture Region ; }
7207,"public  Map<R Type,  Set<R Dot Txt Entry>> get R Type Resource Map (  ) { return this . r Type Resource Map ; }"
7208,public void change Camera Parameters (  Camera Parameters Callback callback ) { barcode View . change Camera Parameters ( callback )  ; }
7209,public boolean get Controller Auto Show (  ) { return controller Auto Show ; }
7210,"public void change Ops (  Selection Key key, int interested Ops ) { pending Commands . add ( new  Change Key Ops Command ( key, interested Ops )  )  ;  selector . wakeup (  )  ; }"
7211,"protected  Rect strip Whitespace (  String name,  Buffered Image source ) {  Writable Raster alpha Raster = source . get Alpha Raster (  )  ;  if  ( alpha Raster == null ||  ( !settings . strip Whitespace X && !settings . strip Whitespace Y )  )      return new  Rect ( source, 0, 0, source . get Width (  ) , source . get Height (  ) , false )  ;  final byte [  ]  a = new byte [ 1 ]  ;  int top = 0 ;  int bottom = source . get Height (  )  ;  if  ( settings . strip Whitespace Y )  {     outer: for  ( int y = 0 ;  y < source . get Height (  )  ;  y++ )  {         for  ( int x = 0 ;  x < source . get Width (  )  ;  x++ )  {             alpha Raster . get Data Elements ( x, y, a )  ;              int alpha = a [ 0 ]  ;              if  ( alpha < 0 )                  alpha += 256 ;              if  ( alpha > settings . alpha Threshold )                  break outer ;          }         top++ ;      }     outer: for  ( int y = source . get Height (  )  ;  --y >= top ;   )  {         for  ( int x = 0 ;  x < source . get Width (  )  ;  x++ )  {             alpha Raster . get Data Elements ( x, y, a )  ;              int alpha = a [ 0 ]  ;              if  ( alpha < 0 )                  alpha += 256 ;              if  ( alpha > settings . alpha Threshold )                  break outer ;          }         bottom-- ;      }     //  Leave 1px so nothing is copied into padding .      if  ( settings . duplicate Padding )  {         if  ( top > 0 )              top-- ;          if  ( bottom < source . get Height (  )  )              bottom++ ;      } } int left = 0 ;  int right = source . get Width (  )  ;  if  ( settings . strip Whitespace X )  {     outer: for  ( int x = 0 ;  x < source . get Width (  )  ;  x++ )  {         for  ( int y = top ;  y < bottom ;  y++ )  {             alpha Raster . get Data Elements ( x, y, a )  ;              int alpha = a [ 0 ]  ;              if  ( alpha < 0 )                  alpha += 256 ;              if  ( alpha > settings . alpha Threshold )                  break outer ;          }         left++ ;      }     outer: for  ( int x = source . get Width (  )  ;  --x >= left ;   )  {         for  ( int y = top ;  y < bottom ;  y++ )  {             alpha Raster . get Data Elements ( x, y, a )  ;              int alpha = a [ 0 ]  ;              if  ( alpha < 0 )                  alpha += 256 ;              if  ( alpha > settings . alpha Threshold )                  break outer ;          }         right-- ;      }     //  Leave 1px so nothing is copied into padding .      if  ( settings . duplicate Padding )  {         if  ( left > 0 )              left-- ;          if  ( right < source . get Width (  )  )              right++ ;      } } int new Width = right - left ;  int new Height = bottom - top ;  if  ( new Width <= 0 || new Height <= 0 )  {     if  ( settings . ignore Blank Images )          return null ;      else         return new  Rect ( empty Image, 0, 0, 1, 1, false )  ;  } return new  Rect ( source, left, top, new Width, new Height, false )  ; }"
7212,"public static boolean identity Equals (  List<? extends T> list1,  List<? extends T> list2 ) { if  ( list1 == list2 )  {     return true ;  } int size = list1 . size (  )  ;  if  ( size != list2 . size (  )  )  {     return false ;  } for  ( int i = 0 ;  i < size ;  ++i )  {     if  ( list1 . get ( i )  != list2 . get ( i )  )  {         return false ;      } } return true ; }"
7213,public final void await Running (  ) { delegate . await Running (  )  ; }
7214,"public com . anychart . charts .  Pie stroke (  String value,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( value ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7215,public final  Drawable get Child ( int index ) { final  Drawable result = m Drawables [ index ]  ;  if  ( result != null )  {     return result ;  } //  Prepare future drawable if necessary .  if  ( m Drawable Futures != null )  {     final int key Index = m Drawable Futures . index Of Key ( index )  ;      if  ( key Index >= 0 )  {         final  Constant State cs = m Drawable Futures . value At ( key Index )  ;          final  Drawable prepared = prepare Drawable ( cs . new Drawable ( m Source Res )  )  ;          m Drawables [ index ]  = prepared ;          m Drawable Futures . remove At ( key Index )  ;          if  ( m Drawable Futures . size (  )  == 0 )  {             m Drawable Futures = null ;          }         return prepared ;      } } return null ; }
7216,public  Serialize Config get Serialize Config (  ) { return serialize Config ; }
7217,public boolean offer ( T e ) { return super . offer First ( e )  ; }
7218,public float get Padding (  ) { return m Padding ; }
7219,"public static  Rotation from Int ( int rotation ) { switch ( rotation )  {     case 0:         return NORMAL ;      case 90:         return ROTATION_90 ;      case 180:         return ROTATION_180 ;      case 270:         return ROTATION_270 ;      case 360:         return NORMAL ;      default:         throw new  Illegal State Exception ( rotation + "" is an unknown rotation .   Needs to be either 0, 90, 180 or 270!"" )  ;  }}"
7220,public  String get Component Test Key (  ) {  Component component = m Node . get Components (  )  . get ( m Component Index )  ;   Common Props props = component . get Common Props (  )  ;  return props == null ? null : props . get Test Key (  )  ; }
7221,public boolean is Controller Visible (  ) { return controller != null && controller . is Visible (  )  ; }
7222,public boolean get Detail Orientation Rotate Auto (  ) { return true ; }
7223,"public  Immutable Long Array sub Array ( int start Index, int end Index ) {  Preconditions . check Position Indexes ( start Index, end Index, length (  )  )  ;  return start Index == end Index ? EMPTY : new  Immutable Long Array ( array, start + start Index, start + end Index )  ; }"
7224,public void set Basecolor ( int value ) { this . basecolor = value ; }
7225,"private static void check Content Provider Authority ( @ Non Null  Provider Info info ) {  Preconditions . check Not Null ( info, "" Firebase Init Provider  Provider Info cannot be null . "" )  ;  if  ( EMPTY_APPLICATION_ID_PROVIDER_AUTHORITY . equals ( info . authority )  )  {     throw new  Illegal State Exception ( "" Incorrect provider authority in manifest .   Most likely due to a missing "" + ""application Id variable in application's build . gradle . "" )  ;  }}"
7226,public int get Code (  ) { return code ; }
7227,"public com . anychart . core . ui . scroller .  Thumbs stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7228,public void scale By ( float scale ) { if  ( scale != 0 )  {     scale X += scale ;      scale Y += scale ;      scale Changed (  )  ;  }}
7229,protected  Class Loader get Class Loader (  ) { return get Class (  )  . get Class Loader (  )  ; }
7230,"public void exec (  String host, boolean is Need L ) {  Ping Task ping Task = new  Ping Task ( host )  ;   String Builder log = new  String Builder ( 256 )  ;   String status = exec Ping ( ping Task, is Need L )  ;  if  (  Pattern . compile ( MATCH_PING_IP )  . matcher ( status )  . find (  )  )  {      Log . i ( ""LD Net Ping"", ""status"" + status )  ;      log . append ( ""\t"" + status )  ;  } else {     if  ( status . length (  )  == 0 )  {         log . append ( ""unknown host or network error"" )  ;      } else {         log . append ( ""timeout"" )  ;      } }  String log Str = LD Ping Parse . get Formatting Str ( host, log . to String (  )  )  ;  this . listener .  On Net Ping Finished ( log Str )  ; }"
7231,"public  Test Field Prop Callback Prop View Model_ on Unbind (  On Model Unbound Listener< Test Field Prop Callback Prop View Model_,  Test Field Prop Callback Prop View> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
7232,"public static void create Table (  Database db, boolean if Not Exists ) {  String constraint = if Not Exists ? ""IF NOT EXISTS "" : """" ;  db . exec SQL ( // ""CREATE TABLE "" + constraint + ""\""INDEXED_STRING_ENTITY\""  ( "" + // 0: id ""\""_id\"" INTEGER PRIMARY KEY ,"" + // 1: indexed String ""\""INDEXED_STRING\"" TEXT )  ; "" )  ;  //  Add  Indexes db . exec SQL ( ""CREATE INDEX "" + constraint + ""IDX_INDEXED_STRING_ENTITY_INDEXED_STRING ON INDEXED_STRING_ENTITY"" + ""  ( \""INDEXED_STRING\"" )  ; "" )  ; }"
7233,"protected void on Start Swipe ( @ Non Null final  View view, final int position ) {}"
7234,"public  Query Builder<T> string Order Collation (  String string Order Collation ) { this . string Order Collation = string Order Collation == null || string Order Collation . starts With ( "" "" )  ? string Order Collation : "" "" + string Order Collation ;  return this ; }"
7235,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
7236,"public void copy Plugin So Lib (  Context context,  String dex Path,  String native Lib Dir ) {  String cpu Name = get Cpu Name (  )  ;   String cpu Architect = get Cpu Arch ( cpu Name )  ;  s Native Lib Dir = native Lib Dir ;   Log . d ( TAG, ""cpu Architect: "" + cpu Architect )  ;  long start =  System . current Time Millis (  )  ;  try {      Zip File zip File = new  Zip File ( dex Path )  ;       Enumeration<? extends  Zip Entry> entries = zip File . entries (  )  ;      while  ( entries . has More Elements (  )  )  {          Zip Entry zip Entry =  (  Zip Entry )  entries . next Element (  )  ;          if  ( zip Entry . is Directory (  )  )  {             continue ;          }          String zip Entry Name = zip Entry . get Name (  )  ;          if  ( zip Entry Name . ends With ( "" . so"" )  && zip Entry Name . contains ( cpu Architect )  )  {             final long last Modify = zip Entry . get Time (  )  ;              if  ( last Modify == DL Configs . get So Last Modified Time ( context, zip Entry Name )  )  {                 // exist and no change                  Log . d ( TAG, ""skip copying, the so lib is exist and not change: "" + zip Entry Name )  ;                  continue ;              }             m So Executor . execute ( new  Copy So Task ( context, zip File, zip Entry, last Modify )  )  ;          }     } } catch  ( IO Exception e )  {     e . print Stack Trace (  )  ;  } long end =  System . current Time Millis (  )  ;   Log . d ( TAG, ""### copy so time : "" +  ( end - start )  + "" ms"" )  ; }"
7237,"public com . anychart . core . stock .  Plot max Point Width (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Point Width ( %s )  ; "", value )  )  ;  return this ; }"
7238,public void set Highlighted ( boolean highlighted ) { m Highlighted = highlighted ; }
7239,"public com . anychart . core . gantt . elements .  Grouping Tasks Element fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
7240,"static void generate Push Wrapped Args (  Class File Writer cfw,  Class<?> [  ]  arg Types, int array Length ) { // push arguments cfw . add Push ( array Length )  ;  cfw . add (  Byte Code . ANEWARRAY, ""java/lang/ Object"" )  ;  int param Offset = 1 ;  for  ( int i = 0 ;  i != arg Types . length ;  ++i )  {     // duplicate array reference     cfw . add (  Byte Code . DUP )  ;      cfw . add Push ( i )  ;      param Offset += generate Wrap Arg ( cfw, param Offset, arg Types [ i ]  )  ;      cfw . add (  Byte Code . AASTORE )  ;  }}"
7241,"public static  Single Association<T> just ( @ Non Null T model ) {  Schema<T> schema =  Schemas . get (  (  Class<T> )  model . get Class (  )  )  ;  return just ( schema, model )  ; }"
7242,"public com . anychart . palettes .  Markers marker Palette (  ) { return new com . anychart . palettes .  Markers ( js Base + "" . marker Palette (  ) "" )  ; }"
7243,public int get Cache Count (  ) {  Disk Cache Manager disk Cache Manager = get Disk Cache Manager (  )  ;  if  ( disk Cache Manager == null )      return 0 ;  return disk Cache Manager . get Cache Count (  )  ; }
7244,public void set Has More Data ( boolean has More Data ) { if  ( !has More Data )  {     if  ( null != m Load More Footer Layout )  {         m Load More Footer Layout . set State (  State . NO_MORE_DATA )  ;      }      Loading Layout footer Loading Layout = get Footer Loading Layout (  )  ;      if  ( null != footer Loading Layout )  {         footer Loading Layout . set State (  State . NO_MORE_DATA )  ;      } }}
7245,"public  Integer map Throwable ( final  Throwable throwable ) {  Throwable throwable To Check = throwable ;  int depth To Go = 20 ;  while  ( true )  {      Integer res Id = map Throwable Flat ( throwable To Check )  ;      if  ( res Id != null )  {         return res Id ;      } else {         throwable To Check = throwable To Check . get Cause (  )  ;          depth To Go-- ;          if  ( depth To Go <= 0 || throwable To Check == throwable || throwable To Check == null )  {             //  No  Event Bus instance here              Logger logger =  Logger .  Default . get (  )  ;              logger . log (  Level . FINE, "" No specific message resource ID found for "" + throwable )  ;              // return config . default Error Msg Id ;              return null ;          }     } }}"
7246,"void shift Pc ( int where, int gap Length, boolean exclusive ) { int n = table Length (  )  ;  for  ( int i = 0 ;  i < n ;  ++i )  {     int pos = i * 4 + 2 ;      int pc =  Byte Array . read U16bit ( info, pos )  ;      if  ( pc > where ||  ( exclusive && pc == where )  )           Byte Array . write16bit ( pc + gap Length, info, pos )  ;  }}"
7247,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
7248,"public com . anychart . core . annotations .  Fibonacci Arc width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
7249,"public com . anychart . core .  Separate Chart get Chart (  ) { return new com . anychart . core .  Separate Chart ( js Base + "" . get Chart (  ) "" )  ; }"
7250,public int get Item Code (  ) { return has Readme ? 2 : 1 ; }
7251,"public com . anychart . charts .  Heat Map margin (  Number value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, value3, value4 )  )  ;  return this ; }"
7252,public static void log Error (  Network Request Metric Builder builder ) { if  ( !builder . has Http Response Code (  )  )  {     builder . set Network Client Error Reason (  )  ;  } builder . build (  )  ; }
7253,"static  String upper Case First Letter (  String name ) { int first Letter Index = 0 ;  int limit = name . length (  )  - 1 ;  for  (  ;  ! Character . is Letter ( name . char At ( first Letter Index )  )  && first Letter Index < limit ;  ++first Letter Index )   ;  char first Letter = name . char At ( first Letter Index )  ;  if  (  Character . is Upper Case ( first Letter )  )  {     // The letter is already uppercased, return the original     return name ;  } char uppercased =  Character . to Upper Case ( first Letter )  ;  if  ( first Letter Index == 0 )  {     // First character in the string is the first letter, saves 1 substring     return uppercased + name . substring ( 1 )  ;  } return name . substring ( 0, first Letter Index )  + uppercased + name . substring ( first Letter Index + 1 )  ; }"
7254,"public com . anychart . core .  Separate Chart padding (  String value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
7255,private void copy Breakpoints From (  Source Info old ) { int end = old . breakpoints . length ;  if  ( end > this . breakpoints . length )  {     end = this . breakpoints . length ;  } for  ( int line = 0 ;  line != end ;  ++line )  {     if  ( old . breakpoints [ line ]  )  {         this . breakpoints [ line ]  = true ;      } }}
7256,"public com . anychart . charts .  Pareto hatch Fill Palette (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill Palette ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7257,"private void animate View ( final  View target, final int type ) { if  ( ANIMATION_EXPAND == type && target . get Visibility (  )  == VISIBLE )  {     return ;  } if  ( ANIMATION_COLLAPSE == type && target . get Visibility (  )  != VISIBLE )  {     return ;  } if  ( m Default Anim Executor != null )  {     m Default Anim Executor . execute Anim ( target, type )  ;  }}"
7258,public void add Request Filter (  Request Filter filter ) { add First Http Filter Factory ( new  Request Filter Adapter .  Filter Source ( filter )  )  ; }
7259,"public  Map< String,  Integer> get Commands Map (  ) { return null ; }"
7260,"public com . anychart . charts .  Cartesian bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
7261,"private  Method Spec generate Generated Request Option Equivalent (  Method Spec request Option Method ) {  Code Block call Request Options Method =  Code Block . builder (  )  . add ( "" . $N ( "", request Option Method . name )  . add (  Fluent Iterable . from ( request Option Method . parameters )  . transform ( new  Function< Parameter Spec,  String> (  )  {     @ Override     public  String apply (  Parameter Spec input )  {         return input . name ;      } } )  . join (  Joiner . on ( "", "" )  )  )  . add ( "" )  ; \n"" )  . build (  )  ;   Method Spec .  Builder result =  Method Spec . method Builder ( request Option Method . name )  . add Javadoc ( processor Util . generate See Method Javadoc ( request Options Class Name, request Option Method )  )  . add Modifiers (  Modifier . PUBLIC )  . varargs ( request Option Method . varargs )  . add Annotations (  Fluent Iterable . from ( request Option Method . annotations )  . filter ( new  Predicate< Annotation Spec> (  )  {     @ Override     public boolean apply (  Annotation Spec input )  {         return !input . type . equals (  Type Name . get (  Override . class )  )  && // non-final to allow for mocking .          !input . type . equals (  Type Name . get (  Safe Varargs . class )  )  && //  We need to combine warnings below .          !input . type . equals (  Type Name . get (  Suppress Warnings . class )  )  ;      } } )  . to List (  )  )  . add Type Variables ( request Option Method . type Variables )  . add Parameters ( request Option Method . parameters )  . returns ( generated Request Builder Of Transcode Type )  . add Code ( ""return  ( $T )  super"", generated Request Builder Of Transcode Type )  . add Code ( call Request Options Method )  ;   Annotation Spec suppress Warnings = build Suppress Warnings ( request Option Method )  ;  if  ( suppress Warnings != null )  {     result . add Annotation ( suppress Warnings )  ;  } return result . build (  )  ; }"
7262,"private void delete Old Packs (  Collection< Pack> old Packs,  Collection< Pack> new Packs )  throws  Parse Exception, IO Exception{  Hash Set< Object Id> ids = new  Hash Set<> (  )  ;  for  (  Pack pack : new Packs )  {     for  (  Pack Index .  Mutable Entry entry : pack )  {         ids . add ( entry . to Object Id (  )  )  ;      } }  Object Reader reader = repo . new Object Reader (  )  ;   Object Directory dir = repo . get Object Database (  )  ;   Object Directory Inserter inserter = dir . new Inserter (  )  ;  boolean should Loosen = //$NON-NLS-1$ !""now"" . equals ( get Prune Expire Str (  )  )  && get Expire Date (  )  <  Long . MAX_VALUE ;  prune Preserved (  )  ;  long pack Expire Date = get Pack Expire Date (  )  ;  old Pack Loop: for  (  Pack old Pack : old Packs )  {     check Cancelled (  )  ;       String old Name = old Pack . get Pack Name (  )  ;      // pack files .   Then we must not delete it .      for  (  Pack new Pack : new Packs )  if  ( old Name . equals ( new Pack . get Pack Name (  )  )  )          continue old Pack Loop ;      if  ( !old Pack . should Be Kept (  )  && repo . get FS (  )  . last Modified Instant ( old Pack . get Pack File (  )  )  . to Epoch Milli (  )  < pack Expire Date )  {         old Pack . close (  )  ;          if  ( should Loosen )  {             loosen ( inserter, reader, old Pack, ids )  ;          }         prune Pack ( old Pack . get Pack File (  )  )  ;      } } // close the complete object database .   That's my only chance to force // rescanning and to detect that certain pack files are now deleted .  repo . get Object Database (  )  . close (  )  ; }"
7263,private void run In Main Thread (  Runnable runnable ) { if  (  Looper . get Main Looper (  )  . get Thread (  )  !=  Thread . current Thread (  )  )  {     m Handler . post ( runnable )  ;  } else {     runnable . run (  )  ;  }}
7264,public boolean is Refresh Layout (  ) { return m Layout State . m On Refres Layout ; }
7265,public int hash Code (  ) { return  System . identity Hash Code ( this )  ; }
7266,"public void redirect Method Call (  String old Method Name,  Ct Method new Method )  throws  Cannot Compile Exception{ transformers = new  Transform Call ( transformers, old Method Name, new Method )  ; }"
7267,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
7268,public boolean get Indicators Enabled (  ) { return indicators Enabled ; }
7269,"public static  Function< Item,  Double> variance (  String num List Field ) { return new  Field Variance Statistic ( num List Field )  ; }"
7270,public int get Client Queue Size (  ) { return client Queue Size ; }
7271,"public  Async Result<T> submit ( final  Async Task<T> task ) { if  ( executor . is Shutdown (  )  )  {     throw new  Gdx Runtime Exception ( "" Cannot run tasks on an executor that has been shutdown  ( disposed ) "" )  ;  } return new  Async Result ( executor . submit ( new  Callable<T> (  )  {     @ Override     public T call (  )  throws  Exception {         return task . call (  )  ;      } } )  )  ; }"
7272,public boolean is Preview Active (  ) { return preview Active ; }
7273,public int get Concurrency Level (  ) { return concurrency Level ; }
7274,public void set On Swipe Listener (  On Swipe Listener on Swipe Listener ) { if  ( on Swipe Listener != null )      m Is Swipeable = true ;  else     m Is Swipeable = false ;  this . m On Swipe Listener = on Swipe Listener ; }
7275,"public boolean auto Load More (  ) { return auto Load More ( 0, m Rebound Duration,  ( m Footer Max Drag Rate + m Footer Trigger Rate )  / 2, false )  ; }"
7276,"private boolean handle Static Opcode (  String owner,  String name,  String desc, boolean itf ) { if  ( DEBUG )  {      System . out . println ( "" Static  Method : "" + name + "":"" + desc + "":"" + itf + "":"" + is Static )  ;  }  Access Right access Right = get Method Access Right ( owner, name, desc )  ;  if  ( access Right ==  Access Right . PUBLIC )  {     return false ;  } // for anything else, private, protected and package private, we must go through // reflection .  // stack: <param_1> //      <param_2> //       .  .  .  //      <param_n> push Method Redirect Arguments On Stack ( name, desc )  ;  // push the class implementing the original static method visit Ldc Insn (  Type . get Type ( ""L"" + owner + "" ; "" )  )  ;  // stack: <boxed method parameter> //      <target parameter types> //      <target method name> //      <target class name> invoke Static ( ALI_RUNTIME_TYPE,  Method . get Method ( "" Object invoke Protected Static Method (  Object [  ] ,  Class [  ] ,  String,  Class ) "" )  )  ;  // stack : method return value or null if the method was VOID .  handle Return Type ( desc )  ;  return true ; }"
7277,"public void x (  Vector2 p, float size ) { x ( p . x, p . y, size )  ; }"
7278,"public void max Point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Point Width (  )  ; "" )  ; }"
7279,"public com . anychart . charts .  Scatter select Marquee Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7280,"public  String filename For (  Build Target target,  String name,  Cxx Platform cxx Platform ) { return filename Map . apply ( target, name, cxx Platform )  ; }"
7281,"private  Exception get Exception Chain ( int size ) {  Exception root = new  Exception ( ""0"" )  ;  for  ( int i = 1 ;  i < size ;  i++ )  {     root = new  Exception (  String . value Of ( i ) , root )  ;  } return root ; }"
7282,public  Live Data< List< Provisioned Mesh Node>> get Nodes (  ) { return m Nrf Mesh Repository . get Nodes (  )  ; }
7283,"public  Undo Helper with Action Text Color ( @ Color Int int color ) {  Log . d ( "" With custom Action Text Color"" )  ;  this . m Action Text Color = color ;  return this ; }"
7284,"public boolean use Flavored Cxx Sections (  ) { return delegate . get Boolean ( APPLE_SECTION, ""use_flavored_cxx_sections"" )  . or Else ( false )  ; }"
7285,public void set Animation Backend ( @ Nullable  Animation Backend animation Backend ) { m Animation Backend = animation Backend ;  if  ( m Animation Backend != null )  {     m Frame Scheduler = new  Drop Frames Frame Scheduler ( m Animation Backend )  ;      m Animation Backend . set Bounds ( get Bounds (  )  )  ;      if  ( m Drawable Properties != null )  {         // re-apply to the same drawable so that the animation backend is updated .          m Drawable Properties . apply To ( this )  ;      } } m Frame Scheduler = create Scheduler For Backend And Delay Method ( m Animation Backend )  ;  stop (  )  ; }
7286,"public static void invalidate All Cubemaps (  Application app ) {  Array< Cubemap> managed Cubemap Array = managed Cubemaps . get ( app )  ;  if  ( managed Cubemap Array == null )      return ;  if  ( asset Manager == null )  {     for  ( int i = 0 ;  i < managed Cubemap Array . size ;  i++ )  {          Cubemap cubemap = managed Cubemap Array . get ( i )  ;          cubemap . reload (  )  ;      } } else {     // first we have to make sure the  Asset Manager isn't loading anything anymore,     // otherwise the ref counting trick below wouldn't work  ( when a cubemap is     // currently on the task stack of the manager .  )      asset Manager . finish Loading (  )  ;      // next we go through each cubemap and reload either directly or via the     // asset manager .       Array< Cubemap> cubemaps = new  Array< Cubemap> ( managed Cubemap Array )  ;      for  (  Cubemap cubemap : cubemaps )  {          String file Name = asset Manager . get Asset File Name ( cubemap )  ;          if  ( file Name == null )  {             cubemap . reload (  )  ;          } else {             // get the ref count of the cubemap, then set it to 0 so we             // can actually remove it from the assetmanager .   Also set the             // handle to zero, otherwise we might accidentially dispose             // already reloaded cubemaps .              final int ref Count = asset Manager . get Reference Count ( file Name )  ;              asset Manager . set Reference Count ( file Name, 0 )  ;              cubemap . gl Handle = 0 ;              // create the parameters, passing the reference to the cubemap as             // well as a callback that sets the ref count .               Cubemap Parameter params = new  Cubemap Parameter (  )  ;              params . cubemap Data = cubemap . get Cubemap Data (  )  ;              params . min Filter = cubemap . get Min Filter (  )  ;              params . mag Filter = cubemap . get Mag Filter (  )  ;              params . wrap U = cubemap . get U Wrap (  )  ;              params . wrap V = cubemap . get V Wrap (  )  ;              // special parameter which will ensure that the references stay the same .              params . cubemap = cubemap ;              params . loaded Callback = new  Loaded Callback (  )  {                 @ Override                 public void finished Loading (  Asset Manager asset Manager,  String file Name,  Class type )  {                     asset Manager . set Reference Count ( file Name, ref Count )  ;                  }             } ;              // unload the c, create a new gl handle then reload it .              asset Manager . unload ( file Name )  ;              cubemap . gl Handle =  Gdx . gl . gl Gen Texture (  )  ;              asset Manager . load ( file Name,  Cubemap . class, params )  ;          }     }     managed Cubemap Array . clear (  )  ;      managed Cubemap Array . add All ( cubemaps )  ;  }}"
7287,"protected void fit Text (  Char Sequence text ) { if  ( !m Need Fit )  {     return ;  } if  ( !m Measured || m Fitting Text || m Single Line ||  Text Utils . is Empty ( text )  )      return ;  m Fitting Text = true ;   Text Paint old Paint = get Paint (  )  ;  float size = get Fit Text Helper (  )  . fit Text Size ( old Paint, text, m Max Text Size, m Min Text Size )  ;  super . set Text Size (  Typed Value . COMPLEX_UNIT_PX, size )  ;  super . set Text ( get Fit Text Helper (  )  . get Line Breaks ( text, get Paint (  )  )  )  ;  m Fitting Text = false ; }"
7288,"public static  Class<?> get Map Key Type (  Class<? extends  Map> map Class ) { return extract Type From Class ( map Class,  Map . class, 0 )  ; }"
7289,public  Share Messenger Action Button get Button (  ) { return button ; }
7290,"public static  Increasing Quality Data Source Supplier<T> create (  List< Supplier< Data Source<T>>> data Source Suppliers ) { return create ( data Source Suppliers, false )  ; }"
7291,public static  Transform Gesture Detector new Instance (  ) { return new  Transform Gesture Detector (  Multi Pointer Gesture Detector . new Instance (  )  )  ; }
7292,public final void enqueue (  ) { super . enqueue (  )  ; }
7293,"public static  Immutable Double Array of ( double e0, double e1, double e2, double e3, double e4, double e5 ) { return new  Immutable Double Array ( new double [  ]  { e0, e1, e2, e3, e4, e5 } )  ; }"
7294,"public final  String get Bluetooth MAC (  ) {  String result = ""00:00:00:00:00:00"" ;  if  (  Permission Util . has Permission ( context,  Manifest . permission . BLUETOOTH )  )  {     if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . M &&  Build . VERSION . SDK_INT <  Build . VERSION_CODES . O )  {         //  Hardware ID are restricted in  Android 6+         // https://developer . android . com/about/versions/marshmallow/android-6 . 0-changes . html#behavior-hardware-id         //  Getting bluetooth mac via reflection for devices with  Android 6+         result = android . provider .  Settings .  Secure . get String ( context . get Content Resolver (  ) , ""bluetooth_address"" )  ;      } else {          Bluetooth Adapter bta =  Bluetooth Adapter . get Default Adapter (  )  ;          result = bta != null ? bta . get Address (  )  : result ;      } } return  Check Validity Util . check Valid Data ( result )  ; }"
7295,"public synchronized  External Adapt Manager add External Adapt Info Of Activity (  Class<?> target Class,  External Adapt Info info ) {  Preconditions . check Not Null ( target Class, ""target Class == null"" )  ;  if  ( !is Run )  {     is Run = true ;  } if  ( m External Adapt Infos == null )  {     m External Adapt Infos = new  Hash Map<> ( 16 )  ;  } m External Adapt Infos . put ( target Class . get Canonical Name (  ) , info )  ;  return this ; }"
7296,"public  Builder callback Executor (  Executor executor ) { this . callback Executor =  Objects . require Non Null ( executor, ""executor == null"" )  ;  return this ; }"
7297,public void reset Zoom (  ) { normalized Scale = 1 ;  fit Image To View (  )  ; }
7298,"private static  Drm Init Data get Drm Init Data From Atoms (  List< Atom .  Leaf Atom> leaf Children ) {  Array List< Scheme Data> scheme Datas = null ;  int leaf Children Size = leaf Children . size (  )  ;  for  ( int i = 0 ;  i < leaf Children Size ;  i++ )  {      Leaf Atom child = leaf Children . get ( i )  ;      if  ( child . type ==  Atom . TYPE_pssh )  {         if  ( scheme Datas == null )  {             scheme Datas = new  Array List<> (  )  ;          }         byte [  ]  pssh Data = child . data . data ;          UUID uuid =  Pssh Atom Util . parse Uuid ( pssh Data )  ;          if  ( uuid == null )  {              Log . w ( TAG, "" Skipped pssh atom  ( failed to extract uuid ) "" )  ;          } else {             scheme Datas . add ( new  Scheme Data ( uuid,  Mime Types . VIDEO_MP4, pssh Data )  )  ;          }     } } return scheme Datas == null ? null : new  Drm Init Data ( scheme Datas )  ; }"
7299,public int get Hdr Value (  ) { return hdr_ ; }
7300,public int get Transition Steps (  ) { return m Transition Steps ; }
7301,public  Text get Title (  ) { return title ; }
7302,"private static boolean equals Instruction (  List< Instruction> a,  List< Instruction> b ) { if  ( a . size (  )  != b . size (  )  )  {     return false ;  }  Instruction at, bt ;  for  ( int i = 0 ;  i < a . size (  )  ;  i++ )  {     at = a . get ( i )  ;      bt = b . get ( i )  ;      if  ( !at . get Opcode (  )  . equals ( bt . get Opcode (  )  )  || ! ( at . get Code Units (  )  == bt . get Code Units (  )  )  )  {         return false ;      } } return true ; }"
7303,"public  Iterator<T> iterator (  ) { if  (  Collections . allocate Iterators )      return new  Queue Iterator ( this, true )  ;  if  ( iterable == null )      iterable = new  Queue Iterable ( this )  ;  return iterable . iterator (  )  ; }"
7304,public  Container Type get Lowest Container (  ) { return this . lowest Container ; }
7305,public  String get Object Id (  ) { return name ; }
7306,"public com . anychart . core . gantt . elements .  Progress Element stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7307,public  Pull Command pull (  ) { return new  Pull Command ( repo )  ; }
7308,"public static boolean is Connection Open (  Http Servlet Request request ) { return is Connection Open ( request, "" "" . get Bytes (  )  )  ; }"
7309,public void swap Data List (  List<T> new Data List ) { this . data List . clear (  )  ;  invalidate Structure (  )  ;  add Items In Grid ( new Data List )  ; }
7310,"public void same Locals ( int pos, int offset Delta, int stack Tag, int stack Data )  throws  Bad Bytecode{}"
7311,"public synchronized void set Hue ( final int hue ) { if  ( m Native Ptr != 0 )  {     final float range =  Math . abs ( m Hue Max - m Hue Min )  ;      if  ( range > 0 )          native Set Hue ( m Native Ptr,  ( int )   ( hue / 100 . f * range )  + m Hue Min )  ;  }}"
7312,"private static  Loading Cache< Path,  File Tree Cache> create File Tree Cache Per Cell Map (  Event Bus file Event Bus ) { return  Cache Builder . new Builder (  )  . build ( new  Cache Loader< Path,  File Tree Cache> (  )  {     @ Override     public  File Tree Cache load (  Path path )  {          File Tree Cache cache =  File Tree Cache . of ( path )  ;          file Event Bus . register ( cache . get Invalidator (  )  )  ;          return cache ;      } } )  ; }"
7313,"public static int get Next Repeat Mode ( @ Player .  Repeat Mode int current Mode, int enabled Modes ) { for  ( int offset = 1 ;  offset <= 2 ;  offset++ )  {     @ Player .  Repeat Mode int proposed Mode =  ( current Mode + offset )  % 3 ;      if  ( is Repeat Mode Enabled ( proposed Mode, enabled Modes )  )  {         return proposed Mode ;      } } return current Mode ; }"
7314,private void add Experiments (  List< Abt Experiment Info> experiments To Add ) {  Deque< Conditional User Property> deque Of Experiments In Analytics = new  Array Deque<> ( get All Experiments In Analytics (  )  )  ;  int fetched Max User Properties = get Max User Properties In Analytics (  )  ;  for  (  Abt Experiment Info experiment To Add : experiments To Add )  {     while  ( deque Of Experiments In Analytics . size (  )  >= fetched Max User Properties )  {         remove Experiment From Analytics ( deque Of Experiments In Analytics . poll First (  )  . name )  ;      }      Conditional User Property experiment = experiment To Add . to Conditional User Property ( origin Service )  ;      add Experiment To Analytics ( experiment )  ;      deque Of Experiments In Analytics . offer ( experiment )  ;  }}
7315,private void set Audio Size (  ) { byte [  ]  frame Size Buffer = new byte [ VBRI_AUDIOSIZE_BUFFER_SIZE ]  ;  header . get ( frame Size Buffer )  ;  boolean audio Size Enabled = true ;  audio Size =  ( frame Size Buffer [ BYTE_1 ]  << 24 )  & 0x FF000000 |  ( frame Size Buffer [ BYTE_2 ]  << 16 )  & 0x00 FF0000 |  ( frame Size Buffer [ BYTE_3 ]  << 8 )  & 0x0000 FF00 | frame Size Buffer [ BYTE_4 ]  & 0x000000 FF ; }
7316,public boolean is Valid Input (  ) { return validate Input (  )  . is Empty (  )  ; }
7317,public boolean get Wrap (  ) { return wrap ; }
7318,"public com . anychart . core . stock . scrollerseries .  Step Area bottom (  String bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", wrap Quotes ( bottom )  )  )  ;  return this ; }"
7319,public  String type (  ) { return type ; }
7320,"public com . anychart . core . map . series .  Choropleth hovered (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hovered ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7321,public void set Web Line Width ( float width ) { m Web Line Width =  Utils . convert Dp To Pixel ( width )  ; }
7322,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
7323,"public static  Typeface walkway Oblique Black (  Context context ) { return  Font Source Processor . process ( R . raw . walkway_oblique_black, context )  ; }"
7324,public T5 get Value5 (  ) { return value5 ; }
7325,static  Step Execution Result of ( int exit Code ) { return new  Builder (  )  . set Exit Code ( exit Code )  . build (  )  ; }
7326,"public  Flowable< Object> as Rx Flowable ( @ Non Null  Backpressure Strategy backpressure Strategy ) { return  Rx Java Utils . create Flowable ( stor IOSQ Lite, this, backpressure Strategy )  ; }"
7327,View get Undo View (  ) { return m Undo View ; }
7328,"public  Object eval (  Class base Type, int dimensions,  Call Stack callstack,  Interpreter interpreter )  throws  Eval Error{ int num Initializers = jjt Get Num Children (  )  ;  // allocate the array to store the initializers // description of the array int [  ]  dima = new int [ dimensions ]  ;  //  The other dimensions default to zero and are assigned when  // the values are set .  dima [ 0 ]  = num Initializers ;   Object initializers =  Array . new Instance ( base Type, dima )  ;  //  Evaluate the initializers for  ( int i = 0 ;  i < num Initializers ;  i++ )  {      Simple Node node =  (  Simple Node )  jjt Get Child ( i )  ;       Object current Initializer ;      if  ( node instanceof BSH Array Initializer )  {         if  ( dimensions < 2 )              throw new  Eval Error ( "" Invalid  Location for  Intializer, position: "" + i, this, callstack )  ;          current Initializer =  (  ( BSH Array Initializer )  node )  . eval ( base Type, dimensions - 1, callstack, interpreter )  ;      } else         current Initializer = node . eval ( callstack, interpreter )  ;      if  ( current Initializer ==  Primitive . VOID )          throw new  Eval Error ( "" Void in array initializer, position"" + i, this, callstack )  ;      //  Determine if any conversion is necessary on the initializers .      //     //  Quick test to see if conversions apply:     //  If the dimensionality of the array is 1 then the elements of     // the initializer can be primitives or boxable types .    If it is     // greater then the values must be array  ( object )  types and there     // are currently no conversions that we do on those .      //  If we have conversions on those in the future then we need to     // get the real base type here instead of the dimensionless one .       Object value = current Initializer ;      if  ( dimensions == 1 )  {         // the cast there when we tighten control         try {             value =  Types . cast Object ( current Initializer, base Type,  Types . CAST )  ;          } catch  (  Util Eval Error e )  {             throw e . to Eval Error ( "" Error in array initializer"", this, callstack )  ;          }         // unwrap any primitive, map voids to null, etc .          value =  Primitive . unwrap ( value )  ;      }     // store the value in the array     try {          Array . set ( initializers, i, value )  ;      } catch  (  Illegal Argument Exception e )  {          Interpreter . debug ( ""illegal arg"" + e )  ;          throw Type Error ( base Type, current Initializer, i, callstack )  ;      } catch  (  Array Store Exception e )  {         // I think this can happen          Interpreter . debug ( ""arraystore"" + e )  ;          throw Type Error ( base Type, current Initializer, i, callstack )  ;      } } return initializers ; }"
7329,"public com . anychart . core . utils .  Chart A11y a11y (  ) { return new com . anychart . core . utils .  Chart A11y ( js Base + "" . a11y (  ) "" )  ; }"
7330,"public com . anychart . charts .  Gantt row Stroke (  String color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Stroke ( %s )  ; "", wrap Quotes ( color )  )  )  ;  return this ; }"
7331,"public static void i (  String tag,  String s,  Throwable e ) { if  ( LOG . INFO >= LOGLEVEL )       Log . i ( tag, s, e )  ; }"
7332,"public  Stream< Build Rule> get Deps (  Source Path Rule Finder rule Finder ) {  Stream .  Builder< Build Rule> builder =  Stream . builder (  )  ;  rule Finder . get Rule ( get Root (  )  )  . if Present ( builder )  ;  if  ( get Include Root (  )  . is Right (  )  )  {     rule Finder . get Rule ( get Include Root (  )  . get Right (  )  )  . if Present ( builder )  ;  } get Header Map (  )  . flat Map ( rule Finder::get Rule )  . if Present ( builder )  ;  // return a stream of the cached dependencies, or compute and store it return  Stream . concat ( computed Deps . get (  )  . or Else Get (  (  )  -> {     //  We can cache the list here because get Name To Path Map (  )  is an  Immutable Map,     // and if a value in the map is not in rule Finder, an exception will be     // thrown .   Since rule Finder rules only increase, the output of this will never     // change if we do not get an exception .       Immutable List .  Builder< Build Rule> cached Builder =  Immutable List . builder (  )  ;      get Name To Path Map (  )  . values (  )  . for Each (  value -> rule Finder . get Rule ( value )  . if Present ( cached Builder::add )  )  ;       Immutable List< Build Rule> rules = cached Builder . build (  )  ;      computed Deps . set (  Optional . of ( rules )  )  ;      return rules ;  } )  . stream (  ) , builder . build (  )  )  . distinct (  )  ; }"
7333,public void set Upstream Format Change Listener (  Upstream Format Changed Listener listener ) { upstream Format Change Listener = listener ; }
7334,protected void populate Tree Props ( @ Nullable  Tree Props parent Tree Props ) {}
7335,"public void add (  Dir Cache Entry new Entry ) { if  ( new Entry . get Raw Mode (  )  == 0 )      throw new  Illegal Argument Exception (  Message Format . format ( J Git Text . get (  )  . file Mode Not Set For Path, new Entry . get Path String (  )  )  )  ;  before Add ( new Entry )  ;  fast Add ( new Entry )  ; }"
7336,"public void test Empty Config (  ) {  Alias Config empty Config =  Alias Config . from (  Fake Buck Config . builder (  )  . build (  )  )  ;  assert Equals (  Immutable Map . < String,  String>of (  ) , empty Config . get Entries (  )  )  ;  assert Equals (  Immutable Set . of (  ) , empty Config . get Build Target For Alias As String ( ""fb4a"" )  )  ; }"
7337,"public void test Should Export Delivery Metrics To Big Query_none Manifest None Setter (  ) { assert Manifest Field With Value ( MANIFEST_DELIVERY_METRICS_EXPORT_TO_BIG_QUERY_ENABLED, null )  ;  assert Preferences Field With Value ( DELIVERY_METRICS_EXPORT_TO_BIG_QUERY_PREF, null )  ;  assert That (  Messaging Analytics . delivery Metrics Export To Big Query Enabled (  )  )  . is False (  )  ; }"
7338,public  Pack Statistics get Pack Stats (  ) { return pack Stats ; }
7339,"public static int get Nav Menu Height (  Context context ) { if  ( !is Nav Menu Exist ( context )  )  {     return 0 ;  } int resource Nav Height = get Resource Nav Height ( context )  ;  if  ( resource Nav Height >= 0 )  {     return resource Nav Height ;  } // 小米 MIX 有nav bar, 而 get Real Screen Size ( context )  [ 1 ]  - get Screen Height ( context )  = 0 return get Real Screen Size ( context )  [ 1 ]  - get Screen Height ( context )  ; }"
7340,"public com . anychart . core .  State Settings selected (  ) { return new com . anychart . core .  State Settings ( js Base + "" . selected (  ) "" )  ; }"
7341,public static void clear ( @ Non Null final  Cache Memory Utils cache Memory Utils ) { cache Memory Utils . clear (  )  ; }
7342,"public com . anychart . core . polar . series .  Range Column bounds (  String x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
7343,public void set Break On Exceptions ( boolean break On Exceptions ) { this . break On Exceptions = break On Exceptions ; }
7344,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
7345,public void set Show Mode (  Show Mode mode ) { m Show Mode = mode ;  request Layout (  )  ; }
7346,public void write (  Writable Byte Channel channel )  throws IO Exception{}
7347,"public com . anychart . core . resource .  Logo corners (  String top Left,  Number top Right,  String bottom Right,  String bottom Left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . corners ( %s, %s, %s, %s )  ; "", wrap Quotes ( top Left ) , top Right, wrap Quotes ( bottom Right ) , wrap Quotes ( bottom Left )  )  )  ;  return this ; }"
7348,public  Immersion Bar flyme OS Status Bar Font Color Int ( @ Color Int int flyme OS Status Bar Font Color ) { m Bar Params . flyme OS Status Bar Font Color = flyme OS Status Bar Font Color ;  m Bar Params . flyme OS Status Bar Font Temp Color = m Bar Params . flyme OS Status Bar Font Color ;  return this ; }
7349,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
7350,"public com . anychart . charts .  Stock bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
7351,public void set On Color Changed Listener (  On Color Changed Listener listener ) { m Listener = listener ; }
7352,"public com . anychart . core . ui .  Crosshair Label selectable (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selectable ( %s )  ; "", enabled )  )  ;  return this ; }"
7353,"public com . anychart . core . annotations .  Horizontal Line bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
7354,public void clear (  ) { from List . clear (  )  ; }
7355,public  String get Watchman Error Message (  ) { return watchman Error Message ; }
7356,protected final long bytes Skipped (  ) { return bytes Skipped ; }
7357,"public void test Configure Bounds_CENTER_CROP_V (  ) {  Rect bounds = new  Rect ( 10, 10, 410, 310 )  ;  int width = 200 ;  int height = 300 ;   Matrix expected Matrix = new  Matrix (  )  ;  expected Matrix . set Scale ( 2 . 0f, 2 . 0f )  ;  expected Matrix . post Translate ( 10, -139 )  ;  test Configure Bounds ( bounds, width, height,  Scale Type . CENTER_CROP, null, expected Matrix )  ; }"
7358,public void on Change (  ) {}
7359,"public com . anychart . core . annotations .  Fibonacci Arc stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7360,public int get Label (  ) { return label ; }
7361,"public static void create Multiple Account Public Client Application ( @ Non Null final  Context context, final int config File Resource Id, @ Non Null final I Multiple Account Application Created Listener listener ) { validate Non Null Argument ( context, NONNULL_CONSTANTS . CONTEXT )  ;  validate Non Null Argument ( listener, NONNULL_CONSTANTS . LISTENER )  ;  run On Background ( new  Runnable (  )  {     @ Override     public void run (  )  {         create Multiple Account Public Client Application ( initialize Configuration ( context, config File Resource Id ) , listener )  ;      } } )  ; }"
7362,"public void dispose (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . dispose (  )  ; "" )  ; }"
7363,"public com . anychart . core . utils .  Margin margin (  ) { return new com . anychart . core . utils .  Margin ( js Base + "" . margin (  ) "" )  ; }"
7364,public E get Value (  ) { return value ; }
7365,public final boolean has Messages ( int what ) { return m Exec . has Messages ( what )  ; }
7366,"public static int get Position For View ( @ Non Null final  List View Wrapper list View Wrapper, @ Non Null final  View view ) { return list View Wrapper . get Position For View ( view )  - list View Wrapper . get Header Views Count (  )  ; }"
7367,"private static void get And Set Language Standard Value (  Immutable Map .  Builder< String,  String> settings Builder,  List< String> cxx Flags,  Map< String,  String> appended Settings ) {  String clang Cxx Language Standard Value = get Config Value For Key ( CLANG_CXX_LANGUAGE_STANDARD, appended Settings, ""-std="",  Optional . empty (  ) , cxx Flags )  ;  if  ( clang Cxx Language Standard Value != null )  {     settings Builder . put ( CLANG_CXX_LANGUAGE_STANDARD, clang Cxx Language Standard Value )  ;  }}"
7368,"public void to Json (  Boolean stringify ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Json ( %s )  ; "", stringify )  )  ; }"
7369,public  Typeface get Expanded Title Typeface (  ) { return m Collapsing Text Helper . get Expanded Typeface (  )  ; }
7370,public static long increment Component State Update Async Count (  ) { return s Component Triggered Async State Update Count . add And Get ( 1 )  ; }
7371,"public  Byte Buffer convert (  Tag tag )  throws  Unsupported Encoding Exception{ return convert ( tag, 0 )  ; }"
7372,"private static  Register Spec List get Regs (  Insn insn ) { return get Regs ( insn, insn . get Result (  )  )  ; }"
7373,"private int add String (  String str ) {  Integer existing Offset = added Strings . get ( str )  ;  if  ( existing Offset != null )  {     return existing Offset ;  } // NOPMD declaration unreferenced before possible exit .  int offset = string Table . size (  )  ;  try {     string Table . write ( str . get Bytes ( DEFAULT_CHARSET )  )  ;  } catch  ( IO Exception e )  {     throw new  Illegal State Exception ( "" Byte Array Output Stream should not throw IO Exceptions . "", e )  ;  } string Table . write ( 0 )  ;  added Strings . put ( str, offset )  ;  return offset ; }"
7374,"public com . anychart . charts .  Sparkline min Fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
7375,public  List< User> get Orgs ( boolean force Reload )  throws IO Exception{ return force Reload ? db Cache . request And Store ( user And Orgs Resource )  : db Cache . load Or Request ( user And Orgs Resource )  ; }
7376,public void clean Events (  ) { event Records . remove (  )  ; }
7377,public  View get Separator (  ) { return m Tutorial . get Separator (  )  ; }
7378,public  Annotations get ( int n ) { return  (  Annotations )  get0 ( n )  ; }
7379,"public com . anychart . core .  Separate Chart credits (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . credits ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
7380,"public com . anychart . charts .  Tree Map margin (  Number [  ]  margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "",  Arrays . to String ( margin )  )  )  ;  return this ; }"
7381,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
7382,"public com . anychart . charts .  Tree Map select Marquee Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7383,public static long get Result Size ( byte [  ]  delta ) { int p = 0 ;  //  Skip length of the base object .  // int c ;  do {     c = delta [ p++ ]  & 0xff ;  } while  (  ( c & 0x80 )  != 0 )  ;  long res Len = 0 ;  int shift = 0 ;  do {     c = delta [ p++ ]  & 0xff ;      res Len |=  (  ( long )   ( c & 0x7f )  )  << shift ;      shift += 7 ;  } while  (  ( c & 0x80 )  != 0 )  ;  return res Len ; }
7384,"public com . anychart . core . gantt .  Data Grid Button font Style (  String style ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Style ( %s )  ; "", wrap Quotes ( style )  )  )  ;  return this ; }"
7385,"public com . anychart . core .  State Settings text Overflow ( com . anychart . graphics . vector . text .  Text Overflow value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Overflow ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
7386,"public  Iterator< Token Cache Item> get All (  ) { @ Suppress Warnings ( ""unchecked"" )   Map< String,  String> results =  (  Map< String,  String> )  m Prefs . get All (  )  ;  // create objects final  List< Token Cache Item> tokens = new  Array List<> ( results . values (  )  . size (  )  )  ;   Iterator< Entry< String,  String>> token Result Entry Set = results . entry Set (  )  . iterator (  )  ;  while  ( token Result Entry Set . has Next (  )  )  {     final  Entry< String,  String> token Entry = token Result Entry Set . next (  )  ;      final  String token Key = token Entry . get Key (  )  ;      final  String token Value = token Entry . get Value (  )  ;      final  String decrypted Value = decrypt ( token Key, token Value )  ;      if  ( decrypted Value != null )  {         final  Token Cache Item token Cache Item = m Gson . from Json ( decrypted Value,  Token Cache Item . class )  ;          tokens . add ( token Cache Item )  ;      } } return tokens . iterator (  )  ; }"
7387,"public  Identify set Once (  String property, double [  ]  values ) { add To User Properties (  Constants . AMP_OP_SET_ONCE, property, double Array To JSON Array ( values )  )  ;  return this ; }"
7388,public  Builder set Media ( @ Nullable final  List< Share Media> media ) { this . media . clear (  )  ;  this . add Media ( media )  ;  return this ; }
7389,"public static void assert Not On Ui Thread (  ) {  Soft Assertions . assert Condition ( !is On Ui Thread (  ) , "" Expected not to run on UI thread!"" )  ; }"
7390,"private void output Block (  Basic Block block, int next Label ) { //  Append the code address for this block .   Code Address start Address = addresses . get Start ( block )  ;  output . add ( start Address )  ;  //  Append the local variable state for the block .  if  ( locals != null )  {      Register Spec Set starts = locals . get Starts ( block )  ;      output . add ( new  Local Snapshot ( start Address . get Position (  ) , starts )  )  ;  } /*      *  Choose and append an output instruction for each original      * instruction .       */ translation Visitor . set Block ( block, addresses . get Last ( block )  )  ;  block . get Insns (  )  . for Each ( translation Visitor )  ;  //  Insert the block end code address .  output . add ( addresses . get End ( block )  )  ;  //  Set up for end-of-block activities .  int succ = block . get Primary Successor (  )  ;   Insn last Insn = block . get Last Insn (  )  ;  if  (  ( succ >= 0 )  &&  ( succ != next Label )  )  {     /*          *  The block has a ""primary successor"" and that primary          * successor isn't the next block to be output .           */      Rop last Rop = last Insn . get Opcode (  )  ;      if  (  ( last Rop . get Branchingness (  )  ==  Rop . BRANCH_IF )  &&  ( block . get Secondary Successor (  )  == next Label )  )  {         /*              *  The block ends with an ""if"" of some sort, and its              * secondary successor  ( the ""then"" )  is in fact the              * next block to output .   So, reverse the sense of              * the test, so that we can just emit the next block              * without an interstitial goto .               */         output . reverse Branch ( 1, addresses . get Start ( succ )  )  ;      } else {         /*              *  Our only recourse is to add a goto here to get the              * flow to be correct .               */          Target Insn insn = new  Target Insn (  Dops . GOTO, last Insn . get Position (  ) ,  Register Spec List . EMPTY, addresses . get Start ( succ )  )  ;          output . add ( insn )  ;      } }}"
7391,public  String get Name (  ) { return field . get Name (  )  ; }
7392,"public static T wait For Success (  Task<T> task )  throws  Exception{ try {     return  Tasks . await ( task, WAIT_DURATION, WAIT_UNIT )  ;  } catch  (  Execution Exception ex )  {      Throwable t = ex . get Cause (  )  ;      if  ( t instanceof  Exception )  {         throw  (  Exception )  t ;      } else if  ( t instanceof  Error )  {         throw  (  Error )  t ;      }     throw new  Illegal State Exception ( "" Task threw unexpected  Throwable"", t )  ;  }}"
7393,public void set Filename Tag Save ( boolean filename Tag Save ) { this . filename Tag Save = filename Tag Save ; }
7394,"public static  Simple Exo Player new Simple Instance (  Context context,  Renderers Factory renderers Factory,  Track Selector track Selector,  Load Control load Control, @ Nullable  Drm Session Manager< Framework Media Crypto> drm Session Manager,  Analytics Collector .  Factory analytics Collector Factory,  Looper looper ) { return new Simple Instance ( context, renderers Factory, track Selector, load Control, drm Session Manager, get Default Bandwidth Meter ( context ) , analytics Collector Factory, looper )  ; }"
7395,"public com . anychart . core . stock . scrollerseries .  Spline bounds (  String x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
7396,"public void start (  ) { float target Scale = limited Scale ( this . target Scale )  ;   Point F target S Center = pan Limited ? limited S Center ( this . target S Center, target Scale )  : this . target S Center ;  anim = new  Anim (  )  ;  anim . scale Start = scale ;  anim . scale End = target Scale ;  anim . time =  System . current Time Millis (  )  ;  anim . s Center End Requested = target S Center ;  anim . s Center Start = get Center (  )  ;  anim . s Center End = target S Center ;  anim . v Focus Start = source To View Coord ( target S Center )  ;  anim . v Focus End = new  Point F ( get Width (  )  / 2, get Height (  )  / 2 )  ;  anim . duration = duration ;  anim . interruptible = interruptible ;  anim . easing = easing ;  anim . time =  System . current Time Millis (  )  ;  if  ( v Focus != null )  {     //  Calculate where translation will be at the end of the anim     float v Translate X End = v Focus . x -  ( target Scale * anim . s Center Start . x )  ;      float v Translate Y End = v Focus . y -  ( target Scale * anim . s Center Start . y )  ;       Scale And Translate sat End = new  Scale And Translate ( target Scale, new  Point F ( v Translate X End, v Translate Y End )  )  ;      //  Fit the end translation into bounds     fit To Bounds ( true, sat End )  ;      //  Adjust the position of the focus point at end so image will be in bounds     anim . v Focus End = new  Point F ( v Focus . x +  ( sat End . translate . x - v Translate X End ) , v Focus . y +  ( sat End . translate . y - v Translate Y End )  )  ;  } invalidate (  )  ; }"
7397,public int get New Pointer Count (  ) { return m Detector . get New Pointer Count (  )  ; }
7398,"public com . anychart . charts .  Pert padding (  String value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
7399,public  List< Integer> get Positions Selected (  ) { return touch Listener . get Positions Selected (  )  ; }
7400,"public  Identify set Once (  String property,  Object value ) {  Amplitude Log . get Logger (  )  . w ( TAG, "" This version of set Once is deprecated .   Please use one with a different signature . "" )  ;  return this ; }"
7401,"public  Category_ Updater update Category (  ) { return new  Category_ Updater ( connection,  Category_ Schema . INSTANCE )  ; }"
7402,"private void end Streak (  ) { if  ( current Streak Length == 0 )  {     return ;  } if  ( current Streak Length == 1 )  {     // A single frame isn't a streak .   Just include the frame as-is in the result .      cleaned Stack Trace . add ( last Stack Frame Element Wrapper )  ;  } else {     //  Add a single frame to the result summarizing the streak of framework frames     cleaned Stack Trace . add ( create Streak Replacement Frame ( current Streak Type, current Streak Length )  )  ;  } clear Streak (  )  ; }"
7403,protected void reset Header Layout (  ) { final int scroll Y =  Math . abs ( get Scroll Y Value (  )  )  ;  final boolean refreshing = is Pull Refreshing (  )  ;  if  ( refreshing && scroll Y <= m Header Height )  {     smooth Scroll To ( 0 )  ;      return ;  } if  ( refreshing )  {     smooth Scroll To ( -m Header Height )  ;  } else {     smooth Scroll To ( 0 )  ;  }}
7404,"public static  Buck Load Argument set Name (  Buck Load Argument buck Load Argument, @ Not Null  String new Name ) {  Optional< Buck Identifier> identifier =  Optional . of Nullable ( buck Load Argument . get Identifier (  )  )  ;  if  ( identifier . is Present (  )  )  {     identifier . get (  )  . set Name ( new Name )  ;  } else {     set Value ( buck Load Argument . get String (  ) , new Name )  ;  } return buck Load Argument ; }"
7405,public  Shader Var element At ( int index ) { return element At (  Integer . to String ( index )  )  ; }
7406,"public static int get MCU Width ( int subsamp )  throws  Exception{ if  ( subsamp < 0 || subsamp >= NUMSAMP )      throw new  Exception ( "" Invalid subsampling type"" )  ;  return mcu Width [ subsamp ]  ; }"
7407,static boolean using Unsafe (  ) { return  ( byte Array instanceof  Unsafe Byte Array )  ; }
7408,"private static  String get String ( final  Usb Device Connection connection, final int id, final int language Count, final byte [  ]  languages ) { final byte [  ]  work = new byte [ 256 ]  ;   String result = null ;  for  ( int i = 1 ;  i <= language Count ;  i++ )  {     int ret = connection . control Transfer ( // USB_DIR_IN | USB_TYPE_STANDARD | USB_RECIP_DEVICE     USB_REQ_STANDARD_DEVICE_GET, USB_REQ_GET_DESCRIPTOR,  ( USB_DT_STRING << 8 )  | id, languages [ i ] , work, 256, 0 )  ;      if  (  ( ret > 2 )  &&  ( work [ 0 ]  == ret )  &&  ( work [ 1 ]  == USB_DT_STRING )  )  {         // skip first two bytes ( b Length & b Descriptor Type ) , and copy the rest to the string         try {             result = new  String ( work, 2, ret - 2, ""UTF-16 LE"" )  ;              if  ( !""Љ"" . equals ( result )  )  {                 // 変なゴミが返ってくる時がある                 break ;              } else {                 result = null ;              }         } catch  ( final  Unsupported Encoding Exception e )  {         // ignore         }     } } return result ; }"
7409,"private static int count Run And Make Ascending (  Object [  ]  a, int lo, int hi ) { if  ( DEBUG )      assert lo < hi ;  int run Hi = lo + 1 ;  if  ( run Hi == hi )      return 1 ;  //  Find end of run, and reverse range if descending if  (  (  (  Comparable )  a [ run Hi++ ]  )  . compare To ( a [ lo ]  )  < 0 )  {     //  Descending     while  ( run Hi < hi &&  (  (  Comparable )  a [ run Hi ]  )  . compare To ( a [ run Hi - 1 ]  )  < 0 )  run Hi++ ;      reverse Range ( a, lo, run Hi )  ;  } else {     //  Ascending     while  ( run Hi < hi &&  (  (  Comparable )  a [ run Hi ]  )  . compare To ( a [ run Hi - 1 ]  )  >= 0 )  run Hi++ ;  } return run Hi - lo ; }"
7410,"public  Reftable Writer sort And Write Refs (  Collection< Ref> refs To Pack )  throws IO Exception{  Iterator< Ref Entry> itr = refs To Pack . stream (  )  . map (  r -> new  Ref Entry ( r, max Update Index - min Update Index )  )  . sorted (  Entry::compare )  . iterator (  )  ;   Ref Entry last = null ;  while  ( itr . has Next (  )  )  {      Ref Entry entry = itr . next (  )  ;      if  ( last != null &&  Entry . compare ( last, entry )  == 0 )  {         throw Illegal Entry ( last, entry )  ;      }     long block Pos = refs . write ( entry )  ;      index Ref ( entry . ref, block Pos )  ;      last = entry ;  } return this ; }"
7411,"public com . anychart . core . stock . scrollerseries .  Step Area bounds ( com . anychart . utils .  Rect Obj bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
7412,"public void set Executor (  Executor executor ) { reflector (  Reflector Async Task Loader . class, real Object )  . set Executor ( executor )  ; }"
7413,"public com . anychart . core . stock . indicators . DMI adx Period (  Number period ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . adx Period ( %s )  ; "", period )  )  ;  return this ; }"
7414,"public com . anychart . core . gantt . edit .  Structure Edit stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7415,"public static  Lifecycle Transformer<T> bind Lifecycle ( @ Non Null  Observable< Lifecycle .  Event> lifecycle ) { return bind ( lifecycle, LIFECYCLE )  ; }"
7416,"static  Diff Result diff ( @ Non Null  List<? extends  Epoxy Model<?>> previous Models, @ Non Null  List<? extends  Epoxy Model<?>> new Models, @ Non Null  Diff Util .  Diff Result differ Result ) { return new  Diff Result ( previous Models, new Models, differ Result )  ; }"
7417,"public com . anychart . charts .  Radar select Marquee Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
7418,"public static byte [  ]  to Byte Array (  Input Stream in )  throws IO Exception{  Byte Array Output Stream out = new  Byte Array Output Stream (  )  ;  copy ( in, out )  ;  return out . to Byte Array (  )  ; }"
7419,"public  Completable as Rx Completable (  ) { return  Rx Java Utils . create Completable ( stor IOSQ Lite, this )  ; }"
7420,"private void generate Unsigned Apk (  File output )  throws IO Exception{  Logger . d ( "" Generate unsigned apk: %s"", output . get Name (  )  )  ;  final  File temp Out Dir = config . m Temp Result Dir ;  if  ( !temp Out Dir . exists (  )  )  {     throw new IO Exception (  String . format ( "" Missing patch unzip files, path=%s\n"", temp Out Dir . get Absolute Path (  )  )  )  ;  }  File Operation . zip Input Dir ( temp Out Dir, output, null )  ;  if  ( !output . exists (  )  )  {     throw new IO Exception (  String . format ( ""can not found the unsigned apk file path=%s"", output . get Absolute Path (  )  )  )  ;  }}"
7421,public int get Section For Position ( int i ) { if  ( get Cursor (  )  == null )  {     return 0 ;  } return m Alphabet Indexer . get Section For Position ( i )  ; }
7422,"private static T find Strictly Enclosing (  Visitor State state,  Class<T> clazz ) { return stream ( state . get Path (  )  . get Parent Path (  )  )  . filter ( clazz::is Instance )  . map ( clazz::cast )  . find Any (  )  . or Else ( null )  ; }"
7423,"public com . anychart . core . annotations .  Infinite Line max Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
7424,protected static  Package Info get Current Web View Package (  ) { return package Info ; }
7425,public int get Retransmission Interval (  ) { return  Publication Settings . get Retransmission Interval ( retransmit Interval Steps )  ; }
7426,public  List<T> get List (  ) { if  ( list == null )  {     return new  Array List<T> (  )  ;  } return new  Array List<T> ( list )  ; }
7427,"public void fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . fill (  )  ; "" )  ; }"
7428,"private static boolean is Valid Icon (  Resources resources, int res Id ) { // if the fix  ( ag/2468399 )  is ever backported to API 26, take SECURITY_PATCH into account .  if  (  Build . VERSION . SDK_INT != VERSION_CODES . O )  {     return true ;  } try {      Drawable icon = resources . get Drawable ( res Id, /* theme= */     null )  ;      if  ( icon instanceof  Adaptive Icon Drawable )  {         //  Adaptive icons without gradients don't cause the crash loop issue but those aren't easy         // to detect .   Thus we reject all adaptive icons .          //  Moreover, an adaptive icon as a notification icon doesn't make sense and won't render         // properly anyway .   ( b/69965470#comment10 )           Log . e ( TAG, "" Adaptive icons cannot be used in notifications .   Ignoring icon id: "" + res Id )  ;          return false ;      } else {         return true ;      } } catch  (  Resources .  Not Found Exception ex )  {      Log . e ( TAG, "" Couldn't find resource "" + res Id + "", treating it as an invalid icon"" )  ;      return false ;  }}"
7429,"public com . anychart . charts .  Radar context Menu (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . context Menu ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7430,"public com . anychart . charts .  Tree Map headers Display Mode ( com . anychart . enums .  Labels Display Mode mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . headers Display Mode ( %s )  ; "",  ( mode != null )  ? mode . get Js Base (  )  : null )  )  ;  return this ; }"
7431,"public  Predicate Matcher<T, V> zoom (  Function<U, V> lens ) { return new  Predicate Matcher<> (  u -> lens . apply ( converter . apply ( u )  )  )  ; }"
7432,"public void handle Rejected Listen ( int target Id,  Status error ) { assert Callback ( ""handle Rejected Listen"" )  ;   Limbo Resolution limbo Resolution = active Limbo Resolutions By Target . get ( target Id )  ;   Document Key limbo Key = limbo Resolution != null ? limbo Resolution . key : null ;  if  ( limbo Key != null )  {     //  Since this query failed, we won't want to manually unlisten to it .      //  So go ahead and remove it from bookkeeping .      active Limbo Targets By Key . remove ( limbo Key )  ;      active Limbo Resolutions By Target . remove ( target Id )  ;      pump Enqueued Limbo Resolutions (  )  ;      // TODO:  Retry on transient errors?     //  It's a limbo doc .   Create a synthetic event saying it was deleted .   This is kind of a hack .      //  Ideally, we would have a method in the local store to purge a document .   However, it would     // be tricky to keep all of the local store's invariants with another method .       Mutable Document result =  Mutable Document . new No Document ( limbo Key,  Snapshot Version . NONE )  ;       Map< Document Key,  Mutable Document> document Updates =  Collections . singleton Map ( limbo Key, result )  ;       Set< Document Key> limbo Documents =  Collections . singleton ( limbo Key )  ;       Remote Event event = new  Remote Event (  Snapshot Version . NONE, /* target Changes= */      Collections . empty Map (  ) , /* target Mismatches= */      Collections . empty Set (  ) , document Updates, limbo Documents )  ;      handle Remote Event ( event )  ;  } else {     local Store . release Target ( target Id )  ;      remove And Cleanup Target ( target Id, error )  ;  }}"
7433,"public com . anychart . scales .  Linear Color color Scale (  ) { return new com . anychart . scales .  Linear Color ( js Base + "" . color Scale (  ) "" )  ; }"
7434,public static  Content Source create (  Working Tree Iterator iterator ) { return new  Working Tree Source ( iterator )  ; }
7435,"private  Danmakus _do Parse (  String json Str ) {  Logger . w ( json Str )  ;   Danmakus danmakus = new  Danmakus (  )  ;  if  (  Text Utils . is Empty ( json Str )  )  {     return danmakus ;  } try {     // 有同志提交了关于  Gson 解析的问题处理，这里去掉之前的  Fastjson     //             List< Danmaku Info> datas = JSON . parse Array ( json Str,  Danmaku Info . class )  ;       List< Danmaku Info> datas =  Gson Helper . convert Entities ( json Str,  Danmaku Info . class )  ;       Logger . i ( datas . to String (  )  )  ;      int size = datas . size (  )  ;      for  ( int i = 0 ;  i < size ;  i++ )  {          Base Danmaku item = m Context . m Danmaku Factory . create Danmaku ( datas . get ( i )  . get Type (  ) , m Context )  ;          if  ( item != null )  {             item . set Time ( datas . get ( i )  . get Time (  )  )  ;              item . text Size = datas . get ( i )  . get Text Size (  )  ;              item . text Color = datas . get ( i )  . get Text Color (  )  ;              item . text Shadow Color = text Color <=  Color . BLACK ?  Color . WHITE :  Color . BLACK ;               Danmaku Utils . fill Text ( item, datas . get ( i )  . get Content (  )  )  ;              item . index = i ;              item . set Timer ( m Timer )  ;              danmakus . add Item ( item )  ;          }     } } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  } return danmakus ; }"
7436,"public static  Buck Function Trailer find Target In Psi Tree (  Psi Element root,  String name ) { return  Psi Tree Util . find Children Of Type ( root,  Buck Function Trailer . class )  . stream (  )  . filter (  buck Function Trailer -> name . equals ( buck Function Trailer . get Name (  )  )  )  . find First (  )  . or Else ( null )  ; }"
7437,"private void write Inlined Artifact (  Path file )  throws IO Exception{  Files . write ( file, file . to String (  )  . get Bytes ( UTF_8 ) ,  Standard Open Option . CREATE,  Standard Open Option . APPEND )  ; }"
7438,public  String get Os Build Version String (  ) { return remove Forward Slashes In (  Build . VERSION . INCREMENTAL )  ; }
7439,"public com . anychart . core . axes .  Map Ticks stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7440,public boolean is Thin (  ) { return thin ; }
7441,private  Size get Preview Size (  ) { return camera Manager . get Preview Size (  )  ; }
7442,public final  Observable< Object Change<E>> as Changeset Observable (  ) { return  (  Observable )   Realm Object . as Changeset Observable ( this )  ; }
7443,"public byte [  ]  get Image Data (  ) { return assert Descriptor ( KEY_BANNER_IMAGE,  Metadata Descriptor . TYPE_BINARY )  . get Raw Data (  )  ; }"
7444,public  View Pager get View Pager (  ) { return m Tutorial . get View Pager (  )  ; }
7445,"public com . anychart . core . resource . resourcelist .  Tags Settings margin (  Number value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
7446,"public  Text Prop Model View Model_ on Bind (  On Model Bound Listener< Text Prop Model View Model_,  Text Prop Model View> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
7447,"public  Module Info build (  ) { //  Check mandatory fields .  check Not Null ( name, "" Mandatory field 'name' missing . "" )  ;  check Not Null ( package Name, "" Mandatory field 'package Name' missing . "" )  ;   Module Info module Info = new  Module Info (  )  ;  module Info . set Name ( name )  ;  module Info . set Package Name ( package Name )  ;  module Info . set Hidden ( hidden )  ;  return module Info ; }"
7448,"public static  Handler build Default (  Config config ) {  Immutable List .  Builder< Handler> handler List Builder =  Immutable List . builder (  )  ;  final  Method Name Util method Name Util = new  Method Name Util (  )  ;  if  ( config . acknowledge Restrictive Annotations (  )  )  {     //  This runs before  Library Models Handler, so that library models can override third-party     // bytecode annotations     handler List Builder . add ( new  Restrictive Annotation Handler ( config )  )  ;  } if  ( config . is Jar Infer Enabled (  )  )  {     handler List Builder . add ( new  Inferred JAR Models Handler ( config )  )  ;  } if  ( config . handle Test Assertion Libraries (  )  )  {     handler List Builder . add ( new  Assertion Handler ( method Name Util )  )  ;  } handler List Builder . add ( new  Library Models Handler ( config )  )  ;  handler List Builder . add (  Stream Nullability Propagator Factory . get Rx Stream Nullability Propagator (  )  )  ;  handler List Builder . add (  Stream Nullability Propagator Factory . get Java Stream Nullability Propagator (  )  )  ;  handler List Builder . add ( new  Contract Handler ( config )  )  ;  handler List Builder . add ( new  Apache Thrift Is Set Handler (  )  )  ;  handler List Builder . add ( new  Requires Non Null Handler (  )  )  ;  handler List Builder . add ( new  Ensures Non Null Handler (  )  )  ;  if  ( config . check Optional Emptiness (  )  )  {     handler List Builder . add ( new  Optional Emptiness Handler ( config, method Name Util )  )  ;  } if  ( config . check Contracts (  )  )  {     handler List Builder . add ( new  Contract Check Handler ( config )  )  ;  } return new  Composite Handler ( handler List Builder . build (  )  )  ; }"
7449,public static boolean is Valid Object (  String str ) { if  ( str == null || str . length (  )  == 0 )  {     return false ;  } JSON Scanner lexer = new JSON Scanner ( str )  ;  try {     lexer . next Token (  )  ;      final int token = lexer . token (  )  ;      if  ( token == JSON Token . LBRACE )  {         if  ( lexer . get Current (  )  == JSON Lexer . EOI )  {             return false ;          }         lexer . skip Object ( true )  ;          return lexer . token (  )  == JSON Token . EOF ;      }     return false ;  } catch  (  Exception ex )  {     return false ;  } finally {     lexer . close (  )  ;  }}
7450,"public com . anychart . scales .  Ordinal x Scale (  ) { return new com . anychart . scales .  Ordinal ( js Base + "" . x Scale (  ) "" )  ; }"
7451,"protected static void write (  Annotated Output out, short c0, short c1, short c2, short c3, short c4 ) { out . write Short ( c0 )  ;  out . write Short ( c1 )  ;  out . write Short ( c2 )  ;  out . write Short ( c3 )  ;  out . write Short ( c4 )  ; }"
7452,public final  Type Element parent Component (  ) { check State ( !at Root (  )  )  ;  return components (  )  . reverse (  )  . get ( 1 )  ; }
7453,"public com . anychart . charts .  Sparkline tooltip (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . tooltip ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7454,public static int get Status Bar Height ( @ Non Null  Activity activity ) {  Bar Config config = new  Bar Config ( activity )  ;  return config . get Status Bar Height (  )  ; }
7455,"public static  Psi Element find Symbol In Psi Tree (  Psi Element root,  String name ) { try {     visit Symbols ( root,  (  element Name,  psi Element )  -> {         if  ( name . equals ( element Name )  )  {             throw new  Found Symbol ( psi Element )  ;          }     } )  ;      return null ;  } catch  (  Found Symbol e )  {     return e . element ;  }}"
7456,public static  Enum Set< Capture Type> get Cookie Capture Types (  ) { return  Enum Set . copy Of ( COOKIE_CAPTURE_TYPES )  ; }
7457,"public com . anychart . core . venn .  Intersections tooltip (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . tooltip ( %s )  ; "", settings )  )  ;  return this ; }"
7458,void set Input OOB Size ( final byte input OOB Size ) { this . input OOB Size = input OOB Size ; }
7459,public final  Realm Field Type get Final Column Type (  ) { compile If Necessary (  )  ;  return final Column Type ; }
7460,"public com . anychart . core . lineargauge . pointers .  Led labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7461,"public void line Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . line Height (  )  ; "" )  ; }"
7462,"private void check If X Paths Relative ( X Path Repository<X Path Element> xpath Repo ) { for  ( X Path Element xpath : xpath Repo . key Set (  )  )  {     if  ( xpath . is Relative (  )  )  {         throw new  Class Def Exception ( "" Attempted to use "" + this . get Class (  )  . get Simple Name (  )  + "" to parse relative X Path "" + xpath . to String (  )  + "" .   Please either annotate this class with "" + XML Object . class . get Simple Name (  )  + "" and an absolute X Path, or make sure to only use it as a field in other "" + XML Object . class . get Simple Name (  )  + ""-annotated classes rather than passing it directly to a "" +  Request . class . get Simple Name (  )  + "" or "" +  Ice Soap Parser . class . get Simple Name (  )  + "" object"" )  ;      } }}"
7463,"public void parse Result To List (  Radar Nearby Result res ) { if  ( res == null )  {     if  ( m Result List Adapter . list != null )  {         m Result List Adapter . list . clear (  )  ;          m Result List Adapter . notify Data Set Changed (  )  ;      } } else {     m Result List Adapter . list = res . info List ;      m Result List Adapter . notify Data Set Changed (  )  ;      if  ( cur Page > 0 )  {         list Pre Btn . set Visibility (  View . VISIBLE )  ;      }     if  ( total Page - 1 > cur Page )  {         list Next Btn . set Visibility (  View . VISIBLE )  ;      }     if  ( total Page > 0 )  {         list Cur Page . set Visibility (  View . VISIBLE )  ;          list Cur Page . set Text (  String . value Of ( cur Page + 1 )  + ""/"" +  String . value Of ( total Page )  )  ;      } }}"
7464,"public  String make Session Id (  String url, boolean is Account Related ) { if  ( is Sonic Url ( url )  )  {      String Builder session Id Builder = new  String Builder (  )  ;      try {          Uri uri =  Uri . parse ( url )  ;          session Id Builder . append ( uri . get Authority (  )  )  . append ( uri . get Path (  )  )  ;          if  ( uri . is Hierarchical (  )  )  {              String sonic Remain Params = uri . get Query Parameter (  Sonic Constants . SONIC_REMAIN_PARAMETER_NAMES )  ;               Tree Set< String> remain Param Tree Set = new  Tree Set< String> (  )  ;              if  ( ! Text Utils . is Empty ( sonic Remain Params )  )  {                  Collections . add All ( remain Param Tree Set, sonic Remain Params . split (  Sonic Constants . SONIC_REMAIN_PARAMETER_SPLIT_CHAR )  )  ;              }              Tree Set< String> parameter Names Tree Set = new  Tree Set< String> ( get Query Parameter Names ( uri )  )  ;              if  ( !remain Param Tree Set . is Empty (  )  )  {                 parameter Names Tree Set . remove (  Sonic Constants . SONIC_REMAIN_PARAMETER_NAMES )  ;              }             for  (  String parameter Name : parameter Names Tree Set )  {                 if  ( ! Text Utils . is Empty ( parameter Name )  &&  ( parameter Name . starts With (  Sonic Constants . SONIC_PARAMETER_NAME_PREFIX )  || remain Param Tree Set . contains ( parameter Name )  )  )  {                     session Id Builder . append ( parameter Name )  . append ( uri . get Query Parameter ( parameter Name )  )  ;                  }             }         }     } catch  (  Throwable e )  {         log ( TAG,  Log . ERROR, ""make Session Id error:"" + e . get Message (  )  + "", url="" + url )  ;          session Id Builder . set Length ( 0 )  ;          session Id Builder . append ( url )  ;      }      String session Id ;      if  ( is Account Related )  {         session Id = get Current User Account (  )  + ""_"" +  Sonic Utils . get MD5 ( session Id Builder . to String (  )  )  ;      } else {         session Id =  Sonic Utils . get MD5 ( session Id Builder . to String (  )  )  ;      }     return session Id ;  } return null ; }"
7465,"public com . anychart . core . axismarkers .  Current Price Indicator falling Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7466,"public void test No Event When Drag Out Of First Touchable Parent To Its Touchable Parent (  ) {  View top Level Touchable = get View By Test Id ( ""C"" )  ;   View inner Button = get View By Test Id ( ""A"" )  ;   Single Touch Gesture Generator gesture Generator = create Gesture Generator (  )  ;  gesture Generator . start Gesture ( inner Button )  ;  // wait for tapped view measurements wait For Bridge And UI Idle (  )  ;  gesture Generator . drag To ( top Level Touchable, 15 )  . end Gesture (  )  ;  wait For Bridge And UI Idle (  )  ;  assert True ( m Recording Module . get Calls (  )  . is Empty (  )  )  ; }"
7467,public synchronized void remove Series ( XY Series series ) { m Series . remove ( series )  ; }
7468,"public com . anychart . core . cartesian . series .  Base With Markers y Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7469,"private void about To Acquire (  Cycle Detecting Lock lock ) { if  ( !lock . is Acquired By Current Thread (  )  )  {      Array List< Lock Graph Node> acquired Lock List = acquired Locks . get (  )  ;       Lock Graph Node node = lock . get Lock Graph Node (  )  ;      node . check Acquired Locks ( policy, acquired Lock List )  ;      acquired Lock List . add ( node )  ;  }}"
7470,public  Matrix4 set Coordinate Zoom ( double zoom ) { m [ M33 ]  = zoom ;  return this ; }
7471,"public void test Notification (  )  throws  Exception{  Remote Message Builder builder = new  Remote Message Builder (  )  ;  builder . add Data ( ""gcm . n . e"", ""1"" )  ;  start Service Via Receiver ( builder . build Intent (  )  )  ;  verify No Service Methods Invoked (  )  ;  //  Check a notification was posted assert Equals ( 1, shadow Of ( notification Manager )  . size (  )  )  ; }"
7472,"public com . anychart . core . stock . scrollerseries .  Candlestick falling Stroke ( com . anychart . graphics . vector .  Stroke value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7473,public static  Funnel< Char Sequence> string Funnel (  Charset charset ) { return new  String Charset Funnel ( charset )  ; }
7474,public  Bitmap get Bitmap ( int which ) { if  ( which ==  Wallpaper Manager . FLAG_LOCK )  {     return lock Screen Image ;  } else if  ( which ==  Wallpaper Manager . FLAG_SYSTEM )  {     return home Screen Image ;  } return null ; }
7475,public  Rebase Result get Rebase Result (  ) { return this . rebase Result ; }
7476,public  Immutable Sorted Set< Flavor> get Flavor Set (  ) { return flavors . get Set (  )  ; }
7477,public void refresh (  ) { __throw If Detached (  )  ;  my Dao . refresh ( this )  ; }
7478,"public com . anychart . core . resource .  Conflicts fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
7479,"public com . anychart . core . resource .  Logo left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
7480,public static long get Component Triggered Async State Update Count (  ) { return s Component Triggered Async State Update Count . get (  )  ; }
7481,"public com . anychart . core . cartesian . series .  Column3d stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7482,protected void redraw (  ) { if  ( display != null )  {     display . redraw (  )  ;  }}
7483,"public void json (  String json ) { if  (  Text Utils . is Empty ( json )  )  {     d ( "" Empty/ Null json content"" )  ;      return ;  } try {     if  ( json . starts With ( ""{"" )  )  {         JSON Object json Object = new JSON Object ( json )  ;           String message = json Object . to String ( JSON_INDENT )  ;          d ( message )  ;          return ;      }     if  ( json . starts With ( "" [ "" )  )  {         JSON Array json Array = new JSON Array ( json )  ;           String message = json Array . to String ( JSON_INDENT )  ;          d ( message )  ;      } } catch  ( JSON Exception e )  {     e ( e . get Cause (  )  . get Message (  )  + ""\n"" + json )  ;  }}"
7484,"public void test Device Filter Online Only (  ) { I Device [  ]  devices = new I Device [  ]  { create Emulator ( ""1"", I Device .  Device State . OFFLINE ) , create Emulator ( ""2"", I Device .  Device State . BOOTLOADER ) , create Emulator ( ""3"", I Device .  Device State . RECOVERY ) , create Real Device ( ""4"", I Device .  Device State . OFFLINE ) , create Real Device ( ""5"", I Device .  Device State . BOOTLOADER ) , create Real Device ( ""6"", I Device .  Device State . RECOVERY )  } ;  assert Null ( basic Adb Helper . filter Devices ( devices )  )  ; }"
7485,"private  String socket Address To String (  Socket Address address ) {  String addr = address . to String (  )  ;  int i = addr . index Of ( ""/"" )  ;  if  ( i >= 0 )  {     addr = addr . substring ( i + 1 )  ;  } return addr ; }"
7486,"public static  Scriptable get Class Prototype (  Scriptable scope,  String class Name ) { scope = get Top Level Scope ( scope )  ;   Object ctor = get Property ( scope, class Name )  ;   Object proto ;  if  ( ctor instanceof  Base Function )  {     proto =  (  (  Base Function )  ctor )  . get Prototype Property (  )  ;  } else if  ( ctor instanceof  Scriptable )  {      Scriptable ctor Obj =  (  Scriptable )  ctor ;      proto = ctor Obj . get ( ""prototype"", ctor Obj )  ;  } else {     return null ;  } if  ( proto instanceof  Scriptable )  {     return  (  Scriptable )  proto ;  } return null ; }"
7487,"public void on Edge Drag Started ( int edge Flags, int pointer Id ) {}"
7488,public void close (  ) { func Controller . close (  )  ; }
7489,"void test Time Passes (  ) { final var mammoth = new  Mammoth (  )  ;  mammoth . observe (  )  ;  assert Equals ( "" The mammoth is calm and peaceful . "", appender . get Last Message (  )  )  ;  assert Equals ( 1, appender . get Log Size (  )  )  ;  mammoth . time Passes (  )  ;  assert Equals ( "" The mammoth gets angry!"", appender . get Last Message (  )  )  ;  assert Equals ( 2, appender . get Log Size (  )  )  ;  mammoth . observe (  )  ;  assert Equals ( "" The mammoth is furious!"", appender . get Last Message (  )  )  ;  assert Equals ( 3, appender . get Log Size (  )  )  ;  mammoth . time Passes (  )  ;  assert Equals ( "" The mammoth calms down . "", appender . get Last Message (  )  )  ;  assert Equals ( 4, appender . get Log Size (  )  )  ;  mammoth . observe (  )  ;  assert Equals ( "" The mammoth is calm and peaceful . "", appender . get Last Message (  )  )  ;  assert Equals ( 5, appender . get Log Size (  )  )  ; }"
7490,"public float get Matrix Angle ( @ Non Null  Matrix matrix ) { return  ( float )  - (  Math . atan2 ( get Matrix Value ( matrix,  Matrix . MSKEW_X ) , get Matrix Value ( matrix,  Matrix . MSCALE_X )  )  *  ( 180 /  Math . PI )  )  ; }"
7491,"public com . anychart . core . ui .  Crosshair Label background (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background ( %s )  ; "", settings )  )  ;  return this ; }"
7492,public  Builder merge Trace Info ( com . facebook . buck . remoteexecution . proto .  Trace Info value ) { if  ( trace Info Builder_ == null )  {     if  ( trace Info_ != null )  {         trace Info_ = com . facebook . buck . remoteexecution . proto .  Trace Info . new Builder ( trace Info_ )  . merge From ( value )  . build Partial (  )  ;      } else {         trace Info_ = value ;      }     on Changed (  )  ;  } else {     trace Info Builder_ . merge From ( value )  ;  } return this ; }
7493,public  Object get As Object (  String key ) { byte [  ]  data = get As Binary ( key )  ;  if  ( data != null )  {      Byte Array Input Stream bais = null ;       Object Input Stream ois = null ;      try {         bais = new  Byte Array Input Stream ( data )  ;          ois = new  Object Input Stream ( bais )  ;           Object re Object = ois . read Object (  )  ;          return re Object ;      } catch  (  Exception e )  {         e . print Stack Trace (  )  ;          return null ;      } finally {         try {             if  ( bais != null )                  bais . close (  )  ;          } catch  ( IO Exception e )  {             e . print Stack Trace (  )  ;          }         try {             if  ( ois != null )                  ois . close (  )  ;          } catch  ( IO Exception e )  {             e . print Stack Trace (  )  ;          }     } } return null ; }
7494,"public com . anychart . charts .  Linear Gauge layout ( com . anychart . enums .  Layout layout ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . layout ( %s )  ; "",  ( layout != null )  ? layout . get Js Base (  )  : null )  )  ;  return this ; }"
7495,public  Value Changed Callback merge ( @ Non Null final  Data Merger merger ) { this . data Merger = merger ;  this . progress Callback = null ;  return this ; }
7496,"public com . anychart . graphics . vector .  Unmanaged Layer rotate (  Number degrees,  Number cx,  Number cy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rotate ( %s, %s, %s )  ; "", degrees, cx, cy )  )  ;  return this ; }"
7497,public int get Publish Ttl (  ) { return publish Ttl ; }
7498,"public void on Size Ready ( int width, int height ) { state Verifier . throw If Recycled (  )  ;  synchronized  ( request Lock )  {     if  ( IS_VERBOSE_LOGGABLE )  {         log V ( "" Got on Size Ready in "" +  Log Time . get Elapsed Millis ( start Time )  )  ;      }     if  ( status !=  Status . WAITING_FOR_SIZE )  {         return ;      }     status =  Status . RUNNING ;      float size Multiplier = request Options . get Size Multiplier (  )  ;      this . width = maybe Apply Size Multiplier ( width, size Multiplier )  ;      this . height = maybe Apply Size Multiplier ( height, size Multiplier )  ;      if  ( IS_VERBOSE_LOGGABLE )  {         log V ( ""finished setup for calling load in "" +  Log Time . get Elapsed Millis ( start Time )  )  ;      }     load Status = engine . load ( glide Context, model, request Options . get Signature (  ) , this . width, this . height, request Options . get Resource Class (  ) , transcode Class, priority, request Options . get Disk Cache Strategy (  ) , request Options . get Transformations (  ) , request Options . is Transformation Required (  ) , request Options . is Scale Only Or No Transform (  ) , request Options . get Options (  ) , request Options . is Memory Cacheable (  ) , request Options . get Use Unlimited Source Generators Pool (  ) , request Options . get Use Animation Pool (  ) , request Options . get Only Retrieve From Cache (  ) , this, callback Executor )  ;      // have completed asynchronously .      if  ( status !=  Status . RUNNING )  {         load Status = null ;      }     if  ( IS_VERBOSE_LOGGABLE )  {         log V ( ""finished on Size Ready in "" +  Log Time . get Elapsed Millis ( start Time )  )  ;      } }}"
7499,"private boolean are Counters Valid ( @ Non Null  Trace Metric trace ) { return are Counters Valid ( trace, 0 )  ; }"
7500,"public void set User Data (  Map< String,  String> data ) { set User Data ( data, null )  ; }"
7501,"public com . anychart . charts .  Sunburst start Angle (  String start Angle ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . start Angle ( %s )  ; "", wrap Quotes ( start Angle )  )  )  ;  return this ; }"
7502,"public static void unregister (  Repository db ) { if  ( db . get Directory (  )  != null )  {     unregister (  File Key . exact ( db . get Directory (  ) , db . get FS (  )  )  )  ;  }}"
7503,boolean is Empty (  ) { return children . is Empty (  )  ; }
7504,"private void check In Moving ( float x, float y ) { final int x Diff =  ( int )   Math . abs ( x - last Motion X )  ;  final int y Diff =  ( int )   Math . abs ( y - last Motion Y )  ;  final int touch Slop = this . touch Slop ;  boolean x Moved = x Diff > touch Slop ;  boolean y Moved = y Diff > touch Slop ;  if  ( x Moved )  {     touch State = TOUCH_STATE_SCROLLING_X ;      last Motion X = x ;      last Motion Y = y ;  } if  ( y Moved )  {     touch State = TOUCH_STATE_SCROLLING_Y ;      last Motion X = x ;      last Motion Y = y ;  }}"
7505,"public  Model Without Hash_ on Unbind (  On Model Unbound Listener< Model Without Hash_,  Object> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
7506,"public com . anychart . standalones . axes .  Radial labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7507,"public com . anychart . standalones .  Resource List stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7508,public  String get Value At Index ( int index ) { // Split  String into separate components  List values = get Values (  )  ;  return  (  String )  values . get ( index )  ; }
7509,"public com . anychart . core . annotations .  Andrews Pitchfork selected (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7510,"public com . anychart . core . annotations .  Vertical Line min Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", width )  )  ;  return this ; }"
7511,"protected  String [  ]  get Parameters (  ) { if  ( remote Name == null )  {     remote Name = remote Location ;  } return new  String [  ]  { remote Name, remote Location } ; }"
7512,public static  Script get Script By Description (  String description ) { return description Map . get ( description )  ; }
7513,"public static  Function< Item,  Boolean> contains ( final  String list Field, final  Object value ) { return new  List Contains Predicate ( list Field, value )  ; }"
7514,"public  List< Map< String,  String>> get Variable Maps (  ) { if  ( !variable Maps . is Empty (  )  )  {     return variable Maps ;  }  List< Map< String,  String>> empty Map List = new  Array List<> (  )  ;  empty Map List . add (  Collections . empty Map (  )  )  ;  return empty Map List ; }"
7515,public void add Function ( I Func func ) { func Controller . add Func ( func )  ; }
7516,public T normal Image Res ( int normal Image Res ) { if  ( this . normal Image Res != normal Image Res )  {     this . normal Image Res = normal Image Res ;       Boom Button button = button (  )  ;      if  ( button != null )  {         button . normal Image Res = normal Image Res ;          button . update Image (  )  ;      } } return  ( T )  this ; }
7517,"private com . google . protobuf .  Single Field Builder V3<com . facebook . buck . remoteexecution . proto .  Trace Info, com . facebook . buck . remoteexecution . proto .  Trace Info .  Builder, com . facebook . buck . remoteexecution . proto .  Trace Info Or Builder> get Trace Info Field Builder (  ) { if  ( trace Info Builder_ == null )  {     trace Info Builder_ = new com . google . protobuf .  Single Field Builder V3<com . facebook . buck . remoteexecution . proto .  Trace Info, com . facebook . buck . remoteexecution . proto .  Trace Info .  Builder, com . facebook . buck . remoteexecution . proto .  Trace Info Or Builder> ( get Trace Info (  ) , get Parent For Children (  ) , is Clean (  )  )  ;      trace Info_ = null ;  } return trace Info Builder_ ; }"
7518,"public  Intent execute (  Context context ) {  String [  ]  titles = new  String [  ]  { "" Crete  Air  Temperature"", "" Skiathos  Air  Temperature"" } ;   List<double [  ] > x = new  Array List<double [  ] > (  )  ;  for  ( int i = 0 ;  i < titles . length ;  i++ )  {     x . add ( new double [  ]  { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 } )  ;  }  List<double [  ] > values = new  Array List<double [  ] > (  )  ;  values . add ( new double [  ]  { 12 . 3, 12 . 5, 13 . 8, 16 . 8, 20 . 4, 24 . 4, 26 . 4, 26 . 1, 23 . 6, 20 . 3, 17 . 2, 13 . 9 } )  ;  values . add ( new double [  ]  { 9, 10, 11, 15, 19, 23, 26, 25, 22, 18, 13, 10 } )  ;  int [  ]  colors = new int [  ]  {  Color . GREEN,  Color . rgb ( 200, 150, 0 )  } ;   Point Style [  ]  styles = new  Point Style [  ]  {  Point Style . CIRCLE,  Point Style . DIAMOND } ;  XY Multiple Series Renderer renderer = build Renderer ( colors, styles )  ;  renderer . set Point Size ( 5 . 5f )  ;  int length = renderer . get Series Renderer Count (  )  ;  for  ( int i = 0 ;  i < length ;  i++ )  {     XY Series Renderer r =  ( XY Series Renderer )  renderer . get Series Renderer At ( i )  ;      r . set Line Width ( 5 )  ;      r . set Fill Points ( true )  ;  } set Chart Settings ( renderer, "" Weather data"", "" Month"", "" Temperature"", 0 . 5, 12 . 5, 0, 40,  Color . LTGRAY,  Color . LTGRAY )  ;  renderer . set X Labels ( 12 )  ;  renderer . set Y Labels ( 10 )  ;  renderer . set Show Grid ( true )  ;  renderer . set X Labels Align (  Align . RIGHT )  ;  renderer . set Y Labels Align (  Align . RIGHT )  ;  renderer . set Zoom Buttons Visible ( true )  ;  renderer . set Pan Limits ( new double [  ]  { -10, 20, -10, 40 } )  ;  renderer . set Zoom Limits ( new double [  ]  { -10, 20, -10, 40 } )  ;  XY Value Series sun Series = new XY Value Series ( "" Sunshine hours"" )  ;  sun Series . add ( 1f, 35, 4 . 3 )  ;  sun Series . add ( 2f, 35, 4 . 9 )  ;  sun Series . add ( 3f, 35, 5 . 9 )  ;  sun Series . add ( 4f, 35, 8 . 8 )  ;  sun Series . add ( 5f, 35, 10 . 8 )  ;  sun Series . add ( 6f, 35, 11 . 9 )  ;  sun Series . add ( 7f, 35, 13 . 6 )  ;  sun Series . add ( 8f, 35, 12 . 8 )  ;  sun Series . add ( 9f, 35, 11 . 4 )  ;  sun Series . add ( 10f, 35, 9 . 5 )  ;  sun Series . add ( 11f, 35, 7 . 5 )  ;  sun Series . add ( 12f, 35, 5 . 5 )  ;  XY Series Renderer light Renderer = new XY Series Renderer (  )  ;  light Renderer . set Color (  Color . YELLOW )  ;  XY Series water Series = new XY Series ( "" Crete  Water  Temperature"" )  ;  water Series . add ( 1, 16 )  ;  water Series . add ( 2, 15 )  ;  water Series . add ( 3, 16 )  ;  water Series . add ( 4, 17 )  ;  water Series . add ( 5, 20 )  ;  water Series . add ( 6, 23 )  ;  water Series . add ( 7, 25 )  ;  water Series . add ( 8, 25 . 5 )  ;  water Series . add ( 9, 26 . 5 )  ;  water Series . add ( 10, 24 )  ;  water Series . add ( 11, 22 )  ;  water Series . add ( 12, 18 )  ;  XY Series water Series2 = new XY Series ( "" Skiathos  Water  Temperature"" )  ;  water Series2 . add ( 1, 15 )  ;  water Series2 . add ( 2, 14 )  ;  water Series2 . add ( 3, 14 )  ;  water Series2 . add ( 4, 15 )  ;  water Series2 . add ( 5, 18 )  ;  water Series2 . add ( 6, 22 )  ;  water Series2 . add ( 7, 24 )  ;  water Series2 . add ( 8, 25 )  ;  water Series2 . add ( 9, 24 )  ;  water Series2 . add ( 10, 21 )  ;  water Series2 . add ( 11, 18 )  ;  water Series2 . add ( 12, 16 )  ;  renderer . set Bar Spacing ( 0 . 3 )  ;  XY Series Renderer water Renderer1 = new XY Series Renderer (  )  ;  water Renderer1 . set Color ( 0xff0099cc )  ;  water Renderer1 . set Chart Values Text Align (  Align . CENTER )  ;  XY Series Renderer water Renderer2 = new XY Series Renderer (  )  ;  water Renderer2 . set Color ( 0xff9933cc )  ;  water Renderer2 . set Chart Values Text Align (  Align . RIGHT )  ;  XY Multiple Series Dataset dataset = build Dataset ( titles, x, values )  ;  dataset . add Series ( 0, sun Series )  ;  dataset . add Series ( 0, water Series )  ;  dataset . add Series ( 0, water Series2 )  ;  renderer . add Series Renderer ( 0, light Renderer )  ;  renderer . add Series Renderer ( 0, water Renderer1 )  ;  renderer . add Series Renderer ( 0, water Renderer2 )  ;  water Renderer1 . set Display Chart Values ( true )  ;  water Renderer1 . set Chart Values Text Size ( 10 )  ;  water Renderer2 . set Display Chart Values ( true )  ;  water Renderer2 . set Chart Values Text Size ( 10 )  ;  XY Combined Chart Def [  ]  types = new XY Combined Chart Def [  ]  { new XY Combined Chart Def (  Bar Chart . TYPE, 0, 1 ) , new XY Combined Chart Def (  Bubble Chart . TYPE, 2 ) , new XY Combined Chart Def (  Line Chart . TYPE, 3 ) , new XY Combined Chart Def (  Cubic Line Chart . TYPE, 4 )  } ;   Intent intent =  Chart Factory . get Combined XY Chart Intent ( context, dataset, renderer, types, "" Weather parameters"" )  ;  return intent ; }"
7519,"public static  Method Param Model get Referenced Param Model For Diff (  Spec Model spec Model,  Render Data Diff Model diff Model ) { if  (  Method Param Model Utils . is Annotated With ( diff Model,  Prop . class )  )  {     return  Spec Model Utils . get Prop With Name ( spec Model, diff Model . get Name (  )  )  ;  } else if  (  Method Param Model Utils . is Annotated With ( diff Model,  State . class )  )  {     return  Spec Model Utils . get State Value With Name ( spec Model, diff Model . get Name (  )  )  ;  } throw new  Runtime Exception ( "" Diff model wasn't annotated with @ State or @ Prop, some validation failed"" )  ; }"
7520,"public void draw Y Sequence Grid (  Canvas canvas, int row,  Rect rect,  Paint paint ) { draw Grid Path ( canvas, rect, paint, is Show Y Sequence Horizontal Line ( row ) , is Show Y Sequence Vertical Line ( row )  )  ; }"
7521,"public void get Stat ( com . anychart . enums .  Statistics key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Stat ( %s )  ; "",  ( key != null )  ? key . get Js Base (  )  : null )  )  ; }"
7522,public void set Should Animate Down ( final boolean should Animate Down ) { m Should Animate Down = should Animate Down ; }
7523,public  Type Adapter<T> get Adapter (  Class<T> type ) { return get Adapter (  Type Token . get ( type )  )  ; }
7524,"public void test Json With Non Exectuable Token With Configured Gson Deserialization (  ) { //  Gson should be able to deserialize a stream with non-exectuable token even if it is created   Gson gson = gson Builder . generate Non Executable Json (  )  . create (  )  ;   String json = JSON_NON_EXECUTABLE_PREFIX + ""{int Value:2,string Value:' )  ] }\\u0027\\n'}"" ;   Bag Of Primitives target = gson . from Json ( json,  Bag Of Primitives . class )  ;  assert Equals ( "" )  ] }'\n"", target . string Value )  ;  assert Equals ( 2, target . int Value )  ; }"
7525,"public static  Decal new Decal (  Texture Region texture Region ) { return new Decal ( texture Region . get Region Width (  ) , texture Region . get Region Height (  ) , texture Region,  Decal Material . NO_BLEND,  Decal Material . NO_BLEND )  ; }"
7526,"public com . anychart . core . gantt . edit .  Structure Edit stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7527,"public com . anychart . core . axes .  Circular sweep Angle (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . sweep Angle ( %s )  ; "", value )  )  ;  return this ; }"
7528,public static boolean is Valid (  String specifier ) { try {     from Valid ( specifier )  ;      return true ;  } catch  (  Illegal Argument Exception e )  {     return false ;  }}
7529,public  Calendar get Max Date (  ) { return m Max Date ; }
7530,"public  To String Builder append ( boolean value ) { style . append ( buffer, null, value )  ;  return this ; }"
7531,"public com . anychart . charts .  Pie title (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . title ( %s )  ; "", settings )  )  ;  return this ; }"
7532,public boolean is App Lock Enabled (  ) { return  ( m App Locker != null &&  (  Pin Activity . has Listeners (  )  ||  Pin Fragment Activity . has Listeners (  )  ||  Pin Compat Activity . has Listeners (  )  )  )  ; }
7533,"public void font Family (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Family (  )  ; "" )  ; }"
7534,public  Set< String> get Capabilities (  ) { return capabilities ; }
7535,"void test Add Item (  )  throws  Exception{ assert Timeout ( of Millis ( 10000 ) ,  (  )  -> {     //  Create a new inventory with a limit of 1000 items and put some load on the add method     final var inventory = new  Inventory ( INVENTORY_SIZE )  ;      final var executor Service =  Executors . new Fixed Thread Pool ( THREAD_COUNT )  ;       Int Stream . range ( 0, THREAD_COUNT )  . < Runnable>map To Obj (  i ->  (  )  -> {         while  ( inventory . add Item ( new  Item (  )  )  )   ;      } )  . for Each ( executor Service::execute )  ;      //  Wait until all threads have finished     executor Service . shutdown (  )  ;      executor Service . await Termination ( 5,  Time Unit . SECONDS )  ;      //  Check the number of items in the inventory .   It should not have exceeded the allowed maximum     final var items = inventory . get Items (  )  ;      assert Not Null ( items )  ;      assert Equals ( INVENTORY_SIZE, items . size (  )  )  ;      assert Equals ( INVENTORY_SIZE, appender . get Log Size (  )  )  ;      //  .  .  .  and check if the inventory size is increasing continuously      Int Stream . range ( 0, items . size (  )  )  . map To Obj (  i -> appender . log . get ( i )  . get Formatted Message (  )  . contains ( ""items . size (  ) ="" +  ( i + 1 )  )  )  . for Each (  Assertions::assert True )  ;  } )  ; }"
7536,"private static  List< String> get Devices By Service Order (  )  throws  Interrupted Exception{ /* $ networksetup -listnetworkserviceorder  An asterisk  ( * )  denotes that a network service is disabled .   ( 1 )   Display  Ethernet  ( en6 )   (  Hardware  Port:  Display  Ethernet,  Device: en6 )   ( 2 )   Wi- Fi  (  Hardware  Port:  Wi- Fi,  Device: en0 )  */ LOG . debug ( "" Determine network service order and extract device names"" )  ;   String service Order Output = run Network Setup Command ( ""listnetworkserviceorder"" )  ;   Matcher matcher = device Pattern . matcher ( service Order Output )  ;   List< String> devices = new  Array List< String> (  )  ;  while  ( matcher . find (  )  )  {     devices . add ( matcher . group ( 1 )  )  ;  } return devices ; }"
7537,public static boolean is Artifact Metadata (  String key ) { return key . equals (  Metadata Key . OUTPUT_SIZE )  || key . equals (  Metadata Key . OUTPUT_HASH )  || key . equals (  Metadata Key . RECORDED_PATHS )  || key . equals (  Metadata Key . RECORDED_PATH_HASHES )  ; }
7538,static  Type extract Bound For Type Variable (  Type Variable type Variable ) {  Type [  ]  bounds = type Variable . get Bounds (  )  ;  if  ( bounds . length == 0 )  {     return  Object . class ;  }  Type bound = bounds [ 0 ]  ;  if  ( bound instanceof  Type Variable )  {     bound = extract Bound For Type Variable (  (  Type Variable )  bound )  ;  } return bound ; }
7539,public boolean is Circle (  ) { return m Is Circle ; }
7540,"public com . anychart . core . ui .  Labels Factory enabled (  Boolean state ) { return new com . anychart . core . ui .  Labels Factory (  String . format (  Locale . US, js Base + "" . enabled ( %s ) "", state )  )  ; }"
7541,public void set Show Last Updated Text ( boolean show Last Updated Text ) { this . show Last Updated Text = show Last Updated Text ;  if  ( !show Last Updated Text )      last Updated Text View . set Visibility (  View . GONE )  ; }
7542,"public  Identify append (  String property, long value ) { add To User Properties (  Constants . AMP_OP_APPEND, property, value )  ;  return this ; }"
7543,"public  Parameters Builder set Viewport Size ( int viewport Width, int viewport Height, boolean viewport Orientation May Change ) { this . viewport Width = viewport Width ;  this . viewport Height = viewport Height ;  this . viewport Orientation May Change = viewport Orientation May Change ;  return this ; }"
7544,public int get Text Color (  ) { return m Text Color ; }
7545,public  Nitrite Mapper get Nitrite Mapper (  ) { if  ( nitrite Mapper == null )  {     if  ( jackson Module == null || jackson Module . is Empty (  )  )  {         nitrite Mapper = new  Jackson Mapper (  )  ;      } else {         nitrite Mapper = new  Jackson Mapper ( jackson Module )  ;      } } return nitrite Mapper ; }
7546,"public void position (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . position (  )  ; "" )  ; }"
7547,public void ignore Missing Logged Tags ( boolean should Ignore ) { should Ignore Missing Logged Tags = should Ignore ; }
7548,public  Intent [  ]  get Saved Intents (  ) { return saved Intents ; }
7549,private static boolean is Due (  String str ) { return is Due ( str . get Bytes (  )  )  ; }
7550,"public com . anychart . core . ui .  Separator parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
7551,protected  Rev Commit create Commit (  Any Object Id id ) { return new  Rev Commit ( id )  ; }
7552,"public com . anychart . core . axes .  Map Ticks stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7553,"public boolean on Key Up ( int key Code,  Key Event event ) { return m React Delegate . should Show Dev Menu Or Reload ( key Code, event )  ; }"
7554,"protected void verify All Artifacts Bound (  ) { for  (  Artifact Impl artifact : declared Artifacts )  {     if  ( !artifact . is Bound (  )  )  {         if  ( artifact . get Declared Location (  )  . equals (  Location . BUILTIN )  )  {             throw new  Human Readable Exception ( "" Artifact %s declared by %s is not bound to an action"", artifact . get Output Path (  ) , artifact . get Build Target (  )  . get Fully Qualified Name (  )  )  ;          } else {             throw new  Human Readable Exception ( "" Artifact %s declared by %s is not bound to an action .   Originally declared at %s"", artifact . get Output Path (  ) , artifact . get Build Target (  )  . get Fully Qualified Name (  ) , artifact . get Declared Location (  )  . print (  )  )  ;          }     } }}"
7555,"protected final  Standard Subject Builder check (  String format,  Object .  .  .  args ) { return do Check (  Old And New Values Are Similar . DIFFERENT, format, args )  ; }"
7556,public static  Matrix Close Guard get (  ) { if  ( !s ENABLED )  {     return NOOP ;  } return new  Matrix Close Guard (  )  ; }
7557,public T5 get Value5 (  ) { return value5 ; }
7558,"public static int compare Strings (  String a,  String b ) { if  ( a == b )  {     return 0 ;  } return a . compare To ( b )  ; }"
7559,public static  String format Date (  Date dat ) { return date Fmt . format ( dat )  ; }
7560,public boolean is Not Empty (  ) { return !is Empty (  )  ; }
7561,"public com . anychart . core . stock .  Plot y Minor Grid (  Number index Or Value,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Minor Grid ( %s, %s )  ; "", index Or Value, settings )  )  ;  return this ; }"
7562,public  Object get Object (  ) { return m Object ; }
7563,public void set Type ( int type ) { this . type = type ; }
7564,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings bounds ( com . anychart . utils .  Rect Obj bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
7565,"public com . anychart . core .  State Settings high Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . high Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7566,"public  Scope Node get Parent Scope (  Class<A> scope Annotation Class ) { check Is Annotation Scope ( scope Annotation Class )  ;  if  ( scope Annotation Class ==  Singleton . class )  {     return get Root Scope (  )  ;  }  Scope Node current Scope = this ;  while  ( current Scope != null )  {     if  ( current Scope . is Scope Annotation Supported ( scope Annotation Class )  )  {         return current Scope ;      }     current Scope = current Scope . get Parent Scope (  )  ;  } throw new  Illegal State Exception ( format ( // "" There is no parent scope of %s that supports the scope scope Annotation Class %s"", // this . name, scope Annotation Class . get Name (  )  )  )  ; }"
7567,public float get Card Radius (  ) { return m Card Radius ; }
7568,public void set Ok Color (  String color ) { m Ok Color =  Color . parse Color ( color )  ; }
7569,public  Ssh Session Factory get Ssh Session Factory (  ) { return sch ; }
7570,"public static  String keyword Made Red (  String source String,  String keyword ) {  String result = """" ;  if  ( source String != null && !"""" . equals ( source String . trim (  )  )  )  {     if  ( keyword != null && !"""" . equals ( keyword . trim (  )  )  )  {         result = source String . replace All ( keyword, ""<font color=\""red\"">"" + keyword + ""</font>"" )  ;      } else {         result = source String ;      } } return result ; }"
7571,"public  Builder set Additional Parameters ( @ Nullable  Map< String,  String> additional Parameters ) { m Additional Parameters = check Additional Params ( additional Parameters, BUILT_IN_PARAMS )  ;  return this ; }"
7572,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
7573,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
7574,public  Simple Object get Simple Object (  ) { return simple Object ; }
7575,"protected void copy Primitives (  Abstract ID3v2 Tag copy Obj ) { logger . config ( "" Copying primitives"" )  ;  super . copy Primitives ( copy Obj )  ;  if  ( copy Obj instanceof ID3v24 Tag )  {     ID3v24 Tag copy Object =  ( ID3v24 Tag )  copy Obj ;      this . footer = copy Object . footer ;      this . tag Restriction = copy Object . tag Restriction ;      this . update Tag = copy Object . update Tag ;      this . image Encoding Restriction = copy Object . image Encoding Restriction ;      this . image Size Restriction = copy Object . image Size Restriction ;      this . tag Size Restriction = copy Object . tag Size Restriction ;      this . text Encoding Restriction = copy Object . text Encoding Restriction ;      this . text Field Size Restriction = copy Object . text Field Size Restriction ;  }}"
7576,public B set Work Tree (  File work Tree ) { this . work Tree = work Tree ;  return self (  )  ; }
7577,static  Builder builder (  ) { return new  Builder (  )  ; }
7578,private  Bitmap get From Cache (  String file Name ) {  Bitmap bitmap = null ;  if  ( this . cache != null )  {     bitmap = this . cache . get ( file Name )  ;  } return bitmap ; }
7579,"public  Prepared Put Content Values Iterable prepare (  ) { return new  Prepared Put Content Values Iterable ( stor IOSQ Lite, content Values Iterable, put Resolver, use Transaction )  ; }"
7580,"protected int compute Align Offset (  View child, boolean is Layout End, boolean use Anchor ) { return 0 ; }"
7581,"public void save As Svg (  String paper Size,  Boolean landscape,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Svg ( %s, %s, %s )  ; "", wrap Quotes ( paper Size ) , landscape, wrap Quotes ( filename )  )  )  ; }"
7582,"public  Iterator named Access Iterator (  Object context Node,  Context Support support,  String local Name,  String namespace Prefix,  String namespace URI )  throws  Unsupported Axis Exception{  Named Access Navigator nav =  (  Named Access Navigator )  support . get Navigator (  )  ;  return nav . get Attribute Axis Iterator ( context Node, local Name, namespace Prefix, namespace URI )  ; }"
7583,"private void restart Process (  ) {  Tinker Log . i ( TAG, ""app is background now, i can kill quietly"" )  ;  //you can send service or broadcast intent to restart your process android . os .  Process . kill Process ( android . os .  Process . my Pid (  )  )  ; }"
7584,public int compare To (  Encoded Field other ) { return field . compare To ( other . field )  ; }
7585,"public com . anychart . core . ui .  Timeline vertical Scroll Bar (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . vertical Scroll Bar ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
7586,"public  Object [  ]  convert To Args ( @ Non Null  Orma Connection conn, @ Non Null  Todo model, boolean without Auto Id ) {  Object [  ]  args = new  Object [ without Auto Id ? 4 : 5 ]  ;  if  ( model . title != null )  {     args [ 0 ]  = model . title ;  } else {     throw new  Illegal Argument Exception ( "" Todo . title"" + "" must not be null, or use @ Nullable to declare it as NULL"" )  ;  } if  ( model . content != null )  {     args [ 1 ]  = model . content ;  } args [ 2 ]  = model . done ? 1 : 0 ;  if  ( model . created Time != null )  {     args [ 3 ]  =  Built In Serializers . serialize Date ( model . created Time )  ;  } else {     throw new  Illegal Argument Exception ( "" Todo . created Time"" + "" must not be null, or use @ Nullable to declare it as NULL"" )  ;  } if  ( !without Auto Id )  {     args [ 4 ]  = model . id ;  } return args ; }"
7587,"public static ETC2 Texture create Texture (  Input Stream input )  throws IO Exception{ int width = 0 ;  int height = 0 ;  int format = -1 ;  byte [  ]  io Buffer = new byte [ 4096 ]  ;  //  We can use the ETC1 header size as it is the same if  ( input . read ( io Buffer, 0, ETC1 . ETC_PKM_HEADER_SIZE )  != ETC1 . ETC_PKM_HEADER_SIZE )  {     throw new IO Exception ( "" Unable to read PKM file header . "" )  ;  } final  Byte Buffer header Buffer =  Byte Buffer . allocate Direct ( ETC1 . ETC_PKM_HEADER_SIZE )  . order (  Byte Order . BIG_ENDIAN )  ;  header Buffer . put ( io Buffer, 0, ETC1 . ETC_PKM_HEADER_SIZE )  . position ( 0 )  ;  if  ( !ETC2 . is Valid ( header Buffer )  )  {     throw new IO Exception ( "" Not a PKM file . "" )  ;  } width = ETC2 . get Width ( header Buffer )  ;  height = ETC2 . get Height ( header Buffer )  ;  format = ETC2 . get ETC2 Compression Type ( header Buffer )  ;  final int encoded Size = ETC2 . get Encoded Data Size ( width, height )  ;  final  Byte Buffer data Buffer =  Byte Buffer . allocate Direct ( encoded Size )  . order (  Byte Order . BIG_ENDIAN )  ;  for  ( int i = 0 ;  i < encoded Size ;   )  {     int chunk Size =  Math . min ( io Buffer . length, encoded Size - i )  ;      if  ( input . read ( io Buffer, 0, chunk Size )  != chunk Size )  {         throw new IO Exception ( "" Unable to read PKM file data . "" )  ;      }     data Buffer . put ( io Buffer, 0, chunk Size )  ;      i += chunk Size ;  } data Buffer . position ( 0 )  ;  return new ETC2 Texture ( format, width, height, data Buffer )  ; }"
7588,"public boolean execute (  String action,  String raw Args,  Callback Context callback Context )  throws JSON Exception{ JSON Array args = new JSON Array ( raw Args )  ;  return execute ( action, args, callback Context )  ; }"
7589,public  Path get Relative Header Path (  Project Filesystem relativized To ) { return relativized To . relativize ( get Absolute Header Path (  )  )  . get Path (  )  ; }
7590,"public com . anychart . core . stock . scrollerseries .  Base high Fill ( com . anychart . graphics . vector .  Gradient Key color ) { return new com . anychart . core . stock . scrollerseries .  Base (  String . format (  Locale . US, js Base + "" . high Fill ( %s ) "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ; }"
7591,"public com . anychart . charts .  Circular Gauge bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
7592,public  Beauty Photo Info get Data ( int position ) { return m Img List . get ( position )  ; }
7593,public void set Legend Height ( int height ) { m Legend Height = height ; }
7594,public static  Boolean get Is Built In (  ) { return is Built In ; }
7595,"protected void on Post Filter (  ) { //  Call listener to update  Filter View, assuming the filter always made a change if  ( m Filter Listener != null )  {     m Filter Listener . on Update Filter View ( get Main Item Count (  )  )  ;  }}"
7596,"public static void get Instance (  Firebase App app,  String foo ) { // BUG:  Diagnostic contains:  Firebase App#get (  Class )  is discouraged app . get (  String . class )  ; }"
7597,public void set Right ( float right ) { this . right = right ;  invalidate Self (  )  ; }
7598,public long get Throttle End Time Millis (  ) { return throttle End Time Millis ; }
7599,"public void set Line String Style (  Geo Json Line String Style line String Style ) { if  ( line String Style == null )  {     throw new  Illegal Argument Exception ( "" Line string style cannot be null"" )  ;  } if  ( m Line String Style != null )  {     //  Remove observer for previous style     m Line String Style . delete Observer ( this )  ;  } m Line String Style = line String Style ;  m Line String Style . add Observer ( this )  ;  check Redraw Feature ( m Line String Style )  ; }"
7600,"private void update Firebase Installation Id If Possible And Needed (  ) { if  ( config Resolver . is Performance Monitoring Enabled (  )  )  {     //  Ideal solution is for FIS to support  Pub/ Sub model: b/160343157 .      if  ( application Info Builder . has App Instance Id (  )  && !is Foreground State )  {         return ;      }      String installation Id = null ;      try {         installation Id =  Tasks . await ( firebase Installations Api . get Id (  ) , 60000, MILLISECONDS )  ;      } catch  (  Execution Exception e )  {         logger . error ( "" Unable to retrieve  Installation  Id: %s"", e . get Message (  )  )  ;      } catch  (  Interrupted Exception e )  {         logger . error ( "" Task to retrieve  Installation  Id is interrupted: %s"", e . get Message (  )  )  ;      } catch  (  Timeout Exception e )  {         logger . error ( "" Task to retrieve  Installation  Id is timed out: %s"", e . get Message (  )  )  ;      }     if  ( ! Text Utils . is Empty ( installation Id )  )  {         application Info Builder . set App Instance Id ( installation Id )  ;      } else {         logger . warn ( "" Firebase  Installation  Id is empty, contact  Firebase  Support for debugging . "" )  ;      } }}"
7601,"protected void load Url (  String url,  Map< String,  String> additional Http Headers ) { original Url = url ;  last Url = url ;  if  ( additional Http Headers != null )  {     this . last Additional Http Headers =  Collections . unmodifiable Map ( additional Http Headers )  ;  } else {     this . last Additional Http Headers = null ;  } perform Page Load Type ( url )  ; }"
7602,"public void set Orientation ( int orientation ) { if  (  ( orientation != HORIZONTAL_LIST )  &&  ( orientation != VERTICAL_LIST )  )  {     throw new  Illegal Argument Exception ( ""invalid orientation"" )  ;  } this . m Orientation = orientation ; }"
7603,public  Buffer Size Adaptation Builder set Allocator (  Default Allocator allocator ) {  Assertions . check State ( !build Called )  ;  this . allocator = allocator ;  return this ; }
7604,public  Short Buffer get Indices Buffer (  ) { return indices . get Buffer (  )  ; }
7605,public final int get Net Key Index (  ) { return m Net Key Index ; }
7606,"public static int get Int Value (  Annotation Mirror annotation,  String value Name ) { return  ( int )  get Annotation Value ( annotation, value Name )  . get Value (  )  ; }"
7607,public  Builder set Touchscreen ( com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Touchscreen value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } touchscreen_ = value . get Number (  )  ;  on Changed (  )  ;  return this ; }
7608,"public  Ct Field get Field (  )  throws  Not Found Exception{  Ct Class cc = get Ct Class (  )  ;  int index = iterator . u16bit At ( current Pos + 1 )  ;   Const Pool cp = get Const Pool (  )  ;  return cc . get Field ( cp . get Fieldref Name ( index ) , cp . get Fieldref Type ( index )  )  ; }"
7609,"public synchronized  Type Id Item intern (  Type type ) { if  ( type == null )  {     throw new  Null Pointer Exception ( ""type == null"" )  ;  } throw If Prepared (  )  ;   Type Id Item result = type Ids . get ( type )  ;  if  ( result == null )  {     result = new  Type Id Item ( new  Cst Type ( type )  )  ;      type Ids . put ( type, result )  ;  } return result ; }"
7610,"private  Rect calc Bounds ( int index,  Paint paint ) { //  Get the title  String title = get Title ( index )  ;  //  Calculate the text bounds  Rect bounds = new  Rect (  )  ;  bounds . right =  ( int )  paint . measure Text ( title )  ;  bounds . bottom =  ( int )   ( paint . descent (  )  - paint . ascent (  )  )  ;  return bounds ; }"
7611,"public com . anychart . core . annotations .  Fibonacci Fan stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7612,"public com . anychart . charts .  Tag Cloud margin (  Number value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
7613,"public void close ( boolean smooth, boolean notify ) {  View surface = get Surface View (  )  ;  if  ( surface == null )  {     return ;  } int dx, dy ;  if  ( smooth )      m Drag Helper . smooth Slide View To ( get Surface View (  ) , get Padding Left (  ) , get Padding Top (  )  )  ;  else {      Rect rect = compute Surface Layout Area ( false )  ;      dx = rect . left - surface . get Left (  )  ;      dy = rect . top - surface . get Top (  )  ;      surface . layout ( rect . left, rect . top, rect . right, rect . bottom )  ;      if  ( notify )  {         dispatch Reveal Event ( rect . left, rect . top, rect . right, rect . bottom )  ;          dispatch Swipe Event ( rect . left, rect . top, dx, dy )  ;      } else {         safe Bottom View (  )  ;      } } invalidate (  )  ; }"
7614,public int get Min Version (  ) { return min Version ; }
7615,public  Proto Fluent Assertion ignoring Extra Repeated Field Elements Of Fields (  Iterable< Integer> field Numbers ) { return using Config ( config . ignoring Extra Repeated Field Elements Of Fields ( field Numbers )  )  ; }
7616,"public void font Variant (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Variant (  )  ; "" )  ; }"
7617,public  Bundle get Data (  ) { return bundle ; }
7618,"public static  Bitmap create Bitmap (  Context context,  Scroll View v ) { int width = 0, height = 0 ;  for  ( int i = 0 ;  i < v . get Child Count (  )  ;  i++ )  {     width += v . get Child At ( i )  . get Width (  )  ;      height += v . get Child At ( i )  . get Height (  )  ;  } if  ( width <= 0 || height <= 0 )  {     return null ;  } int h =  (  (  Window Manager )  context . get System Service (  Context . WINDOW_SERVICE )  )  . get Default Display (  )  . get Height (  )  ;  if  ( height < h )      height = h ;   Bitmap bitmap =  Bitmap . create Bitmap ( width, height,  Bitmap .  Config . ARGB_8888 )  ;   Canvas canvas = new  Canvas ( bitmap )  ;  v . draw ( canvas )  ;  return bitmap ; }"
7619,"private void connection Lost (  ) { update State (  Bluetooth Status . NONE )  ;  if  ( on Event Callback != null )      run On Main Thread ( new  Runnable (  )  {         @ Override         public void run (  )  {             on Event Callback . on Toast ( "" Connection lost"" )  ;          }     } )  ; }"
7620,public  Dialog Plus create (  ) { get Holder (  )  . set Background Resource ( get Content Background Resource (  )  )  ;  return new  Dialog Plus ( this )  ; }
7621,"public com . anychart . charts .  Sankey padding (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
7622,public void close (  ) { boolean should Render = is Rendering ;  stop Render Scheduler (  )  ;  if  ( should Render )  {     //  Ensure final frame is rendered .      render (  )  ;  }}
7623,public  String get Temp Dir (  ) { return temp Dir ; }
7624,public static _ Fields find By Thrift Id ( int field Id ) { switch ( field Id )  {     case // RULE_KEY_LOGS     1:         return RULE_KEY_LOGS ;      case // LOOKED_UP_STORE_IDS     2:         return LOOKED_UP_STORE_IDS ;      default:         return null ;  }}
7625,"public com . anychart . charts .  Sparkline min Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
7626,"public void into ( @ Non Null  Remote Views remote Views, @ Id Res int view Id, int notification Id, @ Non Null  Notification notification, @ Nullable  String notification Tag, @ Nullable  Callback callback ) { long started =  System . nano Time (  )  ;  if  ( remote Views == null )  {     throw new  Illegal Argument Exception ( "" Remote Views must not be null . "" )  ;  } if  ( notification == null )  {     throw new  Illegal Argument Exception ( "" Notification must not be null . "" )  ;  } if  ( deferred )  {     throw new  Illegal State Exception ( "" Fit cannot be used with  Remote Views . "" )  ;  } if  ( placeholder Drawable != null || error Drawable != null )  {     throw new  Illegal Argument Exception ( "" Cannot use placeholder or error drawables with remote views . "" )  ;  }  Request request = create Request ( started )  ;   Remote Views Action action = new  Notification Action ( picasso, request, error Res Id, new  Remote Views Target ( remote Views, view Id ) , notification Id, notification, notification Tag, callback )  ;  perform Remote View Into ( request, action )  ; }"
7627,"public com . anychart . charts .  Linear Gauge margin (  Number value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
7628,public static boolean clean Internal Cache (  ) { return  Utils Bridge . delete All In Dir (  Utils . get App (  )  . get Cache Dir (  )  )  ; }
7629,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
7630,public long get Move To Specified Position Animation Duration (  ) { return m Move To Specified Position Animation Duration ; }
7631,public void set Password Mode ( boolean password Mode ) { this . password Mode = password Mode ;  update Display Text (  )  ; }
7632,"public void open Position End ( final int position ) { open Position ( position,  Saved Open State . END_OPEN )  ; }"
7633,"public com . anychart . core . gantt . elements .  Grouping Tasks Element fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
7634,"public  Query Builder<T> prefer Localized String Order (  ) { // SQL Cipher 3 . 5 . 0+ does not understand ""COLLATE LOCALIZED"" if  ( dao . get Database (  )  . get Raw Database (  )  instanceof SQ Lite Database )  {     string Order Collation = "" COLLATE LOCALIZED"" ;  } return this ; }"
7635,public  Unsigned Long minus (  Unsigned Long val ) { return from Long Bits ( this . value - check Not Null ( val )  . value )  ; }
7636,"private void add Predicates (  ) { int attribute Count = parser . get Attribute Count (  )  ;  if  ( attribute Count > 0 )  {     for  ( int i = 0 ;  i < attribute Count ;  i++ )  {         current Element . add Predicate ( parser . get Attribute Name ( i ) , parser . get Attribute Value ( i )  )  ;      } }}"
7637,public void remove Series Renderer (  Simple Series Renderer renderer ) { m Renderers . remove ( renderer )  ; }
7638,"public com . anychart . core . annotations .  Infinite Line height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
7639,"public static  String print (  ) { return  Optional . of Nullable ( cache )  . map (  Lru Cache::get Cache Data In List Form )  . or Else (  List . of (  )  )  . stream (  )  . map (  user Account -> user Account . to String (  )  + ""\n"" )  . collect (  Collectors . joining ( """", ""\n--CACHE CONTENT--\n"", ""----\n"" )  )  ; }"
7640,public void scale Motion ( float scale ) { if  ( scale == 1f )      return ;  for  (  Ranged Numeric Value value : get Motion Values (  )  )  value . scale ( scale )  ; }
7641,"public static  File create Agent Jar File (  String file Name )  throws IO Exception,  Cannot Compile Exception,  Not Found Exception{ return create Jar File ( new  File ( file Name )  )  ; }"
7642,"public com . anychart . core . stock . indicators . MMA mma ( com . anychart . data .  Table Mapping mapping,  Number period,  String series Type ) { return new com . anychart . core . stock . indicators . MMA (  String . format (  Locale . US, js Base + "" . mma ( %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, period, wrap Quotes ( series Type )  )  )  ; }"
7643,"public void parse Result To Map (  Radar Nearby Result res ) { m Baidu Map . clear (  )  ;  if  ( res != null && res . info List != null && res . info List . size (  )  > 0 )  {     for  ( int i = 0 ;  i < res . info List . size (  )  ;  i++ )  {          Marker Options option = new  Marker Options (  )  . icon ( ff3 )  . position ( res . info List . get ( i )  . pt )  ;           Bundle des = new  Bundle (  )  ;          if  ( res . info List . get ( i )  . comments == null || res . info List . get ( i )  . comments . equals ( """" )  )  {             des . put String ( ""des"", ""没有备注"" )  ;          } else {             des . put String ( ""des"", res . info List . get ( i )  . comments )  ;          }         option . extra Info ( des )  ;          m Baidu Map . add Overlay ( option )  ;      } } if  ( cur Page > 0 )  {     map Pre Btn . set Visibility (  View . VISIBLE )  ;  } if  ( total Page - 1 > cur Page )  {     map Next Btn . set Visibility (  View . VISIBLE )  ;  } if  ( total Page > 0 )  {     map Cur Page . set Visibility (  View . VISIBLE )  ;      map Cur Page . set Text (  String . value Of ( cur Page + 1 )  + ""/"" +  String . value Of ( total Page )  )  ;  }}"
7644,"static  This get This (  Name Space namespace,  Interpreter declaring Interpreter ) { try {      Class c ;      if  (  Capabilities . can Generate Interfaces (  )  )          c =  Class . for Name ( ""bsh . X This"" )  ;      else if  (  Capabilities . have Swing (  )  )          c =  Class . for Name ( ""bsh . J This"" )  ;      else         return new  This ( namespace, declaring Interpreter )  ;      return  (  This )   Reflect . construct Object ( c, new  Object [  ]  { namespace, declaring Interpreter } )  ;  } catch  (  Exception e )  {     throw new  Interpreter Error ( ""internal error 1 in  This: "" + e )  ;  }}"
7645,"public com . anychart . core . cartesian . series .  Continuous Range Base width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
7646,"public void start Cast Controller Activity (  Context ctx,  Media Info media Info, int position, boolean should Start ) { start Cast Controller Activity ( ctx,  Utils . from Media Info ( media Info ) , position, should Start )  ; }"
7647,"public com . anychart . palettes .  Markers marker Palette (  ) { return new com . anychart . palettes .  Markers ( js Base + "" . marker Palette (  ) "" )  ; }"
7648,public static boolean get Exception On Missing Key (  ) { return exception On Missing Key ; }
7649,public final  Disconnect Request disconnect (  ) { return  Request . disconnect (  )  . set Request Handler ( request Handler )  ; }
7650,"public final  Field Scope Logic sub Scope (  Descriptor root Descriptor,  Sub Scope Id sub Scope Id ) {  Field Scope Result result = policy For ( root Descriptor, sub Scope Id )  ;  if  ( result . recursive (  )  )  {     return result . included (  )  ? all (  )  : none (  )  ;  } else {     return sub Scope Impl ( root Descriptor, sub Scope Id )  ;  }}"
7651,"public static void put ( @ Non Null final  String key, byte [  ]  value, final int save Time ) { put ( key, value, save Time, get Default Cache Double Utils (  )  )  ; }"
7652,public  Hashed Sequence Comparator<S> get Comparator (  ) { return new  Hashed Sequence Comparator<> ( cmp )  ; }
7653,"public static  Method get Add All Null Unsupported Method (  ) { return  Helpers . get Method (  Collection Add All Tester . class, ""test Add All_null Unsupported"" )  ; }"
7654,private void release (  Bitmap Region Decoder decoder ) { if  ( mark As Unused ( decoder )  )  {     available . release (  )  ;  }}
7655,"public void get Element (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Element (  )  ; "" )  ; }"
7656,public boolean sample Has Subsample Encryption Table ( int index ) { return defines Encryption Data && sample Has Subsample Encryption Table [ index ]  ; }
7657,public boolean is2byte (  ) { char c = current Char (  )  ;  return c == 'D' || c == 'J' ; }
7658,public  List< Full Commit File> get Files (  ) { return files ; }
7659,"public com . anychart . charts .  Cartesian3d x Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
7660,public  String get Declaring Class (  ) {  Const Pool cp = get Const Pool (  )  ;  return cp . get Class Name (  )  ; }
7661,"public com . anychart . core . stock . scrollerseries .  Step Line bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
7662,"public void save As Jpg (  String width,  Number height,  Number quality,  Boolean force Transparent White,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Jpg ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( width ) , height, quality, force Transparent White, wrap Quotes ( filename )  )  )  ; }"
7663,public boolean check Is Network Type Allowed (  ) { if  ( connectivity Manager == null && context != null )  {     connectivity Manager =  (  Connectivity Manager )  context . get System Service (  Context . CONNECTIVITY_SERVICE )  ;  } if  ( connectivity Manager == null )  {     return true ;  }  Network Info network Info = connectivity Manager . get Active Network Info (  )  ;  return network Info != null &&  ( allowed Network Types == ~0 ||  ( translate Network Type To Api Flag ( network Info . get Type (  )  )  & allowed Network Types )  != 0 )  ; }
7664,"public  Animation Builder custom ( final  Animation Update Listener listener, float .  .  .  values ) { for  ( final  Rich Path path : paths )  {      Value Animator value Animator =  Value Animator . of Float ( values )  ;      value Animator . add Update Listener ( new  Value Animator .  Animator Update Listener (  )  {         @ Override         public void on Animation Update (  Value Animator animation )  {             if  ( path != null )  {                 if  ( listener != null )  {                     listener . update ( path,  (  Float )  animation . get Animated Value (  )  )  ;                  }                 if  ( path . get On Rich Path Updated Listener (  )  != null )  {                     path . get On Rich Path Updated Listener (  )  . on Path Updated (  )  ;                  }             }         }     } )  ;      apply Animator Properties ( value Animator, path )  ;  } return this ; }"
7665,"public static  Mapped Symlink Tree create Shared Library Symlink Tree (  Build Target base Build Target,  Project Filesystem filesystem,  Action Graph Builder graph Builder,  Cxx Platform cxx Platform,  Iterable<? extends  Build Rule> deps,  Function<? super  Build Rule,  Optional< Iterable<? extends  Build Rule>>> passthrough ) {  Build Target symlink Tree Target = create Shared Library Symlink Tree Target ( base Build Target, cxx Platform . get Flavor (  )  )  ;   Path symlink Tree Root = get Shared Library Symlink Tree Path ( filesystem, base Build Target, cxx Platform . get Flavor (  )  )  ;   Immutable Map< Build Target,  Native Linkable Group> roots =  Native Linkable Groups . get Native Linkable Roots ( deps, passthrough )  ;   Immutable Sorted Map< String,  Source Path> libraries =  Native Linkables . get Transitive Shared Libraries ( graph Builder,  Iterables . transform ( roots . values (  ) ,  g -> g . get Native Linkable ( cxx Platform, graph Builder )  ) , false )  ;   Immutable Map .  Builder< Path,  Source Path> links =  Immutable Map . builder (  )  ;  for  (  Map .  Entry< String,  Source Path> ent : libraries . entry Set (  )  )  {     links . put (  Paths . get ( ent . get Key (  )  ) , ent . get Value (  )  )  ;  } return new  Mapped Symlink Tree ( ""cxx_binary"", symlink Tree Target, filesystem, symlink Tree Root, links . build (  )  )  ; }"
7666,public  Collection< Device Service> get Services (  ) { return services . values (  )  ; }
7667,"public void full Screen (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . full Screen (  )  ; "" )  ; }"
7668,"public  Generate Default Layout Method Next Parent Layout$ Still No Layout_ on Unbind (  On Model Unbound Listener< Generate Default Layout Method Next Parent Layout$ Still No Layout_,  Object> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
7669,"public com . anychart . core . ui .  Crosshair Label text Direction ( com . anychart . graphics . vector . text .  Direction direction ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Direction ( %s )  ; "",  ( direction != null )  ? direction . get Js Base (  )  : null )  )  ;  return this ; }"
7670,public void set_dumped ( boolean _dumped ) { this . _dumped = _dumped ; }
7671,private static long parse Mehd (  Parsable Byte Array mehd ) { mehd . set Position (  Atom . HEADER_SIZE )  ;  int full Atom = mehd . read Int (  )  ;  int version =  Atom . parse Full Atom Version ( full Atom )  ;  return version == 0 ? mehd . read Unsigned Int (  )  : mehd . read Unsigned Long To Long (  )  ; }
7672,"protected void on Size Changed ( int w, int h, int oldw, int oldh ) { super . on Size Changed ( w, h, oldw, oldh )  ;  //  Check if the current graph is a  Vertical Bar Chart and set the // available Screen Size to the chart Height m Available Screen Size = this instanceof  Vertical Bar Chart ? m Graph Height : m Graph Width ;  if  ( get Data (  )  . size (  )  > 0 )  {     on Data Changed (  )  ;  }}"
7673,"protected E standard Floor ( E e ) { return  Iterators . get Next ( head Set ( e, true )  . descending Iterator (  ) , null )  ; }"
7674,"public static  String replace All Call Back (  String string,  Pattern pattern,  Replace Call Back replacement ) { if  ( string == null )  {     return null ;  }  Matcher m = pattern . matcher ( string )  ;  if  ( m . find (  )  )  {      String Buffer sb = new  String Buffer (  )  ;      int index = 0 ;      while  ( true )  {         m . append Replacement ( sb, replacement . replace ( m . group ( 0 ) , index++, m )  )  ;          if  ( !m . find (  )  )  {             break ;          }     }     m . append Tail ( sb )  ;      return sb . to String (  )  ;  } return string ; }"
7675,"public com . anychart . charts .  Scatter select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
7676,"public void transform (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . transform ( %s )  ; "", value )  )  ; }"
7677,"public com . anychart . charts .  Venn bounds (  String x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
7678,"public com . anychart . core . stock .  Plot y Grid (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Grid ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7679,public void collapse ( final int position ) { long item Id = get Item Id ( position )  ;  if  ( !m Expanded Ids . contains ( item Id )  )  {     return ;  } toggle ( position )  ; }
7680,"public com . anychart . charts .  Pareto marker Palette ( com . anychart . enums .  Marker Type settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . marker Palette ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
7681,"public  Inserter< Model> inserter ( @ On Conflict int on Conflict Algorithm ) { return new  Inserter<> ( conn, get Schema (  ) , on Conflict Algorithm, true )  ; }"
7682,"public com . anychart . math .  Rect get Pixel Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . get Pixel Bounds (  ) "" )  ; }"
7683,"public static  Object call2 (  Callable fun,  Scriptable this Obj,  Object arg0,  Object arg1,  Context cx,  Scriptable scope ) { return fun . call ( cx, scope, this Obj, new  Object [  ]  { arg0, arg1 } )  ; }"
7684,public  Context get Context (  ) { return this ; }
7685,public void set Show Shuffle Button ( boolean show Shuffle Button ) { this . show Shuffle Button = show Shuffle Button ;  update Shuffle Button (  )  ; }
7686,"public  Activity Info add Activity If Not Present (  Component Name component Name ) { return add Component ( activity Filters,  p -> p . activities,  (  p,  a )  -> p . activities = a, update Name ( component Name, new  Activity Info (  )  ) , false )  ; }"
7687,"public static  Bitmap get Bitmap ( @ Non Null final  String key, @ Non Null final  Cache Double Utils cache Double Utils ) { return cache Double Utils . get Bitmap ( key )  ; }"
7688,protected void skip Output Buffer (  Vpx Output Buffer output Buffer ) { decoder Counters . skipped Output Buffer Count++ ;  output Buffer . release (  )  ; }
7689,public final int get Main Item Count (  ) { return has Filter (  )  ? get Item Count (  )  : get Item Count (  )  - m Scrollable Headers . size (  )  - m Scrollable Footers . size (  )  ; }
7690,public  Verify Signature Command set Gpg Config (  Gpg Config config ) { check Callable (  )  ;  this . config = config ;  return this ; }
7691,public  Text get Body (  ) { return body ; }
7692,"public com . anychart . core . gauge .  Cap stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7693,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
7694,public boolean has Opted Out Tracking (  ) { return m Persistent Identity . get Opt Out Tracking ( m Token )  ; }
7695,"public int start Fragment For Result ( QMUI Fragment fragment, int request Code ) { if  ( !check State Loss ( ""start Fragment For Result"" )  )  {     return -1 ;  } if  ( request Code == NO_REQUEST_CODE )  {     throw new  Runtime Exception ( ""request Code can not be "" + NO_REQUEST_CODE )  ;  } QMUI Fragment Container Provider provider = find Fragment Container Provider ( true )  ;  if  ( provider == null )  {     if  (  Build Config . DEBUG )  {         throw new  Runtime Exception ( "" Can not find the fragment container provider . "" )  ;      } else {          Log . d ( TAG, "" Can not find the fragment container provider . "" )  ;          return -1 ;      } } m Source Request Code = request Code ;  fragment . m Target Fragment U Uid = m U Uid ;  fragment . m Target Request Code = request Code ;  return start Fragment ( fragment, provider )  ; }"
7696,"public com . anychart . core .  State Settings high Hatch Fill (  String function ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . high Hatch Fill ( %s )  ; "", wrap Quotes ( function )  )  )  ;  return this ; }"
7697,"public static  Simple Exo Player new Simple Instance (  Context context,  Renderers Factory renderers Factory,  Track Selector track Selector,  Load Control load Control, @ Nullable  Drm Session Manager< Framework Media Crypto> drm Session Manager,  Looper looper ) { return new Simple Instance ( context, renderers Factory, track Selector, load Control, drm Session Manager, new  Analytics Collector .  Factory (  ) , looper )  ; }"
7698,"public com . anychart . charts .  Cartesian marker Palette (  String [  ]  settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . marker Palette ( %s )  ; "", array To String Wrap Quotes ( settings )  )  )  ;  return this ; }"
7699,public T get ( X Path Element key ) { X Path Record<T> record = get Full Record ( key )  ;  if  ( record != null )  {     return record . get Value (  )  ;  } else {     return null ;  }}
7700,public static  Double mean (  List<? extends  Number> num List ) { int valid Length = valid Length ( num List )  ;  if  ( valid Length == 0 )      return null ;   Double sum = sum ( num List )  ;  if  ( sum == null )      return null ;  return sum / valid Length ; }
7701,"public  To String Builder append (  String field Name, double [  ]  array, boolean full Detail ) { style . append ( buffer, field Name, array,  Boolean . value Of ( full Detail )  )  ;  return this ; }"
7702,public float get Y (  ) { return super . get Y (  )  ; }
7703,"public void error (  Throwable exception ) { if  ( logger . is Loggable ( SEVERE )  )  {     logger . log ( SEVERE, exception . get Message (  ) , exception )  ;  }}"
7704,"public void prepare Pack (  Progress Monitor counting Monitor, @ Non Null  Set<? extends  Object Id> want, @ Non Null  Set<? extends  Object Id> have, @ Non Null  Set<? extends  Object Id> shallow )  throws IO Exception{ prepare Pack ( counting Monitor, want, have, shallow, NONE )  ; }"
7705,"public com . anychart . charts .  Stock title (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . title ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7706,"public static  Incremental File Merger Input to Non Incremental Input ( @ Non Null  Directory Input directory Input, @ Nullable  Map< Incremental File Merger Input,  Qualified Content> content Map ) {  File dir File = directory Input . get File (  )  ;  if  ( !dir File . is Directory (  )  )  {     return null ;  }  Incremental File Merger Input input =  Lazy Incremental File Merger Inputs . from New ( dir File . get Absolute Path (  ) ,  Immutable Set . of ( dir File )  )  ;  if  ( content Map != null )  {     content Map . put ( input, directory Input )  ;  } return input ; }"
7707,public  Iab Result get Result (  ) { return m Result ; }
7708,private void update Animation Time (  ) { long now = android . os .  System Clock . uptime Millis (  )  ;  if  ( m Movie Start == 0 )  {     m Movie Start = now ;  } int dur = m Movie . duration (  )  ;  if  ( dur == 0 )  {     dur = DEFAULT_MOVIEW_DURATION ;  } m Current Animation Time =  ( int )   (  ( now - m Movie Start )  % dur )  ; }
7709,"public void test Is Stopped (  ) {  Trace trace = new  Trace ( TRACE_1, mock Transport Manager, mock Clock, mock App State Monitor )  ;  current Time = 1 ;  trace . start (  )  ;  assert That ( trace . is Stopped (  )  )  . is False (  )  ;  verify ( mock Transport Manager, never (  )  )  . log ( arguments . capture (  ) , nullable (  Application Process State . class )  )  ;  current Time = 2 ;  trace . stop (  )  ;  assert That ( trace . is Stopped (  )  )  . is True (  )  ;  trace . stop (  )  ;  assert That ( trace . is Stopped (  )  )  . is True (  )  ;  //  Make sure log (  )  method is called only once .  verify ( mock Transport Manager )  . log ( arguments . capture (  ) , nullable (  Application Process State . class )  )  ;  assert That ( trace . get Start Time (  )  . get Micros (  )  )  . is Equal To ( 1 )  ;  assert That ( trace . get End Time (  )  . get Micros (  )  )  . is Equal To ( 2 )  ; }"
7710,public void add Update Listener (  Animator Update Listener listener ) { if  ( m Update Listeners == null )  {     m Update Listeners = new  Array List< Animator Update Listener> (  )  ;  } m Update Listeners . add ( listener )  ; }
7711,"private void transform Annotation Set (  Index Map index Map,  Dex .  Section set In ) { contents Out . annotation Sets . size++ ;  annotation Set Out . assert Four Byte Aligned (  )  ;  index Map . put Annotation Set Offset ( set In . get Position (  ) , annotation Set Out . get Position (  )  )  ;  int size = set In . read Int (  )  ;  annotation Set Out . write Int ( size )  ;  for  ( int j = 0 ;  j < size ;  j++ )  {     annotation Set Out . write Int ( index Map . adjust Annotation ( set In . read Int (  )  )  )  ;  }}"
7712,"void log (  String event ) { log ( event, new  Hash Map<> (  )  )  ; }"
7713,"public static double factorial ( int n ) { check Non Negative ( ""n"", n )  ;  if  ( n > MAX_FACTORIAL )  {     return  Double . POSITIVE_INFINITY ;  } else {     //  Multiplying the last  ( n & 0xf )  values into their own accumulator gives a more accurate     // result than multiplying by every Sixteenth Factorial [ n >> 4 ]  directly .      double accum = 1 . 0 ;      for  ( int i = 1 +  ( n & ~0xf )  ;  i <= n ;  i++ )  {         accum *= i ;      }     return accum * every Sixteenth Factorial [ n >> 4 ]  ;  }}"
7714,"Fetch V2 Request build (  ) { return new  Fetch V2 Request ( peer Has, wanted Refs, want Ids, client Shallow Commits, deepen Since, deepen Not Refs, depth, filter Spec, done Received, client Capabilities, agent,  Collections . unmodifiable List ( server Options ) , sideband All,  Collections . unmodifiable List ( packfile Uri Protocols )  )  ; }"
7715,"public void disable Pointer Events (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . disable Pointer Events (  )  ; "" )  ; }"
7716,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
7717,public int get Return Code (  ) { return rc ; }
7718,"public E copy From Realm ( E realm Object, int max Depth ) { check Max Depth ( max Depth )  ;  check Valid Object For Detach ( realm Object )  ;  return create Detached Copy ( realm Object, max Depth, new  Hash Map< Realm Model,  Realm Object Proxy .  Cache Data< Realm Model>> (  )  )  ; }"
7719,public boolean is Operation Completed (  ) { return operation Completed ; }
7720,"public void on Create (  ) { if  ( DEBUG )       Log . d ( TAG, "" >  Android Live Wallpaper Service - on Create (  )  "" + hash Code (  )  )  ;   Log . i ( TAG, ""service created"" )  ;  super . on Create (  )  ; }"
7721,public boolean is Empty (  ) { return size == 0 ; }
7722,"public static  Collection< Object [  ] > data (  ) { return  Arrays . as List ( new  Object [  ]  [  ]  { {  Registration Response . PARAM_CLIENT_SECRET_EXPIRES_AT }, {  Registration Response . PARAM_REGISTRATION_ACCESS_TOKEN }, {  Registration Response . PARAM_REGISTRATION_CLIENT_URI } } )  ; }"
7723,"public boolean process (  Set<? extends  Type Element> annotations,  Round Environment round Env ) { if  (  Collection Utils . is Not Empty ( annotations )  )  {      Set<? extends  Element> elements = round Env . get Elements Annotated With (  Interceptor . class )  ;      try {         parse Interceptors ( elements )  ;      } catch  (  Exception e )  {         logger . error ( e )  ;      }     return true ;  } return false ; }"
7724,"public  Rect get Whole Image Rect (  ) { int loaded Sample Size = m Loaded Sample Size ;   Bitmap bitmap = m Bitmap ;  if  ( bitmap == null )  {     return null ;  } int org Width = bitmap . get Width (  )  * loaded Sample Size ;  int org Height = bitmap . get Height (  )  * loaded Sample Size ;  return new  Rect ( 0, 0, org Width, org Height )  ; }"
7725,"public com . anychart . core . axismarkers .  Gantt Text font Decoration ( com . anychart . graphics . vector . text .  Decoration value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Decoration ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
7726,public static void do Not Use Set Crash On Incorrect Usage ( boolean crash On Incorrect Usage ) {  Shadow Trace . crash On Incorrect Usage = crash On Incorrect Usage ; }
7727,"private  Charset get Log Output Encoding Charset (  Repository repository ) { if  ( repository != null )  {      String log Output Encoding = repository . get Config (  )  . get String ( CONFIG_SECTION_I18 N, null, CONFIG_KEY_LOG_OUTPUT_ENCODING )  ;      if  ( log Output Encoding != null )  {         try {             return  Charset . for Name ( log Output Encoding )  ;          } catch  (  Illegal Argument Exception e )  {             throw die ( CLI Text . get (  )  . cannot Create Output Stream, e )  ;          }     } } return UTF_8 ; }"
7728,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
7729,"public com . anychart . charts .  Cartesian3d padding (  Number value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
7730,"public static boolean is Library Project (  Project project ) { return has Plugins ( project, LIBRARY_SUPPORT_PLUGINS )  ; }"
7731,"public com . anychart . standalones .  Color Range overlap Mode ( com . anychart . enums .  Labels Overlap Mode mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . overlap Mode ( %s )  ; "",  ( mode != null )  ? mode . get Js Base (  )  : null )  )  ;  return this ; }"
7732,"public void save As Pdf (  Number paper Size Or Width Or Options,  Boolean landscape,  Number x,  Number y,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Pdf ( %s, %s, %s, %s, %s )  ; "", paper Size Or Width Or Options, landscape, x, y, wrap Quotes ( filename )  )  )  ; }"
7733,"private void test Distinct (  ) {  Flowable< Person> person Flowable = realm . as Flowable (  )  . map (  realm -> realm . where (  Person . class )  . sort ( ""name"" )  . find All (  )  . get ( 0 )  )  ;  // distinct (  )  and distinct Until Changed (  )  uses standard equals with older objects stored in a  Hash Map .  //  Realm objects auto-update which means the objects stored will also auto-update .  //  This makes comparing against older objects impossible  ( even if the new object has changed )  because the // cached object will also have changed .  //  Use a key Selector function to work around this .   Disposable distinct Disposable = person Flowable . distinct (  )  . subscribe (  person -> show Status ( ""distinct (  ) : "" + person . get Name (  )  + "":"" + person . get Age (  )  )  )  ;  composite Disposable . add ( distinct Disposable )  ;   Disposable distinct Key Selector Disposable = person Flowable . distinct (  person -> person . get Age (  )  )  . subscribe (  person -> show Status ( ""distinct ( key Selector ) : "" + person . get Name (  )  + "":"" + person . get Age (  )  )  )  ;  composite Disposable . add ( distinct Key Selector Disposable )  ; }"
7734,"public void set Rating ( long rating ) { set Object Value (  Data Types . OBJ_RATING, rating )  ; }"
7735,public final  String get Name (  ) { return name (  )  ; }
7736,"private static void apply Open SSL Fix (  )  throws  Security Exception{ final  String method Name = "":apply Open SSL Fix"" ;  if  (  Build . VERSION . SDK_INT < VERSION_CODE_JELLY_BEAN ||  Build . VERSION . SDK_INT > VERSION_CODE_JELLY_BEAN_MR2 )  {     //  No need to apply the fix      Logger . v ( TAG + method Name, "" No need to apply the  Open SSL fix . "" )  ;      return ;  } try {     //  Mix in the device- and invocation-specific seed .       Class . for Name ( ""org . apache . harmony . xnet . provider . jsse .  Native Crypto"" )  . get Method ( ""RAND_seed"", byte [  ]  . class )  . invoke ( null, generate Seed (  )  )  ;      //  Mix output of  Linux PRNG into  Open SSL's PRNG     int bytes Read =  (  Integer )   Class . for Name ( ""org . apache . harmony . xnet . provider . jsse .  Native Crypto"" )  . get Method ( ""RAND_load_file"",  String . class, long . class )  . invoke ( null, ""/dev/urandom"", ONE_KB )  ;      if  ( bytes Read != ONE_KB )  {         throw new IO Exception ( "" Unexpected number of bytes read from  Linux PRNG: "" + bytes Read )  ;      } } catch  ( IO Exception |  Class Not Found Exception |  No Such Method Exception |  Illegal Access Exception |  Invocation Target Exception e )  {      Logger . e ( TAG + method Name, "" Failed to seed  Open SSL PRNG .  "", """", ADAL Error . DEVICE_PRNG_FIX_ERROR, e )  ;      throw new  Security Exception ( "" Failed to seed  Open SSL PRNG"", e )  ;  }}"
7737,public static  Scriptable get Top Level Scope (  Scriptable obj ) { for  (  ;   ;   )  {      Scriptable parent = obj . get Parent Scope (  )  ;      if  ( parent == null )  {         return obj ;      }     obj = parent ;  }}
7738,"public com . anychart . charts .  Gantt row Selected Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
7739,"private void show Tip (  String show Text ) {  Toast . make Text (  Words Book Activity . this, show Text,  Toast . LENGTH_SHORT )  . show (  )  ; }"
7740,"public com . anychart . charts .  Sunburst stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7741,"public com . anychart . palettes .  Range Colors palette (  ) { return new com . anychart . palettes .  Range Colors ( js Base + "" . palette (  ) "" )  ; }"
7742,public static void set Allow Pii ( final boolean allow Flag ) { s Allow Pii = allow Flag ; }
7743,"public  Class<?> to Class (  Class Loader loader,  Protection Domain domain )  throws  Cannot Compile Exception{  Class Pool cp = get Class Pool (  )  ;  if  ( loader == null )      loader = cp . get Class Loader (  )  ;  return cp . to Class ( this, null, loader, domain )  ; }"
7744,public  List<? extends  Hunk Header> get Hunks (  ) { if  ( hunks == null )      return  Collections . empty List (  )  ;  return hunks ; }
7745,"public com . anychart . core .  Separate Chart bounds (  Number x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, height )  )  ;  return this ; }"
7746,"public static  Authorization Exception from Json ( @ Non Null JSON Object json )  throws JSON Exception{ check Not Null ( json, ""json cannot be null"" )  ;  return new  Authorization Exception ( json . get Int ( KEY_TYPE ) , json . get Int ( KEY_CODE ) ,  Json Util . get String If Defined ( json, KEY_ERROR ) ,  Json Util . get String If Defined ( json, KEY_ERROR_DESCRIPTION ) ,  Json Util . get Uri If Defined ( json, KEY_ERROR_URI ) , null )  ; }"
7747,"public void add Const Zero (  Ct Class type ) { if  ( type . is Primitive (  )  )  {     if  ( type ==  Ct Class . long Type )          add Opcode ( LCONST_0 )  ;      else if  ( type ==  Ct Class . float Type )          add Opcode ( FCONST_0 )  ;      else if  ( type ==  Ct Class . double Type )          add Opcode ( DCONST_0 )  ;      else if  ( type ==  Ct Class . void Type )          throw new  Runtime Exception ( ""void type?"" )  ;      else         add Opcode ( ICONST_0 )  ;  } else     add Opcode ( ACONST_NULL )  ; }"
7748,public  String get Syslog Host (  ) { return syslog Host ; }
7749,"public void time Event ( final  String event Name ) { if  ( has Opted Out Tracking (  )  )      return ;  final long write Time =  System . current Time Millis (  )  ;  synchronized  ( m Event Timings )  {     m Event Timings . put ( event Name, write Time )  ;      m Persistent Identity . add Time Event ( event Name, write Time )  ;  }}"
7750,"public  Complete Builder type Mapping Finder ( @ Non Null  Type Mapping Finder type Mapping Finder ) { check Not Null ( type Mapping Finder, "" Please specify type Mapping Finder"" )  ;  this . type Mapping Finder = type Mapping Finder ;  return this ; }"
7751,"public static  String read String (  Byte Buffer buffer, boolean utf8 ) { if  ( utf8 )  {     //   The lengths are encoded in the same way as for the 16-bit format     // but using 8-bit rather than 16-bit integers .      int str Len = read Len ( buffer )  ;      int bytes Len = read Len ( buffer )  ;      byte [  ]  bytes =  Buffers . read Bytes ( buffer, bytes Len )  ;       String str = new  String ( bytes, charset UTF8 )  ;      // zero     int trailling =  Buffers . read U Byte ( buffer )  ;      return str ;  } else {     //  The length is encoded as either one or two 16-bit integers as per the comment Ref .  .  .      int str Len = read Len16 ( buffer )  ;       String str =  Buffers . read String ( buffer, str Len )  ;      // zero     int trailling =  Buffers . read U Short ( buffer )  ;      return str ;  }}"
7752,"public  Builder after (  Animator anim ) {  Node node = m Node Map . get ( anim )  ;  if  ( node == null )  {     node = new  Node ( anim )  ;      m Node Map . put ( anim, node )  ;      m Nodes . add ( node )  ;  }  Dependency dependency = new  Dependency ( node,  Dependency . AFTER )  ;  m Current Node . add Dependency ( dependency )  ;  return this ; }"
7753,public  Checkout Command add Paths (  List< String> p ) { check Callable (  )  ;  this . paths . add All ( p )  ;  return this ; }
7754,"public float get ( int key, float value If Key Not Found ) { int i = binary Search ( m Keys, m Size, key )  ;  if  ( i < 0 )  {     return value If Key Not Found ;  } else {     return m Values [ i ]  ;  }}"
7755,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
7756,"private static  Rop pick If (  Type List types,  Rop int Z,  Rop obj Z,  Rop int Int,  Rop obj Obj ) { switch ( types . size (  )  )  {     case 1:         {             switch ( types . get Type ( 0 )  . get Basic Frame Type (  )  )  {                 case  Type . BT_INT:                     {                         return int Z ;                      }                 case  Type . BT_OBJECT:                     {                         if  ( obj Z != null )  {                             return obj Z ;                          }                     }             }             break ;          }     case 2:         {             int bt = types . get Type ( 0 )  . get Basic Frame Type (  )  ;              if  ( bt == types . get Type ( 1 )  . get Basic Frame Type (  )  )  {                 switch ( bt )  {                     case  Type . BT_INT:                         {                             return int Int ;                          }                     case  Type . BT_OBJECT:                         {                             if  ( obj Obj != null )  {                                 return obj Obj ;                              }                         }                 }             }             break ;          } } return throw Bad Types ( types )  ; }"
7757,"public  String Builder insert ( int offset, char c ) { insert0 ( offset, c )  ;  return this ; }"
7758,"private void on Connectivity State Change (  Managed Channel channel ) {  Connectivity State new State = channel . get State ( true )  ;   Logger . debug ( LOG_TAG, "" Current g RPC connectivity state: "" + new State )  ;  //  Clear the timer, so we don't end up with multiple connectivity Attempt Timers .  clear Connectivity Attempt Timer (  )  ;  if  ( new State ==  Connectivity State . CONNECTING )  {      Logger . debug ( LOG_TAG, "" Setting the connectivity Attempt Timer"" )  ;      connectivity Attempt Timer = async Queue . enqueue After Delay (  Timer Id . CONNECTIVITY_ATTEMPT_TIMER, CONNECTIVITY_ATTEMPT_TIMEOUT_MS,  (  )  -> {          Logger . debug ( LOG_TAG, ""connectivity Attempt Timer elapsed .   Resetting the channel . "" )  ;          clear Connectivity Attempt Timer (  )  ;          reset Channel ( channel )  ;      } )  ;  } //  Re-listen for next state change .  channel . notify When State Changed ( new State,  (  )  -> async Queue . enqueue And Forget (  (  )  -> on Connectivity State Change ( channel )  )  )  ; }"
7759,"public  Matchable Call then Return File ( int response Code,  String .  .  .  json Files ) {  List< Mock Response> response From Files = new  Array List<> ( json Files . length )  ;  for  (  String json File : json Files )  {     try {         response From Files . add (  Rest Mock Utils . create Response From File ( REST Mock File Parser, json File, response Code )  )  ;      } catch  (  Exception e )  {         REST Mock Server . get Logger (  )  . error ( ""<-  Response FILE READ ERROR"", e )  ;          response From Files . add ( dispatcher . create Error Response ( e )  )  ;      } } return then Return ( response From Files . to Array ( new  Mock Response [ response From Files . size (  )  ]  )  )  ; }"
7760,"public static void load Exopackage Jars (  Context context ) { load Exopackage Jars ( context, false )  ; }"
7761,"public  Web Listener Manager set Downloader (  Web View web View, android . webkit .  Download Listener download Listener ) { return super . set Downloader ( web View, new  Default Download Impl ( get Activity (  ) , web View, this . m Agent Web . get Permission Interceptor (  )  )  {     @ Override     protected  Resource Request create Resource Request (  String url )  {         return  Download Impl . get Instance ( get Context (  )  )  . url ( url )  . quick Progress (  )  . add Header ( """", """" )  . set Enable Indicator ( true )  . auto Open Ignore MD5 (  )  . set Retry ( 5 )  . set Block Max Time ( 100000 L )  ;      }     @ Override     protected void task Enqueue (  Resource Request resource Request )  {         resource Request . enqueue ( new  Download Listener Adapter (  )  {             @ Override             public void on Start (  String url,  String user Agent,  String content Disposition,  String mimetype, long content Length,  Extra extra )  {                 super . on Start ( url, user Agent, content Disposition, mimetype, content Length, extra )  ;              }             @ Main Thread             @ Override             public void on Progress (  String url, long downloaded, long length, long used Time )  {                 super . on Progress ( url, downloaded, length, used Time )  ;              }             @ Override             public boolean on Result (  Throwable throwable,  Uri path,  String url,  Extra extra )  {                 return super . on Result ( throwable, path, url, extra )  ;              }         } )  ;      } } )  ; }"
7762,"public void update Forecast (  Weather Forecast forecast ) {  System Clock . sleep ( 1000 )  ;  // Update the data if  ( forecast == null )      return ;   List< Day Forecast> day Forecast List = forecast . get Forecast (  )  ;  units = forecast . get Unit (  )  ;  // Update the array inside the card  Array List< Weather Object> objs = new  Array List< Weather Object> (  )  ;  for  (  Day Forecast day Forecast : day Forecast List )  {      Weather Object weather Object = new  Weather Object ( this, day Forecast )  ;      objs . add ( weather Object )  ;  } get Linear List Adapter (  )  . add All ( objs )  ;  update Progress Bar ( true, true )  ; }"
7763,"public void ensure Capacity ( int minimum Capacity ) { if  ( m Hashes . length < minimum Capacity )  {     final int [  ]  ohashes = m Hashes ;      final  Object [  ]  oarray = m Array ;      alloc Arrays ( minimum Capacity )  ;      if  ( m Size > 0 )  {          System . arraycopy ( ohashes, 0, m Hashes, 0, m Size )  ;           System . arraycopy ( oarray, 0, m Array, 0, m Size )  ;      }     free Arrays ( ohashes, oarray, m Size )  ;  }}"
7764,static  Comparison Result different No Description (  ) { return DIFFERENT_NO_DESCRIPTION ; }
7765,public int button Number (  ) { switch ( this )  {     case SC_1:     case HAM_1:         return 1 ;      case SC_2_1:     case SC_2_2:     case HAM_2:         return 2 ;      case SC_3_1:     case SC_3_2:     case SC_3_3:     case SC_3_4:     case HAM_3:         return 3 ;      case SC_4_1:     case SC_4_2:     case HAM_4:         return 4 ;      case SC_5_1:     case SC_5_2:     case SC_5_3:     case SC_5_4:     case HAM_5:         return 5 ;      case SC_6_1:     case SC_6_2:     case SC_6_3:     case SC_6_4:     case SC_6_5:     case SC_6_6:     case HAM_6:         return 6 ;      case SC_7_1:     case SC_7_2:     case SC_7_3:     case SC_7_4:     case SC_7_5:     case SC_7_6:         return 7 ;      case SC_8_1:     case SC_8_2:     case SC_8_3:     case SC_8_4:     case SC_8_5:     case SC_8_6:     case SC_8_7:         return 8 ;      case SC_9_1:     case SC_9_2:     case SC_9_3:         return 9 ;      case  Unknown:         return 0 ;      default:         return -1 ;  }}
7766,public  Scope element Scope (  ) { long hasher Count = hasher . get Count (  )  ;  return  (  )  -> {     if  ( hasher . get Count (  )  > hasher Count )  {         element Count++ ;      } } ; }
7767,"public com . anychart . core . stock . scrollerseries .  Step Area height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
7768,"public com . anychart . charts .  Linear Gauge auto Redraw (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . auto Redraw ( %s )  ; "", enabled )  )  ;  return this ; }"
7769,"public void shutdown After Late Coalescing (  Protocol protocol,  Mock Web Server mock Web Server )  throws  Exception{ set Up ( protocol, mock Web Server )  ;   Count Down Latch latch = new  Count Down Latch ( 2 )  ;   Callback callback = new  Callback (  )  {     @ Override     public void on Response (  Call call,  Response response )  {         fail (  )  ;      }     @ Override     public void on Failure (  Call call, IO Exception e )  {         latch . count Down (  )  ;      } } ;  client = client . new Builder (  )  . event Listener Factory ( client Test Rule . wrap ( new  Event Listener (  )  {     int call Count ;      @ Override     public void connection Acquired (  Call call,  Connection connection )  {         try {             if  ( call Count++ == 1 )  {                 server . shutdown (  )  ;              }         } catch  ( IO Exception e )  {             fail (  )  ;          }     } } )  )  . build (  )  ;  client . new Call ( new  Request .  Builder (  )  . url ( server . url ( """" )  )  . build (  )  )  . enqueue ( callback )  ;  client . new Call ( new  Request .  Builder (  )  . url ( server . url ( """" )  )  . build (  )  )  . enqueue ( callback )  ;  latch . await (  )  ; }"
7770,public static boolean is Network Available (  Context context ) { try {      Connectivity Manager cm =  (  Connectivity Manager )  context . get System Service (  Context . CONNECTIVITY_SERVICE )  ;       Network Info info = cm . get Active Network Info (  )  ;      return null != info && info . is Connected (  )  ;  } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  } return false ; }
7771,"public void to Svg (  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Svg ( %s, %s )  ; "", width, height )  )  ; }"
7772,"protected void load Sequence Numbers (  ) { for  (  Provisioned Mesh Node node : nodes )  {     sequence Numbers . put ( node . get Unicast Address (  ) , node . get Sequence Number (  )  )  ;  }}"
7773,public  Camera get Current Camera (  ) { return m Current Scene . get Camera (  )  ; }
7774,"public  Ad Playback State with Played Ad ( int ad Group Index, int ad Index In Ad Group ) {  Ad Group [  ]  ad Groups =  Arrays . copy Of ( this . ad Groups, this . ad Groups . length )  ;  ad Groups [ ad Group Index ]  = ad Groups [ ad Group Index ]  . with Ad State ( AD_STATE_PLAYED, ad Index In Ad Group )  ;  return new  Ad Playback State ( ad Group Times Us, ad Groups, ad Resume Position Us, content Duration Us )  ; }"
7775,"public  Builder set Additional Parameters ( @ Nullable  Map< String,  String> additional Parameters ) { m Additional Parameters = check Additional Params ( additional Parameters, BUILT_IN_PARAMS )  ;  return this ; }"
7776,"public  List< Intent Filter> get Intent Filters For Receiver (  Component Name component Name )  throws  Name Not Found Exception{ return get Intent Filters For Component ( component Name, receiver Filters )  ; }"
7777,"public com . anychart . core . utils .  Error error (  ) { return new com . anychart . core . utils .  Error ( js Base + "" . error (  ) "" )  ; }"
7778,"public com . anychart . core . ui .  Timeline position ( com . anychart . enums .  Anchor position ) { return new com . anychart . core . ui .  Timeline (  String . format (  Locale . US, js Base + "" . position ( %s ) "",  ( position != null )  ? position . get Js Base (  )  : null )  )  ; }"
7779,"public com . anychart . charts .  Sunburst select Marquee Fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
7780,"public void translate ( final float [  ]  transformed Pts,  Matrix output Matrix ) { output Matrix . reset (  )  ;  output Matrix . set ( m Matrix Touch )  ;  final float x = transformed Pts [ 0 ]  - offset Left (  )  ;  final float y = transformed Pts [ 1 ]  - offset Top (  )  ;  output Matrix . post Translate ( -x, -y )  ; }"
7781,"public  File get Extra Dex Dir (  ) { return get Dex Dir ( get Dex Parent Dir (  ) ,  Constant . LOCAL_PLUGIN_INDEPENDENT_EXTRA_DEX_SUB_DIR )  ; }"
7782,"protected boolean is Valid Path (  String path ) { if  ( path == null )  {     return false ;  } if  ( !PATH_PATTERN . matcher ( path )  . matches (  )  )  {     return false ;  } int slash2 Count = count Token ( ""//"", path )  ;  if  ( is Off ( ALLOW_2_SLASHES )  &&  ( slash2 Count > 0 )  )  {     return false ;  } int slash Count = count Token ( ""/"", path )  ;  int dot2 Count = count Token ( "" .  . "", path )  ;  if  ( dot2 Count > 0 &&  ( slash Count - slash2 Count - 1 )  <= dot2 Count )  {     return false ;  } return true ; }"
7783,public static J Sch Text get (  ) { return NLS . get Bundle For ( J Sch Text . class )  ; }
7784,protected void on Create (  Bundle saved Instance State ) { super . on Create ( saved Instance State )  ;  set Content View ( R . layout . activity_video_sample )  ;   Butter Knife . inject ( this )  ;  initialize Video View (  )  ;  initialize Poster (  )  ;  hook Draggable View Listener (  )  ; }
7785,"public com . anychart . core . stock . scrollerseries .  Range Spline Area hatch Fill (  String hatch Fill Function ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "", wrap Quotes ( hatch Fill Function )  )  )  ;  return this ; }"
7786,"private static  String construct Set Children Error Message (  View Group view To Manage,  View Group Manager view Manager,  Readable Array children Tags ) {  View At Index [  ]  views To Add = new  View At Index [ children Tags . size (  )  ]  ;  for  ( int i = 0 ;  i < children Tags . size (  )  ;  i++ )  {     views To Add [ i ]  = new  View At Index ( children Tags . get Int ( i ) , i )  ;  } return construct Manage Children Error Message ( view To Manage, view Manager, null, views To Add, null )  ; }"
7787,public boolean matches ( @ Non Null  String version ) { return matches (  Delimited Version . parse ( version )  )  ; }
7788,"public com . anychart . charts .  Tree Map select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7789,"public com . anychart . core . gantt . elements .  Progress Element anchor (  String anchor ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . anchor ( %s )  ; "", wrap Quotes ( anchor )  )  )  ;  return this ; }"
7790,"public com . anychart . charts .  Heat Map fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
7791,"public  Rx Dao<T, K> rx (  ) { if  ( rx Dao == null )  {     rx Dao = new  Rx Dao<> ( this,  Schedulers . io (  )  )  ;  } return rx Dao ; }"
7792,"public void unsafe Set Filter (  Texture Filter min Filter,  Texture Filter mag Filter ) { unsafe Set Filter ( min Filter, mag Filter, false )  ; }"
7793,public  Download Listener Bunch .  Builder append ( @ Nullable  Download Listener listener ) { if  ( listener != null && !listener List . contains ( listener )  )  {     listener List . add ( listener )  ;  } return this ; }
7794,Parameterized Type Name factory Type (  ) { return framework Type (  )  . framework Class Of ( optional Type (  )  )  ; }
7795,public long get Bit Rate As Number (  ) { return bitrate ; }
7796,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
7797,"public void on Range Change ( int start, int end ) { this . m Pos = start ; }"
7798,public  Selection Creator countable ( boolean countable ) { m Selection Spec . countable = countable ;  return this ; }
7799,public void close (  ) { if  ( close Reader )  {     reader . close (  )  ;  }}
7800,public  Test Class set String Value (  String string Value ) { this . string Value = string Value ;  return this ; }
7801,"public static T [  ]  not Empty ( final T [  ]  array, final  String message, final  Object .  .  .  values ) { if  ( array == null )  {     throw new  Null Pointer Exception (  String . format ( message, values )  )  ;  } if  ( array . length == 0 )  {     throw new  Illegal Argument Exception (  String . format ( message, values )  )  ;  } return array ; }"
7802,public static boolean is Permanent Write Error (  Status status ) { return is Permanent Error ( status )  && !status . get Code (  )  . equals (  Status .  Code . ABORTED )  ; }
7803,public  Amplitude Client set Offline ( boolean offline ) { this . offline = offline ;  //  Try to update to the server once offline mode is disabled .  if  ( !offline )  {     upload Events (  )  ;  } return this ; }
7804,public  Builder set Source ( com . didiglobal . booster . aapt2 .  Resources .  Source Position value ) { if  ( source Builder_ == null )  {     if  ( value == null )  {         throw new  Null Pointer Exception (  )  ;      }     source_ = value ;      on Changed (  )  ;  } else {     source Builder_ . set Message ( value )  ;  } return this ; }
7805,public  Refresh Layout set Enable Load More ( boolean enabled ) { this . m Manual Load More = true ;  this . m Enable Load More = enabled ;  return this ; }
7806,public final  Mesh Network Live Data get Network Live Data (  ) { return m Nrf Mesh Repository . get Mesh Network Live Data (  )  ; }
7807,public static  Builder builder (  ) { return new  Builder (  )  ; }
7808,"public com . anychart . core . annotations .  Infinite Line hover Gap (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hover Gap ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
7809,public URI get Server Url (  ) { return configuration . get Server Url (  )  ; }
7810,"public com . anychart . core . ui .  Background background (  ) { return new com . anychart . core . ui .  Background ( js Base + "" . background (  ) "" )  ; }"
7811,"public static  Drawable make Cubic Gradient Scrim Drawable ( int base Color, int num Stops, final int gravity ) { //  Generate a cache key by hashing together the inputs, based on the method described in the  Effective  Java book int cache Key Hash = base Color ;  cache Key Hash = 31 * cache Key Hash + num Stops ;  cache Key Hash = 31 * cache Key Hash + gravity ;   Drawable cached Gradient = cubic Gradient Scrim Cache . get ( cache Key Hash )  ;  if  ( cached Gradient != null )  {     return cached Gradient ;  } num Stops =  Math . max ( num Stops, 2 )  ;   Paint Drawable paint Drawable = new  Paint Drawable (  )  ;  paint Drawable . set Shape ( new  Rect Shape (  )  )  ;  final int [  ]  stop Colors = new int [ num Stops ]  ;  int red =  Color . red ( base Color )  ;  int green =  Color . green ( base Color )  ;  int blue =  Color . blue ( base Color )  ;  int alpha =  Color . alpha ( base Color )  ;  for  ( int i = 0 ;  i < num Stops ;  i++ )  {     float x = i * 1f /  ( num Stops - 1 )  ;      float opacity =  Math Util . constrain ( 0, 1,  ( float )   Math . pow ( x, 3 )  )  ;      stop Colors [ i ]  =  Color . argb (  ( int )   ( alpha * opacity ) , red, green, blue )  ;  } final float x0, x1, y0, y1 ;  switch ( gravity &  Gravity . HORIZONTAL_GRAVITY_MASK )  {     case  Gravity . LEFT:         x0 = 1 ;          x1 = 0 ;          break ;      case  Gravity . RIGHT:         x0 = 0 ;          x1 = 1 ;          break ;      case  Gravity . CENTER_HORIZONTAL:     default:         x0 = 0 ;          x1 = 0 ;          break ;  } switch ( gravity &  Gravity . VERTICAL_GRAVITY_MASK )  {     case  Gravity . TOP:         y0 = 1 ;          y1 = 0 ;          break ;      case  Gravity . BOTTOM:         y0 = 0 ;          y1 = 1 ;          break ;      case  Gravity . CENTER_VERTICAL:     default:         y0 = 0 ;          y1 = 0 ;          break ;  } paint Drawable . set Shader Factory ( new  Shape Drawable .  Shader Factory (  )  {     @ Override     public  Shader resize ( int width, int height )  {         return new  Linear Gradient ( width * x0, height * y0, gravity ==  Gravity . CENTER_VERTICAL ? width : width * x1, gravity ==  Gravity . CENTER_HORIZONTAL ? height : height * y1, gravity ==  Gravity . CENTER_HORIZONTAL || gravity ==  Gravity . CENTER_VERTICAL ? make Double Stop Colors ( stop Colors )  : stop Colors, null,  Shader .  Tile Mode . CLAMP )  ;      } } )  ;  cubic Gradient Scrim Cache . put ( cache Key Hash, paint Drawable )  ;  return paint Drawable ; }"
7812,"public com . anychart . core . ui .  Crosshair x Label (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Label ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7813,public final int get Item Count (  ) { return 0 ; }
7814,"private  View create Custom View Internal (  View parent,  View view,  String name,  Context context,  Attribute Set attrs ) { //  If  Custom View Creation is off skip this .  if  ( view == null && name . index Of ( ' . ' )  > -1 )  {     if  ( m Constructor Args == null )  {         m Constructor Args =  Reflection Utils . get Field (  Layout Inflater . class, ""m Constructor Args"" )  ;      }     final  Object [  ]  m Constructor Args Arr =  (  Object [  ]  )   Reflection Utils . get Value ( m Constructor Args, this )  ;      final  Object last Context = m Constructor Args Arr [ 0 ]  ;      m Constructor Args Arr [ 0 ]  = parent != null ? parent . get Context (  )  : context ;       Reflection Utils . set Value ( m Constructor Args, this, m Constructor Args Arr )  ;      try {         view = create View ( name, null, attrs )  ;      } catch  (  Class Not Found Exception ignored )  {     } finally {         m Constructor Args Arr [ 0 ]  = last Context ;           Reflection Utils . set Value ( m Constructor Args, this, m Constructor Args Arr )  ;      } } return view ; }"
7815,public void set Fragment ( android . app .  Fragment fragment ) { this . parent Fragment = new  Fragment Wrapper ( fragment )  ; }
7816,"private void visit Node ( int depth,  Node node ) { if  ( node == m Start Node )  {     m In Range = true ;  } if  ( m In Range )  {     visit Before Children ( depth, node )  ;      if  ( m Open Tag Only && m Start Node == node )  {         m In Range = false ;          return ;      } }  Node List children = node . get Child Nodes (  )  ;  for  ( int i = 0, n = children . get Length (  )  ;  i < n ;  i++ )  {      Node child = children . item ( i )  ;      visit Node ( depth + 1, child )  ;  } if  ( m In Range )  {     visit After Children ( depth, node )  ;  } if  ( node == m End Node )  {     m In Range = false ;  }}"
7817,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
7818,"public static byte [  ]  get Key Grip ( PGP Public Key public Key )  throws PGP Exception{ SHA1 grip = SHA1 . new Instance (  )  ;  grip . set Detect Collision ( false )  ;  switch ( public Key . get Algorithm (  )  )  {     case  Public Key Algorithm Tags . RSA_GENERAL:     case  Public Key Algorithm Tags . RSA_ENCRYPT:     case  Public Key Algorithm Tags . RSA_SIGN:          Big Integer modulus =  (  ( RSA Public BCPG Key )  public Key . get Public Key Packet (  )  . get Key (  )  )  . get Modulus (  )  ;          hash ( grip, modulus . to Byte Array (  )  )  ;          break ;      case  Public Key Algorithm Tags . DSA:         DSA Public BCPG Key dsa =  ( DSA Public BCPG Key )  public Key . get Public Key Packet (  )  . get Key (  )  ;          hash ( grip, dsa . get P (  )  . to Byte Array (  ) , 'p', true )  ;          hash ( grip, dsa . get Q (  )  . to Byte Array (  ) , 'q', true )  ;          hash ( grip, dsa . get G (  )  . to Byte Array (  ) , 'g', true )  ;          hash ( grip, dsa . get Y (  )  . to Byte Array (  ) , 'y', true )  ;          break ;      case  Public Key Algorithm Tags . ELGAMAL_GENERAL:     case  Public Key Algorithm Tags . ELGAMAL_ENCRYPT:          El Gamal Public BCPG Key eg =  (  El Gamal Public BCPG Key )  public Key . get Public Key Packet (  )  . get Key (  )  ;          hash ( grip, eg . get P (  )  . to Byte Array (  ) , 'p', true )  ;          hash ( grip, eg . get G (  )  . to Byte Array (  ) , 'g', true )  ;          hash ( grip, eg . get Y (  )  . to Byte Array (  ) , 'y', true )  ;          break ;      case  Public Key Algorithm Tags . ECDH:     case  Public Key Algorithm Tags . ECDSA:     case  Public Key Algorithm Tags . EDDSA:         EC Public BCPG Key ec =  ( EC Public BCPG Key )  public Key . get Public Key Packet (  )  . get Key (  )  ;          ASN1 Object Identifier curve OID = ec . get Curve OID (  )  ;          // BC doesn't know these OI Ds .          if  ( OID_OPENPGP_ED25519 . equals ( curve OID . get Id (  )  )  || OID_RFC8410_ED25519 . equals ( curve OID . get Id (  )  )  )  {             return hash Ed25519 ( grip, ec . get Encoded Point (  )  )  ;          } else if  (  Cryptlib Object Identifiers . curvey25519 . equals ( curve OID )  || OID_RFC8410_CURVE25519 . equals ( curve OID . get Id (  )  )  )  {             // libgcrypt uses  Montgomery form .              return hash Curve25519 ( grip, ec . get Encoded Point (  )  )  ;          }         X9 EC Parameters params = get X9 Parameters ( curve OID )  ;          if  ( params == null )  {             throw new PGP Exception (  Message Format . format ( BC Text . get (  )  . unknown Curve, curve OID . get Id (  )  )  )  ;          }         //  Need to write p, a, b, g, n, q          Big Integer q = ec . get Encoded Point (  )  ;          byte [  ]  g = params . get G (  )  . get Encoded ( false )  ;           Big Integer a = params . get Curve (  )  . get A (  )  . to Big Integer (  )  ;           Big Integer b = params . get Curve (  )  . get B (  )  . to Big Integer (  )  ;           Big Integer n = params . get N (  )  ;           Big Integer p = null ;           Finite Field field = params . get Curve (  )  . get Field (  )  ;          if  ( EC Algorithms . is Fp Field ( field )  )  {             p = field . get Characteristic (  )  ;          }         if  ( p == null )  {             //  Don't know .  .  .              throw new PGP Exception (  Message Format . format ( BC Text . get (  )  . unknown Curve Parameters, curve OID . get Id (  )  )  )  ;          }         hash ( grip, p . to Byte Array (  ) , 'p', false )  ;          hash ( grip, a . to Byte Array (  ) , 'a', false )  ;          hash ( grip, b . to Byte Array (  ) , 'b', false )  ;          hash ( grip, g, 'g', false )  ;          hash ( grip, n . to Byte Array (  ) , 'n', false )  ;          if  ( public Key . get Algorithm (  )  ==  Public Key Algorithm Tags . EDDSA )  {             hash Q25519 ( grip, q )  ;          } else {             hash ( grip, q . to Byte Array (  ) , 'q', false )  ;          }         break ;      default:         throw new PGP Exception (  Message Format . format ( BC Text . get (  )  . unknown Key Type,  Integer . to String ( public Key . get Algorithm (  )  )  )  )  ;  } return grip . digest (  )  ; }"
7819,"public static  String get Temp Path ( final  String target Path ) { return  File Download Utils . format String ( ""%s . temp"", target Path )  ; }"
7820,"public com . anychart . core . gantt . elements .  Progress Element edit (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . edit ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7821,"private  Inet Address get Localhost Address ( boolean allow Scoped Link Local )  throws  Socket Exception{ //  It turns out that: //    Inet Address . get Local Host (  )  . get Host Address (  )  // will occasionally just make up return values .  I have no idea why .   To work around this, figure // out this stuff automagically .  //  First, we collect every possible  Inet Address we might be able to return  Set< Inet Address> candidate Loopbacks = new  Hash Set<> (  )  ;   Set< Inet Address> candidate Local = new  Hash Set<> (  )  ;   Enumeration< Network Interface> interfaces =  Network Interface . get Network Interfaces (  )  ;   Objects . require Non Null ( interfaces, "" Apprently this machine has no network interfaces . "" )  ;  while  ( interfaces . has More Elements (  )  )  {      Network Interface iface = interfaces . next Element (  )  ;      if  ( !iface . is Up (  )  )  {         continue ;      }     if  ( iface . is Loopback (  )  )  {         candidate Loopbacks . add All ( get Inet Addresses ( iface )  . stream (  )  . filter (  i -> allow Scoped Link Local || !i . get Host Address (  )  . contains ( ""%"" )  )  . collect (  Immutable Set . to Immutable Set (  )  )  )  ;      } else {         candidate Local . add All ( get Inet Addresses ( iface )  )  ;      } } //  We need at least one inet address in order to continue .   Preconditions . check State ( !candidate Loopbacks . is Empty (  )  || !candidate Local . is Empty (  )  )  ;  //  Prefer a loopback device to going out over the NIC .  if  ( !candidate Loopbacks . is Empty (  )  )  {     return candidate Loopbacks . iterator (  )  . next (  )  ;  } return candidate Local . iterator (  )  . next (  )  ; }"
7822,"public static  String encode Object ( java . io .  Serializable serializable Object )  throws java . io . IO Exception{ return encode Object ( serializable Object, NO_OPTIONS )  ; }"
7823,"public com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Orientation get Orientation (  ) { @ Suppress Warnings ( ""deprecation"" )  com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Orientation result = com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Orientation . value Of ( orientation_ )  ;  return result == null ? com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Orientation . UNRECOGNIZED : result ; }"
7824,public boolean is Empty (  ) { process Queue (  )  ;  return hash . is Empty (  )  ; }
7825,public int compare To ( @ Nonnull  Sdk o ) { return api Level - o . api Level ; }
7826,"public final void solve22 To Out (  Vec2 b,  Vec2 out ) { final float a11 = ex . x, a12 = ey . x, a21 = ex . y, a22 = ey . y ;  float det = a11 * a22 - a12 * a21 ;  if  ( det != 0 . 0f )  {     det = 1 . 0f / det ;  } out . x = det *  ( a22 * b . x - a12 * b . y )  ;  out . y = det *  ( a11 * b . y - a21 * b . x )  ; }"
7827,public boolean has Matte (  ) { return composition Layer != null && composition Layer . has Matte (  )  ; }
7828,public void write Int ( int v )  throws IO Exception{ out . write ( 0x FF & v )  ;  out . write ( 0x FF &  ( v >> 8 )  )  ;  out . write ( 0x FF &  ( v >> 16 )  )  ;  out . write ( 0x FF &  ( v >> 24 )  )  ; }
7829,"public  Maybe<T> read (  Parser<T> parser ) { return  Maybe . from Callable (  (  )  -> {     // reads / writes are synchronized per client instance     synchronized  ( this )  {         try  (  File Input Stream input Stream = application . open File Input ( file Name )  )  {             return parser . parse From ( input Stream )  ;          } catch  (  Invalid Protocol Buffer Exception |  File Not Found Exception e )  {              Logging . logi ( "" Recoverable exception while reading cache: "" + e . get Message (  )  )  ;              return null ;          }     } } )  ; }"
7830,"public void on Column Header Double Clicked ( @ Non Null  Recycler View .  View Holder column Header View, int column ) { //  Do what you want .  show Toast ( "" Column header  "" + column + "" has been double clicked . "" )  ; }"
7831,public static void clear All Meshes (  Application app ) { meshes . remove ( app )  ; }
7832,"public void process Event ( final  Map< String,  String> dispatch Map ) { final  String count Object = dispatch Map . get (  Event Strings . HTTP_EVENT_COUNT )  ;  if  ( count Object == null )  {     dispatch Map . put (  Event Strings . HTTP_EVENT_COUNT, ""1"" )  ;  } else {     dispatch Map . put (  Event Strings . HTTP_EVENT_COUNT,  Integer . to String (  Integer . parse Int ( count Object )  + 1 )  )  ;  } //  If there was a previous entry clear out its fields .  if  ( dispatch Map . contains Key (  Event Strings . HTTP_RESPONSE_CODE )  )  {     dispatch Map . put (  Event Strings . HTTP_RESPONSE_CODE, """" )  ;  } if  ( dispatch Map . contains Key (  Event Strings . OAUTH_ERROR_CODE )  )  {     dispatch Map . put (  Event Strings . OAUTH_ERROR_CODE, """" )  ;  } if  ( dispatch Map . contains Key (  Event Strings . HTTP_PATH )  )  {     dispatch Map . put (  Event Strings . HTTP_PATH, """" )  ;  } if  ( dispatch Map . contains Key (  Event Strings . REQUEST_ID_HEADER )  )  {     dispatch Map . put (  Event Strings . REQUEST_ID_HEADER, """" )  ;  } if  ( dispatch Map . contains Key (  Event Strings . SERVER_ERROR_CODE )  )  {     dispatch Map . remove (  Event Strings . SERVER_ERROR_CODE )  ;  } if  ( dispatch Map . contains Key (  Event Strings . SERVER_SUBERROR_CODE )  )  {     dispatch Map . remove (  Event Strings . SERVER_SUBERROR_CODE )  ;  } if  ( dispatch Map . contains Key (  Event Strings . TOKEN_AGE )  )  {     dispatch Map . remove (  Event Strings . TOKEN_AGE )  ;  } if  ( dispatch Map . contains Key (  Event Strings . SPE_INFO )  )  {     dispatch Map . remove (  Event Strings . SPE_INFO )  ;  } final  List< Pair< String,  String>> event List = get Event List (  )  ;  for  (  Pair< String,  String> event Pair : event List )  {     final  String name = event Pair . first ;      if  ( name . equals (  Event Strings . HTTP_RESPONSE_CODE )  || name . equals (  Event Strings . REQUEST_ID_HEADER )  || name . equals (  Event Strings . OAUTH_ERROR_CODE )  || name . equals (  Event Strings . HTTP_PATH )  || name . equals (  Event Strings . SERVER_ERROR_CODE )  || name . equals (  Event Strings . SERVER_SUBERROR_CODE )  || name . equals (  Event Strings . TOKEN_AGE )  || name . equals (  Event Strings . SPE_INFO )  )  {         dispatch Map . put ( name, event Pair . second )  ;      } }}"
7833,public void reset (  ) { state = STATE_BEGIN_READING ;  length = 0 ; }
7834,private void close Connection (  )  throws IO Exception{ engine . close Outbound (  )  ;  try {     do Handshake (  )  ;  } catch  ( IO Exception e )  { // Just ignore this exception since we are closing the connection already } socket Channel . close (  )  ; }
7835,"private float init Time Text Baseline And Time Bg Top Padding ( int view Height, int view Padding Top, int view Padding Bottom, int content All Height ) { float top Padding Size ;  if  ( view Padding Top == view Padding Bottom )  {     // center     top Padding Size =  ( view Height - content All Height )  / 2 ;  } else {     // padding top     top Padding Size = view Padding Top ;  } if  ( is Show Day && m Suffix Day Text Width > 0 )  {     m Suffix Day Text Baseline = get Suffix Text Base Line ( m Suffix Day, top Padding Size )  ;  } if  ( is Show Hour && m Suffix Hour Text Width > 0 )  {     m Suffix Hour Text Baseline = get Suffix Text Base Line ( m Suffix Hour, top Padding Size )  ;  } if  ( is Show Minute && m Suffix Minute Text Width > 0 )  {     m Suffix Minute Text Baseline = get Suffix Text Base Line ( m Suffix Minute, top Padding Size )  ;  } if  ( m Suffix Second Text Width > 0 )  {     m Suffix Second Text Baseline = get Suffix Text Base Line ( m Suffix Second, top Padding Size )  ;  } if  ( is Show Millisecond && m Suffix Millisecond Text Width > 0 )  {     m Suffix Millisecond Text Baseline = get Suffix Text Base Line ( m Suffix Millisecond, top Padding Size )  ;  } return top Padding Size ; }"
7836,"public com . anychart . core . grids .  Linear x Minor Grid (  Number index ) { return new com . anychart . core . grids .  Linear (  String . format (  Locale . US, js Base + "" . x Minor Grid ( %s ) "", index )  )  ; }"
7837,"public static float find Skew (  Pix pixs, float sweep Range, float sweep Delta, int sweep Reduction, int search Reduction, float search Min Delta ) { if  ( pixs == null )      throw new  Illegal Argument Exception ( "" Source pix must be non-null"" )  ;  return native Find Skew ( pixs . m Native Pix, sweep Range, sweep Delta, sweep Reduction, search Reduction, search Min Delta )  ; }"
7838,"public com . anychart . charts .  Heat Map padding (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
7839,"public static boolean clean Internal Sp (  ) { return  Utils Bridge . delete All In Dir ( new  File (  Utils . get App (  )  . get Files Dir (  )  . get Parent (  ) , ""shared_prefs"" )  )  ; }"
7840,"public static void register ( int from Id, int to Id ) { if  ( to Id == 0 )  {     s Layout Remap . delete ( from Id )  ;  } else {     s Layout Remap . put ( from Id, to Id )  ;  }}"
7841,"public static void show ( final  Base Activity activity, final int request Code, final  String title, final  String message,  Array List< User> choices, final int selected Choice ) { show ( activity, request Code, title, message, choices, selected Choice, new  Assignee Dialog Fragment (  )  )  ; }"
7842,public  Entry get ( int n ) { return  (  Entry )  get0 ( n )  ; }
7843,"private static  String get Lock Name (  Enum<?> rank ) { return rank . get Declaring Class (  )  . get Simple Name (  )  + "" . "" + rank . name (  )  ; }"
7844,"public void test Directory Is Nuked (  )  throws  Exception{  Assert . assert Equals ( 0, m Directory . list Files (  )  . length )  ;  // create file before setting final test date  Assert . assert True ( new  File ( m Directory, ""something-arbitrary"" )  . create New File (  )  )  ;  long last Modified = m Directory . last Modified (  )  - 1000 ;  // some previous date to the ""now"" used for file creation  Assert . assert True ( m Directory . set Last Modified ( last Modified )  )  ;  // check it was changed  Assert . assert Equals ( last Modified, m Directory . last Modified (  )  )  ;  get Storage Supplier ( 1 )  . get (  )  ;  // m Directory exists .  .  .   Assert . assert True ( m Directory . exists (  )  )  ;  // but it was created now  Assert . assert True ( last Modified < m Directory . last Modified (  )  )  ; }"
7845,"public com . anychart . core . lineargauge . pointers .  Tank labels ( com . anychart . core . ui .  Labels Factory settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
7846,"public com . anychart . core . cartesian . series .  Candlestick candlestick ( com . anychart . data .  View data, com . anychart . enums .  Text Parsing Mode csv Settings ) { return new com . anychart . core . cartesian . series .  Candlestick (  String . format (  Locale . US, js Base + "" . candlestick ( %s, %s ) "",  ( data != null )  ? data . get Js Base (  )  : null,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
7847,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
7848,public  Ijk Player View set Save Dir (  String path ) { _create Save Dir ( path )  ;  return this ; }
7849,"private  Finder Pattern [  ]  [  ]  select Multiple Best Patterns (  )  throws  Not Found Exception{  List< Finder Pattern> possible Centers = get Possible Centers (  )  ;  int size = possible Centers . size (  )  ;  if  ( size < 3 )  {     //  Couldn't find enough finder patterns     throw  Not Found Exception . get Not Found Instance (  )  ;  } /*  *  Begin HE modifications to safely detect multiple codes of equal size  */ if  ( size == 3 )  {     return new  Finder Pattern [  ]  [  ]  { possible Centers . to Array ( EMPTY_FP_ARRAY )  } ;  } //  Sort by estimated module size to speed up the upcoming checks  Collections . sort ( possible Centers, new  Module Size Comparator (  )  )  ;  /*  *  Now lets start: build a list of tuples of three finder locations that  *  - feature similar module sizes  *  - are placed in a distance so the estimated module count is within the QR specification  *  - have similar distance between upper left/right and left top/bottom finder patterns  *  - form a triangle with 90° angle  ( checked by comparing top right/bottom left distance  *    with pythagoras )   *  *  Note: we allow each point to be used for more than one code region: this might seem  * counterintuitive at first, but the performance penalty is not that big .   At this point,  * we cannot make a good quality decision whether the three finders actually represent  * a QR code, or are just by chance laid out so it looks like there might be a QR code there .   *  So, if the layout seems right, lets have the decoder try to decode .   */ // holder for the results  List< Finder Pattern [  ] > results = new  Array List<> (  )  ;  for  ( int i1 = 0 ;  i1 <  ( size - 2 )  ;  i1++ )  {      Finder Pattern p1 = possible Centers . get ( i1 )  ;      if  ( p1 == null )  {         continue ;      }     for  ( int i2 = i1 + 1 ;  i2 <  ( size - 1 )  ;  i2++ )  {          Finder Pattern p2 = possible Centers . get ( i2 )  ;          if  ( p2 == null )  {             continue ;          }         //  Compare the expected module sizes ;  if they are really off, skip         float v Mod Size12 =  ( p1 . get Estimated Module Size (  )  - p2 . get Estimated Module Size (  )  )  /  Math . min ( p1 . get Estimated Module Size (  ) , p2 . get Estimated Module Size (  )  )  ;          float v Mod Size12 A =  Math . abs ( p1 . get Estimated Module Size (  )  - p2 . get Estimated Module Size (  )  )  ;          if  ( v Mod Size12 A > DIFF_MODSIZE_CUTOFF && v Mod Size12 >= DIFF_MODSIZE_CUTOFF_PERCENT )  {             // any more interesting elements for the given p1 .              break ;          }         for  ( int i3 = i2 + 1 ;  i3 < size ;  i3++ )  {              Finder Pattern p3 = possible Centers . get ( i3 )  ;              if  ( p3 == null )  {                 continue ;              }             //  Compare the expected module sizes ;  if they are really off, skip             float v Mod Size23 =  ( p2 . get Estimated Module Size (  )  - p3 . get Estimated Module Size (  )  )  /  Math . min ( p2 . get Estimated Module Size (  ) , p3 . get Estimated Module Size (  )  )  ;              float v Mod Size23 A =  Math . abs ( p2 . get Estimated Module Size (  )  - p3 . get Estimated Module Size (  )  )  ;              if  ( v Mod Size23 A > DIFF_MODSIZE_CUTOFF && v Mod Size23 >= DIFF_MODSIZE_CUTOFF_PERCENT )  {                 // any more interesting elements for the given p1 .                  break ;              }              Finder Pattern [  ]  test = { p1, p2, p3 } ;               Result Point . order Best Patterns ( test )  ;              //  Calculate the distances: a = topleft-bottomleft, b=topleft-topright, c = diagonal              Finder Pattern Info info = new  Finder Pattern Info ( test )  ;              float d A =  Result Point . distance ( info . get Top Left (  ) , info . get Bottom Left (  )  )  ;              float d C =  Result Point . distance ( info . get Top Right (  ) , info . get Bottom Left (  )  )  ;              float d B =  Result Point . distance ( info . get Top Left (  ) , info . get Top Right (  )  )  ;              //  Check the sizes             float estimated Module Count =  ( d A + d B )  /  ( p1 . get Estimated Module Size (  )  * 2 . 0f )  ;              if  ( estimated Module Count > MAX_MODULE_COUNT_PER_EDGE || estimated Module Count < MIN_MODULE_COUNT_PER_EDGE )  {                 continue ;              }             //  Calculate the difference of the edge lengths in percent             float v ABBC =  Math . abs (  ( d A - d B )  /  Math . min ( d A, d B )  )  ;              if  ( v ABBC >= 0 . 1f )  {                 continue ;              }             //  Calculate the diagonal length by assuming a 90° angle at topleft             float d Cpy =  ( float )   Math . sqrt (  ( double )  d A * d A +  ( double )  d B * d B )  ;              //  Compare to the real distance in %             float v Py C =  Math . abs (  ( d C - d Cpy )  /  Math . min ( d C, d Cpy )  )  ;              if  ( v Py C >= 0 . 1f )  {                 continue ;              }             //  All tests passed!             results . add ( test )  ;          }     } } if  ( !results . is Empty (  )  )  {     return results . to Array ( EMPTY_FP_2 D_ARRAY )  ;  } //  Nothing found! throw  Not Found Exception . get Not Found Instance (  )  ; }"
7850,"protected void do Function ( float [  ]  inputs, int input Offset, float [  ]  outputs, int output Offset ) { // calculate the encoded values for each input float [  ]  encoded = new float [ get Num Inputs (  )  ]  ;  for  ( int i = 0 ;  i < get Num Inputs (  )  ;  i++ )  {     // encode -- interpolate ( x<i>, domain<2i>, domain<2i + 1>,     //                       encode<2i>, encode<2i + 1> )      encoded [ i ]  = interpolate ( inputs [ i + input Offset ] , get Domain ( 2 * i ) , get Domain (  ( 2 * i )  + 1 ) , get Encode ( 2 * i ) , get Encode (  ( 2 * i )  + 1 )  )  ;      // clip to size of sample table -- min ( max ( e<i>, 0 ) , size<i> - 1 )      encoded [ i ]  =  Math . max ( encoded [ i ] , 0 )  ;      encoded [ i ]  =  Math . min ( encoded [ i ] , size [ i ]  - 1 )  ;  } // do some magic for  ( int i = 0 ;  i < get Num Outputs (  )  ;  i++ )  {     if  ( get Order (  )  == 1 )  {         outputs [ i + output Offset ]  = multilinear Interpolate ( encoded, i )  ;      } else {         outputs [ i + output Offset ]  = multicubic Interpolate ( encoded, i )  ;      } } // now adjust the output to be within range for  ( int i = 0 ;  i < outputs . length ;  i++ )  {     // decode -- interpolate ( r<i>, 0, 2^bps - 1,      //                       decode<2i>, decode<2i + 1> )      outputs [ i + output Offset ]  = interpolate ( outputs [ i + output Offset ] , 0,  ( float )   Math . pow ( 2, get Bits Per Sample (  )  )  - 1, get Decode ( 2 * i ) , get Decode (  ( 2 * i )  + 1 )  )  ;  }}"
7851,"public com . anychart . charts .  Cartesian range Marker (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . range Marker ( %s )  ; "", settings )  )  ;  return this ; }"
7852,"public void clean Up (  ) { new  Async Task< Void,  Void,  Void> (  )  {     @ Override     protected  Void do In Background (  Void .  .  .  folders )  {          File folder = app . get External Files Dir ( null )  ;          if  ( folder != null )  {             for  (  File file : folder . list Files (  )  )  {                 if  ( file . get Name (  )  . ends With ( "" . log"" )  )  {                     file . delete (  )  ;                  }             }         }         return null ;      } } . execute (  )  ; }"
7853,protected void check Additional Properties (  ) {}
7854,public static  Runtime Exception propagate (  Throwable throwable ) { propagate If Possible (  Preconditions . check Not Null ( throwable )  )  ;  throw new  Runtime Exception ( throwable )  ; }
7855,"public com . anychart . core .  Visual Base container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
7856,public int get Total Documents (  ) { return total Documents ; }
7857,"public void add Actor Before (  Actor actor Before,  Actor actor ) { if  ( actor . parent != null )  {     if  ( actor . parent == this )          return ;      actor . parent . remove Actor ( actor, false )  ;  } int index = children . index Of ( actor Before, true )  ;  children . insert ( index, actor )  ;  actor . set Parent ( this )  ;  actor . set Stage ( get Stage (  )  )  ;  children Changed (  )  ; }"
7858,"public  String to String (  ) { if  ( is Empty (  )  )  {     return "" [  ] "" ;  } // rough estimate is fine  String Builder builder = new  String Builder ( length (  )  * 5 )  ;  builder . append ( ' [ ' )  . append ( array [ start ]  )  ;  for  ( int i = start + 1 ;  i < end ;  i++ )  {     builder . append ( "", "" )  . append ( array [ i ]  )  ;  } builder . append ( ' ] ' )  ;  return builder . to String (  )  ; }"
7859,"public void rotation (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . rotation (  )  ; "" )  ; }"
7860,"public  Concurrency Limit get Concurrency Limit (  ) { return new  Concurrency Limit ( get Delegate (  )  . get View (  Build Buck Config . class )  . get Num Threads (  ) , get Resource Allocation Fairness (  ) , get Managed Thread Count (  ) , get Default Resource Amounts (  ) , get Maximum Resource Amounts (  )  )  ; }"
7861,"public void to Html Table (  String title,  Boolean as String ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Html Table ( %s, %s )  ; "", wrap Quotes ( title ) , as String )  )  ; }"
7862,"public com . anychart . core . stock . scrollerseries .  Step Line point Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . point Width ( %s )  ; "", width )  )  ;  return this ; }"
7863,"public com . anychart . core . gantt . edit .  Element Edit connector Thumbs (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . connector Thumbs ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7864,"public void center View To ( float x Value, float y Value,  Axis Dependency axis ) { float y In View = get Axis Range ( axis )  / m View Port Handler . get Scale Y (  )  ;  float x In View = get X Axis (  )  . m Axis Range / m View Port Handler . get Scale X (  )  ;   Runnable job =  Move View Job . get Instance ( m View Port Handler, x Value - x In View / 2f, y Value + y In View / 2f, get Transformer ( axis ) , this )  ;  add Viewport Job ( job )  ; }"
7865,"public  Amplitude Client regenerate Device Id (  ) { if  ( !context And Api Key Set ( ""regenerate Device Id (  ) "" )  )  {     return this ;  } final  Amplitude Client client = this ;  run On Log Thread ( new  Runnable (  )  {     @ Override     public void run (  )  {         if  (  Utils . is Empty String ( client . api Key )  )  {             // in case initialization failed             return ;          }          String random Id =  Device Info . generate UUID (  )  + ""R"" ;          set Device Id ( random Id )  ;      } } )  ;  return this ; }"
7866,"private void check Not Started (  ) { if  ( is Started (  )  )  {     throw new  Illegal State Exception ( "" The process has been already started"" )  ;  }}"
7867,public  Builder set Job Id Bytes ( com . google . protobuf .  Byte String value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } check Byte String Is Utf8 ( value )  ;  job Id_ = value ;  on Changed (  )  ;  return this ; }
7868,public void add Audio File Modification Listener (  Audio File Modification Listener listener ) { this . modification Handler . add Audio File Modification Listener ( listener )  ; }
7869,public static  Builder new Builder (  Any Object Id obj Id ) { return new  Builder (  )  . set Id ( obj Id )  ; }
7870,"public void dispose (  ) { GL20 gl =  Gdx . gl20 ;  gl . gl Bind Buffer ( GL20 . GL_ARRAY_BUFFER, 0 )  ;  gl . gl Delete Buffer ( buffer Handle )  ;  buffer Handle = 0 ; }"
7871,public void set Text ( @ Null  Char Sequence new Text ) { if  ( new Text == null )  {     if  ( text . length == 0 )          return ;      text . clear (  )  ;  } else if  ( new Text instanceof  String Builder )  {     if  ( text . equals ( new Text )  )          return ;      text . clear (  )  ;      text . append (  (  String Builder )  new Text )  ;  } else {     if  ( text Equals ( new Text )  )          return ;      text . clear (  )  ;      text . append ( new Text )  ;  } int Value =  Integer . MIN_VALUE ;  invalidate Hierarchy (  )  ; }
7872,"protected  Cxx Precompiled Header require Precompiled Header ( boolean can Precompile,  Preprocessor Delegate preprocessor Delegate,  Cxx Platform cxx Platform,  Cxx Source .  Type source Type,  Cxx Tool Flags compiler Flags,  Deps Builder deps Builder,  Build Target build Target,  Action Graph Builder graph Builder ) { return  (  Cxx Precompiled Header )  graph Builder . compute If Absent ( build Target,  target -> {      Path output =  Build Target Paths . get Gen Path ( get Project Filesystem (  ) , target, ""%s . h . gch"" )  ;       Compiler Delegate compiler Delegate = new  Compiler Delegate ( cxx Platform . get Compiler Debug Path Sanitizer (  ) ,  Cxx Source Types . get Compiler ( cxx Platform,  Cxx Source Types . get Preprocessor Output Type ( source Type )  )  . resolve ( graph Builder, build Target . get Target Configuration (  )  ) , compiler Flags, cxx Platform . get Use Arg File (  )  )  ;      deps Builder . add ( compiler Delegate )  ;      deps Builder . add ( get Header Source Path (  )  )  ;      return new  Cxx Precompiled Header ( can Precompile, target, get Project Filesystem (  ) , deps Builder . build (  ) , output, preprocessor Delegate, compiler Delegate, compiler Flags, get Header Source Path (  ) , source Type, cxx Platform . get Compiler Debug Path Sanitizer (  )  )  ;  } )  ; }"
7873,"public void test Check Permission_other Packages (  )  throws  Exception{  Package Info package Info = new  Package Info (  )  ;  package Info . package Name = TEST_PACKAGE_NAME ;  package Info . requested Permissions = new  String [  ]  { ""android . permission . INTERNET"", ""android . permission . SEND_SMS"" } ;  //  Grant one of the permissions .  package Info . requested Permissions Flags = new int [  ]  { REQUESTED_PERMISSION_GRANTED, 0 } ;  shadow Of ( package Manager )  . install Package ( package Info )  ;  assert Equals ( PERMISSION_GRANTED, package Manager . check Permission ( ""android . permission . INTERNET"", TEST_PACKAGE_NAME )  )  ;  assert Equals ( PERMISSION_DENIED, package Manager . check Permission ( ""android . permission . SEND_SMS"", TEST_PACKAGE_NAME )  )  ;  assert Equals ( PERMISSION_DENIED, package Manager . check Permission ( ""android . permission . READ_SMS"", TEST_PACKAGE_NAME )  )  ; }"
7874,public int get Selectable Buffer (  ) { return selectable Buffer ; }
7875,"static void create Channel (  Notification Manager notification Manager,  String name,  String label )  throws  Exception{  Class<?> klass Notification Channel =  Class . for Name ( ""android . app .  Notification Channel"" )  ;   Object notification Channel = klass Notification Channel . get Constructor (  String . class,  Char Sequence . class,  Integer . TYPE )  . new Instance ( name, label,  Notification Manager . IMPORTANCE_DEFAULT )  ;  notification Manager . get Class (  )  . get Method ( ""create Notification Channel"", klass Notification Channel )  . invoke ( notification Manager, notification Channel )  ; }"
7876,"private static boolean has Notch At VIVO (  Context context ) { boolean result = false ;  try {      Class Loader class Loader = context . get Class Loader (  )  ;      @ Suppress Lint ( "" Private Api"" )   Class<?> a Class = class Loader . load Class ( NOTCH_VIVO )  ;       Method method = a Class . get Method ( ""is Feature Support"", int . class )  ;      result =  ( boolean )  method . invoke ( a Class, 0x00000020 )  ;  } catch  (  Class Not Found Exception ignored )  { } catch  (  No Such Method Exception ignored )  { } catch  (  Exception ignored )  { } return result ; }"
7877,public  Component Assert has Visible Drawable ( @ Drawable Res int drawable Res ) { assert That Litho View (  )  . has Visible Drawable ( drawable Res )  ;  return this ; }
7878,public boolean equals ( final  Mesh Part other ) { return other == this ||  ( other != null && other . mesh == mesh && other . primitive Type == primitive Type && other . offset == offset && other . size == size )  ; }
7879,"public static  Pix background Norm Morph (  Pix pixs, int norm Reduction, int norm Size, int norm Bg Value ) { if  ( pixs == null )      throw new  Illegal Argument Exception ( "" Source pix must be non-null"" )  ;  int native Pix = native Background Norm Morph ( pixs . m Native Pix, norm Reduction, norm Size, norm Bg Value )  ;  if  ( native Pix == 0 )      throw new  Runtime Exception ( "" Failed to normalize image background"" )  ;  return new  Pix ( native Pix )  ; }"
7880,"public com . anychart . standalones .  Title font Weight (  Number weight ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Weight ( %s )  ; "", weight )  )  ;  return this ; }"
7881,"private void add Proxy Death Method (  Type Spec .  Builder class Builder,  String death Method,  String doc ) {  Method Spec .  Builder method Builder =  Method Spec . method Builder ( death Method )  . add Modifiers (  Modifier . PUBLIC )  . returns (  Type Name . VOID )  . add Parameter (  Class Name . get ( ""android . os"", ""I Binder .  Death Recipient"" ) , ""death Recipient"" )  . begin Control Flow ( ""try"" )  . add Statement ( ""m Remote . "" + death Method + "" ( death Recipient, 0 ) "" )  . end Control Flow (  )  . begin Control Flow ( ""catch  ( $T ignored ) "",  Exception . class )  . end Control Flow (  )  . add Javadoc ( doc )  ;  class Builder . add Method ( method Builder . build (  )  )  ; }"
7882,"public  Map< Integer,  Target Data> active Targets (  ) { //  Make a defensive copy as the watch stream continues to modify the  Map of active targets .  return new  Hash Map<> ( watch Stream . active Targets )  ; }"
7883,"public boolean is Cell Editable ( int row, int column ) { return true ; }"
7884,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
7885,"public static _ Fields find By Thrift Id Or Throw ( int field Id ) { _ Fields fields = find By Thrift Id ( field Id )  ;  if  ( fields == null )      throw new java . lang .  Illegal Argument Exception ( "" Field "" + field Id + "" doesn't exist!"" )  ;  return fields ; }"
7886,"public T get (  ) { if  ( state . compare And Set (  State . UNINITIALIZED,  State . INITIALIZED )  || state . get (  )  ==  State . INITIALIZED )  {     return supplier . get (  )  ;  } throw new  Illegal State Exception ( "" Cannot call get (  )  after close (  ) "" )  ; }"
7887,"public void write ( final char [  ]  value, final int offset, final int length ) { if  ( value != null )  {     builder . append ( value, offset, length )  ;  }}"
7888,public void set On Left Menu Click Listener (  On Left Menu Click Listener listener ) { this . m On Menu Click Listener = listener ; }
7889,public  Exception description (  String description ) { m Description = description ;  return this ; }
7890,public  Glide Request< Transcode Type> override ( int size ) { return  (  Glide Request< Transcode Type> )  super . override ( size )  ; }
7891,"public com . anychart . core . resource .  Grid odd Fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . odd Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
7892,"public int get Net Id (  ) { return  Reflection Helpers . get Field ( real Object, ""net Id"" )  ; }"
7893,"protected void post Auth Result ( @ Non Null final I Local Authentication Result local Authentication Result, @ Non Null final  Token Parameters request Parameters, @ Non Null final  Silent Authentication Callback authentication Callback ) { if  ( authentication Callback == null )  {     throw new  Illegal State Exception ( NONNULL_CONSTANTS . CALLBACK + NONNULL_CONSTANTS . NULL_ERROR_SUFFIX )  ;  } //  Check if any of the requested scopes are declined by the server, if yes throw a  Msal Declined Scope exception final  List< String> declined Scopes =  Authentication Result Adapter . get Declined Scopes (  Arrays . as List ( local Authentication Result . get Scope (  )  ) , request Parameters . get Scopes (  )  )  ;  if  ( !declined Scopes . is Empty (  )  )  {     final  Msal Declined Scope Exception declined Scope Exception =  Authentication Result Adapter . declined Scope Exception From Result ( local Authentication Result, declined Scopes, request Parameters )  ;      authentication Callback . on Error ( declined Scope Exception )  ;  } else {     I Authentication Result authentication Result =  Authentication Result Adapter . adapt ( local Authentication Result )  ;      authentication Callback . on Success ( authentication Result )  ;  }}"
7894,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
7895,public boolean is Interface (  ) { return false ; }
7896,protected C reset Container (  ) { return reset Container ( get Subject Generator (  )  . create Test Subject (  )  )  ; }
7897,public boolean is Unit ( double margin ) { return  Math . abs ( length2 (  )  - 1 )  < margin * margin ; }
7898,"public com . anychart . core . utils .  Legend Item Settings icon Marker Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . icon Marker Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
7899,public java . lang .  String get Source Path (  ) { java . lang .  Object ref = source Path_ ;  if  ( ! ( ref instanceof java . lang .  String )  )  {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      source Path_ = s ;      return s ;  } else {     return  ( java . lang .  String )  ref ;  }}
7900,public void write (  Byte Array Output Stream tag Buffer ) { if  ( ! (  (  Abstract String )  get Object (  Data Types . OBJ_DESCRIPTION )  )  . can Be Encoded (  )  )  {     this . set Text Encoding (  Text Encoding . UTF_16 )  ;  } super . write ( tag Buffer )  ; }
7901,"public  Class Pool register Class Loader (  Class Loader ucl ) { synchronized  ( registered C Ls )  {     //  Class Pool . classpath     if  ( registered C Ls . contains Key ( ucl )  )  {         return registered C Ls . get ( ucl )  ;      }      Scoped Class Pool pool = create Scoped Class Pool ( ucl, classpool )  ;      registered C Ls . put ( ucl, pool )  ;      return pool ;  }}"
7902,"public com . anychart . core . stock . scrollerseries .  Range Spline Area max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
7903,"public void test Select Tracks Prefer Higher Num Channel Before Sample Rate (  )  throws  Exception{  Format higher Channel Lower Sample Rate Format =  Format . create Audio Sample Format ( ""audio Format"",  Mime Types . AUDIO_AAC, null,  Format . NO_VALUE,  Format . NO_VALUE, 6, 22050, null, null, 0, null )  ;   Format lower Channel Higher Sample Rate Format =  Format . create Audio Sample Format ( ""audio Format"",  Mime Types . AUDIO_AAC, null,  Format . NO_VALUE,  Format . NO_VALUE, 2, 44100, null, null, 0, null )  ;   Track Group Array track Groups = wrap Formats ( higher Channel Lower Sample Rate Format, lower Channel Higher Sample Rate Format )  ;   Track Selector Result result = track Selector . select Tracks ( new  Renderer Capabilities [  ]  { ALL_AUDIO_FORMAT_SUPPORTED_RENDERER_CAPABILITIES }, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, higher Channel Lower Sample Rate Format )  ; }"
7904,public int get Limit (  ) { return limit ; }
7905,public  Iterable< Kml Container> get Containers (  ) { return super . get Containers (  )  ; }
7906,public void reset (  ) { last Sample Timestamp Us = C . TIME_UNSET ; }
7907,"protected boolean has Warning Suppressed (  Element element,  String warning Suppress String ) {  Suppress Warnings suppress Warnings = element . get Annotation (  Suppress Warnings . class )  ;  if  ( suppress Warnings != null )  {     for  (  String value : suppress Warnings . value (  )  )  {         if  ( value . equals Ignore Case ( warning Suppress String )  )  {             return true ;          }     } } return false ; }"
7908,"public com . anychart . core . stock .  Plot bounds (  String x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
7909,"public  Optional< Target Configuration> detect Target Configuration (  Unconfigured Target Node unconfigured Build Target ) { for  (  Pair< Matcher,  Target Configuration> pair : matchers )  {     if  ( pair . get First (  )  . matches ( unconfigured Build Target )  )  {         return  Optional . of ( pair . get Second (  )  )  ;      } } return  Optional . empty (  )  ; }"
7910,public  Matrix4 set Translation ( @ Non Null  Vector3 vec ) { m [ M03 ]  = vec . x ;  m [ M13 ]  = vec . y ;  m [ M23 ]  = vec . z ;  return this ; }
7911,public boolean is Leaf (  Object node ) { if  ( asks Allows Children )      return ! (  (  Tree Node )  node )  . get Allows Children (  )  ;  return  (  (  Tree Node )  node )  . is Leaf (  )  ; }
7912,boolean is All Fields Empty (  ) { return EMPTY . equals ( this )  ; }
7913,"public  Identify set (  String property, double value ) { add To User Properties (  Constants . AMP_OP_SET, property, value )  ;  return this ; }"
7914,protected  Ice Soap Parser< Result Type> get Parser (  ) { return parser ; }
7915,"public  Rev Commit update (  Rev Commit to )  throws  Exception{ return  Test Repository . this . update ( ref, to )  ; }"
7916,"private static void setup Object Animator (  Value Animator anim,  Typed Array array Object Animator ) {  Object Animator oa =  (  Object Animator )  anim ;   String property Name = array Object Animator . get String ( R . styleable .  Property Animator_vc_property Name )  ;  oa . set Property Name ( property Name )  ; }"
7917,"private static int read Tiff Header (  Input Stream is, int length,  Tiff Header tiff Header )  throws IO Exception{ if  ( length <= 8 )  {     return 0 ;  } // read the byte order tiff Header . byte Order =  Stream Processor . read Packed Int ( is, 4, false )  ;  length -= 4 ;  if  ( tiff Header . byte Order != TIFF_BYTE_ORDER_LITTLE_END && tiff Header . byte Order != TIFF_BYTE_ORDER_BIG_END )  {     F Log . e ( TAG, "" Invalid TIFF header"" )  ;      return 0 ;  } tiff Header . is Little Endian =  ( tiff Header . byte Order == TIFF_BYTE_ORDER_LITTLE_END )  ;  // read the offset of the first IFD and check if it is reasonable tiff Header . first Ifd Offset =  Stream Processor . read Packed Int ( is, 4, tiff Header . is Little Endian )  ;  length -= 4 ;  if  ( tiff Header . first Ifd Offset < 8 || tiff Header . first Ifd Offset - 8 > length )  {     F Log . e ( TAG, "" Invalid offset"" )  ;      return 0 ;  } return length ; }"
7918,"private void ensure Input Row View Setter Array (  Base Row View Setter<?, ?> [  ]  row View Setters ) { if  ( row View Setters == null || row View Setters . length == 0 )  {     throw new  Illegal Argument Exception ( "" Atleast register 1  Row View Setter  class"" )  ;  }}"
7919,"private static int get Orientation From Tiff Entry (  Input Stream is, int length, boolean is Little Endian )  throws IO Exception{ if  ( length < 10 )  {     return 0 ;  } // orientation entry has type = short int type =  Stream Processor . read Packed Int ( is, 2, is Little Endian )  ;  if  ( type != TIFF_TYPE_SHORT )  {     return 0 ;  } // orientation entry has count = 1 int count =  Stream Processor . read Packed Int ( is, 4, is Little Endian )  ;  if  ( count != 1 )  {     return 0 ;  } int value =  Stream Processor . read Packed Int ( is, 2, is Little Endian )  ;  return value ; }"
7920,"private long compute Freshness Lifetime (  ) { if  ( max Age Seconds != -1 )  {     return  Time Unit . SECONDS . to Millis ( max Age Seconds )  ;  } else if  ( expires != null )  {     long served Millis = served Date != null ? served Date . get Time (  )  : received Response Millis ;      long delta = expires . get Time (  )  - served Millis ;      return delta > 0 ? delta : 0 ;  } else if  ( last Modified != null && uri . get Encoded Query (  )  == null )  {     /*          *  As recommended by the HTTP RFC and implemented in  Firefox, the          * max age of a document should be defaulted to 10% of the          * document's age at the time it was served .   Default expiration          * dates aren't used for UR Is containing a query .           */     long served Millis = served Date != null ? served Date . get Time (  )  : sent Request Millis ;      long delta = served Millis - last Modified . get Time (  )  ;      return delta > 0 ?  ( delta / 10 )  : 0 ;  } return 0 ; }"
7921,"public com . anychart . charts .  Polar hatch Fill Palette ( com . anychart . palettes .  Hatch Fills settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill Palette ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
7922,"private void update (  ) {  App Widget Manager app Widget Manager =  App Widget Manager . get Instance ( this . context )  ;  if  ( this . component Name != null )  {     app Widget Manager . update App Widget ( this . component Name, this . remote Views )  ;  } else {     app Widget Manager . update App Widget ( this . widget Ids, this . remote Views )  ;  }}"
7923,"public  Icon Drawable size Dp ( int size ) { return size Px ( convert Dp To Px ( context, size )  )  ; }"
7924,public  Commit Command set Committer (  Person Ident committer ) { check Callable (  )  ;  this . committer = committer ;  return this ; }
7925,private void cancel (  ) { assert Not Calling Callbacks (  )  ;  state Verifier . throw If Recycled (  )  ;  target . remove Callback ( this )  ;  if  ( load Status != null )  {     load Status . cancel (  )  ;      load Status = null ;  }}
7926,"public static byte [  ]  encrypt Hmac SHA224 ( final byte [  ]  data, final byte [  ]  key ) { return hmac Template ( data, key, "" Hmac SHA224"" )  ; }"
7927,"public com . anychart . core . stock . scrollerseries .  Step Line stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7928,"public void right (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . right (  )  ; "" )  ; }"
7929,"public static  List< String> read File2 List ( final  String file Path, final int st, final int end ) { return read File2 List (  Utils Bridge . get File By Path ( file Path ) , st, end, null )  ; }"
7930,"public void low Stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . low Stroke (  )  ; "" )  ; }"
7931,"public static  Optional< Annotation Mirror> get Annotation Mirror (  Element element,  Class<? extends  Annotation> annotation Class ) { return  Optional . of Nullable (  More Elements . get Annotation Mirror ( element, annotation Class )  . or Null (  )  )  ; }"
7932,public boolean is Secure Entry (  ) { return  ( input Type |  Input Type . TYPE_TEXT_VARIATION_PASSWORD )  != 0 ; }
7933,"public void unbind ( final  Shader Program shader ) { unbind ( shader, null )  ; }"
7934,"public static  Usb Device Info get Device Info ( final  Context context, final  Usb Device device ) { return update Device Info (  (  Usb Manager )  context . get System Service (  Context . USB_SERVICE ) , device, new  Usb Device Info (  )  )  ; }"
7935,public boolean is Unloaded Class Loader (  ) { return false ; }
7936,"public com . anychart . core .  Tree Chart Point selected (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected ( %s )  ; "", value )  )  ;  return this ; }"
7937,"public void on Create (  Bundle saved Instance State ) { super . on Create ( saved Instance State )  ;  set Content View ( R . layout . aar_databind )  ;   Text View text View =  (  Text View )  find View By Id ( R . id . library_aar )  ;   Aar Databind Binding binding =  Data Binding Util . set Content View ( this, R . layout . aar_databind )  ;  final  User user = new  User ( "" Test"", "" User"" )  ;  binding . set User ( user )  ;   Edit Text edit Text =  (  Edit Text )  find View By Id ( R . id . input Text_library_aar )  ;  edit Text . add Text Changed Listener ( new  Text Watcher (  )  {     @ Override     public void before Text Changed (  Char Sequence s, int start, int count, int after )  {     }     @ Override     public void on Text Changed (  Char Sequence s, int start, int before, int count )  {          System . out . println ( s )  ;          user . set First Name ( s . to String (  )  )  ;      }     @ Override     public void after Text Changed (  Editable s )  {     } } )  ; }"
7938,"protected void handle Election Message (  Message message ) { var content = message . get Content (  )  ;  LOGGER . info ( INSTANCE + local Id + "" -  Election  Message: "" + content )  ;  var candidate List =  Arrays . stream ( content . trim (  )  . split ( "","" )  )  . map (  Integer::value Of )  . sorted (  )  . collect (  Collectors . to List (  )  )  ;  if  ( candidate List . contains ( local Id )  )  {     var new Leader Id = candidate List . get ( 0 )  ;      LOGGER . info ( INSTANCE + local Id + "" -  New leader should be "" + new Leader Id + "" . "" )  ;      message Manager . send Leader Message ( local Id, new Leader Id )  ;  } else {     content += "","" + local Id ;      message Manager . send Election Message ( local Id, content )  ;  }}"
7939,"public static byte [  ]  encrypt RSA2 Base64 ( final byte [  ]  data, final byte [  ]  public Key, final int key Size, final  String transformation ) { return  Utils Bridge . base64 Encode ( encrypt RSA ( data, public Key, key Size, transformation )  )  ; }"
7940,Live Data< Element> get Selected Element (  ) { return m Selected Element ; }
7941,"public static byte [  ]  copy Stream To Byte Array (  Input Stream input, int estimated Size )  throws IO Exception{  Byte Array Output Stream baos = new  Optimized Byte Array Output Stream (  Math . max ( 0, estimated Size )  )  ;  copy Stream ( input, baos )  ;  return baos . to Byte Array (  )  ; }"
7942,"public  String make Unique Name (  String prefix ) { throw new  Runtime Exception ( ""not available in "" + get Name (  )  )  ; }"
7943,"public static  Buck Identifier set Name (  Buck Identifier buck Identifier, @ Not Null  String new Name ) {  Buck Identifier temp Identifier =  Buck Element Factory . create Element ( buck Identifier . get Project (  ) , new Name,  Buck Identifier . class )  ;   Psi Element old Token = buck Identifier . get Identifier Token (  )  ;   Psi Element new Token = temp Identifier . get Identifier Token (  )  ;  buck Identifier . get Node (  )  . replace Child ( old Token . get Node (  ) , new Token . get Node (  )  )  ;  return buck Identifier ; }"
7944,"public  Request Creator error ( @ Drawable Res int error Res Id ) { if  ( error Res Id == 0 )  {     throw new  Illegal Argument Exception ( "" Error image resource invalid . "" )  ;  } if  ( error Drawable != null )  {     throw new  Illegal State Exception ( "" Error image already set . "" )  ;  } this . error Res Id = error Res Id ;  return this ; }"
7945,"static void check Avalanche (  Hash Function function, int trials, double epsilon ) {  Random rand = new  Random ( 0 )  ;  int key Bits = 32 ;  int hash Bits = function . bits (  )  ;  for  ( int i = 0 ;  i < key Bits ;  i++ )  {     int [  ]  same = new int [ hash Bits ]  ;      int [  ]  diff = new int [ hash Bits ]  ;      // go through trials to compute probability     for  ( int j = 0 ;  j < trials ;  j++ )  {         int key1 = rand . next Int (  )  ;          // flip input bit for key2         int key2 = key1 ^  ( 1 << i )  ;          // compute hash values         int hash1 = function . hash Int ( key1 )  . as Int (  )  ;          int hash2 = function . hash Int ( key2 )  . as Int (  )  ;          for  ( int k = 0 ;  k < hash Bits ;  k++ )  {             if  (  ( hash1 &  ( 1 << k )  )  ==  ( hash2 &  ( 1 << k )  )  )  {                 same [ k ]  += 1 ;              } else {                 diff [ k ]  += 1 ;              }         }     }     // measure probability and assert it's within margin of error     for  ( int j = 0 ;  j < hash Bits ;  j++ )  {         double prob =  ( double )  diff [ j ]  /  ( double )   ( diff [ j ]  + same [ j ]  )  ;           Assert . assert Equals ( 0 . 50d, prob, epsilon )  ;      } }}"
7946,"public com . anychart . charts .  Sparkline credits (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . credits ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
7947,Builder set Agent (  String client Agent ) { agent = client Agent ;  return this ; }
7948,"public com . anychart . core . axismarkers .  Gantt Text offset X (  String offset ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . offset X ( %s )  ; "", wrap Quotes ( offset )  )  )  ;  return this ; }"
7949,"private int determine Ideal Selected Index ( long now Ms, int [  ]  track Bitrates ) { long effective Bitrate = bandwidth Provider . get Allocated Bandwidth (  )  ;  int lowest Bitrate Non Blacklisted Index = 0 ;  for  ( int i = 0 ;  i < length ;  i++ )  {     if  ( now Ms ==  Long . MIN_VALUE || !is Blacklisted ( i, now Ms )  )  {          Format format = get Format ( i )  ;          if  ( can Select Format ( format, track Bitrates [ i ] , playback Speed, effective Bitrate )  )  {             return i ;          } else {             lowest Bitrate Non Blacklisted Index = i ;          }     } } return lowest Bitrate Non Blacklisted Index ; }"
7950,"static double compute Angle Between (  Lat Lng from,  Lat Lng to ) { return distance Radians ( to Radians ( from . latitude ) , to Radians ( from . longitude ) , to Radians ( to . latitude ) , to Radians ( to . longitude )  )  ; }"
7951,"protected boolean has Feature (  Context cx, int feature Index ) { int version ;  switch ( feature Index )  {     case  Context . FEATURE_NON_ECMA_GET_YEAR:         /*         *  During the great date rewrite of 1 . 3, we tried to track the         * evolving ECMA standard, which then had a definition of         * get Year which always subtracted 1900 .    Which we         * implemented, not realizing that it was incompatible with         * the old behavior .  .  .   now, rather than thrash the behavior         * yet again, we've decided to leave it with the - 1900         * behavior and point people to the get Full Year method .    But         * we try to protect existing scripts that have specified a         * version .  .  .          */         version = cx . get Language Version (  )  ;          return  ( version ==  Context . VERSION_1_0 || version ==  Context . VERSION_1_1 || version ==  Context . VERSION_1_2 )  ;      case  Context . FEATURE_MEMBER_EXPR_AS_FUNCTION_NAME:         return false ;      case  Context . FEATURE_RESERVED_KEYWORD_AS_IDENTIFIER:         return false ;      case  Context . FEATURE_TO_STRING_AS_SOURCE:         version = cx . get Language Version (  )  ;          return version ==  Context . VERSION_1_2 ;      case  Context . FEATURE_PARENT_PROTO_PROPERTIES:         return true ;      case  Context . FEATURE_E4 X:         version = cx . get Language Version (  )  ;          return  ( version ==  Context . VERSION_DEFAULT || version >=  Context . VERSION_1_6 )  ;      case  Context . FEATURE_DYNAMIC_SCOPE:         return false ;      case  Context . FEATURE_STRICT_VARS:         return false ;      case  Context . FEATURE_STRICT_EVAL:         return false ;      case  Context . FEATURE_LOCATION_INFORMATION_IN_ERROR:         return false ;      case  Context . FEATURE_STRICT_MODE:         return false ;      case  Context . FEATURE_WARNING_AS_ERROR:         return false ;      case  Context . FEATURE_ENHANCED_JAVA_ACCESS:         return false ;  } //  It is a bug to call the method with unknown feature Index throw new  Illegal Argument Exception (  String . value Of ( feature Index )  )  ; }"
7952,public double get Double Info ( int index ) {  Double Info i =  (  Double Info )  get Item ( index )  ;  return i . value ; }
7953,"public com . anychart . charts .  Sparkline negative Fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . negative Fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
7954,public void set Bundle Security Checker (  Bundle Verifier checker ) {  Runtime Variables . s Bundle Verifier = checker ; }
7955,"private static  Char Sequence replace Content Description Spans (  Char Sequence text ) { if  ( ! ( text instanceof  Spanned )  )  {     return text ;  } final  Spanned spanned =  (  Spanned )  text ;   Content Description Span [  ]  content Description Spans = spanned . get Spans ( 0, text . length (  ) ,  Content Description Span . class )  ;  if  ( content Description Spans . length == 0 )  {     return text ;  }  Spannable String Builder spannable = new  Spannable String Builder ( text )  ;  for  (  Content Description Span span : content Description Spans )  {      Char Sequence replacement Text = span . get Content Description (  )  ;      if  (  Text Utils . is Empty ( replacement Text )  )  {         continue ;      }     int span Replace Start = spannable . get Span Start ( span )  ;      int span Replace End = spannable . get Span End ( span )  ;      spannable . replace ( span Replace Start, span Replace End, replacement Text )  ;  } return spannable . to String (  )  ; }"
7956,public void fit Screen (  Matrix output Matrix ) { m Min Scale X = 1f ;  m Min Scale Y = 1f ;  output Matrix . set ( m Matrix Touch )  ;  float [  ]  vals = vals Buffer For Fit Screen ;  for  ( int i = 0 ;  i < 9 ;  i++ )  {     vals [ i ]  = 0 ;  } output Matrix . get Values ( vals )  ;  // reset all translations and scaling vals [  Matrix . MTRANS_X ]  = 0f ;  vals [  Matrix . MTRANS_Y ]  = 0f ;  vals [  Matrix . MSCALE_X ]  = 1f ;  vals [  Matrix . MSCALE_Y ]  = 1f ;  output Matrix . set Values ( vals )  ; }
7957,"public void pop To (  Class<?> target Fragment Class, boolean include Target Fragment,  Runnable after Pop Transaction Runnable ) { pop To ( target Fragment Class, include Target Fragment, after Pop Transaction Runnable,  Transaction Delegate . DEFAULT_POPTO_ANIM )  ; }"
7958,"public com . anychart . core . axes .  Circular parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
7959,"public static  Listenable Future< Void> submit (  Runnable runnable,  Executor executor ) {  Trusted Listenable Future Task< Void> task =  Trusted Listenable Future Task . create ( runnable, null )  ;  executor . execute ( task )  ;  return task ; }"
7960,"public com . anychart . charts .  Heat Map fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
7961,"public float [  ]  to Hsv ( float [  ]  hsv ) { float max =  Math . max (  Math . max ( r, g ) , b )  ;  float min =  Math . min (  Math . min ( r, g ) , b )  ;  float range = max - min ;  if  ( range == 0 )  {     hsv [ 0 ]  = 0 ;  } else if  ( max == r )  {     hsv [ 0 ]  =  ( 60 *  ( g - b )  / range + 360 )  % 360 ;  } else if  ( max == g )  {     hsv [ 0 ]  = 60 *  ( b - r )  / range + 120 ;  } else {     hsv [ 0 ]  = 60 *  ( r - g )  / range + 240 ;  } if  ( max > 0 )  {     hsv [ 1 ]  = 1 - min / max ;  } else {     hsv [ 1 ]  = 0 ;  } hsv [ 2 ]  = max ;  return hsv ; }"
7962,"public com . anychart . core . cartesian . series .  Area3d parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
7963,public long get Bytes Downloaded (  ) { return progress . bytes Downloaded ; }
7964,public void add Header View ( @ Non Null  View view ) { m Navigation View . add Header View ( view )  ; }
7965,"public void draw Bottom Line (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . draw Bottom Line (  )  ; "" )  ; }"
7966,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
7967,"public  Task< List Result> list ( int max Results ) {  Preconditions . check Argument ( max Results > 0, ""max Results must be greater than zero"" )  ;   Preconditions . check Argument ( max Results <= 1000, ""max Results must be at most 1000"" )  ;  return list Helper ( max Results, /* page Token */ null )  ; }"
7968,"public com . anychart . charts .  Circular Gauge range (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . range ( %s )  ; "", settings )  )  ;  return this ; }"
7969,"public  Map< Integer,  Physical Queue> get Physical Queue Map (  ) { return pq Map ; }"
7970,protected void process Input (  ) { try {     var lag = new  Secure Random (  )  . next Int ( 200 )  + 50 ;       Thread . sleep ( lag )  ;  } catch  (  Interrupted Exception e )  {     logger . error ( e . get Message (  )  )  ;  }}
7971,"public static  Filter Command Factory register (  String filter Command Name,  Filter Command Factory factory ) { return filter Command Registry . put ( filter Command Name, factory )  ; }"
7972,public  Parameters Builder build Upon Parameters (  ) { return get Parameters (  )  . build Upon (  )  ; }
7973,public static  Archive Text get (  ) { return NLS . get Bundle For (  Archive Text . class )  ; }
7974,"public void test Genrule Remote Executable False (  ) {  Target Node<?> genrule Node =  Genrule Builder . new Genrule Builder (  Build Target Factory . new Instance ( ""//:rule"" )  )  . set Out ( ""out"" )  . set Bash ( ""echo something > out"" )  . set Remote ( false )  . build (  )  ;   Target Graph target Graph =  Target Graph Factory . new Instance ( genrule Node )  ;   Action Graph Builder graph Builder = new  Test Action Graph Builder ( target Graph )  ;   Genrule genrule =  (  Genrule )  graph Builder . require Rule ( genrule Node . get Build Target (  )  )  ;  assert False ( genrule . get Buildable (  )  . should Execute Remotely (  )  )  ; }"
7975,"protected int weighted Value ( int char Value, int left Pos, int right Pos ) { int weight = POSITION_WEIGHT [ right Pos % 2 ]  ;  return char Value * weight ; }"
7976,public void remove Service (  Device Service service ) { remove Service With Id ( service . get Service Name (  )  )  ; }
7977,"public void tick ( final float delta ) { if  ( !valid )  {      Gdx . app . error ( "" Performance Counter"", "" Invalid data, check if you called  Performance Counter#stop (  ) "" )  ;      return ;  } time . put ( current )  ;  final float current Load = delta == 0f ? 0f : current / delta ;  load . put (  ( delta > 1f )  ? current Load : delta * current Load +  ( 1f - delta )  * load . latest )  ;  current = 0f ;  valid = false ; }"
7978,"public com . anychart . core . annotations .  Trend Channel third Value Anchor (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . third Value Anchor ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
7979,public final boolean is Immutable (  ) { return !mutable ; }
7980,protected void set Logging Filename (  String logging Filename ) { this . logging Filename = logging Filename ; }
7981,"public void check Merge Conflicting Submodules Without Index (  Merge Strategy strategy )  throws  Exception{  Git git =  Git . wrap ( db )  ;  write Trash File ( ""initial"", ""initial"" )  ;  git . add (  )  . add Filepattern ( ""initial"" )  . call (  )  ;   Rev Commit initial = git . commit (  )  . set Message ( ""initial"" )  . call (  )  ;  write Submodule ( ""one"",  Object Id . from String ( ""1000000000000000000000000000000000000000"" )  )  ;  git . add (  )  . add Filepattern (  Constants . DOT_GIT_MODULES )  . call (  )  ;   Rev Commit right = git . commit (  )  . set Message ( ""added one"" )  . call (  )  ;  // a second commit in the submodule git . checkout (  )  . set Start Point ( initial )  . set Name ( ""left"" )  . set Create Branch ( true )  . call (  )  ;  write Submodule ( ""one"",  Object Id . from String ( ""2000000000000000000000000000000000000000"" )  )  ;  git . add (  )  . add Filepattern (  Constants . DOT_GIT_MODULES )  . call (  )  ;  git . commit (  )  . set Message ( ""a different one"" )  . call (  )  ;   Merge Result result = git . merge (  )  . set Strategy ( strategy )  . include ( right )  . call (  )  ;  assert Equals (  Merge Status . CONFLICTING, result . get Merge Status (  )  )  ;   Map< String, int [  ]  [  ] > conflicts = result . get Conflicts (  )  ;  assert Equals ( 1, conflicts . size (  )  )  ;  assert Not Null ( conflicts . get ( ""one"" )  )  ; }"
7982,"private int measure Width ( int measure Spec ) { int result = 0 ;  int spec Mode =  Measure Spec . get Mode ( measure Spec )  ;  int spec Size =  Measure Spec . get Size ( measure Spec )  ;  //  We were told how big to be if  ( spec Mode ==  Measure Spec . EXACTLY )  {     result = spec Size ;  } else //  Calculate the width according the views count {     int count = 3 ;      if  ( view Flow != null )  {         count = view Flow . get Views Count (  )  ;      }     //  Remember that spacing is centre-to-centre     result =  ( int )   ( get Padding Left (  )  + get Padding Right (  )  +  ( 2 * m Radius )  +  ( count - 1 )  * spacing )  ;      // measure Spec     if  ( spec Mode ==  Measure Spec . AT_MOST )  {         result =  Math . min ( result, spec Size )  ;      } } return result ; }"
7983,"public void request Scroll To Position With Offset ( final int position, final int offset ) {  Sections Recycler View sections Recycler View = m Sections Recycler View ;  if  ( sections Recycler View == null )  {     return ;  }  Recycler View .  Layout Manager layout Manager = sections Recycler View . get Recycler View (  )  . get Layout Manager (  )  ;  if  ( ! ( layout Manager instanceof  Linear Layout Manager )  )  {     request Scroll To Position ( position, /* animated */     false )  ;      return ;  }  (  (  Linear Layout Manager )  layout Manager )  . scroll To Position With Offset ( position, offset )  ; }"
7984,"public  Base Adapter Helper set Checked ( int view Id, boolean checked ) {  Checkable view =  (  Checkable )  retrieve View ( view Id )  ;  view . set Checked ( checked )  ;  return this ; }"
7985,"public com . anychart . charts .  Waterfall bounds (  String x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
7986,public synchronized  Page get Page (  String name ) { for  (  Page page : pages )  {      Rectangle rect = page . rects . get ( name )  ;      if  ( rect != null )          return page ;  } return null ; }
7987,"public boolean start Export Database (  Context context,  String target File,  String database Name ) { if  ( DEBUG )  { } if  ( ! Environment . MEDIA_MOUNTED . equals (  Environment . get External Storage State (  )  )  )  {     if  ( DEBUG )  {     }     return false ;  }  String source File Path =  Environment . get Data Directory (  )  + ""/data/"" + context . get Package Name (  )  + ""/databases/"" + database Name ;   String dest File Path =  Environment . get External Storage Directory (  )  +  (  Text Utils . is Empty ( target File )  ?  ( context . get Package Name (  )  + "" . db"" )  : target File )  ;  boolean is Copy Success =  File Utils . copy File ( source File Path, dest File Path )  ;  if  ( DEBUG )  {     if  ( is Copy Success )  {     } else {     } } return is Copy Success ; }"
7988,"public com . anychart . core . gantt . timelineheader .  Level Wrapper format (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . format ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
7989,"public com . anychart . core .  State Settings selected (  ) { return new com . anychart . core .  State Settings ( js Base + "" . selected (  ) "" )  ; }"
7990,"public  Download Task Queue download (  String store File Path,  String url,  Http Call Back callback ) {  File Request request = new  File Request ( store File Path, url, callback )  ;  request . set Config ( m Config )  ;  m Config . m Controller . add ( request )  ;  return m Config . m Controller ; }"
7991,"private P create View Id And Create Presenter (  ) { P presenter = delegate Callback . create Presenter (  )  ;  if  ( presenter == null )  {     throw new  Null Pointer Exception ( "" Presenter returned from create Presenter (  )  is null .   Fragment is "" + fragment )  ;  } if  ( keep Presenter During Screen Orientation Change || keep Presenter On Backstack )  {      Activity activity = get Activity (  )  ;      mosby View Id = UUID . random UUID (  )  . to String (  )  ;       Presenter Manager . put Presenter ( activity, mosby View Id, presenter )  ;  } return presenter ; }"
7992,"public void send Generic Level Get (  ) { if  ( !check Connectivity ( m Container )  )      return ;  final  Element element = m View Model . get Selected Element (  )  . get Value (  )  ;  if  ( element != null )  {     final  Mesh Model model = m View Model . get Selected Model (  )  . get Value (  )  ;      if  ( model != null )  {         if  ( !model . get Bound App Key Indexes (  )  . is Empty (  )  )  {             final int app Key Index = model . get Bound App Key Indexes (  )  . get ( 0 )  ;              final  Application Key app Key = m View Model . get Network Live Data (  )  . get Mesh Network (  )  . get App Key ( app Key Index )  ;              final int address = element . get Element Address (  )  ;               Log . v ( TAG, "" Sending message to element's unicast address: "" +  Mesh Address . format Address ( address, true )  )  ;              final  Generic Level Get generic Level Get = new  Generic Level Get ( app Key )  ;              send Message ( address, generic Level Get )  ;          } else {             m View Model . display Snack Bar ( this, m Container, get String ( R . string . error_no_app_keys_bound ) ,  Snackbar . LENGTH_LONG )  ;          }     } }}"
7993,"protected boolean can Scroll (  View v, boolean check V, int dx, int x, int y ) { if  ( v instanceof  View Group )  {     final  View Group group =  (  View Group )  v ;      final int scroll X = v . get Scroll X (  )  ;      final int scroll Y = v . get Scroll Y (  )  ;      final int count = group . get Child Count (  )  ;      //  Count backwards - let topmost views consume scroll distance first .      for  ( int i = count - 1 ;  i >= 0 ;  i-- )  {         // TODO:  Add versioned support here for transformed views .          //  This will not work for transformed views in  Honeycomb+         final  View child = group . get Child At ( i )  ;          if  ( x + scroll X >= child . get Left (  )  && x + scroll X < child . get Right (  )  && y + scroll Y >= child . get Top (  )  && y + scroll Y < child . get Bottom (  )  && can Scroll ( child, true, dx, x + scroll X - child . get Left (  ) , y + scroll Y - child . get Top (  )  )  )  {             return true ;          }     } } return check V &&  View Compat . can Scroll Horizontally ( v, -dx )  ; }"
7994,public void set Image Format (  Image Format image Format ) { this . m Image Format = image Format ; }
7995,protected void process File (  Entry entry )  throws  Exception{}
7996,"public void set Propagation Speed ( float propagation Speed ) { if  ( propagation Speed == 0 )  {     throw new  Illegal Argument Exception ( ""propagation Speed may not be 0"" )  ;  } m Propagation Speed = propagation Speed ; }"
7997,"public  String to Quoted (  ) { return '\""' + to Human (  )  + '\""' ; }"
7998,"public com . anychart . charts .  Mekko margin (  String value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
7999,"public com . anychart . charts .  Polar x Minor Grid (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Minor Grid ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
8000,public void set Time ( float time ) { this . time = time ; }
8001,"public com . anychart . core .  Separate Chart get Chart (  ) { return new com . anychart . core .  Separate Chart ( js Base + "" . get Chart (  ) "" )  ; }"
8002,"public  Do Not Hash View Model_ on Visibility State Changed (  On Model Visibility State Changed Listener< Do Not Hash View Model_,  Do Not Hash View> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
8003,"public void test Favor Local Cache Use Local RT Succeeds (  )  throws  Package Manager .  Name Not Found Exception,  Operation Canceled Exception, IO Exception,  Authenticator Exception,  Interrupted Exception, JSON Exception{ //  Make sure AT is expired final I Token Cache Store cache Store = get Token Cache ( get Expire Date ( -MINUS_MINUTE ) , // store mrrt false, // store frt false, // ext expires null )  ;  final  Account Manager mocked Account Manager = get Mocked Account Manager (  )  ;  mock Account Manager Get Account Behavior ( mocked Account Manager )  ;  mock Get Auth Token Call ( mocked Account Manager, true )  ;  final  File Mock Context mock Context = create Mock Context (  )  ;  mock Context . set Mocked Account Manager ( mocked Account Manager )  ;  //mock  Http Url Connection for refresh token request prepare Success Http Url Connection (  )  ;  prepare Auth For Broker Call (  )  ;  final  Authentication Context auth Context = new  Authentication Context ( mock Context, VALID_AUTHORITY, // validate authority false, cache Store )  ;  final  Test Auth Callback callback = new  Test Auth Callback (  )  ;  auth Context . acquire Token Silent Async ( ""resource"", ""clientid"", TEST_USERID, callback )  ;  final  Count Down Latch signal = new  Count Down Latch ( 1 )  ;  signal . await ( ACTIVITY_TIME_OUT,  Time Unit . MILLISECONDS )  ;  // verify get Auth Token not called verify ( mocked Account Manager, times ( 0 )  )  . get Auth Token (  Mockito . any (  Account . class ) ,  Matchers . any String (  ) ,  Matchers . any (  Bundle . class ) ,  Matchers . eq ( false ) ,  (  Account Manager Callback< Bundle> )   Matchers . eq ( null ) ,  Matchers . any (  Handler . class )  )  ;  // verify returned AT is as expected assert Null ( callback . get Callback Exception (  )  )  ;  assert Not Null ( callback . get Callback Result (  )  )  ;  assert Equals ( ""I am a new access token"", callback . get Callback Result (  )  . get Access Token (  )  )  ;  assert True ( cache Store . get All (  )  . has Next (  )  )  ;  cache Store . remove All (  )  ; }"
8004,"public  Banner set Banner Gallery MZ ( int item Width ) { return set Banner Gallery MZ ( item Width,  . 88f )  ; }"
8005,"public void check Merge Equal Trees Without Index (  Merge Strategy strategy )  throws  Exception{  Git git =  Git . wrap ( db )  ;  write Trash File ( ""d/1"", ""orig"" )  ;  git . add (  )  . add Filepattern ( ""d/1"" )  . call (  )  ;   Rev Commit first = git . commit (  )  . set Message ( ""added d/1"" )  . call (  )  ;  write Trash File ( ""d/1"", ""modified"" )  ;   Rev Commit master Commit = git . commit (  )  . set All ( true )  . set Message ( ""modified d/1 on master"" )  . call (  )  ;  git . checkout (  )  . set Create Branch ( true )  . set Start Point ( first )  . set Name ( ""side"" )  . call (  )  ;  write Trash File ( ""d/1"", ""modified"" )  ;  git . commit (  )  . set All ( true )  . set Message ( ""modified d/1 on side"" )  . call (  )  ;  git . rm (  )  . add Filepattern ( ""d/1"" )  . call (  )  ;  git . rm (  )  . add Filepattern ( ""d"" )  . call (  )  ;   Merge Result merge Res = git . merge (  )  . set Strategy ( strategy )  . include ( master Commit )  . call (  )  ;  assert Equals (  Merge Status . MERGED, merge Res . get Merge Status (  )  )  ;  assert Equals ( "" [ d/1, mode:100644, content:modified ] "", index State ( CONTENT )  )  ; }"
8006,"public com . anychart . charts .  Tag Cloud label (  String index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , settings )  )  ;  return this ; }"
8007,"public void sort ( final int column Index, final boolean sort Ascending ) { final  Sorting Order sorting Order ;  if  ( sort Ascending )  {     sorting Order =  Sorting Order . ASCENDING ;  } else {     sorting Order =  Sorting Order . DESCENDING ;  } sorting Controller . sort ( column Index, sorting Order )  ; }"
8008,public void set Max Component Depth ( int max Component Depth ) { this . max Component Depth = max Component Depth ; }
8009,public static  String get Facebook Domain (  ) { return facebook Domain ; }
8010,"public void test Register Sub Type First Allowed (  ) { new  Gson Builder (  )  . register Type Hierarchy Adapter (  Manager . class, new  Manager Adapter (  )  )  . register Type Hierarchy Adapter (  Employee . class, new  Employee Adapter (  )  )  . create (  )  ; }"
8011,private void set Color Key Mask ( PDF Object mask Array Object )  throws IO Exception{ PDF Object [  ]  mask Objects = mask Array Object . get Array (  )  ;  color Key Mask = null ;  int [  ]  masks = new int [ mask Objects . length ]  ;  for  ( int i = 0 ;  i < masks . length ;  i++ )  {     masks [ i ]  = mask Objects [ i ]  . get Int Value (  )  ;  } color Key Mask = masks ; }
8012,private static int transform Access For Instant Run ( int access ) {  Access Right access Right =  Access Right . from Node Access ( access )  ;  if  ( access Right !=  Access Right . PRIVATE )  {     access &= ~ Opcodes . ACC_PROTECTED ;      access &= ~ Opcodes . ACC_PRIVATE ;      return access |  Opcodes . ACC_PUBLIC ;  } return access ; }
8013,"public int index Among At Inject Members With Same Simple Name (  ) { return element (  )  . get Enclosing Element (  )  . get Enclosed Elements (  )  . stream (  )  . filter (  element -> is Annotation Present ( element,  Inject . class )  )  . filter (  element -> !element . get Modifiers (  )  . contains (  Modifier . PRIVATE )  )  . filter (  element -> element . get Simple Name (  )  . equals ( this . element (  )  . get Simple Name (  )  )  )  . collect ( to List (  )  )  . index Of ( element (  )  )  ; }"
8014,"public void set Real Height ( int height ) { if  ( is JB (  )  )  {     this . real Height = height ;  } else {      Shadow Display Manager . change Display ( real Object . get Display Id (  ) ,  di -> di . logical Height = height )  ;  }}"
8015,"public  Component Host get Component Host (  ) { final  Litho View litho View = get Litho View (  )  ;  final  Component component = get Component (  )  ;  if  ( litho View == null )  {     return null ;  } final  Mount Delegate Target mount Delegate Target = litho View . get Mount Delegate Target (  )  ;  for  ( int i = 0, size = mount Delegate Target . get Mount Item Count (  )  ;  i < size ;  i++ )  {     final  Mount Item mount Item = mount Delegate Target . get Mount Item At ( i )  ;      final  Component mount Item Component = mount Item == null ? null : get Layout Output ( mount Item )  . get Component (  )  ;      if  ( mount Item Component != null && mount Item Component . is Equivalent To ( component )  )  {         return  (  Component Host )  mount Item . get Host (  )  ;      } } return null ; }"
8016,"public com . anychart . charts .  Sparkline last Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . last Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
8017,public void pause Blur (  ) { if  ( !m Running )  {     return ;  } m Running = false ;   Choreographer . get Instance (  )  . remove Frame Callback ( invalidation Loop )  ; }
8018,"public  Object [  ]  get Available Annotations (  ) { try {     return get Annotations ( true )  ;  } catch  (  Class Not Found Exception e )  {     throw new  Runtime Exception ( "" Unexpected exception"", e )  ;  }}"
8019,"public void vertical Spacing (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . vertical Spacing (  )  ; "" )  ; }"
8020,"public void maybe Schedule Token Refresh ( @ Non Null  App Check Token token ) {  Default App Check Token default Token ;  if  ( token instanceof  Default App Check Token )  {     default Token =  (  Default App Check Token )  token ;  } else {     default Token =  Default App Check Token . construct From Raw Token ( token . get Token (  )  )  ;  } //  The next refresh time is received At + 0 . 5*expires In + 5 minutes .  next Refresh Time Millis = default Token . get Received At Timestamp (  )  +  ( long )   ( REFRESH_BUFFER_FRACTION * default Token . get Expires In Millis (  )  )  + FIVE_MINUTES_IN_MILLIS ;  if  ( next Refresh Time Millis > default Token . get Expire Time Millis (  )  )  {     //  This shouldn't happen, as the minimum allowed TTL should be at least 15 minutes, but adding     // this check to be safe .      next Refresh Time Millis = default Token . get Expire Time Millis (  )  - REFRESH_BUFFER_ABSOLUTE_MILLIS ;  } if  ( should Schedule Refresh (  )  )  {     token Refresher . schedule Refresh ( next Refresh Time Millis - clock . current Time Millis (  )  )  ;  }}"
8021,public int get Timeout (  ) { return timeout ; }
8022,public void set Button ( int button ) { this . button = button ; }
8023,public  Tracker Builder set Tracker Name (  String name ) { m Tracker Name = name ;  return this ; }
8024,public void set Center Axis Labels ( boolean enabled ) { m Center Axis Labels = enabled ; }
8025,"public void test No Comments Single File (  ) {  Git Hub File file =  Git Hub File . builder (  )  . filename ( ""a . txt"" )  . build (  )  ;   Commit commit =  Commit . builder (  )  . files (  Collections . singleton List ( file )  )  . build (  )  ;   Full Commit full = new  Full Commit ( commit )  ;  assert True ( full . is Empty (  )  )  ;  assert Equals ( 1, full . get Files (  )  . size (  )  )  ; }"
8026,public boolean has Next (  ) { return !path Stack . is Empty (  )  ; }
8027,"public com . anychart . core . axismarkers .  Gantt Text v Align (  String align ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . v Align ( %s )  ; "", wrap Quotes ( align )  )  )  ;  return this ; }"
8028,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
8029,public  Builder set Header ( @ Nullable  View header ) { m Header = header ;  return this ; }
8030,"public static  Concurrent Hash Multiset<E> create (  ) { // an  Abstract Concurrent Map Multiset .  return new  Concurrent Hash Multiset<E> ( new  Concurrent Hash Map<E,  Atomic Integer> (  )  )  ; }"
8031,"public com . anychart . core . annotations .  Andrews Pitchfork stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8032,"public  Parcelable on Save Instance State (  ) { if  ( is In Edit Mode )      return null ;   Parcelable super State = delegate Callback . super On Save Instance State (  )  ;  if  ( keep Presenter During Screen Orientation Change )  {     return new  Mosby Saved State ( super State, mosby View Id )  ;  } else {     return super State ;  }}"
8033,public  Connect Request use Auto Connect ( final boolean auto Connect ) { this . auto Connect = auto Connect ;  return this ; }
8034,public void write ( byte [  ]  bytes )  throws IO Exception{ check Not Null ( bytes )  ;   Closer closer =  Closer . create (  )  ;  try {      Output Stream out = closer . register ( open Stream (  )  )  ;      out . write ( bytes )  ;      // https://code . google . com/p/guava-libraries/issues/detail?id=1330     out . flush (  )  ;  } catch  (  Throwable e )  {     throw closer . rethrow ( e )  ;  } finally {     closer . close (  )  ;  }}
8035,public  Color get Color (  ) { return color ; }
8036,"public com . anychart . palettes .  Hatch Fills hatch Fill Palette (  ) { return new com . anychart . palettes .  Hatch Fills ( js Base + "" . hatch Fill Palette (  ) "" )  ; }"
8037,public boolean is Empty (  ) { buffer Up (  )  ;  return buf Pos >= buf Length ; }
8038,"public com . anychart . core . stock . scrollerseries .  Range Spline Area fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
8039,"public void on Request Permission Result ( int request Code,  String [  ]  permissions, int [  ]  grant Results )  throws JSON Exception{  Pair< Cordova Plugin,  Integer> callback = permission Result Callbacks . get And Remove Callback ( request Code )  ;  if  ( callback != null )  {     callback . first . on Request Permission Result ( callback . second, permissions, grant Results )  ;  }}"
8040,public  Revenue set Revenue Type (  String revenue Type ) { // no input validation for optional field this . revenue Type = revenue Type ;  return this ; }
8041,"public  Http Get Request build Http Get Request (  String url,  Map< String,  String> query Params ) { return new  Http Get Request ( url, query Params )  ; }"
8042,"public static  String to String ( long x, int radix ) { check Argument ( radix >=  Character . MIN_RADIX && radix <=  Character . MAX_RADIX, ""radix  ( %s )  must be between  Character . MIN_RADIX and  Character . MAX_RADIX"", radix )  ;  if  ( x == 0 )  {     //  Simply return ""0""     return ""0"" ;  } else if  ( x > 0 )  {     return  Long . to String ( x, radix )  ;  } else {     char [  ]  buf = new char [ 64 ]  ;      int i = buf . length ;      if  (  ( radix &  ( radix - 1 )  )  == 0 )  {         //  Radix is a power of two so we can avoid division .          int shift =  Integer . number Of Trailing Zeros ( radix )  ;          int mask = radix - 1 ;          do {             buf [ --i ]  =  Character . for Digit (  (  ( int )  x )  & mask, radix )  ;              x >>>= shift ;          } while  ( x != 0 )  ;      } else {         //  Separate off the last digit using unsigned division .   That will leave         // a number that is nonnegative as a signed integer .          long quotient ;          if  (  ( radix & 1 )  == 0 )  {             //  Fast path for the usual case where the radix is even .              quotient =  ( x >>> 1 )  /  ( radix >>> 1 )  ;          } else {             quotient = divide ( x, radix )  ;          }         long rem = x - quotient * radix ;          buf [ --i ]  =  Character . for Digit (  ( int )  rem, radix )  ;          x = quotient ;          //  Simple modulo/division approach         while  ( x > 0 )  {             buf [ --i ]  =  Character . for Digit (  ( int )   ( x % radix ) , radix )  ;              x /= radix ;          }     }     //  Generate string     return new  String ( buf, i, buf . length - i )  ;  }}"
8043,public boolean is Should Keep Alive (  ) { return should Keep Alive ; }
8044,public static  Ok Http Network Scheme Handler create ( @ Non Null  Call .  Factory factory ) { return new  Ok Http Network Scheme Handler ( factory )  ; }
8045,public  Query Builder<T> order Raw (  String raw Order ) { check Order Builder (  )  ;  order Builder . append ( raw Order )  ;  return this ; }
8046,"public void defrost (  ) { throw new  Runtime Exception ( ""cannot defrost "" + get Name (  )  )  ; }"
8047,"public void spin ( int durationmillis, float fromangle, float toangle,  Easing Function easing ) { set Rotation Angle ( fromangle )  ;   Object Animator spin Animator =  Object Animator . of Float ( this, ""rotation Angle"", fromangle, toangle )  ;  spin Animator . set Duration ( durationmillis )  ;  spin Animator . set Interpolator ( easing )  ;  spin Animator . add Update Listener ( new  Animator Update Listener (  )  {     @ Override     public void on Animation Update (  Value Animator animation )  {         post Invalidate (  )  ;      } } )  ;  spin Animator . start (  )  ; }"
8048,"public com . anychart . standalones .  Resource Timeline range Marker (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . range Marker ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
8049,public void set Has Permission ( boolean has Permission ) { this . has Permission = has Permission ; }
8050,"public com . anychart . charts .  Sparkline margin (  String value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
8051,public  Geo Json Line String Style get Line String Style (  ) { return m Line String Style ; }
8052,public  String get Title (  ) { return m Marker Options . get Title (  )  ; }
8053,protected final byte [  ]  get Bytes (  ) { return bytes ; }
8054,"public int nearest ( final T in, int start, final int count ) { while  ( start < 0 )  start += span Count ;  int result = start % span Count ;  float dst = in . dst2 ( control Points [ result ]  )  ;  for  ( int i = 1 ;  i < count ;  i++ )  {     final int idx =  ( start + i )  % span Count ;      final float d = in . dst2 ( control Points [ idx ]  )  ;      if  ( d < dst )  {         dst = d ;          result = idx ;      } } return result ; }"
8055,"public void set (  String name,  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set ( %s, %s )  ; "", wrap Quotes ( name ) , wrap Quotes ( value )  )  )  ; }"
8056,public boolean is Set Rule Key (  ) { return this . rule Key != null ; }
8057,"public com . anychart . core . stock . scrollerseries .  Spline Area fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
8058,"public com . anychart . core .  Visual Base parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
8059,"public com . anychart . core . cartesian . series .  Line line2d (  String data, com . anychart . data .  Text Parsing Settings csv Settings ) { return new com . anychart . core . cartesian . series .  Line (  String . format (  Locale . US, js Base + "" . line2d ( %s, %s ) "", wrap Quotes ( data ) ,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
8060,"public void find Usages (  ) { if  ( field Ids == null || method Ids == null )  {     return ;  } for  (  Class Def class Def : dex . class Defs (  )  )  {     current Class = class Def ;      current Method = null ;      if  ( class Def . get Class Data Offset (  )  == 0 )  {         continue ;      }      Class Data class Data = dex . read Class Data ( class Def )  ;      for  (  Class Data .  Field field : class Data . all Fields (  )  )  {         int field Index = field . get Field Index (  )  ;          if  ( field Ids . contains ( field Index )  )  {             out . println ( location (  )  + "" field declared "" + dex . field Ids (  )  . get ( field Index )  )  ;          }     }     for  (  Class Data .  Method method : class Data . all Methods (  )  )  {         current Method = method ;          int method Index = method . get Method Index (  )  ;          if  ( method Ids . contains ( method Index )  )  {             out . println ( location (  )  + "" method declared "" + dex . method Ids (  )  . get ( method Index )  )  ;          }         if  ( method . get Code Offset (  )  != 0 )  {             code Reader . visit All ( dex . read Code ( method )  . get Instructions (  )  )  ;          }     } } current Class = null ;  current Method = null ; }"
8061,"public  String read Null Terminated String ( int length ) { if  ( length == 0 )  {     return """" ;  } int string Length = length ;  int last Index = position + length - 1 ;  if  ( last Index < limit && data [ last Index ]  == 0 )  {     string Length-- ;  }  String result =  Util . from Utf8 Bytes ( data, position, string Length )  ;  position += length ;  return result ; }"
8062,"public  Ct Method get Method (  )  throws  Not Found Exception{ throw new  Not Found Exception ( ""this is a constructor call .    Call get Constructor (  )  . "" )  ; }"
8063,"public com . anychart . core . annotations .  Horizontal Line y Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
8064,"public  Builder<K, V> put All (  Multimap<? extends K, ? extends V> multimap ) { for  (  Entry<? extends K, ? extends  Collection<? extends V>> entry : multimap . as Map (  )  . entry Set (  )  )  {     put All ( entry . get Key (  ) , entry . get Value (  )  )  ;  } return this ; }"
8065,public static  Initializer constant ( int i ) { return new  Int Initializer ( i )  ; }
8066,"public static T create Named Mock (  String name,  Class<T> to Mock ) { return null ; }"
8067,public final  Rev Tree get Tree (  ) { return tree ; }
8068,"public com . anychart . core . lineargauge . pointers .  Thermometer color (  String color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color ( %s )  ; "", wrap Quotes ( color )  )  )  ;  return this ; }"
8069,"public void point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . point Width (  )  ; "" )  ; }"
8070,public  Builder add Fields (  String [  ]  fields ) { for  (  String field : fields )  {     this . fields . add ( field )  ;  } return this ; }
8071,public synchronized boolean is Logging Enabled (  ) { return enable Logging_ ; }
8072,private void write Object (  Object Output Stream stream )  throws IO Exception{ stream . default Write Object (  )  ;  stream . write Object ( factory )  ;  stream . write Object ( backing Map (  )  )  ; }
8073,public int get Minor (  ) { return m Minor ; }
8074,"public void rebuild Stack Map (  Class Pool pool )  throws  Bad Bytecode{  Code Attribute ca = get Code Attribute (  )  ;  if  ( ca != null )  {      Stack Map Table smt =  Map Maker . make ( pool, this )  ;      ca . set Attribute ( smt )  ;  }}"
8075,public  Horizontal Group reverse (  ) { reverse = true ;  return this ; }
8076,"public final synchronized void parent Changed (  Terminal View parent ) { if  ( manager != null && !manager . is Resize Allowed (  )  )  {      Log . d ( "" Resize is not allowed now"" )  ;      return ;  } this . parent = parent ;  final int width = parent . get Width (  )  ;  final int height = parent . get Height (  )  ;  //  Something has gone wrong with our layout ;  we're 0 width or height! if  ( width <= 0 || height <= 0 )  {     return ;  } clipboard =  (  Clipboard Manager )  parent . get Context (  )  . get System Service (  Context . CLIPBOARD_SERVICE )  ;  key Listener . set Clipboard Manager ( clipboard )  ;  if  ( !forced Size )  {     // recalculate buffer size     int new Columns, new Rows ;      new Columns = width / char Width ;      new Rows = height / char Height ;      // draw then don't blow away scroll regions and such .      if  ( new Columns == columns && new Rows == rows )  {         return ;      }     columns = new Columns ;      rows = new Rows ;  } // reallocate new bitmap if needed boolean new Bitmap =  ( bitmap == null )  ;  if  ( bitmap != null )  {     new Bitmap =  ( bitmap . get Width (  )  != width || bitmap . get Height (  )  != height )  ;  } if  ( new Bitmap )  {     discard Bitmap (  )  ;      bitmap =  Bitmap . create Bitmap ( width, height,  Config . ARGB_8888 )  ;      canvas . set Bitmap ( bitmap )  ;  } // clear out any old buffer information default Paint . set Color (  Color . BLACK )  ;  canvas . draw Paint ( default Paint )  ;  //  Stroke the border of the terminal if the size is being forced ;  if  ( forced Size )  {     int border X =  ( columns * char Width )  + 1 ;      int border Y =  ( rows * char Height )  + 1 ;      default Paint . set Color (  Color . GRAY )  ;      default Paint . set Stroke Width ( 0 . 0f )  ;      if  ( width >= border X )  {         canvas . draw Line ( border X, 0, border X, border Y + 1, default Paint )  ;      }     if  ( height >= border Y )  {         canvas . draw Line ( 0, border Y, border X + 1, border Y, default Paint )  ;      } } try {     // request a terminal pty resize     synchronized  ( buffer )  {         buffer . set Screen Size ( columns, rows, true )  ;      }     if  ( transport != null )  {         transport . set Dimensions ( columns, rows, width, height )  ;      } } catch  (  Exception e )  {      Log . e ( "" Problem while trying to resize screen or PTY"", e )  ;  } // force full redraw with new buffer size full Redraw = true ;  redraw (  )  ;  parent . notify User (  String . format ( ""%d x %d"", columns, rows )  )  ;   Log . i (  String . format ( ""parent Changed (  )  now width=%d, height=%d"", columns, rows )  )  ; }"
8077,"private  Byte Buffer enlarge Buffer (  Byte Buffer buffer, int session Proposed Capacity ) { if  ( session Proposed Capacity > buffer . capacity (  )  )  {     buffer =  Byte Buffer . allocate ( session Proposed Capacity )  ;  } else {     buffer =  Byte Buffer . allocate ( buffer . capacity (  )  * 2 )  ;  } return buffer ; }"
8078,public void set Charset (  String charset ) { synchronized  ( lock )  {     this . charset = charset ;      if  ( connected )  {         try {             communication . change Charset ( pick Charset (  )  )  ;          } catch  ( IO Exception e )  {             e . print Stack Trace (  )  ;          }     } }}
8079,"protected void update Index Or Offset (  Sparse Index Map sparse Index Map, int old Index, int old Offset, int new Index, int new Offset ) {//  Should override by subclass if needed . }"
8080,"private void write Data Upto Including Ilst (  File Channel file Read Channel,  File Channel file Write Channel, int old Ilst Size, int start Ilst Within File,  Byte Buffer raw Ilst Data )  throws IO Exception{ file Read Channel . position ( 0 )  ;  file Write Channel . transfer From ( file Read Channel, 0, start Ilst Within File )  ;  file Write Channel . position ( start Ilst Within File )  ;  file Write Channel . write ( raw Ilst Data )  ;  file Read Channel . position ( start Ilst Within File + old Ilst Size )  ; }"
8081,"public com . anychart . core . gantt . edit .  Element Edit edit (  ) { return new com . anychart . core . gantt . edit .  Element Edit ( js Base + "" . edit (  ) "" )  ; }"
8082,private  Throwable root Cause (  ) { for  (  Step step : steps )  {     if  ( !step . is Check Call (  )  && step . subject . actual (  )  instanceof  Throwable )  {         return  (  Throwable )  step . subject . actual (  )  ;      } } return null ; }
8083,"public void fake Drag By ( float x Offset ) { if  ( !m Fake Dragging )  {     throw new  Illegal State Exception ( "" No fake drag in progress .   Call begin Fake Drag first . "" )  ;  } m Last Motion X += x Offset ;  float scroll X = get Scroll X (  )  - x Offset ;  final int width = get Width (  )  ;  final int width With Margin = width + m Page Margin ;  final float left Bound =  Math . max ( 0,  ( m Cur Item - 1 )  * width With Margin )  ;  final float right Bound =  Math . min ( m Cur Item + 1, m Adapter . get Count (  )  - 1 )  * width With Margin ;  if  ( scroll X < left Bound )  {     scroll X = left Bound ;  } else if  ( scroll X > right Bound )  {     scroll X = right Bound ;  } //  Don't lose the rounded component m Last Motion X += scroll X -  ( int )  scroll X ;  scroll To (  ( int )  scroll X, get Scroll Y (  )  )  ;  if  ( m On Page Change Listener != null )  {     final int position =  ( int )  scroll X / width With Margin ;      final int position Offset Pixels =  ( int )  scroll X % width With Margin ;      final float position Offset =  ( float )  position Offset Pixels / width With Margin ;      m On Page Change Listener . on Page Scrolled ( position, position Offset, position Offset Pixels )  ;  } //  Synthesize an event for the  Velocity Tracker .  final long time =  System Clock . uptime Millis (  )  ;  final  Motion Event ev =  Motion Event . obtain ( m Fake Drag Begin Time, time,  Motion Event . ACTION_MOVE, m Last Motion X, 0, 0 )  ;  m Velocity Tracker . add Movement ( ev )  ;  ev . recycle (  )  ; }"
8084,"public void assert Output (  Context context,  String dump File )  throws IO Exception{  String actual = new  Dumper (  )  . add ( this )  . to String (  )  ;  if  ( WRITE_DUMP )  {      File directory = context . get External Files Dir ( null )  ;       File file = new  File ( directory, dump File )  ;      file . get Parent File (  )  . mkdirs (  )  ;       Print Writer out = new  Print Writer ( file )  ;      out . print ( actual )  ;      out . close (  )  ;  } else {      String expected =  Test Util . get String ( context, dump File )  ;      assert With Message ( dump File )  . that ( actual )  . is Equal To ( expected )  ;  }}"
8085,"public  Model create Box ( float width, float height, float depth, final  Material material, final long attributes ) { return create Box ( width, height, depth, GL20 . GL_TRIANGLES, material, attributes )  ; }"
8086,"public void calculate ( float data Min, float data Max ) { // if custom, use value as is, else use data value float min = m Custom Axis Min ? m Axis Minimum :  ( data Min - m Space Min )  ;  float max = m Custom Axis Max ? m Axis Maximum :  ( data Max + m Space Max )  ;  // temporary range  ( before calculations )  float range =  Math . abs ( max - min )  ;  // in case all values are equal if  ( range == 0f )  {     max = max + 1f ;      min = min - 1f ;  } this . m Axis Minimum = min ;  this . m Axis Maximum = max ;  // actual range this . m Axis Range =  Math . abs ( max - min )  ; }"
8087,public static boolean has On Click Listeners (  View view ) { if  (  Build . VERSION . SDK_INT >= 15 )  {     return view . has On Click Listeners (  )  ;  } return false ; }
8088,public void update Enabled ( boolean interrupted ) { for  ( int i = 0 ;  i != interrupt Only Items . size (  )  ;  ++i )  {     J Menu Item item = interrupt Only Items . get ( i )  ;      item . set Enabled ( interrupted )  ;  } for  ( int i = 0 ;  i != run Only Items . size (  )  ;  ++i )  {     J Menu Item item = run Only Items . get ( i )  ;      item . set Enabled ( !interrupted )  ;  }}
8089,"public com . anychart . core . annotations .  Fibonacci Timezones trend ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . trend ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8090,"private void change Card4 (  ) {  State List Drawable new Drawable = new  State List Drawable (  )  ;  new Drawable . add State ( new int [  ]  { android . R . attr . state_pressed }, get Resources (  )  . get Drawable ( R . drawable . pressed_background_card )  )  ;  new Drawable . add State ( new int [  ]  {}, get Resources (  )  . get Drawable ( R . drawable . demo_card_background_color2 )  )  ;  card4 . set Background Resource ( new Drawable )  ;  //card View4 . refresh Card ( card4 )  ;  card4 . notify Data Set Changed (  )  ; }"
8091,"void set Value ( T value ) { this . value = value ;  this . state = COMPLETED ;  this . callback . if Present (  ac -> ac . on Complete ( value,  Optional . empty (  )  )  )  ;  synchronized  ( lock )  {     lock . notify All (  )  ;  }}"
8092,"static void write Map (  Map<K, V> map,  Object Output Stream stream )  throws IO Exception{ stream . write Int ( map . size (  )  )  ;  for  (  Map .  Entry<K, V> entry : map . entry Set (  )  )  {     stream . write Object ( entry . get Key (  )  )  ;      stream . write Object ( entry . get Value (  )  )  ;  }}"
8093,public boolean is Use Long Click (  ) { return use Long Click ; }
8094,"public void write (  Input Stream input, boolean append ) { throw new  Gdx Runtime Exception ( "" Cannot write to files in GWT backend"" )  ; }"
8095,void start Provisioning With Static OOB ( @ Non Null final  Unprovisioned Mesh Node unprovisioned Mesh Node )  throws  Illegal Argument Exception{ send Provisioning Start With Static OOB ( unprovisioned Mesh Node )  ; }
8096,public void set Sample Offset Us ( long sample Offset Us ) { if  ( this . sample Offset Us != sample Offset Us )  {     this . sample Offset Us = sample Offset Us ;      pending Format Adjustment = true ;  }}
8097,"public void add Track Selection For Single Renderer ( int period Index, int renderer Index,  Default Track Selector .  Parameters track Selector Parameters,  List< Selection Override> overrides ) { assert Prepared With Media (  )  ;   Default Track Selector .  Parameters Builder builder = track Selector Parameters . build Upon (  )  ;  for  ( int i = 0 ;  i < mapped Track Infos [ period Index ]  . get Renderer Count (  )  ;  i++ )  {     builder . set Renderer Disabled ( /* renderer Index= */     i, /* disabled= */     i != renderer Index )  ;  } if  ( overrides . is Empty (  )  )  {     add Track Selection ( period Index, builder . build (  )  )  ;  } else {      Track Group Array track Group Array = mapped Track Infos [ period Index ]  . get Track Groups ( renderer Index )  ;      for  ( int i = 0 ;  i < overrides . size (  )  ;  i++ )  {         builder . set Selection Override ( renderer Index, track Group Array, overrides . get ( i )  )  ;          add Track Selection ( period Index, builder . build (  )  )  ;      } }}"
8098,public void toggle Selection (  Photo photo ) { if  ( selected Photos . contains ( photo . get Path (  )  )  )  {     selected Photos . remove ( photo . get Path (  )  )  ;  } else {     selected Photos . add ( photo . get Path (  )  )  ;  }}
8099,public  Immutable Collection<V> values (  ) { return  (  Immutable Collection<V> )  super . values (  )  ; }
8100,"public com . anychart . charts .  Sunburst full Screen (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . full Screen ( %s )  ; "", enabled )  )  ;  return this ; }"
8101,"private void write Object (  Object Output Stream out )  throws IO Exception{ throw new  Unsupported Operation Exception ( this . get Class (  )  + "" does not support serialization .  "" + "" Use  Logger Event VO instance instead .   See also  Logger Event VO . build method . "" )  ; }"
8102,public void on View Attached To Window (  Recycler View .  View Holder holder ) { super . on View Attached To Window ( holder )  ;  int type = holder . get Item View Type (  )  ;  if  ( type == EMPTY_VIEW || type == HEADER_VIEW || type == FOOTER_VIEW || type == LOADING_VIEW || type == FULL_VIEW || type == FULL_VIEW_2 || type == FULL_VIEW_3 )  {     _set Full Span ( holder )  ;  }}
8103,public static  Server Socket create Server Socket (  )  throws IO Exception{ return create Server Socket (  Server Socket Factory . get Default (  )  )  ; }
8104,protected int get Extra Layout Space (  Recycler View .  State state ) { if  ( state . has Target Scroll Position (  )  )  {     return m Orientation Helper . get Total Space (  )  ;  } else {     return 0 ;  }}
8105,"public boolean on Hook Group Collapse ( int group Position, boolean from User, @ Nullable  Object payload ) { return on Hook Group Collapse ( group Position, from User )  ; }"
8106,"public static int data Size (  String desc ) { return data Size ( desc, true )  ; }"
8107,public  Builder set Footer ( @ Nullable  View footer ) { m Footer = footer ;  return this ; }
8108,"public PDF Page get Page ( int pagenum ) { return get Page ( pagenum, false )  ; }"
8109,public  Throwable get Cause (  ) { return ex ; }
8110,"public com . anychart . standalones .  Title word Wrap ( com . anychart . enums .  Word Wrap mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . word Wrap ( %s )  ; "",  ( mode != null )  ? mode . get Js Base (  )  : null )  )  ;  return this ; }"
8111,"public static  Compiler Provider get Compiler (  Cxx Platform cxx Platform,  Cxx Source .  Type type ) {  Compiler Provider compiler ;  switch ( type )  {     case ASSEMBLER:         compiler = cxx Platform . get As (  )  ;          break ;      case C_CPP_OUTPUT:         compiler = cxx Platform . get Cc (  )  ;          break ;      case CXX_CPP_OUTPUT:     case PCM:     case CXX_THINLINK:         compiler = cxx Platform . get Cxx (  )  ;          break ;      case OBJC_CPP_OUTPUT:         compiler = cxx Platform . get Cc (  )  ;          break ;      case OBJCXX_CPP_OUTPUT:         compiler = cxx Platform . get Cxx (  )  ;          break ;      case CUDA_CPP_OUTPUT:         if  ( !cxx Platform . get Cuda (  )  . is Present (  )  )  {             throw new  Human Readable Exception ( ""%s: no cuda compiler set"", cxx Platform . get Flavor (  )  )  ;          }         compiler = cxx Platform . get Cuda (  )  . get (  )  ;          break ;      case HIP_CPP_OUTPUT:         if  ( !cxx Platform . get Hip (  )  . is Present (  )  )  {             throw new  Human Readable Exception ( ""%s: no hip compiler set"", cxx Platform . get Flavor (  )  )  ;          }         compiler = cxx Platform . get Hip (  )  . get (  )  ;          break ;      case ASM:         if  ( !cxx Platform . get Asm (  )  . is Present (  )  )  {             throw new  Human Readable Exception ( ""%s: no asm compiler set"", cxx Platform . get Flavor (  )  )  ;          }         compiler = cxx Platform . get Asm (  )  . get (  )  ;          break ;      // $CASES-OMITTED$     default:         throw new  Illegal State Exception (  String . format ( ""unexpected type: %s"", type )  )  ;  } return compiler ; }"
8112,protected  Observable<VS> get View State Observable (  ) { return view State Behavior Subject ; }
8113,protected final boolean is Extended Flag ( int flag ) { return  ( flags &  ( flag << EXT_SHIFT )  )  != 0 ; }
8114,"public com . anychart . core . polar . series .  Continuous Base select (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ;  return this ; }"
8115,"private static  Charset get Console Encoding (  ) { // IMPLEMENTATION NOTE:  There is no public API for obtaining the console's character // encoding .   We thus cheat by using implementation details of the most popular JV Ms .   String console Charset Name ;  try {      Method encoding Method =  Console . class . get Declared Method ( ""encoding"" )  ;      encoding Method . set Accessible ( true )  ;      console Charset Name =  (  String )  encoding Method . invoke ( null )  ;      if  ( console Charset Name == null )  {         return  Charset . default Charset (  )  ;      } } catch  (  Reflective Operation Exception e )  {      Charset default Charset =  Charset . default Charset (  )  ;       System . err . println ( ""warning:  Failed to obtain console character encoding name .   Assuming "" + default Charset )  ;      return default Charset ;  } try {     return  Charset . for Name ( console Charset Name )  ;  } catch  (  Illegal Argument Exception e )  {     // have a mapping for cp65001 .  .  .      if  ( ""cp65001"" . equals ( console Charset Name )  )  {         return  Standard Charsets . UTF_8 ;      }      Charset default Charset =  Charset . default Charset (  )  ;       System . err . println ( ""warning:  Console uses unknown character encoding: "" + console Charset Name + "" .   Using "" + default Charset + "" instead"" )  ;      return default Charset ;  }}"
8116,"public void set Submit Text Size ( @ Int Range ( from = 10, to = 40 )  int submit Text Size ) { this . submit Text Size = submit Text Size ; }"
8117,"private  Map< String,  Patch Bundle Info> to Map (  List< Patch Bundle Info> bundles ) {  Map< String,  Patch Bundle Info> bundle Map = new  Hash Map< String,  Patch Bundle Info> (  )  ;  for  (  Patch Bundle Info bundle : bundles )  {     bundle Map . put ( bundle . get Artifact Id (  ) , bundle )  ;  } return bundle Map ; }"
8118,public  Test String Overloads View Model_ title ( @ Nullable  List< Char Sequence> title ) { assigned Attributes_epoxy Generated Model . set ( 1 )  ;  assigned Attributes_epoxy Generated Model . clear ( 0 )  ;  this . title_ String Attribute Data = new  String Attribute Data (  )  ;  on Mutation (  )  ;  this . title_ List = title ;  return this ; }
8119,"public static  Typeface roboto Medium Italic (  Context context ) { return  Font Source Processor . process ( R . raw . roboto_mediumitalic, context )  ; }"
8120,"public com . anychart . graphics . vector .  Image image (  String src,  Number x,  Number y,  Number width,  Number height ) { return new com . anychart . graphics . vector .  Image (  String . format (  Locale . US, js Base + "" . image ( %s, %s, %s, %s, %s ) "", wrap Quotes ( src ) , x, y, width, height )  )  ; }"
8121,public final boolean has Descriptor ( final  String name ) { return !get Descriptors By Name ( name )  . is Empty (  )  ; }
8122,public void align To Four Bytes (  ) { data . position (  ( data . position (  )  + 3 )  & ~3 )  ; }
8123,"public void to Svg (  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Svg ( %s, %s )  ; "", width, height )  )  ; }"
8124,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
8125,"public static void show Hide ( final int show Index, @ Non Null final  Fragment .  .  .  fragments ) { show Hide ( fragments [ show Index ] , fragments )  ; }"
8126,"public com . anychart . core . annotations .  Fibonacci Fan bounds (  Number x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
8127,"public static  String join (  String separator, byte .  .  .  array ) { check Not Null ( separator )  ;  if  ( array . length == 0 )  {     return """" ;  } //  For pre-sizing a builder, just get the right order of magnitude  String Builder builder = new  String Builder ( array . length *  ( 3 + separator . length (  )  )  )  ;  builder . append ( to Int ( array [ 0 ]  )  )  ;  for  ( int i = 1 ;  i < array . length ;  i++ )  {     builder . append ( separator )  . append ( to String ( array [ i ]  )  )  ;  } return builder . to String (  )  ; }"
8128,"public synchronized void set Preview Display ( final  Surface Holder holder ) { native Set Preview Display ( m Native Ptr, holder . get Surface (  )  )  ; }"
8129,"public com . anychart . core . stock . scrollerseries . OHLC bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
8130,"public void set User Properties ( final JSON Object user Properties ) { if  ( user Properties == null || user Properties . length (  )  == 0 || !context And Api Key Set ( ""set User Properties"" )  )  {     return ;  } // sanitize and truncate properties before trying to convert to identify JSON Object sanitized = truncate ( user Properties )  ;  if  ( sanitized . length (  )  == 0 )  {     return ;  }  Identify identify = new  Identify (  )  ;   Iterator<?> keys = sanitized . keys (  )  ;  while  ( keys . has Next (  )  )  {      String key =  (  String )  keys . next (  )  ;      try {         identify . set User Property ( key, sanitized . get ( key )  )  ;      } catch  ( JSON Exception e )  {         logger . e ( TAG, e . to String (  )  )  ;      } } identify ( identify )  ; }"
8131,"public void test Evict LF Uand Not MFU Keys (  ) { //  Cache has 4 entries ;  2 for LFU and 2 for MFU // key is considered as MFU, if its access Count > 1 m Cache = create Dummy Adaptive Counting Memory Cache ( m Params Supplier, m Cache Trim Strategy, m Value Descriptor, 100, 1, 2, initial LFU Cache Fraction Promil )  ;  // insert item1 to MFU  Closeable Reference< Integer> original Ref1 = new Reference ( 10 )  ;   Closeable Reference< Integer> value Ref1a = m Cache . cache ( KEYS [ 1 ] , original Ref1 )  ;   Closeable Reference< Integer> value Ref1b = m Cache . get ( KEYS [ 1 ]  )  ;  original Ref1 . close (  )  ;  value Ref1a . close (  )  ;  // item1 is in the MFU cache value Ref1b . close (  )  ;  assert MFU Exclusively Owned ( KEYS [ 1 ] , 10 )  ;  // insert item2 to LFU  Closeable Reference< Integer> original Ref2 = new Reference ( 20 )  ;   Closeable Reference< Integer> value Ref2a = m Cache . cache ( KEYS [ 2 ] , original Ref2 )  ;  original Ref2 . close (  )  ;  value Ref2a . close (  )  ;  // insert item3 to LFU  Closeable Reference< Integer> original Ref3 = new Reference ( 30 )  ;   Closeable Reference< Integer> value Ref3a = m Cache . cache ( KEYS [ 3 ] , original Ref3 )  ;  original Ref3 . close (  )  ;  value Ref3a . close (  )  ;  assert MFU Exclusively Owned ( KEYS [ 1 ] , 10 )  ;  assert LFU Exclusively Owned ( KEYS [ 2 ] , 20 )  ;  assert LFU Exclusively Owned ( KEYS [ 3 ] , 30 )  ;  // insert item4 to LFU, the cache should evict item2  Closeable Reference< Integer> original Ref4 = new Reference ( 40 )  ;   Closeable Reference< Integer> value Ref4a = m Cache . cache ( KEYS [ 4 ] , original Ref4 )  ;  original Ref4 . close (  )  ;  value Ref4a . close (  )  ;  assert MFU Exclusively Owned ( KEYS [ 1 ] , 10 )  ;  assert LFU Exclusively Owned ( KEYS [ 3 ] , 30 )  ;  assert LFU Exclusively Owned ( KEYS [ 4 ] , 40 )  ; }"
8132,"public static  Generic Drawee Hierarchy create Drawee Hierarchy ( final  Context context, final  Config config ) {  Fresco Systrace . begin Section ( "" Drawee Util#create Drawee Hierarchy"" )  ;   Generic Drawee Hierarchy Builder builder = new  Generic Drawee Hierarchy Builder ( context . get Resources (  )  )  . set Fade Duration ( config . fade Duration Ms )  . set Placeholder Image (  Const . PLACEHOLDER )  . set Failure Image (  Const . FAILURE )  . set Actual Image Scale Type (  Scaling Utils .  Scale Type . FIT_CENTER )  ;  apply Scale Type ( builder, config )  ;  if  ( config . use Rounded Corners || config . draw Border )  {     final  Resources res = context . get Resources (  )  ;      final  Rounding Params rounding Params = new  Rounding Params (  )  ;      if  ( config . use Rounded Corners )  {         rounding Params . set Rounding Method (  Rounding Params .  Rounding Method . BITMAP_ONLY )  ;          rounding Params . set Corners Radius ( res . get Dimension Pixel Size ( R . dimen . drawee_corner_radius )  )  ;          rounding Params . set Round As Circle ( config . use Rounded As Circle )  ;      }     if  ( config . draw Border )  {         //noinspection deprecation         rounding Params . set Border Color ( res . get Color ( R . color . color Primary )  )  ;          rounding Params . set Border Width ( res . get Dimension Pixel Size ( R . dimen . drawee_border_width )  )  ;      }     builder . set Rounding Params ( rounding Params )  ;  }  Generic Drawee Hierarchy result = builder . build (  )  ;   Fresco Systrace . end Section (  )  ;  return result ; }"
8133,public static long time Since Millis ( long prev Time ) { return millis (  )  - prev Time ; }
8134,public void set Need Lock Full ( boolean need Load Full ) { this . m Need Lock Full = need Load Full ; }
8135,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings bounds (  Number x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
8136,"public com . anychart . charts .  Sankey margin (  Number [  ]  margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "",  Arrays . to String ( margin )  )  )  ;  return this ; }"
8137,"public com . anychart . core . stock .  Plot parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
8138,public byte [  ]  get Image Data (  ) { return  ( byte [  ]  )  get Object Value (  Data Types . OBJ_PICTURE_DATA )  ; }
8139,"public void test Update Unexpected Remote Vs Force (  )  throws IO Exception{ final  Remote Ref Update rru = new  Remote Ref Update ( db, ""2c349335b7f797072cf729c4f3bb0914ecb6dec9"", ""refs/heads/master"", true, null,  Object Id . from String ( ""0000000000000000000000000000000000000001"" )  )  ;  final  Ref ref = new  Object Id Ref .  Unpeeled (  Ref .  Storage . LOOSE, ""refs/heads/master"",  Object Id . from String ( ""ac7e7e44c1885efb472ad54a78327d66bfc4ecef"" )  )  ;  test One Update Status ( rru, ref,  Status . REJECTED_REMOTE_CHANGED, null )  ; }"
8140,"public void test Aggregation (  )  throws IO Exception{ write Global Attribute File ( ""global Attributes File"", ""* . txt -custom2"" )  ;  write Attributes File ( "" . git/info/attributes"", ""* . txt eol=crlf"" )  ;  write Attributes File ( "" . gitattributes"", ""* . txt custom=root"" )  ;  write Attributes File ( ""level1/ . gitattributes"", ""* . txt text"" )  ;  write Attributes File ( ""level1/level2/ . gitattributes"", ""* . txt -delta"" )  ;  write Trash File ( ""l0 . txt"", """" )  ;  write Trash File ( ""level1/l1 . txt"", """" )  ;  write Trash File ( ""level1/level2/l2 . txt"", """" )  ;  begin Walk (  )  ;  assert Entry ( F, "" . gitattributes"" )  ;  assert Entry ( F, ""l0 . txt"", as Set ( EOL_CRLF, CUSTOM_ROOT, CUSTOM2_UNSET )  )  ;  assert Entry ( D, ""level1"" )  ;  assert Entry ( F, ""level1/ . gitattributes"" )  ;  assert Entry ( F, ""level1/l1 . txt"", as Set ( EOL_CRLF, CUSTOM_ROOT, TEXT_SET, CUSTOM2_UNSET )  )  ;  assert Entry ( D, ""level1/level2"" )  ;  assert Entry ( F, ""level1/level2/ . gitattributes"" )  ;  assert Entry ( F, ""level1/level2/l2 . txt"", as Set ( EOL_CRLF, CUSTOM_ROOT, TEXT_SET, DELTA_UNSET, CUSTOM2_UNSET )  )  ;  end Walk (  )  ; }"
8141,static  List< Node> get Leading Comments ( @ Non Null  Node node To Be Adopted ) { @ Non Null  Immutable List .  Builder< Node> nodes To Adopt = new  Immutable List .  Builder< Node> (  )  ;   Node previous Sibling = node To Be Adopted . get Previous Sibling (  )  ;  while  ( previous Sibling != null &&  ( previous Sibling . get Node Type (  )  ==  Node . COMMENT_NODE || previous Sibling . get Node Type (  )  ==  Node . TEXT_NODE )  )  {     // we really only care about comments .      if  ( previous Sibling . get Node Type (  )  ==  Node . COMMENT_NODE )  {         nodes To Adopt . add ( previous Sibling )  ;      }     previous Sibling = previous Sibling . get Previous Sibling (  )  ;  } return nodes To Adopt . build (  )  . reverse (  )  ; }
8142,private int screen Config2 (  ) { return  (  ( screen Layout2 & 0xff )  << 24 )  |  (  ( color Mode * 0xff )  << 16 )  |  ( screen Config Pad2 & 0xffff )  ; }
8143,"public com . anychart . core . ui .  Center fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
8144,"public static boolean any In Range ( int [  ]  bits, int start, int end ) { int idx = find First ( bits, start )  ;  return  ( idx >= 0 )  &&  ( idx < end )  ; }"
8145,"public long get Time (  Time Unit time Unit ) {  Har Timings timings = get Timings (  )  ;  if  ( timings == null )  {     return -1 ;  } long time Nanos = 0 ;  if  ( timings . get Blocked (  Time Unit . NANOSECONDS )  > 0 )  {     time Nanos += timings . get Blocked (  Time Unit . NANOSECONDS )  ;  } if  ( timings . get Dns (  Time Unit . NANOSECONDS )  > 0 )  {     time Nanos += timings . get Dns (  Time Unit . NANOSECONDS )  ;  } if  ( timings . get Connect (  Time Unit . NANOSECONDS )  > 0 )  {     time Nanos += timings . get Connect (  Time Unit . NANOSECONDS )  ;  } if  ( timings . get Send (  Time Unit . NANOSECONDS )  > 0 )  {     time Nanos += timings . get Send (  Time Unit . NANOSECONDS )  ;  } if  ( timings . get Wait (  Time Unit . NANOSECONDS )  > 0 )  {     time Nanos += timings . get Wait (  Time Unit . NANOSECONDS )  ;  } if  ( timings . get Receive (  Time Unit . NANOSECONDS )  > 0 )  {     time Nanos += timings . get Receive (  Time Unit . NANOSECONDS )  ;  } return time Unit . convert ( time Nanos,  Time Unit . NANOSECONDS )  ; }"
8146,"public  Realm Query<E> not Equal To (  String field Name, @ Nullable  Integer value ) { realm . check If Valid (  )  ;   Field Descriptor fd = schema . get Field Descriptors ( field Name,  Realm Field Type . INTEGER )  ;  if  ( value == null )  {     this . query . is Not Null ( fd . get Column Keys (  ) , fd . get Native Table Pointers (  )  )  ;  } else {     this . query . not Equal To ( fd . get Column Keys (  ) , fd . get Native Table Pointers (  ) , value )  ;  } return this ; }"
8147,"public void handle Manage Children (  React Shadow Node node To Manage, int [  ]  indices To Remove, int [  ]  tags To Remove,  View At Index [  ]  views To Add, int [  ]  tags To Delete ) { if  ( !ENABLED )  {     assert Node Supported Without Optimizer ( node To Manage )  ;      m UI View Operation Queue . enqueue Manage Children ( node To Manage . get React Tag (  ) , indices To Remove, views To Add, tags To Delete )  ;      return ;  } // no longer useful to operate on for  ( int i = 0 ;  i < tags To Remove . length ;  i++ )  {     int tag To Remove = tags To Remove [ i ]  ;      boolean delete = false ;      for  ( int j = 0 ;  j < tags To Delete . length ;  j++ )  {         if  ( tags To Delete [ j ]  == tag To Remove )  {             delete = true ;              break ;          }     }      React Shadow Node node To Remove = m Shadow Node Registry . get Node ( tag To Remove )  ;      remove Node From Parent ( node To Remove, delete )  ;  } for  ( int i = 0 ;  i < views To Add . length ;  i++ )  {      View At Index to Add = views To Add [ i ]  ;       React Shadow Node node To Add = m Shadow Node Registry . get Node ( to Add . m Tag )  ;      add Node To Node ( node To Manage, node To Add, to Add . m Index )  ;  }}"
8148,public  Uri get Last Opened Uri (  ) { return last Opened Uri ; }
8149,"public com . anychart . core . ui .  Paginator container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
8150,public void set Indicator Left Padding ( float _indicator Left Padding ) { m Indicator Left Padding =  Utils . dp To Px ( _indicator Left Padding )  ;  invalidate Graph Overlay (  )  ; }
8151,public float get Multiplier (  ) { return multiplier ; }
8152,"public void on Visibility Changed ( @ Float Range ( from = 0 . 0f, to = 100 . 0f )  float percent Visible Height, @ Float Range ( from = 0 . 0f, to = 100 . 0f )  float percent Visible Width, @ Px int visible Height, @ Px int visible Width, @ Non Null T view ) {}"
8153,public boolean is Gesture Zoom Enabled (  ) { return m Is Gesture Zoom Enabled ; }
8154,"public com . anychart . charts .  Cartesian3d min Point Length (  String length ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Point Length ( %s )  ; "", wrap Quotes ( length )  )  )  ;  return this ; }"
8155,"static  Immutable List< Cxx Preprocessor Input> get Preprocessor Inputs For Building Library Sources (  Cxx Buck Config cxx Buck Config,  Action Graph Builder graph Builder,  Cell Path Resolver cell Roots,  Build Target target,  Common Arg args,  Cxx Platform cxx Platform,  Immutable Set< Build Rule> deps,  Transitive Cxx Preprocessor Input Function transitive Preprocessor Inputs,  Immutable List< Header Symlink Tree> header Symlink Trees,  Project Filesystem project Filesystem ) { return  Cxx Description Enhancer . collect Cxx Preprocessor Input ( target, cxx Platform, graph Builder, deps,  Immutable List Multimap . copy Of (  Multimaps . transform Values (  Cxx Flags . get Language Flags With Macros ( args . get Preprocessor Flags (  ) , args . get Platform Preprocessor Flags (  ) , args . get Lang Preprocessor Flags (  ) , args . get Lang Platform Preprocessor Flags (  ) , cxx Platform ) ,  Cxx Description Enhancer . get String With Macros Args Converter ( target, cell Roots, graph Builder, cxx Platform ) ::convert )  ) , header Symlink Trees,  Immutable Set . of (  ) ,  Rich Stream . from ( transitive Preprocessor Inputs . apply ( target, graph Builder, cxx Platform, deps, //  Also add private deps if we are _not_ reexporting all deps .  args . is Reexport All Header Dependencies (  )  . or Else ( cxx Buck Config . get Default Reexport All Header Dependencies (  )  )  ?  Cxx Deps . EMPTY_INSTANCE : args . get Private Cxx Deps (  )  )  )  . to Once Iterable (  ) , args . get Raw Headers (  ) , args . get Include Directories (  ) , project Filesystem )  ; }"
8156,public final double sum (  ) { return mean * count ; }
8157,public void set Text Style (  Paint .  Style style ) { this . m Text Style = style ; }
8158,"public com . anychart . math .  Rect get Pixel Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . get Pixel Bounds (  ) "" )  ; }"
8159,"public final boolean is Device Charging (  ) {  Intent battery Status = get Battery Status Intent (  )  ;  int status = battery Status . get Int Extra (  Battery Manager . EXTRA_STATUS, -1 )  ;  return status ==  Battery Manager . BATTERY_STATUS_CHARGING || status ==  Battery Manager . BATTERY_STATUS_FULL ; }"
8160,"public void print ( char [  ]  char Array ) { synchronized  ( lock )  {     try {         append Locked ( char Array, 0, char Array . length )  ;      } catch  ( IO Exception e )  {     } }}"
8161,"public  Realm Result Task< Document T> find One And Delete ( final  Bson filter, final  Find One And Modify Options options ) { return new  Realm Result Task Impl<> ( thread Pool Executor, new  Realm Result Task Impl .  Executor< Document T> (  )  {     @ Nullable     @ Override     public  Document T run (  )  {         return os Mongo Collection . find One And Delete ( filter, options )  ;      } } )  ; }"
8162,public  Type Name base Class Name (  ) { return  Type Name . get ( base Element (  )  . as Type (  )  )  ; }
8163,"public static  Big Integer decode Integer ( byte [  ]  p Array ) { return new  Big Integer ( 1, decode Base64 ( p Array )  )  ; }"
8164,public  Builder set Default Action (  Share Messenger Action Button default Action ) { this . default Action = default Action ;  return this ; }
8165,"public com . anychart . core . stock . scrollerseries .  Range Step Area hatch Fill ( com . anychart . graphics . vector . hatchfill .  Hatch Fill Type type,  String color,  Number thickness,  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s, %s, %s, %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null, wrap Quotes ( color ) , thickness, size )  )  ;  return this ; }"
8166,"public com . anychart . core . stock . indicators . KDJ kdj ( com . anychart . data .  Table Mapping mapping,  Number k Period,  Number k MA Period,  Number d Period, com . anychart . enums .  Moving Average Type k MA Type,  String d MA Type,  Number k Multiplier,  Number d Multiplier,  String k Series Type, com . anychart . enums .  Stock Series Type d Series Type,  String j Series Type ) { return new com . anychart . core . stock . indicators . KDJ (  String . format (  Locale . US, js Base + "" . kdj ( %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, k Period, k MA Period, d Period,  ( k MA Type != null )  ? k MA Type . get Js Base (  )  : null, wrap Quotes ( d MA Type ) , k Multiplier, d Multiplier, wrap Quotes ( k Series Type ) ,  ( d Series Type != null )  ? d Series Type . get Js Base (  )  : null, wrap Quotes ( j Series Type )  )  )  ; }"
8167,public  Barcode Format get Barcode Format (  ) { return m Result . get Barcode Format (  )  ; }
8168,"static  Virtual File include (  Psi File file ) { final  Virtual File vf = get Virtual File ( file )  ;  vf . put User Data ( KEY, true )  ;  return vf ; }"
8169,"public static T check Not Null ( @ Nullable T reference, @ Nullable  Object error Message ) { if  ( reference == null )  {     throw new  Null Pointer Exception (  String . value Of ( error Message )  )  ;  } return reference ; }"
8170,public boolean is Index Ready (  ) { return m Index Ready || !m Index Populate At Startup Enabled ; }
8171,public boolean is Process External Entities (  ) { return this . process External Entities ; }
8172,"public com . anychart . core . annotations .  Trend Channel stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8173,public com . google . protobuf .  Byte String get Resource Name Bytes (  ) { java . lang .  Object ref = resource Name_ ;  if  ( ref instanceof java . lang .  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      resource Name_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
8174,"public static  Future Combiner<V> when All Complete (  Listenable Future<? extends V> .  .  .  futures ) { return new  Future Combiner<V> ( false,  Immutable List . copy Of ( futures )  )  ; }"
8175,"public int next (  ) { int next Pos = index ;  char c = desc . char At ( next Pos )  ;  if  ( c == ' ( ' )  {     ++index ;      c = desc . char At ( ++next Pos )  ;      param = true ;  } if  ( c == ' ) ' )  {     ++index ;      c = desc . char At ( ++next Pos )  ;      param = false ;  } while  ( c == ' [ ' )  c = desc . char At ( ++next Pos )  ;  if  ( c == 'L' )  {     next Pos = desc . index Of ( ' ; ', next Pos )  + 1 ;      if  ( next Pos <= 0 )          throw new  Index Out Of Bounds Exception ( ""bad descriptor"" )  ;  } else     ++next Pos ;  cur Pos = index ;  index = next Pos ;  return cur Pos ; }"
8176,"public  Immersion Bar bar Color ( @ Color Res int bar Color, @ Color Res int bar Color Transform, @ Float Range ( from = 0f, to = 1f )  float bar Alpha ) { return this . bar Color Int (  Context Compat . get Color ( m Activity, bar Color ) ,  Context Compat . get Color ( m Activity, bar Color Transform ) , bar Alpha )  ; }"
8177,"public com . anychart . scales .  Scatter Ticks count (  Number count ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . count ( %s )  ; "", count )  )  ;  return this ; }"
8178,"public void set Bottom View Ids ( int left Id, int right Id, int top Id, int bottom Id ) { add Drag (  Drag Edge .  Left, find View By Id ( left Id )  )  ;  add Drag (  Drag Edge .  Right, find View By Id ( right Id )  )  ;  add Drag (  Drag Edge .  Top, find View By Id ( top Id )  )  ;  add Drag (  Drag Edge .  Bottom, find View By Id ( bottom Id )  )  ; }"
8179,public void set Walk (  Rev Walk walk ) { this . walk = walk ; }
8180,"protected void show Light Error (  String msg ) { if  ( get Activity (  )  != null )  {      Toast . make Text ( get Activity (  ) , msg,  Toast . LENGTH_SHORT )  . show (  )  ;  }}"
8181,"public com . anychart . standalones .  Project Timeline background Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
8182,"public void set Volume ( float volume ) { if  ( volume < 0 )      throw new  Illegal Argument Exception ( ""volume cannot be < 0: "" + volume )  ;  this . volume = volume ;  if  ( audio . no Device )      return ;  if  ( source ID != -1 )      al Sourcef ( source ID, AL_GAIN, volume )  ; }"
8183,boolean static Member (  ) { return static Member ; }
8184,public  String get Type (  ) { return get Geometry Type (  )  ; }
8185,"protected  View Group Mvp Delegate<V, P> get Mvp Delegate (  ) { if  ( mvp Delegate == null )  {     mvp Delegate = new  View Group Mvp Delegate Impl<> ( this, this, true )  ;  } return mvp Delegate ; }"
8186,"boolean path Dependent Present In (  Path path,  Set< Abs Path> build Files ) { return ! Collections . disjoint ( build File Dependents . get ( cell Root . resolve ( path )  ) , build Files )  ; }"
8187,private static int get Screen Rotation (  Context context ) {  Window Manager w =  (  Window Manager )  context . get System Service (  Context . WINDOW_SERVICE )  ;  if  ( w == null )  {     return  Surface . ROTATION_0 ;  }  Display display = w . get Default Display (  )  ;  if  ( display == null )  {     return  Surface . ROTATION_0 ;  } return display . get Rotation (  )  ; }
8188,"public com . anychart . core .  State Settings normal (  ) { return new com . anychart . core .  State Settings ( js Base + "" . normal (  ) "" )  ; }"
8189,"void unlock Focus (  ) { m Preview Request Builder . set (  Capture Request . CONTROL_AF_TRIGGER,  Capture Request . CONTROL_AF_TRIGGER_CANCEL )  ;  try {     m Capture Session . capture ( m Preview Request Builder . build (  ) , m Capture Callback, null )  ;      update Auto Focus (  )  ;      update Flash (  )  ;      m Preview Request Builder . set (  Capture Request . CONTROL_AF_TRIGGER,  Capture Request . CONTROL_AF_TRIGGER_IDLE )  ;      m Capture Session . set Repeating Request ( m Preview Request Builder . build (  ) , m Capture Callback, null )  ;      m Capture Callback . set State (  Picture Capture Callback . STATE_PREVIEW )  ;  } catch  (  Camera Access Exception e )  {      Log . e ( TAG, "" Failed to restart camera preview . "", e )  ;  }}"
8190,"private  Set Multimap< Method Tree,  Symbol> check Constructor Initialization (  Field Init Entities entities,  Visitor State state ) {  Set Multimap< Method Tree,  Symbol> result =  Linked Hash Multimap . create (  )  ;   Set< Symbol> nonnull Instance Fields = entities . nonnull Instance Fields (  )  ;   Trees trees = get Trees Instance ( state )  ;  boolean is External Init = is External Init ( entities . class Symbol (  )  )  ;  for  (  Method Tree constructor : entities . constructors (  )  )  {     if  ( constructor Invokes Another ( constructor, state )  )  {         continue ;      }     if  ( constructor . get Parameters (  )  . size (  )  == 0 && is External Init )  {         // external framework initializes fields in this case         continue ;      }      Set< Element> guaranteed Non Null = guaranteed Non Null For Constructor ( entities, state, trees, constructor )  ;      for  (  Symbol field Symbol : nonnull Instance Fields )  {         if  ( !guaranteed Non Null . contains ( field Symbol )  )  {             result . put ( constructor, field Symbol )  ;          }     } } return result ; }"
8191,"public com . anychart . core .  Map Point selected (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected ( %s )  ; "", enabled )  )  ;  return this ; }"
8192,"public boolean get Box Geometry ( int index, int [  ]  dimensions ) { return native Get Box Geometry ( m Native Pixa, index, dimensions )  ; }"
8193,"static void notify Framework Listeners ( final int state, final  Bundle bundle, final  Throwable throwable ) { if  ( framework Listeners . is Empty (  )  )  {     return ;  } final  Framework Event event = new  Framework Event ( state )  ;  final  Framework Listener [  ]  listeners = framework Listeners . to Array ( new  Framework Listener [ framework Listeners . size (  )  ]  )  ;  for  ( int i = 0 ;  i < listeners . length ;  i++ )  {     final  Framework Listener listener = listeners [ i ]  ;      listener . framework Event ( event )  ;  }}"
8194,public boolean starts With (  Abbreviated Long Object Id abbr ) { return abbr . prefix Compare ( this )  == 0 ; }
8195,public static boolean is Leeco (  ) { return ROM_LEECO [ 0 ]  . equals ( get Rom Info (  )  . name )  ; }
8196,public static void invalidate All Texture Arrays (  Application app ) {  Array< Texture Array> managed Texture Array = managed Texture Arrays . get ( app )  ;  if  ( managed Texture Array == null )      return ;  for  ( int i = 0 ;  i < managed Texture Array . size ;  i++ )  {      Texture Array texture Array = managed Texture Array . get ( i )  ;      texture Array . reload (  )  ;  }}
8197,"public void skip To End (  ) { if  ( !can Skip To End (  )  )  {     throw new  Unsupported Operation Exception ( "" Spring animations can only come to an end"" + "" when there is damping"" )  ;  } if  ( !get Animation Handler (  )  . is Current Thread (  )  )  {     throw new  Android Runtime Exception ( "" Animations may only be started on the same thread "" + ""as the animation handler"" )  ;  } if  ( m Running )  {     m End Requested = true ;  }}"
8198,"public com . anychart . core . ui .  Label label (  String index ) { return new com . anychart . core . ui .  Label (  String . format (  Locale . US, js Base + "" . label ( %s ) "", wrap Quotes ( index )  )  )  ; }"
8199,"public float get Max Selected Pref Width (  ) {  Pool< Glyph Layout> layout Pool =  Pools . get (  Glyph Layout . class )  ;   Glyph Layout layout = layout Pool . obtain (  )  ;  float width = 0 ;  for  ( int i = 0 ;  i < items . size ;  i++ )  {     layout . set Text ( style . font, to String ( items . get ( i )  )  )  ;      width =  Math . max ( layout . width, width )  ;  }  Drawable bg = style . background ;  if  ( bg != null )      width =  Math . max ( width + bg . get Left Width (  )  + bg . get Right Width (  ) , bg . get Min Width (  )  )  ;  return width ; }"
8200,"public static DB Table<DB Where Compile< Sql Delete Request, DB Argument Compile< Sql Delete Request, DB Compile< Sql Delete Request>>>> sql Delete Request (  ) { return new  Sql Request Compiler ( SQL_DELETE_REQUEST )  ; }"
8201,"void test Interrupt (  ) { assert Timeout ( of Millis ( 5000 ) ,  (  )  -> {     final var ball Thread = new  Ball Thread (  )  ;      final var exception Handler = mock (  Uncaught Exception Handler . class )  ;      ball Thread . set Uncaught Exception Handler ( exception Handler )  ;      ball Thread . set Twin ( mock (  Ball Item . class )  )  ;      ball Thread . start (  )  ;      ball Thread . interrupt (  )  ;      ball Thread . join (  )  ;      verify ( exception Handler )  . uncaught Exception ( eq ( ball Thread ) , any (  Runtime Exception . class )  )  ;      verify No More Interactions ( exception Handler )  ;  } )  ; }"
8202,public void set Programmatic Change Events ( boolean programmatic Change Events ) { this . programmatic Change Events = programmatic Change Events ; }
8203,"public void set Component Async (  Component component ) { if  ( m Component Tree == null )  {     set Component Tree (  Component Tree . create ( get Component Context (  ) , component )  . build (  )  )  ;  } else {     m Component Tree . set Root Async ( component )  ;  }}"
8204,"public boolean page Scroll ( int direction ) { boolean down = direction ==  View . FOCUS_DOWN ;  int height = get Height (  )  ;  if  ( down )  {     m Temp Rect . top = get Scroll Y (  )  + height ;      int count = get Child Count (  )  ;      if  ( count > 0 )  {          View view = get Child At ( count - 1 )  ;          if  ( m Temp Rect . top + height > view . get Bottom (  )  )  {             m Temp Rect . top = view . get Bottom (  )  - height ;          }     } } else {     m Temp Rect . top = get Scroll Y (  )  - height ;      if  ( m Temp Rect . top < 0 )  {         m Temp Rect . top = 0 ;      } } m Temp Rect . bottom = m Temp Rect . top + height ;  return scroll And Focus ( direction, m Temp Rect . top, m Temp Rect . bottom )  ; }"
8205,public static boolean is Application ( @ Nullable  String mime Type ) { return BASE_TYPE_APPLICATION . equals ( get Top Level Type ( mime Type )  )  ; }
8206,boolean contains Constructor With Default Param (  ) { return class Metadata (  )  . constructors (  )  . stream (  )  . flat Map (  constructor -> constructor . parameters (  )  . stream (  )  )  . any Match (  parameter -> parameter . flags ( DECLARES_DEFAULT_VALUE )  )  ; }
8207,"public  Identify post Insert (  String property, JSON Object values ) { add To User Properties (  Constants . AMP_OP_POSTINSERT, property, values )  ;  return this ; }"
8208,"public static void start Activity (  Context context,  Intent intent, int request Code,  Bundle options ) { final  Activity activity = context instanceof  Activity ?  (  Activity )  context : null ;  if  ( activity != null &&  Holo Everywhere . ALWAYS_USE_PARENT_THEME )  {      Theme Manager . clone Theme ( activity . get Intent (  ) , intent, true )  ;  } final int parent Color Scheme =  Theme Manager . get Theme Type ( activity )  ;  if  ( parent Color Scheme != INVALID )  {     intent . put Extra ( _PARENT_SCHEME_TAG, parent Color Scheme )  ;  } if  ( context instanceof  Super Start Activity )  {      (  (  Super Start Activity )  context )  . super Start Activity ( intent, request Code, options )  ;  } else if  ( VERSION . SDK_INT >= 16 )  {     context . start Activity ( intent, options )  ;  } else {     context . start Activity ( intent )  ;  }}"
8209,protected  String get Super Name (  )  throws  Compile Error{ return  Member Resolver . java To Jvm Name (  Member Resolver . get Superclass ( this Class )  . get Name (  )  )  ; }
8210,"public com . anychart . core . annotations .  Trend Channel bounds (  Number x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
8211,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
8212,public  Form Model get Model (  ) { return form Model Fragment . get Model (  )  ; }
8213,public static  String get Application Id (  ) {  Validate . sdk Initialized (  )  ;  return application Id ; }
8214,"public static void put ( @ Non Null final  String key, final long value, @ Non Null final SP Utils sp Utils ) { sp Utils . put ( key, value )  ; }"
8215,"public com . anychart . core . stock . scrollerseries .  Spline Area y Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
8216,public  Push Command set Ref Lease Specs (  Ref Lease Spec .  .  .  specs ) { return set Ref Lease Specs (  Arrays . as List ( specs )  )  ; }
8217,"public void start Angle (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . start Angle (  )  ; "" )  ; }"
8218,"public void start ( @ Non Null  Context context, @ Non Null android . support . v4 . app .  Fragment fragment ) { fragment . start Activity For Result ( get Intent ( context ) , REQUEST_CODE )  ; }"
8219,public void set Name (  String name ) { this . name = name ; }
8220,"public void disable Location (  ) { synchronized  ( _cly )  {     L . i ( "" [  Location ]   Calling 'disable Location'"" )  ;      disable Location Internal (  )  ;  }}"
8221,public  String to Uuid String (  ) { return to Uuid (  )  . to String (  )  ; }
8222,public boolean is Valid (  String card ) { if  ( card == null || card . length (  )  == 0 )  {     return false ;  } for  ( int i = 0 ;  i < card Types . size (  )  ;  i++ )  {      Code Validator type =  (  Code Validator )  card Types . get ( i )  ;      if  ( type . is Valid ( card )  )  {         return true ;      } } return false ; }
8223,"private void write Object (  Object Output Stream stream )  throws IO Exception{ stream . default Write Object (  )  ;  stream . write Object ( value Comparator (  )  )  ;   Serialization . write Multimap ( this, stream )  ; }"
8224,"static  Adapter Method to Adapter (  Object adapter,  Method method ) { method . set Accessible ( true )  ;  final  Type return Type = method . get Generic Return Type (  )  ;  final  Type [  ]  parameter Types = method . get Generic Parameter Types (  )  ;  final  Annotation [  ]  [  ]  parameter Annotations = method . get Parameter Annotations (  )  ;  if  ( parameter Types . length >= 2 && parameter Types [ 0 ]  ==  Json Writer . class && return Type == void . class && parameters Are Json Adapters ( 2, parameter Types )  )  {     // void point To Json (  Json Writer json Writer,  Point point )  {     // void point To Json (  Json Writer json Writer,  Point point,  Json Adapter<?> adapter,  .  .  .  )  {      Set<? extends  Annotation> qualifier Annotations = json Annotations ( parameter Annotations [ 1 ]  )  ;      return new  Adapter Method ( parameter Types [ 1 ] , qualifier Annotations, adapter, method, parameter Types . length, 2, true )  {         @ Override         public void to Json (  Moshi moshi,  Json Writer writer, @ Nullable  Object value )  throws IO Exception,  Invocation Target Exception {             invoke ( writer, value )  ;          }     } ;  } else if  ( parameter Types . length == 1 && return Type != void . class )  {     //  List< Integer> point To Json (  Point point )  {     final  Set<? extends  Annotation> return Type Annotations = json Annotations ( method )  ;      final  Set<? extends  Annotation> qualifier Annotations = json Annotations ( parameter Annotations [ 0 ]  )  ;      boolean nullable =  Util . has Nullable ( parameter Annotations [ 0 ]  )  ;      return new  Adapter Method ( parameter Types [ 0 ] , qualifier Annotations, adapter, method, parameter Types . length, 1, nullable )  {         private  Json Adapter< Object> delegate ;          @ Override         public void bind (  Moshi moshi,  Json Adapter .  Factory factory )  {             super . bind ( moshi, factory )  ;              delegate =  Types . equals ( parameter Types [ 0 ] , return Type )  && qualifier Annotations . equals ( return Type Annotations )  ? moshi . next Adapter ( factory, return Type, return Type Annotations )  : moshi . adapter ( return Type, return Type Annotations )  ;          }         @ Override         public void to Json (  Moshi moshi,  Json Writer writer, @ Nullable  Object value )  throws IO Exception,  Invocation Target Exception {              Object intermediate = invoke ( value )  ;              delegate . to Json ( writer, intermediate )  ;          }     } ;  } else {     throw new  Illegal Argument Exception ( "" Unexpected signature for "" + method + "" . \n"" + ""@ To Json method signatures may have one of the following structures:\n"" + ""    <any access modifier> void to Json (  Json Writer writer, T value )  throws <any> ; \n"" + ""    <any access modifier> void to Json (  Json Writer writer, T value,"" + ""  Json Adapter<any> delegate, <any more delegates> )  throws <any> ; \n"" + ""    <any access modifier> R to Json ( T value )  throws <any> ; \n"" )  ;  }}"
8225,public void set Point Stroke Width ( float stroke Width ) { m Point Stroke Width = stroke Width ; }
8226,"public com . anychart . core . stock . scrollerseries .  Step Line stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8227,public  Builder inlines Enabled ( boolean inlines Enabled ) { this . inlines Enabled = inlines Enabled ;  return this ; }
8228,public float get Joint Speed (  ) { return jni Get Joint Speed ( addr )  ; }
8229,"public com . anychart . core . gantt .  Time Line Header top (  Number top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", top )  )  ;  return this ; }"
8230,"public void set Visible Edges (  Rect component Bounds,  Rect component Visible Bounds ) { if  ( component Bounds . top == component Visible Bounds . top )  {     m Flags |= FLAG_TOP_EDGE_VISIBLE ;  } if  ( component Bounds . bottom == component Visible Bounds . bottom )  {     m Flags |= FLAG_BOTTOM_EDGE_VISIBLE ;  } if  ( component Bounds . left == component Visible Bounds . left )  {     m Flags |= FLAG_LEFT_EDGE_VISIBLE ;  } if  ( component Bounds . right == component Visible Bounds . right )  {     m Flags |= FLAG_RIGHT_EDGE_VISIBLE ;  }}"
8231,"public com . anychart . core . gauge . pointers .  Knob data Index (  Number index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . data Index ( %s )  ; "", index )  )  ;  return this ; }"
8232,"public com . anychart . core . annotations .  Horizontal Line bounds (  String x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
8233,public boolean add All ( @ Non Null final  Collection<? extends T> collection ) { boolean result = m Items . add All ( collection )  ;  notify Data Set Changed (  )  ;  return result ; }
8234,public int get Bits (  ) { return mode Bits ; }
8235,"public com . anychart . core . annotations .  Infinite Line min Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
8236,"public static boolean do Reformat (  Project project,  Document document ) { if  ( !document . is Writable (  )  )  {     LOGGER . warn ( "" Could not reformat because  Document is not writable"" )  ;      return false ;  }  Optional< String> formatted Text = reformat Text ( project, document . get Text (  )  )  ;  formatted Text . if Present (  text ->  Write Action . run (  (  )  -> document . set Text ( text )  )  )  ;  return formatted Text . is Present (  )  ; }"
8237,"private void transform Class Def (  Dex in,  Class Def class Def,  Index Map index Map ) { ids Defs Out . assert Four Byte Aligned (  )  ;  ids Defs Out . write Int ( class Def . get Type Index (  )  )  ;  ids Defs Out . write Int ( class Def . get Access Flags (  )  )  ;  ids Defs Out . write Int ( class Def . get Supertype Index (  )  )  ;  ids Defs Out . write Int ( class Def . get Interfaces Offset (  )  )  ;  int source File Index = index Map . adjust String ( class Def . get Source File Index (  )  )  ;  ids Defs Out . write Int ( source File Index )  ;  int annotations Off = class Def . get Annotations Offset (  )  ;  ids Defs Out . write Int ( index Map . adjust Annotation Directory ( annotations Off )  )  ;  int class Data Off = class Def . get Class Data Offset (  )  ;  if  ( class Data Off == 0 )  {     ids Defs Out . write Int ( 0 )  ;  } else {     ids Defs Out . write Int ( class Data Out . get Position (  )  )  ;       Class Data class Data = in . read Class Data ( class Def )  ;      transform Class Data ( in, class Data, index Map )  ;  } int static Values Off = class Def . get Static Values Offset (  )  ;  ids Defs Out . write Int ( index Map . adjust Static Values ( static Values Off )  )  ; }"
8238,"public  Expression get Dependency Expression (  Binding Request request,  Class Name requesting Class ) { return get Binding Expression ( request )  . get Dependency Expression ( requesting Class )  ; }"
8239,"public void include Point (  Number indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . include Point ( %s )  ; "", indexes )  )  ; }"
8240,"public com . anychart . charts .  Sparkline last Fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . last Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
8241,"public void insert_empty List With Composite Mediator (  ) { final  Realm Configuration config = config Factory . create Configuration Builder (  )  . modules ( new  Human Module (  ) , new  Animal Module (  )  )  . name ( ""composite . realm"" )  . build (  )  ;   Realm . delete Realm ( config )  ;  assert Equals ( config . get Schema Mediator (  )  . get Class (  ) ,  Composite Mediator . class )  ;  final  Realm realm =  Realm . get Instance ( config )  ;  //noinspection  Try Finally Can Be Try With Resources try {     realm . execute Transaction ( new  Realm .  Transaction (  )  {         @ Override         public void execute (  Realm realm )  {             realm . insert (  Collections . < Cat>empty List (  )  )  ;          }     } )  ;      assert Equals ( 0, realm . where (  Cat . class )  . count (  )  )  ;  } finally {     realm . close (  )  ;  }}"
8242,private void set Oval Val Dimmer (  ) { float [  ]  hsv = new float [ 3 ]  ;  hsv [ 0 ]  = m HSV [ 0 ]  ;  hsv [ 1 ]  = 0 ;  hsv [ 2 ]  = m HSV [ 2 ]  ;  int gray =  Color . HSV To Color ( hsv )  ;  m Val Dimmer . set Color ( gray )  ; }
8243,"public com . anychart . core . ui .  Paginator margin (  Number [  ]  space Or Top Or Top And Bottom,  String right Or Right And Left,  String bottom,  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "",  Arrays . to String ( space Or Top Or Top And Bottom ) , wrap Quotes ( right Or Right And Left ) , wrap Quotes ( bottom ) , wrap Quotes ( left )  )  )  ;  return this ; }"
8244,public com . didiglobal . booster . aapt2 . legacy .  Resources Internal Legacy .  Config Description Or Builder get Config Or Builder (  ) { return get Config (  )  ; }
8245,"private void assert Read Test Data (  Format start Format, int first Sample Index, int sample Count, long sample Offset Us ) {  Format format = adjust Format ( start Format, sample Offset Us )  ;  for  ( int i = first Sample Index ;  i < first Sample Index + sample Count ;  i++ )  {     //  Use equals (  )  on the read side despite using referential equality on the write side, since     // sample Queue de-duplicates written formats using equals (  )  .       Format test Sample Format = adjust Format ( SAMPLE_FORMATS [ i ] , sample Offset Us )  ;      if  ( !test Sample Format . equals ( format )  )  {         //  If the format has changed, we should read it .          assert Read Format ( false, test Sample Format )  ;          format = test Sample Format ;      }     //  If we require the format, we should always read it .      assert Read Format ( true, test Sample Format )  ;      //  Assert the sample is as expected .      assert Read Sample ( SAMPLE_TIMESTAMPS [ i ]  + sample Offset Us,  ( SAMPLE_FLAGS [ i ]  & C . BUFFER_FLAG_KEY_FRAME )  != 0, DATA, DATA . length - SAMPLE_OFFSETS [ i ]  - SAMPLE_SIZES [ i ] , SAMPLE_SIZES [ i ]  )  ;  }}"
8246,public  Flexible Item Decoration with Draw Over ( boolean draw Over ) { this . m Draw Over = draw Over ;  return this ; }
8247,public float get Spread (  ) { return spread ; }
8248,public int read Unsigned Int24 (  ) { return  ( data [ position++ ]  & 0x FF )  << 16 |  ( data [ position++ ]  & 0x FF )  << 8 |  ( data [ position++ ]  & 0x FF )  ; }
8249,"public  Default Content Metadata copy With Mutations Applied (  Content Metadata Mutations mutations ) {  Map< String, byte [  ] > mutated Metadata = apply Mutations ( metadata, mutations )  ;  if  ( is Metadata Equal ( metadata, mutated Metadata )  )  {     return this ;  } return new  Default Content Metadata ( mutated Metadata )  ; }"
8250,"private void parse Geo Json (  ) { try {      Geo Json Feature feature ;       String type = m Geo Json File . get String ( ""type"" )  ;      if  ( type . equals ( FEATURE )  )  {         feature = parse Feature ( m Geo Json File )  ;          if  ( feature != null )  {             m Geo Json Features . add ( feature )  ;          }     } else if  ( type . equals ( FEATURE_COLLECTION )  )  {         m Geo Json Features . add All ( parse Feature Collection ( m Geo Json File )  )  ;      } else if  ( is Geometry ( type )  )  {         feature = parse Geometry To Feature ( m Geo Json File )  ;          if  ( feature != null )  {             //  Don't add null features             m Geo Json Features . add ( feature )  ;          }     } else {          Log . w ( LOG_TAG, "" Geo JSON file could not be parsed . "" )  ;      } } catch  ( JSON Exception e )  {      Log . w ( LOG_TAG, "" Geo JSON file could not be parsed . "" )  ;  }}"
8251,"public com . anychart . scales .  Linear Color color Scale (  ) { return new com . anychart . scales .  Linear Color ( js Base + "" . color Scale (  ) "" )  ; }"
8252,synchronized int value Count (  ) { int count = 0 ;   Linked Entry entry = m Head ;  while  ( entry != null )  {     if  ( entry . value != null )  {         count += entry . value . size (  )  ;      }     entry = entry . next ;  } return count ; }
8253,"public final  Optional<E> last (  ) { //  Iterables#get Last was inlined here so we don't have to throw/catch a NSEE // TODO ( kevinb ) :  Support a concurrently modified collection?  Iterable<E> iterable = get Delegate (  )  ;  if  ( iterable instanceof  List )  {      List<E> list =  (  List<E> )  iterable ;      if  ( list . is Empty (  )  )  {         return  Optional . absent (  )  ;      }     return  Optional . of ( list . get ( list . size (  )  - 1 )  )  ;  }  Iterator<E> iterator = iterable . iterator (  )  ;  if  ( !iterator . has Next (  )  )  {     return  Optional . absent (  )  ;  } /*  * TODO ( kevinb ) : consider whether this ""optimization"" is worthwhile .   Users with  Sorted Sets tend  * to know they are  Sorted Sets and probably would not call this method .   */ if  ( iterable instanceof  Sorted Set )  {      Sorted Set<E> sorted Set =  (  Sorted Set<E> )  iterable ;      return  Optional . of ( sorted Set . last (  )  )  ;  } while  ( true )  {     E current = iterator . next (  )  ;      if  ( !iterator . has Next (  )  )  {         return  Optional . of ( current )  ;      } }}"
8254,"public static  List< File> list All Scripts (  File dir ) { if  ( dir == null )  {     dir = new  File (  Interpreter Constants . SCRIPTS_ROOT )  ;  } if  ( dir . exists (  )  )  {      List< File> scripts =  Arrays . as List ( dir . list Files (  )  )  ;       Collections . sort ( scripts, new  Comparator< File> (  )  {         @ Override         public int compare (  File file1,  File file2 )  {             if  ( file1 . is Directory (  )  && !file2 . is Directory (  )  )  {                 return -1 ;              } else if  ( !file1 . is Directory (  )  && file2 . is Directory (  )  )  {                 return 1 ;              }             return file1 . compare To ( file2 )  ;          }     } )  ;      return scripts ;  } return new  Array List< File> (  )  ; }"
8255,"public  Realm Event Stream Task< Document T> watch ( final  Object Id .  .  .  ids ) { return new  Realm Event Stream Task Impl<> ( get Namespace (  )  . get Full Name (  ) , new  Realm Event Stream Task Impl .  Executor< Document T> (  )  {     @ Override     public  Event Stream< Document T> run (  )  throws IO Exception {         return os Mongo Collection . watch (  Arrays . as List ( ids )  )  ;      } } )  ; }"
8256,public float get Float Info ( int index ) {  Float Info i =  (  Float Info )  get Item ( index )  ;  return i . value ; }
8257,public  Register Spec get Result (  ) { return result ; }
8258,"public static void assert Extension Renderer Created (  Class<? extends  Renderer> clazz, int type ) { //  In EXTENSION_RENDERER_MODE_OFF the renderer should not be created .   Renderer [  ]  renderers = create Renderers ( EXTENSION_RENDERER_MODE_OFF )  ;  for  (  Renderer renderer : renderers )  {     assert That ( renderer )  . is Not Instance Of ( clazz )  ;  } //  In EXTENSION_RENDERER_MODE_ON the renderer should be created and last of its type .  renderers = create Renderers ( EXTENSION_RENDERER_MODE_ON )  ;  boolean found = false ;  for  (  Renderer renderer : renderers )  {     if  ( !found )  {         if  ( clazz . is Instance ( renderer )  )  {             found = true ;          }     } else {         assert That ( renderer . get Track Type (  )  )  . is Not Equal To ( type )  ;      } } assert That ( found )  . is True (  )  ;  //  In EXTENSION_RENDERER_MODE_PREFER the renderer should be created and first of its type .  renderers = create Renderers ( EXTENSION_RENDERER_MODE_PREFER )  ;  found = false ;  for  (  Renderer renderer : renderers )  {     if  ( !found )  {         if  ( clazz . is Instance ( renderer )  )  {             found = true ;          } else {             assert That ( renderer . get Track Type (  )  )  . is Not Equal To ( type )  ;          }     } else {         assert That ( renderer )  . is Not Instance Of ( clazz )  ;      } } assert That ( found )  . is True (  )  ; }"
8259,"public  Complete Builder query ( @ Non Null  String query ) { check Not Empty ( query, "" Query is null or empty"" )  ;  this . query = query ;  return this ; }"
8260,"public com . anychart . charts .  Cartesian container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
8261,"public final  Collector Tester<T, A, R> expect Collects ( @ Nullable R expected Result, T .  .  .  inputs ) {  List<T> list =  Arrays . as List ( inputs )  ;  do Expect Collects ( expected Result, list )  ;  if  ( collector . characteristics (  )  . contains (  Collector .  Characteristics . UNORDERED )  )  {      Collections . reverse ( list )  ;      do Expect Collects ( expected Result, list )  ;  } return this ; }"
8262,"public  Content Description get Content Description (  ) { return  (  Content Description )  get First ( GUID . GUID_CONTENTDESCRIPTION,  Content Description . class )  ; }"
8263,"public void resolve Error (  Fragment fragment, final  Graph Response response ) { this . resolve Error ( new  Fragment Wrapper ( fragment ) , response )  ; }"
8264,"public void name (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . name (  )  ; "" )  ; }"
8265,public float get Curr Zoom (  ) { return m Current Zoom ; }
8266,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
8267,"public void test Toggles Removed (  ) {  String html = ""before <span class=\""email-hidden-toggle\""><a href=\""#\"">…</a></span>after<span class=\""email-hidden-toggle\""><a href=\""#\"">…</a></span>"" ;  assert Equals ( ""before after"", format ( html )  )  ; }"
8268,"protected void check Callable (  ) { if  ( !callable . get (  )  )      throw new  Illegal State Exception (  Message Format . format ( J Git Text . get (  )  . command Was Called In The Wrong State, this . get Class (  )  . get Name (  )  )  )  ; }"
8269,"public com . anychart . core . grids .  Map Settings fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
8270,"public boolean click Menu Item ( int menu Item Res Id ) { final  Robo Menu Item item = new  Robo Menu Item ( menu Item Res Id )  ;  return real Activity . on Menu Item Selected (  Window . FEATURE_OPTIONS_PANEL, item )  ; }"
8271,"private  Weighted Listening Executor Service service By Adjusting Default Weights To (  Resource Amounts default Amounts ) { return resource Aware Scheduling Info . adjust Service Default Weights To ( default Amounts, service )  ; }"
8272,"private float pin ( float n, float min, float max ) { if  ( n < min )  {     n = min ;  } else if  ( n > max )  {     n = max ;  } return n ; }"
8273,"public void soft Minimum (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . soft Minimum (  )  ; "" )  ; }"
8274,public int get Max Stack (  ) { return att Code . get Max Stack (  )  ; }
8275,public boolean is Limit Enabled (  ) { return jni Is Limit Enabled ( addr )  ; }
8276,"public  View find View With Tag Or Null (  Object tag ) { return find View With Tag Transversal ( m Litho View, tag )  ; }"
8277,protected void pre Render (  ) { m Geometry . validate Buffers (  )  ; }
8278,"public com . anychart . core . polar . series .  Continuous Base bounds (  Number x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
8279,public void invalidate ( @ Nullable  String path ) { if  ( path != null )  {     invalidate (  Uri . parse ( path )  )  ;  }}
8280,"public void corners Rounding (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . corners Rounding (  )  ; "" )  ; }"
8281,"Class<? extends T> find Plugin (  Class<T> plugin Type ) { return best ( plugin Type, find Plugins ( plugin Type )  )  ; }"
8282,public void set Eye Color ( int color ) { eye Color = color ; }
8283,private  Local Variable Info doit (  ) { //FIXME why is this needed here? if  ( method . get Reg Count (  )  > 0 )  {     for  ( int bi = method . get Entry Block Index (  )  ;  bi >= 0 ;  bi = work Set . next Set Bit ( 0 )  )  {         work Set . clear ( bi )  ;          process Block ( bi )  ;      } } result Info . set Immutable (  )  ;  return result Info ; }
8284,"public com . anychart . core .  State Settings hovered (  ) { return new com . anychart . core .  State Settings ( js Base + "" . hovered (  ) "" )  ; }"
8285,"public static void write PNG (  File Handle file,  Pixmap pixmap ) { write PNG ( file, pixmap,  Deflater . DEFAULT_COMPRESSION, false )  ; }"
8286,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_INITIAL_KEY ; }
8287,"public  Drawable new Drawable (  Drawable drawable, float r, float g, float b, float a ) { return new Drawable ( drawable, new  Color ( r, g, b, a )  )  ; }"
8288,public int get Decimal Digits (  ) { return m Decimal Digits ; }
8289,public  Commit Command commit (  ) { return new  Commit Command ( repo )  ; }
8290,"public void set Value ( @ Nullable  Object value, @ Nullable  String priority, @ Nullable  Completion Listener listener ) { on Disconnect Set Internal ( value,  Priority Utilities . parse Priority ( path, priority ) , listener )  ; }"
8291,private static  Polyline Options create Polyline Options (  Polyline Options original Polyline Option ) {  Polyline Options polyline Options = new  Polyline Options (  )  ;  polyline Options . color ( original Polyline Option . get Color (  )  )  ;  polyline Options . width ( original Polyline Option . get Width (  )  )  ;  polyline Options . clickable ( original Polyline Option . is Clickable (  )  )  ;  return polyline Options ; }
8292,"public com . anychart . standalones .  Resource List even Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . even Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
8293,public static int hash Code ( double value ) { return  (  (  Double )  value )  . hash Code (  )  ; // TODO ( kevinb ) : do it this way when we can  ( GWT problem ) :// long bits =  Double . double To Long Bits ( value )  ; // return  ( int )   ( bits ^  ( bits >>> 32 )  )  ; }
8294,"public  Mesh update Vertices ( int target Offset, float [  ]  source, int source Offset, int count ) { this . vertices . update Vertices ( target Offset, source, source Offset, count )  ;  return this ; }"
8295,public final  String get Formatted Up Time (  ) {  Date Format time Instance =  Simple Date Format . get Time Instance (  )  ;  return time Instance . format (  System Clock . uptime Millis (  )  )  ; }
8296,"public  Async Operation call In Tx (  Callable<?> callable, int flags ) { return enqueue Database Operation (  Operation Type .  Transaction Callable, callable, flags )  ; }"
8297,"public static boolean enable Debugger (  Context context, boolean enable ) { if  (  ( null != context )  && enable )  {      Debugger Receivers debugger Receivers = new  Debugger Receivers (  )  ;      debugger Receivers . register Receivers ( context )  ;  } return true ; }"
8298,"public com . anychart . palettes .  Range Colors palette (  ) { return new com . anychart . palettes .  Range Colors ( js Base + "" . palette (  ) "" )  ; }"
8299,"public static  String decode Info (  String info ) { info = info . replace ( ""/add*/"", ""+"" )  ;  byte [  ]  temp = base64 Decode ( info )  ;  try {     byte [  ]  buf = decrypt ( temp, KEY . get Bytes ( ENCODING )  )  ;      return  String Utils . new String Utf8 ( buf )  ;  } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  } return """" ; }"
8300,public void set Smsc Address (  String smsc Address ) { this . smsc Address = smsc Address ; }
8301,public long count (  ) { return count ; }
8302,"public static  Listenable Future<O> schedule Async (  Async Callable<O> callable, long delay,  Time Unit time Unit,  Scheduled Executor Service executor Service ) {  Trusted Listenable Future Task<O> task =  Trusted Listenable Future Task . create ( callable )  ;  final  Future<?> scheduled = executor Service . schedule ( task, delay, time Unit )  ;  task . add Listener ( new  Runnable (  )  {     @ Override     public void run (  )  {         //  Don't want to interrupt twice         scheduled . cancel ( false )  ;      } }, direct Executor (  )  )  ;  return task ; }"
8303,protected synchronized void insure Initialized ( boolean top Path ) { // inform the listeners we are going to do expensive map if  ( top Path && !maps Initialized )      start Class Mapping (  )  ;  // initialize components if  ( comp Paths != null )      for  ( int i = 0 ;  i < comp Paths . size (  )  ;  i++ )   (  (  Bsh Class Path )  comp Paths . get ( i )  )  . insure Initialized ( false )  ;  // initialize ourself if  ( !maps Initialized )      map (  ( URL [  ]  )  path . to Array ( new URL [ 0 ]  )  )  ;  if  ( top Path && !maps Initialized )      end Class Mapping (  )  ;  maps Initialized = true ; }
8304,"protected synchronized void change System Update ID (  ) {  Long old Update ID = get System Update ID (  )  . get Value (  )  ;  system Update ID . increment ( true )  ;  get Property Change Support (  )  . fire Property Change ( "" System Update ID"", old Update ID, get System Update ID (  )  . get Value (  )  )  ; }"
8305,"public final boolean put (  String key,  Bitmap value ) { if  ( key == null || value == null )  {     throw new  Null Pointer Exception ( ""key == null || value == null"" )  ;  } synchronized  ( this )  {     size += size Of ( key, value )  ;       Bitmap previous = map . put ( key, value )  ;      if  ( previous != null )  {         size -= size Of ( key, previous )  ;      } } trim To Size ( max Size )  ;  return true ; }"
8306,static int calculate Level Of Component In Collections (  Declared Type Spec type Spec ) { int level = 0 ;   Declared Type Spec declared Type Spec = type Spec ;  while  ( declared Type Spec . is Sub Interface (  Class Names . COLLECTION )  )  {      Optional< Declared Type Spec> result = declared Type Spec . get Type Arguments (  )  . stream (  )  . filter (  it -> it != null && it instanceof  Declared Type Spec )  . find First (  )  . map (  it ->  (  Declared Type Spec )  it )  ;      if  ( !result . is Present (  )  )  {         return 0 ;      }     declared Type Spec = result . get (  )  ;      level++ ;  } return declared Type Spec . is Sub Type (  Class Names . COMPONENT )  ? level : 0 ; }
8307,public static int array Dimension (  String desc ) { int dim = 0 ;  while  ( desc . char At ( dim )  == ' [ ' )  ++dim ;  return dim ; }
8308,private boolean get JS Minify Mode (  ) { return m Settings . is JS Minify Enabled (  )  ; }
8309,"public com . anychart . core . stock . indicators . KDJ kdj ( com . anychart . data .  Table Mapping mapping,  Number k Period,  Number k MA Period,  Number d Period,  String k MA Type,  String d MA Type,  Number k Multiplier,  Number d Multiplier,  String k Series Type, com . anychart . enums .  Stock Series Type d Series Type,  String j Series Type ) { return new com . anychart . core . stock . indicators . KDJ (  String . format (  Locale . US, js Base + "" . kdj ( %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, k Period, k MA Period, d Period, wrap Quotes ( k MA Type ) , wrap Quotes ( d MA Type ) , k Multiplier, d Multiplier, wrap Quotes ( k Series Type ) ,  ( d Series Type != null )  ? d Series Type . get Js Base (  )  : null, wrap Quotes ( j Series Type )  )  )  ; }"
8310,protected void change Ad UI State (  ) { if  ( m Jump Ad != null )  {     m Jump Ad . set Visibility (  ( is First Prepared )  ? VISIBLE : GONE )  ;  } if  ( m AD Time != null )  {     m AD Time . set Visibility (  ( is First Prepared )  ? VISIBLE : GONE )  ;  } if  ( m Bottom Container != null )  {     int color =  ( is First Prepared )  ?  Color . TRANSPARENT : get Context (  )  . get Resources (  )  . get Color ( R . color . bottom_container_bg )  ;      m Bottom Container . set Background Color ( color )  ;  } if  ( m Current Time Text View != null )  {     m Current Time Text View . set Visibility (  ( is First Prepared )  ? INVISIBLE : VISIBLE )  ;  } if  ( m Total Time Text View != null )  {     m Total Time Text View . set Visibility (  ( is First Prepared )  ? INVISIBLE : VISIBLE )  ;  } if  ( m Progress Bar != null )  {     m Progress Bar . set Visibility (  ( is First Prepared )  ? INVISIBLE : VISIBLE )  ;      m Progress Bar . set Enabled ( ! ( is First Prepared )  )  ;  }}
8311,K check Key ( @ Nullable K key ) { return key ; }
8312,"public static boolean has Permissions ( @ Non Null  Context context, @ Size ( min = 1 )  @ Non Null  String .  .  .  perms ) { //  Always return true for SDK < M, let the system deal with the permissions if  (  Build . VERSION . SDK_INT <  Build . VERSION_CODES . M )  {      Log . w ( TAG, ""has Permissions: API version < M, returning true by default"" )  ;      // DANGER ZONE!!!  Changing this will break the library .      return true ;  } // to this point with a null context should not be possible .  if  ( context == null )  {     throw new  Illegal Argument Exception ( "" Can't check permissions for null context"" )  ;  } for  (  String perm : perms )  {     if  (  Context Compat . check Self Permission ( context, perm )  !=  Package Manager . PERMISSION_GRANTED )  {         return false ;      } } return true ; }"
8313,"public com . anychart . standalones .  Data Grid bounds (  String x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
8314,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
8315,"public com . anychart . core . cartesian . series .  Line3d bounds (  Number x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
8316,public boolean set Pending (  ) { return set Current Pending Call ( this )  ; }
8317,public  String method Name (  ) {  Const Pool cp = get Const Pool (  )  ;  int mi = method Index (  )  ;  if  ( mi == 0 )      return  Method Info . name Clinit ;  int ni = cp . get Name And Type Name ( mi )  ;  return cp . get Utf8 Info ( ni )  ; }
8318,"private synchronized void notify Progress Listener (  String local Realm Path, long listener Id, long transfered Bytes, long transferable Bytes ) {  Sync Session session = sessions . get ( local Realm Path )  ;  if  ( session != null )  {     try {         session . notify Progress Listener ( listener Id, transfered Bytes, transferable Bytes )  ;      } catch  (  Exception exception )  {          Realm Log . error ( exception )  ;      } }}"
8319,public boolean is Fixed Rotation (  ) { return jni Is Fixed Rotation ( addr )  ; }
8320,"public void test Memory Cache Multiple Context (  )  throws  Authentication Exception{  String file = FILE_DEFAULT_NAME + ""test Get Item"" ;  setup Cache ( file )  ;  I Token Cache Store token Cache A = new  File Token Cache Store ( m Target Contex, file )  ;   Authentication Context context A = new  Authentication Context ( androidx . test . platform . app .  Instrumentation Registry . get Instrumentation (  )  . get Context (  ) , VALID_AUTHORITY, false, token Cache A )  ;   Authentication Context context B = new  Authentication Context ( androidx . test . platform . app .  Instrumentation Registry . get Instrumentation (  )  . get Context (  ) , VALID_AUTHORITY, false, token Cache A )  ;  //  Verify the cache  Token Cache Item item = context A . get Cache (  )  . get Item (  Cache Key . create Cache Key ( m Cache Item )  )  ;  assert Not Null ( "" Token cache item is expected to be NOT null"", item )  ;  item = context A . get Cache (  )  . get Item (  Cache Key . create Cache Key ( m Test Item2 )  )  ;  assert Not Null ( "" Token cache item is expected to be NOT null"", item )  ;  item = context B . get Cache (  )  . get Item (  Cache Key . create Cache Key ( m Test Item2 )  )  ;  assert Not Null ( "" Token cache item is expected to be NOT null"", item )  ;  // do remove operation context A . get Cache (  )  . remove Item (  Cache Key . create Cache Key ( m Cache Item )  )  ;  item = context A . get Cache (  )  . get Item (  Cache Key . create Cache Key ( m Cache Item )  )  ;  assert Null ( "" Token cache item is expected to be null"", item )  ;  item = context B . get Cache (  )  . get Item (  Cache Key . create Cache Key ( m Cache Item )  )  ;  assert Null ( "" Token cache item is expected to be null"", item )  ; }"
8321,public  File Mode get Index Mode (  String path ) { final  Dir Cache Entry entry = dir Cache . get Entry ( path )  ;  return entry != null ? entry . get File Mode (  )  :  File Mode . MISSING ; }
8322,boolean dispatch Back Pressed Event ( I Support Fragment active Fragment ) { if  ( active Fragment != null )  {     boolean result = active Fragment . on Back Pressed Support (  )  ;      if  ( result )  {         return true ;      }      Fragment parent Fragment =  (  (  Fragment )  active Fragment )  . get Parent Fragment (  )  ;      if  ( dispatch Back Pressed Event (  ( I Support Fragment )  parent Fragment )  )  {         return true ;      } } return false ; }
8323,"public com . anychart . core . polar . series .  Range Column stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8324,"public  Task< Void> set Defaults Async ( @ Non Null  Map< String,  Object> defaults ) { //  Fetch values from the server are in the  Map< String,  String> format, so match that here .   Map< String,  String> defaults String Map = new  Hash Map<> (  )  ;  for  (  Map .  Entry< String,  Object> defaults Entry : defaults . entry Set (  )  )  {      Object value = defaults Entry . get Value (  )  ;      if  ( value instanceof byte [  ]  )  {         defaults String Map . put ( defaults Entry . get Key (  ) , new  String (  ( byte [  ]  )  value )  )  ;      } else {         defaults String Map . put ( defaults Entry . get Key (  ) , value . to String (  )  )  ;      } } return set Defaults With Strings Map Async ( defaults String Map )  ; }"
8325,"public  Rev Commit call (  )  throws  Git API Exception{ check Callable (  )  ;   List< String> deleted Files = new  Array List<> (  )  ;   Ref head = get Head (  )  ;  try  (  Object Reader reader = repo . new Object Reader (  )  )  {      Rev Commit head Commit = parse Commit ( reader, head . get Object Id (  )  )  ;       Dir Cache cache = repo . lock Dir Cache (  )  ;       Object Id commit Id ;      try  (  Object Inserter inserter = repo . new Object Inserter (  )  ;           Tree Walk tree Walk = new  Tree Walk ( repo, reader )  )  {         tree Walk . set Recursive ( true )  ;          tree Walk . add Tree ( head Commit . get Tree (  )  )  ;          tree Walk . add Tree ( new  Dir Cache Iterator ( cache )  )  ;          tree Walk . add Tree ( new  File Tree Iterator ( repo )  )  ;          tree Walk . get Tree ( 2,  File Tree Iterator . class )  . set Dir Cache Iterator ( tree Walk, 1 )  ;          tree Walk . set Filter (  And Tree Filter . create ( new  Skip Work Tree Filter ( 1 ) , new  Index Diff Filter ( 1, 2 )  )  )  ;          //  Return null if no local changes to stash         if  ( !tree Walk . next (  )  )              return null ;           Mutable Object Id id = new  Mutable Object Id (  )  ;           List< Path Edit> wt Edits = new  Array List<> (  )  ;           List< String> wt Deletes = new  Array List<> (  )  ;           List< Dir Cache Entry> untracked = new  Array List<> (  )  ;          boolean has Changes = false ;          do {              Abstract Tree Iterator head Iter = tree Walk . get Tree ( 0,  Abstract Tree Iterator . class )  ;               Dir Cache Iterator index Iter = tree Walk . get Tree ( 1,  Dir Cache Iterator . class )  ;               Working Tree Iterator wt Iter = tree Walk . get Tree ( 2,  Working Tree Iterator . class )  ;              if  ( index Iter != null && !index Iter . get Dir Cache Entry (  )  . is Merged (  )  )                  throw new  Unmerged Paths Exception ( new  Unmerged Path Exception ( index Iter . get Dir Cache Entry (  )  )  )  ;              if  ( wt Iter != null )  {                 if  ( index Iter == null && head Iter == null && !include Untracked )                      continue ;                  has Changes = true ;                  if  ( index Iter != null && wt Iter . id Equal ( index Iter )  )                      continue ;                  if  ( head Iter != null && wt Iter . id Equal ( head Iter )  )                      continue ;                  tree Walk . get Object Id ( id, 0 )  ;                  final  Dir Cache Entry entry = new  Dir Cache Entry ( tree Walk . get Raw Path (  )  )  ;                  entry . set Length ( wt Iter . get Entry Length (  )  )  ;                  entry . set Last Modified ( wt Iter . get Entry Last Modified Instant (  )  )  ;                  entry . set File Mode ( wt Iter . get Entry File Mode (  )  )  ;                  long content Length = wt Iter . get Entry Content Length (  )  ;                  try  (  Input Stream in = wt Iter . open Entry Stream (  )  )  {                     entry . set Object Id ( inserter . insert (  Constants . OBJ_BLOB, content Length, in )  )  ;                  }                 if  ( index Iter == null && head Iter == null )                      untracked . add ( entry )  ;                  else                     wt Edits . add ( new  Path Edit ( entry )  {                         @ Override                         public void apply (  Dir Cache Entry ent )  {                             ent . copy Meta Data ( entry )  ;                          }                     } )  ;              }             has Changes = true ;              if  ( wt Iter == null && head Iter != null )                  wt Deletes . add ( tree Walk . get Path String (  )  )  ;          } while  ( tree Walk . next (  )  )  ;          if  ( !has Changes )              return null ;           String branch =  Repository . shorten Ref Name ( head . get Target (  )  . get Name (  )  )  ;          //  Commit index changes          Commit Builder builder = create Builder (  )  ;          builder . set Parent Id ( head Commit )  ;          builder . set Tree Id ( cache . write Tree ( inserter )  )  ;          builder . set Message (  Message Format . format ( index Message, branch, head Commit . abbreviate ( 7 )  . name (  ) , head Commit . get Short Message (  )  )  )  ;           Object Id index Commit = inserter . insert ( builder )  ;          //  Commit untracked changes          Object Id untracked Commit = null ;          if  ( !untracked . is Empty (  )  )  {              Dir Cache untracked Dir Cache =  Dir Cache . new In Core (  )  ;               Dir Cache Builder untracked Builder = untracked Dir Cache . builder (  )  ;              for  (  Dir Cache Entry entry : untracked )  untracked Builder . add ( entry )  ;              untracked Builder . finish (  )  ;              builder . set Parent Ids ( new  Object Id [ 0 ]  )  ;              builder . set Tree Id ( untracked Dir Cache . write Tree ( inserter )  )  ;              builder . set Message (  Message Format . format ( MSG_UNTRACKED, branch, head Commit . abbreviate ( 7 )  . name (  ) , head Commit . get Short Message (  )  )  )  ;              untracked Commit = inserter . insert ( builder )  ;          }         //  Commit working tree changes         if  ( !wt Edits . is Empty (  )  || !wt Deletes . is Empty (  )  )  {              Dir Cache Editor editor = cache . editor (  )  ;              for  (  Path Edit edit : wt Edits )  editor . add ( edit )  ;              for  (  String path : wt Deletes )  editor . add ( new  Delete Path ( path )  )  ;              editor . finish (  )  ;          }         builder . set Parent Id ( head Commit )  ;          builder . add Parent Id ( index Commit )  ;          if  ( untracked Commit != null )              builder . add Parent Id ( untracked Commit )  ;          builder . set Message (  Message Format . format ( working Directory Message, branch, head Commit . abbreviate ( 7 )  . name (  ) , head Commit . get Short Message (  )  )  )  ;          builder . set Tree Id ( cache . write Tree ( inserter )  )  ;          commit Id = inserter . insert ( builder )  ;          inserter . flush (  )  ;          update Stash Ref ( commit Id, builder . get Author (  ) , builder . get Message (  )  )  ;          //  Remove untracked files         if  ( include Untracked )  {             for  (  Dir Cache Entry entry : untracked )  {                  String repo Relative Path = entry . get Path String (  )  ;                   File file = new  File ( repo . get Work Tree (  ) , repo Relative Path )  ;                   File Utils . delete ( file )  ;                  deleted Files . add ( repo Relative Path )  ;              }         }     } finally {         cache . unlock (  )  ;      }     //  Hard reset to HEAD     new  Reset Command ( repo )  . set Mode (  Reset Type . HARD )  . call (  )  ;      //  Return stashed commit     return parse Commit ( reader, commit Id )  ;  } catch  ( IO Exception e )  {     throw new J Git Internal Exception ( J Git Text . get (  )  . stash Failed, e )  ;  } finally {     if  ( !deleted Files . is Empty (  )  )  {         repo . fire Event ( new  Working Tree Modified Event ( null, deleted Files )  )  ;      } }}"
8326,"protected static boolean supports Format Drm ( @ Nullable  Drm Session Manager<?> drm Session Manager, @ Nullable  Drm Init Data drm Init Data ) { if  ( drm Init Data == null )  {     //  Content is unencrypted .      return true ;  } else if  ( drm Session Manager == null )  {     //  Content is encrypted, but no drm session manager is available .      return false ;  } return drm Session Manager . can Acquire Session ( drm Init Data )  ; }"
8327,"private boolean internal Invoke (  Context context,  String method,  Hash Map< String,  Object> parameters, final  String callback Function Id ) { if  ( method . equals ( ""confirm"" )  )  {      String [  ]  btns =  (  String [  ]  )  parameters . get ( ""buttons"" )  ;      final int n Btn = btns . length ;      if  ( n Btn < 1 || n Btn > 3 )          return true ;       Dialog Interface .  On Click Listener on Confirm = new  Dialog Interface .  On Click Listener (  )  {         @ Override         public void on Click (  Dialog Interface arg0, int arg1 )  {             int index ;              //  Map the clicked button index             switch ( n Btn )  {                 default:                 case 1:                     index = 0 ;                      break ;                  case 2:                     if  ( arg1 ==  Dialog Interface . BUTTON_NEGATIVE )  {                         index = 0 ;                      } else {                         index = 1 ;                      }                     break ;                  case 3:                     if  ( arg1 ==  Dialog Interface . BUTTON_NEGATIVE )  {                         index = 0 ;                      } else if  ( arg1 ==  Dialog Interface . BUTTON_NEUTRAL )  {                         index = 1 ;                      } else {                         index = 2 ;                      }                     break ;              }             callback JS ( callback Function Id, index )  ;          }     } ;       Alert Dialog .  Builder builder = new  Alert Dialog .  Builder ( context )  ;      builder . set Title (  (  String )  parameters . get ( ""title"" )  )  ;      builder . set Message (  (  String )  parameters . get ( ""message"" )  )  ;      builder . set Cancelable ( false )  ;      switch ( n Btn )  {         case 1:             builder . set Positive Button ( btns [ 0 ] , on Confirm )  ;              break ;          case 2:             builder . set Negative Button ( btns [ 0 ] , on Confirm )  ;              builder . set Positive Button ( btns [ 1 ] , on Confirm )  ;              break ;          case 3:             builder . set Negative Button ( btns [ 0 ] , on Confirm )  ;              builder . set Neutral Button ( btns [ 1 ] , on Confirm )  ;              builder . set Positive Button ( btns [ 2 ] , on Confirm )  ;              break ;          default:             return true ;      }     final  Alert Dialog .  Builder f Builder = builder ;      post ( new  Runnable (  )  {         @ Override         public void run (  )  {             f Builder . create (  )  . show (  )  ;          }     } )  ;      return true ;  } else if  ( method . equals ( ""alert"" )  )  {     final  Alert Dialog .  Builder f Builder = new  Alert Dialog .  Builder ( context )  . set Title (  (  String )  parameters . get ( ""title"" )  )  . set Message (  (  String )  parameters . get ( ""message"" )  )  . set Positive Button (  (  String )  parameters . get ( ""ok"" ) , new  Dialog Interface .  On Click Listener (  )  {         @ Override         public void on Click (  Dialog Interface dialog Interface, int i )  {             callback JS ( callback Function Id, 0 )  ;          }     } )  ;      post ( new  Runnable (  )  {         @ Override         public void run (  )  {             f Builder . create (  )  . show (  )  ;          }     } )  ;      return true ;  } else if  ( method . equals ( ""hud"" )  )  {      String action =  (  String )  parameters . get ( ""action"" )  ;      if  ( action . equals ( ""show"" )  )  {         if  ( m Progress Dialog != null )  {             m Progress Dialog . dismiss (  )  ;          }         m Progress Dialog = new  Progress Dialog ( context )  ;          m Progress Dialog . set Message (  (  String )  parameters . get ( ""message"" )  )  ;          m Progress Dialog . show (  )  ;      } else if  ( action . equals ( ""hide"" )  )  {         if  ( m Progress Dialog != null )  {              String s Delay =  (  String )  parameters . get ( ""delay"" )  ;              long delay = s Delay != null ?  Integer . parse Int ( s Delay )  * 1000 : 0 ;              post Delayed ( new  Runnable (  )  {                 @ Override                 public void run (  )  {                     m Progress Dialog . dismiss (  )  ;                  }             }, delay )  ;          }     }     return true ;  } else if  ( method . equals ( ""toast"" )  )  {      String s Delay =  (  String )  parameters . get ( ""delay"" )  ;       String message =  (  String )  parameters . get ( ""message"" )  ;      int delay = s Delay != null ?  Integer . parse Int ( s Delay )  : 1 ;      if  ( delay <= 1 )  {          Toast . make Text ( context, message,  Toast . LENGTH_SHORT )  . show (  )  ;      } else {          Toast . make Text ( context, message,  Toast . LENGTH_LONG )  . show (  )  ;      }     return true ;  } return false ; }"
8328,private  Set<X Path Element> new Element Set ( X Path Element element ) {  Set<X Path Element> element Set = new  Hash Set<X Path Element> (  )  ;  element Set . add ( element )  ;  return element Set ; }
8329,public void record Invalidation ( long num ) { total Invalidation Count . add ( num )  ; }
8330,public void on Load Started ( @ Nullable  Drawable placeholder ) {//  Do nothing . }
8331,public  Equals Tester add Equality Group (  Object .  .  .  equality Group ) { check Not Null ( equality Group )  ;  equality Groups . add (  Immutable List . copy Of ( equality Group )  )  ;  return this ; }
8332,"private static boolean range Is Valid (  Basic Block start,  Basic Block end,  Block Addresses addresses ) { if  ( start == null )  {     throw new  Null Pointer Exception ( ""start == null"" )  ;  } if  ( end == null )  {     throw new  Null Pointer Exception ( ""end == null"" )  ;  } //  See above about selection of instructions .  int start Address = addresses . get Last ( start )  . get Address (  )  ;  int end Address = addresses . get End ( end )  . get Address (  )  ;  return  ( end Address - start Address )  <= MAX_CATCH_RANGE ; }"
8333,protected long get Min Duration To Retain After Discard Us (  ) { return min Duration To Retain After Discard Us ; }
8334,public  String get Attribute Name (  ) { return attribute Name ; }
8335,final void notify Scheduled To Start Later (  ) { for  ( int index = m Listeners . size (  )  - 1 ;  index >= 0 ;  index-- )  {     final  Animation Binding Listener listener = m Listeners . get ( index )  ;      listener . on Scheduled To Start Later ( this )  ;  }}
8336,"public com . anychart . core . ui .  Center fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
8337,"public  Model With Private View Click Listener_ on Unbind (  On Model Unbound Listener< Model With Private View Click Listener_,  Object> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
8338,"public static void initialize (  Context context,  Ok Http Client ok Http Client ) { if  ( ok Http Client != null && ok Http Client . cache (  )  == null )  {     ok Http Client = ok Http Client . new Builder (  )  . cache (  Utils . get Cache ( context . get Application Context (  ) , AN Constants . MAX_CACHE_SIZE, AN Constants . CACHE_DIR_NAME )  )  . build (  )  ;  }  Internal Networking . set Client ( ok Http Client )  ;  AN Request Queue . initialize (  )  ;  AN Image Loader . initialize (  )  ; }"
8339,public boolean is Recursive Collapse (  ) { return collapse Sub Levels ; }
8340,"public int as Int (  ) { switch ( this )  {     case NORMAL:         return 0 ;      case ROTATION_90:         return 90 ;      case ROTATION_180:         return 180 ;      case ROTATION_270:         return 270 ;      default:         throw new  Illegal State Exception ( "" Unknown  Rotation!"" )  ;  }}"
8341,"public void align Minimum (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . align Minimum (  )  ; "" )  ; }"
8342,"public  Path set Last Modified Time (  Path path Relative To Project Root,  File Time time )  throws IO Exception{  Path path = get Path For Relative Path ( path Relative To Project Root )  ;  return  Files . set Last Modified Time ( path, time )  ; }"
8343,"public static boolean is Unannotated (  Symbol symbol,  Config config ) {  Symbol .  Class Symbol outermost Class Symbol = get Outermost Class Symbol ( symbol )  ;  return !config . from Annotated Package ( outermost Class Symbol )  || config . is Unannotated Class ( outermost Class Symbol )  ; }"
8344,"public com . anychart . core .  State Settings median Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . median Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8345,"private  Section Using Dynamic Strings get Dynamic Processor (  Elf elf )  throws IO Exception{ return new  Section Using Dynamic Strings (  )  {     //  Load the dynamic section .      private final  Elf Section dynamic Section = elf . get Mandatory Section By Name ( get Path (  ) , DYNAMIC )  . get Section (  )  ;      private final  Elf Dynamic Section dynamic =  Elf Dynamic Section . parse ( elf . header . ei_class, dynamic Section . body )  ;      @ Override     public  Immutable List< Long> get String References (  )  {         return  Rich Stream . from ( dynamic . entries )  . filter (  e -> e . d_tag . get Type (  )  ==  Elf Dynamic Section . D Tag .  Type . STRING )  . map (  e -> e . d_un )  . to Immutable List (  )  ;      }     @ Override     public void process New String References ( long new Size,  Immutable Map< Long,  Long> new String Indices )  {          Elf Dynamic Section new Dynamic = new  Elf Dynamic Section (  Rich Stream . from ( dynamic . entries )  . map (  e -> {             if  ( e . d_tag ==  Elf Dynamic Section . D Tag . DT_STRSZ )  {                 return new  Elf Dynamic Section .  Entry ( e . d_tag, new Size )  ;              } else if  ( e . d_tag . get Type (  )  ==  Elf Dynamic Section . D Tag .  Type . STRING )  {                 return new  Elf Dynamic Section .  Entry ( e . d_tag,  Objects . require Non Null ( new String Indices . get ( e . d_un )  )  )  ;              } else {                 return e ;              }         } )  . to Immutable List (  )  )  ;          dynamic Section . body . rewind (  )  ;          new Dynamic . write ( elf . header . ei_class, dynamic Section . body )  ;      } } ; }"
8346,"protected void on Stream Changed (  Format [  ]  formats, long offset Us )  throws  Exo Playback Exception{//  Do nothing . }"
8347,"public com . anychart . charts .  Gantt bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
8348,"public static  String encrypt SHA224 To String ( final  String data ) { if  ( data == null || data . length (  )  == 0 )      return """" ;  return encrypt SHA224 To String ( data . get Bytes (  )  )  ; }"
8349,public final boolean is Image Loaded (  ) { return image Loaded Sent ; }
8350,"protected void add Directory (  Jar Output Stream jos,  File directory,  String prefix )  throws IO Exception{ if  ( directory != null && directory . exists (  )  )  {      Collection< File> files =  File Utils . list Files ( directory,  True File Filter . INSTANCE,  True File Filter . INSTANCE )  ;      byte [  ]  buf = new byte [ 8064 ]  ;      for  (  File file : files )  {         if  ( file . is Directory (  )  )  {             continue ;          }          String path = prefix + ""/"" +  Path Utils . to Relative ( directory, file . get Absolute Path (  )  )  ;           Input Stream in = null ;          try {             in = new  File Input Stream ( file )  ;               Zip Entry file Entry = new  Zip Entry ( path )  ;              jos . put Next Entry ( file Entry )  ;              //  Transfer bytes from the file to the ZIP file             int len ;              while  (  ( len = in . read ( buf )  )  > 0 )  {                 jos . write ( buf, 0, len )  ;              }             //  Complete the entry             jos . close Entry (  )  ;              in . close (  )  ;          } finally {             IO Utils . close Quietly ( in )  ;          }     } }}"
8351,"private void fit To Bounds ( boolean center,  Scale And Translate scale And Translate ) { if  ( pan Limit == PAN_LIMIT_OUTSIDE && is Image Ready (  )  )  {     center = false ;  }  Point F v Translate = scale And Translate . translate ;  float scale = limited Scale ( scale And Translate . scale )  ;  float scale Width = scale * s Width (  )  ;  float scale Height = scale * s Height (  )  ;  if  ( pan Limit == PAN_LIMIT_CENTER && is Image Ready (  )  )  {     v Translate . x =  Math . max ( v Translate . x, get Width (  )  / 2 - scale Width )  ;      v Translate . y =  Math . max ( v Translate . y, get Height (  )  / 2 - scale Height )  ;  } else if  ( center )  {     v Translate . x =  Math . max ( v Translate . x, get Width (  )  - scale Width )  ;      v Translate . y =  Math . max ( v Translate . y, get Height (  )  - scale Height )  ;  } else {     v Translate . x =  Math . max ( v Translate . x, -scale Width )  ;      v Translate . y =  Math . max ( v Translate . y, -scale Height )  ;  } float max Tx ;  float max Ty ;  if  ( pan Limit == PAN_LIMIT_CENTER && is Image Ready (  )  )  {     max Tx =  Math . max ( 0, get Width (  )  / 2 )  ;      max Ty =  Math . max ( 0, get Height (  )  / 2 )  ;  } else if  ( center )  {     max Tx =  Math . max ( 0,  ( get Width (  )  - scale Width )  / 2 )  ;      max Ty =  Math . max ( 0,  ( get Height (  )  - scale Height )  / 2 )  ;  } else {     max Tx =  Math . max ( 0, get Width (  )  )  ;      max Ty =  Math . max ( 0, get Height (  )  )  ;  } v Translate . x =  Math . min ( v Translate . x, max Tx )  ;  v Translate . y =  Math . min ( v Translate . y, max Ty )  ;  scale And Translate . scale = scale ; }"
8352,"static JSON Object invalid Feature Collection No Features Array (  )  throws JSON Exception{ return new JSON Object ( ""{ \""type\"": \"" Feature Collection\"",\n"" + ""    \""INVALID\"":  [ \n"" + ""      { \""type\"": \"" Feature\"",\n"" + ""        \""geometry\"": {\""type\"": \"" Point\"", \""coordinates\"":  [ 102 . 0,"" + "" 0 . 5 ] },\n"" + ""        \""properties\"": {\""prop0\"": \""value0\""}\n"" + ""        },\n"" + ""      { \""type\"": \"" Feature\"",\n"" + ""        \""geometry\"": {\n"" + ""          \""type\"": \"" Line String\"",\n"" + ""          \""coordinates\"":  [ \n"" + ""             [ 102 . 0, 0 . 0 ] ,  [ 103 . 0, 1 . 0 ] ,  [ 104 . 0, 0 . 0 ] ,  [ 105 . 0, 1 . 0 ] \n"" + ""             ] \n"" + ""          },\n"" + ""        \""properties\"": {\n"" + ""          \""prop0\"": \""value0\"",\n"" + ""          \""prop1\"": 0 . 0\n"" + ""          }\n"" + ""        },\n"" + ""      { \""type\"": \"" Feature\"",\n"" + ""         \""geometry\"": {\n"" + ""           \""type\"": \"" Polygon\"",\n"" + ""           \""coordinates\"":  [ \n"" + ""              [   [ 100 . 0, 0 . 0 ] ,  [ 101 . 0, 0 . 0 ] ,  [ 101 . 0, 1 . 0 ] ,\n"" + ""                [ 100 . 0, 1 . 0 ] ,  [ 100 . 0, 0 . 0 ]   ] \n"" + ""              ] \n"" + ""         },\n"" + ""         \""properties\"": {\n"" + ""           \""prop0\"": \""value0\"",\n"" + ""           \""prop1\"": {\""this\"": \""that\""}\n"" + ""           }\n"" + ""         }\n"" + ""        ] \n"" + ""     }"" )  ; }"
8353,public void on Action Event Started (  Remote Execution Action Event .  Started event ) { has First Remote Action Started . set ( true )  ;  get State Count (  State . WAITING )  . decrement (  )  ;  get State Count ( event . get State (  )  )  . increment (  )  ; }
8354,"public com . anychart . core . cartesian . series .  Continuous Range Base low Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8355,public void set Paint Filter Bitmap ( boolean paint Filter Bitmap ) { if  ( m Paint Filter Bitmap != paint Filter Bitmap )  {     m Paint Filter Bitmap = paint Filter Bitmap ;      invalidate Self (  )  ;  }}
8356,"public static  Scaling Utils .  Scale Type to Scale Type ( @ Nullable  String resize Mode Value ) { if  ( RESIZE_MODE_CONTAIN . equals ( resize Mode Value )  )  {     return  Scaling Utils .  Scale Type . FIT_CENTER ;  } if  ( RESIZE_MODE_COVER . equals ( resize Mode Value )  )  {     return  Scaling Utils .  Scale Type . CENTER_CROP ;  } if  ( RESIZE_MODE_STRETCH . equals ( resize Mode Value )  )  {     return  Scaling Utils .  Scale Type . FIT_XY ;  } if  ( RESIZE_MODE_CENTER . equals ( resize Mode Value )  )  {     return  Scaling Utils .  Scale Type . CENTER_INSIDE ;  } if  ( RESIZE_MODE_REPEAT . equals ( resize Mode Value )  )  {     //  Handled via a combination of  Scale Type and  Tile Mode     return  Scale Type Start Inside . INSTANCE ;  } if  ( resize Mode Value == null )  {     //  Use the default .   Never use null .      return default Value (  )  ;  } throw new JS Application Illegal Argument Exception ( "" Invalid resize mode: '"" + resize Mode Value + ""'"" )  ; }"
8357,public boolean equals ( @ Check For Null  Object object ) { if  ( object == this )  {     return true ;  } if  ( ! ( object instanceof  Immutable Int Array )  )  {     return false ;  }  Immutable Int Array that =  (  Immutable Int Array )  object ;  if  ( this . length (  )  != that . length (  )  )  {     return false ;  } for  ( int i = 0 ;  i < length (  )  ;  i++ )  {     if  ( this . get ( i )  != that . get ( i )  )  {         return false ;      } } return true ; }
8358,"private void read String (  String image String ) { // now read each picture and put in the vector ;   Lyrics3 Image image ;   String token ;  int offset = 0 ;  int delim = image String . index Of (  Lyrics3v2 Fields . CRLF )  ;  images = new  Array List< Lyrics3 Image> (  )  ;  while  ( delim >= 0 )  {     token = image String . substring ( offset, delim )  ;      image = new  Lyrics3 Image ( "" Image"", this )  ;      image . set Filename ( token )  ;      images . add ( image )  ;      offset = delim +  Lyrics3v2 Fields . CRLF . length (  )  ;      delim = image String . index Of (  Lyrics3v2 Fields . CRLF, offset )  ;  } if  ( offset < image String . length (  )  )  {     token = image String . substring ( offset )  ;      image = new  Lyrics3 Image ( "" Image"", this )  ;      image . set Filename ( token )  ;      images . add ( image )  ;  }}"
8359,"public void notify Scanned Device (  Bluetooth Device device,  Bluetooth Adapter .  Le Scan Callback scanner ) { int old Size, new Size ;  old Size = distinct Bluetooth Addresses . size (  )  ;  synchronized  ( distinct Bluetooth Addresses )  {     distinct Bluetooth Addresses . add ( device . get Address (  )  )  ;  } new Size = distinct Bluetooth Addresses . size (  )  ;  if  ( old Size != new Size && new Size % 100 == 0 )  {      Log Manager . d ( TAG, "" Distinct  Bluetooth devices seen: %s"", distinct Bluetooth Addresses . size (  )  )  ;  } if  ( distinct Bluetooth Addresses . size (  )  > get Crash Risk Device Count (  )  )  {     if  ( PREEMPTIVE_ACTION_ENABLED && !recovery In Progress )  {          Log Manager . w ( TAG, "" Large number of  Bluetooth devices detected: %s  Proactively "" + ""attempting to clear out address list to prevent a crash"", distinct Bluetooth Addresses . size (  )  )  ;           Log Manager . w ( TAG, "" Stopping LE  Scan"" )  ;           Bluetooth Adapter . get Default Adapter (  )  . stop Le Scan ( scanner )  ;          start Recovery (  )  ;          process State Change (  )  ;      } }}"
8360,"public  String to Json (  Object src ) { if  ( src == null )  {     return to Json (  Json Null . INSTANCE )  ;  } return to Json ( src, src . get Class (  )  )  ; }"
8361,"public com . anychart . data . tableselectable .  Row Proxy search (  String key,  String mode ) { return new com . anychart . data . tableselectable .  Row Proxy (  String . format (  Locale . US, js Base + "" . search ( %s, %s ) "", wrap Quotes ( key ) , wrap Quotes ( mode )  )  )  ; }"
8362,"public com . anychart . core . axes .  Circular width (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", value )  )  ;  return this ; }"
8363,"public  Immutable Network .  Builder<N1, E1> immutable (  ) {  Network Builder<N1, E1> cast Builder = cast (  )  ;  return new  Immutable Network .  Builder<> ( cast Builder )  ; }"
8364,"public  Realm Query<E> less Than Or Equal To (  String field Name,  Date value ) { realm . check If Valid (  )  ;   Field Descriptor fd = schema . get Field Descriptors ( field Name,  Realm Field Type . DATE )  ;  this . query . less Than Or Equal ( fd . get Column Keys (  ) , fd . get Native Table Pointers (  ) , value )  ;  return this ; }"
8365,"public void get Additional Data (  String additional Data ) { set Object Value (  Data Types . OBJ_ID, additional Data )  ; }"
8366,public  Http Status get Status Code (  ) { return this . status Code ; }
8367,public static void set External Storage State (  String external Storage State ) {  Shadow Environment . external Storage State = external Storage State ; }
8368,public int get Register (  ) { return spec . get Reg (  )  ; }
8369,"public com . anychart . charts .  Gantt container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
8370,"static void install Executor Factory (  Executor Factory instance ) { if  (  Poolable Executors . instance != DEFAULT_INSTANCE )  {     throw new  Illegal State Exception ( "" Trying to install an  Executor Factory twice!"" )  ;  }  Poolable Executors . instance = instance ; }"
8371,protected  Class Loader get Class Loader (  ) { return get Class (  )  . get Class Loader (  )  ; }
8372,public boolean remove Data Set ( int index ) { if  ( index >= m Data Sets . size (  )  || index < 0 )      return false ;  T set = m Data Sets . get ( index )  ;  return remove Data Set ( set )  ; }
8373,"private static boolean add All Impl (  Multiset<E> self,  Multiset<? extends E> elements ) { if  ( elements . is Empty (  )  )  {     return false ;  } elements . for Each Entry ( self::add )  ;  return true ; }"
8374,"public com . anychart . charts .  Linear Gauge margin (  Number value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
8375,"public void test Iterator Regression Childless Uncle (  ) { final  Array List< Integer> initial =  Lists . new Array List ( 1, 15, 13, 8, 9, 10, 11, 14 )  ;   Min Max Priority Queue< Integer> q =  Min Max Priority Queue . create ( initial )  ;  assert Intact ( q )  ;  q . remove ( 9 )  ;  q . remove ( 11 )  ;  q . remove ( 10 )  ;  //  Now we're in the critical state:  [ 1, 15, 13, 8, 14 ]  //  Removing 8 while iterating caused duplicates in iteration result .   List< Integer> result =  Lists . new Array List With Capacity ( initial . size (  )  )  ;  for  (  Iterator< Integer> iter = q . iterator (  )  ;  iter . has Next (  )  ;   )  {      Integer value = iter . next (  )  ;      result . add ( value )  ;      if  ( value == 8 )  {         iter . remove (  )  ;      } } assert Intact ( q )  ;  assert That ( result )  . contains Exactly ( 1, 15, 13, 8, 14 )  ; }"
8376,"public com . anychart . core . ui .  Paginator margin (  String space Or Top Or Top And Bottom,  String right Or Right And Left,  String bottom,  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( space Or Top Or Top And Bottom ) , wrap Quotes ( right Or Right And Left ) , wrap Quotes ( bottom ) , left )  )  ;  return this ; }"
8377,"public static  Intent create Start For Result Intent (  Context context,  Authorization Management Request request,  Intent auth Intent ) { return create Start Intent ( context, request, auth Intent, null, null )  ; }"
8378,"private static  Linked List< Diff> diff_main (  String text1,  String text2, boolean checklines ) { //  Check for null inputs .  if  ( text1 == null || text2 == null )  {     throw new  Illegal Argument Exception ( "" Null inputs .   ( diff_main ) "" )  ;  } //  Check for equality  ( speedup )  .   Linked List< Diff> diffs ;  if  ( text1 . equals ( text2 )  )  {     diffs = new  Linked List< Diff> (  )  ;      if  ( text1 . length (  )  != 0 )  {         diffs . add ( new  Diff (  Operation . EQUAL, text1 )  )  ;      }     return diffs ;  } //  Trim off common prefix  ( speedup )  .  int commonlength = diff_common Prefix ( text1, text2 )  ;   String commonprefix = text1 . substring ( 0, commonlength )  ;  text1 = text1 . substring ( commonlength )  ;  text2 = text2 . substring ( commonlength )  ;  //  Trim off common suffix  ( speedup )  .  commonlength = diff_common Suffix ( text1, text2 )  ;   String commonsuffix = text1 . substring ( text1 . length (  )  - commonlength )  ;  text1 = text1 . substring ( 0, text1 . length (  )  - commonlength )  ;  text2 = text2 . substring ( 0, text2 . length (  )  - commonlength )  ;  //  Compute the diff on the middle block .  diffs = diff_compute ( text1, text2, checklines )  ;  //  Restore the prefix and suffix .  if  ( commonprefix . length (  )  != 0 )  {     diffs . add First ( new  Diff (  Operation . EQUAL, commonprefix )  )  ;  } if  ( commonsuffix . length (  )  != 0 )  {     diffs . add Last ( new  Diff (  Operation . EQUAL, commonsuffix )  )  ;  } diff_cleanup Merge ( diffs )  ;  return diffs ; }"
8379,protected  Cache Object< String> full Remove One (  ) {  Cache Object< String> o = super . full Remove One (  )  ;  if  ( o != null )  {     delete File ( o . get Data (  )  )  ;  } return o ; }
8380,"public com . anychart . core .  Chart padding (  String value1,  String value2,  String value3,  String value4 ) { return new com . anychart . core .  Chart (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s ) "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ; }"
8381,"public com . anychart . charts .  Sparkline label (  String index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , wrap Quotes ( settings )  )  )  ;  return this ; }"
8382,"public void add All (  Int Stream values ) { add All ( values . collect (  Stats Accumulator::new,  Stats Accumulator::add,  Stats Accumulator::add All )  )  ; }"
8383,"public com . anychart . core . annotations .  Fibonacci Retracement trend ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . trend ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8384,public final void experimental_set Track Bitrate Estimator (  Track Bitrate Estimator track Bitrate Estimator ) { this . track Bitrate Estimator = track Bitrate Estimator ; }
8385,"public void test Deserialize Missing Authority (  )  throws  Authentication Exception{ final  String missing Attribute String = ""{\""token Cache Items\"": [ {\""refresh_token\"":\""FRT\"",\""foci\"":\""1\""} ] ,\""version\"":1}"" ;  final  File Mock Context mock Context = new  File Mock Context ( get Instrumentation (  )  . get Context (  )  )  ;  final  Default Token Cache Store mock Cache = new  Default Token Cache Store ( mock Context )  ;  final  Authentication Context context = get Authentication Context ( mock Context, VALID_AUTHORITY, false, mock Cache )  ;  context . deserialize ( missing Attribute String )  ; }"
8386,public  Builder auto Update Notification ( boolean auto Update Notification ) { this . auto Update Notification = auto Update Notification ;  return this ; }
8387,"public  Netscape Cookie File get Entry (  Path path ) { if  ( !cookie File Map . contains Key ( path )  )  {     synchronized  (  Netscape Cookie File Cache . class )  {         if  ( !cookie File Map . contains Key ( path )  )  {             cookie File Map . put ( path, new  Netscape Cookie File ( path )  )  ;          }     } } return cookie File Map . get ( path )  ; }"
8388,public  String get Positive Button Text (  ) { return positive Button Text ; }
8389,"public  Entry_ Relation id Between ( long id A, long id B ) { return where Between ( schema . id, id A, id B )  ; }"
8390,public  Builder footer Resource Id ( @ Layout Res final int footer Resource Id ) { this . footer Resource Id = footer Resource Id ;  return this ; }
8391,private boolean click Player (  Motion Event event ) { if  ( m Btn Bound != null && m Down X >  ( m Btn Bound . left - m Default Margin )  && m Down X <  ( m Btn Bound . right + m Default Margin )  && m Down Y >  ( m Btn Bound . top - m Default Margin )  && m Down Y <  ( m Btn Bound . bottom + m Default Margin )  )  {     float up X = event . get X (  )  ;      float up Y = event . get Y (  )  ;      return up X >  ( m Btn Bound . left - m Default Margin )  && up X <  ( m Btn Bound . right + m Default Margin )  && up Y >  ( m Btn Bound . top - m Default Margin )  && up Y <  ( m Btn Bound . bottom + m Default Margin )  ;  } return false ; }
8392,public  Builder set Product ( java . lang .  String value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } product_ = value ;  on Changed (  )  ;  return this ; }
8393,"public long get And Increment ( K key ) { return get And Add ( key, 1 )  ; }"
8394,public  Factory set Min Loadable Retry Count ( int min Loadable Retry Count ) { return set Load Error Handling Policy ( new  Default Load Error Handling Policy ( min Loadable Retry Count )  )  ; }
8395,"public com . anychart . core . ui .  Crosshair Label adjust Font Size (  Boolean [  ]  both Or By Width,  Boolean by Height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . adjust Font Size ( %s, %s )  ; "", array To String ( both Or By Width ) , by Height )  )  ;  return this ; }"
8396,"protected  Completable remove User (  Path path,  User user ) { return remove Users ( path, user )  ; }"
8397,public void set Min Frame ( int start Frame ) { lottie Drawable . set Min Frame ( start Frame )  ; }
8398,"public void track Conversions_disabled_event Open (  ) {  Intent intent = new  Intent (  )  ;  intent . put Extra ( ANALYTICS_COMPOSER_ID, ""campaign_id"" )  ;  //  Extra: ANALYTICS_TRACK_CONVERSIONS=""1"" NOT set //  Notification opened: NO user-property and NO  Event . FIREBASE_CAMPAIGN is logged  Messaging Analytics . log Notification Open ( intent )  ;  assert That ( analytics Validator . get Logged Event Names (  )  )  . does Not Contain (  Scion Analytics . EVENT_FIREBASE_CAMPAIGN )  ;  assert That ( analytics Validator . get User Properties ( true )  )  . is Empty (  )  ; }"
8399,"public static  Sync Configuration default Config (  User user, @ Nullable  String partition Value ) { return new  Sync Configuration .  Builder ( user, partition Value )  . build (  )  ; }"
8400,"protected  Entry<K, V> [  ]  create Array With Null Value (  ) {  Entry<K, V> [  ]  array = create Samples Array (  )  ;  final int null Value Location = get Null Location (  )  ;  final  Entry<K, V> old Entry = array [ null Value Location ]  ;  array [ null Value Location ]  = entry ( old Entry . get Key (  ) , null )  ;  return array ; }"
8401,"public static void check Argument ( boolean argument,  Object message ) { //  We only throw  Human Readable Exception .   This just helps people migrate without thinking .  //  Also, as these are logically different we're keeping the option to handle them differently .  verify ( argument, message )  ; }"
8402,"public void exclude Point (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . exclude Point ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ; }"
8403,public  Cache get Cache (  ) { return cache ; }
8404,"public void open URL (  String url,  Promise promise ) { if  ( url == null || url . is Empty (  )  )  {     promise . reject ( new JS Application Illegal Argument Exception ( "" Invalid URL: "" + url )  )  ;      return ;  } try {      Activity current Activity = get Current Activity (  )  ;       Intent intent = new  Intent (  Intent . ACTION_VIEW,  Uri . parse ( url )  . normalize Scheme (  )  )  ;       String self Package Name = get React Application Context (  )  . get Package Name (  )  ;       Component Name component Name = intent . resolve Activity ( get React Application Context (  )  . get Package Manager (  )  )  ;       String other Package Name =  ( component Name != null ? component Name . get Package Name (  )  : """" )  ;      // the FLAG_ACTIVITY_NEW_TASK flag     if  ( current Activity == null || !self Package Name . equals ( other Package Name )  )  {         intent . add Flags (  Intent . FLAG_ACTIVITY_NEW_TASK )  ;      }     if  ( current Activity != null )  {         current Activity . start Activity ( intent )  ;      } else {         get React Application Context (  )  . start Activity ( intent )  ;      }     promise . resolve ( true )  ;  } catch  (  Exception e )  {     promise . reject ( new JS Application Illegal Argument Exception ( "" Could not open URL '"" + url + ""': "" + e . get Message (  )  )  )  ;  }}"
8405,public  Builder merge Task Name ( com . facebook . buck . remoteexecution . proto .  Capability Value value ) { if  ( task Name Builder_ == null )  {     if  ( task Name_ != null )  {         task Name_ = com . facebook . buck . remoteexecution . proto .  Capability Value . new Builder ( task Name_ )  . merge From ( value )  . build Partial (  )  ;      } else {         task Name_ = value ;      }     on Changed (  )  ;  } else {     task Name Builder_ . merge From ( value )  ;  } return this ; }
8406,"public static void set System Wide Replacement (  String pkg,  String type,  String name,  Object replacement ) { int id = get System (  )  . get Identifier ( name, type, pkg )  ;  if  ( id == 0 )      throw new  Not Found Exception ( pkg + "":"" + type + ""/"" + name )  ;  set Replacement ( id, replacement, null )  ; }"
8407,public static int get Modifier (  ) { return _THEME_MODIFIER ; }
8408,"public com . anychart . core . gantt . elements .  Periods Element fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
8409,public int get Minutes (  ) { return m Input [ 3 ]  * 10 + m Input [ 2 ]  ; }
8410,"public com . anychart . core . axismarkers .  Line line Marker (  Number index ) { return new com . anychart . core . axismarkers .  Line (  String . format (  Locale . US, js Base + "" . line Marker ( %s ) "", index )  )  ; }"
8411,"public com . anychart . core . stock . scrollerseries .  Step Line bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
8412,"public void dispose (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . dispose (  )  ; "" )  ; }"
8413,"public com . anychart . core . gantt . elements .  Grouping Tasks Element stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8414,"public com . anychart . core . stock . scrollerseries .  Candlestick rising Hatch Fill ( com . anychart . graphics . vector .  Hatch Fill settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rising Hatch Fill ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
8415,"public void add Bluetooth Route (  ) { update Bluetooth Audio Route ( BLUETOOTH_DEVICE_NAME )  ;  if  (  Runtime Environment . get Api Level (  )  <= JELLY_BEAN_MR1 )  {      Reflection Helpers . call Instance Method (  Media Router . class, real Object, ""select Route Int"",  Class Parameter . from ( int . class,  Media Router . ROUTE_TYPE_LIVE_AUDIO ) ,  Class Parameter . from (  Route Info . class, get Bluetooth A2dp Route (  )  )  )  ;  } else {     real Object . select Route (  Media Router . ROUTE_TYPE_LIVE_AUDIO, get Bluetooth A2dp Route (  )  )  ;  }}"
8416,"public  Outlink outlink ( URL url ) { return new  Outlink ( this, url )  ; }"
8417,public  Builder max Number Of Active Versions ( long number ) { this . max Number Of Active Versions = number ;  return this ; }
8418,public int grep (  ) { for  (  Class Def class Def : dex . class Defs (  )  )  {     current Class = class Def ;      current Method = null ;      if  ( class Def . get Class Data Offset (  )  == 0 )  {         continue ;      }      Class Data class Data = dex . read Class Data ( class Def )  ;      // find the strings in encoded constants     int static Values Offset = class Def . get Static Values Offset (  )  ;      if  ( static Values Offset != 0 )  {         read Array ( new  Encoded Value Reader ( dex . open ( static Values Offset )  )  )  ;      }     // find the strings in method bodies     for  (  Class Data .  Method method : class Data . all Methods (  )  )  {         current Method = method ;          if  ( method . get Code Offset (  )  != 0 )  {             code Reader . visit All ( dex . read Code ( method )  . get Instructions (  )  )  ;          }     } } current Class = null ;  current Method = null ;  return count ; }
8419,protected C reset Container ( C new Value ) { container = new Value ;  return container ; }
8420,public  Enum Set< Rev Sort> get Rev Sort (  ) { return sorting . clone (  )  ; }
8421,"public void test Lifecycle_S1_C (  ) {  Data Source< Object> data Source = get And Subscribe (  )  ;   Data Subscriber< Object> subscriber1 = verify Get And Subscribe ( m Data Source Supplier1, m Src1 )  ;   Object val = mock (  Object . class )  ;  set State ( m Src1, NOT_CLOSED, FINISHED, WITH_RESULT, val, NOT_FAILED, null )  ;  subscriber1 . on New Result ( m Src1 )  ;  verify Subscriber ( data Source, m Src1, ON_NEW_RESULT )  ;  verify State ( data Source, m Src1, NOT_CLOSED, FINISHED, WITH_RESULT, val, NOT_FAILED, null )  ;  test Close ( data Source, m Src1 )  ;  verify State ( data Source, null, CLOSED, FINISHED, WITHOUT_RESULT, null, NOT_FAILED, null )  ; }"
8422,public  Test Many Types View Model_ title ( @ Nullable  Char Sequence title ) { on Mutation (  )  ;  title_ String Attribute Data . set Value ( title )  ;  return this ; }
8423,"public static  Constructor [  ]  get Constructors (  Class c ) { java . lang . reflect .  Constructor [  ]  constructors = c . get Constructors (  )  ;   Constructor [  ]  result = new  Constructor [ constructors . length ]  ;  for  ( int i = 0, j = constructors . length ;  i < j ;  i++ )  {     result [ i ]  = new  Constructor ( constructors [ i ]  )  ;  } return result ; }"
8424,"public boolean has Records ( short platform ID, short platform Specific ID ) { for  (  Iterator i = records . key Set (  )  . iterator (  )  ;  i . has Next (  )  ;   )  {      Name Record rec =  (  Name Record )  i . next (  )  ;      if  ( rec . platform ID == platform ID && rec . platform Specific ID == platform Specific ID )  {         return true ;      } } return false ; }"
8425,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
8426,public int get Source Start (  ) { return out Region . source Start ; }
8427,"public  String to Human (  ) {  String Builder sb = new  String Builder (  )  ;  sb . append ( ""  "" + name + "": "" + count + "" item"" +  ( count == 1 ? """" : ""s"" )  + "" ;  "" + total Size + "" bytes total\n"" )  ;  if  ( smallest Size == largest Size )  {     sb . append ( ""    "" + smallest Size + "" bytes/item\n"" )  ;  } else {     int average = total Size / count ;      sb . append ( ""    "" + smallest Size + "" .  . "" + largest Size + "" bytes/item ;  average "" + average + ""\n"" )  ;  } return sb . to String (  )  ; }"
8428,public com . google . protobuf .  Byte String get Rule Name Bytes (  ) { java . lang .  Object ref = rule Name_ ;  if  ( ref instanceof java . lang .  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      rule Name_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
8429,"public  String Builder insert ( int offset, char [  ]  ch ) { insert0 ( offset, ch )  ;  return this ; }"
8430,"public void v Align (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . v Align (  )  ; "" )  ; }"
8431,"public com . anychart . charts .  Heat Map fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
8432,"public void set Field (  Field Key generic Key,  String value )  throws  Key Not Found Exception,  Field Data Invalid Exception{  Tag Field tagfield = create Field ( generic Key, value )  ;  if  ( generic Key ==  Field Key . GENRE )  {     if  ( tagfield . get Id (  )  . equals ( GENRE . get Field Name (  )  )  )  {         this . delete Field (  Mp4 Field Key . GENRE_CUSTOM )  ;      } else if  ( tagfield . get Id (  )  . equals ( GENRE_CUSTOM . get Field Name (  )  )  )  {         this . delete Field (  Mp4 Field Key . GENRE )  ;      } } set Field ( tagfield )  ; }"
8433,"public void get Type (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Type (  )  ; "" )  ; }"
8434,"public void id (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . id (  )  ; "" )  ; }"
8435,"public void close (  Response Listener< Object> listener ) { service . close Launch Session ( this, listener )  ; }"
8436,public static boolean get Enable Realtime (  ) { return enable Realtime ; }
8437,public void set Suffix (  String suffix ) { this . m Suffix = suffix ;  update Text Display (  )  ; }
8438,"protected  Renderer Adapter< Place View Model> provide Places Renderer Adapter (  Layout Inflater layout Inflater,  Places Collection Renderer Builder places Collection Renderer Builder,  Place Collection View Model place Collection View Model ) { return new  Renderer Adapter< Place View Model> ( layout Inflater, places Collection Renderer Builder, place Collection View Model )  ; }"
8439,"private void run (  ) { final  Translation Advice advice =  Optimizer . get Advice (  )  ;  ssa Meth . for Each Insn ( new  Ssa Insn .  Visitor (  )  {     public void visit Move Insn (  Normal Ssa Insn insn )  {     // do nothing     }     public void visit Phi Insn (  Phi Insn insn )  {     // do nothing     }     public void visit Non Move Insn (  Normal Ssa Insn insn )  {          Insn original Rop Insn = insn . get Original Rop Insn (  )  ;           Rop opcode = original Rop Insn . get Opcode (  )  ;           Register Spec List sources = insn . get Sources (  )  ;          //  Replace insns with constant results with const insns         if  ( try Replacing With Constant ( insn )  )              return ;          if  ( sources . size (  )  != 2 )  {             //  We're only dealing with two-source insns here .              return ;          }         if  ( opcode . get Branchingness (  )  ==  Rop . BRANCH_IF )  {             /*                  *  An if instruction can become an if-*z instruction .                   */             if  ( is Const Int Zero Or Known Null ( sources . get ( 0 )  )  )  {                 replace Plain Insn ( insn, sources . without First (  ) ,  Reg Ops . flipped If Opcode ( opcode . get Opcode (  )  ) , null )  ;              } else if  ( is Const Int Zero Or Known Null ( sources . get ( 1 )  )  )  {                 replace Plain Insn ( insn, sources . without Last (  ) , opcode . get Opcode (  ) , null )  ;              }         } else if  ( advice . has Constant Operation ( opcode, sources . get ( 0 ) , sources . get ( 1 )  )  )  {             insn . upgrade To Literal (  )  ;          } else if  ( opcode . is Commutative (  )  && advice . has Constant Operation ( opcode, sources . get ( 1 ) , sources . get ( 0 )  )  )  {             /*                  *  An instruction can be commuted to a literal operation                  */             insn . set New Sources (  Register Spec List . make ( sources . get ( 1 ) , sources . get ( 0 )  )  )  ;              insn . upgrade To Literal (  )  ;          }     } } )  ; }"
8440,public static  Domain Validator get Instance ( boolean allow Local ) { if  ( allow Local )  {     return DOMAIN_VALIDATOR_WITH_LOCAL ;  } return DOMAIN_VALIDATOR ; }
8441,"public  String to Human (  ) {  String name = get Class (  )  . get Name (  )  ;  return to String0 ( name . substring ( name . last Index Of ( ' . ' )  + 1 )  + '{', "", "", ""}"", true )  ; }"
8442,public  Database get Database (  ) { return db ; }
8443,"static  Change Set State generate Change Set (  Section Context section Context, @ Nullable  Section current Root,  Section new Root,  Sections Debug Logger sections Debug Logger,  String section Tree Tag,  String current Prefix,  String next Prefix, boolean enable Stats ) {  Change Set State change Set State = acquire Change Set State (  )  ;  change Set State . m Current Root = current Root ;  change Set State . m New Root = new Root ;  final  Components Logger logger = section Context . get Logger (  )  ;  final  Perf Event log Event =  Sections Log Event Utils . get Sections Performance Event ( section Context, EVENT_SECTIONS_GENERATE_CHANGESET, current Root, new Root )  ;  if  ( current Root != null && new Root != null && !current Root . get Simple Name (  )  . equals ( new Root . get Simple Name (  )  )  )  {      Change Set remove = generate Change Set Recursive ( section Context, current Root, null, change Set State . m Removed Components, sections Debug Logger, section Tree Tag, current Prefix, next Prefix,  Thread . current Thread (  )  . get Name (  ) , enable Stats )  ;       Change Set add = generate Change Set Recursive ( section Context, null, new Root, change Set State . m Removed Components, sections Debug Logger, section Tree Tag, current Prefix, next Prefix,  Thread . current Thread (  )  . get Name (  ) , enable Stats )  ;      change Set State . m Change Set =  Change Set . merge ( remove, add )  ;  } else {     change Set State . m Change Set = generate Change Set Recursive ( section Context, current Root, new Root, change Set State . m Removed Components, sections Debug Logger, section Tree Tag, current Prefix, next Prefix,  Thread . current Thread (  )  . get Name (  ) , enable Stats )  ;  } if  ( logger != null && log Event != null )  {     log Event . marker Annotate ( PARAM_CURRENT_ROOT_COUNT, current Root == null ? -1 : current Root . get Count (  )  )  ;      log Event . marker Annotate ( PARAM_CHANGESET_CHANGE_COUNT, change Set State . m Change Set . get Change Count (  )  )  ;      log Event . marker Annotate ( PARAM_CHANGESET_FINAL_COUNT, change Set State . m Change Set . get Count (  )  )  ;      final  Change Set .  Change Set Stats change Set Stats = change Set State . m Change Set . get Change Set Stats (  )  ;      if  ( change Set Stats != null )  {         log Event . marker Annotate ( PARAM_CHANGESET_EFFECTIVE_COUNT, change Set Stats . get Effective Changes Count (  )  )  ;          log Event . marker Annotate ( PARAM_CHANGESET_INSERT_SINGLE_COUNT, change Set Stats . get Insert Single Count (  )  )  ;          log Event . marker Annotate ( PARAM_CHANGESET_INSERT_RANGE_COUNT, change Set Stats . get Insert Range Count (  )  )  ;          log Event . marker Annotate ( PARAM_CHANGESET_DELETE_SINGLE_COUNT, change Set Stats . get Delete Single Count (  )  )  ;          log Event . marker Annotate ( PARAM_CHANGESET_DELETE_RANGE_COUNT, change Set Stats . get Delete Range Count (  )  )  ;          log Event . marker Annotate ( PARAM_CHANGESET_UPDATE_SINGLE_COUNT, change Set Stats . get Update Single Count (  )  )  ;          log Event . marker Annotate ( PARAM_CHANGESET_UPDATE_RANGE_COUNT, change Set Stats . get Update Range Count (  )  )  ;          log Event . marker Annotate ( PARAM_CHANGESET_MOVE_COUNT, change Set Stats . get Move Count (  )  )  ;      }     logger . log Perf Event ( log Event )  ;  } check Count ( current Root, new Root, change Set State )  ;  return change Set State ; }"
8444,"public  List< Object [  ] > list All (  Criteria criteria ) {  Cursor c = query ( criteria )  ;  return  Cursor Utils . get From Cursor ( c, criteria . get Projection Class (  ) , criteria . get Projection Separators (  )  )  ; }"
8445,"public com . anychart . charts .  Gantt collapse Task (  String task Id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . collapse Task ( %s )  ; "", wrap Quotes ( task Id )  )  )  ;  return this ; }"
8446,"public com . anychart . core .  Visual Base With Bounds bounds (  String x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, height )  )  ;  return this ; }"
8447,public  Spinner get Spinner (  ) { return  (  Spinner )  get View (  )  . find View By Id ( spinner Id )  ; }
8448,public int get Product Identifier (  ) { return product Identifier ; }
8449,"protected static long get Total Completed Time From Event Intervals (  Collection< Event Interval> event Intervals ) { long total Time = 0 L ;  //  Flatten the event groupings into a timeline, so that we don't over count parallel work .   Range Set< Long> timeline =  Tree Range Set . create (  )  ;  for  (  Event Interval pair : event Intervals )  {     if  ( pair . is Complete (  )  && pair . get Elapsed Time Ms (  )  > 0 )  {         timeline . add (  Range . open ( pair . get Start Time (  ) , pair . get End Time (  )  )  )  ;      } } for  (  Range< Long> range : timeline . as Ranges (  )  )  {     total Time += range . upper Endpoint (  )  - range . lower Endpoint (  )  ;  } return total Time ; }"
8450,"public void update Remote Config Except Keys (  String [  ]  keys To Exclude, final  Remote Config .  Remote Config Callback provided Callback ) { L . i ( "" [  Countly ]   Manually calling to update Remote Config with exclude keys"" )  ;  if  ( !is Initialized (  )  )  {     L . e ( "" Countly . shared Instance (  )  . init must be called before update Remote Config Except Keys"" )  ;      return ;  } if  ( provided Callback == null )  {     remote Config (  )  . update Except Keys ( keys To Exclude, null )  ;  } else {     remote Config (  )  . update Except Keys ( keys To Exclude, new  Remote Config Callback (  )  {         @ Override         public void callback (  String error )  {             provided Callback . callback ( error )  ;          }     } )  ;  }}"
8451,"public  Object [  ]  get Available Annotations (  ) { try {     return get Annotations ( true )  ;  } catch  (  Class Not Found Exception e )  {     throw new  Runtime Exception ( "" Unexpected exception"", e )  ;  }}"
8452,"public float get Max Crop Height (  ) { return  Math . min ( m Max Crop Window Height, m Max Crop Result Height / m Scale Factor Height )  ; }"
8453,"public  Collected Outputs collect (  Set< Path> outputs,  Path build Dir )  throws IO Exception{  Immutable List .  Builder< Output File> output Files Builder =  Immutable List . builder (  )  ;   Immutable List .  Builder< Output Directory> output Directories Builder =  Immutable List . builder (  )  ;   Set< Upload Data Supplier> required Data Builder = new  Hash Set<> (  )  ;  for  (  Path output : outputs )  {      Path path = build Dir . resolve ( output )  ;       Preconditions . check State ( delegate . exists ( path ) , "" Required path %s doesn't exist . "", path )  ;      if  ( delegate . is Directory ( path )  )  {          Map< Path,  File Node> files = new  Hash Map<> (  )  ;          try  (  Stream< Path> contents = delegate . walk ( path )  )  {              Rich Stream . from ( contents )  . for Each Throwing (  entry -> {                 if  ( delegate . is Regular File ( entry )  )  {                     files . put ( path . relativize ( entry ) , protocol . new File Node ( protocol . new Digest ( hash File ( entry )  . to String (  ) ,  ( int )  delegate . size ( entry )  ) , entry . get File Name (  )  . to String (  ) , delegate . is Executable ( entry )  )  )  ;                  }             } )  ;          }          Merkle Tree Node Cache merkle Tree Cache = new  Merkle Tree Node Cache ( protocol )  ;           Merkle Tree Node node = merkle Tree Cache . create Node ( files,  Immutable Map . of (  ) ,  Immutable Map . of (  )  )  ;          node . for All Files (  (  file,  file Node )  -> required Data Builder . add (  Upload Data Supplier . of ( file . get File Name (  )  . to String (  ) , file Node . get Digest (  ) ,  (  )  -> delegate . get Input Stream ( path . resolve ( file )  )  )  )  )  ;           List< Directory> directories = new  Array List<> (  )  ;          merkle Tree Cache . for All Data ( node,  data -> directories . add ( data . get Directory (  )  )  )  ;           Preconditions . check State ( !directories . is Empty (  )  )  ;           Tree tree = protocol . new Tree ( directories . get ( 0 ) , directories )  ;          byte [  ]  tree Data = protocol . to Byte Array ( tree )  ;           Digest tree Digest = protocol . compute Digest ( tree Data )  ;          output Directories Builder . add ( protocol . new Output Directory ( output, tree Digest )  )  ;          required Data Builder . add (  Upload Data Supplier . of ( ""tree"", tree Digest,  (  )  -> new  Byte Array Input Stream ( tree Data )  )  )  ;      } else {         long size = delegate . size ( path )  ;          boolean is Executable = delegate . is Executable ( path )  ;           Digest digest = protocol . new Digest ( hash File ( path )  . to String (  ) ,  ( int )  size )  ;           Upload Data Supplier data Supplier =  Upload Data Supplier . of ( path . get File Name (  )  . to String (  ) , digest,  (  )  -> delegate . get Input Stream ( path )  )  ;          output Files Builder . add ( protocol . new Output File ( output, digest, is Executable )  )  ;          required Data Builder . add ( data Supplier )  ;      } } return new  Collected Outputs ( output Files Builder . build (  ) , output Directories Builder . build (  ) ,  Immutable Set . copy Of ( required Data Builder )  )  ; }"
8454,private static  Sorted Set<T> cast (  Iterable<T> iterable ) { return  (  Sorted Set<T> )  iterable ; }
8455,"public void raycast (  Particle Raycast Callback callback, final  Vec2 point1, final  Vec2 point2 ) { if  ( m_proxy Count == 0 )  {     return ;  } int first Proxy = lower Bound ( m_proxy Buffer, m_proxy Count, compute Tag ( m_inverse Diameter *  Math Utils . min ( point1 . x, point2 . x )  - 1, m_inverse Diameter *  Math Utils . min ( point1 . y, point2 . y )  - 1 )  )  ;  int last Proxy = upper Bound ( m_proxy Buffer, m_proxy Count, compute Tag ( m_inverse Diameter *  Math Utils . max ( point1 . x, point2 . x )  + 1, m_inverse Diameter *  Math Utils . max ( point1 . y, point2 . y )  + 1 )  )  ;  float fraction = 1 ;  // solving the following equation: //  (  ( 1-t ) *point1+t*point2-position ) ^2=diameter^2 // where t is a potential fraction final float vx = point2 . x - point1 . x ;  final float vy = point2 . y - point1 . y ;  float v2 = vx * vx + vy * vy ;  if  ( v2 == 0 )      v2 =  Float . MAX_VALUE ;  for  ( int proxy = first Proxy ;  proxy < last Proxy ;  ++proxy )  {     int i = m_proxy Buffer [ proxy ]  . index ;      final  Vec2 pos I = m_position Buffer . data [ i ]  ;      final float px = point1 . x - pos I . x ;      final float py = point1 . y - pos I . y ;      float pv = px * vx + py * vy ;      float p2 = px * px + py * py ;      float determinant = pv * pv - v2 *  ( p2 - m_squared Diameter )  ;      if  ( determinant >= 0 )  {         float sqrt Determinant =  Math Utils . sqrt ( determinant )  ;          // find a solution between 0 and fraction         float t =  ( -pv - sqrt Determinant )  / v2 ;          if  ( t > fraction )  {             continue ;          }         if  ( t < 0 )  {             t =  ( -pv + sqrt Determinant )  / v2 ;              if  ( t < 0 || t > fraction )  {                 continue ;              }         }         final  Vec2 n = temp Vec ;          temp Vec . x = px + t * vx ;          temp Vec . y = py + t * vy ;          n . normalize (  )  ;          final  Vec2 point = temp Vec2 ;          point . x = point1 . x + t * vx ;          point . y = point1 . y + t * vy ;          float f = callback . report Particle ( i, point, n, t )  ;          fraction =  Math Utils . min ( fraction, f )  ;          if  ( fraction <= 0 )  {             break ;          }     } }}"
8456,"public  String read String (  )  throws IO Exception{ int char Count = read Int ( true )  ;  switch ( char Count )  {     case 0:         return null ;      case 1:         return """" ;  } char Count-- ;  if  ( chars . length < char Count )      chars = new char [ char Count ]  ;  char [  ]  chars = this . chars ;  //  Try to read 7 bit ASCII chars .  int char Index = 0 ;  int b = 0 ;  while  ( char Index < char Count )  {     b = read (  )  ;      if  ( b > 127 )          break ;      chars [ char Index++ ]  =  ( char )  b ;  } //  If a char was not ASCII, finish with slow path .  if  ( char Index < char Count )      read Utf8_slow ( char Count, char Index, b )  ;  return new  String ( chars, 0, char Count )  ; }"
8457,"public  Set< Map .  Entry< String,  Object>> value Set (  ) { return m Values . entry Set (  )  ; }"
8458,public  Hash Code Builder append (  Object [  ]  array ) { if  ( array == null )  {     i Total = i Total * i Constant ;  } else {     for  (  Object element : array )  {         append ( element )  ;      } } return this ; }
8459,public  Prop Groups View Model_ one Thing ( long one Thing ) { assigned Attributes_epoxy Generated Model . set ( 10 )  ;  assigned Attributes_epoxy Generated Model . clear ( 11 )  ;  this . another Thing_ Char Sequence = null ;  on Mutation (  )  ;  this . one Thing_ Long = one Thing ;  return this ; }
8460,public  Time Picker Builder set Text Color Center ( @ Color Int int text Color Center ) { m Picker Options . text Color Center = text Color Center ;  return this ; }
8461,"public void set Device Filter ( final  Device Filter filter )  throws  Illegal State Exception{ if  ( destroyed )      throw new  Illegal State Exception ( ""already destroyed"" )  ;  m Device Filters . clear (  )  ;  m Device Filters . add ( filter )  ; }"
8462,public  Service Info [  ]  get Services (  ) { return m Services . values (  )  . to Array ( new  Service Info [ 0 ]  )  ; }
8463,"public void text Overflow (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . text Overflow (  )  ; "" )  ; }"
8464,public boolean is Successful (  ) { if  ( merge Result != null )      return merge Result . get Merge Status (  )  . is Successful (  )  ;  else if  ( rebase Result != null )      return rebase Result . get Status (  )  . is Successful (  )  ;  return true ; }
8465,"public  Moshi Converter Factory fail On Unknown (  ) { return new  Moshi Converter Factory ( moshi, lenient, true, serialize Nulls )  ; }"
8466,public void set Title (  String title ) { m Title = title ; }
8467,public static void set Render Type ( int render Type ) { s Render Type = render Type ; }
8468,"public final  Point F get Center (  ) { int m X = get Width (  )  / 2 ;  int m Y = get Height (  )  / 2 ;  return view To Source Coord ( m X, m Y )  ; }"
8469,protected void on Save Instance State (  Bundle out State ) { super . on Save Instance State ( out State )  ;  save Draggable State ( out State )  ;  save Last Place Loaded Position ( out State )  ; }
8470,"public  Immersion Bar navigation Bar Dark Icon ( boolean is Dark Icon ) { return navigation Bar Dark Icon ( is Dark Icon, 0 . 2f )  ; }"
8471,"Sorted Map Test Suite Builder<K, V> new Builder Using (  Test Sorted Map Generator<K, V> delegate,  Bound to,  Bound from ) { return using ( new  Sorted Map Submap Test Map Generator<K, V> ( delegate, to, from )  )  ; }"
8472,"public void set Drag Edges (  List< Drag Edge> drag Edges ) { clear Drag Edge (  )  ;  for  ( int i = 0, size =  Math . min ( drag Edges . size (  ) , get Child Count (  )  - 1 )  ;  i < size ;  i++ )  {      Drag Edge drag Edge = drag Edges . get ( i )  ;      m Drag Edges . put ( drag Edge, get Child At ( i )  )  ;  } if  ( drag Edges . size (  )  == 0 || drag Edges . contains (  Default Drag Edge )  )  {     set Current Drag Edge (  Default Drag Edge )  ;  } else {     set Current Drag Edge ( drag Edges . get ( 0 )  )  ;  }}"
8473,public long get Total Bytes (  ) { return total Bytes ; }
8474,"public com . anychart . core . resource .  Logo fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
8475,"public void on Request Prepared (  Request<?> request,  Url Request .  Builder request Builder ) {}"
8476,"public com . anychart . charts .  Waterfall x Minor Grid (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Minor Grid ( %s )  ; "", settings )  )  ;  return this ; }"
8477,"public com . anychart . core . annotations .  Fibonacci Base stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8478,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
8479,"public  View get Media Router Button View (  ) { try {      Field action Menu Presenter Field = m Action Bar View Class . get Declared Field ( ""m Options Menu"" )  ;      action Menu Presenter Field . set Accessible ( true )  ;       Object options Menu = action Menu Presenter Field . get ( m Action Bar View )  ;       Field action Items Field = options Menu . get Class (  )  . get Declared Field ( ""m Action Items"" )  ;      action Items Field . set Accessible ( true )  ;       List action Items =  (  Array List )  action Items Field . get ( options Menu )  ;      if  ( null != action Items )  {         for  (  Object obj : action Items )  {              System . out . println ( obj )  ;               Object view = get Media Route Button ( obj )  ;              if  ( null != view )  {                 return  (  View )  view ;              }         }     }     return null ;  } catch  (  Illegal Access Exception e )  {     e . print Stack Trace (  )  ;  } catch  (  No Such Field Exception e )  {     e . print Stack Trace (  )  ;  } return null ; }"
8480,"private void notify Surface Changed ( final int format, final int width, final int height, boolean force Update ) { if  ( !force Update && format == view Format && width == view Width && height == view Height )  {     // skip if didn't changed     if  ( DEBUG )           Log . d ( TAG, "" > surface is current, skipping surface Changed event"" )  ;  } else {     // update engine desired surface format     engine Format = format ;      engine Width = width ;      engine Height = height ;      // update surface view if engine is linked with it already     if  ( linked Engine == this )  {         view Format = engine Format ;          view Width = engine Width ;          view Height = engine Height ;          view . surface Changed ( this . get Surface Holder (  ) , view Format, view Width, view Height )  ;      } else {         if  ( DEBUG )               Log . d ( TAG, "" > engine is not active, skipping surface Changed event"" )  ;      } }}"
8481,"public boolean update Is Required ( @ Non Null final  Bootstrap bootstrap ) { final  Required Update required Update = bootstrap . get Required Update (  )  ;  return required Update != null && version Checker . show Required Update ( required Update, app Version Details )  ; }"
8482,"public static  Class<?> get Map Value Field Type (  Field map Field, int nesting Level ) { return get Generic Field Type ( map Field,  Map . class, 1, null, nesting Level )  ; }"
8483,public QMUI Basic Tab Segment add Tab ( QMUI Tab tab ) { m Tab Adapter . add Item ( tab )  ;  return this ; }
8484,"public void calculate Scissors (  Rectangle local Rect,  Rectangle scissor Rect ) {  Matrix4 transform Matrix ;  if  ( debug Shapes != null && debug Shapes . is Drawing (  )  )      transform Matrix = debug Shapes . get Transform Matrix (  )  ;  else     transform Matrix = batch . get Transform Matrix (  )  ;  viewport . calculate Scissors ( transform Matrix, local Rect, scissor Rect )  ; }"
8485,public void set Packed Git Open Files ( int fd Limit ) { packed Git Open Files = fd Limit ; }
8486,"private static boolean is Optional Parameter (  Method Param Model method Param Model,  Immutable List< Method Param Model> extra Optional Parameters ) { for  (  Method Param Model extra Optional Parameter : extra Optional Parameters )  {     if  ( method Param Model instanceof  Simple Method Param Model && method Param Model . get Type Name (  )  . equals ( extra Optional Parameter . get Type Name (  )  )  && method Param Model . get Annotations (  )  . is Empty (  )  )  {         return true ;      } } return false ; }"
8487,"void on Continuous Glucose Hypo Alert Received ( @ Non Null final  Bluetooth Device device, @ Float Range ( from = 0 )  final float alert Level, final boolean secured ) {// empty}"
8488,"public void reverse (  ) { final  Array List< Animator> animators = m Animated Vector State . m Animators ;  final int size = animators . size (  )  ;  for  ( int i = 0 ;  i < size ;  i++ )  {     final  Animator animator = animators . get ( i )  ;      if  ( can Reverse ( animator )  )  {         reverse ( animator )  ;      } else {          Log . w ( LOG_TAG, "" Animated Vector Drawable can't reverse (  ) "" )  ;      } }}"
8489,"public com . anychart . core . utils .  Stock Interactivity hover Mode ( com . anychart . enums .  Hover Mode mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hover Mode ( %s )  ; "",  ( mode != null )  ? mode . get Js Base (  )  : null )  )  ;  return this ; }"
8490,"private static  Object  String2 Object (  String object String ) { byte [  ]  mobile Bytes =  Base64 . decode ( object String . get Bytes (  ) ,  Base64 . DEFAULT )  ;   Byte Array Input Stream byte Array Input Stream = new  Byte Array Input Stream ( mobile Bytes )  ;   Object Input Stream object Input Stream = null ;  try {     object Input Stream = new  Object Input Stream ( byte Array Input Stream )  ;       Object object = object Input Stream . read Object (  )  ;      object Input Stream . close (  )  ;      return object ;  } catch  (  Exception e )  {     e . print Stack Trace (  )  ;      return null ;  }}"
8491,"public com . anychart . core . gantt . elements .  Tasks Element anchor ( com . anychart . enums .  Anchor anchor ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . anchor ( %s )  ; "",  ( anchor != null )  ? anchor . get Js Base (  )  : null )  )  ;  return this ; }"
8492,"public void get Minimum (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Minimum (  )  ; "" )  ; }"
8493,"public com . anychart . core . stock .  Plot container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
8494,public boolean is Set ( _ Fields field ) { if  ( field == null )  {     throw new java . lang .  Illegal Argument Exception (  )  ;  } switch ( field )  {     case DEBUG_INFO:         return is Set Debug Info (  )  ;  } throw new java . lang .  Illegal State Exception (  )  ; }
8495,"public  Tap Target outer Circle Alpha ( float alpha ) { if  ( alpha < 0 . 0f || alpha > 1 . 0f )  {     throw new  Illegal Argument Exception ( "" Given an invalid alpha value: "" + alpha )  ;  } this . outer Circle Alpha = alpha ;  return this ; }"
8496,"public int transform (  Ct Class clazz, int pos,  Code Iterator iterator,  Const Pool cp )  throws  Cannot Compile Exception{ int index ;  int c = iterator . byte At ( pos )  ;  if  ( c == NEW )  {     index = iterator . u16bit At ( pos + 1 )  ;      if  ( cp . get Class Info ( index )  . equals ( classname )  )  {         if  ( iterator . byte At ( pos + 3 )  != DUP )              throw new  Cannot Compile Exception ( ""NEW followed by no DUP was found"" )  ;          if  ( new Class Index == 0 )              new Class Index = cp . add Class Info ( new Class Name )  ;          iterator . write16bit ( new Class Index, pos + 1 )  ;          ++nested ;      } } else if  ( c == INVOKESPECIAL )  {     index = iterator . u16bit At ( pos + 1 )  ;      int typedesc = cp . is Constructor ( classname, index )  ;      if  ( typedesc != 0 && nested > 0 )  {         int nt = cp . get Methodref Name And Type ( index )  ;          if  ( new Method NT Index != nt )  {             new Method NT Index = nt ;              new Method Index = cp . add Methodref Info ( new Class Index, nt )  ;          }         iterator . write16bit ( new Method Index, pos + 1 )  ;          --nested ;      } } return pos ; }"
8497,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
8498,"public com . anychart . charts .  Mekko bounds (  String x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
8499,"public  Cursor swap Cursor (  Cursor new Cursor ) { if  ( new Cursor == m Cursor )  {     return null ;  }  Cursor old Cursor = m Cursor ;  m Cursor = new Cursor ;  if  ( new Cursor != null )  {     m Row ID Column = new Cursor . get Column Index Or Throw ( ""_id"" )  ;      notify Data Set Changed (  )  ;  } else {     m Row ID Column = -1 ;      notify Data Set Invalidated (  )  ;  } return old Cursor ; }"
8500,"public static void show ( final android . app .  Fragment fragment, final  App Invite Content app Invite Content ) { show ( new  Fragment Wrapper ( fragment ) , app Invite Content )  ; }"
8501,private void merge Collapse (  ) { while  ( stack Size > 1 )  {     int n = stack Size - 2 ;      if  (  ( n >= 1 && run Len [ n - 1 ]  <= run Len [ n ]  + run Len [ n + 1 ]  )  ||  ( n >= 2 && run Len [ n - 2 ]  <= run Len [ n ]  + run Len [ n - 1 ]  )  )  {         if  ( run Len [ n - 1 ]  < run Len [ n + 1 ]  )              n-- ;      } else if  ( run Len [ n ]  > run Len [ n + 1 ]  )  {         //  Invariant is established         break ;      }     merge At ( n )  ;  }}
8502,"public com . anychart . core . gantt . edit .  Structure Edit fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
8503,"public  Ad Playback State with Skipped Ad ( int ad Group Index, int ad Index In Ad Group ) {  Ad Group [  ]  ad Groups =  Arrays . copy Of ( this . ad Groups, this . ad Groups . length )  ;  ad Groups [ ad Group Index ]  = ad Groups [ ad Group Index ]  . with Ad State ( AD_STATE_SKIPPED, ad Index In Ad Group )  ;  return new  Ad Playback State ( ad Group Times Us, ad Groups, ad Resume Position Us, content Duration Us )  ; }"
8504,"public static  File resolve (  File directory, FS fs ) { if  ( is Git Repository ( directory, fs )  )      return directory ;  if  ( is Git Repository ( new  File ( directory,  Constants . DOT_GIT ) , fs )  )      return new  File ( directory,  Constants . DOT_GIT )  ;  final  String name = directory . get Name (  )  ;  final  File parent = directory . get Parent File (  )  ;  if  ( is Git Repository ( new  File ( parent, name +  Constants . DOT_GIT_EXT ) , fs )  )      return new  File ( parent, name +  Constants . DOT_GIT_EXT )  ;  return null ; }"
8505,public int get Model Count ( final int position ) { if  ( position >= 0 && !m Groups . is Empty (  )  && position < m Groups . size (  )  )  {     final  Group group = m Groups . get ( position )  ;      return m Network . get Models ( group )  . size (  )  ;  } return 0 ; }
8506,long get Deadline In Ms (  ) { return deadline In Ms ; }
8507,public void set Format ( I Format<T> format ) { for  (  Column<T> column : array Columns )  {     column . set Format ( format )  ;  }}
8508,public  Resource Path get Path (  ) { return path ; }
8509,public void set Fill Viewport Y ( boolean fill Viewport Y ) { if  ( fill Viewport Y != m Fill Viewport Y )  {     m Fill Viewport Y = fill Viewport Y ;      request Layout (  )  ;  }}
8510,"public static  String to String Exclude (  Object object,  String .  .  .  exclude Field Names ) { return new  Reflection To String Builder ( object )  . set Exclude Field Names ( exclude Field Names )  . to String (  )  ; }"
8511,public void set Other Button Drawable ( int other Button Drawable ) { m Other Button Drawable = other Button Drawable ; }
8512,"public synchronized void bind Custom Tabs Service (  ) { if  ( m Chrome Package With Custom Tab Support != null )  {     final  Count Down Latch latch = new  Count Down Latch ( 1 )  ;      m Custom Tabs Service Connection = new  Msal Custom Tabs Service Connection ( latch )  ;      //  Initiate the service-bind action      Custom Tabs Client . bind Custom Tabs Service ( m Parent Activity, m Chrome Package With Custom Tab Support, m Custom Tabs Service Connection )  ;      boolean custom Tabs Service Connected = wait For Service Connection To Establish ( latch )  ;      final  Custom Tabs Intent .  Builder builder = custom Tabs Service Connected ? new  Custom Tabs Intent .  Builder ( m Custom Tabs Service Connection . get Custom Tabs Session (  )  )  : new  Custom Tabs Intent .  Builder (  )  ;      //  Create the  Intent used to launch the  Url     m Custom Tabs Intent = builder . set Show Title ( true )  . build (  )  ;      m Custom Tabs Intent . intent . set Package ( m Chrome Package With Custom Tab Support )  ;  }}"
8513,public float get X Entry Space (  ) { return m X Entry Space ; }
8514,public void update Visual Value (  ) { animate Time = 0 ; }
8515,"public  Closeable Reference<V> cache ( final K key, final  Closeable Reference<V> value Ref, @ Nullable final  Entry State Observer<K> observer ) {  Preconditions . check Not Null ( key )  ;   Preconditions . check Not Null ( value Ref )  ;  maybe Update Cache Params (  )  ;  final  Entry<K, V> old LFU Exclusive ;  final  Entry<K, V> old MFU Exclusive ;   Closeable Reference<V> old Ref To Close = null ;   Closeable Reference<V> client Ref = null ;  synchronized  ( this )  {     // remove the old item  ( if any )  as it is stale now     old LFU Exclusive = m Least Frequently Used Exclusive Entries . remove ( key )  ;      old MFU Exclusive = m Most Frequently Used Exclusive Entries . remove ( key )  ;      final boolean not Present In Both = old LFU Exclusive == null || old MFU Exclusive == null ;       Preconditions . check State ( not Present In Both )  ;       Entry<K, V> old Entry = m Cached Entries . remove ( key )  ;      if  ( old Entry != null )  {         make Orphan ( old Entry )  ;          old Ref To Close = reference To Close ( old Entry )  ;      }     if  ( can Cache New Value ( value Ref . get (  )  )  )  {          Entry<K, V> new Entry =  Entry . of ( key, value Ref, observer )  ;          // check if the key was recently evicted and restore its state          Integer stored Access Count = m Least Frequently Used Keys Ghost List . get Value ( key )  ;          new Entry . access Count = stored Access Count != null ? stored Access Count : 0 ;          m Cached Entries . put ( key, new Entry )  ;          client Ref = new Client Reference ( new Entry )  ;      } }  Closeable Reference . close Safely ( old Ref To Close )  ;  maybe Notify Exclusive Entry Removal ( old LFU Exclusive, old MFU Exclusive )  ;  maybe Evict Entries (  )  ;  return client Ref ; }"
8516,String get Name (  ) { return firebase App . get Name (  )  ; }
8517,public static  String get Token (  ) { check User Setup (  )  ;  return local Data Manager . get Token (  )  ; }
8518,private  String as Trimmed String (  ) { return as String (  )  . trim (  )  ; }
8519,public void set Nav Icon Tint ( int nav Icon Tint ) { this . nav Icon Tint = nav Icon Tint ;  setup Nav Icon Tint (  )  ; }
8520,"public com . anychart . standalones .  Resource Timeline row Fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
8521,public int get Stem H (  ) { return this . stem H ; }
8522,"public com . anychart . core . utils .  Interactivity interactivity (  ) { return new com . anychart . core . utils .  Interactivity ( js Base + "" . interactivity (  ) "" )  ; }"
8523,public void set Padding Top ( int padding Top ) { this . padding Top = padding Top ; }
8524,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
8525,"public void mix (  ) { LOGGER . info ( "" Mixing the immutable stew we find: {} potatoes, {} carrots, {} meat and {} peppers"", data . get Num Potatoes (  ) , data . get Num Carrots (  ) , data . get Num Meat (  ) , data . get Num Peppers (  )  )  ; }"
8526,"private static  String get Property Str Sql (  String key,  Object value ) {  String Buffer sb SQL = new  String Buffer ( key )  . append ( ""="" )  ;  if  ( value instanceof  String || value instanceof java . util .  Date || value instanceof java . sql .  Date )  {     sb SQL . append ( ""'"" )  . append ( value )  . append ( ""'"" )  ;  } else {     sb SQL . append ( value )  ;  } return sb SQL . to String (  )  ; }"
8527,public void set Modal ( boolean modal ) { this . modal = modal ; }
8528,"public void rest ( int ms ) { long start = get Elapsed (  )  ;  while  ( start + ms > get Elapsed (  )  )  {     try {          Thread . sleep ( 1 )  ;      } catch  (  Interrupted Exception e )  {     //                 Logger . e ( ""engine game Timer error:"" + e )  ;      } }}"
8529,"public com . anychart . core . ui .  Crosshair Label offset X (  String offset ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . offset X ( %s )  ; "", wrap Quotes ( offset )  )  )  ;  return this ; }"
8530,"public com . anychart . core . ui .  Circular Labels Factory font Style ( com . anychart . graphics . vector . text .  Font Style style ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Style ( %s )  ; "",  ( style != null )  ? style . get Js Base (  )  : null )  )  ;  return this ; }"
8531,"public GSY Base Video Player start Window Fullscreen (  Context context, boolean action Bar, boolean status Bar ) {  Smart Pick Video sample Video =  (  Smart Pick Video )  super . start Window Fullscreen ( context, action Bar, status Bar )  ;  sample Video . m Source Position = m Source Position ;  sample Video . m List Item Rect = m List Item Rect ;  sample Video . m List Item Size = m List Item Size ;  sample Video . m Type = m Type ;  sample Video . m Url List = m Url List ;  sample Video . m Type Text = m Type Text ;  sample Video . m Switch Size . set Text ( m Type Text )  ;  return sample Video ; }"
8532,"private boolean range Contains Reserved ( int rop Range Start, int width ) { for  ( int i = rop Range Start ;  i <  ( rop Range Start + width )  ;  i++ )  {     if  ( reserved Rop Regs . get ( i )  )  {         return true ;      } } return false ; }"
8533,"public void top Radius (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top Radius (  )  ; "" )  ; }"
8534,public float get Gravity Scale (  ) { return jni Get Gravity Scale ( addr )  ; }
8535,public double get Double ( short key ) { return read Double Value ( get Value Offset For Key ( key )  )  ; }
8536,public  Class<T> get Class Type (  )  throws  Class Not Found Exception{  Type cls Type = get Type (  )  ;  if  ( get Type (  )  instanceof  Parameterized Type )  {     return  (  Class<T> )   (  (  Parameterized Type )  cls Type )  . get Raw Type (  )  ;  } else {     return  (  Class<T> )   Class . for Name ( cls Type . get Type Name (  )  )  ;  }}
8537,"private  String simple Format (  String pattern,  Object .  .  .  args ) { buffer . set Length ( 0 )  ;  boolean changed = false ;  int placeholder = -1 ;  int pattern Length = pattern . length (  )  ;  for  ( int i = 0 ;  i < pattern Length ;  ++i )  {     char ch = pattern . char At ( i )  ;      if  ( placeholder < 0 )  {         // processing constant part         if  ( ch == '{' )  {             changed = true ;              if  ( i + 1 < pattern Length && pattern . char At ( i + 1 )  == '{' )  {                 // handle escaped '{'                 buffer . append ( ch )  ;                  ++i ;              } else {                 // switch to placeholder part                 placeholder = 0 ;              }         } else {             buffer . append ( ch )  ;          }     } else {         // processing placeholder part         if  ( ch == '}' )  {             if  ( placeholder >= args . length )                  throw new  Illegal Argument Exception ( "" Argument index out of bounds: "" + placeholder )  ;              if  ( pattern . char At ( i - 1 )  == '{' )                  throw new  Illegal Argument Exception ( "" Missing argument index after a left curly brace"" )  ;              if  ( args [ placeholder ]  == null )                  // append null argument                 buffer . append ( ""null"" )  ;              else                 // append actual argument                 buffer . append ( args [ placeholder ]  . to String (  )  )  ;              // switch to constant part             placeholder = -1 ;          } else {             if  ( ch < '0' || ch > '9' )                  throw new  Illegal Argument Exception ( "" Unexpected '"" + ch + ""' while parsing argument index"" )  ;              placeholder = placeholder * 10 +  ( ch - '0' )  ;          }     } } if  ( placeholder >= 0 )      throw new  Illegal Argument Exception ( "" Unmatched braces in the pattern . "" )  ;  return changed ? buffer . to String (  )  : pattern ; }"
8538,"public com . anychart . core . ui .  Chart Scroller fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
8539,"public void assert Prior Call Returns ( boolean expected, @ Nullable  String method Name )  throws  Exception{ assert Equals ( expected, get Response ( method Name )  . get Result (  )  )  ; }"
8540,"public com . anychart . core . ui .  Labels Factory max Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . max Labels (  ) "" )  ; }"
8541,public  Hash Code get Hash Code (  ) { if  ( sha1 Or Sha256 . is Left (  )  )  {     return sha1 Or Sha256 . get Left (  )  ;  } else {     return sha1 Or Sha256 . get Right (  )  ;  }}
8542,public  Rev Commit lookup Commit (  Any Object Id id ) {  Rev Commit c =  (  Rev Commit )  objects . get ( id )  ;  if  ( c == null )  {     c = create Commit ( id )  ;      objects . add ( c )  ;  } return c ; }
8543,public void add Ldc ( int i ) { if  ( i > 0x FF )  {     add Opcode ( LDC_W )  ;      add Index ( i )  ;  } else {     add Opcode ( LDC )  ;      add ( i )  ;  }}
8544,"private void add Users To Worklist ( int reg, int lattice Value ) { if  ( lattice Value == VARYING )  {     for  (  Ssa Insn insn : ssa Meth . get Use List For Register ( reg )  )  {         varying Worklist . add ( insn )  ;      } } else {     for  (  Ssa Insn insn : ssa Meth . get Use List For Register ( reg )  )  {         ssa Worklist . add ( insn )  ;      } }}"
8545,"private  Pair< List< Component>,  List< String>> get Updated Components ( final  Layout State Context layout State Context,  Component head, @ Nullable  String head Key ) { int size = m Components . size (  )  ;   List< Component> updated = new  Array List<> ( size )  ;   List< String> updated Keys = m Component Global Keys == null ? null : new  Array List< String> ( size )  ;  // 1 .   Add the updated head component to the list .  updated . add ( head )  ;  if  ( updated Keys != null )  {     updated Keys . add ( head Key )  ;  } // 2 .   Set parent context for descendants .   Component Context parent Context = head . get Scoped Context ( layout State Context, head Key )  ;  // 3 .   Shallow copy and update all components, except the head component .  for  ( int i = size - 2 ;  i >= 0 ;  i-- )  {     final  String key =  Component Utils . get Global Key ( m Components . get ( i ) , m Component Global Keys == null ? null : m Component Global Keys . get ( i )  )  ;      final  Component component = m Components . get ( i )  . make Updated Shallow Copy ( parent Context, key )  ;      updated . add ( component )  ;      if  ( m Component Global Keys != null )  {         updated Keys . add ( key )  ;      }     parent Context = // set parent context for descendant     component . get Scoped Context ( layout State Context, key )  ;  } // 4 .   Reverse the list so that the root component is at index 0 .   Collections . reverse ( updated )  ;  if  ( updated Keys != null )  {      Collections . reverse ( updated Keys )  ;  } return new  Pair ( updated, updated Keys )  ; }"
8546,"public void on Purchase Intent (  String item Id,  Pending Intent purchase Intent ) {  Billing Controller . start Purchase Intent ( activity, purchase Intent, null )  ; }"
8547,"public com . anychart . core . annotations .  Fibonacci Timezones trend ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . trend ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8548,public boolean has Containers (  ) { return super . has Containers (  )  ; }
8549,private void remove Client ( T client ) { clients Lock . lock (  )  ;  try {     clients . remove ( client )  ;  } finally {     clients Lock . unlock (  )  ;  }}
8550,public int get Bytes Per Frame (  ) { return block Alignment ; }
8551,public static  Double rms (  List<T> num List ) { int len = valid Length ( num List )  ;  if  ( len == 0 )      return null ;  double rms = 0 ;  for  ( T num : num List )  {     if  ( num == null )          continue ;      rms += num . double Value (  )  / len * num . double Value (  )  ;  } return  Math . sqrt ( rms )  ; }
8552,"public com . anychart . core . annotations .  Triangle bounds (  Number x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
8553,"protected void done Defining Class (  String class Name ) {  String base Name =  Name . suffix ( class Name, 1 )  ;  defining Classes . remove ( class Name )  ;  defining Classes Base Names . remove ( base Name )  ; }"
8554,"public void append (  String Buffer buffer,  String field Name, byte value ) { append Field Start ( buffer, field Name )  ;  append Detail ( buffer, field Name, value )  ;  append Field End ( buffer, field Name )  ; }"
8555,"public com . anychart . core . utils .  Quarter fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
8556,public static  String convert Frame ID24 To23 (  String identifier ) {  String id ;  if  ( identifier . length (  )  < 4 )  {     return null ;  } id = ID3 Frames . convertv24 Tov23 . get ( identifier )  ;  if  ( id == null )  {     if  ( ID3v23 Frames . get Instance Of (  )  . get Id To Value Map (  )  . contains Key ( identifier )  )  {         id = identifier ;      } } return id ; }
8557,"public  Revenue set Product Id (  String product Id ) { if  (  Utils . is Empty String ( product Id )  )  {     logger . w ( TAG, "" Invalid empty product Id"" )  ;      return this ;  } this . product Id = product Id ;  return this ; }"
8558,"public  Realm Query<E> equal To (  String field Name, @ Nullable  Integer value ) { realm . check If Valid (  )  ;  return equal To Without Thread Validation ( field Name, value )  ; }"
8559,public void remove Empty (  ) {  String [  ]  keys = new  String [ key To Content . size (  )  ]  ;  key To Content . key Set (  )  . to Array ( keys )  ;  for  (  String key : keys )  {     maybe Remove ( key )  ;  }}
8560,public static  Markwon create ( @ Non Null  Context context ) { return builder ( context )  . use Plugin (  Core Plugin . create (  )  )  . build (  )  ; }
8561,public static  Keyboard for Number ( int value ) { switch ( value )  {     case 0:         return KEYBOARD_UNSET ;      case 1:         return KEYBOARD_NOKEYS ;      case 2:         return KEYBOARD_QWERTY ;      case 3:         return KEYBOARD_TWELVEKEY ;      default:         return null ;  }}
8562,public float get Height (  ) { return bounds . height (  )  * scale ; }
8563,"private  Byte Buffer decode (  )  throws PDF Parse Exception{ // start at the beginning of the buffer buf . rewind (  )  ;  // allocate the output buffer  Byte Array Output Stream baos = new  Byte Array Output Stream (  )  ;  byte dup Amount = -1 ;  byte [  ]  buffer = new byte [ 128 ]  ;  while  (  ( dup Amount = buf . get (  )  )  != -1 && dup Amount != RUN_LENGTH_EOD )  {     if  ( dup Amount <= 127 )  {         int amount To Copy = dup Amount + 1 ;          while  ( amount To Copy > 0 )  {             buf . get ( buffer, 0, amount To Copy )  ;              baos . write ( buffer, 0, amount To Copy )  ;          }     } else {         byte dup Byte = buf . get (  )  ;          for  ( int i = 0 ;  i < 257 -  ( int )   ( dup Amount & 0x FF )  ;  i++ )  {             baos . write ( dup Byte )  ;          }     } } return  Byte Buffer . wrap ( baos . to Byte Array (  )  )  ; }"
8564,public  String get File Contents (  Path path Relative To Workspace Root )  throws IO Exception{ return get File Contents With Absolute Path ( get Path ( path Relative To Workspace Root )  )  ; }
8565,"public void inject ( T obj,  Scope scope ) {  Class<? super T> current Class =  (  Class<T> )  obj . get Class (  )  ;  do {      Member Injector<? super T> member Injector =  Member Injector Locator . get Member Injector ( current Class )  ;      if  ( member Injector != null )  {         member Injector . inject ( obj, scope )  ;          return ;      } else {         current Class = current Class . get Superclass (  )  ;      } } while  ( current Class != null )  ; }"
8566,public void should Generate Metadata ( boolean generate Metadata ) { this . generate Metadata = generate Metadata ; }
8567,"public boolean matches (  Object node,  Context context ) { return node Type == context . get Navigator (  )  . get Node Type ( node )  ; }"
8568,"public void explode (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . explode (  )  ; "" )  ; }"
8569,public static void set Buffer Size ( final int buffer Size ) { s Buffer Size = buffer Size ; }
8570,"public static boolean start Activity (  Context context,  Intent intent ) { // TODO 先用旧的开启 Activity方案，以后再优化  Component Name cn = intent . get Component (  )  ;  if  ( cn == null )  {     // TODO 需要支持 Action方案     return false ;  }  String plugin = cn . get Package Name (  )  ;   String cls = cn . get Class Name (  )  ;  return  Factory . start Activity With No Inject CN ( context, intent, plugin, cls, I Plugin Manager . PROCESS_AUTO )  ; }"
8571,public void set Auto Adapt Strategy (  Auto Adapt Strategy auto Adapt Strategy ) { m Auto Adapt Strategy = auto Adapt Strategy ;  if  ( m Fragment Lifecycle Callbacks To Androidx != null )  {     m Fragment Lifecycle Callbacks To Androidx . set Auto Adapt Strategy ( auto Adapt Strategy )  ;  } else if  ( m Fragment Lifecycle Callbacks != null )  {     m Fragment Lifecycle Callbacks . set Auto Adapt Strategy ( auto Adapt Strategy )  ;  }}
8572,"public  Map< String,  Object> to Filter Map (  ) { final  Map< String,  Object> filter = new  Hash Map<> (  )  ;  filter . put ( FIELD_SORT, sort Type )  ;  filter . put ( FIELD_DIRECTION, direction )  ;  if  ( assignee != null )  {     filter . put ( FILTER_ASSIGNEE, assignee . login (  )  )  ;  } if  ( milestone != null )  {     filter . put ( FILTER_MILESTONE,  Integer . to String ( milestone . number (  )  )  )  ;  } if  ( labels != null && !labels . is Empty (  )  )  {      String Builder labels Query = new  String Builder (  )  ;      for  (  Label label : labels )  {         labels Query . append ( label . name (  )  )  . append ( ',' )  ;      }     filter . put ( FILTER_LABELS, labels Query . to String (  )  )  ;  } if  ( open )  {     filter . put ( FILTER_STATE, STATE_OPEN )  ;  } else {     filter . put ( FILTER_STATE, STATE_CLOSED )  ;  } return filter ; }"
8573,"public static  Mutable Graph<N> induced Subgraph (  Graph<N> graph,  Iterable<? extends N> nodes ) {  Mutable Graph<N> subgraph =  ( nodes instanceof  Collection )  ?  Graph Builder . from ( graph )  . expected Node Count (  (  (  Collection )  nodes )  . size (  )  )  . build (  )  :  Graph Builder . from ( graph )  . build (  )  ;  for  ( N node : nodes )  {     subgraph . add Node ( node )  ;  } for  ( N node : subgraph . nodes (  )  )  {     for  ( N successor Node : graph . successors ( node )  )  {         if  ( subgraph . nodes (  )  . contains ( successor Node )  )  {             subgraph . put Edge ( node, successor Node )  ;          }     } } return subgraph ; }"
8574,"public static JSON Object get JSON Object ( @ Non Null final  String key, @ Non Null final  Cache Double Utils cache Double Utils ) { return cache Double Utils . get JSON Object ( key )  ; }"
8575,"public com . anychart . core . resource .  Grid bounds (  Number x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
8576,public int get Cpu Num (  ) { try {     //  Get directory containing CPU info      File dir = new  File ( CPU_DIR_PATH )  ;      //  Filter to only list the devices we care about      File [  ]  files = dir . list Files ( new  Cpu Filter (  )  )  ;      return files . length ;  } catch  (  Exception e )  {     e . print Stack Trace (  )  ;      return 1 ;  }}
8577,"public static  Lat Lng compute Offset Origin (  Lat Lng to, double distance, double heading ) { heading = to Radians ( heading )  ;  distance /= EARTH_RADIUS ;  // http://lists . maptools . org/pipermail/proj/2008- October/003939 . html double n1 = cos ( distance )  ;  double n2 = sin ( distance )  * cos ( heading )  ;  double n3 = sin ( distance )  * sin ( heading )  ;  double n4 = sin ( to Radians ( to . latitude )  )  ;  //  There are two solutions for b .  b = n2 * n4 +/- sqrt (  ) , one solution results // in the latitude outside the  [ -90, 90 ]  range .   We first try one solution and // back off to the other if we are outside that range .  double n12 = n1 * n1 ;  double discriminant = n2 * n2 * n12 + n12 * n12 - n12 * n4 * n4 ;  if  ( discriminant < 0 )  {     //  No real solution which would make sense in  Lat Lng-space .      return null ;  } double b = n2 * n4 + sqrt ( discriminant )  ;  b /= n1 * n1 + n2 * n2 ;  double a =  ( n4 - n2 * b )  / n1 ;  double from Lat Radians = atan2 ( a, b )  ;  if  ( from Lat Radians < -PI / 2 || from Lat Radians > PI / 2 )  {     b = n2 * n4 - sqrt ( discriminant )  ;      b /= n1 * n1 + n2 * n2 ;      from Lat Radians = atan2 ( a, b )  ;  } if  ( from Lat Radians < -PI / 2 || from Lat Radians > PI / 2 )  {     //  No solution which would make sense in  Lat Lng-space .      return null ;  } double from Lng Radians = to Radians ( to . longitude )  - atan2 ( n3, n1 * cos ( from Lat Radians )  - n2 * sin ( from Lat Radians )  )  ;  return new  Lat Lng ( to Degrees ( from Lat Radians ) , to Degrees ( from Lng Radians )  )  ; }"
8578,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
8579,"public boolean go Back (  ) { //  This is needed to support cur Page#diff Link, since they are added to parent Engine's history, but not our history url array  ( JQ Mobile behavior )  if  ( web View . can Go Back (  )  )  {     web View . go Back (  )  ;      return true ;  } return false ; }"
8580,"private  Gauge Metric get Last Recorded Gauge Metric (  Application Process State application Process State, int times Logged ) {  Argument Captor< Gauge Metric> arg Metric =  Argument Captor . for Class (  Gauge Metric . class )  ;  verify ( mock Transport Manager, times ( times Logged )  )  . log ( arg Metric . capture (  ) , eq ( application Process State )  )  ;  reset ( mock Transport Manager )  ;  //  Required after resetting the mock .   By default we assume that  Transport is initialized .  when ( mock Transport Manager . is Initialized (  )  )  . then Return ( true )  ;  return arg Metric . get Value (  )  ; }"
8581,"T new Proxy ( T target,  Class<T> interface Type,  Duration timeout ) { return new Proxy ( target, interface Type, to Nanos Saturated ( timeout ) ,  Time Unit . NANOSECONDS )  ; }"
8582,"protected  Camera Device open Camera Device User Async (  String camera Id,  Camera Device .  State Callback callback,  Handler handler )  throws  Camera Access Exception{  Camera Characteristics characteristics = get Camera Characteristics ( camera Id )  ;  android . hardware . camera2 . impl .  Camera Device Impl device Impl =  Reflection Helpers . call Constructor ( android . hardware . camera2 . impl .  Camera Device Impl . class,  Class Parameter . from (  String . class, camera Id ) ,  Class Parameter . from (  Camera Device .  State Callback . class, callback ) ,  Class Parameter . from (  Handler . class, handler ) ,  Class Parameter . from (  Camera Characteristics . class, characteristics )  )  ;  handler . post (  (  )  -> callback . on Opened ( device Impl )  )  ;  return device Impl ; }"
8583,"public com . anychart . core . gantt . elements .  Milestones Element stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8584,public void should Recycle ( boolean should Recycle ) { this . m Should Recycle = should Recycle ; }
8585,public void set Sim Locale (  Locale sim Locale ) { this . sim Locale = sim Locale ; }
8586,"public T add Action ( int icon Res Id,  Char Sequence str, QMUI Dialog Action .  Action Listener listener ) { return add Action ( icon Res Id, str, QMUI Dialog Action . ACTION_PROP_NEUTRAL, listener )  ; }"
8587,"public com . anychart . core . stock . scrollerseries .  Hilo stroke ( com . anychart . graphics . vector .  Colored Fill value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8588,public R build (  )  throws IO Exception{ R repo =  ( R )  new  File Repository ( setup (  )  )  ;  if  ( is Must Exist (  )  && !repo . get Object Database (  )  . exists (  )  )      throw new  Repository Not Found Exception ( get Git Dir (  )  )  ;  return repo ; }
8589,"private static void check Parameters (  Category Series dataset,  Default Renderer renderer ) { if  ( dataset == null || renderer == null || dataset . get Item Count (  )  != renderer . get Series Renderer Count (  )  )  {     throw new  Illegal Argument Exception ( "" Dataset and renderer should be not null and the dataset number of items should be equal to the number of series renderers"" )  ;  }}"
8590,public static synchronized  Mapping Factory get Instance (  ) { if  ( instance == null )  {     instance = new  Default Mapping Factory (  )  ;  } return instance ; }
8591,"public  Char Sequence get Line Breaks (  Char Sequence text,  Text Paint paint ) { int width = text View . get Text Width (  )  ;  boolean keep Word = text View . is Keep Word (  )  ;  if  ( width <= 0 || keep Word )      return text ;  int length = text . length (  )  ;  int start = 0, end = 1 ;   Spannable String Builder ssb = new  Spannable String Builder (  )  ;  while  ( end <= length )  {      Char Sequence c = text . sub Sequence ( end - 1, end )  ;      //            boolean need Check = false ;      if  (  Text Utils . equals ( c, ""\n"" )  )  {         // 已经换行         ssb . append ( text, start, end )  ;          start = end ;      //                need Check = true ;      } else {         float lw = paint . measure Text ( text, start, end )  ;          if  ( lw > width )  {             // 超出宽度，退回一个位置             ssb . append ( text, start, end - 1 )  ;              start = end - 1 ;              if  ( end < length )  {                  Char Sequence c2 = text . sub Sequence ( end - 1, end )  ;                  if  ( ! Text Utils . equals ( c2, ""\n"" )  )                      ssb . append ( '\n' )  ;              }         //                    need Check = true ;          } else if  ( lw == width )  {             ssb . append ( text, start, end )  ;              start = end ;              if  ( end < length )  {                  Char Sequence c2 = text . sub Sequence ( end, end + 1 )  ;                  if  ( ! Text Utils . equals ( c2, ""\n"" )  )                      ssb . append ( '\n' )  ;              }         //                    need Check = true ;          } else if  ( end == length )  {             // 已经是最后一个字符             ssb . append ( text, start, end )  ;              start = end ;          }     }     end++ ;  } return ssb ; }"
8592,"protected boolean standard Add All (  Collection<? extends E> collection ) { return  Iterators . add All ( this, collection . iterator (  )  )  ; }"
8593,protected int get App Standby Bucket (  ) { return current App Standby Bucket ; }
8594,public  Spring get Control Spring (  ) { return m Springs . get ( m Control Spring Index )  ; }
8595,"public  Task< Https Callable Result> call (  ) { return functions Client . call ( name, null, options )  ; }"
8596,"public T first (  ) { if  ( size == 0 )  {     //  Underflow     throw new  No Such Element Exception ( "" Queue is empty . "" )  ;  } return values [ head ]  ; }"
8597,"public void x Point Position (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . x Point Position (  )  ; "" )  ; }"
8598,"public com . anychart . charts .  Scatter height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
8599,"private static  Class<?> get Generic Return Type (  Method method,  Class<?> source, int type Index, int nesting Level ) { return extract Type ( method . get Generic Return Type (  ) , source, type Index, null, null, nesting Level, 1 )  ; }"
8600,"public boolean wait For (  Guard guard, long time,  Time Unit unit )  throws  Interrupted Exception{ final long timeout Nanos = to Safe Nanos ( time, unit )  ;  if  ( ! (  ( guard . monitor == this )  & lock . is Held By Current Thread (  )  )  )  {     throw new  Illegal Monitor State Exception (  )  ;  } if  ( guard . is Satisfied (  )  )  {     return true ;  } if  (  Thread . interrupted (  )  )  {     throw new  Interrupted Exception (  )  ;  } return await Nanos ( guard, timeout Nanos, true )  ; }"
8601,"public  Commit Command set Only (  String only ) { check Callable (  )  ;  if  ( all )      throw new J Git Internal Exception (  Message Format . format ( //$NON-NLS-1$     J Git Text . get (  )  . illegal Combination Of Arguments, //$NON-NLS-1$     ""--only"", //$NON-NLS-1$     ""--all"" )  )  ;   String o = //$NON-NLS-1$ only . ends With ( ""/"" )  ? //$NON-NLS-1$ only . substring ( 0, only . length (  )  - 1 )  : only ;  // ignore duplicates if  ( !this . only . contains ( o )  )      this . only . add ( o )  ;  return this ; }"
8602,"public static void handle Event (  Object listener,  Object event ) {  Map< Class<?>,  Set< Rx Event Handler>> all Subscribers =  Rx Annotated Handler Finder . find All Subscribers ( listener )  ;  if  ( all Subscribers != null && !all Subscribers . is Empty (  )  )  {      Set< Rx Event Handler> rx Event Handlers = all Subscribers . get ( event . get Class (  )  )  ;      if  ( rx Event Handlers != null && !rx Event Handlers . is Empty (  )  )  {          Iterator< Rx Event Handler> iterator = rx Event Handlers . iterator (  )  ;          while  ( iterator . has Next (  )  )  {              Rx Event Handler handler = iterator . next (  )  ;              try {                 handler . handle Event ( event )  ;              } catch  (  Invocation Target Exception e )  {                  Log . e ( LOG_TAG,  Log . get Stack Trace String ( e . get Cause (  )  )  )  ;              }         }     } }}"
8603,public static  String hex ( byte [  ]  bytes ) { if  ( bytes == null )  {     return null ;  } int bytes Len = bytes . length ;  char [  ]  chars = new char [ bytes Len * 2 ]  ;  for  ( int i = 0 ;  i < bytes . length ;  i++ )  {     int a = bytes [ i ]  & 0x FF ;      int b0 = a >> 4 ;      int b1 = a & 0xf ;      //hex Chars [ b0 ]  ;      chars [ i * 2 ]  =  ( char )   ( b0 +  ( b0 < 10 ? 48 : 55 )  )  ;      chars [ i * 2 + 1 ]  =  ( char )   ( b1 +  ( b1 < 10 ? 48 : 55 )  )  ;  } return new  String ( chars )  ; }
8604,"public com . anychart . core . gauge . pointers .  Knob fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
8605,public  Double get Returnordrate90 (  ) { return returnordrate90 ; }
8606,"public com . anychart . charts .  Scatter legend (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . legend ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8607,"private static void deep Merge Into ( JSON Object old JSON, JSON Object new JSON )  throws JSON Exception{  Iterator<?> keys = new JSON . keys (  )  ;  while  ( keys . has Next (  )  )  {      String key =  (  String )  keys . next (  )  ;      JSON Object new JSON Object = new JSON . opt JSON Object ( key )  ;      JSON Object old JSON Object = old JSON . opt JSON Object ( key )  ;      if  ( new JSON Object != null && old JSON Object != null )  {         deep Merge Into ( old JSON Object, new JSON Object )  ;          old JSON . put ( key, old JSON Object )  ;      } else {         old JSON . put ( key, new JSON . get ( key )  )  ;      } }}"
8608,"public  Bitmap crop (  ) { if  ( bitmap == null )  {     return null ;  } final  Bitmap src = bitmap ;  final  Bitmap .  Config src Config = src . get Config (  )  ;  final  Bitmap .  Config config = src Config == null ?  Bitmap .  Config . ARGB_8888 : src Config ;  final int viewport Height = touch Manager . get Viewport Height (  )  ;  final int viewport Width = touch Manager . get Viewport Width (  )  ;  final  Bitmap dst =  Bitmap . create Bitmap ( viewport Width, viewport Height, config )  ;   Canvas canvas = new  Canvas ( dst )  ;  final int left =  ( get Right (  )  - viewport Width )  / 2 ;  final int top =  ( get Bottom (  )  - viewport Height )  / 2 ;  canvas . translate ( -left, -top )  ;  draw Bitmap ( canvas )  ;  return dst ; }"
8609,"public void acquire Token (  String resource,  String client Id, @ Nullable  String redirect Uri, @ Nullable  String login Hint, @ Nullable  Prompt Behavior prompt, @ Nullable  String extra Query Parameters,  Authentication Callback< Authentication Result> callback ) { acquire Token ( resource, client Id, redirect Uri, login Hint, prompt, extra Query Parameters, null, callback,  Event Strings . ACQUIRE_TOKEN_7, null, true )  ; }"
8610,"public void to Html Table (  String title,  Boolean as String ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Html Table ( %s, %s )  ; "", wrap Quotes ( title ) , as String )  )  ; }"
8611,public static  Char Matcher java Upper Case (  ) { return  Java Upper Case . INSTANCE ; }
8612,public void set Avg Width ( int avg Width ) { this . avg Width = avg Width ; }
8613,"public void create Log File ( com . facebook . buck . logd . proto .  Create Log Request request, io . grpc . stub .  Stream Observer<com . facebook . buck . logd . proto .  Create Log Response> response Observer ) { async Unimplemented Unary Call ( get Create Log File Method Helper (  ) , response Observer )  ; }"
8614,"public boolean is App Key Added ( final int key Index ) { final  Provisioned Mesh Node node = get Selected Mesh Node (  )  . get Value (  )  ;  if  ( node != null )  {     return  Mesh Parser Utils . is Node Key Exists ( node . get Added App Keys (  ) , key Index )  ;  } return false ; }"
8615,public  Glide Request< Transcode Type> auto Clone (  ) { return  (  Glide Request< Transcode Type> )  super . auto Clone (  )  ; }
8616,"public com . anychart . standalones .  Project Timeline row Fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
8617,public static boolean has Specified Theme (  Activity activity ) { return activity != null &&  Theme Manager . has Specified Theme ( activity . get Intent (  )  )  ; }
8618,"private  Method Descriptor infer Method Descriptor (  String method Name,  Method Handle method,  List< String> named Params,  List< String> default Skylark Values,  Set< String> noneable Params ) { try {     return  Method Descriptor . of (  Buck Starlark Function . class . get Declared Method ( ""fake"" ) , /* we hand a fake reflective method since we only use the  Method Descriptor to                    piggy back off skylark's parameter handling .   We don't actually have a                     Method object to use in many cases  ( e . g .  if the  Method Handle is a                    constructor )  .  */     infer Skylark Callable Annotation From Method ( method Name, method, named Params, default Skylark Values, noneable Params ) ,  Buck Starlark . BUCK_STARLARK_SEMANTICS )  ;  } catch  (  No Such Method Exception e )  {     throw new  Illegal State Exception (  )  ;  }}"
8619,"public void items (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . items (  )  ; "" )  ; }"
8620,public  String to String (  ) { return  Descriptor . to Class Name (  Character . to String ( descriptor )  )  ; }
8621,"public void test Lifecycle_I1_I1_S1_C (  ) {  Data Source< Object> data Source = get And Subscribe (  )  ;   Data Subscriber< Object> subscriber1 = verify Get And Subscribe ( m Data Source Supplier1, m Src1 )  ;   Object val1 = mock (  Object . class )  ;  set State ( m Src1, NOT_CLOSED, NOT_FINISHED, WITH_RESULT, val1, NOT_FAILED, null )  ;  subscriber1 . on New Result ( m Src1 )  ;  verify Subscriber ( data Source, m Src1, ON_NEW_RESULT )  ;  verify State ( data Source, m Src1, NOT_CLOSED, NOT_FINISHED, WITH_RESULT, val1, NOT_FAILED, null )  ;   Object val2 = mock (  Object . class )  ;  set State ( m Src1, NOT_CLOSED, NOT_FINISHED, WITH_RESULT, val2, NOT_FAILED, null )  ;  subscriber1 . on New Result ( m Src1 )  ;  verify Subscriber ( data Source, m Src1, ON_NEW_RESULT )  ;  verify State ( data Source, m Src1, NOT_CLOSED, NOT_FINISHED, WITH_RESULT, val2, NOT_FAILED, null )  ;   Object val = mock (  Object . class )  ;  set State ( m Src1, NOT_CLOSED, FINISHED, WITH_RESULT, val, NOT_FAILED, null )  ;  subscriber1 . on New Result ( m Src1 )  ;  verify Subscriber ( data Source, m Src1, ON_NEW_RESULT )  ;  verify State ( data Source, m Src1, NOT_CLOSED, FINISHED, WITH_RESULT, val, NOT_FAILED, null )  ;  test Close ( data Source, m Src1 )  ;  verify State ( data Source, null, CLOSED, FINISHED, WITHOUT_RESULT, null, NOT_FAILED, null )  ; }"
8622,"protected void process Hand Release ( float xvel, float yvel, boolean is Close Before Dragged ) { float min Velocity = m Drag Helper . get Min Velocity (  )  ;   View surface View = get Surface View (  )  ;   Drag Edge current Drag Edge = m Current Drag Edge ;  if  ( current Drag Edge == null || surface View == null )  {     return ;  } float will Open Percent =  ( is Close Before Dragged ?  . 25f :  . 75f )  ;  if  ( current Drag Edge ==  Drag Edge .  Left )  {     if  ( xvel > min Velocity )          open (  )  ;      else if  ( xvel < -min Velocity )          close (  )  ;      else {         float open Percent = 1f * get Surface View (  )  . get Left (  )  / m Drag Distance ;          if  ( open Percent > will Open Percent )              open (  )  ;          else             close (  )  ;      } } else if  ( current Drag Edge ==  Drag Edge .  Right )  {     if  ( xvel > min Velocity )          close (  )  ;      else if  ( xvel < -min Velocity )          open (  )  ;      else {         float open Percent = 1f *  ( -get Surface View (  )  . get Left (  )  )  / m Drag Distance ;          if  ( open Percent > will Open Percent )              open (  )  ;          else             close (  )  ;      } } else if  ( current Drag Edge ==  Drag Edge .  Top )  {     if  ( yvel > min Velocity )          open (  )  ;      else if  ( yvel < -min Velocity )          close (  )  ;      else {         float open Percent = 1f * get Surface View (  )  . get Top (  )  / m Drag Distance ;          if  ( open Percent > will Open Percent )              open (  )  ;          else             close (  )  ;      } } else if  ( current Drag Edge ==  Drag Edge .  Bottom )  {     if  ( yvel > min Velocity )          close (  )  ;      else if  ( yvel < -min Velocity )          open (  )  ;      else {         float open Percent = 1f *  ( -get Surface View (  )  . get Top (  )  )  / m Drag Distance ;          if  ( open Percent > will Open Percent )              open (  )  ;          else             close (  )  ;      } }}"
8623,"public void geo Id Field (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . geo Id Field (  )  ; "" )  ; }"
8624,"public void add Edge_nodes Not In Graph (  ) { assume (  )  . that ( graph Is Mutable (  )  )  . is True (  )  ;  network As Mutable Network . add Node ( N1 )  ;  assert True ( network As Mutable Network . add Edge ( N1, N5, E15 )  )  ;  assert True ( network As Mutable Network . add Edge ( N4, N1, E41 )  )  ;  assert True ( network As Mutable Network . add Edge ( N2, N3, E23 )  )  ;  assert That ( network . nodes (  )  )  . contains Exactly ( N1, N5, N4, N2, N3 )  ;  assert That ( network . edges (  )  )  . contains Exactly ( E15, E41, E23 )  ;  assert That ( network . edges Connecting ( N1, N5 )  )  . contains Exactly ( E15 )  ;  assert That ( network . edges Connecting ( N4, N1 )  )  . contains Exactly ( E41 )  ;  assert That ( network . edges Connecting ( N2, N3 )  )  . contains Exactly ( E23 )  ;  assert That ( network . edges Connecting ( N3, N2 )  )  . contains Exactly ( E23 )  ; }"
8625,public static byte [  ]  serialize (  Build File Manifest build File Manifest )  throws IO Exception{ return  Object Mappers . WRITER_WITH_TYPE . for Type (  Build File Manifest . class )  . write Value As Bytes ( build File Manifest )  ; }
8626,public void recycle (  ) { if  ( !m Recycled )  {     native Destroy ( m Native Pix )  ;      m Recycled = true ;  }}
8627,public boolean is Object Mode (  ) { return object Mode ; }
8628,public int size (  ) { return entry Set (  )  . size (  )  ; }
8629,"private void write Windows Symlink (  Directory Creator creator,  Map< Path,  Path> windows Symlink Map,  Path link File Path,  Path target )  throws IO Exception{ if  ( windows Symlink Map . contains Key ( target )  )  {     write Windows Symlink ( creator, windows Symlink Map, target, windows Symlink Map . get ( target )  )  ;  }  Path relative Target Path = link File Path . get Parent (  )  . relativize ( target )  ;  creator . get Filesystem (  )  . create Sym Link ( link File Path, relative Target Path, true )  ;  windows Symlink Map . remove ( link File Path )  ; }"
8630,"public void fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . fill (  )  ; "" )  ; }"
8631,"public  Lua Platform get Platform (  Target Configuration target Configuration,  Cxx Platform cxx Platform ) { // otherwise we load the ` Lua Platform` from the `lua#<cxx-platform-flavor>` section .  return cxx Platform . get Flavor (  )  . equals (  Default Cxx Platforms . FLAVOR )  ? get Platform ( SECTION_PREFIX, target Configuration, cxx Platform )  : get Platform (  String . format ( ""%s#%s"", SECTION_PREFIX, cxx Platform . get Flavor (  )  ) , target Configuration, cxx Platform )  ; }"
8632,"public  Resource< Bitmap> decode (  Input Stream is, int out Width, int out Height,  Options options )  throws IO Exception{ return decode ( is, out Width, out Height, options, EMPTY_CALLBACKS )  ; }"
8633,"public static  Object create From Parcelable (  Parcelable pa,  Class Loader loader,  String cln ) { try {      Field f = loader . load Class ( cln )  . get Field ( ""CREATOR"" )  ;      // 以防万一     f . set Accessible ( true )  ;       Parcelable .  Creator creator =  (  Parcelable .  Creator )  f . get ( null )  ;      return creator . create From Parcel ( create From Parcelable ( pa )  )  ;  } catch  (  Class Not Found Exception e )  { } catch  (  No Such Field Exception e )  { } catch  (  Illegal Access Exception e )  { } return null ; }"
8634,"public com . anychart . core . axismarkers .  Gantt Range container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
8635,"public com . anychart . scales .  Date Time Ticks set (  String [  ]  ticks ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set ( %s )  ; "", array To String Wrap Quotes ( ticks )  )  )  ;  return this ; }"
8636,public  Atc Format get Atc Format (  ) { return m Atc Format ; }
8637,"public com . anychart . core . ui .  Timeline background Fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
8638,"public com . anychart . core . series .  Rendering Settings rendering (  ) { return new com . anychart . core . series .  Rendering Settings ( js Base + "" . rendering (  ) "" )  ; }"
8639,"public static boolean remove Service (  Context context,  String service Name, I Binder service ) { I Service Channel service Channel = get Server Channel ( context )  ;  if  ( service Channel == null )  {     return false ;  } try {     service Channel . remove Service ( service Name )  ;  } catch  (  Remote Exception e )  {     if  ( DEBUG )  {          Log . e ( TAG, "" Remove service failed .  .  . "", e )  ;      } } return true ; }"
8640,"public boolean can Be Encoded (  ) { // Try and write to buffer using the  Char Set defined by the text Encoding field  ( note if using UTF16 we dont //need to worry about LE,BE at this point it makes no difference )  byte text Encoding = this . get Body (  )  . get Text Encoding (  )  ;   String char Set Name =  Text Encoding . get Instance Of (  )  . get Value For Id ( text Encoding )  ;   Charset Encoder encoder =  Charset . for Name ( char Set Name )  . new Encoder (  )  ;  if  ( encoder . can Encode (  (  String )  value )  )  {     return true ;  } else {     logger . finest ( "" Failed  Trying to decode"" + value + ""with"" + encoder . to String (  )  )  ;      return false ;  }}"
8641,public  Configuration read Timeout ( int read Timeout ) { this . read Timeout = read Timeout ;  return this ; }
8642,"public  Blame Result call (  )  throws  Git API Exception{ check Callable (  )  ;  try  (  Blame Generator gen = new  Blame Generator ( repo, path )  )  {     if  ( diff Algorithm != null )          gen . set Diff Algorithm ( diff Algorithm )  ;      if  ( text Comparator != null )          gen . set Text Comparator ( text Comparator )  ;      if  ( follow File Renames != null )          gen . set Follow File Renames ( follow File Renames . boolean Value (  )  )  ;      if  ( reverse End Commits != null )          gen . reverse ( start Commit, reverse End Commits )  ;      else if  ( start Commit != null )          gen . push ( null, start Commit )  ;      else {         gen . prepare Head (  )  ;      }     return gen . compute Blame Result (  )  ;  } catch  ( IO Exception e )  {     throw new J Git Internal Exception ( e . get Message (  ) , e )  ;  }}"
8643,"public void has Child ( com . anychart . graphics . vector .  Element element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . has Child ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ; }"
8644,public  View get Content View (  ) { return  (  (  View Group )  get Window (  )  . find View By Id ( android . R . id . content )  )  . get Child At ( 0 )  ; }
8645,public static  History single ( @ Non Null  Object key ) { return empty Builder (  )  . push ( key )  . build (  )  ; }
8646,"public void select Marquee Stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . select Marquee Stroke (  )  ; "" )  ; }"
8647,public void set Membercnttd ( int membercnttd ) { this . membercnttd = membercnttd ; }
8648,"public static int [  ]  convert To Byte Code (  String instructions ) { if  ( instructions == null || instructions . trim (  )  . length (  )  == 0 )  {     return new int [ 0 ]  ;  } var splited Instructions = instructions . trim (  )  . split ( "" "" )  ;  var bytecode = new int [ splited Instructions . length ]  ;  for  ( var i = 0 ;  i < splited Instructions . length ;  i++ )  {     if  ( is Valid Instruction ( splited Instructions [ i ]  )  )  {         bytecode [ i ]  =  Instruction . value Of ( splited Instructions [ i ]  )  . get Int Value (  )  ;      } else if  ( is Valid Int ( splited Instructions [ i ]  )  )  {         bytecode [ i ]  =  Integer . parse Int ( splited Instructions [ i ]  )  ;      } else {         var error Message = "" Invalid instruction or number: "" + splited Instructions [ i ]  ;          throw new  Illegal Argument Exception ( error Message )  ;      } } return bytecode ; }"
8649,public boolean should Enable View (  ) { return false ; }
8650,"public static void init Db ( boolean use Mongo Db ) { if  ( use Mongo Db )  {     try {          Db Manager . connect (  )  ;      } catch  (  Parse Exception e )  {         LOGGER . error ( "" Error connecting to  Mongo DB"", e )  ;      } } else {      Db Manager . create Virtual Db (  )  ;  }}"
8651,public void set Text Over Image (  Char Sequence text Over Image ) { m Text Over Image = text Over Image ; }
8652,"public  Default Load Control create Default Load Control (  ) {  Assertions . check State ( !create Default Load Control Called )  ;  create Default Load Control Called = true ;  if  ( allocator == null )  {     allocator = new  Default Allocator ( /* trim On Reset= */     true, C . DEFAULT_BUFFER_SEGMENT_SIZE )  ;  } return new  Default Load Control ( allocator, min Buffer Audio Ms, min Buffer Video Ms, max Buffer Ms, buffer For Playback Ms, buffer For Playback After Rebuffer Ms, target Buffer Bytes, prioritize Time Over Size Thresholds, back Buffer Duration Ms, retain Back Buffer From Keyframe )  ; }"
8653,"public com . anychart . core . stock . indicators .  Stochastic k Period (  Number period ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . k Period ( %s )  ; "", period )  )  ;  return this ; }"
8654,public  Object validate (  String card ) { if  ( card == null || card . length (  )  == 0 )  {     return null ;  }  Object result = null ;  for  ( int i = 0 ;  i < card Types . size (  )  ;  i++ )  {      Code Validator type =  (  Code Validator )  card Types . get ( i )  ;      result = type . validate ( card )  ;      if  ( result != null )  {         return result ;      } } return null ; }
8655,"public com . anychart . core . resource . resourcelist .  Settings With Margin margin (  Number value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
8656,"public void deregister Observer ( SOAP List Observer< Type To Return, SOAP Fault Type> observer ) { super . deregister Observer ( observer )  ;  list Observers . remove ( observer )  ; }"
8657,public void remove Feature (  Geo Json Feature feature ) { //  Check if given feature is stored super . remove Feature ( feature )  ;  if  ( super . get Features (  )  . contains ( feature )  )  {     feature . delete Observer ( this )  ;  }}
8658,"private static void replace Manifest Application Name (  Document document ) { //  Write meta-data information //  Get the root node  Element root = document . get Root Element (  )  ;   Element application Element = root . element ( ""application"" )  ;   String real Application Class Name = application Element . attribute Value ( ""name"" )  ;  if  ( null == real Application Class Name )  {     real Application Class Name = """" ;  } application Element . add Attribute (  String Utils . is Empty ( real Application Class Name )  ? ""android:name"" : ""name"", ""android . taobao . atlas . startup .  Atlas Bridge Application"" )  ;   Element meta Data = application Element . add Element ( ""meta-data"" )  ;  meta Data . add Attribute ( ""android:name"", ""REAL_APPLICATION"" )  ;  meta Data . add Attribute ( ""android:value"", real Application Class Name )  ; }"
8659,"public com . anychart . core .  Series Point get Point (  Number index ) { return new com . anychart . core .  Series Point (  String . format (  Locale . US, js Base + "" . get Point ( %s ) "", index )  )  ; }"
8660,"public void has Parent (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . has Parent (  )  ; "" )  ; }"
8661,synchronized void invoke With Lock (  Callback0 callback ) { callback . on Call (  )  ; }
8662,public  Checkout Command set All Paths ( boolean all ) { checkout All Paths = all ;  return this ; }
8663,"public  Joiner skip Nulls (  ) { return new  Joiner ( this )  {     @ Override     public <A extends  Appendable> A append To ( A appendable,  Iterator<?> parts )  throws IO Exception {         check Not Null ( appendable, ""appendable"" )  ;          check Not Null ( parts, ""parts"" )  ;          while  ( parts . has Next (  )  )  {              Object part = parts . next (  )  ;              if  ( part != null )  {                 appendable . append (  Joiner . this . to String ( part )  )  ;                  break ;              }         }         while  ( parts . has Next (  )  )  {              Object part = parts . next (  )  ;              if  ( part != null )  {                 appendable . append ( separator )  ;                  appendable . append (  Joiner . this . to String ( part )  )  ;              }         }         return appendable ;      }     @ Override     public  Joiner use For Null (  String null Text )  {         throw new  Unsupported Operation Exception ( ""already specified skip Nulls"" )  ;      }     @ Override     public  Map Joiner with Key Value Separator (  String kvs )  {         throw new  Unsupported Operation Exception ( ""can't use  . skip Nulls (  )  with maps"" )  ;      } } ; }"
8664,"public void bind Drop Down View ( T item, int position,  View view ) { bind View ( item, position, view )  ; }"
8665,"public com . anychart . core . ui .  Timeline position ( com . anychart . enums .  Anchor position ) { return new com . anychart . core . ui .  Timeline (  String . format (  Locale . US, js Base + "" . position ( %s ) "",  ( position != null )  ? position . get Js Base (  )  : null )  )  ; }"
8666,"public static  Set Options merge Fields ( @ Non Null  List< String> fields ) {  Set<com . google . firebase . firestore . model .  Field Path> field Paths = new  Hash Set<> (  )  ;  for  (  String field : fields )  {     field Paths . add (  Field Path . from Dot Separated Path ( field )  . get Internal Path (  )  )  ;  } return new  Set Options ( true,  Field Mask . from Set ( field Paths )  )  ; }"
8667,public boolean is Exported (  ) { boolean default Value = !intent Filters . is Empty (  )  ;  return  ( attributes . contains Key ( EXPORTED )  ?  Boolean . parse Boolean ( attributes . get ( EXPORTED )  )  : default Value )  ; }
8668,"public com . anychart . core . cartesian . series .  Line3d top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
8669,public void set Interceptors (  List< Client Http Request Interceptor> interceptors ) { this . interceptors = interceptors ; }
8670,"public com . anychart . core . stock . scrollerseries .  Candlestick top (  Number top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", top )  )  ;  return this ; }"
8671,public  Object Mapper get Object Mapper (  ) { return this . object Mapper ; }
8672,"public static  List< Lat Lng> simplify (  List< Lat Lng> poly, double tolerance ) { final int n = poly . size (  )  ;  if  ( n < 1 )  {     throw new  Illegal Argument Exception ( "" Polyline must have at least 1 point"" )  ;  } if  ( tolerance <= 0 )  {     throw new  Illegal Argument Exception ( "" Tolerance must be greater than zero"" )  ;  } boolean closed Polygon = is Closed Polygon ( poly )  ;   Lat Lng last Point = null ;  //  Check if the provided poly is a closed polygon if  ( closed Polygon )  {     //  Add a small offset to the last point for  Douglas- Peucker on polygons  ( see #201 )      final double OFFSET = 0 . 00000000001 ;      last Point = poly . get ( poly . size (  )  - 1 )  ;      //  Lat Lng . latitude and  . longitude are immutable, so replace the last point     poly . remove ( poly . size (  )  - 1 )  ;      poly . add ( new  Lat Lng ( last Point . latitude + OFFSET, last Point . longitude + OFFSET )  )  ;  } int idx ;  int max Idx = 0 ;   Stack<int [  ] > stack = new  Stack<> (  )  ;  double [  ]  dists = new double [ n ]  ;  dists [ 0 ]  = 1 ;  dists [ n - 1 ]  = 1 ;  double max Dist ;  double dist = 0 . 0 ;  int [  ]  current ;  if  ( n > 2 )  {     int [  ]  stack Val = new int [  ]  { 0,  ( n - 1 )  } ;      stack . push ( stack Val )  ;      while  ( stack . size (  )  > 0 )  {         current = stack . pop (  )  ;          max Dist = 0 ;          for  ( idx = current [ 0 ]  + 1 ;  idx < current [ 1 ]  ;  ++idx )  {             dist = distance To Line ( poly . get ( idx ) , poly . get ( current [ 0 ]  ) , poly . get ( current [ 1 ]  )  )  ;              if  ( dist > max Dist )  {                 max Dist = dist ;                  max Idx = idx ;              }         }         if  ( max Dist > tolerance )  {             dists [ max Idx ]  = max Dist ;              int [  ]  stack Val Cur Max = { current [ 0 ] , max Idx } ;              stack . push ( stack Val Cur Max )  ;              int [  ]  stack Val Max Cur = { max Idx, current [ 1 ]  } ;              stack . push ( stack Val Max Cur )  ;          }     } } if  ( closed Polygon )  {     //  Replace last point w/ offset with the original last point to re-close the polygon     poly . remove ( poly . size (  )  - 1 )  ;      poly . add ( last Point )  ;  } //  Generate the simplified line idx = 0 ;   Array List< Lat Lng> simplified Line = new  Array List<> (  )  ;  for  (  Lat Lng l : poly )  {     if  ( dists [ idx ]  != 0 )  {         simplified Line . add ( l )  ;      }     idx++ ;  } return simplified Line ; }"
8673,public static  Builder builder (  ) { return new  Auto Value_ Transport Context .  Builder (  )  . set Priority (  Priority . DEFAULT )  ; }
8674,public  String get Cert Nonce Seed (  ) { return cert Nonce Seed ; }
8675,"public void remove Item With Delay ( @ Non Null final T item, @ Int Range ( from = 0 )  long delay, final boolean permanent ) { m Handler . post Delayed ( new  Runnable (  )  {     @ Override     public void run (  )  {         perform Remove ( item, permanent )  ;      } }, delay )  ; }"
8676,"public  List<I Sectionable> get Section Items ( @ Non Null I Header header ) {  List<I Sectionable> section Items = new  Array List<> (  )  ;  int start Position = get Global Position Of ( header )  ;  T item = get Item ( ++start Position )  ;  while  ( has Same Header ( item, header )  )  {     section Items . add (  ( I Sectionable )  item )  ;      item = get Item ( ++start Position )  ;  } return section Items ; }"
8677,public  Values values (  ) { if  (  Collections . allocate Iterators )      return new  Values ( this )  ;  if  ( values1 == null )  {     values1 = new  Values ( this )  ;      values2 = new  Values ( this )  ;  } if  ( !values1 . valid )  {     values1 . reset (  )  ;      values1 . valid = true ;      values2 . valid = false ;      return values1 ;  } values2 . reset (  )  ;  values2 . valid = true ;  values1 . valid = false ;  return values2 ; }
8678,"public void read (  Byte Buffer byte Buffer )  throws  Invalid Frame Exception,  Invalid Data Type Exception{  String identifier = read Identifier ( byte Buffer )  ;  // Is this a valid identifier? if  ( !is Valid ID3v2 Frame Identifier ( identifier )  )  {     // If not valid move file pointer back to one byte after     //the original check so can try again .      logger . config ( get Logging Filename (  )  + "":"" + "" Invalid identifier:"" + identifier )  ;      byte Buffer . position ( byte Buffer . position (  )  -  ( get Frame Id Size (  )  - 1 )  )  ;      throw new  Invalid Frame Identifier Exception ( get Logging Filename (  )  + "":"" + identifier + "":is not a valid ID3v2 . 30 frame"" )  ;  } // Get the frame size, adjusted as necessary get Frame Size ( byte Buffer )  ;  // Read the flag bytes status Flags = new  Status Flags ( byte Buffer . get (  )  )  ;  encoding Flags = new  Encoding Flags ( byte Buffer . get (  )  )  ;  // Read extra bits appended to frame header for various encodings // These are not included in header size but are included in frame size but wont be read when we actually //try to read the frame body data int extra Header Bytes Count = 0 ;  int data Length Size = -1 ;  if  (  (  (  Encoding Flags )  encoding Flags )  . is Grouping (  )  )  {     extra Header Bytes Count = ID3v24 Frame . FRAME_GROUPING_INDICATOR_SIZE ;      group Identifier = byte Buffer . get (  )  ;  } if  (  (  (  Encoding Flags )  encoding Flags )  . is Encryption (  )  )  {     // Read the  Encryption byte, but do nothing with it     extra Header Bytes Count += ID3v24 Frame . FRAME_ENCRYPTION_INDICATOR_SIZE ;      encryption Method = byte Buffer . get (  )  ;  } if  (  (  (  Encoding Flags )  encoding Flags )  . is Data Length Indicator (  )  )  {     // Read the sync safe size field     data Length Size = ID3 Sync Safe Integer . buffer To Value ( byte Buffer )  ;      extra Header Bytes Count += FRAME_DATA_LENGTH_SIZE ;      logger . config ( get Logging Filename (  )  + "":"" + "" Frame  Size  Is:"" + frame Size + ""  Data  Length  Size:"" + data Length Size )  ;  } // Work out the real size of the frame Body data int real Frame Size = frame Size - extra Header Bytes Count ;  // Create  Buffer that only contains the body of this frame rather than the remainder of tag  Byte Buffer frame Body Buffer = byte Buffer . slice (  )  ;  frame Body Buffer . limit ( real Frame Size )  ;  // Do we need to synchronize the frame body int sync Size = real Frame Size ;  if  (  (  (  Encoding Flags )  encoding Flags )  . is Unsynchronised (  )  )  {     // We only want to synchronize the buffer up to the end of this frame  ( remember this     //buffer contains the remainder of this tag not just this frame ) , and we cannot just     //create a new buffer because when this method returns the position of the buffer is used     //to look for the next frame, so we need to modify the buffer .   The action of synchronizing causes     //bytes to be dropped so the existing buffer is large enough to hold the modifications     frame Body Buffer = ID3 Unsynchronization . synchronize ( frame Body Buffer )  ;      sync Size = frame Body Buffer . limit (  )  ;      logger . config ( get Logging Filename (  )  + "":"" + "" Frame  Size  After  Syncing is:"" + sync Size )  ;  } // Read the body data try {     if  (  (  (  Encoding Flags )  encoding Flags )  . is Compression (  )  )  {         frame Body Buffer = ID3 Compression . uncompress ( identifier, get Logging Filename (  ) , byte Buffer, data Length Size, real Frame Size )  ;          if  (  (  (  Encoding Flags )  encoding Flags )  . is Encryption (  )  )  {             frame Body = read Encrypted Body ( identifier, frame Body Buffer, data Length Size )  ;          } else {             frame Body = read Body ( identifier, frame Body Buffer, data Length Size )  ;          }     } else if  (  (  (  Encoding Flags )  encoding Flags )  . is Encryption (  )  )  {         frame Body Buffer = byte Buffer . slice (  )  ;          frame Body Buffer . limit ( real Frame Size )  ;          frame Body = read Encrypted Body ( identifier, byte Buffer, frame Size )  ;      } else {         frame Body = read Body ( identifier, frame Body Buffer, sync Size )  ;      }     if  ( ! ( frame Body instanceof ID3v24 Frame Body )  )  {         logger . config ( get Logging Filename (  )  + "":"" + "" Converted frame body with:"" + identifier + "" to deprecated framebody"" )  ;          frame Body = new  Frame Body Deprecated (  (  Abstract ID3v2 Frame Body )  frame Body )  ;      } } finally {     // Update position of main buffer, so no attempt is made to reread these bytes     byte Buffer . position ( byte Buffer . position (  )  + real Frame Size )  ;  }}"
8679,"public static void encode ( byte [  ]  dst, int offset,  String s ) { final int length = s . length (  )  ;  for  ( int i = 0 ;  i < length ;  i++ )  {     char ch = s . char At ( i )  ;      if  ( ch != 0 && ch <= 127 )  {         // U+0000 uses two bytes .          dst [ offset++ ]  =  ( byte )  ch ;      } else if  ( ch <= 2047 )  {         dst [ offset++ ]  =  ( byte )   ( 0xc0 |  ( 0x1f &  ( ch >> 6 )  )  )  ;          dst [ offset++ ]  =  ( byte )   ( 0x80 |  ( 0x3f & ch )  )  ;      } else {         dst [ offset++ ]  =  ( byte )   ( 0xe0 |  ( 0x0f &  ( ch >> 12 )  )  )  ;          dst [ offset++ ]  =  ( byte )   ( 0x80 |  ( 0x3f &  ( ch >> 6 )  )  )  ;          dst [ offset++ ]  =  ( byte )   ( 0x80 |  ( 0x3f & ch )  )  ;      } }}"
8680,"public static  Object set Object Prop (  Object obj,  String property,  Object value,  Context cx ) {  Scriptable sobj = to Object Or Null ( cx, obj )  ;  if  ( sobj == null )  {     throw undef Write Error ( obj, property, value )  ;  } return set Object Prop ( sobj, property, value, cx )  ; }"
8681,"public void share With Linked In (  String caption Or Options,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Linked In ( %s, %s )  ; "", wrap Quotes ( caption Or Options ) , wrap Quotes ( description )  )  )  ; }"
8682,"protected long get Free Bytes ( UUID storage Uuid )  throws IO Exception{  Free And Total Bytes Pair free And Total Bytes Pair = free And Total Bytes Map . get ( storage Uuid )  ;  if  ( free And Total Bytes Pair == null )  {     throw new IO Exception ( ""get Free Bytes with non-existent storage Uuid!  Did you forget to call"" + "" set Storage Device Free And Total Bytes?"" )  ;  } return free And Total Bytes Pair . free Bytes (  )  ; }"
8683,"public com . anychart . core . ui .  Crosshair Label word Wrap ( com . anychart . enums .  Word Wrap mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . word Wrap ( %s )  ; "",  ( mode != null )  ? mode . get Js Base (  )  : null )  )  ;  return this ; }"
8684,"public synchronized void remove Connection ( final  String str ) { if  ( str != null && str . length (  )  > 0 )  {     final  List< String> connections = new  Array List<> (  Arrays . as List ( connections (  )  )  )  ;      if  ( connections . remove ( str )  )  {         preferences_ . edit (  )  . put String ( CONNECTIONS_PREFERENCE, join ( connections, DELIMITER )  )  . apply (  )  ;      } }}"
8685,public final int get Status Code (  ) { return m Status Code ; }
8686,public boolean was Download Interrupted (  Throwable throwable ) { return false ; }
8687,"public  Color set ( int rgba ) { rgba8888 To Color ( this, rgba )  ;  return this ; }"
8688,"public  Tiled Map load (  String file Name ) { return load ( file Name, new  Tmx Map Loader .  Parameters (  )  )  ; }"
8689,public  String get Preview Property Name (  ) { return this . preview Property Name ; }
8690,public int get Allowed Network Types (  ) { return allowed Network Types ; }
8691,"public com . anychart . charts .  Stock width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
8692,"public static  Immutable Long Array of ( long e0, long e1 ) { return new  Immutable Long Array ( new long [  ]  { e0, e1 } )  ; }"
8693,"private void modify Timeout In Test Annotation (  String path, boolean add Timeout )  throws IO Exception{  Function< String,  String> transform =  line -> {      String original = add Timeout ? ""@ Test"" : ""@ Test ( timeout = 100000 ) "" ;       String replacement = add Timeout ? ""@ Test ( timeout = 100000 ) "" : ""@ Test"" ;      return line . replace ( original, replacement )  + '\n' ;  } ;  rewrite File With Transform ( path, transform )  ; }"
8694,public  Grid Point2 sub (  Grid Point2 other ) { x -= other . x ;  y -= other . y ;  return this ; }
8695,"public void set Friction ( float friction ) { jni Set Friction ( addr, friction )  ; }"
8696,"public final int get Charging Source (  ) {  Intent battery Status = get Battery Status Intent (  )  ;  int charge Plug = battery Status . get Int Extra (  Battery Manager . EXTRA_PLUGGED, 0 )  ;  switch ( charge Plug )  {     case  Battery Manager . BATTERY_PLUGGED_AC:         return  Charging Via . AC ;      case  Battery Manager . BATTERY_PLUGGED_USB:         return  Charging Via . USB ;      case  Battery Manager . BATTERY_PLUGGED_WIRELESS:         return  Charging Via . WIRELESS ;      default:         return  Charging Via . UNKNOWN_SOURCE ;  }}"
8697,"private void verify Metadata Based Output (  Path root,  Function< String,  String> filename Extractor )  throws  Exception{  Path metadata Path = root . resolve ( ""metadata . txt"" )  ;   Assert . assert True (  Files . exists ( metadata Path )  )  ;  for  (  String line :  Files . read All Lines ( metadata Path )  )  {      String filename = filename Extractor . apply ( line )  ;       Path expected Path = root . resolve ( filename )  ;       Assert . assert True ( "" Assert  Exists  Failed: "" + expected Path,  Files . exists ( expected Path )  )  ;  }}"
8698,public  Lazy List<T> list Lazy (  ) { return build (  )  . list Lazy (  )  ; }
8699,"public com . anychart . standalones . axes .  Radial stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8700,"public void marker Annotate (  String annotation Key,  Double [  ]  annotation Value ) { m Annotations . put ( annotation Key, annotation Value )  ; }"
8701,"private  Project Build File Parser get Parser For Build File (  Path build File )  throws IO Exception,  Build File Parse Exception{ @ Nullable  String first Line =  Files . as Char Source ( build File . to File (  ) ,  Charsets . UTF_8 )  . read First Line (  )  ;   Syntax syntax = default Syntax ;  if  ( first Line != null && first Line . starts With ( SYNTAX_MARKER_START )  )  {      String syntax Name = first Line . substring ( SYNTAX_MARKER_START . length (  )  )  ;      syntax =  Syntax . from ( syntax Name )  . or Else Throw (  (  )  ->  Build File Parse Exception . create For Unknown Parse Error (  String . format ( "" Unrecognized syntax  [ %s ]  requested for build file  [ %s ] "", syntax Name, build File )  )  )  ;  } @ Nullable  Project Build File Parser parser = parsers . get ( syntax )  ;  if  ( parser == null )  {     throw  Build File Parse Exception . create For Unknown Parse Error (  String . format ( "" Syntax  [ %s ]  is not supported for build file  [ %s ] "", syntax, build File )  )  ;  } return parser ; }"
8702,"public static  Run Info instantiate From Skylark (  Skylark Dict< String,  String> env,  Object args )  throws  Eval Exception{  Map< String,  String> validated Env = env . get Contents (  String . class,  String . class, ""environment"" )  ;   Command Line Args command Line Args ;  if  ( args instanceof  Command Line Args Builder )  {     command Line Args =  (  (  Command Line Args Builder )  args )  . build (  )  ;  } else if  ( args instanceof  Command Line Args )  {     command Line Args =  (  Command Line Args )  args ;  } else if  ( args instanceof  Skylark List )  {      Immutable List< Object> validated Args =  Buck Skylark Types . to Java List (  (  Skylark List<?> )  args,  Object . class, ""getting args"" )  ;      command Line Args =  Command Line Args Factory . from ( validated Args )  ;  } else {     throw new  Human Readable Exception ( ""%s must either be a list of arguments, or an args (  )  object"" )  ;  } return new  Immutable Run Info ( validated Env, command Line Args )  ; }"
8703,public void set On Crop Image Complete Listener (  On Crop Image Complete Listener listener ) { m On Crop Image Complete Listener = listener ; }
8704,"public void start Radius (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . start Radius (  )  ; "" )  ; }"
8705,"public com . anychart . charts .  Pareto no Data (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . no Data ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8706,public boolean set Read Position ( int sample Index ) { return metadata Queue . set Read Position ( sample Index )  ; }
8707,"public void handle Conversation Click (  Message message ) {  Intent intent = new  Intent ( context,  Conversation Activity . class )  ;  intent . put Extra ( ""take Order"", true )  ;  if  ( message . get Group Id (  )  == null )  {     intent . put Extra ( ""user Id"", message . get Contact Ids (  )  )  ;  } else {     intent . put Extra ( ""group Id"", message . get Group Id (  )  )  ;  } context . start Activity ( intent )  ; }"
8708,public static boolean is Htc (  ) { return ROM_HTC [ 0 ]  . equals ( get Rom Info (  )  . name )  ; }
8709,public  Object get Animated Value (  ) { if  ( m Values != null && m Values . length > 0 )  {     return m Values [ 0 ]  . get Animated Value (  )  ;  } //  Shouldn't get here ;  should always have values unless  Value Animator was set up wrong return null ; }
8710,public synchronized int size (  ) { return element Count ; }
8711,"public com . anychart . core . utils .  Padding set (  Number [  ]  value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set ( %s, %s, %s, %s )  ; "",  Arrays . to String ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
8712,"public  Mesh Part part ( final  String id, int primitive Type ) { return part ( id, primitive Type, new  Mesh Part (  )  )  ; }"
8713,"public static void find2 Methods (  Object self,  String super Method,  String this Method, int index,  String desc, java . lang . reflect .  Method [  ]  methods ) { methods [ index + 1 ]  = this Method == null ? null : find Method ( self, this Method, desc )  ;  methods [ index ]  = find Super Method ( self, super Method, desc )  ; }"
8714,"public void on Create ( SQ Lite Database db ) { // create session Data table db . exec SQL (  Sonic Data Helper . CREATE_TABLE_SQL )  ;  // upgrade SP if need ( session data save in SP on sdk 1 . 0 )  on Upgrade ( db, -1, SONIC_DATABASE_VERSION )  ;  do Upgrade ( db, SONIC_DATABASE_FIRST_VERSION, SONIC_DATABASE_VERSION )  ; }"
8715,"public com . anychart . core . ui .  Scroll Bar slider Fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . slider Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
8716,"public static void add Pending Http Response With Content Type ( int status Code,  String response Body,  Header content Type ) { get Fake Http Layer (  )  . add Pending Http Response ( status Code, response Body, content Type )  ; }"
8717,public long get Report Delay Millis (  ) { return report Delay Millis ; }
8718,"public com . anychart . core . utils .  Quarter bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
8719,"private static void create Icon Style (  Xml Pull Parser parser,  Kml Style style )  throws  Xml Pull Parser Exception, IO Exception{ int event Type = parser . get Event Type (  )  ;  while  ( ! ( event Type == END_TAG && parser . get Name (  )  . equals ( "" Icon Style"" )  )  )  {     if  ( event Type == START_TAG )  {         if  ( parser . get Name (  )  . equals ( ICON_STYLE_HEADING )  )  {             style . set Heading (  Float . parse Float ( parser . next Text (  )  )  )  ;          } else if  ( parser . get Name (  )  . equals ( ICON_STYLE_URL )  )  {             set Icon Url ( parser, style )  ;          } else if  ( parser . get Name (  )  . equals ( ICON_STYLE_HOTSPOT )  )  {             set Icon Hot Spot ( parser, style )  ;          } else if  ( parser . get Name (  )  . equals ( ICON_STYLE_SCALE )  )  {             style . set Icon Scale (  Double . parse Double ( parser . next Text (  )  )  )  ;          } else if  ( parser . get Name (  )  . equals ( COLOR_STYLE_COLOR )  )  {             style . set Marker Color ( parser . next Text (  )  )  ;          } else if  ( parser . get Name (  )  . equals ( COLOR_STYLE_MODE )  )  {             style . set Icon Color Mode ( parser . next Text (  )  )  ;          }     }     event Type = parser . next (  )  ;  }}"
8720,public  Builder set Button (  Share Messenger Action Button button ) { this . button = button ;  return this ; }
8721,"private void fill Column Title (  Canvas canvas,  Column Info info, int left ) { int top =  ( int )   ( info . top * config . get Zoom (  )  )  +  ( config . is Fixed Title (  )  ? show Rect . top : scale Rect . top )  ;  int right =  ( int )   ( left + info . width * config . get Zoom (  )  )  ;  int bottom =  ( int )   ( top + info . height * config . get Zoom (  )  )  ;  if  (  Draw Utils . is Mix Rect ( show Rect, left, top, right, bottom )  )  {     if  ( !is Click Point && on Column Click Listener != null )  {         if  (  Draw Utils . is Click ( left, top, right, bottom, click Point )  )  {             is Click Point = true ;              click Column Info = info ;              click Point . set ( -1, -1 )  ;          }     }      Paint paint = config . get Paint (  )  ;      temp Rect . set ( left, top, right, bottom )  ;      if  ( config . get Table Grid Format (  )  != null )  {         config . get Column Title Grid Style (  )  . fill Paint ( paint )  ;          int position = table Data . get Child Columns (  )  . index Of ( info . column )  ;          config . get Table Grid Format (  )  . draw Column Title Grid ( canvas, temp Rect, info . column, position, paint )  ;      }     table Data . get Title Draw Format (  )  . draw ( canvas, info . column, temp Rect, config )  ;  }}"
8722,"public final void smooth Scroll By ( int dx, int dy ) { m Scroller . start Scroll ( get Scroll X (  ) , get Scroll Y (  ) , dx, dy )  ;  invalidate (  )  ;  m Is Layout Dirty = true ; }"
8723,private static boolean is Timed (  Method method ) { return is Long Time Unit Based ( method )  || is Duration Based ( method )  ; }
8724,public  String get Content (  ) { return get Body (  )  . get User Friendly Value (  )  ; }
8725,"public  Resume Failed Cause get Cause Or Throw (  ) { if  ( failed Cause == null )  {     throw new  Illegal State Exception ( "" No cause find with resumable: "" + resumable )  ;  } return this . failed Cause ; }"
8726,"private boolean scroll And Focus ( int direction, int top, int bottom ) { boolean handled = true ;  int height = get Height (  )  ;  int container Top = get Scroll Y (  )  ;  int container Bottom = container Top + height ;  boolean up = direction ==  View . FOCUS_UP ;   View new Focused = find Focusable View In Bounds ( up, top, bottom )  ;  if  ( new Focused == null )  {     new Focused = this ;  } if  ( top >= container Top && bottom <= container Bottom )  {     handled = false ;  } else {     int delta = up ?  ( top - container Top )  :  ( bottom - container Bottom )  ;      do Scroll Y ( delta )  ;  } if  ( new Focused != find Focus (  )  )      new Focused . request Focus ( direction )  ;  return handled ; }"
8727,public  Color State List get Support Progress Background Tint List (  ) { return m Progress Tint Info . m Progress Background Tint ; }
8728,"public void render (  ) { LOGGER . info ( "" Update  Render  Game  Component "" )  ;  //  Process  Render .   Int Stream . range ( 0, num Entities )  . filter (  i -> render Components . length > i && render Components [ i ]  != null )  . for Each (  i -> render Components [ i ]  . render (  )  )  ; }"
8729,public  List< Session State> get Previous Session States (  ) { return previous States ; }
8730,"public  String get And Cache Log Source Name (  ) { //  Order of precedence: // 1 .   If SDK build instrument enforce default value, always use build instrumented log source .  // 2 .   If  Remote Config is available and RC value is valid, return RC value and store in cache .  // 3 .   Otherwise, return cache value .  // 4 .   If cache value does not exist, return SDK default value .   Log Source Name config Flag =  Log Source Name . get Instance (  )  ;  if  (  Build Config . ENFORCE_DEFAULT_LOG_SRC )  {     return config Flag . get Default (  )  ;  } //  Fetches value from  Firebase  Remote  Config .  A value of -1 denotes the value to be invalid .   String remote Config Flag = config Flag . get Remote Config Flag (  )  ;  long remote Config Value = remote Config Flag == null ? -1 L : remote Config Manager . get Remote Config Value Or Default ( remote Config Flag, -1 L )  ;  //  Honors valid log source value from  Remote  Config and saves in persistent data store .   String device Cache Flag = config Flag . get Device Cache Flag (  )  ;  if  (  Log Source Name . is Log Source Known ( remote Config Value )  )  {      String log Source Name =  Log Source Name . get Log Source Name ( remote Config Value )  ;      if  ( log Source Name != null )  {         device Cache Manager . set Value ( device Cache Flag, log Source Name )  ;          return log Source Name ;      } } //  Honors shared preference over SDK default value .   Optional< String> device Cache Value = get Device Cache String ( config Flag )  ;  if  ( device Cache Value . is Available (  )  )  {     return device Cache Value . get (  )  ;  } return config Flag . get Default (  )  ; }"
8731,public synchronized long file Count (  ) { return file Count ; }
8732,"public com . anychart . standalones .  Project Timeline row Even Fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Even Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
8733,public int hash Code (  ) { int hc = get Email Address (  )  . hash Code (  )  ;  hc *= 31 ;  hc +=  ( int )   ( when / 1000 L )  ;  return hc ; }
8734,"private static  View find View Closest To Start (  Layout Manager layout Manager,  Orientation Helper helper ) { int child Count = layout Manager . get Child Count (  )  ;  if  ( child Count == 0 )  {     return null ;  }  View closest Child = null ;  final int start = helper . get Start After Padding (  )  ;  int abs Closest =  Integer . MAX_VALUE ;  for  ( int i = 0 ;  i < child Count ;  i++ )  {     final  View child = layout Manager . get Child At ( i )  ;      int child Start = helper . get Decorated Start ( child )  ;      int abs Distance =  Math . abs ( child Start - start )  ;      /** if child start is closer than previous closest, set it as closest * */     if  ( abs Distance < abs Closest )  {         abs Closest = abs Distance ;          closest Child = child ;      } } return closest Child ; }"
8735,"public  Image Builder new Image (  String filename ) {  String path = ""images/"" + filename ;  int width ;  int height ;  try {      Bitmap Factory .  Options options = new  Bitmap Factory .  Options (  )  ;      options . in Just Decode Bounds = true ;       Bitmap Factory . decode Stream ( asset Manager . open ( path ) , null, options )  ;      width = options . out Width ;      height = options . out Height ;  } catch  (  Exception e )  {     throw new  Runtime Exception ( "" Unable to load "" + filename, e )  ;  }  String id = filename . substring ( 0, filename . last Index Of ( ' . ' )  )  ;   String link = ""file:///android_asset/"" + path ;  return new  Image Builder ( id, link, id, /* default title == id */ width, height )  ; }"
8736,public static void write Debug Logs ( boolean write Debug Logs ) { L . write Debug Logs = write Debug Logs ; }
8737,"private void validate Return Type (  Executable Element method ) {  Type Mirror return Type = method . get Return Type (  )  ;   Declared Type required Return Type = injector Factory Of ( types . get Wildcard Type ( null, null )  )  ;  if  ( !types . is Same Type ( return Type, required Return Type )  )  {     messager . print Message (  Kind . ERROR,  String . format ( ""%s should bind %s, not %s .   See https://dagger . dev/android"", method, required Return Type, return Type ) , method )  ;  }}"
8738,protected void set Instructions ( byte [  ]  instructions ) { this . instructions = instructions ; }
8739,"public  Content Metadata Mutations set (  String name, byte [  ]  value ) { return check And Set ( name,  Arrays . copy Of ( value, value . length )  )  ; }"
8740,public static int get Screen Width (  Context context ) {  Window Manager window Manager =  (  Window Manager )  context . get System Service (  Context . WINDOW_SERVICE )  ;  // 创建了一张白纸  Display Metrics out Metrics = new  Display Metrics (  )  ;  // 给白纸设置宽高 window Manager . get Default Display (  )  . get Metrics ( out Metrics )  ;  return out Metrics . width Pixels ; }
8741,"public T optional Center Inside (  ) { return optional Scale Only Transform (  Downsample Strategy . CENTER_INSIDE, new  Center Inside (  )  )  ; }"
8742,"public com . anychart . core . gantt . elements .  Baselines Element stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8743,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
8744,public boolean is Super (  ) { return super . is Super (  )  ; }
8745,"public static  Pair< Label,  String> from Identifier (  String identifier ) { int idx = identifier . last Index Of ( ':' )  ;  if  ( idx == -1 || idx == identifier . length (  )  - 1 )  {     return null ;  } try {     return new  Pair<> (  Label . parse Absolute ( identifier . substring ( 0, idx ) ,  Immutable Map . of (  )  ) , identifier . substring ( idx + 1 )  )  ;  } catch  (  Label Syntax Exception e )  {     return null ;  }}"
8746,public  Multimap With Proto Values Fluent Assertion<M> ignoring Repeated Field Order Of Field Descriptors For Values (  Iterable< Field Descriptor> field Descriptors ) { return using Config ( config . ignoring Repeated Field Order Of Field Descriptors ( field Descriptors )  )  ; }
8747,"public com . anychart . core . annotations .  Horizontal Line bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
8748,public void request Disallow Intercept Touch Event ( boolean disallow Intercept ) { if  ( get Parent (  )  != null )  {     get Parent (  )  . request Disallow Intercept Touch Event ( disallow Intercept )  ;  }}
8749,"public void initialize (  Application Listener listener,  Android Application Configuration config ) { init ( listener, config, false )  ; }"
8750,"public void all Formatted Flags With Valid Bits (  ) { //  Highest valid flag is 0x20 .   List< String> formatted Flags = new  Array List<> ( 0x40 )  ;  for  ( byte i = 0 ;  i < 0x40 ;  i++ )  formatted Flags . add (  Http2 . INSTANCE . format Flags ( TYPE_HEADERS, i )  )  ;  assert That ( formatted Flags )  . contains Exactly ( """", ""END_STREAM"", ""00000010"", ""00000011"", ""END_HEADERS"", ""END_STREAM|END_HEADERS"", ""00000110"", ""00000111"", ""PADDED"", ""END_STREAM|PADDED"", ""00001010"", ""00001011"", ""00001100"", ""END_STREAM|END_HEADERS|PADDED"", ""00001110"", ""00001111"", ""00010000"", ""00010001"", ""00010010"", ""00010011"", ""00010100"", ""00010101"", ""00010110"", ""00010111"", ""00011000"", ""00011001"", ""00011010"", ""00011011"", ""00011100"", ""00011101"", ""00011110"", ""00011111"", ""PRIORITY"", ""END_STREAM|PRIORITY"", ""00100010"", ""00100011"", ""END_HEADERS|PRIORITY"", ""END_STREAM|END_HEADERS|PRIORITY"", ""00100110"", ""00100111"", ""00101000"", ""END_STREAM|PRIORITY|PADDED"", ""00101010"", ""00101011"", ""00101100"", ""END_STREAM|END_HEADERS|PRIORITY|PADDED"", ""00101110"", ""00101111"", ""00110000"", ""00110001"", ""00110010"", ""00110011"", ""00110100"", ""00110101"", ""00110110"", ""00110111"", ""00111000"", ""00111001"", ""00111010"", ""00111011"", ""00111100"", ""00111101"", ""00111110"", ""00111111"" )  ; }"
8751,public static  Algorithm Type from Value ( final short method ) { switch ( method )  {     default:     case 0x0000:         return NONE ;      case 0x0001:         return FIPS_P_256_ELLIPTIC_CURVE ;  }}
8752,public void set Padding ( float padding ) { if  ( m Padding != padding )  {     m Padding = padding ;      m Is Path Dirty = true ;      invalidate Self (  )  ;  }}
8753,public long get Limit (  ) { return limit ; }
8754,"public  Future<T> submit (  Callable<T> task, int priority ) { if  ( task == null )  {     throw new  Null Pointer Exception (  )  ;  }  Runnable Future<T> ftask = new Task For ( task, priority )  ;  execute ( ftask )  ;  return ftask ; }"
8755,public void set Show Progress Bar ( boolean show Progress Bar ) { if  ( m Show Progress Bar != show Progress Bar )  {     m Show Progress Bar = show Progress Bar ;      set Progress Bar Visibility (  )  ;  }}
8756,"public long apply Track Selection (  Track Selector Result new Track Selector Result, long position Us, boolean force Recreate Streams, boolean [  ]  stream Reset Flags ) { for  ( int i = 0 ;  i < new Track Selector Result . length ;  i++ )  {     may Retain Stream Flags [ i ]  = !force Recreate Streams && new Track Selector Result . is Equivalent ( track Selector Result, i )  ;  } //  Undo the effect of previous call to associate no-sample renderers with empty tracks // so the media Period receives back whatever it sent us before .  disassociate No Sample Renderers With Empty Sample Stream ( sample Streams )  ;  disable Track Selections In Result (  )  ;  track Selector Result = new Track Selector Result ;  enable Track Selections In Result (  )  ;  //  Disable streams on the period and get new streams for updated/newly-enabled tracks .   Track Selection Array track Selections = new Track Selector Result . selections ;  position Us = media Period . select Tracks ( track Selections . get All (  ) , may Retain Stream Flags, sample Streams, stream Reset Flags, position Us )  ;  associate No Sample Renderers With Empty Sample Stream ( sample Streams )  ;  //  Update whether we have enabled tracks and sanity check the expected streams are non-null .  has Enabled Tracks = false ;  for  ( int i = 0 ;  i < sample Streams . length ;  i++ )  {     if  ( sample Streams [ i ]  != null )  {          Assertions . check State ( new Track Selector Result . is Renderer Enabled ( i )  )  ;          // has Enabled Tracks should be true only when non-empty streams exists .          if  ( renderer Capabilities [ i ]  . get Track Type (  )  != C . TRACK_TYPE_NONE )  {             has Enabled Tracks = true ;          }     } else {          Assertions . check State ( track Selections . get ( i )  == null )  ;      } } return position Us ; }"
8757,public  Builder set Project Prefix Bytes ( com . google . protobuf .  Byte String value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } check Byte String Is Utf8 ( value )  ;  project Prefix_ = value ;  on Changed (  )  ;  return this ; }
8758,"public com . anychart . core . polar . series .  Range Column markers (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", value )  )  ;  return this ; }"
8759,"public com . anychart . core . resource . resourcelist .  Image Settings fitting Mode (  String mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fitting Mode ( %s )  ; "", wrap Quotes ( mode )  )  )  ;  return this ; }"
8760,public  Type get Type (  ) { return type ; }
8761,"public static void verify ( boolean expression,  String error Message Template, @ Check For Null  Object p1, int p2 ) { if  ( !expression )  {     throw new  Verify Exception ( lenient Format ( error Message Template, p1, p2 )  )  ;  }}"
8762,"public com . anychart . standalones .  Markers Factory stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8763,"public com . anychart . core .  Visual Base With Bounds bounds (  Number x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
8764,public  Immutable Set< Component Node> component Nodes (  Type Element component ) { return component Nodes (  )  . stream (  )  . filter (  node -> node . component Path (  )  . current Component (  )  . equals ( component )  )  . collect ( to Immutable Set (  )  )  ; }
8765,"public com . anychart . core . resource .  Grid odd Holiday Fill ( com . anychart . graphics . vector .  Fill value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . odd Holiday Fill ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
8766,public long get Number Of Frames (  ) { return number Of Frames ; }
8767,"public  String call (  )  throws  Remote Service Exception{ var current Time =  System . nano Time (  )  ;  //send the reply if  (  ( current Time - server Start Time )  * 1 . 0 /  ( 1000 * 1000 * 1000 )  < delay )  {     // Can use  Thread . sleep (  )  here to block and simulate a hung server     throw new  Remote Service Exception ( "" Delayed service is down"" )  ;  } return "" Delayed service is working"" ; }"
8768,public static  Double evaluate (  Context context ) { return new  Double ( context . get Position (  )  )  ; }
8769,"public  Model Without Hash_ on Visibility State Changed (  On Model Visibility State Changed Listener< Model Without Hash_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
8770,public void set EGL Config Chooser ( boolean need Depth ) { set EGL Config Chooser ( new  Simple EGL Config Chooser ( need Depth )  )  ; }
8771,"public com . anychart . charts .  Pie select Marquee Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8772,private void clear Messages (  ) { animation Handler . remove Messages ( MESSAGE_SCROLL )  ;  animation Handler . remove Messages ( MESSAGE_JUSTIFY )  ; }
8773,public static  Database Reference users Ref (  ) { return firebase Ref (  )  . child (  Users Path )  ; }
8774,public void remove Listeners ( double count ) {}
8775,public void remove (  )  throws  Unsupported Operation Exception{ throw new  Unsupported Operation Exception (  )  ; }
8776,"public com . anychart . core . annotations .  Fibonacci Timezones parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
8777,"public com . anychart . core . annotations .  Infinite Line markers (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", settings )  )  ;  return this ; }"
8778,"private static boolean check Key Presence ( @ Non Null  Merging Report .  Builder merging Report, @ Non Null  Xml Element xml Element ) {  Manifest Model .  Node Key Resolver node Key Resolver = xml Element . get Type (  )  . get Node Key Resolver (  )  ;   Immutable List< String> key Attributes Names = node Key Resolver . get Key Attributes Names (  )  ;  if  ( key Attributes Names . is Empty (  )  )  {     return false ;  } if  (  Strings . is Null Or Empty ( xml Element . get Key (  )  )  )  {     // we should have a key but we don't .       String message = key Attributes Names . size (  )  > 1 ?  String . format ( "" Missing one of the key attributes '%1$s' on element %2$s at %3$s"",  Joiner . on ( ',' )  . join ( key Attributes Names ) , xml Element . get Id (  ) , xml Element . print Position (  )  )  :  String . format ( "" Missing '%1$s' key attribute on element %2$s at %3$s"", key Attributes Names . get ( 0 ) , xml Element . get Id (  ) , xml Element . print Position (  )  )  ;      xml Element . add Message ( merging Report, ERROR, message )  ;      return false ;  } return true ; }"
8779,"public com . anychart . core . lineargauge .  Scale Bar stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8780,"public static byte [  ]  get Vorbis Header Pages (  ) { byte [  ]  data = new byte [ VORBIS_HEADER_PAGES . length ]  ;   System . arraycopy ( VORBIS_HEADER_PAGES, 0, data, 0, VORBIS_HEADER_PAGES . length )  ;  return data ; }"
8781,public  Builder set Suffix Text Size ( float size ) { this . suffix Text Size = size ;  return this ; }
8782,"public void start ( @ Non Null  Context context, @ Non Null androidx . fragment . app .  Fragment fragment ) { start ( context, fragment, REQUEST_CROP )  ; }"
8783,"private static boolean validate Part (  String part, boolean is Final Part ) { if  ( part . length (  )  < 1 || part . length (  )  > MAX_DOMAIN_PART_LENGTH )  {     return false ;  } /*  * GWT claims to support java . lang .  Character's char-classification methods, but it actually only  * works for ASCII .   So for now, assume any non-ASCII characters are valid .   The only place this  * seems to be documented is here:  * https://groups . google . com/d/topic/google-web-toolkit-contributors/1 U Ezsryq1 XI  *  * <p>ASCII characters in the part are expected to be valid per RFC 1035, with underscore also  * being allowed due to widespread practice .   */  String ascii Chars =  Char Matcher . ascii (  )  . retain From ( part )  ;  if  ( !PART_CHAR_MATCHER . matches All Of ( ascii Chars )  )  {     return false ;  } if  ( DASH_MATCHER . matches ( part . char At ( 0 )  )  || DASH_MATCHER . matches ( part . char At ( part . length (  )  - 1 )  )  )  {     return false ;  } if  ( is Final Part && DIGIT_MATCHER . matches ( part . char At ( 0 )  )  )  {     return false ;  } return true ; }"
8784,"public static  String to String (  Collection< Content Coding Type> coding Types ) {  String Builder builder = new  String Builder (  )  ;  for  (  Iterator< Content Coding Type> iterator = coding Types . iterator (  )  ;  iterator . has Next (  )  ;   )  {      Content Coding Type coding Type = iterator . next (  )  ;      coding Type . append To ( builder )  ;      if  ( iterator . has Next (  )  )  {         builder . append ( "", "" )  ;      } } return builder . to String (  )  ; }"
8785,"public static void put ( @ Non Null final  String key, final byte [  ]  value, @ Non Null final  Cache Double Utils cache Double Utils ) { cache Double Utils . put ( key, value )  ; }"
8786,public static long get Region Exit Period (  ) { return s Exit Region Period ; }
8787,"public static int remainder ( int dividend, int divisor ) { return  ( int )   ( to Long ( dividend )  % to Long ( divisor )  )  ; }"
8788,"public com . anychart . charts .  Venn stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8789,public float get Rise (  ) { return tr ; }
8790,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
8791,"private static boolean qnames Equal ( javax . xml . namespace . Q Name qname One, javax . xml . namespace . Q Name qname Two ) { boolean result = false ;  if  ( qname One . get Namespace URI (  )  . equals ( qname Two . get Namespace URI (  )  )  )  {     if  ( qname One . get Local Part (  )  . equals ( qname Two . get Local Part (  )  )  )  {         return true ;      } } return result ; }"
8792,"public final boolean same ( final  Attributes other ) { return same ( other, false )  ; }"
8793,"public static  Writable Native Array make Native Array ( final  Object objects ) { if  ( objects == null )  {     return new  Writable Native Array (  )  ;  } //  Array methods will throw  Illegal Argument Exception .  return make Native Array ( new  Abstract List (  )  {     public int size (  )  {         return  Array . get Length ( objects )  ;      }     public  Object get ( int index )  {         return  Array . get ( objects, index )  ;      } } )  ; }"
8794,public static void clear Cache (  ) { if  ( cache != null )  {     cache . clear (  )  ;  }}
8795,"public void set Length ( float length ) { path . reset (  )  ;  measure . get Segment ( 0 . 0f, length, path, true )  ;  path . r Line To ( 0 . 0f, 0 . 0f )  ;  if  ( animation Step Listener != null )  {     animation Step Listener . on Animation Step (  )  ;  }}"
8796,"public com . anychart . core . utils .  Legend Item Settings container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
8797,"public void set Listener (  Binding Listener listener ) { if  ( m Listener != null && listener != null )  {     throw new  Runtime Exception ( "" Overriding existing listener!"" )  ;  } m Listener = listener ; }"
8798,"public com . anychart . core . lineargauge . pointers .  Thermometer labels (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", settings )  )  ;  return this ; }"
8799,public static  Payment Method Type for Type ( @ Nullable  String payment Method Type ) { for  (  Payment Method Type type : values (  )  )  {     if  ( type . m Canonical Name . equals ( payment Method Type )  )  {         return type ;      } } return UNKNOWN ; }
8800,"public com . anychart . charts .  Pareto x Scale ( com . anychart . scales .  Base settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
8801,public  Checkout Command set Force Ref Update ( boolean force Ref Update ) { check Callable (  )  ;  this . force Ref Update = force Ref Update ;  return this ; }
8802,public io . reactivex .  Single<E> single (  ) { return io . reactivex .  Single . from Callable ( this )  ; }
8803,public int add Float Info ( float f ) { output . write (  Float Info . tag )  ;  output . write Float ( f )  ;  return num++ ; }
8804,private void set Sign In Button Visibility ( boolean show ) { m Layout G Plus . set Visibility ( show && ! Utils . is Signed In ( this )  ?  View . VISIBLE :  View . GONE )  ; }
8805,"public void marker Annotate (  String annotation Key, int [  ]  annotation Value ) { m Annotations . put ( annotation Key, annotation Value )  ; }"
8806,"public com . anychart . scales .  Base y Scale (  ) { return new com . anychart . scales .  Base ( js Base + "" . y Scale (  ) "" )  ; }"
8807,"private void init_card_thumb_resource URL_style (  ) { // Create a  Card  Card card = new  Card ( get Activity (  )  )  ;  // Create a  Card Header  Card Header header = new  Card Header ( get Activity (  )  )  ;  // Set the header title header . set Title ( get String ( R . string . demo_header_basetitle )  )  ;  card . add Card Header ( header )  ;  // Create thumbnail  Custom Thumb Card thumb = new  Custom Thumb Card ( get Activity (  )  )  ;  // Set URL resource thumb . set Url Resource ( ""https://lh5 . googleusercontent . com/-N8bz9q4 Kz0 I/AAAAAAAAAAI/AAAAAAAAA As/ Icl2b Q My K7c/s265-c-k-no/photo . jpg"" )  ;  // Error  Resource ID thumb . set Error Resource ( R . drawable . ic_error_loadingorangesmall )  ;  // Add thumbnail to a card card . add Card Thumbnail ( thumb )  ;  // Set card in the card View  Card View card View =  (  Card View )  get Activity (  )  . find View By Id ( R . id . carddemo_thumb_style )  ;  card View . set Card ( card )  ; }"
8808,"public com . anychart . core . cartesian . series .  Base With Markers hovered (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hovered ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8809,public double get Scale X (  ) { return m Scale . x ; }
8810,"public void set Call State ( int call State,  String incoming Phone Number ) { if  ( call State != CALL_STATE_RINGING )  {     incoming Phone Number = null ;  } this . call State = call State ;  this . incoming Phone Number = incoming Phone Number ;  for  (  Phone State Listener listener : get Listeners For Flags ( LISTEN_CALL_STATE )  )  {     listener . on Call State Changed ( call State, incoming Phone Number )  ;  }}"
8811,public void clear Y Text Labels (  ) { clear Y Text Labels ( 0 )  ; }
8812,"public synchronized  Countly set Enable Attribution ( boolean should Enable Attribution ) { L . d ( "" [  Countly ]   Setting if attribution should be enabled"" )  ;  is Attribution Enabled = should Enable Attribution ;  return this ; }"
8813,public  Credit Card title ( @ Not Null  String title ) { m Title = title ;  return this ; }
8814,"public  Producer< Closeable Reference< Pooled Byte Buffer>> get Local File Fetch Encoded Image Producer Sequence (  ) { synchronized  ( this )  {     if  (  Fresco Systrace . is Tracing (  )  )  {          Fresco Systrace . begin Section ( "" Producer Sequence Factory#get Local File Fetch Encoded Image Producer Sequence"" )  ;      }     if  ( m Local File Encoded Image Producer Sequence == null )  {         if  (  Fresco Systrace . is Tracing (  )  )  {              Fresco Systrace . begin Section ( "" Producer Sequence Factory#get Local File Fetch Encoded Image Producer Sequence:init"" )  ;          }         m Local File Encoded Image Producer Sequence = new  Remove Image Transform Meta Data Producer ( get Background Local File Fetch To Encode Memory Sequence (  )  )  ;          if  (  Fresco Systrace . is Tracing (  )  )  {              Fresco Systrace . end Section (  )  ;          }     }     if  (  Fresco Systrace . is Tracing (  )  )  {          Fresco Systrace . end Section (  )  ;      } } return m Local File Encoded Image Producer Sequence ; }"
8815,public void set Type (  String type ) { this . type = type ; }
8816,void refresh ( @ Non Null final  Mesh Network mesh Network ) { this . mesh Network = mesh Network ;  post Value ( this )  ; }
8817,"void remove Internal (  Node<K, V> node, boolean unlink ) { if  ( unlink )  {     node . prev . next = node . next ;      node . next . prev = node . prev ;  }  Node<K, V> left = node . left ;   Node<K, V> right = node . right ;   Node<K, V> original Parent = node . parent ;  if  ( left != null && right != null )  {     /*    *  To remove a node with both left and right subtrees, move an    * adjacent node from one of those subtrees into this node's place .     *    *  Removing the adjacent node may change this node's subtrees .   This    * node may no longer have two subtrees once the adjacent node is    * gone!    */      Node<K, V> adjacent =  ( left . height > right . height )  ? left . last (  )  : right . first (  )  ;      // takes care of rebalance and size--     remove Internal ( adjacent, false )  ;      int left Height = 0 ;      left = node . left ;      if  ( left != null )  {         left Height = left . height ;          adjacent . left = left ;          left . parent = adjacent ;          node . left = null ;      }     int right Height = 0 ;      right = node . right ;      if  ( right != null )  {         right Height = right . height ;          adjacent . right = right ;          right . parent = adjacent ;          node . right = null ;      }     adjacent . height =  Math . max ( left Height, right Height )  + 1 ;      replace In Parent ( node, adjacent )  ;      return ;  } else if  ( left != null )  {     replace In Parent ( node, left )  ;      node . left = null ;  } else if  ( right != null )  {     replace In Parent ( node, right )  ;      node . right = null ;  } else {     replace In Parent ( node, null )  ;  } rebalance ( original Parent, false )  ;  size-- ;  mod Count++ ; }"
8818,public  List< Sax Event> recall Safe Configuration (  ) { return  (  List< Sax Event> )  context . get Object ( SAFE_JORAN_CONFIGURATION )  ; }
8819,"public com . anychart . core . cartesian . series .  Area3d hover (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hover ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ;  return this ; }"
8820,"public com . anychart . charts .  Sankey animation (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . animation ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8821,"public  Immutable List< Path> extract Archive (  Project Filesystem Factory project Filesystem Factory,  Path archive File,  Path destination,  Optional< Path> strip Prefix,  Patterns Matcher entries To Exclude,  Existing File Mode existing File Mode )  throws IO Exception{ //  Create output directory if it does not exist  Files . create Directories ( destination )  ;  return extract Archive ( archive File, project Filesystem Factory . create Project Filesystem (  Canonical Cell Name . unsafe Not A Cell (  ) ,  Abs Path . of ( destination ) , false ) , destination . get File System (  )  . get Path ( """" ) , strip Prefix, entries To Exclude, existing File Mode )  . stream (  )  . map (  input -> destination . resolve ( input )  . to Absolute Path (  )  )  . collect (  Immutable List . to Immutable List (  )  )  ; }"
8822,"public com . anychart . core . stock . indicators . RSI series (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . series ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
8823,public int get Shadow Color (  ) { return shadow Color ; }
8824,"public com . anychart . core . annotations .  Plot Controller container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
8825,public boolean is Expired (  ) { return  Time Unit . MICROSECONDS . to Minutes ( creation Time . get Duration Micros (  )  )  >  Config Resolver . get Instance (  )  . get Sessions Max Duration Minutes (  )  ; }
8826,"public static  Method find Method Best Match (  Class<?> clazz,  String method Name,  Object .  .  .  args ) { return find Method Best Match ( clazz, method Name, get Parameter Types ( args )  )  ; }"
8827,public T2 get Value2 (  ) { return value2 ; }
8828,"public com . anychart . core . ui .  Chart Credits credits (  ) { return new com . anychart . core . ui .  Chart Credits ( js Base + "" . credits (  ) "" )  ; }"
8829,public int get GL Major Version (  ) { return m GLES_ Major_ Version ; }
8830,public int get End Value Int (  ) { if  ( end Value Int == UNSET_INT )  {     end Value Int =  ( int )   (  Integer )  end Value ;  } return end Value Int ; }
8831,public void disable (  ) { context . set Enabled ( false )  ;  this Table . set Enabled ( false )  ;  locals Table . set Enabled ( false )  ;  evaluator . set Enabled ( false )  ;  cmd Line . set Enabled ( false )  ; }
8832,"public com . anychart . core . ui . scroller .  Thumbs fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
8833,public  Ijk Player View switch Video Path (  String url ) { return switch Video Path (  Uri . parse ( url )  )  ; }
8834,"public com . anychart . standalones .  Title font Weight (  String weight ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Weight ( %s )  ; "", wrap Quotes ( weight )  )  )  ;  return this ; }"
8835,"public void anchor (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . anchor (  )  ; "" )  ; }"
8836,"static void simulate Value Reclamation (  Cache<K, V> cache, K key ) {  Reference Entry<K, V> entry = get Reference Entry ( cache, key )  ;  if  ( entry != null )  {      Value Reference<K, V> value Ref = entry . get Value Reference (  )  ;      // fail on strong/computing refs      Preconditions . check State ( value Ref instanceof  Reference )  ;       Reference<V> ref =  (  Reference<V> )  value Ref ;      if  ( ref != null )  {         ref . clear (  )  ;      } }}"
8837,"public boolean has (  Any Object Id object Id, int type Hint )  throws IO Exception{ try {     open ( object Id, type Hint )  ;      return true ;  } catch  (  Missing Object Exception not Found )  {     return false ;  }}"
8838,"public com . anychart . core .  Separate Chart interactivity (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . interactivity ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8839,public void set Text Color ( final int text Color ) { this . text Color = text Color ; }
8840,public  Type Spec generate (  ) { return component Shard . generate (  )  ; }
8841,"public static  String to GBK (  String str )  throws  Unsupported Encoding Exception{ return change Charset ( str, GBK )  ; }"
8842,"public boolean start Activity For Result (  Intent intent, int code,  Bundle bundle ) {  Activity activity = get Current Activity (  )  ;   Assertions . assert Not Null ( activity )  ;  activity . start Activity For Result ( intent, code, bundle )  ;  return true ; }"
8843,"private  Class Builder get Class Builder (  Element element ) {  Class Builder class Builder = new  Class Builder ( messager, element )  ;  class Builder . set Binding Manager ( this )  ;  return class Builder ; }"
8844,"public com . anychart . standalones .  Data Grid row Even Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Even Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
8845,"public com . anychart . core . utils .  Padding padding (  ) { return new com . anychart . core . utils .  Padding ( js Base + "" . padding (  ) "" )  ; }"
8846,public  Builder add All (  Int Stream stream ) {  Spliterator .  Of Int spliterator = stream . spliterator (  )  ;  long size = spliterator . get Exact Size If Known (  )  ;  if  ( size > 0 )  {     // known *and* nonempty     ensure Room For (  Ints . saturated Cast ( size )  )  ;  } spliterator . for Each Remaining (  (  Int Consumer )  this::add )  ;  return this ; }
8847,public int size (  ) { return size ; }
8848,public void finish Activity (  Class<?> cls ) { for  ( I_KJ Activity activity : activity Stack )  {     if  ( activity . get Class (  )  . equals ( cls )  )  {         finish Activity (  (  Activity )  activity )  ;      } }}
8849,"void no Exceptions (  )  throws  Exception{ assert That ( new  Find Customer ( ""123"" )  . perform (  ) , is ( ""123"" )  )  ; }"
8850,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
8851,"public void get Stat ( com . anychart . enums .  Statistics key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Stat ( %s )  ; "",  ( key != null )  ? key . get Js Base (  )  : null )  )  ; }"
8852,public boolean exists (  )  throws IO Exception{ if  ( get Ref Database (  )  instanceof  Dfs Ref Database )  {     return  (  (  Dfs Ref Database )  get Ref Database (  )  )  . exists (  )  ;  } return true ; }
8853,"public final void traverse (  Predicate<T> should Explore Children )  throws E{  Iterable<T> roots = graph . get Nodes With No Incoming Edges (  )  ;   Graph Traversable<T> graph Traversable =  node -> graph . get Outgoing Nodes For ( node )  . iterator (  )  ;  try {     for  ( T node : new  Acyclic Depth First Post Order Traversal<> ( graph Traversable )  . traverse ( roots, should Explore Children )  )  {         visit ( node )  ;      } } catch  (  Cycle Exception e )  {     throw new  Illegal State Exception ( "" Cycle detected despite graph which was claimed to be a DAG"", e )  ;  }}"
8854,public void set Blocking Executor (  Executor Service executor ) { m Blocking Executor = executor ; }
8855,"public com . anychart . charts .  Sankey flow (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . flow ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8856,"public static  Immutable Set< Type Element> get Transitive Modules (  Dagger Types types,  Dagger Elements elements,  Iterable< Type Element> seed Modules ) {  Type Mirror object Type = elements . get Type Element (  Object . class )  . as Type (  )  ;   Queue< Type Element> module Queue = new  Array Deque<> (  )  ;   Iterables . add All ( module Queue, seed Modules )  ;   Set< Type Element> module Elements =  Sets . new Linked Hash Set (  )  ;  for  (  Type Element module Element : consuming Iterable ( module Queue )  )  {     module Annotation ( module Element )  . if Present (  module Annotation -> {          Immutable Set .  Builder< Type Element> module Dependencies Builder =  Immutable Set . builder (  )  ;          module Dependencies Builder . add All ( module Annotation . includes (  )  )  ;          add Includes From Superclasses ( types, module Element, module Dependencies Builder, object Type )  ;           Immutable Set< Type Element> module Dependencies = module Dependencies Builder . build (  )  ;          module Elements . add ( module Element )  ;          for  (  Type Element dependency Type : module Dependencies )  {             if  ( !module Elements . contains ( dependency Type )  )  {                 module Queue . add ( dependency Type )  ;              }         }     } )  ;  } return  Immutable Set . copy Of ( module Elements )  ; }"
8857,"public static byte [  ]  get Input OOOB Authentication Value ( final short input OOB Action, final byte size ) { switch ( from Value ( input OOB Action )  )  {     case PUSH:     case TWIST:         // We override the value here to 1 so we generate a 1 digit value for presses .          return  Mesh Parser Utils . generate OOB Count ( 1 )  ;      case INPUT_NUMERIC:         return  Mesh Parser Utils . generate OOB Numeric ( size )  ;      case INPUT_ALPHA_NUMERIC:         return  Mesh Parser Utils . generate OOB Alpha Numeric ( size )  ;      default:         return null ;  }}"
8858,"public  Bitmap capture (  )  throws  Interrupted Exception{ final  Semaphore waiter = new  Semaphore ( 0 )  ;  final int width = surface View . get Measured Width (  )  ;  final int height = surface View . get Measured Height (  )  ;  //  Take picture on  Open GL thread final  Bitmap result Bitmap =  Bitmap . create Bitmap ( width, height,  Bitmap .  Config . ARGB_8888 )  ;  gpu Image . run On GL Thread ( new  Runnable (  )  {     @ Override     public void run (  )  {         GPU Image Native Library . adjust Bitmap ( result Bitmap )  ;          waiter . release (  )  ;      } } )  ;  request Render (  )  ;  waiter . acquire (  )  ;  return result Bitmap ; }"
8859,private  Set< Type Element> find Root Type Elements (  Set<? extends  Element> root Elements ) {  Set< Type Element> root Type Elements = new  Hash Set<> (  )  ;  for  (  Element element : root Elements )  {     if  ( element instanceof  Type Element )  {         root Type Elements . add (  (  Type Element )  element )  ;      } else {          Element enclosing Element = element . get Enclosing Element (  )  ;          if  ( enclosing Element instanceof  Type Element )  {             root Type Elements . add (  (  Type Element )  enclosing Element )  ;          }     } } return root Type Elements ; }
8860,"public void text ( int line Number,  String value ) { if  ( nv != null )  {     nv . text ( line Number, value )  ;  }}"
8861,public boolean is Extension Frames (  String frame ID ) { return extension Frames . contains ( frame ID )  ; }
8862,"public com . anychart . core . stock . scrollerseries .  Candlestick falling Stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8863,protected void on Disabled (  ) {//  Do nothing . }
8864,public  Image Size get Image Size (  ) { return image Size ; }
8865,private  Class<?> to Json Type (  Class<?> value Class ) { if  (  Map . class . is Assignable From ( value Class )  )      return  Map . class ;  if  (  Collection . class . is Assignable From ( value Class )  )      return  Collection . class ;  return value Class ; }
8866,public void set Folder Name (  String folder Name ) {  Storage Preferences preferences = new  Storage Preferences ( get Context (  )  )  ;  preferences . set Folder Name ( folder Name )  ; }
8867,"public com . anychart . core . ui .  Timeline row Selected Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode )  )  ;  return this ; }"
8868,"public static void nail Main ( NG Context context ) { obtain Resource File Lock (  )  ;  try  (  Daemon Command Execution Scope ignored =  Buck Daemon . get Instance (  )  . get Daemon Command Execution Scope (  )  )  {      Main With Nailgun main With Nailgun = new  Main With Nailgun ( context )  ;       Main Runner main Runner = main With Nailgun . prepare Main Runner ( bg Task Mananger )  ;      main Runner . run Main Then Exit ( context . get Args (  ) ,  System . nano Time (  )  )  ;  }}"
8869,public int color Weekend (  ) { return theme . color Weekend (  )  ; }
8870,public void set On Prepared Listener ( I Media Player .  On Prepared Listener l ) { m Video View . set On Prepared Listener ( l )  ; }
8871,"private void cache Bitmap (  Bitmap bitmap,  String file Name ) { if  ( this . cache != null )  {     this . cache . put ( bitmap, file Name )  ;  }}"
8872,"public com . anychart . core . utils .  Quarter fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
8873,"public static  Dummy Surface new Instance V17 (  Context context, boolean secure ) { assert Api Level17 Or Higher (  )  ;   Assertions . check State ( !secure || is Secure Supported ( context )  )  ;   Dummy Surface Thread thread = new  Dummy Surface Thread (  )  ;  return thread . init ( secure ? secure Mode : SECURE_MODE_NONE )  ; }"
8874,"public void restrict ( float x, float y, float extra X, float extra Y, @ Non Null  Point F out ) { tmp Point Arr [ 0 ]  = x ;  tmp Point Arr [ 1 ]  = y ;  if  ( bounds Rotation != 0f )  {     //  Rotating given point so we can apply rectangular bounds .      tmp Matrix . set Rotate ( -bounds Rotation, bounds Pivot X, bounds Pivot Y )  ;      tmp Matrix . map Points ( tmp Point Arr )  ;  } //  Applying restrictions tmp Point Arr [ 0 ]  =  Math Utils . restrict ( tmp Point Arr [ 0 ] , bounds . left - extra X, bounds . right + extra X )  ;  tmp Point Arr [ 1 ]  =  Math Utils . restrict ( tmp Point Arr [ 1 ] , bounds . top - extra Y, bounds . bottom + extra Y )  ;  if  ( bounds Rotation != 0f )  {     //  Rotating restricted point back to original coordinates     tmp Matrix . set Rotate ( bounds Rotation, bounds Pivot X, bounds Pivot Y )  ;      tmp Matrix . map Points ( tmp Point Arr )  ;  } out . set ( tmp Point Arr [ 0 ] , tmp Point Arr [ 1 ]  )  ; }"
8875,"protected void set On Ndef Push Complete Callback (  Nfc Adapter .  On Ndef Push Complete Callback callback,  Activity activity,  Activity .  .  .  activities ) { if  ( activity == null )  {     throw new  Null Pointer Exception ( ""activity cannot be null"" )  ;  } for  (  Activity a : activities )  {     if  ( a == null )  {         throw new  Null Pointer Exception ( ""activities cannot contain null"" )  ;      } } this . on Ndef Push Complete Callback = callback ; }"
8876,"public static boolean apply Font To Text View ( final  Text View text View, final  Typeface typeface, boolean deferred ) { if  ( text View == null || typeface == null )      return false ;  text View . set Paint Flags ( text View . get Paint Flags (  )  |  Paint . SUBPIXEL_TEXT_FLAG |  Paint . ANTI_ALIAS_FLAG )  ;  text View . set Typeface ( typeface )  ;  if  ( deferred )  {     text View . set Text ( apply Typeface Span ( text View . get Text (  ) , typeface ) ,  Text View .  Buffer Type . SPANNABLE )  ;      text View . add Text Changed Listener ( new  Text Watcher (  )  {         @ Override         public void before Text Changed (  Char Sequence s, int start, int count, int after )  {         }         @ Override         public void on Text Changed (  Char Sequence s, int start, int before, int count )  {         }         @ Override         public void after Text Changed (  Editable s )  {             apply Typeface Span ( s, typeface )  ;          }     } )  ;  } return true ; }"
8877,public void enable Raw Play (  Context context ) { this . context = context . get Application Context (  )  ; }
8878,public  Optional< String> read First Line (  String path Relative To Project Root ) { return read First Line ( get Path ( path Relative To Project Root )  )  ; }
8879,public int get Height (  ) { return m Height ; }
8880,"public static void define Package (  String class Name,  Class Loader loader )  throws  Cannot Compile Exception{ try {     privileged . define Package ( loader, class Name, null, null, null, null, null, null, null )  ;  } catch  (  Illegal Argument Exception e )  {     // is thrown .      return ;  } catch  (  Exception e )  {     throw new  Cannot Compile Exception ( e )  ;  }}"
8881,public static void add (  Cached Authentication ca ) { cached . add ( ca )  ; }
8882,public int hash Code (  ) { return this . description . hash Code (  )  ; }
8883,"public static boolean hide Keyboard (  View view ) { if  ( view == null )  {     throw new  Null Pointer Exception ( "" View is null!"" )  ;  } try {      Input Method Manager imm =  (  Input Method Manager )  view . get Context (  )  . get System Service (  Context . INPUT_METHOD_SERVICE )  ;      if  ( imm == null )  {         return false ;      }     imm . hide Soft Input From Window ( view . get Window Token (  ) , 0 )  ;  } catch  (  Exception e )  {     return false ;  } return true ; }"
8884,"public com . anychart . charts .  Pert legend (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . legend ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8885,public double double Value (  ) { return long Value (  )  ; }
8886,"private void adjust Top By Aspect Ratio (  Rect F rect, float aspect Ratio ) { rect . top = rect . bottom - rect . width (  )  / aspect Ratio ; }"
8887,public static long current Time Millis (  ) { return nano Time / MILLIS_PER_NANO ; }
8888,"void test Build Poor Warrior (  ) { final var character =  Character Step Builder . new Builder (  )  . name ( "" Poor warrior"" )  . fighter Class ( ""none"" )  . no Weapon (  )  . build (  )  ;  assert Equals ( "" Poor warrior"", character . get Name (  )  )  ;  assert Equals ( ""none"", character . get Fighter Class (  )  )  ;  assert Null ( character . get Weapon (  )  )  ;  assert Null ( character . get Abilities (  )  )  ;  assert Not Null ( character . to String (  )  )  ; }"
8889,"public void get Type (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Type (  )  ; "" )  ; }"
8890,public boolean is Newer Than (  Hls Media Playlist other ) { if  ( other == null || media Sequence > other . media Sequence )  {     return true ;  } if  ( media Sequence < other . media Sequence )  {     return false ;  } //  The media sequences are equal .  int segment Count = segments . size (  )  ;  int other Segment Count = other . segments . size (  )  ;  return segment Count > other Segment Count ||  ( segment Count == other Segment Count && has End Tag && !other . has End Tag )  ; }
8891,public void reset (  ) { if  ( true Hd Sample Rechunker != null )  {     true Hd Sample Rechunker . reset (  )  ;  }}
8892,public  Submodule Init Command add Path (  String path ) { paths . add ( path )  ;  return this ; }
8893,"public  String get String (  Format format ) { long seconds =  Time Unit . MILLISECONDS . to Seconds ( milliseconds )  ;  long ms = milliseconds % 1000 ;  switch ( format )  {     case TIME:         seconds =  Time Unit . MILLISECONDS . to Seconds ( milliseconds )  -  Time Unit . MINUTES . to Seconds (  Time Unit . MILLISECONDS . to Minutes ( milliseconds )  )  ;          long hours =  Time Unit . MILLISECONDS . to Hours ( milliseconds )  ;          long minutes =  Time Unit . MILLISECONDS . to Minutes ( milliseconds )  -  Time Unit . HOURS . to Minutes (  Time Unit . MILLISECONDS . to Hours ( milliseconds )  )  ;          return  String . format (  Locale . ROOT, ""%d:%02d:%02d . %03d"", hours, minutes, seconds, ms )  ;      default:         return  String . format (  Locale . ROOT, ""%d . %03d"", seconds, ms )  ;  }}"
8894,"private static boolean needs Force Widevine L3 Workaround (  ) { return ""ASUS_Z00 AD"" . equals (  Util . MODEL )  ; }"
8895,"public void on Websocket Pong (  Web Socket conn,  Framedata f ) {}"
8896,"public  Demo Hover Menu create Demo Menu From Code ( @ Non Null  Context context, @ Non Null  Event Bus bus )  throws IO Exception{  Menu drill Down Menu Level Two = new  Menu ( "" Demo  Menu -  Level 2"",  Arrays . as List ( new  Menu Item ( UUID . random UUID (  )  . to String (  ) , "" Google"", new  Do Nothing Menu Action (  )  ) , new  Menu Item ( UUID . random UUID (  )  . to String (  ) , "" Amazon"", new  Do Nothing Menu Action (  )  )  )  )  ;   Show Submenu Menu Action show Level Two Menu Action = new  Show Submenu Menu Action ( drill Down Menu Level Two )  ;   Menu drill Down Menu = new  Menu ( "" Demo  Menu"",  Arrays . as List ( new  Menu Item ( UUID . random UUID (  )  . to String (  ) , ""GPS"", new  Do Nothing Menu Action (  )  ) , new  Menu Item ( UUID . random UUID (  )  . to String (  ) , "" Cell  Tower  Triangulation"", new  Do Nothing Menu Action (  )  ) , new  Menu Item ( UUID . random UUID (  )  . to String (  ) , "" Location  Services"", show Level Two Menu Action )  )  )  ;   Menu List Content drill Down Menu Navigator Content = new  Menu List Content ( context, drill Down Menu )  ;   Toolbar Navigator toolbar Navigator = new  Toolbar Navigator ( context )  ;  toolbar Navigator . push Content ( drill Down Menu Navigator Content )  ;   Map< String,  Content> demo Menu = new  Linked Hash Map<> (  )  ;  demo Menu . put (  Demo Hover Menu . INTRO_ID, new  Hover Introduction Content ( context,  Bus . get Instance (  )  )  )  ;  demo Menu . put (  Demo Hover Menu . SELECT_COLOR_ID, new  Color Selection Content ( context,  Bus . get Instance (  ) ,  Hover Theme Manager . get Instance (  ) ,  Hover Theme Manager . get Instance (  )  . get Theme (  )  )  )  ;  demo Menu . put (  Demo Hover Menu . APP_STATE_ID, new  App State Content ( context )  )  ;  demo Menu . put (  Demo Hover Menu . MENU_ID, toolbar Navigator )  ;  demo Menu . put (  Demo Hover Menu . PLACEHOLDER_ID, new  Placeholder Content ( context, bus )  )  ;  return new  Demo Hover Menu ( context, ""kitchensink"", demo Menu,  Hover Theme Manager . get Instance (  )  . get Theme (  )  )  ; }"
8897,"public com . anychart . core . cartesian . series .  Line3d hover (  Number index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hover ( %s )  ; "", index )  )  ;  return this ; }"
8898,"public com . anychart . charts .  Polar label (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
8899,"public com . anychart . charts .  Tag Cloud height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
8900,public  Selection Creator max Original Size ( int size ) { m Selection Spec . original Max Size = size ;  return this ; }
8901,"public void set Color To Replace ( float red Component, float green Component, float blue Component ) { color To Replace = new float [  ]  { red Component, green Component, blue Component } ;  set Float Vec3 ( color To Replace Location, color To Replace )  ; }"
8902,public void set Use Smart Http ( boolean on ) { use Smart Http = on ; }
8903,public void prune (  ) { if  ( this . class Manager == null )      // XXX if we keep the create Class Manager in get Class Manager then we can axe     // this?     set Class Manager (  Bsh Class Manager . create Class Manager ( null )  )  ;  set Parent ( null )  ; }
8904,"public void test Family Client Id Correctly Stored In Cache (  )  throws IO Exception,  Interrupted Exception,  Authentication Exception, JSON Exception{  File Mock Context mock Context = new  File Mock Context ( get Instrumentation (  )  . get Context (  )  )  ;  I Token Cache Store mock Cache = get Cache For Refresh Token ( TEST_IDTOKEN_USERID, TEST_IDTOKEN_UPN )  ;  final  Authentication Context context = get Authentication Context ( mock Context, VALID_AUTHORITY, false, mock Cache )  ;  final  Mock Activity test Activity = new  Mock Activity (  )  ;  final  Count Down Latch signal = new  Count Down Latch ( 1 )  ;  test Activity . m Signal = signal ;   Mock Authentication Callback callback = new  Mock Authentication Callback ( signal )  ;  final  String response = ""{\""id_token\"":\"""" + TEST_IDTOKEN + ""\"",\""access_token\"":\"" Token Fortest Refresh Token Positive\"",\""token_type\"":\"" Bearer\"",\""expires_in\"":\""-10\"",\""expires_on\"":\""1368768616\"",\""refresh_token\"":\""refresh112\"",\""scope\"":\""*\"",\""foci\"":\""1\"", \""client_info\"":\"""" +  Util . TEST_CLIENT_INFO + ""\""}"" ;  // response2 has  Fo CI as ""family Client Id"" final  String response2 =  Util . get Success Token Response ( true, true )  ;  final  Http URL Connection mocked Connection =  Mockito . mock (  Http URL Connection . class )  ;   Http Url Connection Factory . set Mocked Http Url Connection ( mocked Connection )  ;   Util . prepare Mocked Url Connection ( mocked Connection )  ;   Mockito . when ( mocked Connection . get Output Stream (  )  )  . then Return (  Mockito . mock (  Output Stream . class )  )  ;   Mockito . when ( mocked Connection . get Input Stream (  )  )  . then Return (  Util . create Input Stream ( response ) ,  Util . create Input Stream ( response2 )  )  ;   Mockito . when ( mocked Connection . get Response Code (  )  )  . then Return (  Http URL Connection . HTTP_OK )  ;  //  Call acquire token which will try refresh token based on cache context . acquire Token ( test Activity . get Test Activity (  ) , ""resource"", ""clientid"", ""redirect Uri"", TEST_IDTOKEN_UPN, callback )  ;  signal . await ( CONTEXT_REQUEST_TIME_OUT,  Time Unit . MILLISECONDS )  ;  //  Check response in callback verify Refresh Token Response ( mock Cache, callback . get Exception (  ) , callback . get Authentication Result (  )  )  ;  verify Family Id Stored In Token Cache Item ( mock Cache,  Cache Key . create Cache Key For RT Entry ( VALID_AUTHORITY, ""resource"", ""client Id"", TEST_IDTOKEN_UPN ) , ""1"" )  ;  //  Do silent token request and return idtoken in the result  Authentication Result result = context . acquire Token Silent Sync ( ""resource"", ""clientid"", TEST_IDTOKEN_USERID )  ;  assert Equals ( "" Returned assess token is not as expected . "", ""I am a new access token"", result . get Access Token (  )  )  ;  assert Equals ( "" Returned refresh token is not as expected . "", ""I am a new refresh token"", result . get Refresh Token (  )  )  ;  assert Equals ( "" Returned id token is not as expected . "", TEST_IDTOKEN, result . get Id Token (  )  )  ;  verify Family Id Stored In Token Cache Item ( mock Cache,  Cache Key . create Cache Key For RT Entry ( VALID_AUTHORITY, ""resource"", ""client Id"", TEST_IDTOKEN_UPN ) , ""family Client Id"" )  ;  clear Cache ( context )  ; }"
8905,"public void result Photo ( int request Code, int result Code,  Intent data ) { if  ( result Code ==  Activity . RESULT_OK )  {     if  ( request Code ==  Magical Camera . SELECT_PHOTO )  {         this . action Picture Object . set My Photo ( on Select From Gallery Result ( data )  )  ;      } else if  ( request Code ==  Magical Camera . TAKE_PHOTO )  {         this . action Picture Object . set My Photo ( on Take Photo Result (  )  )  ;      } }}"
8906,"public static boolean disassemble Dex File (  File dex,  File output Dir, final  Set< String> include Classes )  throws IO Exception{ final  Baksmali Options options = create Baksmali Options (  )  ;  if  ( !output Dir . exists (  )  )  {     output Dir . mkdirs (  )  ;  }  Dex File dex File =  Dex File Factory . load Dex File ( dex,  Opcodes . get Default (  )  )  ;   List<? extends  Class Def> class Defs =  Ordering . natural (  )  . sorted Copy ( dex File . get Classes (  )  )  ;  final  Class File Name Handler file Name Handler = new  Class File Name Handler ( output Dir, "" . smali"" )  ;   Executor Service executor =  Executors . new Fixed Thread Pool ( 4 )  ;   List< Future< Boolean>> tasks =  Lists . new Array List (  )  ;   Set< String> class Set = null ;  if  ( include Classes != null )  {     class Set = new  Hash Set< String> ( include Classes )  ;  } for  ( final  Class Def class Def : class Defs )  {      String class Name = get Dalvik Class Name ( class Def . get Type (  )  )  ;      if  ( class Set != null && !class Set . contains ( class Name )  )  {         continue ;      }     tasks . add ( executor . submit ( new  Callable< Boolean> (  )  {         @ Override         public  Boolean call (  )  throws  Exception {             return  Bak Smali . disassemble Class ( class Def, file Name Handler, options )  ;          }     } )  )  ;  } boolean error Occurred = false ;  try {     for  (  Future< Boolean> task : tasks )  {         while  ( true )  {             try {                 if  ( !task . get (  )  )  {                     error Occurred = true ;                  }             } catch  (  Interrupted Exception ex )  {                 continue ;              } catch  (  Execution Exception ex )  {                 throw new  Runtime Exception ( ex )  ;              }             break ;          }     } } finally {     executor . shutdown (  )  ;  } return !error Occurred ; }"
8907,"private void assert Output File Exists (  Path path,  String expected Contents )  throws IO Exception{  Path full Path = tmp Folder . get Root (  )  . resolve ( path )  ;   Assert . assert True (  String . format ( "" Expected %s to be a file"", full Path ) ,  Files . is Regular File ( full Path )  )  ;   String contents =  Joiner . on ( '\n' )  . join (  Files . read All Lines ( full Path )  )  ;   Assert . assert Equals ( expected Contents, contents )  ; }"
8908,protected  Namespace Context create Namespace Context (  ) { return new  Simple Namespace Context (  )  ; }
8909,"public com . anychart . charts .  Radar select Marquee Fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
8910,public  Immutable List< String> get Platforms (  ) { return  Immutable List . of (  Apple Platform . IPHONEOS . get Provisioning Profile Name (  )  . get (  )  )  ; }
8911,"public void handle Exception (  Cmd Line Exception e )  throws  Cmd Line Exception{ handle Exception ( e, "" If passing arguments to the binary, remember to use '--' . "" )  ; }"
8912,"public com . anychart . core . annotations .  Fibonacci Base x Anchor (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Anchor ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
8913,"public  Json Element get (  ) { if  ( !stack . is Empty (  )  )  {     throw new  Illegal State Exception ( "" Expected one JSON element but was "" + stack )  ;  } return product ; }"
8914,public void set On View Switch Listener (  View Switch Listener l ) { m View Switch Listener = l ; }
8915,"public void play (  String music Name ) { if  ( music Map . contains Key ( music Name )  )  {     sound Pool . play ( music Map . get ( music Name ) , U Idefault Data . default Music Volume, U Idefault Data . default Music Volume, 0, 0, 1 )  ;  }}"
8916,public void set Rssi ( int rssi ) { m Rssi = rssi ; }
8917,"public int patch Check (  String path ) {  File patch File = new  File ( path )  ;   Tinker Log . i ( TAG, ""receive a patch file: %s, file size:%d"", path,  Share Patch File Util . get File Or Directory Size ( patch File )  )  ;  int return Code = super . patch Check ( path )  ;  if  ( return Code ==  Share Constants . ERROR_PATCH_OK )  {     return Code =  Utils . check For Patch Recover ( NEW_PATCH_RESTRICTION_SPACE_SIZE_MIN, max Memory )  ;  } if  ( return Code ==  Share Constants . ERROR_PATCH_OK )  {      String patch Md5 =  Share Patch File Util . get MD5 ( patch File )  ;       Shared Preferences sp = context . get Shared Preferences (  Share Constants . TINKER_SHARE_PREFERENCE_CONFIG,  Context . MODE_MULTI_PROCESS )  ;      //optional, only disable this patch file with md5     int fast Crash Count = sp . get Int ( patch Md5, 0 )  ;      if  ( fast Crash Count >=  Sample Uncaught Exception Handler . MAX_CRASH_COUNT )  {         return Code =  Utils . ERROR_PATCH_CRASH_LIMIT ;      } else {         //for upgrade patch, version must be not the same         //for repair patch, we won't has the tinker load flag          Tinker tinker =  Tinker . with ( context )  ;          if  ( tinker . is Tinker Loaded (  )  )  {              Tinker Load Result tinker Load Result = tinker . get Tinker Load Result If Present (  )  ;              if  ( tinker Load Result != null )  {                  String current Version = tinker Load Result . current Version ;                  if  ( patch Md5 . equals ( current Version )  )  {                     return Code =  Utils . ERROR_PATCH_ALREADY_APPLY ;                  }             }         }     }     //check whether retry so many times     if  ( return Code ==  Share Constants . ERROR_PATCH_OK )  {         return Code =  Upgrade Patch Retry . get Instance ( context )  . on Patch Listener Check ( patch Md5 )  ?  Share Constants . ERROR_PATCH_OK :  Utils . ERROR_PATCH_RETRY_COUNT_LIMIT ;      } } //  Interception some of the request if  ( return Code ==  Share Constants . ERROR_PATCH_OK )  {      Properties properties =  Share Tinker Internals . fast Get Patch Package Meta ( patch File )  ;      if  ( properties == null )  {         return Code =  Utils . ERROR_PATCH_CONDITION_NOT_SATISFIED ;      } else {          String platform = properties . get Property (  Utils . PLATFORM )  ;           Tinker Log . i ( TAG, ""get platform:"" + platform )  ;          // check patch platform require         if  ( platform == null )  {             return Code =  Utils . ERROR_PATCH_CONDITION_NOT_SATISFIED ;          }     } }  Sample Tinker Report . on Try Apply ( return Code ==  Share Constants . ERROR_PATCH_OK )  ;  return return Code ; }"
8918,"public com . anychart . core .  Separate Chart get Chart (  ) { return new com . anychart . core .  Separate Chart ( js Base + "" . get Chart (  ) "" )  ; }"
8919,"public static final  File Mode from Bits ( int bits ) { switch ( bits & TYPE_MASK )  {     case TYPE_MISSING:         if  ( bits == 0 )              return MISSING ;          break ;      case TYPE_TREE:         return TREE ;      case TYPE_FILE:         if  (  ( bits & 0111 )  != 0 )              return EXECUTABLE_FILE ;          return REGULAR_FILE ;      case TYPE_SYMLINK:         return SYMLINK ;      case TYPE_GITLINK:         return GITLINK ;  } return new  File Mode ( bits,  Constants . OBJ_BAD )  {     @ Override     @ Suppress Warnings ( "" Non Overriding Equals"" )      public boolean equals ( int a )  {         return bits == a ;      } } ; }"
8920,"public  Rounding Params set Corners Radii ( float [  ]  radii ) {  Preconditions . check Not Null ( radii )  ;   Preconditions . check Argument ( radii . length == 8, ""radii should have exactly 8 values"" )  ;   System . arraycopy ( radii, 0, get Or Create Rounded Corners Radii (  ) , 0, 8 )  ;  return this ; }"
8921,"public com . anychart . charts .  Sankey animation (  Boolean enabled,  Number duration ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . animation ( %s, %s )  ; "", enabled, duration )  )  ;  return this ; }"
8922,protected int get Volume Progress Id (  ) { return R . id . volume_progressbar ; }
8923,public boolean is Empty (  )  throws IO Exception{  Optional< Long> length If Known = length If Known (  )  ;  if  ( length If Known . is Present (  )  )  {     return length If Known . get (  )  == 0 L ;  }  Closer closer =  Closer . create (  )  ;  try {      Reader reader = closer . register ( open Stream (  )  )  ;      return reader . read (  )  == -1 ;  } catch  (  Throwable e )  {     throw closer . rethrow ( e )  ;  } finally {     closer . close (  )  ;  }}
8924,"private void switch Views ( final  View switch View, final long switch Id, final float translation Y ) { assert m Hover Drawable != null ;  assert m Adapter != null ;  assert m Mobile View != null ;  final int switch View Position = m Wrapper . get Position For View ( switch View )  ;  int mobile View Position = m Wrapper . get Position For View ( m Mobile View )  ;   (  (  Swappable )  m Adapter )  . swap Items ( switch View Position - m Wrapper . get Header Views Count (  ) , mobile View Position - m Wrapper . get Header Views Count (  )  )  ;   (  (  Base Adapter )  m Adapter )  . notify Data Set Changed (  )  ;  m Hover Drawable . shift ( switch View . get Height (  )  )  ;  m Switch View Animator . animate Switch View ( switch Id, translation Y )  ; }"
8925,"public void add Timing Code ( final long timestamp, final int .  .  .  types ) { final  List< Event Timing Code> codes =  (  List< Event Timing Code> )  get Object Value (  Data Types . OBJ_TIMED_EVENT_LIST )  ;  long last Timestamp = 0 ;  int insert Index = 0 ;  if  ( !codes . is Empty (  )  && codes . get ( 0 )  . get Timestamp (  )  <= timestamp )  {     for  ( final  Event Timing Code code : codes )  {         final long translated Timestamp = code . get Timestamp (  )  == 0 ? last Timestamp : code . get Timestamp (  )  ;          if  ( timestamp < translated Timestamp )  {             break ;          }         insert Index++ ;          last Timestamp = translated Timestamp ;      } } for  ( final int type : types )  {     codes . add ( insert Index, new  Event Timing Code (  Data Types . OBJ_TIMED_EVENT, this, type, timestamp )  )  ;      // preserve order of types     insert Index++ ;  }}"
8926,public  Print Stream get Stdout (  ) { return m Stdout ; }
8927,public  Pack Config get Config (  ) { return config ; }
8928,"public  Optional< Lottery Ticket Id> submit Ticket (  Lottery Ticket ticket ) { var player Details = ticket . get Player Details (  )  ;  var player Account = player Details . get Bank Account (  )  ;  var result = wire Transfers . transfer Funds ( TICKET_PRIZE, player Account, SERVICE_BANK_ACCOUNT )  ;  if  ( !result )  {     notifications . ticket Submit Error ( player Details )  ;      return  Optional . empty (  )  ;  } var optional = repository . save ( ticket )  ;  if  ( optional . is Present (  )  )  {     notifications . ticket Submitted ( player Details )  ;  } return optional ; }"
8929,"public void test Device Filter Emulator (  ) {  Adb Helper my Adb Helper = create Adb Helper ( create Adb Options (  ) , new  Target Device Options ( true, false,  Optional . empty (  )  )  )  ;  I Device [  ]  devices = new I Device [  ]  { create Emulator ( ""1"", I Device .  Device State . ONLINE ) , create Real Device ( ""2"", I Device .  Device State . ONLINE )  } ;   List<I Device> filtered Devices = my Adb Helper . filter Devices ( devices )  ;  assert Not Null ( filtered Devices )  ;  assert Equals ( 1, filtered Devices . size (  )  )  ;  assert Same ( devices [ 0 ] , filtered Devices . get ( 0 )  )  ; }"
8930,"static  Object invoke (  Method method,  Object instance,  Object .  .  .  args ) { // class from API 19 .  try {     return method . invoke ( instance, args )  ;  } catch  (  Illegal Access Exception e )  {     throw new  Runtime Exception ( e )  ;  } catch  (  Invocation Target Exception e )  {     throw new  Runtime Exception ( e )  ;  }}"
8931,public boolean add Listener (  Event Listener listener ) { return root . add Listener ( listener )  ; }
8932,"public com . didiglobal . booster . aapt2 .  Resources Internal .  Compiled File .  Symbol .  Builder add Exported Symbol Builder ( int index ) { return get Exported Symbol Field Builder (  )  . add Builder ( index, com . didiglobal . booster . aapt2 .  Resources Internal .  Compiled File .  Symbol . get Default Instance (  )  )  ; }"
8933,"public static  Char Source as Char Source (  Path path,  Charset charset,  Open Option .  .  .  options ) { return as Byte Source ( path, options )  . as Char Source ( charset )  ; }"
8934,"public void fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . fill (  )  ; "" )  ; }"
8935,"public com . anychart . charts .  Polar margin (  Number value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
8936,"public static boolean is Library (  Gradle Build File file ) { if  ( file != null )  {      List plugins = file . get Plugins (  )  ;      if  ( plugins != null && plugins . size (  )  > 0 )  {         return plugins . contains ( ""com . android . library"" )  || plugins . contains ( ""android-library"" )  ;      } } return true ; }"
8937,"public void save Scroll Info ( @ Non Null  Bundle bundle ) { if  ( m Top View != null )  {     m Top View . save Scroll Info ( bundle )  ;  } if  ( m Bottom View != null )  {     m Bottom View . save Scroll Info ( bundle )  ;  } bundle . put Int ( KEY_SCROLL_INFO_OFFSET, get Offset Current (  )  )  ; }"
8938,"private void capture Failure (  Assertion Error captured ) { if  ( failure != null )  {     // TODO ( diamondm )  is it worthwhile to add the failures as suppressed exceptions?     throw new  Assertion Error ( lenient Format ( "" Expect Failure . when Testing (  )  caught multiple failures:\n\n%s\n\n%s\n"",  Platform . get Stack Trace As String ( failure ) ,  Platform . get Stack Trace As String ( captured )  )  )  ;  } failure = captured ; }"
8939,"public com . anychart . charts .  Sankey select Marquee Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8940,public  Coded Data Buffer get Cdb (  ) { return cdb ; }
8941,"static  Scan Record parse From Bytes ( @ Nullable final byte [  ]  scan Record ) { if  ( scan Record == null )  {     return null ;  } int current Pos = 0 ;  int advertise Flag = -1 ;  int tx Power Level =  Integer . MIN_VALUE ;   String local Name = null ;   List< Parcel Uuid> service Uuids = null ;   Sparse Array<byte [  ] > manufacturer Data = null ;   Map< Parcel Uuid, byte [  ] > service Data = null ;  try {     while  ( current Pos < scan Record . length )  {         // length is unsigned int .          final int length = scan Record [ current Pos++ ]  & 0x FF ;          if  ( length == 0 )  {             break ;          }         //  Note the length includes the length of the field type itself .          final int data Length = length - 1 ;          // field Type is unsigned int .          final int field Type = scan Record [ current Pos++ ]  & 0x FF ;          switch ( field Type )  {             case DATA_TYPE_FLAGS:                 advertise Flag = scan Record [ current Pos ]  & 0x FF ;                  break ;              case DATA_TYPE_SERVICE_UUIDS_16_BIT_PARTIAL:             case DATA_TYPE_SERVICE_UUIDS_16_BIT_COMPLETE:                 if  ( service Uuids == null )                      service Uuids = new  Array List<> (  )  ;                  parse Service Uuid ( scan Record, current Pos, data Length,  Bluetooth Uuid . UUID_BYTES_16_BIT, service Uuids )  ;                  break ;              case DATA_TYPE_SERVICE_UUIDS_32_BIT_PARTIAL:             case DATA_TYPE_SERVICE_UUIDS_32_BIT_COMPLETE:                 if  ( service Uuids == null )                      service Uuids = new  Array List<> (  )  ;                  parse Service Uuid ( scan Record, current Pos, data Length,  Bluetooth Uuid . UUID_BYTES_32_BIT, service Uuids )  ;                  break ;              case DATA_TYPE_SERVICE_UUIDS_128_BIT_PARTIAL:             case DATA_TYPE_SERVICE_UUIDS_128_BIT_COMPLETE:                 if  ( service Uuids == null )                      service Uuids = new  Array List<> (  )  ;                  parse Service Uuid ( scan Record, current Pos, data Length,  Bluetooth Uuid . UUID_BYTES_128_BIT, service Uuids )  ;                  break ;              case DATA_TYPE_LOCAL_NAME_SHORT:             case DATA_TYPE_LOCAL_NAME_COMPLETE:                 local Name = new  String ( extract Bytes ( scan Record, current Pos, data Length )  )  ;                  break ;              case DATA_TYPE_TX_POWER_LEVEL:                 tx Power Level = scan Record [ current Pos ]  ;                  break ;              case DATA_TYPE_SERVICE_DATA_16_BIT:             case DATA_TYPE_SERVICE_DATA_32_BIT:             case DATA_TYPE_SERVICE_DATA_128_BIT:                 int service Uuid Length =  Bluetooth Uuid . UUID_BYTES_16_BIT ;                  if  ( field Type == DATA_TYPE_SERVICE_DATA_32_BIT )  {                     service Uuid Length =  Bluetooth Uuid . UUID_BYTES_32_BIT ;                  } else if  ( field Type == DATA_TYPE_SERVICE_DATA_128_BIT )  {                     service Uuid Length =  Bluetooth Uuid . UUID_BYTES_128_BIT ;                  }                 final byte [  ]  service Data Uuid Bytes = extract Bytes ( scan Record, current Pos, service Uuid Length )  ;                  final  Parcel Uuid service Data Uuid =  Bluetooth Uuid . parse Uuid From ( service Data Uuid Bytes )  ;                  final byte [  ]  service Data Array = extract Bytes ( scan Record, current Pos + service Uuid Length, data Length - service Uuid Length )  ;                  if  ( service Data == null )                      service Data = new  Hash Map<> (  )  ;                  service Data . put ( service Data Uuid, service Data Array )  ;                  break ;              case DATA_TYPE_MANUFACTURER_SPECIFIC_DATA:                 //  The first two bytes of the manufacturer specific data are                 // manufacturer ids in little endian .                  final int manufacturer Id =  (  ( scan Record [ current Pos + 1 ]  & 0x FF )  << 8 )  +  ( scan Record [ current Pos ]  & 0x FF )  ;                  final byte [  ]  manufacturer Data Bytes = extract Bytes ( scan Record, current Pos + 2, data Length - 2 )  ;                  if  ( manufacturer Data == null )                      manufacturer Data = new  Sparse Array<> (  )  ;                  manufacturer Data . put ( manufacturer Id, manufacturer Data Bytes )  ;                  break ;              default:                 //  Just ignore, we don't handle such data type .                  break ;          }         current Pos += data Length ;      }     return new  Scan Record ( service Uuids, manufacturer Data, service Data, advertise Flag, tx Power Level, local Name, scan Record )  ;  } catch  ( final  Exception e )  {      Log . e ( TAG, ""unable to parse scan record: "" +  Arrays . to String ( scan Record )  )  ;      // and return an empty record with raw scan Record bytes in results     return new  Scan Record ( null, null, null, -1,  Integer . MIN_VALUE, null, scan Record )  ;  }}"
8942,"private  Reftable reader (  )  throws IO Exception{ if  ( !lock . is Locked (  )  )  {     throw new  Illegal State Exception ( //$NON-NLS-1$     ""must hold lock to access merged table"" )  ;  } if  ( merged Tables == null )  {     merged Tables = open Merged Reftable (  )  ;  } return merged Tables ; }"
8943,protected void set Instructions ( byte [  ]  instructions ) { this . instructions = instructions ; }
8944,"public void maximum Gap (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . maximum Gap (  )  ; "" )  ; }"
8945,"public com . anychart . core . axes .  Stock Date Time background (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background ( %s )  ; "", settings )  )  ;  return this ; }"
8946,"public static void show Tooltip (  Component Context c,  Litho Tooltip litho Tooltip, @ Nullable  String anchor Key ) { show Tooltip ( c, litho Tooltip, anchor Key, 0, 0 )  ; }"
8947,"protected  Write Request write Descriptor ( @ Nullable final  Bluetooth Gatt Descriptor descriptor, @ Nullable final  Data data ) { return  Request . new Write Request ( descriptor, data != null ? data . get Value (  )  : null )  . set Request Handler ( request Handler )  ; }"
8948,public C upper Endpoint (  ) { return upper Bound . endpoint (  )  ; }
8949,"public final void promote Value To Name (  )  throws IO Exception{ int context = peek Scope (  )  ;  if  ( context != NONEMPTY_OBJECT && context != EMPTY_OBJECT )  {     throw new  Illegal State Exception ( "" Nesting problem . "" )  ;  } promote Value To Name = true ; }"
8950,"public int index ( int i ) { return  Byte Array . read U16bit ( info, i * 10 + 10 )  ; }"
8951,"public final void set Image Resource ( int res Id ) { set Image Resource ( res Id, null )  ; }"
8952,"public com . anychart . core . lineargauge . pointers .  Led parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
8953,public  Hash Code get Hash Code (  ) { return hash Code ; }
8954,public final byte [  ]  get Byte Array (  ) { return this . byte Array ; }
8955,public final  String get Network Key (  ) { return network Key ; }
8956,"public void start Cast Controller Activity (  Context context,  Bundle media Wrapper, int position, boolean should Start ) {  Intent intent = new  Intent ( context,  Video Cast Controller Activity . class )  ;  intent . put Extra ( ""media"", media Wrapper )  ;  intent . put Extra ( ""start Point"", position )  ;  intent . put Extra ( ""should Start"", should Start )  ;  context . start Activity ( intent )  ; }"
8957,"public void for Graph_breadth First Iterable_empty Graph (  ) { assert Equal Char Nodes (  Traverser . for Graph ( create Directed Graph (  )  )  . breadth First ( characters Of ( """" )  ) , """" )  ;  try {      Traverser . for Graph ( create Directed Graph (  )  )  . breadth First ( characters Of ( ""a"" )  )  ;      fail ( "" Expected  Illegal Argument Exception"" )  ;  } catch  (  Illegal Argument Exception expected )  { }}"
8958,"public  String to String (  ) { return name + ""="" + value ; }"
8959,public boolean is Allow Queries On Ui Thread (  ) { return allow Queries On Ui Thread ; }
8960,void on Video Input Format Changed (  Format format ) {}
8961,"public static  Object get Object ( long address ) {  Object [  ]  array = new  Object [  ]  { null } ;  long base Offset = array Base Offset (  Object [  ]  . class )  ;  if  (  Runtime . is64 Bit (  )  )  {     put Long ( array, base Offset, address )  ;  } else {     put Int ( array, base Offset,  ( int )  address )  ;  } return array [ 0 ]  ; }"
8962,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
8963,public void set Data (  Bus Line Result result ) { this . m Bus Line Result = result ; }
8964,"public com . anychart . core . annotations .  Horizontal Line bounds (  String x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
8965,"public void set Physical Queue Map (  Map< Integer,  Physical Queue> pq Map ) { this . pq Map = pq Map ; }"
8966,public void end Batch Mode (  ) { m Prevent Invalidate Count-- ;  invalidate Self (  )  ; }
8967,"public static final boolean register Dynamic Class (  String class Name,  String plugin,  String target,  Class def Class ) { return s PL Proxy . register Dynamic Class ( class Name, plugin, target, def Class )  ; }"
8968,"public  String search (  String type,  String sort By ) { return get Query Summary ( type, sort By,  Sort Order . ASC )  ; }"
8969,"public com . anychart . core . axismarkers .  Current Price Indicator falling Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8970,public int get Framebuffer Handle (  ) { return framebuffer Handle ; }
8971,protected  List<? extends  Base Model> get Legend Data (  ) { return m Data ; }
8972,"public  Output Stream write ( boolean append ) { throw new  Gdx Runtime Exception ( "" Cannot write to files in GWT backend"" )  ; }"
8973,"public  Optional< Linker Provider> get Linker Provider (  Linker Provider .  Type default Type ) {  Optional< Tool Provider> tool Provider = delegate . get View (  Tool Config . class )  . get Tool Provider ( cxx Section,  Tool Type . LD . key )  ;  if  ( !tool Provider . is Present (  )  )  {     return  Optional . empty (  )  ;  }  Optional< Linker Provider .  Type> type = delegate . get Enum ( cxx Section, LINKER_PLATFORM,  Linker Provider .  Type . class )  ;  return  Optional . of ( new  Default Linker Provider ( type . or Else ( default Type ) , tool Provider . get (  ) , should Cache Links (  )  )  )  ; }"
8974,public void set Status Code ( int status Code ) { this . status Code = status Code ; }
8975,"private void read Setting Info (  ) {  Shared Preferences preferences =  Settings . get Default Shared Preferences ( get Application Context (  )  )  ;  int interval = preferences . get Int (  Settings . KEY_INTERVAL, 5 )  ;  delaytime = interval * 1000 ;  is Floating = preferences . get Boolean (  Settings . KEY_ISFLOAT, true )  ;  sender = preferences . get String (  Settings . KEY_SENDER, BLANK_STRING )  ;  password = preferences . get String (  Settings . KEY_PASSWORD, BLANK_STRING )  ;  recipients = preferences . get String (  Settings . KEY_RECIPIENTS, BLANK_STRING )  ;  receivers = recipients . split ( ""\\s+"" )  ;  smtp = preferences . get String (  Settings . KEY_SMTP, BLANK_STRING )  ;  is Root = preferences . get Boolean (  Settings . KEY_ROOT, false )  ;  is Auto Stop = preferences . get Boolean (  Settings . KEY_AUTO_STOP, true )  ; }"
8976,"public  List< Ref> get Refs By Prefix With Exclusions (  String include,  Set< String> excludes )  throws IO Exception{  Stream< Ref> refs = get Refs ( include )  . values (  )  . stream (  )  ;  for  (  String exclude : excludes )  {     refs = refs . filter (  r -> !r . get Name (  )  . starts With ( exclude )  )  ;  } return  Collections . unmodifiable List ( refs . collect (  Collectors . to List (  )  )  )  ; }"
8977,"public  Base Model View Model_ on Unbind (  On Model Unbound Listener< Base Model View Model_,  Base Model View> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
8978,"public void set Indeterminate Drawable (  Drawable d ) { if  ( d != null )  {     d . set Bounds ( 0, 0, get Width (  ) , get Height (  )  )  ;  } super . set Indeterminate Drawable ( d )  ; }"
8979,"public com . anychart . core . annotations .  Fibonacci Fan height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
8980,public  Task< Load Bundle Task Progress> add On Complete Listener ( @ Non Null  On Complete Listener< Load Bundle Task Progress> on Complete Listener ) { return delegate . add On Complete Listener ( on Complete Listener )  ; }
8981,"protected  Bitmap decode JPEG Byte Array As Purgeable (  Closeable Reference< Pooled Byte Buffer> bytes Ref, int length,  Bitmap Factory .  Options options ) { byte [  ]  suffix = ends With EOI ( bytes Ref, length )  ? null : EOI ;  return decode File Descriptor As Purgeable ( bytes Ref, length, suffix, options )  ; }"
8982,public final float length (  ) { return  Math Utils . sqrt ( x * x + y * y )  ; }
8983,"public static void create Table (  Database db, boolean if Not Exists ) {  String constraint = if Not Exists ? ""IF NOT EXISTS "" : """" ;  db . exec SQL ( // ""CREATE TABLE "" + constraint + ""\""TO_ONE_TARGET2\""  ( "" + // 0: id ""\""_id\"" INTEGER PRIMARY KEY  )  ; "" )  ; }"
8984,private static  Annotation get Signature (  Attribute List attribs ) {  Att Signature signature =  (  Att Signature )  attribs . find First (  Att Signature . ATTRIBUTE_NAME )  ;  if  ( signature == null )  {     return null ;  } return  Annotation Utils . make Signature ( signature . get Signature (  )  )  ; }
8985,"public com . anychart . core . gantt .  Time Line Header fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
8986,"public com . anychart . core . annotations .  Fibonacci Arc stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8987,"public com . anychart . core . stock . scrollerseries .  Range Area bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
8988,"public com . anychart . charts .  Sunburst select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
8989,public static boolean get Allow Pii (  ) { return s Allow Pii ; }
8990,"private  Persisted Installation Entry get Multi Process Safe Prefs (  ) { synchronized  ( lock Generate Fid )  {      Cross Process Lock lock =  Cross Process Lock . acquire ( firebase App . get Application Context (  ) , LOCKFILE_NAME_GENERATE_FID )  ;      try {          Persisted Installation Entry prefs = persisted Installation . read Persisted Installation Entry Value (  )  ;          return prefs ;      } finally {         // but we need to be sure to only release if we got a lock .          if  ( lock != null )  {             lock . release And Close (  )  ;          }     } }}"
8991,"public com . anychart . core . stock . scrollerseries .  Discrete Base width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
8992,"public boolean should Override Url Loading (  Web View view,  String url ) {  Log . e ( TAG, "" Middleware Web Client Base#should Override Url Loading url:"" + url )  ;  if  ( super . should Override Url Loading ( view, url )  )  {     // 执行  Default Web Client#should Override Url Loading     return true ;  } // do you work return false ; }"
8993,"public static int get Int ( @ Non Null final  String key, final int default Value, @ Non Null final SP Utils sp Utils ) { return sp Utils . get Int ( key, default Value )  ; }"
8994,"public static void add On Console Listener Instance (  Context context,  On Console Status Listener on Console Status Listener ) { on Console Status Listener . set Context ( context )  ;  boolean effectively Added = context . get Status Manager (  )  . add ( on Console Status Listener )  ;  if  ( effectively Added )  {     on Console Status Listener . start (  )  ;  }}"
8995,public static I Abstract File get Manifest ( @ Non Null I Abstract Folder project Folder ) { I Abstract File file = project Folder . get File (  Sdk Constants . FN_ANDROID_MANIFEST_XML )  ;  if  ( file != null && file . exists (  )  )  {     return file ;  } return null ; }
8996,public boolean is Post Order Traversal (  ) { return post Order Traversal ; }
8997,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
8998,"public static  String get Guid Description ( final GUID guid ) {  String result = null ;  if  ( guid == null )  {     throw new  Illegal Argument Exception ( "" Argument must not be null . "" )  ;  } if  ( get Configured ( guid )  != null )  {     result = get Configured ( guid )  . get Description (  )  ;  } return result ; }"
8999,public void set Text (  Char Sequence text ) { if  ( text == null || !text . equals ( m Text )  )  {     m Text = text ;      m Text To Draw = null ;      clear Texture (  )  ;      recalculate (  )  ;  }}
9000,"Collection<V> wrap Collection ( @ Nullable K key,  Collection<V> collection ) { return new  Wrapped Collection ( key, collection, null )  ; }"
9001,public  List< Capability Filter> get Capability Filters (  ) { return capability Filters ; }
9002,public float get Body Range (  ) { return  Math . abs ( m Open - m Close )  ; }
9003,"public com . anychart . core . stock . scrollerseries .  Range Spline Area max Point Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Point Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
9004,"public void upload To Media Library (  String caption,  File image File, boolean should Launch Media Dialog )  throws  File Not Found Exception{ this . upload To Media Library ( caption, image File, should Launch Media Dialog, null )  ; }"
9005,"public boolean is View Under (  View view, int x, int y ) { if  ( view == null )  {     return false ;  } return x >= view . get Left (  )  && x < view . get Right (  )  && y >= view . get Top (  )  && y < view . get Bottom (  )  ; }"
9006,"private static int fast Border Compatible Color Or Zero ( int border Left, int border Top, int border Right, int border Bottom, int color Left, int color Top, int color Right, int color Bottom ) { int and Smear =  ( border Left > 0 ? color Left : ALL_BITS_SET )  &  ( border Top > 0 ? color Top : ALL_BITS_SET )  &  ( border Right > 0 ? color Right : ALL_BITS_SET )  &  ( border Bottom > 0 ? color Bottom : ALL_BITS_SET )  ;  int or Smear =  ( border Left > 0 ? color Left : ALL_BITS_UNSET )  |  ( border Top > 0 ? color Top : ALL_BITS_UNSET )  |  ( border Right > 0 ? color Right : ALL_BITS_UNSET )  |  ( border Bottom > 0 ? color Bottom : ALL_BITS_UNSET )  ;  return and Smear == or Smear ? and Smear : 0 ; }"
9007,"private void check And Clear Cache Data (  ) {  Sonic Engine . get Instance (  )  . get Runtime (  )  . post Task To Thread ( new  Runnable (  )  {     @ Override     public void run (  )  {         if  (  Sonic Utils . should Clear Cache (  Sonic Engine . get Instance (  )  . get Config (  )  . SONIC_CACHE_CHECK_TIME_INTERVAL )  )  {              Sonic Engine . get Instance (  )  . trim Sonic Cache (  )  ;               Sonic Utils . save Clear Cache Time (  System . current Time Millis (  )  )  ;          }     } }, 50 )  ; }"
9008,"public void write Annotations To (  Writer out )  throws IO Exception{ int width2 = get Annotation Width (  )  ;  int width1 = annotation Width - width2 - 1 ;   Two Column Output twoc = new  Two Column Output ( out, width1, width2, ""|"" )  ;   Writer left = twoc . get Left (  )  ;   Writer right = twoc . get Right (  )  ;  // left-hand byte output cursor int left At = 0 ;  // right-hand annotation index int right At = 0 ;  int right Sz = annotations . size (  )  ;  while  (  ( left At < cursor )  &&  ( right At < right Sz )  )  {      Annotation a = annotations . get ( right At )  ;      int start = a . get Start (  )  ;      int end ;       String text ;      if  ( left At < start )  {         //  This is an area with no annotation .          end = start ;          start = left At ;          text = """" ;      } else {         //  This is an area with an annotation .          end = a . get End (  )  ;          text = a . get Text (  )  ;          right At++ ;      }     left . write (  Hex . dump ( data, start, end - start, start, hex Cols, 6 )  )  ;      right . write ( text )  ;      twoc . flush (  )  ;      left At = end ;  } if  ( left At < cursor )  {     //  There is unannotated output at the end .      left . write (  Hex . dump ( data, left At, cursor - left At, left At, hex Cols, 6 )  )  ;  } while  ( right At < right Sz )  {     //  There are zero-byte annotations at the end .      right . write ( annotations . get ( right At )  . get Text (  )  )  ;      right At++ ;  } twoc . flush (  )  ; }"
9009,public GPU Image Filter get Filter (  ) { return filter ; }
9010,"final void parse Access Layer PDU ( @ Non Null final  Access Message message ) { //MSB of the first octet defines the length of opcodes .  //if MSB = 0 length is 1 and so forth final byte [  ]  access Payload = message . get Access Pdu (  )  ;  final int op Code Length = get Op Code Length ( access Payload [ 0 ]  & 0x FF )  ;  message . set Op Code ( get Op Code ( access Payload, op Code Length )  )  ;  final int length = access Payload . length - op Code Length ;  final  Byte Buffer params Buffer =  Byte Buffer . allocate ( length )  . order (  Byte Order . BIG_ENDIAN )  ;  params Buffer . put ( access Payload, op Code Length, length )  ;  message . set Parameters ( params Buffer . array (  )  )  ;   Log . v ( TAG, "" Received  Access PDU "" + bytes To Hex ( access Payload, false )  )  ; }"
9011,"public void format (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . format (  )  ; "" )  ; }"
9012,"public  Object lookup (  String service Name ) { if  ( service Name . equals ( ""jndi/service A"" )  )  {     LOGGER . info ( "" Looking up service A and creating new service for A"" )  ;      return new  Service Impl ( ""jndi/service A"" )  ;  } else if  ( service Name . equals ( ""jndi/service B"" )  )  {     LOGGER . info ( "" Looking up service B and creating new service for B"" )  ;      return new  Service Impl ( ""jndi/service B"" )  ;  } else {     return null ;  }}"
9013,"public T auto Clone (  ) { if  ( is Locked && !is Auto Clone Enabled )  {     throw new  Illegal State Exception ( "" You cannot auto lock an already locked options object"" + "", try clone (  )  first"" )  ;  } is Auto Clone Enabled = true ;  return lock (  )  ; }"
9014,public static  Lottery Numbers create Random (  ) { return new  Lottery Numbers (  )  ; }
9015,"public com . anychart . core . gantt . elements .  Tasks Element stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9016,public double get X Axis Min ( int scale ) { return m Min X [ scale ]  ; }
9017,public  Ls Remote Command ls Remote (  ) { return new  Ls Remote Command ( repo )  ; }
9018,"public void on Item Checked State Changed (  Action Mode mode, int position, long id, boolean checked ) { on Item Selected State Changed ( mode )  ;   Multi Choice Adapter adapter =  (  Multi Choice Adapter )  owner ;   Card card = adapter . get Item ( position )  ;  adapter . on Item Checked State Changed ( mode, position, id, checked, card . get Card View (  ) , card )  ; }"
9019,public  Lat Lng Bounds get Bounding Box (  ) { return m Bounding Box ; }
9020,"public com . anychart . core . annotations .  Fibonacci Base bounds ( com . anychart . utils .  Rect Obj bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
9021,public static int get Task Affinity Group Index (  String task Affinity )  throws  Remote Exception{ return  Plugin Process Main . get Plugin Host (  )  . get Task Affinity Group Index ( task Affinity )  ; }
9022,public  Locals Array get Locals (  ) { return locals ; }
9023,"public com . anychart . core . gantt .  Data Grid Button line Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Height ( %s )  ; "", height )  )  ;  return this ; }"
9024,public void set Ellipsize ( boolean ellipsize ) { this . ellipsize = ellipsize ; }
9025,"public  Adapter< View Holder> while Started ( @ Non Null final  Activity activity ) { final  Repository Adapter repository Adapter = new  Repository Adapter ( this )  ;  activity . get Application (  )  . register Activity Lifecycle Callbacks ( new  While Started Activity Lifecycle Callbacks ( activity, repository Adapter )  )  ;  return repository Adapter ; }"
9026,"private byte [  ]  pad Password ( byte [  ]  password ) { if  ( password == null )  {     password = new byte [ 0 ]  ;  } //  Step 1:  Pad or truncate the password string to exactly 32 bytes .   If // the password string is more than 32 bytes long, use only its first 32 // bytes ;  if it is less than 32 bytes long, pad it by appending the // required number of additional bytes from the beginning of the // following padding string: // < 28 BF 4 E 5 E 4 E 75 8 A 41 64 00 4 E 56 FF FA 01 08 //   2 E 2 E 00 B6 D0 68 3 E 80 2 F 0 C A9 FE 64 53 69 7 A > //  That is, if the password string is n bytes long, append the first 32 // â n bytes of the padding string to the end of the password string .   If // the password string is empty  ( zero-length ) , meaning there is no user // password, substitute the entire padding string in its place .  byte [  ]  padded = new byte [ 32 ]  ;  // limit password to 32 bytes final int num Contributing Password Bytes = password . length > padded . length ? padded . length : password . length ;   System . arraycopy ( password, 0, padded, 0, num Contributing Password Bytes )  ;  //  Copy padding if  ( password . length < padded . length )  {      System . arraycopy ( PW_PADDING, 0, padded, password . length, padded . length - password . length )  ;  } return padded ; }"
9027,"public  Fake Ticker advance ( long time,  Time Unit time Unit ) { return advance ( time Unit . to Nanos ( time )  )  ; }"
9028,"private static void set User Property If Required (  Intent intent ) { if  ( intent == null )  {     return ;  } //  If the user requested to track conversions, set the user property .   String should Track Conversions = intent . get String Extra (  Constants .  Analytics Keys . TRACK_CONVERSIONS )  ;  if  ( ""1"" . equals ( should Track Conversions )  )  {     // TODO ( b/78465387 )   Use components dependency framework to get analytics Connector obj     @ Suppress Warnings ( "" Firebase Use Explicit Dependencies"" )   Analytics Connector analytics =  Firebase App . get Instance (  )  . get (  Analytics Connector . class )  ;      if  (  Log . is Loggable ( TAG,  Log . DEBUG )  )  {          Log . d ( TAG, "" Received event with track-conversion=true . "" + ""  Setting user property and reengagement event"" )  ;      }     if  ( analytics != null )  {          String composer Id = intent . get String Extra (  Constants .  Analytics Keys . COMPOSER_ID )  ;          analytics . set User Property (  Scion Analytics . ORIGIN_FCM,  Scion Analytics . USER_PROPERTY_FIREBASE_LAST_NOTIFICATION, composer Id )  ;          //  Also set the reengagement attribution          Bundle params = new  Bundle (  )  ;          params . put String (  Scion Analytics . PARAM_SOURCE, REENGAGEMENT_SOURCE )  ;          params . put String (  Scion Analytics . PARAM_MEDIUM, REENGAGEMENT_MEDIUM )  ;          params . put String (  Scion Analytics . PARAM_CAMPAIGN, composer Id )  ;          analytics . log Event (  Scion Analytics . ORIGIN_FCM,  Scion Analytics . EVENT_FIREBASE_CAMPAIGN, params )  ;      } else {         //  Client did not include the measurement library          Log . w ( TAG, "" Unable to set user property for conversion tracking: "" + "" analytics library is missing"" )  ;      } } else {     if  (  Log . is Loggable ( TAG,  Log . DEBUG )  )  {          Log . d ( TAG, "" Received event with track-conversion=false .   Do not set user property"" )  ;      } }}"
9029,"public  Map< String,  Object> get Properties (  ) { return properties ; }"
9030,void read Bytes ( byte [  ]  buffer )  throws IO Exception{ m Dex File . read Fully ( buffer )  ; }
9031,"public void store (  Output Stream output Stream )  throws IO Exception{  Object Output Stream object Output Stream = new  Object Output Stream ( output Stream )  ;  try {     //  Explicitly specify a protocol version, just in case the default protocol gets updated with     // a new version of  Java .   We need to ensure the serialized data can be read by older versions     // of  Java, as the fat jar stub, which references this class, is compiled against an older     // version of  Java for compatibility purposes, unlike the main  Buck jar, which also references     // this class .      object Output Stream . use Protocol Version (  Object Stream Constants . PROTOCOL_VERSION_2 )  ;      object Output Stream . write Object ( this )  ;  } finally {     object Output Stream . close (  )  ;  }}"
9032,"public  Target Data with Resume Token (  Byte String resume Token,  Snapshot Version snapshot Version ) { return new  Target Data ( target, target Id, sequence Number, purpose, snapshot Version, last Limbo Free Snapshot Version, resume Token )  ; }"
9033,public boolean is Using Sideband (  ) { return using Sideband ; }
9034,"public static void pop To ( @ Non Null final  Fragment Manager fm, final  Class<? extends  Fragment> pop Clz, final boolean is Include Self ) { pop To ( fm, pop Clz, is Include Self, true )  ; }"
9035,"public static void quit (  Context cx,  Scriptable this Obj,  Object [  ]  args,  Function fun Obj ) {  Global global = get Instance ( fun Obj )  ;  if  ( global . quit Action != null )  {     int exit Code =  ( args . length == 0 ? 0 :  Script Runtime . to Int32 ( args [ 0 ]  )  )  ;      global . quit Action . quit ( cx, exit Code )  ;  }}"
9036,"Node create Label ( int lineno ) { return new  Node .  Jump (  Token . LABEL, lineno )  ; }"
9037,"public com . anychart . core . ui .  Center fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
9038,"public void write Constant (  Constant cst ) { int type = constant To Value Type ( cst )  ;  int arg ;  switch ( type )  {     case VALUE_BYTE:     case VALUE_SHORT:     case VALUE_INT:     case VALUE_LONG:         {             long value =  (  (  Cst Literal Bits )  cst )  . get Long Bits (  )  ;               Encoded Value Codec . write Signed Integral Value ( out, type, value )  ;              break ;          }     case VALUE_CHAR:         {             long value =  (  (  Cst Literal Bits )  cst )  . get Long Bits (  )  ;               Encoded Value Codec . write Unsigned Integral Value ( out, type, value )  ;              break ;          }     case VALUE_FLOAT:         {             //  Shift value left 32 so that right-zero-extension works .              long value =  (  (  Cst Float )  cst )  . get Long Bits (  )  << 32 ;               Encoded Value Codec . write Right Zero Extended Value ( out, type, value )  ;              break ;          }     case VALUE_DOUBLE:         {             long value =  (  (  Cst Double )  cst )  . get Long Bits (  )  ;               Encoded Value Codec . write Right Zero Extended Value ( out, type, value )  ;              break ;          }     case VALUE_STRING:         {             int index = file . get String Ids (  )  . index Of (  (  Cst String )  cst )  ;               Encoded Value Codec . write Unsigned Integral Value ( out, type,  ( long )  index )  ;              break ;          }     case VALUE_TYPE:         {             int index = file . get Type Ids (  )  . index Of (  (  Cst Type )  cst )  ;               Encoded Value Codec . write Unsigned Integral Value ( out, type,  ( long )  index )  ;              break ;          }     case VALUE_FIELD:         {             int index = file . get Field Ids (  )  . index Of (  (  Cst Field Ref )  cst )  ;               Encoded Value Codec . write Unsigned Integral Value ( out, type,  ( long )  index )  ;              break ;          }     case VALUE_METHOD:         {             int index = file . get Method Ids (  )  . index Of (  (  Cst Method Ref )  cst )  ;               Encoded Value Codec . write Unsigned Integral Value ( out, type,  ( long )  index )  ;              break ;          }     case VALUE_ENUM:         {              Cst Field Ref field Ref =  (  (  Cst Enum Ref )  cst )  . get Field Ref (  )  ;              int index = file . get Field Ids (  )  . index Of ( field Ref )  ;               Encoded Value Codec . write Unsigned Integral Value ( out, type,  ( long )  index )  ;              break ;          }     case VALUE_ARRAY:         {             out . write Byte ( type )  ;              write Array (  (  Cst Array )  cst, false )  ;              break ;          }     case VALUE_ANNOTATION:         {             out . write Byte ( type )  ;              write Annotation (  (  (  Cst Annotation )  cst )  . get Annotation (  ) , false )  ;              break ;          }     case VALUE_NULL:         {             out . write Byte ( type )  ;              break ;          }     case VALUE_BOOLEAN:         {             int value =  (  (  Cst Boolean )  cst )  . get Int Bits (  )  ;              out . write Byte ( type |  ( value << 5 )  )  ;              break ;          }     default:         {             throw new  Runtime Exception ( "" Shouldn't happen"" )  ;          } }}"
9039,"public com . anychart . standalones .  Labels Factory font Weight (  String weight ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Weight ( %s )  ; "", wrap Quotes ( weight )  )  )  ;  return this ; }"
9040,"public void test Multiple Merges (  )  throws  Exception{ final  Rev Commit a1 = commit (  )  ;  final  Rev Commit b1 = commit ( a1 )  ;  final  Rev Commit a2 = commit ( a1 )  ;  final  Rev Commit a3 = commit ( a2, b1 )  ;  final  Rev Commit b2 = commit ( b1 )  ;  final  Rev Commit a4 = commit ( a3, b2 )  ;  final  Rev Commit b3 = commit ( b2 )  ;  try  (  Plot Walk pw = new  Plot Walk ( db )  )  {     pw . mark Start ( pw . lookup Commit ( a4 )  )  ;      pw . mark Start ( pw . lookup Commit ( b3 )  )  ;       Plot Commit List< Plot Lane> pcl = new  Plot Commit List<> (  )  ;      pcl . source ( pw )  ;      pcl . fill To (  Integer . MAX_VALUE )  ;       Set< Integer> positions = as Set ( 0, 1 )  ;       Commit List Assert test = new  Commit List Assert ( pcl )  ;      int pos B = test . commit ( b3 )  . lane Pos ( positions )  . get Lane Pos (  )  ;      int pos A = test . commit ( a4 )  . lane Pos ( positions )  . get Lane Pos (  )  ;      test . commit ( b2 )  . lane Pos ( pos B )  ;      test . commit ( a3 )  . lane Pos ( pos A )  ;      test . commit ( a2 )  . lane Pos ( pos A )  ;      test . commit ( b1 )  . lane Pos ( pos B )  ;      test . commit ( a1 )  . lane Pos ( pos A )  ;      test . no More Commits (  )  ;  }}"
9041,"public com . anychart . scales .  Scatter Base y Scale (  ) { return new com . anychart . scales .  Scatter Base ( js Base + "" . y Scale (  ) "" )  ; }"
9042,"public  Builder base Url (  String base Url ) {  Util . check Null ( base Url, ""base Url"" )  ;  this . base Url = create Url ( base Url )  ;  return this ; }"
9043,public boolean can Scroll Vertically (  ) { return m Orientation == VERTICAL ; }
9044,"public com . anychart . charts .  Sunburst context Menu (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . context Menu ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9045,"public static  Immutable Sorted Map<K, V> of ( K k1, V v1, K k2, V v2, K k3, V v3 ) { throw new  Unsupported Operation Exception (  )  ; }"
9046,"public  Object Builder add Raw (  String field Name,  String raw Value ) { try {     get Generator (  )  . write Field Name ( field Name )  ;      get Generator (  )  . write Raw Value ( raw Value )  ;  } catch  ( IO Exception e )  {     throw to Assertion Error ( e )  ;  } return this ; }"
9047,"public com . anychart . core . lineargauge . pointers .  Led fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
9048,"public com . anychart . core . cartesian . series .  Spline spline (  String data, com . anychart . enums .  Text Parsing Mode csv Settings ) { return new com . anychart . core . cartesian . series .  Spline (  String . format (  Locale . US, js Base + "" . spline ( %s, %s ) "", wrap Quotes ( data ) ,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
9049,"public com . anychart . core . utils .  Interactivity interactivity (  ) { return new com . anychart . core . utils .  Interactivity ( js Base + "" . interactivity (  ) "" )  ; }"
9050,"public  Class Specification parse Class Specification Arguments (  )  throws  Parse Exception, IO Exception{ //  Clear the annotation type .   String annotation Type = null ;  //  Clear the class access modifiers .  int required Set Class Access Flags = 0 ;  int required Unset Class Access Flags = 0 ;  //  Parse the class annotations and access modifiers until the class keyword .  while  ( ! Atlas Proguard Constants . CLASS_KEYWORD . equals ( next Word )  )  {     //  Strip the negating sign, if any .      boolean negated = next Word . starts With (  Atlas Proguard Constants . NEGATOR_KEYWORD )  ;       String stripped Word = negated ? next Word . substring ( 1 )  : next Word ;      //  Parse the class access modifiers .      int access Flag = stripped Word . equals (  Java Constants . ACC_PUBLIC )  ?  Class Constants . ACC_PUBLIC : stripped Word . equals (  Java Constants . ACC_FINAL )  ?  Class Constants . ACC_FINAL : stripped Word . equals (  Java Constants . ACC_INTERFACE )  ?  Class Constants . ACC_INTERFACE : stripped Word . equals (  Java Constants . ACC_ABSTRACT )  ?  Class Constants . ACC_ABSTRACT : stripped Word . equals (  Java Constants . ACC_SYNTHETIC )  ?  Class Constants . ACC_SYNTHETIC : stripped Word . equals (  Java Constants . ACC_ANNOTATION )  ?  Class Constants . ACC_ANNOTATTION : stripped Word . equals (  Java Constants . ACC_ENUM )  ?  Class Constants . ACC_ENUM : unknown Access Flag (  )  ;      //  Is it an annotation modifier?     if  ( access Flag ==  Class Constants . ACC_ANNOTATTION )  {         //  Already read the next word .          read Next Word ( ""annotation type or keyword '"" +  Java Constants . ACC_INTERFACE + ""'"", false, false )  ;          //  Is the next word actually an annotation type?         if  ( !next Word . equals (  Java Constants . ACC_INTERFACE )  && !next Word . equals (  Java Constants . ACC_ENUM )  && !next Word . equals (  Atlas Proguard Constants . CLASS_KEYWORD )  )  {             //  Parse the annotation type .              annotation Type =  List Util . comma Separated String ( parse Comma Separated List ( ""annotation type"", false, false, false, false, true, false, false, true, null ) , false )  ;              // in the next cycle .              continue ;          }     //  Otherwise just handle the annotation modifier .      }     if  ( !negated )  {         required Set Class Access Flags |= access Flag ;      } else {         required Unset Class Access Flags |= access Flag ;      }     if  (  ( required Set Class Access Flags & required Unset Class Access Flags )  != 0 )  {         throw new  Parse Exception ( "" Conflicting class access modifiers for '"" + stripped Word + ""' before "" + reader . location Description (  )  )  ;      }     if  ( stripped Word . equals (  Java Constants . ACC_INTERFACE )  || stripped Word . equals (  Java Constants . ACC_ENUM )  || stripped Word . equals (  Atlas Proguard Constants . CLASS_KEYWORD )  )  {         //  The interface or enum keyword .   Stop parsing the class flags .          break ;      }     //  Should we read the next word?     if  ( access Flag !=  Class Constants . ACC_ANNOTATTION )  {         read Next Word ( ""keyword '"" +  Atlas Proguard Constants . CLASS_KEYWORD + ""', '"" +  Java Constants . ACC_INTERFACE + ""', or '"" +  Java Constants . ACC_ENUM + ""'"", false, true )  ;      } } //  Parse the class name part .   String external Class Name =  List Util . comma Separated String ( parse Comma Separated List ( ""class name or interface name"", true, false, false, false, true, false, false, false, null ) , false )  ;  //  For backward compatibility, allow a single ""*"" wildcard to match any // class .   String class Name =  Atlas Proguard Constants . ANY_CLASS_KEYWORD . equals ( external Class Name )  ? null :  Class Util . internal Class Name ( external Class Name )  ;  //  Clear the annotation type and the class name of the extends part .   String extends Annotation Type = null ;   String extends Class Name = null ;  if  ( !configuration End (  )  )  {     //  Parse 'implements  .  .  . ' or 'extends  .  .  . ' part, if any .      if  (  Atlas Proguard Constants . IMPLEMENTS_KEYWORD . equals ( next Word )  ||  Atlas Proguard Constants . EXTENDS_KEYWORD . equals ( next Word )  )  {         read Next Word ( ""class name or interface name"", false, true )  ;          //  Parse the annotation type, if any .          if  (  Atlas Proguard Constants . ANNOTATION_KEYWORD . equals ( next Word )  )  {             extends Annotation Type =  List Util . comma Separated String ( parse Comma Separated List ( ""annotation type"", true, false, false, false, true, false, false, true, null ) , false )  ;          }          String external Extends Class Name =  List Util . comma Separated String ( parse Comma Separated List ( ""class name or interface name"", false, false, false, false, true, false, false, false, null ) , false )  ;          extends Class Name =  Atlas Proguard Constants . ANY_CLASS_KEYWORD . equals ( external Extends Class Name )  ? null :  Class Util . internal Class Name ( external Extends Class Name )  ;      } } //  Create the basic class specification .   Class Specification class Specification = new  Class Specification ( last Comments, required Set Class Access Flags, required Unset Class Access Flags, annotation Type, class Name, extends Annotation Type, extends Class Name )  ;  //  Now add any class members to this class specification .  if  ( !configuration End (  )  )  {     //  Check the class member opening part .      if  ( ! Atlas Proguard Constants . OPEN_KEYWORD . equals ( next Word )  )  {         throw new  Parse Exception ( "" Expecting opening '"" +  Atlas Proguard Constants . OPEN_KEYWORD + ""' at "" + reader . location Description (  )  )  ;      }     //  Parse all class members .      while  ( true )  {         read Next Word ( ""class member description"" + "" or closing '"" +  Atlas Proguard Constants . CLOSE_KEYWORD + ""'"", false, true )  ;          if  ( next Word . equals (  Atlas Proguard Constants . CLOSE_KEYWORD )  )  {             //  The closing brace .   Stop parsing the class members .              read Next Word (  )  ;              break ;          }         parse Member Specification Arguments ( external Class Name, class Specification )  ;      } } return class Specification ; }"
9051,public boolean get Is Pending Cover (  ) { return m Is Pending Cover ; }
9052,"public com . anychart . core .  State Settings upper Labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . upper Labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9053,public int get Hours (  ) { int hours = m Input [ 3 ]  * 10 + m Input [ 2 ]  ;  if  ( hours == 12 )  {     switch ( m Am Pm State )  {         case PM_SELECTED:             return 12 ;          case AM_SELECTED:             return 0 ;          case HOURS24_MODE:             return hours ;          default:             break ;      } } return hours +  ( m Am Pm State == PM_SELECTED ? 12 : 0 )  ; }
9054,"private long pow Mod ( long a, long p, long m ) { long res = 1 ;  for  (  ;  p != 0 ;  p >>= 1 )  {     if  (  ( p & 1 )  != 0 )  {         res = mul Mod ( res, a, m )  ;      }     a = square Mod ( a, m )  ;  } return res ; }"
9055,"public com . anychart . core . ui .  Crosshair y Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
9056,public static _ Fields find By Thrift Id ( int field Id ) { switch ( field Id )  {     case // STORE_ID     1:         return STORE_ID ;      case // STORE_TTLSECONDS     2:         return STORE_TTLSECONDS ;      case // LAST_STORE_EPOCH_SECONDS     3:         return LAST_STORE_EPOCH_SECONDS ;      case // LAST_ATTEMPTED_STORE_EPOCH_SECONDS     4:         return LAST_ATTEMPTED_STORE_EPOCH_SECONDS ;      case // LAST_FETCH_EPOCH_SECONDS     5:         return LAST_FETCH_EPOCH_SECONDS ;      case // REPOSITORY     6:         return REPOSITORY ;      case // SCHEDULE_TYPE     7:         return SCHEDULE_TYPE ;      case // FETCH_COUNT     8:         return FETCH_COUNT ;      case // ATTEMPTED_STORE_COUNT     9:         return ATTEMPTED_STORE_COUNT ;      default:         return null ;  }}
9057,public int get Segment ( @ Non Null  Composed Child Adapter Tag tag ) { return m Adapters Set . get Adapter Segment ( tag )  ; }
9058,public boolean is Managed (  ) { return true ; }
9059,"public com . anychart . charts .  Circular Gauge remove All Pointers (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . remove All Pointers (  )  ; "" )  ;  return this ; }"
9060,"public static  Intent create Response Handling Intent (  Context context,  Uri response Uri ) {  Intent intent = create Base Intent ( context )  ;  intent . set Data ( response Uri )  ;  intent . add Flags (  Intent . FLAG_ACTIVITY_CLEAR_TOP |  Intent . FLAG_ACTIVITY_SINGLE_TOP )  ;  return intent ; }"
9061,"public synchronized void set Performance Collection Enabled ( @ Nullable  Boolean enable ) { //  If  Firebase App is not initialized,  Firebase  Performance API is not effective yet .  try {      Firebase App . get Instance (  )  ;  } catch  (  Illegal State Exception e )  {     return ;  } if  ( config Resolver . get Is Performance Collection Deactivated (  )  )  {     logger . info ( "" Firebase  Performance is permanently disabled"" )  ;      return ;  } // set Is Performance Collection Enabled should be called before get Is Performance Collection Enabled // bcz we want the m Performance Collection Force Enabled State to reflect the most updated value .  config Resolver . set Is Performance Collection Enabled ( enable )  ;  if  ( enable != null )  {     m Performance Collection Force Enabled State = enable ;  } else {     //  Get the data collection enablement value based on the manifest configuration .      m Performance Collection Force Enabled State = config Resolver . get Is Performance Collection Enabled (  )  ;  } if  (  Boolean . TRUE . equals ( m Performance Collection Force Enabled State )  )  {     logger . info ( "" Firebase  Performance is  Enabled"" )  ;  } else if  (  Boolean . FALSE . equals ( m Performance Collection Force Enabled State )  )  {     logger . info ( "" Firebase  Performance is  Disabled"" )  ;  }}"
9062,"public int get Cumulative Progress (  ) { int num Children = get Child Count (  )  ;  int total = 0 ;  for  ( int i = 0 ;  i < num Children ;  i++ )  {     total += get Child Progress ( i )  ;  } check Cumulative Smaller Than Max ( max Progress, total )  ;  return total ; }"
9063,"public void set Variance Percent ( int variance Percent ) { check Percentage Validity ( variance Percent, "" Variance percentage must be between 0 and 100 . "" )  ;  this . variance Percent = variance Percent ; }"
9064,public static  File get Root Directory (  ) { return is Available (  )  ?  Environment . get External Storage Directory (  )  : null ; }
9065,"public com . anychart . core . gantt . elements .  Milestones Element stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
9066,"public void on Server Closed ( final  Sonic Server sonic Server, final boolean read Complete ) { // if the session has been destroyed, exit directly if  ( is Destroyed Or Waiting For Destroy (  )  )  {     return ;  } // set pending Web Resource Stream to null，or it has a problem when client reload the page .  if  ( null != pending Web Resource Stream )  {     pending Web Resource Stream = null ;  } is Waiting For Save File . set ( true )  ;  long on Close Start Time =  System . current Time Millis (  )  ;  // Separate and save html .  if  ( read Complete )  {      String cache Offline = sonic Server . get Response Header Field (  Sonic Session Connection . CUSTOM_HEAD_FILED_CACHE_OFFLINE )  ;      if  (  Sonic Utils . need Save Data ( config . SUPPORT_CACHE_CONTROL, cache Offline, sonic Server . get Response Header Fields (  )  )  )  {          Sonic Utils . log ( TAG,  Log . INFO, ""session ( "" + s Id + "" )  on Close:offline->"" + cache Offline + "" , post separate And Save Cache task . "" )  ;           Message message =  Message . obtain (  )  ;          message . what = FILE_THREAD_SAVE_CACHE_ON_SERVER_CLOSE ;          message . obj = sonic Server ;          file Handler . send Message Delayed ( message, 1500 )  ;          return ;      }      Sonic Utils . log ( TAG,  Log . INFO, ""session ( "" + s Id + "" )  on Close:offline->"" + cache Offline + "" , so do not need cache to file . "" )  ;  } else {      Sonic Utils . log ( TAG,  Log . ERROR, ""session ( "" + s Id + "" )  on Close error:read Complete = false!"" )  ;  } //  Current session can be destroyed if it is waiting for destroy .  is Waiting For Save File . set ( false )  ;  if  ( post Force Destroy If Need (  )  )  {      Sonic Utils . log ( TAG,  Log . INFO, ""session ( "" + s Id + "" )  on Close: post Force Destroy If Need send destroy message in chromium_io thread . "" )  ;  } if  (  Sonic Utils . should Log (  Log . DEBUG )  )  {      Sonic Utils . log ( TAG,  Log . ERROR, ""session ( "" + s Id + "" )  on Close cost "" +  (  System . current Time Millis (  )  - on Close Start Time )  + "" ms . "" )  ;  }}"
9067,"public static void main (  String [  ]  args ) {  Context cx =  Context . enter (  )  ;  try {     //  Set version to  Java Script1 . 2 so that we get object-literal style     // printing instead of "" [ object  Object ] ""     cx . set Language Version (  Context . VERSION_1_2 )  ;      //  Initialize the standard objects  (  Object,  Function, etc .  )      //  This must be done before scripts can be executed .       Scriptable scope = cx . init Standard Objects (  )  ;      //  Now we can evaluate a script .   Let's create a new object     // using the object literal notation .       Object result = cx . evaluate String ( scope, ""obj = {a:1, b: [ 'x','y' ] }"", "" My Source"", 1, null )  ;       Scriptable obj =  (  Scriptable )  scope . get ( ""obj"", scope )  ;      //  Should print ""obj == result""  (  Since the result of an assignment     // expression is the value that was assigned )       System . out . println ( ""obj "" +  ( obj == result ? ""=="" : ""!="" )  + "" result"" )  ;      //  Should print ""obj . a == 1""      System . out . println ( ""obj . a == "" + obj . get ( ""a"", obj )  )  ;       Scriptable b =  (  Scriptable )  obj . get ( ""b"", obj )  ;      //  Should print ""obj . b [ 0 ]  == x""      System . out . println ( ""obj . b [ 0 ]  == "" + b . get ( 0, b )  )  ;      //  Should print ""obj . b [ 1 ]  == y""      System . out . println ( ""obj . b [ 1 ]  == "" + b . get ( 1, b )  )  ;      //  Should print {a:1, b: [ ""x"", ""y"" ] }      Function fn =  (  Function )   Scriptable Object . get Property ( obj, ""to String"" )  ;       System . out . println ( fn . call ( cx, scope, obj, new  Object [ 0 ]  )  )  ;  } finally {      Context . exit (  )  ;  }}"
9068,private  Rect F get Graph Bounds (  ) { return m Graph Bounds ; }
9069,"static void delete Channel (  Notification Manager notification Manager,  String channel )  throws  Exception{ notification Manager . get Class (  )  . get Method ( ""delete Notification Channel"",  String . class )  . invoke ( notification Manager, channel )  ; }"
9070,public UB Json Writer value ( float value )  throws IO Exception{ check Name (  )  ;  out . write Byte ( 'd' )  ;  out . write Float ( value )  ;  return this ; }
9071,protected boolean is Full Detail (  Boolean full Detail Request ) { if  ( full Detail Request == null )  {     return default Full Detail ;  } return full Detail Request . boolean Value (  )  ; }
9072,"private void schedule Next Frame (  ) { if  ( !m Is Scheduled )  {     m Is Scheduled = true ;      schedule Self ( this,  System Clock . uptime Millis (  )  + FRAME_INTERVAL_MS )  ;  }}"
9073,"protected  Shader Var get Instance For Data Type (  String name,  Data Type data Type ) { switch ( data Type )  {     case INT:         return new R Int ( name )  ;      case FLOAT:         return new R Float ( name )  ;      case VEC2:         return new R Vec2 ( name )  ;      case VEC3:         return new R Vec3 ( name )  ;      case VEC4:         return new R Vec4 ( name )  ;      case MAT3:         return new R Mat3 ( name )  ;      case MAT4:         return new R Mat4 ( name )  ;      case BOOL:         return new R Bool ( name )  ;      case SAMPLER2 D:         return new R Sampler2 D ( name )  ;      case SAMPLERCUBE:         return new R Sampler Cube ( name )  ;      case SAMPLER_EXTERNAL_EOS:         return new R Sampler External OES ( name )  ;      default:         return null ;  }}"
9074,public void show Suggestions (  ) { if  ( m Adapter != null && m Adapter . get Count (  )  > 0 && m Suggestions List View . get Visibility (  )  == GONE )  {     m Suggestions List View . set Visibility ( VISIBLE )  ;  }}
9075,"public com . anychart . charts .  Tree Map stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
9076,"public com . anychart . core . lineargauge . pointers .  Thermometer fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
9077,"public float calculate Radius ( final  Vector3 center ) { return calculate Radius ( center . x, center . y, center . z, 0, get Num Indices (  ) , null )  ; }"
9078,"public float get ( int key, float default Value ) { if  ( key == 0 )      return has Zero Value ? zero Value : default Value ;  int i = locate Key ( key )  ;  return i >= 0 ? value Table [ i ]  : default Value ; }"
9079,"public com . anychart . core . annotations .  Horizontal Line stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
9080,public  Tree Entity get Parent (  ) {  Long __key = this . parent Id ;  if  ( parent__resolved Key == null || !parent__resolved Key . equals ( __key )  )  {     __throw If Detached (  )  ;       Tree Entity Dao target Dao = dao Session . get Tree Entity Dao (  )  ;       Tree Entity parent New = target Dao . load ( __key )  ;      synchronized  ( this )  {         parent = parent New ;          parent__resolved Key = __key ;      } } return parent ; }
9081,public long get Offset (  ) { return m Offset ; }
9082,"protected void init Attrs (  Context context,  Attribute Set attrs, int def Style ) { list_card_layout_resource ID = R . layout . list_card_layout ;   Typed Array a = context . get Theme (  )  . obtain Styled Attributes ( attrs, R . styleable . card_options, def Style, def Style )  ;  try {     list_card_layout_resource ID = a . get Resource Id ( R . styleable . card_options_list_card_layout_resource ID, this . list_card_layout_resource ID )  ;      int array Ids = a . get Resource Id ( R . styleable . card_options_list_card_layout_resource I Ds, 0 )  ;      if  ( array Ids > 0 )  {          Typed Array layouts = context . get Resources (  )  . obtain Typed Array ( array Ids )  ;          if  ( layouts != null )  {             list_card_layout_resource I Ds = new int [ layouts . length (  )  ]  ;              for  ( int i = 0 ;  i < layouts . length (  )  ;  i++ )  {                 list_card_layout_resource I Ds [ i ]  = layouts . get Resource Id ( i, R . layout . list_card_layout )  ;              }         }         layouts . recycle (  )  ;      } } finally {     a . recycle (  )  ;  }}"
9083,public void close (  ) { if  ( 0 != session Ptr )  {     destroy (  )  ;  } session Ptr = 0 ; }
9084,"void on Set Image Uri Async Complete (  Bitmap Loading Worker Task .  Result result ) { m Bitmap Loading Worker Task = null ;  set Progress Bar Visibility (  )  ;  if  ( result . error == null )  {     m Initial Degrees Rotated = result . degrees Rotated ;      set Bitmap ( result . bitmap, 0, result . uri, result . load Sample Size, result . degrees Rotated )  ;  }  On Set Image Uri Complete Listener listener = m On Set Image Uri Complete Listener ;  if  ( listener != null )  {     listener . on Set Image Uri Complete ( this, result . uri, result . error )  ;  }}"
9085,"public  Intent try Load (  Tinker Application app ) {  Share Tinker Log . d ( TAG, ""try Load test test"" )  ;   Intent result Intent = new  Intent (  )  ;  long begin =  System Clock . elapsed Realtime (  )  ;  try Load Patch Files Internal ( app, result Intent )  ;  long cost =  System Clock . elapsed Realtime (  )  - begin ;   Share Intent Util . set Intent Patch Cost Time ( result Intent, cost )  ;  return result Intent ; }"
9086,public  Immutable Sorted Set< Build Rule> get Target Graph Only Deps (  ) { return target Graph Only Deps ; }
9087,boolean get No Jdk (  ) { return false ; }
9088,public float [  ]  get Radii (  ) { return m Radii ; }
9089,"public com . anychart . core . ui .  Labels Factory min Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . min Labels (  ) "" )  ; }"
9090,public boolean has Port (  ) { return port >= 0 ; }
9091,boolean output File Can Be Copied (  ) { return !get Outputs (  )  . is Empty (  )  ; }
9092,"public T put Instance (  Type Token<T> type, T value ) { throw new  Unsupported Operation Exception (  )  ; }"
9093,public void set Data Collection Default Enabled (  Boolean enabled ) { check Not Deleted (  )  ;  data Collection Config Storage . get (  )  . set Enabled ( enabled )  ; }
9094,"public com . anychart . core . annotations .  Horizontal Line hover Gap (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hover Gap ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
9095,public  Expiration Picker Builder add Expiration Picker Dialog Handler (  Expiration Picker Dialog Handler handler ) { this . m Expiration Picker Dialog Handlers . add ( handler )  ;  return this ; }
9096,"public void set Padding Dp ( @ Dimension ( unit =  Dimension . DP )  int padding Dp ) { int px = dp To Px ( padding Dp != NO_VALUE_SET ? padding Dp : get Default Spacing Between Items Dp (  )  )  ;  set Padding ( px, px, px, px )  ;  set Item Spacing Px ( px )  ; }"
9097,"public void set Multi Touch Enabled ( boolean multi Touch Enabled ) { if  ( m Crop Overlay View . set Multi Touch Enabled ( multi Touch Enabled )  )  {     handle Crop Window Changed ( false, false )  ;      m Crop Overlay View . invalidate (  )  ;  }}"
9098,"public com . anychart . core .  State Settings lower Labels (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . lower Labels ( %s )  ; "", settings )  )  ;  return this ; }"
9099,"void handle Server Close (  Status status ) { hard Assert ( is Started (  ) , "" Can't handle server close on non-started stream!"" )  ;  //  In theory the stream could close cleanly, however, in our current model we never expect this // to happen because if we stop a stream ourselves, this callback will never be called .   To // prevent cases where we retry without a backoff accidentally, we set the stream to error // in all cases .  close (  State .  Error, status )  ; }"
9100,public void set Allows Send Vendor Specific Result Code ( boolean allows Send Vendor Specific Result Code ) { this . allows Send Vendor Specific Result Code = allows Send Vendor Specific Result Code ; }
9101,"public void set Thread Name (  String thread Name )  throws  Illegal State Exception{ if  ( this . thread Name != null )  {     throw new  Illegal State Exception ( ""thread Name has been already set"" )  ;  } this . thread Name = thread Name ; }"
9102,"public void cursor (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . cursor (  )  ; "" )  ; }"
9103,public boolean on Touch Event (  Motion Event event ) { if  ( canvas Quad != null )  {     //  In VR mode so process controller events & ignore touchscreen events .      if  ( event . get Source (  )  !=  Input Device . SOURCE_GAMEPAD )  {         //  Tell the system that we handled the event .   This prevents children from seeing the event .          return true ;      } else {         //  Have the system send the event to child  Views and they will handle clicks .          return super . on Touch Event ( event )  ;      } } else {     //  Not in VR mode so use standard behavior .      return super . on Touch Event ( event )  ;  }}
9104,public int get Pointer Count (  ) { return m Pointer Count ; }
9105,public int get Language Index (  ) { return this . language Index ; }
9106,"public long measure ( @ Non Null  React Context context, @ Non Null  String component Name, @ Non Null  Readable Map local Data, @ Non Null  Readable Map props, @ Non Null  Readable Map state, float width, @ Non Null  Yoga Measure Mode width Mode, float height, @ Non Null  Yoga Measure Mode height Mode, @ Nullable float [  ]  attachments Positions ) { return m View Manager Registry . get ( component Name )  . measure ( context, local Data, props, state, width, width Mode, height, height Mode, attachments Positions )  ; }"
9107,public  String get Revision (  ) { return revision == null ? default Revision : revision ; }
9108,public final void set Family Client Id ( final  String family Client Id ) { m Family Client Id = family Client Id ; }
9109,"public com . anychart . graphics . vector .  Hatch Fill add Child At ( com . anychart . graphics . vector .  Element element,  Number index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . add Child At ( %s, %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null, index )  )  ;  return this ; }"
9110,"public  Map< String,  Ref> exact Ref (  String .  .  .  refs )  throws IO Exception{  Map< String,  Ref> result = new  Hash Map<> ( refs . length )  ;  for  (  String name : refs )  {      Ref ref = exact Ref ( name )  ;      if  ( ref != null )  {         result . put ( name, ref )  ;      } } return result ; }"
9111,"public static  Psi Method create On Event Method (  Psi Class context,  Psi Class event Class,  Collection< Psi Parameter> additional Parameters ) { final  Project project = context . get Project (  )  ;  final  Psi Element Factory factory =  Java Psi Facade . get Element Factory ( project )  ;  final  Psi Type method Return Type =  Psi Event Declarations Extractor . get Return Psi Type ( event Class )  ;   String method Name = ""on"" + event Class . get Name (  )  ;  int postfix = 1 ;  while  ( context . find Methods By Name ( method Name )  . length > 0 )  {     method Name = ""on"" + event Class . get Name (  )  + postfix ;      postfix++ ;  } final  Psi Method method = factory . create Method ( method Name, method Return Type, context )  ;  final  Psi Parameter List parameter List = method . get Parameter List (  )  ;  final  Psi Parameter context Parameter = factory . create Parameter ( CONTEXT_PARAMETER_NAME,  Psi Type . get Type By Name ( get Context Class Name ( context ) , project,  Global Search Scope . all Scope ( project )  ) , context )  ;  parameter List . add ( context Parameter )  ;  final  Psi Field [  ]  event Fields = event Class . get Fields (  )  ;  for  (  Psi Field field : event Fields )  {     final  String field Name = field . get Name (  )  ;      if  ( field Name == null )  {         continue ;      }     final  Psi Parameter parameter = factory . create Parameter ( field Name, field . get Type (  )  )  ;      final  Psi Modifier List parameter Modifier List = parameter . get Modifier List (  )  ;      if  ( parameter Modifier List == null )  {         continue ;      }     parameter Modifier List . add Annotation (  From Event . class . get Name (  )  )  ;      parameter List . add ( parameter )  ;  } for  (  Psi Parameter parameter : additional Parameters )  {     parameter List . add ( parameter )  ;  } final  Psi Modifier List method Modifier List = method . get Modifier List (  )  ;  method Modifier List . add Annotation (  On Event . class . get Name (  )  + "" ( "" + event Class . get Qualified Name (  )  + "" . class ) "" )  ;  method Modifier List . set Modifier Property (  Psi Modifier . PACKAGE_LOCAL, true )  ;  method Modifier List . set Modifier Property (  Psi Modifier . STATIC, true )  ;  return method ; }"
9112,public void set Stream File Threshold ( int new Limit ) { stream File Threshold = new Limit ; }
9113,public int get Min Version (  ) { return min Version ; }
9114,"public  Token Request build (  ) {  String grant Type = infer Grant Type (  )  ;  if  (  Grant Type Values . AUTHORIZATION_CODE . equals ( grant Type )  )  {     check Not Null ( m Authorization Code, ""authorization code must be specified for grant_type = "" +  Grant Type Values . AUTHORIZATION_CODE )  ;  } if  (  Grant Type Values . REFRESH_TOKEN . equals ( grant Type )  )  {     check Not Null ( m Refresh Token, ""refresh token must be specified for grant_type = "" +  Grant Type Values . REFRESH_TOKEN )  ;  } if  ( grant Type . equals (  Grant Type Values . AUTHORIZATION_CODE )  && m Redirect Uri == null )  {     throw new  Illegal State Exception ( ""no redirect URI specified on token request for code exchange"" )  ;  } return new  Token Request ( m Configuration, m Client Id, m Nonce, grant Type, m Redirect Uri, m Scope, m Authorization Code, m Refresh Token, m Code Verifier,  Collections . unmodifiable Map ( m Additional Parameters )  )  ; }"
9115,public void set Max Num Metering Areas ( int max Num Metering Areas ) { this . max Num Metering Areas = max Num Metering Areas ; }
9116,public void set On Mini Controller Changed Listener (  On Mini Controller Changed Listener listener ) { if  ( null != listener )  {     this . listener = listener ;  }}
9117,public void clear (  ) { int h = head ;  int t = tail ;  if  ( h != t )  {     // clear all cells     head = tail = 0 ;      int i = h ;      int mask = elements . length - 1 ;      do {         elements [ i ]  = null ;          i =  ( i + 1 )  & mask ;      } while  ( i != t )  ;  }}
9118,public void cancel (  ) { dragging Pointer = -1 ;  touch Scroll H = false ;  touch Scroll V = false ;  flick Scroll Listener . get Gesture Detector (  )  . cancel (  )  ; }
9119,"public  String to String (  ) {  String value =  Integer . to Hex String (  (  ( int )   ( 255 * r )  << 24 )  |  (  ( int )   ( 255 * g )  << 16 )  |  (  ( int )   ( 255 * b )  << 8 )  |  (  ( int )   ( 255 * a )  )  )  ;  while  ( value . length (  )  < 8 )  value = ""0"" + value ;  return value ; }"
9120,"public void dispose (  ) { GL20 gl =  Gdx . gl20 ;  for  ( T texture : texture Attachments )  {     dispose Color Texture ( texture )  ;  } if  ( has Depth Stencil Packed Buffer )  {     gl . gl Delete Renderbuffer ( depth Stencil Packed Buffer Handle )  ;  } else {     if  ( buffer Builder . has Depth Render Buffer )          gl . gl Delete Renderbuffer ( depthbuffer Handle )  ;      if  ( buffer Builder . has Stencil Render Buffer )          gl . gl Delete Renderbuffer ( stencilbuffer Handle )  ;  } gl . gl Delete Framebuffer ( framebuffer Handle )  ;  if  ( buffers . get (  Gdx . app )  != null )      buffers . get (  Gdx . app )  . remove Value ( this, true )  ; }"
9121,"private  Drawable get Activity Icon (  Component Name component ) {  Package Manager pm = m Context . get Package Manager (  )  ;  final  Activity Info activity Info ;  try {     activity Info = pm . get Activity Info ( component,  Package Manager . GET_META_DATA )  ;  } catch  (  Name Not Found Exception ex )  {      Log . w ( LOG_TAG, ex . to String (  )  )  ;      return null ;  } int icon Id = activity Info . get Icon Resource (  )  ;  if  ( icon Id == 0 )      return null ;   String pkg = component . get Package Name (  )  ;   Drawable drawable = pm . get Drawable ( pkg, icon Id, activity Info . application Info )  ;  if  ( drawable == null )  {      Log . w ( LOG_TAG, "" Invalid icon resource "" + icon Id + "" for "" + component . flatten To Short String (  )  )  ;      return null ;  } return drawable ; }"
9122,"private void load Known Changes (  ) { final  Shared Preferences preferences = get Shared Preferences (  )  ;  final  String stored Changes = preferences . get String ( SHARED_PREF_CHANGES_KEY, null )  ;  final  String stored Bindings = preferences . get String ( SHARED_PREF_BINDINGS_KEY, null )  ;  m Applied Visual Changes . clear (  )  ;  m Applied Tweaks . clear (  )  ;  m Seen Experiments . clear (  )  ;  load Variants ( stored Changes, false )  ;  m Persistent Event Bindings . clear (  )  ;  load Event Bindings ( stored Bindings )  ;  apply Variants And Event Bindings (  )  ; }"
9123,"int copy ( final  Pack pack, long position, final byte [  ]  dstbuf, int dstoff, final int cnt )  throws IO Exception{ final long length = pack . length ;  int need = cnt ;  while  ( need > 0 && position < length )  {     pin ( pack, position )  ;      final int r = window . copy ( position, dstbuf, dstoff, need )  ;      position += r ;      dstoff += r ;      need -= r ;  } return cnt - need ; }"
9124,public int get Key Index (  ) { return key Index ; }
9125,public boolean is Type Card Normal (  ) { return TYPE_CARD_NORMAL ; }
9126,"public static  Matcher< Char Sequence> contains Buck Test Output Line (  String status, @ Nullable  Integer passed Count, @ Nullable  Integer skipped Count, @ Nullable  Integer failed Count,  String test Class Name ) { return  Regex Matcher . contains Regex ( create Buck Test Output Line Regex ( status, passed Count, skipped Count, failed Count, test Class Name )  )  ; }"
9127,protected boolean is Quiet Mode Enabled (  User Handle user Handle ) { //  Return false if this is not a managed profile  ( this is the OS's behavior )  .  if  ( !is Managed Profile Without Permission ( user Handle )  )  {     return false ;  }  User Info info = get User Info ( user Handle . get Identifier (  )  )  ;  return  ( info . flags &  User Info . FLAG_QUIET_MODE )  ==  User Info . FLAG_QUIET_MODE ; }
9128,protected boolean is Request Pin App Widget Supported (  ) { return request Pin App Widget Supported ; }
9129,public static boolean is Gzip Encoding ( @ Nullable final  String encoding Type ) { return CONTENT_ENCODING_GZIP . equals Ignore Case ( encoding Type )  ; }
9130,"private void put Resize ( int key, @ Null V value ) { int [  ]  key Table = this . key Table ;  for  ( int i = place ( key )  ;   ;  i =  ( i + 1 )  & mask )  {     if  ( key Table [ i ]  == 0 )  {         key Table [ i ]  = key ;          value Table [ i ]  = value ;          return ;      } }}"
9131,"void await Termination (  Thread t ) { await Termination ( t, LONG_DELAY_MS )  ; }"
9132,"public  List< Path> list Trace Files By Last Modified (  )  throws IO Exception{  List< Path> all Traces = new  Array List<> (  )  ;  project Filesystem . walk File Tree ( project Filesystem . get Buck Paths (  )  . get Log Dir (  ) , new  Simple File Visitor< Path> (  )  {     @ Override     public  File Visit Result visit File (  Path file,  Basic File Attributes attrs )  throws IO Exception {          Matcher matcher = TRACES_FILE_PATTERN . matcher ( file . get File Name (  )  . to String (  )  )  ;          if  ( matcher . matches (  )  )  {             all Traces . add ( file )  ;          }         return super . visit File ( file, attrs )  ;      } } )  ;  //  Sort by: // 1 .   Reverse chronological order .  // 2 .   Alphabetical order .   Collections . sort ( all Traces,  (  path1,  path2 )  -> {     int result = 0 ;       File Time last Modified Time1 ;       File Time last Modified Time2 ;      try {         last Modified Time1 = project Filesystem . get Last Modified Time ( path1 )  ;          last Modified Time2 = project Filesystem . get Last Modified Time ( path2 )  ;      } catch  ( IO Exception e )  {         throw new  Runtime Exception ( e )  ;      }     result = last Modified Time2 . compare To ( last Modified Time1 )  ;      if  ( result == 0 )  {         return path2 . to String (  )  . compare To ( path1 . to String (  )  )  ;      } else {         return result ;      } } )  ;  return all Traces ; }"
9133,"public final synchronized void set Shuffle Order (  Shuffle Order shuffle Order,  Handler handler,  Runnable on Completion Action ) { set Public Shuffle Order ( shuffle Order, handler, on Completion Action )  ; }"
9134,public static  Rounding Params from Corners Radius ( float radius ) { return  ( new  Rounding Params (  )  )  . set Corners Radius ( radius )  ; }
9135,"private void init_ Half Colored Card (  ) {  Top Colored Card card =  Top Colored Card . with ( get Activity (  )  )  . set Color Res Id ( R . color . carddemo_halfcolored_color )  . set Title Over Color ( ""22 mins to  Ancona"" )  . set Sub Title Over Color ( "" Light traffic on SS16"" )  . setup Sub Layout Id ( R . layout . carddemo_native_halfcolored_simple_title )  . setup Inner Elements ( new  Top Colored Card .  On Setup Inner Elements (  )  {     @ Override     public void setup Inner View Elements Second Half (  View second Half View )  {          Text View m Simple Title View =  (  Text View )  second Half View . find View By Id ( R . id . carddemo_halfcolored_simple_title )  ;          if  ( m Simple Title View != null )  {             m Simple Title View . set Text ( "" It is just an example!"" )  ;          }     } } )  . build (  )  ;  // Set card in the  Card View Native  Card View Native card View =  (  Card View Native )  get Activity (  )  . find View By Id ( R . id . carddemo_halfcolored )  ;  card View . set Card ( card )  ; }"
9136,"public  Method Info get Field Setter (  Field Info finfo, boolean is_static )  throws  Compile Error{  String field Name = finfo . get Name (  )  ;   String key = field Name + "":setter"" ;   Object res = accessors . get ( key )  ;  if  ( res != null )      // already exists .      return  (  Method Info )  res ;  // turn on the modified flag .    Class File cf = clazz . get Class File (  )  ;   String acc Name = find Accessor Name ( cf )  ;  try {      Const Pool cp = cf . get Const Pool (  )  ;       Class Pool pool = clazz . get Class Pool (  )  ;       String field Type = finfo . get Descriptor (  )  ;       String acc Desc ;      if  ( is_static )          acc Desc = "" ( "" + field Type + "" ) V"" ;      else         acc Desc = "" ( "" +  Descriptor . of ( clazz )  + field Type + "" ) V"" ;       Method Info minfo = new  Method Info ( cp, acc Name, acc Desc )  ;      minfo . set Access Flags (  Access Flag . STATIC )  ;      minfo . add Attribute ( new  Synthetic Attribute ( cp )  )  ;       Bytecode code = new  Bytecode ( cp )  ;      int reg ;      if  ( is_static )  {         reg = code . add Load ( 0,  Descriptor . to Ct Class ( field Type, pool )  )  ;          code . add Putstatic (  Bytecode . THIS, field Name, field Type )  ;      } else {         code . add Aload ( 0 )  ;          reg = code . add Load ( 1,  Descriptor . to Ct Class ( field Type, pool )  )  + 1 ;          code . add Putfield (  Bytecode . THIS, field Name, field Type )  ;      }     code . add Return ( null )  ;      code . set Max Locals ( reg )  ;      minfo . set Code Attribute ( code . to Code Attribute (  )  )  ;      cf . add Method ( minfo )  ;      accessors . put ( key, minfo )  ;      return minfo ;  } catch  (  Cannot Compile Exception e )  {     throw new  Compile Error ( e )  ;  } catch  (  Not Found Exception e )  {     throw new  Compile Error ( e )  ;  }}"
9137,"public final int compare To ( long [  ]  bs, int p ) { int cmp ;  cmp = NB . compare U Int64 ( w1, bs [ p ]  )  ;  if  ( cmp != 0 )      return cmp ;  cmp = NB . compare U Int64 ( w2, bs [ p + 1 ]  )  ;  if  ( cmp != 0 )      return cmp ;  cmp = NB . compare U Int64 ( w3, bs [ p + 2 ]  )  ;  if  ( cmp != 0 )      return cmp ;  return NB . compare U Int64 ( w4, bs [ p + 3 ]  )  ; }"
9138,"public com . anychart . standalones .  Resource List draw Left Line (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . draw Left Line ( %s )  ; "", enabled )  )  ;  return this ; }"
9139,public  String get Title (  ) { return m Title ; }
9140,public void set Operation Type (  Operation Type operation Type ) { this . operation Type = operation Type ; }
9141,public void fix Frame Durations ( int [  ]  frame Duration Ms ) { // for more information .  for  ( int i = 0 ;  i < frame Duration Ms . length ;  i++ )  {     if  ( frame Duration Ms [ i ]  < MIN_FRAME_DURATION_MS )  {         frame Duration Ms [ i ]  = FRAME_DURATION_MS_FOR_MIN ;      } }}
9142,public static  Camera get Camera Instance ( int camera Id ) {  Camera c = null ;  try {     if  ( camera Id == -1 )  {         // attempt to get a  Camera instance         c =  Camera . open (  )  ;      } else {         // attempt to get a  Camera instance         c =  Camera . open ( camera Id )  ;      } } catch  (  Exception e )  { //  Camera is not available  ( in use or does not exist )  } // returns null if camera is unavailable return c ; }
9143,"public static void replace ( @ Non Null final  Fragment src Fragment, @ Non Null final  Fragment dest Fragment, final  String dest Tag, final boolean is Add Stack, final  View .  .  .  shared Elements ) {  Fragment Manager fm = src Fragment . get Fragment Manager (  )  ;  if  ( fm == null )      return ;   Args args = get Args ( src Fragment )  ;  replace ( fm, dest Fragment, args . id, dest Tag, is Add Stack, shared Elements )  ; }"
9144,public  Nullness Store build (  ) { return new  Nullness Store ( contents )  ; }
9145,public static  Safety Net App Check Provider Factory get Instance (  ) { return instance ; }
9146,"public com . anychart . core . resource .  Activities fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
9147,public java . util .  List<? extends com . didiglobal . booster . aapt2 .  Resources Internal .  Compiled File .  Symbol Or Builder> get Exported Symbol Or Builder List (  ) { return exported Symbol_ ; }
9148,public void input Format Changed ( final  Format format ) { if  ( listener != null )  {     handler . post (  (  )  -> listener . on Audio Input Format Changed ( format )  )  ;  }}
9149,"private void get Cur Scroll State (  Scroll Position State state Out ) { state Out . row Index = -1 ;  state Out . row Top Offset = -1 ;  state Out . row Height = -1 ;  int item Count = get Adapter (  )  . get Item Count (  )  ;  //  Return early if there are no items, or no children .  if  ( item Count == 0 || get Child Count (  )  == 0 )  {     return ;  }  View child = get Child At ( 0 )  ;  state Out . row Index = get Child Adapter Position ( child )  ;  if  ( get Layout Manager (  )  instanceof  Grid Layout Manager )  {     state Out . row Index = state Out . row Index /  (  (  Grid Layout Manager )  get Layout Manager (  )  )  . get Span Count (  )  ;  } state Out . row Top Offset = get Layout Manager (  )  . get Decorated Top ( child )  ;  state Out . row Height = child . get Height (  )  ; }"
9150,"public com . anychart . charts .  Waterfall range Marker (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . range Marker ( %s )  ; "", settings )  )  ;  return this ; }"
9151,"public void test Equals (  )  throws  Exception{ for  (  Class<?> class To Test : find Classes To Test ( load Classes In Package (  ) , EQUALS_TEST_METHOD_NAMES )  )  {     if  ( !class To Test . is Enum (  )  && is Equals Defined ( class To Test )  )  {         try {             tester . do Test Equals ( class To Test )  ;          } catch  (  Throwable e )  {             throw sanity Error ( class To Test, EQUALS_TEST_METHOD_NAMES, ""equals test"", e )  ;          }     } }}"
9152,"public com . anychart . charts .  Gantt row Selected Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
9153,"public A Transformable3 D set Rotation ( double rot X, double rot Y, double rot Z ) { m Orientation . from Euler ( rot Y, rot Z, rot X )  ;  m Look At Valid = false ;  mark Model Matrix Dirty (  )  ;  return this ; }"
9154,"public com . anychart . core . polar . series .  Range Column stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
9155,"public static void put ( @ Non Null final  String key, final  Set< String> value, @ Non Null final SP Utils sp Utils ) { sp Utils . put ( key, value )  ; }"
9156,"static  This get Class Static This (  Class clas,  String class Name ) { try {     return  (  This )   Reflect . get Static Field Value ( clas, BSHSTATIC + class Name )  ;  } catch  (  Exception e )  {     throw new  Interpreter Error ( "" Unable to get class static space: "" + e )  ;  }}"
9157,"public long insert Without Setting Pk ( T entity ) { return execute Insert ( entity, statements . get Insert Or Replace Statement (  ) , false )  ; }"
9158,"public com . anychart . core . cartesian . series .  Bar3d y Scale ( com . anychart . scales .  Base settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
9159,public  String get Object Type (  ) { return object Type ; }
9160,"protected  Entry<E> standard First Entry (  ) {  Iterator< Entry<E>> entry Iterator = entry Set (  )  . iterator (  )  ;  if  ( !entry Iterator . has Next (  )  )  {     return null ;  }  Entry<E> entry = entry Iterator . next (  )  ;  return  Multisets . immutable Entry ( entry . get Element (  ) , entry . get Count (  )  )  ; }"
9161,"public com . anychart . core . utils .  Legend Item Settings text Settings (  String name,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Settings ( %s, %s )  ; "", wrap Quotes ( name ) , settings )  )  ;  return this ; }"
9162,"public  Versioned Target Graph Cache Result get Versioned Target Graph (  Deps Aware Executor<? super  Compute Result, ?> deps Aware Executor,  Buck Config buck Config,  Type Coercer Factory type Coercer Factory,  Unconfigured Build Target View Factory unconfigured Build Target Factory,  Target Graph Creation Result target Graph Creation Result,  Optional< Target Configuration> target Configuration,  Cache Stats Tracker stats Tracker,  Buck Event Bus event Bus,  Cells cells )  throws  Version Exception,  Interrupted Exception{  Version Buck Config version Buck Config = new  Version Buck Config ( buck Config )  ;   Immutable Map< String,  Version Universe> version Universes = version Buck Config . get Version Universes ( target Configuration )  ;   Versioned Target Graph Event .  Started started =  Versioned Target Graph Event . started (  )  ;  event Bus . post ( started )  ;  try {     // and catch it here, performing retries and logging .      for  ( int attempt = 1 ;   ;  attempt++ )  {         try {              Versioned Target Graph Cache Result result = get Versioned Target Graph ( deps Aware Executor, version Universes, type Coercer Factory, unconfigured Build Target Factory, version Buck Config . get Version Target Graph Timeout Seconds (  ) , stats Tracker, target Graph Creation Result, cells )  ;              LOG . info ( ""versioned target graph "" + result . get Type (  )  . get Description (  )  )  ;              event Bus . post ( result . get Type (  )  . get Event (  )  )  ;              return result ;          } catch  (  Timeout Exception e )  {             event Bus . post (  Versioned Target Graph Event . timeout (  )  )  ;              LOG . warn ( "" Timed out building versioned target graph . "" )  ;               Map< Thread,  Stack Trace Element [  ] > stack Traces =  Thread . get All Stack Traces (  )  ;               String Builder traces = new  String Builder ( stack Traces . size (  )  )  ;              for  (  Entry< Thread,  Stack Trace Element [  ] > trace : stack Traces . entry Set (  )  )  {                 traces . append ( "" Thread  [ "" )  ;                  traces . append ( trace . get Key (  )  . get Name (  )  )  ;                  traces . append ( "" ] ,stack: [ "" )  ;                   Joiner . on ( "", "" )  . append To ( traces, trace . get Value (  )  )  ;                  traces . append ( "" ] ,"" )  ;              }             LOG . info ( traces . to String (  )  )  ;              if  ( attempt < ATTEMPTS )                  continue ;              throw new  Runtime Exception ( e )  ;          }     } } finally {     event Bus . post (  Versioned Target Graph Event . finished ( started )  )  ;  }}"
9163,"public static void input Stream To File (  Input Stream is,  File file )  throws T Exception{ if  ( file == null )  {      Log . i ( TAG, ""input Stream To File:file not be null"" )  ;      throw new T Exception ( T Exception Type . TYPE_WRITE_FAIL )  ;  }  File Output Stream fos = null ;  try {     fos = new  File Output Stream ( file )  ;      byte [  ]  buffer = new byte [ 1024 * 10 ]  ;      int i ;      while  (  ( i = is . read ( buffer )  )  != -1 )  {         fos . write ( buffer, 0, i )  ;      } } catch  ( IO Exception e )  {      Log . e ( TAG, "" Input Stream 写入文件出错:"" + e . to String (  )  )  ;      throw new T Exception ( T Exception Type . TYPE_WRITE_FAIL )  ;  } finally {     try {         fos . flush (  )  ;          fos . close (  )  ;          is . close (  )  ;      } catch  ( IO Exception e )  {         e . print Stack Trace (  )  ;      } }}"
9164,"public static  Glide Options option ( @ Non Null  Option<T> option, @ Non Null T t ) { return new  Glide Options (  )  . set ( option, t )  ; }"
9165,"public boolean get Boolean (  String field Name ) { proxy State . get Realm$realm (  )  . check If Valid (  )  ;  long column Key = proxy State . get Row$realm (  )  . get Column Key ( field Name )  ;  try {     return proxy State . get Row$realm (  )  . get Boolean ( column Key )  ;  } catch  (  Illegal Argument Exception e )  {     check Field Type ( field Name, column Key,  Realm Field Type . BOOLEAN )  ;      throw e ;  }}"
9166,"public static  Tree Based Table<R, C, V> create (  Comparator<? super R> row Comparator,  Comparator<? super C> column Comparator ) { check Not Null ( row Comparator )  ;  check Not Null ( column Comparator )  ;  return new  Tree Based Table<> ( row Comparator, column Comparator )  ; }"
9167,"public com . anychart . charts .  Cartesian is Vertical (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . is Vertical ( %s )  ; "", enabled )  )  ;  return this ; }"
9168,public void set Cleans Up Blend Function ( boolean cleans Up Blend Function ) { this . cleans Up Blend Function = cleans Up Blend Function ; }
9169,"protected void start Expand Height Animation (  Array List< Integer> view Heights, int part Animation Duration ) { if  ( view Heights == null || view Heights . is Empty (  )  )      throw new  Illegal Argument Exception ( "" View Heights array must have at least 2 elements"" )  ;   Array List< Animation> height Animations = new  Array List<> (  )  ;  int from Height = view Heights . get ( 0 )  ;  int delay = 0 ;  int animation Duration = part Animation Duration - delay ;  for  ( int i = 1 ;  i < view Heights . size (  )  ;  i++ )  {     int to Height = from Height + view Heights . get ( i )  ;       Height Animation height Animation = new  Height Animation ( this, from Height, to Height, animation Duration )  . with Interpolator ( new  Decelerate Interpolator (  )  )  ;      height Animation . set Start Offset ( delay )  ;      height Animations . add ( height Animation )  ;      from Height = to Height ;  } create Animation Chain ( height Animations, this )  ;  this . start Animation ( height Animations . get ( 0 )  )  ; }"
9170,"public com . anychart . charts .  Heat Map data Area (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . data Area ( %s )  ; "", settings )  )  ;  return this ; }"
9171,public float get Y Chart Min (  ) { return m Y Axis . m Axis Minimum ; }
9172,"public static  Function< Item,  String> md5 (  String string Field ) { return new  String Hash Operator ( string Field,  Hash Utils . MD5 )  ; }"
9173,"protected void set Size Start Text (  String size Start Text ) { if  ( size Start Text == null )  {     size Start Text = """" ;  } this . size Start Text = size Start Text ; }"
9174,public  String get Message (  ) { return message ; }
9175,"Weak Value Reference<K, V, E> new Weak Value Reference For Testing (  Internal Entry<K, V, ?> entry, V value ) { throw new  Assertion Error (  )  ; }"
9176,"public static boolean write File From IS ( final  String file Path, final  Input Stream is, final  On Progress Update Listener listener ) { return write File From IS (  Utils Bridge . get File By Path ( file Path ) , is, false, listener )  ; }"
9177,public void set Font Size ( int font Size ) { this . font Size = font Size ; }
9178,"public  Map< String,  Dir Cache Entry> get To Be Checked Out (  ) { return to Be Checked Out ; }"
9179,"public com . anychart . charts .  Mekko label (  String index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , wrap Quotes ( settings )  )  )  ;  return this ; }"
9180,"protected void overwrite Subscription Address ( @ Non Null final UUID label Uuid, @ Non Null final  Integer address ) { label Uuids . clear (  )  ;  add Subscription Address ( label Uuid, address )  ;  overwrite Subscription Address ( address )  ; }"
9181,"public static int find Name (  String name, int [  ]  table ) { for  ( int i = 0 ;  i < table . length ;  i++ )  {     if  ( name . equals ( get Name ( table [ i ]  )  )  )  {         return i ;      } } return -1 ; }"
9182,public  Immutable Sorted Set< Path> get All Absolute Paths (  Collection<? extends  Source Path> source Paths ) { return resolver . get All Absolute Paths ( source Paths )  ; }
9183,"public void set Region (  Texture texture ) { this . texture = texture ;  set Region ( 0, 0, texture . get Width (  ) , texture . get Height (  )  )  ; }"
9184,private  Date Converter get Date Converter (  String .  .  .  options ) {  Date Converter converter = new  Date Converter (  )  ;  converter . set Context ( _context )  ;  converter . set Option List (  Arrays . as List ( options )  )  ;  return converter ; }
9185,"public static  Display Mode get Display Mode (  ) {  Lwjgl3 Application . initialize Glfw (  )  ;  GLFW Vid Mode video Mode = GLFW . glfw Get Video Mode ( GLFW . glfw Get Primary Monitor (  )  )  ;  return new  Lwjgl3 Graphics .  Lwjgl3 Display Mode ( GLFW . glfw Get Primary Monitor (  ) , video Mode . width (  ) , video Mode . height (  ) , video Mode . refresh Rate (  ) , video Mode . red Bits (  )  + video Mode . green Bits (  )  + video Mode . blue Bits (  )  )  ; }"
9186,"public com . anychart . core .  Chart padding (  String [  ]  padding ) { return new com . anychart . core .  Chart (  String . format (  Locale . US, js Base + "" . padding ( %s ) "", array To String Wrap Quotes ( padding )  )  )  ; }"
9187,public  List< Drawable> get Overlays (  ) { return m Overlays ; }
9188,"public com . anychart . core .  Series Base max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
9189,"public void assert Prepare And Release All Periods (  )  throws  Interrupted Exception{  Timeline .  Period period = new  Timeline .  Period (  )  ;  for  ( int i = 0 ;  i < timeline . get Period Count (  )  ;  i++ )  {     timeline . get Period ( i, period, /* set Ids= */     true )  ;      assert Prepare And Release Period ( new  Media Period Id ( period . uid, period . window Index )  )  ;      for  ( int ad Group Index = 0 ;  ad Group Index < period . get Ad Group Count (  )  ;  ad Group Index++ )  {         for  ( int ad Index = 0 ;  ad Index < period . get Ad Count In Ad Group ( ad Group Index )  ;  ad Index++ )  {             assert Prepare And Release Period ( new  Media Period Id ( period . uid, ad Group Index, ad Index, period . window Index )  )  ;          }     } }}"
9190,public void fallback Id Flag_after Applying Via Other Request Options_is Set (  ) { assert That ( options . fallback ( new  Color Drawable (  Color . RED )  )  . apply ( new  Request Options (  )  . apply ( new  Request Options (  )  . fallback ( android . R . drawable . star_on )  )  )  . get Fallback Drawable (  )  )  . is Null (  )  ; }
9191,"public com . anychart . core . utils .  Margin set (  String value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
9192,"public static int diff_common Prefix (  String text1,  String text2 ) { //  Performance analysis: https://neil . fraser . name/news/2007/10/09/ int n =  Math . min ( text1 . length (  ) , text2 . length (  )  )  ;  for  ( int i = 0 ;  i < n ;  i++ )  {     if  ( text1 . char At ( i )  != text2 . char At ( i )  )  {         return i ;      } } return n ; }"
9193,public  Issue Filter set Direction (  String direction ) { this . direction = direction ;  return this ; }
9194,"public  To String Helper add (  String name, @ Nullable  Object value ) { return add Holder ( name, value )  ; }"
9195,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
9196,public  Invalidator get Invalidator (  ) { return invalidator ; }
9197,protected  Optional< Buck Cell Manager> get Buck Cell Manager (  Data Context data Context ) { return get Project ( data Context )  . map (  Buck Cell Manager::get Instance )  ; }
9198,"private void set Fresh Install Status ( boolean is Enabled ) { is Fresh Install = is Enabled ;  //  Update  Shared Preferences, so that we preserve state across app restarts shared Preferences Utils . set Boolean Preference ( FRESH_INSTALL_PREFERENCES, is Enabled )  ; }"
9199,"private void update Codec Operating Rate (  )  throws  Exo Playback Exception{ if  (  Util . SDK_INT < 23 )  {     return ;  } float new Codec Operating Rate = get Codec Operating Rate V23 ( renderer Operating Rate, codec Format, get Stream Formats (  )  )  ;  if  ( codec Operating Rate == new Codec Operating Rate )  { //  No change .  } else if  ( new Codec Operating Rate == CODEC_OPERATING_RATE_UNSET )  {     //  The only way to clear the operating rate is to instantiate a new codec instance .   See     //  [  Internal ref: b/71987865 ]  .      drain And Reinitialize Codec (  )  ;  } else if  ( codec Operating Rate != CODEC_OPERATING_RATE_UNSET || new Codec Operating Rate > assumed Minimum Codec Operating Rate )  {     //  We need to set the operating rate, either because we've set it previously or because it's     // above the assumed minimum rate .       Bundle codec Parameters = new  Bundle (  )  ;      codec Parameters . put Float (  Media Format . KEY_OPERATING_RATE, new Codec Operating Rate )  ;      codec . set Parameters ( codec Parameters )  ;      codec Operating Rate = new Codec Operating Rate ;  }}"
9200,private float [  ]  pop Float ( int count )  throws PDF Parse Exception{ float [  ]  ary = new float [ count ]  ;  for  ( int i = count - 1 ;  i >= 0 ;  i-- )  {     ary [ i ]  = pop Float (  )  ;  } return ary ; }
9201,"public void contains ( @ Nullable  Object row Key, @ Nullable  Object column Key ) { if  ( !actual . contains ( row Key, column Key )  )  {     fail ( ""contains mapping for row/column"", row Key, column Key )  ;  }}"
9202,private void discard Downstream To ( long absolute Position ) { if  ( absolute Position == C . POSITION_UNSET )  {     return ;  } while  ( absolute Position >= first Allocation Node . end Position )  {     allocator . release ( first Allocation Node . allocation )  ;      first Allocation Node = first Allocation Node . clear (  )  ;  } // first remaining node .  if  ( read Allocation Node . start Position < first Allocation Node . start Position )  {     read Allocation Node = first Allocation Node ;  }}
9203,"public  Flexible Adapter<T> remove Listener (  Object listener ) { if  ( listener == null )  {     log . e ( "" No listener class to remove!"" )  ;      return this ;  }  String class Name = get Class Name ( listener )  ;  if  ( listener instanceof  On Item Click Listener || listener ==  On Item Click Listener . class )  {     m Item Click Listener = null ;      log . i ( "" Removed %s as  On Item Click Listener"", class Name )  ;      for  (  Flexible View Holder holder : get All Bound View Holders (  )  )  {         holder . get Content View (  )  . set On Click Listener ( null )  ;      } } if  ( listener instanceof  On Item Long Click Listener || listener ==  On Item Long Click Listener . class )  {     m Item Long Click Listener = null ;      log . i ( "" Removed %s as  On Item Long Click Listener"", class Name )  ;      for  (  Flexible View Holder holder : get All Bound View Holders (  )  )  {         holder . get Content View (  )  . set On Long Click Listener ( null )  ;      } } if  ( listener instanceof  On Item Move Listener || listener ==  On Item Move Listener . class )  {     m Item Move Listener = null ;      log . i ( "" Removed %s as  On Item Move Listener"", class Name )  ;  } if  ( listener instanceof  On Item Swipe Listener || listener ==  On Item Swipe Listener . class )  {     m Item Swipe Listener = null ;      log . i ( "" Removed %s as  On Item Swipe Listener"", class Name )  ;  } if  ( listener instanceof  On Delete Complete Listener || listener ==  On Delete Complete Listener . class )  {     m Delete Complete Listener = null ;      log . i ( "" Removed %s as  On Delete Complete Listener"", class Name )  ;  } if  ( listener instanceof  On Sticky Header Change Listener || listener ==  On Sticky Header Change Listener . class )  {     m Sticky Header Change Listener = null ;      log . i ( "" Removed %s as  On Sticky Header Change Listener"", class Name )  ;  } if  ( listener instanceof  On Update Listener || listener ==  On Update Listener . class )  {     m Update Listener = null ;      log . i ( "" Removed %s as  On Update Listener"", class Name )  ;  } if  ( listener instanceof  On Filter Listener || listener ==  On Filter Listener . class )  {     m Filter Listener = null ;      log . i ( "" Removed %s as  On Filter Listener"", class Name )  ;  } return this ; }"
9204,public  Polyline Options get Polyline Options (  ) { return m Line String Style . to Polyline Options (  )  ; }
9205,public int get Max Frame Size (  ) { return max Frame Size ; }
9206,"public com . anychart . core . ui .  Labels Factory labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . labels (  ) "" )  ; }"
9207,public  String to String (  ) { return  More Objects . to String Helper ( this )  . add Value ( to Parsable String (  )  )  . to String (  )  ; }
9208,public void align To Four Bytes With Zero Fill (  ) { while  (  ( data . position (  )  & 3 )  != 0 )  {     data . put (  ( byte )  0 )  ;  }}
9209,public void remove Provisioner ( @ Non Null final  Provisioner provisioner ) { provisioners . remove ( provisioner )  ;  export Status . post Value ( null )  ; }
9210,"public static void load Arm Library (  Application Like application Like,  String lib Name ) { if  ( lib Name == null || lib Name . is Empty (  )  || application Like == null )  {     throw new  Tinker Runtime Exception ( ""lib Name or context is null!"" )  ;  } if  (  Tinker Application Helper . is Tinker Enable For Native Lib ( application Like )  )  {     if  (  Tinker Application Helper . load Library From Tinker ( application Like, ""lib/armeabi"", lib Name )  )  {         return ;      } }  System . load Library ( lib Name )  ; }"
9211,"public com . anychart . charts .  Sparkline padding (  Number value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
9212,"public void z Padding (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Padding (  )  ; "" )  ; }"
9213,"public boolean validate (  String regex,  Char Sequence error Text ) { boolean is Valid = is Valid ( regex )  ;  if  ( !is Valid )  {     set Error ( error Text )  ;  } post Invalidate (  )  ;  return is Valid ; }"
9214,public void set Expanded Title Gravity ( int gravity ) { m Collapsing Text Helper . set Expanded Text Gravity ( gravity )  ; }
9215,"public void use Emulator ( @ Non Null  String host, int port ) { if  ( this . client != null )  {     throw new  Illegal State Exception ( "" Cannot call use Emulator (  )  after instance has already been initialized . "" )  ;  } this . emulator Settings = new  Emulated Service Settings ( host, port )  ;  this . settings = merge Emulator Settings ( this . settings, this . emulator Settings )  ; }"
9216,public  Type get Component (  ) { return null ; }
9217,"public void set Ratio ( float ratio ) { jni Set Ratio ( addr, ratio )  ; }"
9218,"public void release Target ( int target Id ) { persistence . run Transaction ( "" Release target"",  (  )  -> {      Target Data target Data = query Data By Target . get ( target Id )  ;      hard Assert ( target Data != null, "" Tried to release nonexistent target: %s"", target Id )  ;      //  References for documents sent via  Watch are automatically removed when we delete a     // query's target data from the reference delegate .   Since this does not remove references     // for locally mutated documents, we have to remove the target associations for these     // documents manually .       Immutable Sorted Set< Document Key> removed References = local View References . remove References For Id ( target Id )  ;      for  (  Document Key key : removed References )  {         persistence . get Reference Delegate (  )  . remove Reference ( key )  ;      }     //  Note:  This also updates the query cache     persistence . get Reference Delegate (  )  . remove Target ( target Data )  ;      query Data By Target . remove ( target Id )  ;      target Id By Target . remove ( target Data . get Target (  )  )  ;  } )  ; }"
9219,"private static boolean is In Framework Space List (  String current Class,  List< String> framework Package List ) { if  ( framework Package List == null )      return false ;  for  (  String s : framework Package List )  {     if  ( current Class . starts With ( s )  )          return true ;  } return false ; }"
9220,public boolean encloses (  Range<C> other ) { return lower Bound . compare To ( other . lower Bound )  <= 0 && upper Bound . compare To ( other . upper Bound )  >= 0 ; }
9221,"public void save As Xml (  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Xml ( %s )  ; "", wrap Quotes ( filename )  )  )  ; }"
9222,public  Litho View Rule set Root Async (  Component component ) { get Component Tree (  )  . set Root Async ( component )  ;  return this ; }
9223,public void update Text (  Dim .  Source Info source Info ) { this . source Info = source Info ;   String new Text = source Info . source (  )  ;  if  ( !text Area . get Text (  )  . equals ( new Text )  )  {     text Area . set Text ( new Text )  ;      int pos = 0 ;      if  ( current Pos != -1 )  {         pos = current Pos ;      }     text Area . select ( pos )  ;  } file Header . update (  )  ;  file Header . repaint (  )  ; }
9224,"private void log In With Read Permissions (  Fragment Wrapper fragment,  Collection< String> permissions ) { validate Read Permissions ( permissions )  ;  log In ( fragment, permissions )  ; }"
9225,public com . google . protobuf .  Byte String get Project Prefix Bytes (  ) { java . lang .  Object ref = project Prefix_ ;  if  ( ref instanceof java . lang .  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      project Prefix_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
9226,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
9227,"public com . anychart . core . gantt .  Time Line Header max Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", width )  )  ;  return this ; }"
9228,"public void get Transformation Matrix (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Transformation Matrix (  )  ; "" )  ; }"
9229,"public com . anychart . charts .  Scatter select Marquee Fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
9230,"public void set Venue Description (  String venue Description ) { params . put ( ""venue Description"", venue Description )  ; }"
9231,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
9232,public static  Field Scope all (  ) { return  Field Scope Impl . all (  )  ; }
9233,"private void add New Element (  ) { //  As we've started a new element, the attribute index starts from again current Attribute Index = 0 ;  current Element = new  Single Slash X Path Element ( parser . get Name (  ) , current Element )  ;  //  Add predicates add Predicates (  )  ; }"
9234,"public static void main (  String [  ]  argv ) {  System . set Property ( ""java . awt . headless"", ""true"" )  ;  options = new  Command Line Options ( argv )  ;   Lwjgl3 Application Configuration config = new  Lwjgl3 Application Configuration (  )  ;  config . set Windowed Mode ( 640, 480 )  ;  if  ( options . gl30 )  {      Shader Program . prepend Vertex Code = ""#version 140\n#define varying out\n#define attribute in\n"" ;       Shader Program . prepend Fragment Code = ""#version 140\n#define varying in\n#define texture2 D texture\n#define gl_ Frag Color frag Color\nout vec4 frag Color ; \n"" ;      config . use Open GL3 ( true, 3, 2 )  ;  } if  ( options . startup Test Name != null )  {      Application Listener test =  Gdx Tests . new Test ( options . startup Test Name )  ;      if  ( test != null )  {         new  Lwjgl3 Application ( test, config )  ;          return ;      } //  Otherwise, fall back to showing the list } new  Lwjgl3 Application ( new  Test Chooser (  ) , config )  ; }"
9235,"public static  Float Buffer wrap ( float [  ]  array ) { return wrap ( array, 0, array . length )  ; }"
9236,"public void on Service Disconnected ( final  Component Name name ) { lock Acquire Service . lock (  )  ;  try {     if  ( spice Service != null )  {          Ln . d ( "" Unbound from service start : "" + spice Service . get Class (  )  . get Simple Name (  )  )  ;          spice Service = null ;          is Unbinding = false ;          condition Service Unbound . signal All (  )  ;      } } finally {     lock Acquire Service . unlock (  )  ;  }}"
9237,"public void check Merge Mergeable Files With Tree In Index (  Merge Strategy strategy )  throws  Exception{  Git git =  Git . wrap ( db )  ;  write Trash File ( ""0"", ""orig"" )  ;  write Trash File ( ""1"", ""1\n2\n3"" )  ;  git . add (  )  . add Filepattern ( ""0"" )  . add Filepattern ( ""1"" )  . call (  )  ;   Rev Commit first = git . commit (  )  . set Message ( ""added 0, 1"" )  . call (  )  ;  write Trash File ( ""1"", ""1master\n2\n3"" )  ;   Rev Commit master Commit = git . commit (  )  . set All ( true )  . set Message ( ""modified 1 on master"" )  . call (  )  ;  git . checkout (  )  . set Create Branch ( true )  . set Start Point ( first )  . set Name ( ""side"" )  . call (  )  ;  write Trash File ( ""1"", ""1\n2\n3side"" )  ;  git . commit (  )  . set All ( true )  . set Message ( ""modified 1 on side"" )  . call (  )  ;  git . rm (  )  . add Filepattern ( ""0"" )  . call (  )  ;  write Trash File ( ""0/0"", ""modified"" )  ;  git . add (  )  . add Filepattern ( ""0/0"" )  . call (  )  ;  try {     git . merge (  )  . set Strategy ( strategy )  . include ( master Commit )  . call (  )  ;       Assert . fail ( "" Didn't get the expected exception"" )  ;  } catch  (  Checkout Conflict Exception e )  {     assert Equals ( 1, e . get Conflicting Paths (  )  . size (  )  )  ;      assert Equals ( ""0/0"", e . get Conflicting Paths (  )  . get ( 0 )  )  ;  }}"
9238,protected static int get Default Data Subscription Id (  ) { return default Data Subscription Id ; }
9239,"void set Backing Map (  Map<E,  Count> backing Map ) { this . backing Map = backing Map ; }"
9240,"public com . anychart . core . cartesian . series .  Line line2d (  String data, com . anychart . enums .  Text Parsing Mode csv Settings ) { return new com . anychart . core . cartesian . series .  Line (  String . format (  Locale . US, js Base + "" . line2d ( %s, %s ) "", wrap Quotes ( data ) ,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
9241,"public void set Progress ( int progress, boolean animate ) { progress =  Math . min (  Math . max ( progress, 0 ) , 100 )  ;   Log . d ( TAG, ""set Progress: p:"" + progress + "",mp:"" + m Progress )  ;  if  (  Math . abs ( progress - m Progress )  > SMOOTH_ANIM_THRESHOLD && animate )  {     if  ( m Progress == 0 )  {         start Inter Anim ( progress )  ;      } else {         start Progress Anim ( m Progress, progress )  ;      } } else if  ( progress == 100 && animate )  {     m Progress = 100 ;      start Mask Anim (  )  ;  } else {     m Progress = progress ;      if  ( m Progress == 0 . f )          m Inter Delta = 0 . f ;      invalidate (  )  ;  }}"
9242,public final  String offset String (  ) { return ' [ ' +  Integer . to Hex String ( get Absolute Offset (  )  )  + ' ] ' ; }
9243,"public com . anychart . core . stock . scrollerseries .  Range Step Area high Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . high Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
9244,public int get Button Height (  ) { return button Height ; }
9245,public byte [  ]  write Byte Array (  ) { int size = get Size (  )  ;  byte [  ]  arr ;  if  ( size == 0 )  {     arr = new byte [ 0 ]  ;  } else {     long temp = ID3 Tags . get Whole Number ( value )  ;      arr = new byte [ size ]  ;      //to be written     for  ( int i = size - 1 ;  i >= 0 ;  i-- )  {         arr [ i ]  =  ( byte )   ( temp & 0x FF )  ;          temp >>= 8 ;      } } return arr ; }
9246,public int get Collapsed Groups Count (  ) { return m Wrapper Adapter . get Collapsed Groups Count (  )  ; }
9247,"public final void line ( float x, float y, float x2, float y2 ) { line ( x, y, 0 . 0f, x2, y2, 0 . 0f, color, color )  ; }"
9248,"public void update To None (  ) { if  (  Gesture Debug . is Debug Animator (  )  )  {      Log . d ( TAG, "" Updating view to no specific position"" )  ;  } update Internal (  )  ; }"
9249,"public com . anychart . core . utils .  Stock Interactivity selection Mode (  String mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selection Mode ( %s )  ; "", wrap Quotes ( mode )  )  )  ;  return this ; }"
9250,"public static void ask For Permission (  Activity activity,  String [  ]  permissions,  Permission Callback permission Callback ) { if  ( permission Callback == null )  {     return ;  } if  ( has Permission ( activity, permissions )  )  {     permission Callback . permission Granted (  )  ;      return ;  }  Permission Request permission Request = new  Permission Request ( new  Array List< String> (  Arrays . as List ( permissions )  ) , permission Callback )  ;  permission Requests . add ( permission Request )  ;   Activity Compat . request Permissions ( activity, permissions, permission Request . get Request Code (  )  )  ; }"
9251,public int signed Byte At ( int index ) { return bytecode [ index ]  ; }
9252,public void set Card View Elevation ( int elevation ) {  Card View card View = find View By Id ( R . id . mt_container )  ;  card View . set Card Elevation ( elevation )  ; }
9253,public void quit (  ) { m Quit = true ;  interrupt (  )  ; }
9254,public int get Rop Label (  ) { return rop Label ; }
9255,"public com . anychart . core . ui .  Chart Scroller selected Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
9256,public boolean has Meta Data Changes (  ) { return change Type !=  Change Type . MODIFY || new Mode != old Mode ; }
9257,"public  Shared Libraries Builder add All (  Action Graph Builder graph Builder,  Collection< Native Linkable> linkables ) { graph Builder . get Parallelizer (  )  . maybe Parallelize Transform ( linkables,  native Linkable -> native Linkable . get Shared Libraries ( graph Builder )  )  . for Each ( this::add )  ;  return this ; }"
9258,"public static  Register Spec make ( int reg,  Type Bearer type,  Local Item local ) { if  ( local == null )  {     throw new  Null Pointer Exception ( ""local  == null"" )  ;  } return intern ( reg, type, local )  ; }"
9259,public  To String Helper add Value ( boolean value ) { return add Unconditional Holder (  String . value Of ( value )  )  ; }
9260,"public com . anychart . scales .  Ordinal x Scale (  ) { return new com . anychart . scales .  Ordinal ( js Base + "" . x Scale (  ) "" )  ; }"
9261,public void set Show Multi Window Time Bar ( boolean show Multi Window Time Bar ) { this . show Multi Window Time Bar = show Multi Window Time Bar ;  update Timeline (  )  ; }
9262,public int available (  ) { return end Of Stream ? 0 : 1 ; }
9263,"public void host Ipv6 Builder (  )  throws  Exception{  Http Url base = parse ( ""http://example . com/"" )  ;  assert That ( base . new Builder (  )  . host ( "" [ ::1 ] "" )  . build (  )  . to String (  )  )  . is Equal To ( ""http:// [ ::1 ] /"" )  ;  assert That ( base . new Builder (  )  . host ( "" [ ::0001 ] "" )  . build (  )  . to String (  )  )  . is Equal To ( ""http:// [ ::1 ] /"" )  ;  assert That ( base . new Builder (  )  . host ( ""::1"" )  . build (  )  . to String (  )  )  . is Equal To ( ""http:// [ ::1 ] /"" )  ;  assert That ( base . new Builder (  )  . host ( ""::0001"" )  . build (  )  . to String (  )  )  . is Equal To ( ""http:// [ ::1 ] /"" )  ; }"
9264,"private static  Bundle meta Data To Bundle (  Map< String,  Object> meta ) { if  ( meta . size (  )  == 0 )  {     return null ;  }  Bundle bundle = new  Bundle (  )  ;  for  (  Map .  Entry< String,  Object> entry : meta . entry Set (  )  )  {      String key = entry . get Key (  )  ;       Object value = entry . get Value (  )  ;      if  (  Boolean . class . is Instance ( value )  )  {         bundle . put Boolean ( key,  (  Boolean )  value )  ;      } else if  (  Float . class . is Instance ( value )  )  {         bundle . put Float ( key,  (  Float )  value )  ;      } else if  (  Integer . class . is Instance ( value )  )  {         bundle . put Int ( key,  (  Integer )  value )  ;      } else {         bundle . put String ( key, value == null ? null : value . to String (  )  )  ;      } } return bundle ; }"
9265,"public static boolean is Normal Text (  String to Check Str ) {  String pattern Str = // 汉字、数字、字母、下划线 ""^ [ a-z A-Z0-9_一-龥"" + // 中文标点符号（。 ； ， ： “ ”（ ） 、 ！ ？ 《 》） ""。；，：“”（）、！？《》"" + // 英文标点符号（ .   ;  , : '  (   )  / ! ? < >） "" .  ; ,:' (  ) /!?<>\r\n"" + "" ] +$"" ;  return can Match ( to Check Str, pattern Str )  ; }"
9266,public void show Dialog (  ) { this . show Dialog = true ; }
9267,"public  Contact get Contact (  Cursor cursor,  String primary Key Aliash ) {  Contact contact = new  Contact (  )  ;  try {     contact . set Full Name ( cursor . get String ( cursor . get Column Index (  Mobi Com Database Helper . FULL_NAME )  )  )  ;      contact . set User Id ( cursor . get String ( cursor . get Column Index ( primary Key Aliash == null ?  Mobi Com Database Helper . USERID : primary Key Aliash )  )  )  ;      contact . set Local Image Url ( cursor . get String ( cursor . get Column Index (  Mobi Com Database Helper . CONTACT_IMAGE_LOCAL_URI )  )  )  ;      contact . set Image URL ( cursor . get String ( cursor . get Column Index (  Mobi Com Database Helper . CONTACT_IMAGE_URL )  )  )  ;      contact . set Contact Number ( cursor . get String ( cursor . get Column Index (  Mobi Com Database Helper . CONTACT_NO )  )  )  ;      contact . set Application Id ( cursor . get String ( cursor . get Column Index (  Mobi Com Database Helper . APPLICATION_ID )  )  )  ;       Long connected = cursor . get Long ( cursor . get Column Index (  Mobi Com Database Helper . CONNECTED )  )  ;      contact . set Contact Type ( cursor . get Short ( cursor . get Column Index (  Mobi Com Database Helper . CONTACT_TYPE )  )  )  ;      contact . set Connected ( connected != 0 && connected . int Value (  )  == 1 )  ;      contact . set Last Seen At ( cursor . get Long ( cursor . get Column Index (  Mobi Com Database Helper . LAST_SEEN_AT_TIME )  )  )  ;      contact . set Unread Count ( cursor . get Int ( cursor . get Column Index (  Mobi Com Database Helper . UNREAD_COUNT )  )  )  ;       Boolean user Blocked =  ( cursor . get Int ( cursor . get Column Index (  Mobi Com Database Helper . BLOCKED )  )  == 1 )  ;      contact . set Blocked ( user Blocked )  ;       Boolean user Blocked By =  ( cursor . get Int ( cursor . get Column Index (  Mobi Com Database Helper . BLOCKED_BY )  )  == 1 )  ;      contact . set Blocked By ( user Blocked By )  ;      contact . set Email Id ( cursor . get String ( cursor . get Column Index (  Mobi Com Database Helper . EMAIL )  )  )  ;      contact . set Status ( cursor . get String ( cursor . get Column Index (  Mobi Com Database Helper . STATUS )  )  )  ;      contact . set User Type Id ( cursor . get Short ( cursor . get Column Index (  Mobi Com Database Helper . USER_TYPE_ID )  )  )  ;      contact . set Deleted At Time ( cursor . get Long ( cursor . get Column Index (  Mobi Com Database Helper . DELETED_AT )  )  )  ;      contact . set Notification After Time ( cursor . get Long ( cursor . get Column Index (  Mobi Com Database Helper . NOTIFICATION_AFTER_TIME )  )  )  ;      contact . set Role Type ( cursor . get Short ( cursor . get Column Index (  Mobi Com Database Helper . USER_ROLE_TYPE )  )  )  ;      contact . set Last Message At Time ( cursor . get Long ( cursor . get Column Index (  Mobi Com Database Helper . LAST_MESSAGED_AT )  )  )  ;       String metadata = cursor . get String ( cursor . get Column Index (  Mobi Com Database Helper . USER_METADATA )  )  ;      if  ( ! Text Utils . is Empty ( metadata )  )  {         contact . set Metadata (  (  Map< String,  String> )   Gson Utils . get Object From Json ( metadata,  Map . class )  )  ;      } } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  } return contact ; }"
9268,public  Builder set Flag ( int flag ) { this . flag = flag ;  return this ; }
9269,"public  Double validate (  String value,  Locale locale ) { return  (  Double )  parse ( value,  (  String )  null, locale )  ; }"
9270,"private byte [  ]  create Acknowledgement Payload ( final int seq Zero, final int block Acknowledgement ) { final int obo = 0 ;  final int rfu = 0 ;  final  Byte Buffer buffer =  Byte Buffer . allocate ( 6 )  . order (  Byte Order . BIG_ENDIAN )  ;  buffer . put (  ( byte )   (  ( obo << 7 )  |  ( seq Zero >> 6 )  & 0x7 F )  )  ;  buffer . put (  ( byte )   (  (  ( seq Zero << 2 )  & 0x FC )  | rfu )  )  ;  buffer . put Int ( block Acknowledgement )  ;  return buffer . array (  )  ; }"
9271,public  String message (  ) { return message ; }
9272,public  Boom Button Builder index ( int index ) { this . index = index ;  return this ; }
9273,public void thread Assert Null (  Object x ) { try {     assert Null ( x )  ;  } catch  (  Assertion Failed Error t )  {     thread Record Failure ( t )  ;      throw t ;  }}
9274,protected final boolean has Pending Output (  ) { return output Buffer . has Remaining (  )  ; }
9275,"static T [  ]  to Array Impl (  Collection<?> c, T [  ]  array ) { int size = c . size (  )  ;  if  ( array . length < size )  {     array = new Array ( array, size )  ;  } fill Array ( c, array )  ;  if  ( array . length > size )  {     array [ size ]  = null ;  } return array ; }"
9276,"public void carriage Return ( float x, float y ) {  Matrix trans = new  Matrix (  )  ;  trans . set Translate ( x, y )  ;  line . pre Concat ( trans )  ;  cur . set ( line )  ; }"
9277,"public void bottom (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . bottom (  )  ; "" )  ; }"
9278,"public com . anychart . charts .  Sparkline margin (  String margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "", wrap Quotes ( margin )  )  )  ;  return this ; }"
9279,"static synchronized void clear (  ) { SQ Lite Database db =  Sonic DB Helper . get Instance (  )  . get Writable Database (  )  ;  db . delete (  Sonic_RESOURCE_TABLE_NAME, null, null )  ; }"
9280,"public void recreate React Context In Background (  ) {  Assertions . assert Condition ( m Has Started Creating Initial Context, ""recreate React Context In Background should only be called after the initial "" + ""create React Context In Background call . "" )  ;  recreate React Context In Background Inner (  )  ; }"
9281,"public  Test String Overloads View Model_ title Quantity Res ( @ Plurals Res int plural Res, int quantity,  Object .  .  .  format Args ) { on Mutation (  )  ;  assigned Attributes_epoxy Generated Model . set ( 0 )  ;  title_ String Attribute Data . set Value ( plural Res, quantity, format Args )  ;  return this ; }"
9282,"private  String read (  )  throws IO Exception{ //  Read the line from the server .   String line = reader . read Line (  )  ;  if  ( line == null )  {     throw new IO Exception ( ""FTP Connection closed"" )  ;  } // registered .  for  (  Iterator iter = communication Listeners . iterator (  )  ;  iter . has Next (  )  ;   )  {     FTP Communication Listener l =  ( FTP Communication Listener )  iter . next (  )  ;      l . received ( line )  ;  } //  Return the line read .  return line ; }"
9283,public  Known Rule Types get (  Cell cell ) { try {     return types Cache . get Unchecked ( cell )  ;  } catch  (  Unchecked Execution Exception e )  {      Throwables . throw If Unchecked ( e . get Cause (  )  )  ;      throw e ;  }}
9284,public void animate To Final Position ( float final Position ) { if  ( is Running (  )  )  {     m Pending Position = final Position ;  } else {     if  ( m Spring == null )  {         m Spring = new  Spring Force ( final Position )  ;      }     m Spring . set Final Position ( final Position )  ;      start (  )  ;  }}
9285,public void remove Rule (  Supports Pipelining<?> rule ) {  Build Rule Pipeline Stage<? extends  Rule Pipeline State> pipeline Stage = rules . remove ( rule )  ;  if  ( pipeline Stage != null && pipeline Stage . pipeline Built (  )  )  {     pipeline Stage . cancel And Wait (  )  ;  }}
9286,"public com . anychart . standalones .  Data Grid column (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . column ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9287,"public void assert View State Rendered (  Home View State .  .  .  expected Home View States ) { if  ( expected Home View States == null )  {     throw new  Null Pointer Exception ( ""expected Home View States == null"" )  ;  } int events Count = expected Home View States . length ;  render Event Subject . take ( events Count )  . timeout ( 10,  Time Unit . SECONDS )  . blocking Subscribe (  )  ;  if  ( render Event Subject . get Values (  )  . length > events Count )  {      Assert . fail ( "" Expected to wait for "" + events Count + "", but there were "" + render Event Subject . get Values (  )  . length + ""  Events in total, which is more than expected: "" + array To String ( render Event Subject . get Values (  )  )  )  ;  }  Assert . assert Equals (  Arrays . as List ( expected Home View States ) , render Events )  ; }"
9288,public static  Listening Scheduled Executor Service listening Decorator (  Scheduled Executor Service delegate ) { return  ( delegate instanceof  Listening Scheduled Executor Service )  ?  (  Listening Scheduled Executor Service )  delegate : new  Scheduled Listening Decorator ( delegate )  ; }
9289,"public static  Tester Requirements get Tester Requirements (  Method tester Method )  throws  Conflicting Requirements Exception{ synchronized  ( method Tester Requirements Cache )  {      Tester Requirements requirements = method Tester Requirements Cache . get ( tester Method )  ;      if  ( requirements == null )  {         requirements = build Tester Requirements ( tester Method )  ;          method Tester Requirements Cache . put ( tester Method, requirements )  ;      }     return requirements ;  }}"
9290,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
9291,"public static  String encrypt Hmac SHA1 To String ( final byte [  ]  data, final byte [  ]  key ) { return  Utils Bridge . bytes2 Hex String ( encrypt Hmac SHA1 ( data, key )  )  ; }"
9292,private void update All From HSV (  ) { // Update m RGB if  ( m RG Benabled || m YU Venabled )      update RG Bfrom HSV (  )  ;  // Update m YUV if  ( m YU Venabled )      update YU Vfrom RGB (  )  ;  // Update m Hex Str if  ( m RG Benabled )      update Hex From HSV (  )  ; }
9293,"public static int get Animation Resource ( int gravity, boolean is In Animation ) { switch ( gravity )  {     case  Gravity . BOTTOM:         return is In Animation ? R . anim . pickerview_slide_in_bottom : R . anim . pickerview_slide_out_bottom ;  } return INVALID ; }"
9294,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
9295,"private void update Crop View Rect ( float touch X, float touch Y ) { m Temp Rect . set ( m Crop View Rect )  ;  switch ( m Current Touch Corner Index )  {     // resize rectangle     case 0:         m Temp Rect . set ( touch X, touch Y, m Crop View Rect . right, m Crop View Rect . bottom )  ;          break ;      case 1:         m Temp Rect . set ( m Crop View Rect . left, touch Y, touch X, m Crop View Rect . bottom )  ;          break ;      case 2:         m Temp Rect . set ( m Crop View Rect . left, m Crop View Rect . top, touch X, touch Y )  ;          break ;      case 3:         m Temp Rect . set ( touch X, m Crop View Rect . top, m Crop View Rect . right, touch Y )  ;          break ;      // move rectangle     case 4:         m Temp Rect . offset ( touch X - m Previous Touch X, touch Y - m Previous Touch Y )  ;          if  ( m Temp Rect . left > get Left (  )  && m Temp Rect . top > get Top (  )  && m Temp Rect . right < get Right (  )  && m Temp Rect . bottom < get Bottom (  )  )  {             m Crop View Rect . set ( m Temp Rect )  ;              update Grid Points (  )  ;              post Invalidate (  )  ;          }         return ;  } boolean change Height = m Temp Rect . height (  )  >= m Crop Rect Min Size ;  boolean change Width = m Temp Rect . width (  )  >= m Crop Rect Min Size ;  m Crop View Rect . set ( change Width ? m Temp Rect . left : m Crop View Rect . left, change Height ? m Temp Rect . top : m Crop View Rect . top, change Width ? m Temp Rect . right : m Crop View Rect . right, change Height ? m Temp Rect . bottom : m Crop View Rect . bottom )  ;  if  ( change Height || change Width )  {     update Grid Points (  )  ;      post Invalidate (  )  ;  }}"
9296,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
9297,"public  Result<T> attempt Recover ( @ Non Null final  Function<? super  Throwable, ? extends  Result<? extends T>> attempt Recover Function ) { if  ( value != null )  {     return this ;  } return  (  Result<T> )  attempt Recover Function . apply ( failure )  ; }"
9298,"private int native Next (  )  throws  Xml Pull Parser Exception{ switch ( m Event Type )  {     case  ( CDSECT ) :         {             throw new  Illegal Argument Exception ( ""CDSECT is not handled by  Android"" )  ;          }     case  ( COMMENT ) :         {             throw new  Illegal Argument Exception ( ""COMMENT is not handled by  Android"" )  ;          }     case  ( DOCDECL ) :         {             throw new  Illegal Argument Exception ( ""DOCDECL is not handled by  Android"" )  ;          }     case  ( ENTITY_REF ) :         {             throw new  Illegal Argument Exception ( ""ENTITY_REF is not handled by  Android"" )  ;          }     case  ( END_DOCUMENT ) :         {             // from the invoker .   This should never happen .              throw new  Illegal Argument Exception ( ""END_DOCUMENT should not be found here . "" )  ;          }     case  ( END_TAG ) :         {             return navigate To Next Node ( current Node )  ;          }     case  ( IGNORABLE_WHITESPACE ) :         {             throw new  Illegal Argument Exception ( ""IGNORABLE_WHITESPACE"" )  ;          }     case  ( PROCESSING_INSTRUCTION ) :         {             throw new  Illegal Argument Exception ( ""PROCESSING_INSTRUCTION"" )  ;          }     case  ( START_DOCUMENT ) :         {             current Node = document . get Document Element (  )  ;              return START_TAG ;          }     case  ( START_TAG ) :         {             if  ( current Node . has Child Nodes (  )  )  {                 //  The node has children, navigate down                 return process Next Node Type ( current Node . get First Child (  )  )  ;              } else {                 //  The node has no children                 return END_TAG ;              }         }     case  ( TEXT ) :         {             return navigate To Next Node ( current Node )  ;          }     default:         {             // assigned with an unmapped integer .              throw new  Runtime Exception ( "" Robolectric->  Uknown XML event type: "" + m Event Type )  ;          } }}"
9299,public  View find View By Id ( int resource Id ) { return content Container . find View By Id ( resource Id )  ; }
9300,public void set Descriptor (  String desc ) { if  ( !desc . equals ( get Descriptor (  )  )  )      descriptor = const Pool . add Utf8 Info ( desc )  ; }
9301,void set Component Context ( @ Nullable  Component Context component Context ) { m Component Context = component Context ; }
9302,"public com . anychart . charts .  Heat Map animation (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . animation ( %s )  ; "", settings )  )  ;  return this ; }"
9303,public static synchronized void init Global (  Context Factory factory ) { if  ( factory == null )  {     throw new  Illegal Argument Exception (  )  ;  } if  ( has Custom Global )  {     throw new  Illegal State Exception (  )  ;  } has Custom Global = true ;  global = factory ; }
9304,"public T override ( int size ) { return override ( size, size )  ; }"
9305,"public  Future< Authentication Result> acquire Token Silent (  String resource,  String client Id,  String user Id, final  Authentication Callback< Authentication Result> callback ) { final  Settable Future< Authentication Result> future Task = new  Settable Future<> (  )  ;  try {     check Pre Requirements ( resource, client Id )  ;      check ADFS Validation Requirements ( null )  ;  } catch  ( final  Authentication Exception e )  {     callback . on Error ( e )  ;      future Task . set Exception ( e )  ;      //  Return execution with an  Exception     return future Task ;  } final  String request Id =  Telemetry . register New Request (  )  ;  final API Event api Event = create Api Event ( m Context, client Id, request Id,  Event Strings . ACQUIRE_TOKEN_SILENT )  ;  api Event . set Is Deprecated ( true )  ;  final  Authentication Request request = new  Authentication Request ( m Authority, resource, client Id, user Id, get Request Correlation Id (  ) , get Extended Lifetime Enabled (  )  )  ;  request . set Silent ( true )  ;  request . set Prompt (  Prompt Behavior .  Auto )  ;  request . set User Identifier Type (  User Identifier Type .  Unique Id )  ;  request . set Telemetry Request Id ( request Id )  ;  set App Info To Request ( request )  ;  create Acquire Token Request ( api Event )  . acquire Token ( null, false, request, new  Authentication Callback< Authentication Result> (  )  {     @ Override     public void on Success (  Authentication Result result )  {         api Event . set Was Api Call Successful ( true, null )  ;          api Event . set Correlation Id ( request . get Correlation Id (  )  . to String (  )  )  ;          api Event . set Id Token ( result . get Id Token (  )  )  ;          api Event . stop Telemetry And Flush (  )  ;          if  ( callback != null )  {             callback . on Success ( result )  ;          }         future Task . set ( result )  ;      }     @ Override     @ Suppress Warnings ( ""unchecked"" )      public void on Error (  Exception exc )  {         api Event . set Was Api Call Successful ( false, exc )  ;          api Event . set Correlation Id ( request . get Correlation Id (  )  . to String (  )  )  ;          api Event . stop Telemetry And Flush (  )  ;          if  ( callback != null )  {             callback . on Error ( exc )  ;          }         future Task . set Exception ( exc )  ;      } } )  ;  return future Task ; }"
9306,"public com . anychart . core . annotations .  Fibonacci Fan container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
9307,"public final int compare To (  Any Long Object Id other ) { if  ( this == other )      return 0 ;  int cmp ;  cmp = NB . compare U Int64 ( w1, other . w1 )  ;  if  ( cmp != 0 )      return cmp ;  cmp = NB . compare U Int64 ( w2, other . w2 )  ;  if  ( cmp != 0 )      return cmp ;  cmp = NB . compare U Int64 ( w3, other . w3 )  ;  if  ( cmp != 0 )      return cmp ;  return NB . compare U Int64 ( w4, other . w4 )  ; }"
9308,"public synchronized void register ( @ Non Null  Class<Z> decoded Class, @ Non Null  Class<R> transcoded Class, @ Non Null  Resource Transcoder<Z, R> transcoder ) { transcoders . add ( new  Entry<> ( decoded Class, transcoded Class, transcoder )  )  ; }"
9309,"public boolean remove All (  Boolean Array array ) { int size = this . size ;  int start Size = size ;  boolean [  ]  items = this . items ;  for  ( int i = 0, n = array . size ;  i < n ;  i++ )  {     boolean item = array . get ( i )  ;      for  ( int ii = 0 ;  ii < size ;  ii++ )  {         if  ( item == items [ ii ]  )  {             remove Index ( ii )  ;              size-- ;              break ;          }     } } return size != start Size ; }"
9310,"public com . anychart . core . resource .  Activities fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
9311,"public  Allocated Unicast Range next Available Unicast Address Range ( final int range Size ) { final  List< Allocated Unicast Range> ranges = new  Array List<> (  )  ;  for  (  Provisioner provisioner : provisioners )  {     ranges . add All ( provisioner . get Allocated Unicast Ranges (  )  )  ;  }  Collections . sort ( ranges, unicast Range Comparator )  ;  return get Next Available Unicast Range ( range Size, new  Allocated Unicast Range (  Mesh Address . START_UNICAST_ADDRESS,  Mesh Address . END_UNICAST_ADDRESS ) , ranges )  ; }"
9312,public void set Connection Callback (  Connection Callback connection Callback ) { this . m Connection Callback = connection Callback ; }
9313,"public void set Angular Damping ( float angular Damping ) { jni Set Angular Damping ( addr, angular Damping )  ; }"
9314,"public void disable (  Object Id id )  throws  App Exception{  Util . check Null ( id, ""id"" )  ;   Atomic Reference< App Exception> error = new  Atomic Reference<> ( null )  ;  call ( TYPE_DISABLE, id . to Hex String (  ) , new  Os JNI Void Result Callback ( error )  )  ;   Result Handler . handle Result ( null, error )  ; }"
9315,public static _ Fields find By Name ( java . lang .  String name ) { return by Name . get ( name )  ; }
9316,public void set Middle Height ( float middle Height ) { this . middle Height = middle Height ; }
9317,"public com . anychart . core .  Series Base tooltip (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . tooltip ( %s )  ; "", settings )  )  ;  return this ; }"
9318,public  Unsigned Integer times (  Unsigned Integer val ) { // TODO ( lowasser ) : make this GWT-compatible return from Int Bits ( value * check Not Null ( val )  . value )  ; }
9319,"public void add Invokevirtual (  Ct Class clazz,  String name,  String desc ) { add Invokevirtual ( const Pool . add Class Info ( clazz ) , name, desc )  ; }"
9320,public void put Last ( E e )  throws  Interrupted Exception{ if  ( e == null )      throw new  Null Pointer Exception (  )  ;   Node<E> node = new  Node<E> ( e )  ;  final  Reentrant Lock lock = this . lock ;  lock . lock (  )  ;  try {     while  ( !link Last ( node )  )  not Full . await (  )  ;  } finally {     lock . unlock (  )  ;  }}
9321,"public void get Owner (  String description ) { set Object Value (  Data Types . OBJ_OWNER, description )  ; }"
9322,"public synchronized int create Connection With Peer ( final  Service Reference local Service Reference, final  Control Point control Point, final  Service peer Service, final  Protocol Info prot Info, final  Connection Info .  Direction direction ) { //  It is important that you synchronize the whole procedure, starting with get New Connection ID (  ) , // then preparing the connection on the peer, then store Connection (  )  final int local Connection ID = get New Connection Id (  )  ;  log . fine ( "" Creating new connection ID "" + local Connection ID + "" with peer: "" + peer Service )  ;  final boolean [  ]  failed = new boolean [ 1 ]  ;  new  Prepare For Connection ( peer Service, control Point, prot Info, local Service Reference, local Connection ID, direction )  {     @ Override     public void received (  Action Invocation invocation, int peer Connection ID, int rcs ID, int av Transport ID )  {          Connection Info info = new  Connection Info ( local Connection ID, rcs ID, av Transport ID, prot Info, peer Service . get Reference (  ) , peer Connection ID, //  If I prepared you for output, then I do input         direction . get Opposite (  ) ,  Connection Info .  Status . OK )  ;          store Connection ( info )  ;      }     @ Override     public void failure (  Action Invocation invocation,  Upnp Response operation,  String default Msg )  {          Abstract Peering Connection Manager Service . this . peer Failure ( invocation, operation, default Msg )  ;          failed [ 0 ]  = true ;      } } . run (  )  ;  return failed [ 0 ]  ? -1 : local Connection ID ; }"
9323,public void stop (  ) { set Status (  Watchable . STOPPED )  ; }
9324,"public long content Length (  )  throws IO Exception{  Input Stream is = this . get Input Stream (  )  ;   Assert . state ( is != null, ""resource input stream must not be null"" )  ;  try {     long size = 0 ;      byte [  ]  buf = new byte [ 255 ]  ;      int read ;      while  (  ( read = is . read ( buf )  )  != -1 )  {         size += read ;      }     return size ;  } finally {     try {         is . close (  )  ;      } catch  ( IO Exception ex )  {     } }}"
9325,"public  Closeable Reference< Bitmap> create Bitmap (  Display Metrics display, int [  ]  colors, int width, int height,  Bitmap .  Config config, @ Nullable  Object caller Context ) { //  Set the stride as the width of the image return create Bitmap ( display, colors, 0, width, width, height, config, caller Context )  ; }"
9326,"public int add Query Listener (  Query Listener query Listener ) {  Query query = query Listener . get Query (  )  ;   Query Listeners Info query Info = queries . get ( query )  ;  boolean first Listen = query Info == null ;  if  ( first Listen )  {     query Info = new  Query Listeners Info (  )  ;      queries . put ( query, query Info )  ;  } query Info . listeners . add ( query Listener )  ;  //  Run global snapshot listeners if a consistent snapshot has been emitted .  boolean raised Event = query Listener . on Online State Changed ( online State )  ;  hard Assert ( !raised Event, ""on Online State Changed (  )  shouldn't raise an event for brand-new listeners . "" )  ;  if  ( query Info . view Snapshot != null )  {     raised Event = query Listener . on View Snapshot ( query Info . view Snapshot )  ;      if  ( raised Event )  {         raise Snapshots In Sync Event (  )  ;      } } if  ( first Listen )  {     query Info . target Id = sync Engine . listen ( query )  ;  } return query Info . target Id ; }"
9327,public  String get Name (  ) { return s_name ; }
9328,final int wire Type (  ) { return wire Type ; }
9329,"public com . anychart . charts .  Tag Cloud full Screen (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . full Screen ( %s )  ; "", enabled )  )  ;  return this ; }"
9330,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
9331,public  List< To Many Target Entity> get To Many By Join Property (  ) { if  ( to Many By Join Property == null )  {     __throw If Detached (  )  ;       To Many Target Entity Dao target Dao = dao Session . get To Many Target Entity Dao (  )  ;       List< To Many Target Entity> to Many By Join Property New = target Dao . _query To Many Entity_ To Many By Join Property ( source Join Property )  ;      synchronized  ( this )  {         if  ( to Many By Join Property == null )  {             to Many By Join Property = to Many By Join Property New ;          }     } } return to Many By Join Property ; }
9332,"public com . anychart . core . ui .  Labels Factory labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . labels (  ) "" )  ; }"
9333,public int get Hdr Value (  ) { return hdr_ ; }
9334,"public  Task< Void> update Children ( @ Non Null  Map< String,  Object> update ) { return update Children Internal ( update, null )  ; }"
9335,"public  String get Env Var Value (  ) { return name . starts With ( ""armv"" )  ? ""arm"" : name ; }"
9336,public  Set< String> get Missing (  ) { return missing ; }
9337,"protected boolean create Tunnel To Target (  Http Route route,  Http Context context )  throws  Http Exception, IO Exception{  Http Host proxy = route . get Proxy Host (  )  ;   Http Host target = route . get Target Host (  )  ;   Http Response response = null ;  boolean done = false ;  while  ( !done )  {     done = true ;      if  ( !this . managed Conn . is Open (  )  )  {         this . managed Conn . open ( route, context, this . params )  ;      }      Http Request connect = create Connect Request ( route, context )  ;      connect . set Params ( this . params )  ;      //  Populate the execution context     context . set Attribute (  Execution Context . HTTP_TARGET_HOST, target )  ;      context . set Attribute (  Execution Context . HTTP_PROXY_HOST, proxy )  ;      context . set Attribute (  Execution Context . HTTP_CONNECTION, managed Conn )  ;      context . set Attribute (  Client Context . TARGET_AUTH_STATE, target Auth State )  ;      context . set Attribute (  Client Context . PROXY_AUTH_STATE, proxy Auth State )  ;      context . set Attribute (  Execution Context . HTTP_REQUEST, connect )  ;      this . request Exec . pre Process ( connect, this . http Processor, context )  ;      response = this . request Exec . execute ( connect, this . managed Conn, context )  ;      response . set Params ( this . params )  ;      this . request Exec . post Process ( response, this . http Processor, context )  ;      int status = response . get Status Line (  )  . get Status Code (  )  ;      if  ( status < 200 )  {         throw new  Http Exception ( "" Unexpected response to CONNECT request: "" + response . get Status Line (  )  )  ;      }      Credentials Provider creds Provider =  (  Credentials Provider )  context . get Attribute (  Client Context . CREDS_PROVIDER )  ;      if  ( creds Provider != null &&  Http Client Params . is Authenticating ( params )  )  {         if  ( this . proxy Auth Handler . is Authentication Requested ( response, context )  )  {             this . log . debug ( "" Proxy requested authentication"" )  ;               Map< String,  Header> challenges = this . proxy Auth Handler . get Challenges ( response, context )  ;              try {                 process Challenges ( challenges, this . proxy Auth State, this . proxy Auth Handler, response, context )  ;              } catch  (  Authentication Exception ex )  {                 if  ( this . log . is Warn Enabled (  )  )  {                     this . log . warn ( "" Authentication error: "" + ex . get Message (  )  )  ;                      break ;                  }             }             update Auth State ( this . proxy Auth State, proxy, creds Provider )  ;              if  ( this . proxy Auth State . get Credentials (  )  != null )  {                 done = false ;                  //  Retry request                 if  ( this . reuse Strategy . keep Alive ( response, context )  )  {                     this . log . debug ( "" Connection kept alive"" )  ;                      //  Consume response content                      Http Entity entity = response . get Entity (  )  ;                      if  ( entity != null )  {                         entity . consume Content (  )  ;                      }                 } else {                     this . managed Conn . close (  )  ;                  }             }         } else {             //  Reset proxy auth scope             this . proxy Auth State . set Auth Scope ( null )  ;          }     } } // can't be null int status = response . get Status Line (  )  . get Status Code (  )  ;  if  ( status > 299 )  {     //  Buffer response content      Http Entity entity = response . get Entity (  )  ;      if  ( entity != null )  {         response . set Entity ( new  Buffered Http Entity ( entity )  )  ;      }     this . managed Conn . close (  )  ;      throw new  Tunnel Refused Exception ( ""CONNECT refused by proxy: "" + response . get Status Line (  ) , response )  ;  } this . managed Conn . mark Reusable (  )  ;  //  Leave it to derived classes, consider insecure by default here .  return false ; }"
9338,"public static JSON Array get JSON Array ( @ Non Null final  String key ) { return get JSON Array ( key, get Default Cache Double Utils (  )  )  ; }"
9339,"public com . anychart . core . axes .  Stock Date Time x Axis (  ) { return new com . anychart . core . axes .  Stock Date Time ( js Base + "" . x Axis (  ) "" )  ; }"
9340,"public void data Mode (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . data Mode (  )  ; "" )  ; }"
9341,"protected int round To Nearest ( int num, int unit ) { return unit *  Math . round ( num /  ( float )  unit )  ; }"
9342,private void change Card3 (  ) { card3 . set Inner Layout ( R . layout . carddemo_suggested_inner_content )  ;  card3 . force = true ;  card View3 . replace Card ( card3 )  ; }
9343,"public void assert Context Specific Style Not Set (  ) {  List< Char Sequence> error Types = null ;  if  (  ( m Private Flags & PFLAG_ALIGN_SELF_IS_SET )  != 0 L )  {     error Types = add Or Create List ( error Types, ""align Self"" )  ;  } if  (  ( m Private Flags & PFLAG_POSITION_TYPE_IS_SET )  != 0 L )  {     error Types = add Or Create List ( error Types, ""position Type"" )  ;  } if  (  ( m Private Flags & PFLAG_FLEX_IS_SET )  != 0 L )  {     error Types = add Or Create List ( error Types, ""flex"" )  ;  } if  (  ( m Private Flags & PFLAG_FLEX_GROW_IS_SET )  != 0 L )  {     error Types = add Or Create List ( error Types, ""flex Grow"" )  ;  } if  (  ( m Private Flags & PFLAG_MARGIN_IS_SET )  != 0 L )  {     error Types = add Or Create List ( error Types, ""margin"" )  ;  } if  ( error Types != null )  {     final  Char Sequence error Str =  Text Utils . join ( "", "", error Types )  ;       Components Reporter . emit Message (  Components Reporter .  Log Level . WARNING, CONTEXT_SPECIFIC_STYLE_SET, "" You should not set "" + error Str + "" to a root layout in "" + get Tail Component (  )  . get Class (  )  . get Simple Name (  )  )  ;  }}"
9344,public void clear Timing Codes (  ) {  (  (  List< Event Timing Code> )  get Object Value (  Data Types . OBJ_TIMED_EVENT_LIST )  )  . clear (  )  ; }
9345,public void set Value (  String name ) { value Index = cp . add Utf8 Info ( name )  ; }
9346,"public com . anychart . core . map . series .  Choropleth fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
9347,"public  String get Target File Path (  ) { return  File Download Utils . get Target File Path ( get Path (  ) , is Path As Directory (  ) , get Filename (  )  )  ; }"
9348,public  List<T> list (  ) { return build (  )  . list (  )  ; }
9349,public void show Pending Notifications To User (  ) { show Pending Notifications To User ( true )  ; }
9350,boolean is Property Acceptable For Embedded Object (  Realm Field Type property ) { return property ==  Realm Field Type . OBJECT || property ==  Realm Field Type . LIST ; }
9351,public  View get Video Surface View (  ) { return surface View ; }
9352,public final int array Offset (  ) { return protected Array Offset (  )  ; }
9353,public final  Listenable Future<T> apply ( D async Dependencies )  throws  Exception{ // NOTE ( beder ) :  We don't worry about catching exceptions from the monitor methods themselves // because we'll wrap all monitoring in non-throwing monitors before we pass them to the // factories .  monitor . method Starting (  )  ;  try {     return call Produces Method ( async Dependencies )  ;  } finally {     monitor . method Finished (  )  ;  }}
9354,public  String Builder get Builder (  ) { return builder ; }
9355,public static long get Group Item Id ( long raw Id ) { return  Item Id Composer . extract Expandable Group Id Part ( raw Id )  ; }
9356,"public com . anychart . charts .  Cartesian3d legend (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . legend ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9357,final boolean is Connected (  ) { return connected ; }
9358,"public com . anychart . core . stock . scrollerseries .  Jump Line rendering (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rendering ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9359,public boolean is Idle (  ) { return delta Queue . is Empty (  )  || delta Queue . delay (  )  > 0 ; }
9360,"public void handle Activity Create Before (  Activity activity,  Bundle saved Instance State ) { if  ( LOG )  {      Log Debug . d ( PLUGIN_TAG, ""activity create before: "" + activity . get Class (  )  . get Name (  )  + "" this="" + activity . hash Code (  )  + "" taskid="" + activity . get Task Id (  )  )  ;  } // 对 Fragment Activity做特殊处理 if  ( saved Instance State != null )  {     //     saved Instance State . set Class Loader ( activity . get Class Loader (  )  )  ;      //     try {         saved Instance State . remove ( ""android:support:fragments"" )  ;      } catch  (  Throwable e )  {         if  ( LOGR )  {              Log Release . e ( PLUGIN_TAG, ""a . c . b1: "" + e . get Message (  ) , e )  ;          }     } } // 对 Fragment Activity做特殊处理  Intent intent = activity . get Intent (  )  ;  if  ( intent != null )  {     intent . set Extras Class Loader ( activity . get Class Loader (  )  )  ;      activity . set Theme ( get Theme Id ( activity, intent )  )  ;  }}"
9361,"public void scroll ( float x Amount, float y Amount ) { if  ( x Amount != 0 )  {     float width =  ( u2 - u )  * texture . get Width (  )  ;      u =  ( u + x Amount )  % 1 ;      u2 = u + width / texture . get Width (  )  ;  } if  ( y Amount != 0 )  {     float height =  ( v2 - v )  * texture . get Height (  )  ;      v =  ( v + y Amount )  % 1 ;      v2 = v + height / texture . get Height (  )  ;  }}"
9362,public synchronized void add Series ( XY Series series ) { m Series . add ( series )  ; }
9363,"public com . anychart . core . stock . scrollerseries .  Candlestick rising Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rising Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
9364,public boolean is Zoom Enabled (  ) { return is Zoom X Enabled (  )  || is Zoom Y Enabled (  )  ; }
9365,public com . google . protobuf .  Byte String get Schedule Type Bytes (  ) { java . lang .  Object ref = schedule Type_ ;  if  ( ref instanceof java . lang .  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      schedule Type_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
9366,public  Builder add Photos ( @ Nullable final  List< Share Photo> photos ) { if  ( photos != null )  {     for  (  Share Photo photo : photos )  {         this . add Photo ( photo )  ;      } } return this ; }
9367,public  Find One And Modify Options sort ( @ Nullable final  Bson sort ) { this . sort = sort ;  return this ; }
9368,public  List<? extends  List< Lat Lng>> get Coordinates (  ) { return m Coordinates ; }
9369,private static boolean signature Required (  Variable Element element ) { return uses Generics ( element . as Type (  )  )  ; }
9370,public boolean is Fill Below Line (  ) { return m Fill Below Line . size (  )  > 0 ; }
9371,"public void set Superclass (  String superclass )  throws  Bad Bytecode{ if  ( !is Constructor (  )  )      return ;   Code Attribute ca = get Code Attribute (  )  ;  byte [  ]  code = ca . get Code (  )  ;   Code Iterator iterator = ca . iterator (  )  ;  int pos = iterator . skip Super Constructor (  )  ;  if  ( pos >= 0 )  {     // not this (  )       Const Pool cp = const Pool ;      int mref =  Byte Array . read U16bit ( code, pos + 1 )  ;      int nt = cp . get Methodref Name And Type ( mref )  ;      int sc = cp . add Class Info ( superclass )  ;      int mref2 = cp . add Methodref Info ( sc, nt )  ;       Byte Array . write16bit ( mref2, code, pos + 1 )  ;  }}"
9372,"public void right (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . right (  )  ; "" )  ; }"
9373,"private static  Immutable Set< Target Node<?>> get Transitive Deps And Inputs ( X Code Descriptions xcode Descriptions,  Target Graph project Graph,  Apple Dependencies Cache dependencies Cache,  Iterable<? extends  Target Node<?>> nodes,  Immutable Set< Target Node<?>> excludes ) { return  Fluent Iterable . from ( nodes )  . transform And Concat (  input ->  Apple Build Rules . get Recursive Target Node Dependencies Of Types ( xcode Descriptions, project Graph,  Optional . of ( dependencies Cache ) ,  Recursive Dependencies Mode . BUILDING, input,  Optional . empty (  )  )  )  . append ( nodes )  . filter (  input -> !excludes . contains ( input )  && xcode Descriptions . is Xcode Description ( input . get Description (  )  )  )  . to Set (  )  ; }"
9374,"public static void or ( int [  ]  a, int [  ]  b ) { for  ( int i = 0 ;  i < b . length ;  i++ )  {     a [ i ]  |= b [ i ]  ;  }}"
9375,public void wait Until Free (  ) { while  ( is Busy (  )  )  {     //  Sometimes the idle queue may not be called - schedule up some work regardless     // of whether the UI thread is busy or not .      // TODO: try to remove this .      send Empty Message ( BLANK )  ;      lock . lock (  )  ;      try {         if  ( is Busy (  )  )  {             busy Condition . await (  )  ;          }     } catch  (  Interrupted Exception e )  {         throw new  Runtime Exception ( e )  ;      } finally {         lock . unlock (  )  ;      } }}
9376,public void open Animate ( int position ) { touch Listener . open Animate ( position )  ; }
9377,"public void rfc3886 Abnormal Examples (  ) {  Http Url url = parse ( ""http://a/b/c/d ; p?q"" )  ;  assert That ( url . resolve ( "" .  . / .  . / .  . /g"" )  )  . is Equal To ( parse ( ""http://a/g"" )  )  ;  assert That ( url . resolve ( "" .  . / .  . / .  . / .  . /g"" )  )  . is Equal To ( parse ( ""http://a/g"" )  )  ;  assert That ( url . resolve ( ""/ . /g"" )  )  . is Equal To ( parse ( ""http://a/g"" )  )  ;  assert That ( url . resolve ( ""/ .  . /g"" )  )  . is Equal To ( parse ( ""http://a/g"" )  )  ;  assert That ( url . resolve ( ""g . "" )  )  . is Equal To ( parse ( ""http://a/b/c/g . "" )  )  ;  assert That ( url . resolve ( "" . g"" )  )  . is Equal To ( parse ( ""http://a/b/c/ . g"" )  )  ;  assert That ( url . resolve ( ""g .  . "" )  )  . is Equal To ( parse ( ""http://a/b/c/g .  . "" )  )  ;  assert That ( url . resolve ( "" .  . g"" )  )  . is Equal To ( parse ( ""http://a/b/c/ .  . g"" )  )  ;  assert That ( url . resolve ( "" . / .  . /g"" )  )  . is Equal To ( parse ( ""http://a/b/g"" )  )  ;  assert That ( url . resolve ( "" . /g/ . "" )  )  . is Equal To ( parse ( ""http://a/b/c/g/"" )  )  ;  assert That ( url . resolve ( ""g/ . /h"" )  )  . is Equal To ( parse ( ""http://a/b/c/g/h"" )  )  ;  assert That ( url . resolve ( ""g/ .  . /h"" )  )  . is Equal To ( parse ( ""http://a/b/c/h"" )  )  ;  assert That ( url . resolve ( ""g ; x=1/ . /y"" )  )  . is Equal To ( parse ( ""http://a/b/c/g ; x=1/y"" )  )  ;  assert That ( url . resolve ( ""g ; x=1/ .  . /y"" )  )  . is Equal To ( parse ( ""http://a/b/c/y"" )  )  ;  assert That ( url . resolve ( ""g?y/ . /x"" )  )  . is Equal To ( parse ( ""http://a/b/c/g?y/ . /x"" )  )  ;  assert That ( url . resolve ( ""g?y/ .  . /x"" )  )  . is Equal To ( parse ( ""http://a/b/c/g?y/ .  . /x"" )  )  ;  assert That ( url . resolve ( ""g#s/ . /x"" )  )  . is Equal To ( parse ( ""http://a/b/c/g#s/ . /x"" )  )  ;  assert That ( url . resolve ( ""g#s/ .  . /x"" )  )  . is Equal To ( parse ( ""http://a/b/c/g#s/ .  . /x"" )  )  ;  // ""http:g"" also okay .  assert That ( url . resolve ( ""http:g"" )  )  . is Equal To ( parse ( ""http://a/b/c/g"" )  )  ; }"
9378,public int get Segment Count (  ) { return segment Count ; }
9379,"private void init Card (  ) { // Init an array of  Cards  Array List< Card> cards = new  Array List< Card> (  )  ;  for  ( int i = 0 ;  i < 200 ;  i++ )  {      Picasso Card card = new  Picasso Card ( this . get Activity (  )  )  ;      card . set Title ( ""A simple card loaded with  Picasso "" + i )  ;      card . set Secondary Title ( "" Simple text .  .  . "" + i )  ;      card . set Count ( i )  ;      cards . add ( card )  ;  } // Set the adapter  Card Array Adapter m Card Array Adapter = new  Card Array Adapter ( get Activity (  ) , cards )  ;   Card List View list View =  (  Card List View )  get Activity (  )  . find View By Id ( R . id . carddemo_extra_list_picasso )  ;  if  ( list View != null )  {     list View . set Adapter ( m Card Array Adapter )  ;  }}"
9380,"public boolean animate Keep In Bounds (  ) { return animate State To ( state, true )  ; }"
9381,"public com . anychart . standalones .  Data Grid vertical Scroll Bar (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . vertical Scroll Bar ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9382,public void set Max Locals ( int value ) { max Locals = value ; }
9383,"public int expand ( @ Int Range ( from = 0 )  int position ) { return expand ( position, false )  ; }"
9384,"public void value Anchor (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . value Anchor (  )  ; "" )  ; }"
9385,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
9386,public void set Rounded Search Bar Enabled ( boolean rounded Search Bar Enabled ) { this . rounded Search Bar Enabled = rounded Search Bar Enabled ;  setup Rounded Search Bar Enabled (  )  ; }
9387,public void add (  Place View Model place View Model ) { places . add ( place View Model )  ; }
9388,public static  Output OOB Action from Value ( final short method ) { switch ( method )  {     default:     case 0x0000:         return NO_OUTPUT ;      case 0x0001:         return BLINK ;      case 0x0002:         return VIBRATE ;      case 0x0004:         return VIBRATE ;      case 0x0008:         return OUTPUT_NUMERIC ;      case 0x0010:         return OUTPUT_ALPHA_NUMERIC ;  }}
9389,public static  Queen create Not Flirty Queen (  ) { return new  Queen (  )  ; }
9390,"public static  Typeface droid Serif Bold (  Context context ) { return  Font Source Processor . process ( R . raw . droidserif_bold, context )  ; }"
9391,"public  Model With Field Annotation_ on Unbind (  On Model Unbound Listener< Model With Field Annotation_,  Object> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
9392,"public com . anychart . core . stock . scrollerseries .  Range Area low Stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
9393,"public com . anychart . core .  State Settings hovered (  ) { return new com . anychart . core .  State Settings ( js Base + "" . hovered (  ) "" )  ; }"
9394,public int get Button (  ) { return button ; }
9395,"Builder<K, V, V2> put All (  Producer< Map<K, V2>> map Of Producers ) { if  ( map Of Producers instanceof  Delegate Producer )  {     @ Suppress Warnings ( ""unchecked"" )   Delegate Producer< Map<K, V2>> as Delegate Producer =  (  Delegate Producer )  map Of Producers ;      return put All ( as Delegate Producer . get Delegate (  )  )  ;  } @ Suppress Warnings ( ""unchecked"" )   Abstract Map Producer<K, V, ?> as Abstract Map Producer =  (  (  Abstract Map Producer<K, V, ?> )   (  Producer )  map Of Producers )  ;  map Builder . put All ( as Abstract Map Producer . contributing Map )  ;  return this ; }"
9396,"public com . anychart . core . cartesian . series .  Range Bar rendering (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rendering ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9397,public void set Read Timeout ( int read Timeout ) { this . read Timeout = read Timeout ; }
9398,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings padding (  Number value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
9399,public  Commit Builder child (  )  throws  Exception{ return new  Commit Builder ( this )  ; }
9400,public com . google . protobuf .  Byte String get Deployment Stage Bytes (  ) { java . lang .  Object ref = deployment Stage_ ;  if  ( ref instanceof java . lang .  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      deployment Stage_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
9401,"public void drop Column (  Attribute<T, ?> attribute ) {  Type<T> type = attribute . get Declaring Type (  )  ;  if  ( attribute . is Foreign Key (  )  )  { // TODO  My SQL need to drop FK constraint first }  Query Builder qb = create Query Builder (  )  ;  qb . keyword ( ALTER, TABLE )  . table Name ( type . get Name (  )  )  . keyword ( DROP, COLUMN )  . attribute ( attribute )  ;  try  (  Connection connection = get Connection (  )  )  {     execute Sql ( connection, qb )  ;  } catch  ( SQL Exception e )  {     throw new  Table Modification Exception ( e )  ;  }}"
9402,"public static  Glide Executor new Unlimited Source Executor (  ) { return new  Glide Executor ( new  Thread Pool Executor ( 0,  Integer . MAX_VALUE, KEEP_ALIVE_TIME_MS,  Time Unit . MILLISECONDS, new  Synchronous Queue< Runnable> (  ) , new  Default Thread Factory ( DEFAULT_SOURCE_UNLIMITED_EXECUTOR_NAME,  Uncaught Throwable Strategy . DEFAULT, false )  )  )  ; }"
9403,"public com . anychart . charts .  Venn select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
9404,public float get Info Window Anchor U (  ) { return m Marker Options . get Info Window Anchor U (  )  ; }
9405,"public void maximum (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . maximum (  )  ; "" )  ; }"
9406,public boolean is Support DP (  ) { return is Support DP ; }
9407,public void set Secret Data ( final  String to Add ) { this . secret Data = to Add ; }
9408,"public com . anychart . scales .  Linear y Scale (  ) { return new com . anychart . scales .  Linear ( js Base + "" . y Scale (  ) "" )  ; }"
9409,public short get Property Id (  ) { return property Id ; }
9410,public boolean equals (  Object o ) { if  ( this == o )  {     return true ;  } if  ( o == null || get Class (  )  != o . get Class (  )  )  {     return false ;  }  Vector3 vector3 =  (  Vector3 )  o ;  return vector3 . x == x && vector3 . y == y && vector3 . z == z ; }
9411,"public void attach Recycler View ( @ Non Null  Recycler View rv ) { if  ( is Released (  )  )  {     throw new  Illegal State Exception ( "" Accessing released object"" )  ;  } if  ( m Recycler View != null )  {     throw new  Illegal State Exception ( "" Recycler View instance has already been set"" )  ;  } m Recycler View = rv ;  m Recycler View . add On Scroll Listener ( m Internal Use On Scroll Listener )  ;  m Recycler View . add On Item Touch Listener ( m Internal Use On Item Touch Listener )  ;  m Display Density = m Recycler View . get Resources (  )  . get Display Metrics (  )  . density ;  m Touch Slop =  View Configuration . get ( m Recycler View . get Context (  )  )  . get Scaled Touch Slop (  )  ;  m Scroll Touch Slop =  ( int )   ( m Touch Slop * SCROLL_TOUCH_SLOP_MULTIPLY + 0 . 5f )  ;  m Handler = new  Internal Handler ( this )  ;  if  ( supports Edge Effect (  )  )  {     // edge effect is available on ICS or later     switch (  Custom Recycler View Utils . get Orientation ( m Recycler View )  )  {         case  Custom Recycler View Utils . ORIENTATION_HORIZONTAL:             m Edge Effect Decorator = new  Left Right Edge Effect Decorator ( m Recycler View )  ;              break ;          case  Custom Recycler View Utils . ORIENTATION_VERTICAL:             m Edge Effect Decorator = new  Top Bottom Edge Effect Decorator ( m Recycler View )  ;              break ;      }     if  ( m Edge Effect Decorator != null )  {         m Edge Effect Decorator . start (  )  ;      } }}"
9412,"public final  Ref List<T> remove ( int idx ) { if  ( cnt == 1 )      return empty List (  )  ;   Ref [  ]  new List = new  Ref [ cnt - 1 ]  ;  if  ( 0 < idx )       System . arraycopy ( list, 0, new List, 0, idx )  ;  if  ( idx + 1 < cnt )       System . arraycopy ( list, idx + 1, new List, idx, cnt -  ( idx + 1 )  )  ;  return new  Ref List<> ( new List, cnt - 1 )  ; }"
9413,public boolean get Flip Vertically (  ) { return flip Vertically ; }
9414,public  Quaternion identity (  ) { w = 1 ;  x = 0 ;  y = 0 ;  z = 0 ;  return this ; }
9415,"public static _ Fields find By Thrift Id Or Throw ( int field Id ) { _ Fields fields = find By Thrift Id ( field Id )  ;  if  ( fields == null )      throw new java . lang .  Illegal Argument Exception ( "" Field "" + field Id + "" doesn't exist!"" )  ;  return fields ; }"
9416,"public com . anychart . scales .  Date Time With Calendar maximum (  Number maximum ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . maximum ( %s )  ; "", maximum )  )  ;  return this ; }"
9417,List< Access Event> get Events (  ) { try {     for  (  ;   ;   )  {         try {             active . acquire ( MAX )  ;              break ;          } catch  (  Interrupted Exception e )  {             continue ;          }     }     synchronized  ( events )  {         return events ;      } } finally {     active . release ( MAX )  ;  }}
9418,"public static void delete Dialog (  Context context,  Dialog Interface .  On Click Listener listener ) {  Alert Dialog .  Builder builder = new  Alert Dialog .  Builder ( context )  ;  builder . set Message ( ""是否删除?"" )  . set Positive Button ( ""确定"", listener )  . set Negative Button ( ""取消"", null )  ;  builder . create (  )  . show (  )  ; }"
9419,"public void add Commands ( PDF Page page ) { add Commands ( page, null )  ; }"
9420,"public  Turbo Module get Module (  String module Name ) {  Turbo Module Holder module Holder ;  synchronized  ( m Turbo Module Cleanup Lock )  {     if  ( m Turbo Module Cleanup Started )  {         /*      *  Always return null after cleanup has started, so that get Module ( module Name )  returns null .       */         return null ;      }     /*    * TODO ( T64619790 ) :  Should we populate m Java Turbo Module Holders ahead of time, to avoid having    * * to control concurrent access to it?    */     if  ( !m Turbo Module Holders . contains Key ( module Name )  )  {         m Turbo Module Holders . put ( module Name, new  Turbo Module Holder (  )  )  ;      }     module Holder = m Turbo Module Holders . get ( module Name )  ;  }  Turbo Module Perf Logger . module Create Start ( module Name, module Holder . get Module Id (  )  )  ;   Turbo Module module = get Module ( module Name, module Holder, true )  ;  if  ( module != null )  {      Turbo Module Perf Logger . module Create End ( module Name, module Holder . get Module Id (  )  )  ;  } else {      Turbo Module Perf Logger . module Create Fail ( module Name, module Holder . get Module Id (  )  )  ;  } return module ; }"
9421,"public com . anychart . core .  No Data Settings no Data (  ) { return new com . anychart . core .  No Data Settings ( js Base + "" . no Data (  ) "" )  ; }"
9422,public  To String Style get Style (  ) { return style ; }
9423,"public static  Rop op Ushr (  Type List types ) { return pick Binary Op ( types, USHR_CONST_INT, USHR_CONST_LONG, null, null, USHR_INT, USHR_LONG, null, null )  ; }"
9424,"private static void process Methods (  Dx Context context,  Direct Class File cf,  Cf Options cf Options,  Dex Options dex Options,  Class Def Item out,  Dex File dex File ) {  Cst Type this Class = cf . get This Class (  )  ;   Method List methods = cf . get Methods (  )  ;  int sz = methods . size (  )  ;  for  ( int i = 0 ;  i < sz ;  i++ )  {      Method one = methods . get ( i )  ;      try {          Cst Method Ref meth = new  Cst Method Ref ( this Class, one . get Nat (  )  )  ;          int access Flags = one . get Access Flags (  )  ;          boolean is Static =  Access Flags . is Static ( access Flags )  ;          boolean is Private =  Access Flags . is Private ( access Flags )  ;          boolean is Native =  Access Flags . is Native ( access Flags )  ;          boolean is Abstract =  Access Flags . is Abstract ( access Flags )  ;          boolean is Constructor = meth . is Instance Init (  )  || meth . is Class Init (  )  ;           Dalv Code code ;          if  ( is Native || is Abstract )  {             //  There's no code for native or abstract methods .              code = null ;          } else {              Concrete Method concrete = new  Concrete Method ( one, cf,  ( cf Options . position Info !=  Position List . NONE ) , cf Options . local Info )  ;               Translation Advice advice ;              advice =  Dex Translation Advice . THE_ONE ;               Rop Method rmeth =  Ropper . convert ( concrete, advice, methods )  ;               Rop Method non Opt Rmeth = null ;              int param Size ;              param Size = meth . get Parameter Word Count ( is Static )  ;               String canonical Name = this Class . get Class Type (  )  . get Descriptor (  )  + "" . "" + one . get Name (  )  . get String (  )  ;              if  ( cf Options . optimize && context . optimizer Options . should Optimize ( canonical Name )  )  {                 if  ( DEBUG )  {                      System . err . println ( "" Optimizing "" + canonical Name )  ;                  }                 non Opt Rmeth = rmeth ;                  rmeth =  Optimizer . optimize ( rmeth, param Size, is Static, cf Options . local Info, advice )  ;                  if  ( DEBUG )  {                     context . optimizer Options . compare Optimizer Step ( non Opt Rmeth, param Size, is Static, cf Options, advice, rmeth )  ;                  }                 if  ( cf Options . statistics )  {                     context . code Statistics . update Rop Statistics ( non Opt Rmeth, rmeth )  ;                  }             }              Local Variable Info locals = null ;              if  ( cf Options . local Info )  {                 locals =  Local Variable Extractor . extract ( rmeth )  ;              }             code =  Rop Translator . translate ( rmeth, cf Options . position Info, locals, param Size, dex Options )  ;              if  ( cf Options . statistics && non Opt Rmeth != null )  {                 update Dex Statistics ( context, cf Options, dex Options, rmeth, non Opt Rmeth, locals, param Size, concrete . get Code (  )  . size (  )  )  ;              }         }         //  Preserve the synchronized flag as its ""declared"" variant .  .  .          if  (  Access Flags . is Synchronized ( access Flags )  )  {             access Flags |=  Access Flags . ACC_DECLARED_SYNCHRONIZED ;              /*                  *  .  .  . but only native methods are actually allowed to be                  * synchronized .                   */             if  ( !is Native )  {                 access Flags &= ~ Access Flags . ACC_SYNCHRONIZED ;              }         }         if  ( is Constructor )  {             access Flags |=  Access Flags . ACC_CONSTRUCTOR ;          }          Type List exceptions =  Attribute Translator . get Exceptions ( one )  ;           Encoded Method mi = new  Encoded Method ( meth, access Flags, code, exceptions )  ;          if  ( meth . is Instance Init (  )  || meth . is Class Init (  )  || is Static || is Private )  {             out . add Direct Method ( mi )  ;          } else {             out . add Virtual Method ( mi )  ;          }          Annotations annotations =  Attribute Translator . get Method Annotations ( one )  ;          if  ( annotations . size (  )  != 0 )  {             out . add Method Annotations ( meth, annotations, dex File )  ;          }          Annotations List list =  Attribute Translator . get Parameter Annotations ( one )  ;          if  ( list . size (  )  != 0 )  {             out . add Parameter Annotations ( meth, list, dex File )  ;          }         dex File . get Method Ids (  )  . intern ( meth )  ;      } catch  (  Runtime Exception ex )  {          String msg = "" .  .  . while processing "" + one . get Name (  )  . to Human (  )  + "" "" + one . get Descriptor (  )  . to Human (  )  ;          throw  Exception With Context . with Context ( ex, msg )  ;      } }}"
9425,"public com . anychart . core . stock . series .  Base series (  ) { return new com . anychart . core . stock . series .  Base ( js Base + "" . series (  ) "" )  ; }"
9426,public boolean is Pass To Tv (  ) { return is Pass To Tv ; }
9427,"public void read (  Input Stream input Stream )  throws IO Exception{ xml In Read++ ;  final XML Reader xr ;  try {     xr = XML Reader Factory . create XML Reader (  )  ;  } catch  ( SAX Exception e )  {     throw new IO Exception ( J Git Text . get (  )  . no XML Parser Available, e )  ;  } xr . set Content Handler ( this )  ;  try {     xr . parse ( new  Input Source ( input Stream )  )  ;  } catch  ( SAX Exception e )  {     throw new IO Exception (  Repo Text . get (  )  . error Parsing Manifest File, e )  ;  }}"
9428,"public  List<T> execute Fetch Operation (  Fetch Request<T> fetch Request ) {  List<T> results = new  Array List<T> (  )  ;  //FIXME: properly route the fetch to the right store  Persistent Store store = get Persistent Store Coordinator (  )  . get Persistent Stores (  )  . get ( 0 )  ;  results = store . execute Fetch Request ( fetch Request, this )  ;  if  ( fetch Request . includes Pending Changes (  )  )  {     for  (  Managed Object object : changed Objects . get Inserted Objects (  )  )  {          Object ID obj ID = object . get ID (  )  ;          if  ( obj ID . get Type (  )  . is Assignable From ( fetch Request . get Entity (  )  . get Type (  )  )  )  {             if  ( fetch Request . get Predicate (  )  == null || fetch Request . get Predicate (  )  . evaluate ( object )  )  {                 results . add (  ( T )  object )  ;              }         }     }     //FIXME: also search from updated objects     results . remove All ( get Deleted Objects (  )  )  ;  } return results ; }"
9429,"public static void start (  String url,  String name,  Download Listener listener, boolean call Back In Main Thread ) { start ( new  File Info ( url, name ) , listener, call Back In Main Thread )  ; }"
9430,"public static long get Latest File Timestamp (  Context c,  String filename ) { long timestamp Of File = get File Timestamp ( c, filename )  ;  long timestamp Of Asset = get Bundle Timestamp ( c, filename )  ;  return  Math . max ( timestamp Of File, timestamp Of Asset )  ; }"
9431,"public static  Attachment Task start Download (  Attachment View image View, boolean cache Flag, com . applozic . mobicomkit . api . conversation .  Message message,  Media Download Progress Handler handler,  Context context ) { /*      *  Gets a task from the pool of tasks, returning null if the pool is empty      */  Attachment Task download Task = s Instance . m Photo Task Work Queue . poll (  )  ;  //  If the queue was empty, create a new task instead .  if  ( null == download Task )  {     download Task = new  Attachment Task (  )  ;  } //  Initializes the task download Task . initialize Downloader Task (  Attachment Manager . s Instance, image View, cache Flag )  ;  if  ( message != null && handler != null )  {     download Task . set Attachment ( message, handler, context )  ;  } //  If image is already downloaded  .  .  . just pass-message as download complete if  ( !download Task . get Message (  )  . is Attachment Downloaded (  )  )  {     /*          * "" Executes"" the tasks' download  Runnable in order to download the image .   If no          *  Threads are available in the thread pool, the  Runnable waits in the queue .           */     s Instance . m Download Thread Pool . execute ( download Task . get HTTP Download Runnable (  )  )  ;      s Instance . attachment In Progress . add ( download Task . get Message (  )  . get Key String (  )  )  ;      s Instance . attachment Task List . add ( download Task )  ;      //  Sets the display to show that the image is queued for downloading and decoding .      if  ( image View != null && image View . get Proress Bar (  )  != null )  {         image View . get Proress Bar (  )  . set Visibility (  View . VISIBLE )  ;      } //image View . set Status Resource ( R . drawable . imagequeued )  ;  //  The image was cached, so no download is required .  } else {     /*          *  Signals that the download is ""complete"", because the byte array already contains the          * undecoded image .   The decoding starts .           */     //image View . get Proress Bar (  )  . set Visibility (  View . VISIBLE )  ;      s Instance . handle State ( download Task, DOWNLOAD_COMPLETE )  ;  } //  Returns a task object, either newly-created or one from the task pool return download Task ; }"
9432,public  Download force (  ) { m Forced = true ;  return this ; }
9433,"public com . anychart . charts .  Pie bounds ( com . anychart . utils .  Rect Obj bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
9434,"public void delete (  Random Access File raf,  Random Access File raf Temp )  throws IO Exception{  Mp4 Tag tag = new  Mp4 Tag (  )  ;  try {     write ( tag, raf, raf Temp )  ;  } catch  (  Cannot Write Exception cwe )  {     throw new IO Exception ( cwe . get Message (  )  )  ;  }}"
9435,Event Bus get Event Bus (  ) { return event Bus != null ? event Bus :  Event Bus . get Default (  )  ; }
9436,public  String get New Path (  ) { return new Path ; }
9437,"public com . anychart . core . utils .  Bounds bounds (  ) { return new com . anychart . core . utils .  Bounds ( js Base + "" . bounds (  ) "" )  ; }"
9438,"public void test Refresh Token Request Not Return Error Code (  )  throws IO Exception, JSON Exception{  File Mock Context mock Context = new  File Mock Context ( get Context (  )  )  ;  I Token Cache Store mock Cache = get Cache For Refresh Token ( TEST_IDTOKEN_USERID, TEST_IDTOKEN_UPN )  ;  final  Authentication Request authentication Request = get Authentication Request ( VALID_AUTHORITY, ""resource"", ""clientid"", false )  ;  authentication Request . set User Identifier Type (  User Identifier Type .  Unique Id )  ;  authentication Request . set User Id ( TEST_IDTOKEN_USERID )  ;  final  Acquire Token Silent Handler acquire Token Silent Handler = get Acquire Token Handler ( mock Context, authentication Request, mock Cache )  ;  // inject mocked web request handler final I Web Request Handler mocked Web Request Handler =  Mockito . mock (  Web Request Handler . class )  ;   Mockito . when ( mocked Web Request Handler . send Post (  Mockito . any ( URL . class ) ,  Mockito . < String,  String>any Map (  ) ,  Mockito . any ( byte [  ]  . class ) ,  Mockito . any String (  )  )  )  . then Return ( new  Http Web Response (  Http URL Connection . HTTP_BAD_REQUEST,  Util . get Error Response Body ( null ) , null )  )  ;  acquire Token Silent Handler . set Web Request Handler ( mocked Web Request Handler )  ;  try {     acquire Token Silent Handler . get Access Token (  )  ;      fail (  )  ;  } catch  ( final  Authentication Exception e )  {     assert Equals ( "" Token is not exchanged"", ADAL Error . AUTH_FAILED_NO_TOKEN, e . get Code (  )  )  ;      //  If AUTH_FAILE_NO_TOKEN is thrown, cause will be return in  Authentication Exception     assert Not Null ( e . get Cause (  )  )  ;      assert True ( e . get Cause (  )  instanceof  Authentication Exception )  ;      final  Authentication Exception auth Exception =  (  Authentication Exception )  e . get Cause (  )  ;      assert True ( auth Exception . get Code (  )  == ADAL Error . SERVER_ERROR )  ;  } // verify that the cache is not cleared assert Not Null ( mock Cache . get Item (  Cache Key . create Cache Key For RT Entry ( VALID_AUTHORITY, ""resource"", ""client Id"", TEST_IDTOKEN_USERID )  )  )  ;  assert Not Null ( mock Cache . get Item (  Cache Key . create Cache Key For RT Entry ( VALID_AUTHORITY, ""resource"", ""client Id"", TEST_IDTOKEN_UPN )  )  )  ;  clear Cache ( mock Cache )  ; }"
9439,public void set Chart Values Spacing ( float spacing ) { m Chart Values Spacing = spacing ; }
9440,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_UNSYNC_LYRICS ; }
9441,"public com . anychart . core .  Separate Chart animation (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . animation ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9442,Node create Leaf ( int node Type ) { return new  Node ( node Type )  ; }
9443,"private  View find Down View ( @ Non Null final  Motion Event motion Event ) {  Rect rect = new  Rect (  )  ;  int child Count = m List View Wrapper . get Child Count (  )  ;  int x =  ( int )  motion Event . get X (  )  ;  int y =  ( int )  motion Event . get Y (  )  ;   View down View = null ;  for  ( int i = 0 ;  i < child Count && down View == null ;  i++ )  {      View child = m List View Wrapper . get Child At ( i )  ;      if  ( child != null )  {         child . get Hit Rect ( rect )  ;          if  ( rect . contains ( x, y )  )  {             down View = child ;          }     } } return down View ; }"
9444,public void clear Key Request Property (  String name ) {  Assertions . check Not Null ( name )  ;  synchronized  ( key Request Properties )  {     key Request Properties . remove ( name )  ;  }}
9445,public  Parsable Byte Array get Payload (  ) { return packet Array ; }
9446,public synchronized  Double [  ]  get Y Text Label Locations ( int scale ) { return m Y Text Labels . get ( scale )  . key Set (  )  . to Array ( new  Double [ 0 ]  )  ; }
9447,"public com . anychart . core . cartesian . series .  Continuous Range Base a11y (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . a11y ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
9448,public static  String get String Value (  Buck Or Expression or Expression ) { return  Optional . of ( or Expression )  . map (  Buck Or Expression::get And Expression List )  . filter (  list -> list . size (  )  == 1 )  . map (  list -> list . get ( 0 )  )  . map (  Buck Psi Impl Util::get String Value )  . or Else ( null )  ; }
9449,"public byte [  ]  end ( int access Flags, int this Class, int super Class, int [  ]  interfaces,  Attribute Writer aw ) { const Pool . end (  )  ;  output . write Short ( access Flags )  ;  output . write Short ( this Class )  ;  output . write Short ( super Class )  ;  if  ( interfaces == null )      output . write Short ( 0 )  ;  else {     int n = interfaces . length ;      output . write Short ( n )  ;      for  ( int i = 0 ;  i < n ;  i++ )  output . write Short ( interfaces [ i ]  )  ;  } output . enlarge ( fields . data Size (  )  + methods . data Size (  )  + 6 )  ;  try {     output . write Short ( fields . size (  )  )  ;      fields . write ( output )  ;      output . write Short ( methods . num Of Methods (  )  )  ;      methods . write ( output )  ;  } catch  ( IO Exception e )  { } write Attribute ( output, aw, 0 )  ;  return output . to Byte Array (  )  ; }"
9450,"public com . anychart . core . gantt . elements .  Connector Element preview Stroke ( com . anychart . graphics . vector .  Stroke value,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . preview Stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
9451,public void set On Load More Listener (  On Load More Listener on Load More Listener ) { this . on Load More Listener = on Load More Listener ; }
9452,"public void add (  Book book )  throws  Book Duplicate Exception{ if  ( collection . contains Key ( book . get Id (  )  )  )  {     throw new  Book Duplicate Exception ( "" Duplicated book with id: "" + book . get Id (  )  )  ;  } // add copy of the book collection . put ( book . get Id (  ) , new  Book ( book )  )  ; }"
9453,"public com . anychart . charts .  Radar y Minor Grid (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Minor Grid ( %s )  ; "", settings )  )  ;  return this ; }"
9454,"public void bind (  ) { if  ( buffer Handle == 0 )      throw new  Gdx Runtime Exception ( "" No buffer allocated!"" )  ;   Gdx . gl20 . gl Bind Buffer ( GL20 . GL_ELEMENT_ARRAY_BUFFER, buffer Handle )  ;  if  ( is Dirty )  {      (  (  Buffer )  byte Buffer )  . limit ( buffer . limit (  )  * 2 )  ;       Gdx . gl20 . gl Buffer Data ( GL20 . GL_ELEMENT_ARRAY_BUFFER, byte Buffer . limit (  ) , byte Buffer, usage )  ;      is Dirty = false ;  } is Bound = true ; }"
9455,"static  Access Path from Field Access (  Field Access Node node ) {  List< Access Path Element> elements = new  Array List<> (  )  ;   Root root = populate Elements Rec ( node, elements )  ;  return  ( root != null )  ? new  Access Path ( root, elements )  : null ; }"
9456,"protected  Object do Top Call (  Callable callable,  Context cx,  Scriptable scope,  Scriptable this Obj,  Object [  ]  args ) { return callable . call ( cx, scope, this Obj, args )  ; }"
9457,"public  Prop Defaults View Model_ on Visibility Changed (  On Model Visibility Changed Listener< Prop Defaults View Model_,  Prop Defaults View> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
9458,"public com . anychart . core . utils .  Padding padding (  ) { return new com . anychart . core . utils .  Padding ( js Base + "" . padding (  ) "" )  ; }"
9459,"private static void expand Field Array (  Object instance,  String field Name,  Object [  ]  extra Elements )  throws  No Such Field Exception,  Illegal Argument Exception,  Illegal Access Exception{  Field jlr Field =  Reflect Util . find Field ( instance, field Name )  ;   Object [  ]  original =  (  Object [  ]  )  jlr Field . get ( instance )  ;   Object [  ]  combined =  (  Object [  ]  )   Array . new Instance ( original . get Class (  )  . get Component Type (  ) , original . length + extra Elements . length )  ;   System . arraycopy ( original, 0, combined, 0, original . length )  ;   System . arraycopy ( extra Elements, 0, combined, original . length, extra Elements . length )  ;  jlr Field . set ( instance, combined )  ; }"
9460,"public com . anychart . core . cartesian . series .  Spline Area spline Area ( com . anychart . data .  View data, com . anychart . data .  Text Parsing Settings csv Settings ) { return new com . anychart . core . cartesian . series .  Spline Area (  String . format (  Locale . US, js Base + "" . spline Area ( %s, %s ) "",  ( data != null )  ? data . get Js Base (  )  : null,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
9461,"private static  Input Only Internal Node get Clean Updated Shallow Copy ( final  Layout State Context layout State Context, final  Input Only Internal Node current, final  Component head, @ Nullable final  String head Key ) { final boolean is Tracing =  Components Systrace . is Tracing (  )  ;  if  ( is Tracing )  {      Components Systrace . begin Section ( ""clone:"" + head . get Simple Name (  )  )  ;  } // 1 .   Shallow copy this layout .  final  Input Only Internal Node layout = current . clone (  )  ;  if  ( is Tracing )  {      Components Systrace . end Section (  )  ;       Components Systrace . begin Section ( ""clean:"" + head . get Simple Name (  )  )  ;  } // 2 .   Reset and release properties layout . clean (  )  ;  if  ( is Tracing )  {      Components Systrace . end Section (  )  ;       Components Systrace . begin Section ( ""update:"" + head . get Simple Name (  )  )  ;  } // 3 .   Get updated components  Pair< List< Component>,  List< String>> updated = current . get Updated Components ( layout State Context, head, head Key )  ;  // 4 .   Update the layout with the updated context, components, and  Yoga Node .  layout . update With ( head . get Scoped Context ( layout State Context, head Key ) , updated . first, updated . second, null )  ;  if  ( is Tracing )  {      Components Systrace . end Section (  )  ;  } return layout ; }"
9462,"public void get Field Index (  String name ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Field Index ( %s )  ; "", wrap Quotes ( name )  )  )  ; }"
9463,"public com . anychart . standalones .  Project Timeline row Even Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Even Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
9464,"private static void calc Signature ( byte [  ]  bytes ) {  Message Digest md ;  try {     md =  Message Digest . get Instance ( ""SHA-1"" )  ;  } catch  (  No Such Algorithm Exception ex )  {     throw new  Runtime Exception ( ex )  ;  } md . update ( bytes, 32, bytes . length - 32 )  ;  try {     int amt = md . digest ( bytes, 12, 20 )  ;      if  ( amt != 20 )  {         throw new  Runtime Exception ( ""unexpected digest write: "" + amt + "" bytes"" )  ;      } } catch  (  Digest Exception ex )  {     throw new  Runtime Exception ( ex )  ;  }}"
9465,"public void set Trim Frame Count ( int trim Start Frames, int trim End Frames ) { this . trim Start Frames = trim Start Frames ;  this . trim End Frames = trim End Frames ; }"
9466,"public void write (  String str )  throws IO Exception{ write ( str, 0, str . length (  )  )  ; }"
9467,"public static int v (  String tag,  String msg ) { return  Log . v ( tag, msg )  ; }"
9468,"public  Actor hit ( float stage X, float stage Y, boolean touchable ) { root . parent To Local Coordinates ( temp Coords . set ( stage X, stage Y )  )  ;  return root . hit ( temp Coords . x, temp Coords . y, touchable )  ; }"
9469,"protected long get Key ( int position,  String condition ) { long key = -1 ;   Cursor cursor = m DB . query ( true, m DB Message . TABLE_NAME, new  String [  ]  { m DB Message . PRIMARY_KEY }, condition, null, null, null, m DB Message . PRIMARY_KEY + "" DESC"", null )  ;  if  ( cursor != null && cursor . get Count (  )  > 0 )  {     cursor . move To Position ( position )  ;      key = cursor . get Long ( cursor . get Column Index ( m DB Message . PRIMARY_KEY )  )  ;      cursor . close (  )  ;  } return key ; }"
9470,"public final  Optional<E> first Match (  Predicate<? super E> predicate ) { return  Iterables . try Find ( get Delegate (  ) , predicate )  ; }"
9471,private void set Header Status Click To Load (  ) { if  ( current Header Status != HEADER_STATUS_CLICK_TO_LOAD )  {     reset Header Padding (  )  ;      header Image . clear Animation (  )  ;      header Image . set Visibility (  View . GONE )  ;      header Progress Bar . set Visibility (  View . GONE )  ;      header Text . set Text ( header Default Text )  ;      current Header Status = HEADER_STATUS_CLICK_TO_LOAD ;  }}
9472,"public com . anychart . core . stock . indicators . AO ao ( com . anychart . data .  Table Mapping mapping,  Number fast Period,  Number slow Period,  String ma Type, com . anychart . enums .  Stock Series Type series Type ) { return new com . anychart . core . stock . indicators . AO (  String . format (  Locale . US, js Base + "" . ao ( %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, fast Period, slow Period, wrap Quotes ( ma Type ) ,  ( series Type != null )  ? series Type . get Js Base (  )  : null )  )  ; }"
9473,public boolean has Rev Sort (  Rev Sort sort ) { return sorting . contains ( sort )  ; }
9474,public  String get Font Name (  ) { return this . font Name ; }
9475,"public com . anychart . standalones .  Data Grid min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
9476,public P Stream group By (  String group Field ) { return this . transform (  Groupers . group By ( group Field )  )  ; }
9477,"public void save As Svg (  String paper Size,  Boolean landscape,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Svg ( %s, %s, %s )  ; "", wrap Quotes ( paper Size ) , landscape, wrap Quotes ( filename )  )  )  ; }"
9478,public  Bundle get Broadcast Options (  Intent intent ) { return get Shadow Instrumentation (  )  . get Broadcast Options ( intent )  ; }
9479,"public static  Scope scope Ignoring Short Events (  Buck Event Bus bus,  Perf Event Id perf Event Id,  String k1,  Object v1,  String k2,  Object v2,  Scope parent Scope, long minimum Time,  Time Unit time Unit ) { return scope Ignoring Short Events ( bus, perf Event Id,  Immutable Map . of ( k1, v1, k2, v2 ) , parent Scope, minimum Time, time Unit )  ; }"
9480,"public void run On Queue (  Runnable runnable ) { if  ( m Is Finished )  {     F Log . w (  React Constants . TAG, "" Tried to enqueue runnable on already finished thread: '"" + get Name (  )  + "" .  .  .  dropping  Runnable . "" )  ;  } m Handler . post ( runnable )  ; }"
9481,"static int [  ]  get Bitrates Using Future Info (  Media Chunk Iterator [  ]  iterators,  Format [  ]  formats, long max Duration Us, @ Nullable int [  ]  bitrates ) { int track Count = iterators . length ;   Assertions . check Argument ( track Count == formats . length )  ;  if  ( track Count == 0 )  {     return new int [ 0 ]  ;  } if  ( bitrates == null )  {     bitrates = new int [ track Count ]  ;  } if  ( max Duration Us == 0 )  {      Arrays . fill ( bitrates,  Format . NO_VALUE )  ;      return bitrates ;  } int [  ]  format Bitrates = new int [ track Count ]  ;  float [  ]  bitrate Ratios = new float [ track Count ]  ;  boolean need Estimate Bitrate = false ;  boolean can Estimate Bitrate = false ;  for  ( int i = 0 ;  i < track Count ;  i++ )  {     int bitrate = get Average Bitrate ( iterators [ i ] , max Duration Us )  ;      if  ( bitrate !=  Format . NO_VALUE )  {         int format Bitrate = formats [ i ]  . bitrate ;          format Bitrates [ i ]  = format Bitrate ;          if  ( format Bitrate !=  Format . NO_VALUE )  {             bitrate Ratios [ i ]  =  (  ( float )  bitrate )  / format Bitrate ;              can Estimate Bitrate = true ;          }     } else {         need Estimate Bitrate = true ;          format Bitrates [ i ]  =  Format . NO_VALUE ;      }     bitrates [ i ]  = bitrate ;  } if  ( need Estimate Bitrate && can Estimate Bitrate )  {     estimate Bitrates ( bitrates, formats, format Bitrates, bitrate Ratios )  ;  } return bitrates ; }"
9482,"public static void is Assignable From ( final  Class<?> super Type, final  Class<?> type ) { // TODO when breaking BC, consider returning type if  ( super Type . is Assignable From ( type )  == false )  {     throw new  Illegal Argument Exception (  String . format ( DEFAULT_IS_ASSIGNABLE_EX_MESSAGE, type == null ? ""null"" : type . get Name (  ) , super Type . get Name (  )  )  )  ;  }}"
9483,"public com . anychart . core .  Separate Chart container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
9484,"public com . anychart . core . cartesian . series .  Bar3d left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
9485,"public void test Acquire Token Validate Authority Returns Valid (  )  throws  Interrupted Exception{ final  File Mock Context mock Context = new  File Mock Context ( get Instrumentation (  )  . get Context (  )  )  ;  final  Authentication Context context = new  Authentication Context ( mock Context, VALID_AUTHORITY, true )  ;  final  Count Down Latch signal = new  Count Down Latch ( 1 )  ;  final  Mock Activity test Activity = new  Mock Activity (  )  ;  test Activity . m Signal = signal ;  final  Mock Authentication Callback callback = new  Mock Authentication Callback ( signal )  ;  context . acquire Token ( test Activity . get Test Activity (  ) , ""resource"", ""clientid"", ""redirect Uri"", ""userid"", callback )  ;  signal . await ( CONTEXT_REQUEST_TIME_OUT,  Time Unit . MILLISECONDS )  ;  //  Check response in callback result assert Null ( "" Error is null"", callback . get Exception (  )  )  ;  assert Equals ( "" Activity was attempted to start with request code"",  Authentication Constants . UI Request . BROWSER_FLOW, test Activity . m Start Activity Request Code )  ; }"
9486,"private void recycle Children (  Recycler View .  Recycler recycler, int start Index, int end Index ) { if  ( start Index == end Index )  {     return ;  } if  ( DEBUG )  {      Log . d ( TAG, "" Recycling "" +  Math . abs ( start Index - end Index )  + "" items"" )  ;  } if  ( end Index > start Index )  {     for  ( int i = end Index - 1 ;  i >= start Index ;  i-- )  {         remove And Recycle View At ( i, recycler )  ;      } } else {     for  ( int i = start Index ;  i > end Index ;  i-- )  {         remove And Recycle View At ( i, recycler )  ;      } }}"
9487,private  String get Random Query Path (  ) { int random Index = rand . next Int ( QUERY_PATHS . size (  )  )  ;  return QUERY_PATHS . get ( random Index )  ; }
9488,"public com . anychart . core .  Separate Chart interactivity (  String settings ) { return new com . anychart . core .  Separate Chart (  String . format (  Locale . US, js Base + "" . interactivity ( %s ) "", wrap Quotes ( settings )  )  )  ; }"
9489,"public void assert Context Specific Style Not Set (  ) {  List< Char Sequence> error Types = null ;  if  (  ( m Private Flags & PFLAG_ALIGN_SELF_IS_SET )  != 0 L )  {     error Types = add Or Create List ( error Types, ""align Self"" )  ;  } if  (  ( m Private Flags & PFLAG_POSITION_TYPE_IS_SET )  != 0 L )  {     error Types = add Or Create List ( error Types, ""position Type"" )  ;  } if  (  ( m Private Flags & PFLAG_FLEX_IS_SET )  != 0 L )  {     error Types = add Or Create List ( error Types, ""flex"" )  ;  } if  (  ( m Private Flags & PFLAG_FLEX_GROW_IS_SET )  != 0 L )  {     error Types = add Or Create List ( error Types, ""flex Grow"" )  ;  } if  (  ( m Private Flags & PFLAG_MARGIN_IS_SET )  != 0 L )  {     error Types = add Or Create List ( error Types, ""margin"" )  ;  } if  ( error Types != null )  {     final  Char Sequence error Str =  Text Utils . join ( "", "", error Types )  ;       Components Reporter . emit Message (  Components Reporter .  Log Level . WARNING, CONTEXT_SPECIFIC_STYLE_SET, "" You should not set "" + error Str + "" to a root layout in "" + get Tail Component (  )  . get Simple Name (  )  )  ;  }}"
9490,private void init (  ) { m Fade Duration = DEFAULT_FADE_DURATION ;  m Desired Aspect Ratio = 0 ;  m Placeholder Image = null ;  m Placeholder Image Scale Type = DEFAULT_SCALE_TYPE ;  m Retry Image = null ;  m Retry Image Scale Type = DEFAULT_SCALE_TYPE ;  m Failure Image = null ;  m Failure Image Scale Type = DEFAULT_SCALE_TYPE ;  m Progress Bar Image = null ;  m Progress Bar Image Scale Type = DEFAULT_SCALE_TYPE ;  m Actual Image Scale Type = DEFAULT_ACTUAL_IMAGE_SCALE_TYPE ;  m Actual Image Matrix = null ;  m Actual Image Focus Point = null ;  m Actual Image Color Filter = null ;  m Background = null ;  m Overlays = null ;  m Pressed State Overlay = null ;  m Rounding Params = null ; }
9491,"public  Activity new Activity (  Class Loader cl,  String class Name,  Intent intent )  throws  Instantiation Exception,  Illegal Access Exception,  Class Not Found Exception{ //        return  (  Activity ) cl . load Class ( class Name )  . new Instance (  )  ;   Class<?> target Activity = cl . load Class ( class Name )  ;   Object instance Of Target = target Activity . new Instance (  )  ;  if  ( A Router . can Auto Inject (  )  )  {      String [  ]  auto Inject Params = intent . get String Array Extra ( A Router . AUTO_INJECT )  ;      if  ( null != auto Inject Params && auto Inject Params . length > 0 )  {         for  (  String params Name : auto Inject Params )  {              Object value = intent . get Extras (  )  . get (  Text Utils . get Left ( params Name )  )  ;              if  ( null != value )  {                 try {                      Field inject Field = target Activity . get Declared Field (  Text Utils . get Left ( params Name )  )  ;                      inject Field . set Accessible ( true )  ;                      inject Field . set ( instance Of Target, value )  ;                  } catch  (  Exception e )  {                     A Router . logger . error (  Consts . TAG, "" Inject values for activity error!  [ "" + e . get Message (  )  + "" ] "" )  ;                  }             }         }     } } return  (  Activity )  instance Of Target ; }"
9492,"public static  Removal Listener<K, V> asynchronous ( final  Removal Listener<K, V> listener, final  Executor executor ) { check Not Null ( listener )  ;  check Not Null ( executor )  ;  return new  Removal Listener<K, V> (  )  {     @ Override     public void on Removal ( final  Removal Notification<K, V> notification )  {         executor . execute ( new  Runnable (  )  {             @ Override             public void run (  )  {                 listener . on Removal ( notification )  ;              }         } )  ;      } } ; }"
9493,"public void font Variant (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Variant (  )  ; "" )  ; }"
9494,"public static void auto Convert Density Base On Width (  Activity activity, float design Width In Dp ) { auto Convert Density ( activity, design Width In Dp, true )  ; }"
9495,public void set Parent Ids (  List<? extends  Any Object Id> new Parents ) { parent Ids = new  Object Id [ new Parents . size (  )  ]  ;  for  ( int i = 0 ;  i < new Parents . size (  )  ;  i++ )  parent Ids [ i ]  = new Parents . get ( i )  . copy (  )  ; }
9496,public  Drag Builder3 for Vertical List (  ) { return with Directions (  Item Touch Helper . UP |  Item Touch Helper . DOWN )  ; }
9497,"public com . anychart . core . ui .  Tooltip tooltip (  ) { return new com . anychart . core . ui .  Tooltip ( js Base + "" . tooltip (  ) "" )  ; }"
9498,public  Revert Command set Our Commit Name (  String our Commit Name ) { this . our Commit Name = our Commit Name ;  return this ; }
9499,"public com . anychart . standalones .  Title margin (  String value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
9500,"public static void replace ( @ Non Null final  Fragment src Fragment, @ Non Null final  Fragment dest Fragment, final  String dest Tag ) { replace ( src Fragment, dest Fragment, dest Tag, false )  ; }"
9501,public final int get Net Key Index (  ) { return m Net Key Index ; }
9502,public int get Port Or Default ( int default Port ) { return has Port (  )  ? port : default Port ; }
9503,"public  Rebase Command run Interactively (  Interactive Handler handler, final boolean stop After Rebase Interactive Initialization ) { this . stop After Initialization = stop After Rebase Interactive Initialization ;  this . interactive Handler = handler ;  return this ; }"
9504,"public JSON Object json Serialize (  ) { JSON Object json = new JSON Object (  )  ;   Json Util . put ( json, KEY_REQUEST, request . json Serialize (  )  )  ;   Json Util . put If Not Null ( json, KEY_TOKEN_TYPE, token Type )  ;   Json Util . put If Not Null ( json, KEY_ACCESS_TOKEN, access Token )  ;   Json Util . put If Not Null ( json, KEY_EXPIRES_AT, access Token Expiration Time )  ;   Json Util . put If Not Null ( json, KEY_ID_TOKEN, id Token )  ;   Json Util . put If Not Null ( json, KEY_REFRESH_TOKEN, refresh Token )  ;   Json Util . put If Not Null ( json, KEY_SCOPE, scope )  ;   Json Util . put ( json, KEY_ADDITIONAL_PARAMETERS,  Json Util . map To Json Object ( additional Parameters )  )  ;  return json ; }"
9505,"public void has Parent (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . has Parent (  )  ; "" )  ; }"
9506,public  Immutable Set<R> row Key Set (  ) { return row Key To Index . key Set (  )  ; }
9507,"public void begin ( int access Flags, int name, int descriptor, int [  ]  exceptions,  Attribute Writer aw ) { ++method Count ;  output . write Short ( access Flags )  ;  output . write Short ( name )  ;  output . write Short ( descriptor )  ;  is Abstract =  ( access Flags &  Access Flag . ABSTRACT )  != 0 ;  int attr Count = is Abstract ? 0 : 1 ;  if  ( exceptions != null )      ++attr Count ;  write Attribute ( output, aw, attr Count )  ;  if  ( exceptions != null )      write Throws ( exceptions )  ;  if  ( !is Abstract )  {     if  ( code Index == 0 )          code Index = const Pool . add Utf8 Info (  Code Attribute . tag )  ;      start Pos = output . get Pos (  )  ;      output . write Short ( code Index )  ;      // attribute_length, max Stack, max Locals, code_lenth     output . write Blank ( 12 )  ;  } catch Pos = -1 ;  catch Count = 0 ; }"
9508,"protected void on Measure Child ( final  View child, final  Layout Params layout Params ) { int child Width Spec =  View Group . get Child Measure Spec ( m Width Measure Spec, get List Padding Left (  )  + get List Padding Right (  ) , layout Params . width )  ;  int lp Height = layout Params . height ;  int child Height Spec ;  if  ( lp Height > 0 )  {     child Height Spec =  Measure Spec . make Measure Spec ( lp Height,  Measure Spec . EXACTLY )  ;  } else {     child Height Spec =  Measure Spec . make Measure Spec ( 0,  Measure Spec . UNSPECIFIED )  ;  } child . measure ( child Width Spec, child Height Spec )  ; }"
9509,"public boolean equals (  Object obj ) { if  ( this == obj )      return true ;  if  ( ! ( obj instanceof ID3v23 Frame )  )  {     return false ;  } ID3v23 Frame that =  ( ID3v23 Frame )  obj ;  return  Equals Util . are Equal ( this . status Flags, that . status Flags )  &&  Equals Util . are Equal ( this . encoding Flags, that . encoding Flags )  && super . equals ( that )  ; }"
9510,"public final N adjacent Node ( N node ) { if  ( node . equals ( node U )  )  {     return node V ;  } else if  ( node . equals ( node V )  )  {     return node U ;  } else {     throw new  Illegal Argument Exception ( "" Endpoint Pair "" + this + "" does not contain node "" + node )  ;  }}"
9511,"public static void set Factory2 (  Layout Inflater inflater,  Layout Inflater .  Factory2 factory ) { inflater . set Factory2 ( factory )  ;  if  (  Build . VERSION . SDK_INT < 21 )  {     final  Layout Inflater .  Factory f = inflater . get Factory (  )  ;      if  ( f instanceof  Layout Inflater .  Factory2 )  {         //  The merged factory is now set to get Factory (  ) , but not get Factory2 (  )   ( pre-v21 )  .          //  We will now try and force set the merged factory to m Factory2         force Set Factory2 ( inflater,  (  Layout Inflater .  Factory2 )  f )  ;      } else {         //  Else, we will force set the original wrapped  Factory2         force Set Factory2 ( inflater, factory )  ;      } }}"
9512,"protected  Array List< Integer> calculate Heights For Animation Parts ( int title View Height, int content View Height, int additional Flips Count ) {  Array List< Integer> part Heights = new  Array List<> (  )  ;  int additional Parts Total Height = content View Height - title View Height * 2 ;  if  ( additional Parts Total Height < 0 )      throw new  Illegal State Exception ( "" Content  View height is too small"" )  ;  // add two main parts - guarantee first flip part Heights . add ( title View Height )  ;  part Heights . add ( title View Height )  ;  // if no space left - return if  ( additional Parts Total Height == 0 )      return part Heights ;  // if some space remained - use two different logic if  ( additional Flips Count != 0 )  {     // 1 - additional parts count is specified and it is not 0 - divide remained space     int additional Part Height = additional Parts Total Height / additional Flips Count ;      int remaining Height = additional Parts Total Height % additional Flips Count ;      if  ( additional Part Height + remaining Height > title View Height )          throw new  Illegal State Exception ( "" Additional flips count is too small"" )  ;      for  ( int i = 0 ;  i < additional Flips Count ;  i++ )  part Heights . add ( additional Part Height +  ( i == 0 ? remaining Height : 0 )  )  ;  } else {     // 2 - additional parts count isn't specified or 0 - divide remained space to parts with title view size     int parts Count = additional Parts Total Height / title View Height ;      int rest Part Height = additional Parts Total Height % title View Height ;      for  ( int i = 0 ;  i < parts Count ;  i++ )  part Heights . add ( title View Height )  ;      if  ( rest Part Height > 0 )          part Heights . add ( rest Part Height )  ;  } return part Heights ; }"
9513,"public final void set Scale And Center ( float scale,  Point F s Center ) { this . anim = null ;  this . pending Scale = scale ;  this . s Pending Center = s Center ;  this . s Requested Center = s Center ;  invalidate (  )  ; }"
9514,"public static _ Fields find By Thrift Id Or Throw ( int field Id ) { _ Fields fields = find By Thrift Id ( field Id )  ;  if  ( fields == null )      throw new java . lang .  Illegal Argument Exception ( "" Field "" + field Id + "" doesn't exist!"" )  ;  return fields ; }"
9515,"public static  Command Result exec Cmd ( final  List< String> commands, final boolean is Rooted ) { return exec Cmd ( commands == null ? null : commands . to Array ( new  String [  ]  {} ) , is Rooted, true )  ; }"
9516,"protected  Ok Http Client get Http Client (  ) {  Ok Http Client .  Builder client Builder = new  Ok Http Client .  Builder (  )  ;  if  ( !is Null Or Empty ( username )  )  {     client Builder . add Interceptor ( new  Interceptor (  )  {         @ Override         public  Response intercept (  Chain chain )  throws IO Exception {              Request request = chain . request (  )  ;               Request new Request ;              new Request = request . new Builder (  )  . add Header ( "" Authorization"",  Credentials . basic ( username, password )  )  . build (  )  ;              return chain . proceed ( new Request )  ;          }     } )  ;  } if  ( user Agent != null )  {     client Builder . add Interceptor ( new  Interceptor (  )  {         @ Override         public  Response intercept (  Chain chain )  throws IO Exception {              Request request = chain . request (  )  ;               Request new Request ;              new Request = request . new Builder (  )  . add Header ( USER_AGENT, user Agent . to String (  )  )  . build (  )  ;              return chain . proceed ( new Request )  ;          }     } )  ;  } if  ( proxy != null )  {     client Builder . proxy ( proxy )  ;  } if  ( trust All Certs )  {     try {         //  Create a trust manager that does not validate certificate chains         final X509 Trust Manager [  ]  trust Managers = new X509 Trust Manager [  ]  { new X509 Trust Manager (  )  {             @ Override             public void check Client Trusted ( java . security . cert . X509 Certificate [  ]  chain,  String auth Type )  throws  Certificate Exception {             }             @ Override             public void check Server Trusted ( java . security . cert . X509 Certificate [  ]  chain,  String auth Type )  throws  Certificate Exception {             }             @ Override             public java . security . cert . X509 Certificate [  ]  get Accepted Issuers (  )  {                 return new java . security . cert . X509 Certificate [ 0 ]  ;              }         } } ;          //  Install the all-trusting trust manager         final SSL Context ssl Context = SSL Context . get Instance ( ""SSL"" )  ;          ssl Context . init ( null, trust Managers, new java . security .  Secure Random (  )  )  ;          //  Create an ssl socket factory with our all-trusting manager         final SSL Socket Factory ssl Socket Factory = ssl Context . get Socket Factory (  )  ;          // set ssl socket factory         client Builder . ssl Socket Factory ( ssl Socket Factory, trust Managers [ 0 ]  )  ;      } catch  (  Exception e )  {         log . error ( "" Error while bypassing certificate chains"", e )  ;      }     client Builder . hostname Verifier ( new  Hostname Verifier (  )  {         @ Override         public boolean verify (  String hostname, SSL Session session )  {             return true ;          }     } )  ;  } if  ( read Timeout != 0 )  {     client Builder . read Timeout ( read Timeout,  Time Unit . MILLISECONDS )  ;  } if  ( connect Timeout != 0 )  {     client Builder . connect Timeout ( connect Timeout,  Time Unit . MILLISECONDS )  ;  } return client Builder . build (  )  ; }"
9517,"public com . anychart . core . stock . indicators . KDJ j Series ( com . anychart . enums .  Stock Series Type type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . j Series ( %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
9518,"public  View build View ( @ Non Null  View Group parent ) { return  Layout Inflater . from ( parent . get Context (  )  )  . inflate ( get Layout (  ) , parent, false )  ; }"
9519,"public void keep Only Points (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . keep Only Points ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ; }"
9520,public  String get Strict Host Key Checking (  ) { return strict Host Key Checking ; }
9521,"public com . anychart . charts .  Scatter a11y (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . a11y ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9522,public int get Transition Resolution (  ) { return m Transition Resolution ; }
9523,"public static  Immutable Multiset<E> of ( E e1, E e2 ) { return copy From Elements ( e1, e2 )  ; }"
9524,"void test Get Product Desktop (  ) { var image Path = ""/product-image . png"" ;  var price = ""20"" ;  when ( image Client . get Image Path (  )  )  . then Return ( image Path )  ;  when ( price Client . get Price (  )  )  . then Return ( price )  ;  var desktop Product = api Gateway . get Product Desktop (  )  ;  assert Equals ( price, desktop Product . get Price (  )  )  ;  assert Equals ( image Path, desktop Product . get Image Path (  )  )  ; }"
9525,public  Values values (  ) { if  (  Collections . allocate Iterators )      return new  Values ( this )  ;  if  ( values1 == null )  {     values1 = new  Values ( this )  ;      values2 = new  Values ( this )  ;  } if  ( !values1 . valid )  {     values1 . reset (  )  ;      values1 . valid = true ;      values2 . valid = false ;      return values1 ;  } values2 . reset (  )  ;  values2 . valid = true ;  values1 . valid = false ;  return values2 ; }
9526,"public com . anychart . charts .  Circular Gauge id (  String id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . id ( %s )  ; "", wrap Quotes ( id )  )  )  ;  return this ; }"
9527,"public void test_6 (  ) {  Fast Json Config fast Json Config = new  Fast Json Config (  )  ;   Serializer Feature [  ]  serializer Features = new  Serializer Feature [  ]  {  Serializer Feature .  Write Class Name } ;  fast Json Config . set Serializer Features ( serializer Features )  ;   Parser Config parser Config =  Parser Config . get Global Instance (  )  ;  parser Config . set Auto Type Support ( true )  ;  fast Json Config . set Parser Config ( parser Config )  ;   Fast Json Redis Serializer fast Json Redis Serializer = new  Fast Json Redis Serializer (  Object . class )  ;   Assert . assert Not Null ( fast Json Redis Serializer . get Fast Json Config (  )  )  ;  fast Json Redis Serializer . set Fast Json Config ( fast Json Config )  ;   User user Ser = new  User ( 1, ""土豆"", 25 )  ;  byte [  ]  serialized Value = fast Json Redis Serializer . serialize ( user Ser )  ;   User user Des =  (  User )  fast Json Redis Serializer . deserialize ( serialized Value )  ;   Assert . assert Equals ( user Des . get Name (  ) , ""土豆"" )  ; }"
9528,"public void on Create (  Bundle saved Instance State ) { super . on Create ( saved Instance State )  ;  // I know, I know, this should go into strings . xml and accessed using // get String ( R . string .  .  .  .  )  m Menu Text = new  String [  ]  { "" Line chart"", "" Scatter chart"", "" Time chart"", "" Bar chart"" } ;  m Menu Summary = new  String [  ]  { "" Line chart with randomly generated values"", "" Scatter chart with randomly generated values"", "" Time chart with randomly generated values"", "" Bar chart with randomly generated values"" } ;  set List Adapter ( new  Simple Adapter ( this, get List Values (  ) , android . R . layout . simple_list_item_2, new  String [  ]  { I Demo Chart . NAME, I Demo Chart . DESC }, new int [  ]  { android . R . id . text1, android . R . id . text2 } )  )  ; }"
9529,"public com . anychart . core . stock . scrollerseries .  Stick stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
9530,"private  Header Symlink Tree create Exported Module Symlink Tree Build Rule (  Build Target build Target,  Project Filesystem project Filesystem,  Action Graph Builder graph Builder,  Cxx Platform cxx Platform,  Apple Native Target Description Arg args ) {  Path header Path Prefix =  Apple Descriptions . get Header Path Prefix ( args, build Target )  ;   Immutable Sorted Map .  Builder< Path,  Source Path> headers =  Immutable Sorted Map . natural Order (  )  ;  headers . put All (  Cxx Preprocessables . resolve Header Map (  Paths . get ( """" ) ,  Apple Descriptions . parse Apple Headers For Use From Other Targets ( build Target, graph Builder . get Source Path Resolver (  ) ::get Relative Path, header Path Prefix, args . get Exported Headers (  )  )  )  )  ;  if  ( target Contains Swift ( build Target, graph Builder )  )  {     headers . put All (  Apple Library Description Swift Enhancer . get Obj C Generated Header ( build Target, graph Builder, cxx Platform,  Header Visibility . PUBLIC )  )  ;  } return  Cxx Description Enhancer . create Header Symlink Tree ( build Target, project Filesystem, get Modular Header Mode ( args ) , headers . build (  ) ,  Header Visibility . PUBLIC )  ; }"
9531,"public com . anychart . core . grids .  Stock y Minor Grid (  Number index ) { return new com . anychart . core . grids .  Stock (  String . format (  Locale . US, js Base + "" . y Minor Grid ( %s ) "", index )  )  ; }"
9532,public boolean in Native Code (  ) { return in Native Code ; }
9533,public  String get Copyright (  ) { return copyright ; }
9534,"public void tick (  ) { if  ( m Started )  {     --m Ticks Left ;      m Time Left In Millis = m Ticks Left * m Millis Tick Duration ;      if  ( m Time Left In Millis < 6000 && !animation Started )  {         animation Started = true ;          m View Countdown . set Text Color (  Color . RED )  ;          m View Countdown . set Typeface (  Typeface . DEFAULT_BOLD )  ;          m View Countdown . clear Animation (  )  ;          m View Countdown . start Animation ( m Animation Timer Alpha )  ;      }     if  ( m Seconds Text Value != m Time Left In Millis / 1000 )  {         m View Countdown . set Text (  String . format ( ""%d:%02d"",  Time Unit . MILLISECONDS . to Minutes ( m Time Left In Millis ) ,  Time Unit . MILLISECONDS . to Seconds ( m Time Left In Millis )  )  )  ;          m Seconds Text Value = m Time Left In Millis / 1000 ;      }     if  ( m Time Left In Millis == 0 )  {         finished (  )  ;      } }}"
9535,"private void emit String Index (  Cst String string )  throws IO Exception{ if  (  ( string == null )  ||  ( file == null )  )  {     output . write Uleb128 ( 0 )  ;  } else {     output . write Uleb128 ( 1 + file . get String Ids (  )  . index Of ( string )  )  ;  } if  ( DEBUG )  {      System . err . printf ( "" Emit string %s\n"", string == null ? ""<null>"" : string . to Quoted (  )  )  ;  }}"
9536,"public void minimum (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . minimum (  )  ; "" )  ; }"
9537,private static boolean should Include Implicit Extension Scheme For Target Node (  Target Node<?> target Node ) { //  Bundle description required to determine product type for target node .  if  ( ! ( target Node . get Constructor Arg (  )  instanceof  Apple Bundle Description Arg )  )  {     return false ;  } //  Product type required to determine if product type matches .   Apple Bundle Description Arg bundle Arg =  (  Apple Bundle Description Arg )  target Node . get Constructor Arg (  )  ;  if  ( !bundle Arg . get Xcode Product Type (  )  . is Present (  )  )  {     return false ;  } //  Only create schemes for APP_EXTENSION .   Product Type product Type =  Product Type . of ( bundle Arg . get Xcode Product Type (  )  . get (  )  )  ;  return product Type . equals (  Product Types . APP_EXTENSION )  ; }
9538,"public void write32bit ( int offset, int value ) { write16bit ( offset, value >> 16 )  ;  write16bit ( offset + 2, value )  ; }"
9539,"public com . anychart . charts .  Stock margin (  Number value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
9540,"private  View fill Specific ( int position, int top ) { // ain't no body got time for that @  Etsy boolean temp Is Selected = false ;   View temp = make And Add View ( position, top, true, temp Is Selected )  ;  //  Possibly changed again in fill Up if we add rows above this one .  m First Position = position ;   View above ;   View below ;  int next Bottom = get Next Child Ups Bottom ( position - 1 )  ;  int next Top = get Next Child Downs Top ( position + 1 )  ;  above = fill Up ( position - 1, next Bottom )  ;  //  This will correct for the top of the first view not touching the top of the list adjust Views Up Or Down (  )  ;  below = fill Down ( position + 1, next Top )  ;  int child Count = get Child Count (  )  ;  if  ( child Count > 0 )  {     correct Too High ( child Count )  ;  } if  ( temp Is Selected )  {     return temp ;  } else if  ( above != null )  {     return above ;  } else {     return below ;  }}"
9541,"public com . anychart . charts .  Radar default Series Type (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . default Series Type ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
9542,"private void post Background Layout State Updated (  ) { if  ( is Main Thread (  )  )  {     //  We need to possibly update m Main Thread Layout State .   This call will     // cause the host view to be invalidated and re-laid out, if necessary .      background Layout State Updated (  )  ;  } else {     //  If we aren't on the main thread, we send a message to the main thread     // to invoke background Layout State Updated .       String tag = EMPTY_STRING ;      if  ( m Main Thread Handler . is Tracing (  )  )  {         tag = ""post Background Layout State Updated"" ;      }     m Main Thread Handler . post ( m Background Layout State Update Runnable, tag )  ;  }}"
9543,"public static void close (  Closeable closeable ) { if  ( closeable != null )  {     try {         closeable . close (  )  ;      } catch  ( IO Exception e )  {         throw new  Runtime Exception ( ""IO Exception occurred .  "", e )  ;      } }}"
9544,"protected void handle Leader Message (  Message message ) { leader Id =  Integer . value Of ( message . get Content (  )  )  ;  LOGGER . info ( INSTANCE + local Id + "" -  Leader update done . "" )  ; }"
9545,"private void validate Scope Hierarchy (  Validation Report .  Builder< Type Element> report,  Component Descriptor subject,  Set Multimap< Component Descriptor,  Scope> scopes By Component ) { scopes By Component . put All ( subject, subject . scopes (  )  )  ;  for  (  Component Descriptor child Component : subject . child Components (  )  )  {     validate Scope Hierarchy ( report, child Component, scopes By Component )  ;  } scopes By Component . remove All ( subject )  ;   Predicate< Scope> subject Scopes = subject . is Production (  )  ? // TODO ( beder ) : validate that @ Production Scope is only applied on production components and ( in ( subject . scopes (  )  ) , not (  Scope::is Production Scope )  )  : in ( subject . scopes (  )  )  ;   Set Multimap< Component Descriptor,  Scope> overlapping Scopes =  Multimaps . filter Values ( scopes By Component, subject Scopes )  ;  if  ( !overlapping Scopes . is Empty (  )  )  {      String Builder error = new  String Builder (  )  . append ( subject . type Element (  )  . get Qualified Name (  )  )  . append ( "" has conflicting scopes:"" )  ;      for  (  Map .  Entry< Component Descriptor,  Scope> entry : overlapping Scopes . entries (  )  )  {          Scope scope = entry . get Value (  )  ;          error . append ( ""\n  "" )  . append ( entry . get Key (  )  . type Element (  )  . get Qualified Name (  )  )  . append ( "" also has "" )  . append ( get Readable Source ( scope )  )  ;      }     report . add Item ( error . to String (  ) , compiler Options . scope Cycle Validation Type (  )  . diagnostic Kind (  )  . get (  ) , subject . type Element (  )  )  ;  }}"
9546,"public com . anychart . charts .  Pareto x Scroller (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scroller ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9547,public static  To String Helper to String Helper (  Class<?> clazz ) { return new  To String Helper ( clazz . get Simple Name (  )  )  ; }
9548,"public com . anychart . core . cartesian . series .  Range Bar stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
9549,"public com . anychart . core . stock . series .  Base series (  ) { return new com . anychart . core . stock . series .  Base ( js Base + "" . series (  ) "" )  ; }"
9550,protected final long get Current Index (  ) { return current Index ; }
9551,protected static boolean found Pattern Diagonal ( int [  ]  state Count ) { int total Module Size = 0 ;  for  ( int i = 0 ;  i < 5 ;  i++ )  {     int count = state Count [ i ]  ;      if  ( count == 0 )  {         return false ;      }     total Module Size += count ;  } if  ( total Module Size < 7 )  {     return false ;  } float module Size = total Module Size / 7 . 0f ;  float max Variance = module Size / 1 . 333f ;  //  Allow less than 75% variance from 1-1-3-1-1 proportions return  Math . abs ( module Size - state Count [ 0 ]  )  < max Variance &&  Math . abs ( module Size - state Count [ 1 ]  )  < max Variance &&  Math . abs ( 3 . 0f * module Size - state Count [ 2 ]  )  < 3 * max Variance &&  Math . abs ( module Size - state Count [ 3 ]  )  < max Variance &&  Math . abs ( module Size - state Count [ 4 ]  )  < max Variance ; }
9552,public int get Position (  ) { return position ; }
9553,public void set Scroll View Callbacks (  Observable Scroll View Callbacks listener ) { m Callbacks = listener ; }
9554,public final boolean is Caching Enabled (  ) { return caching Is Enabled ; }
9555,"public static T [  ]  reallocate Buffer (  Class<T> klass, T [  ]  old Buffer, int old Capacity, int new Capacity ) { assert  ( new Capacity > old Capacity )  ;  @ Suppress Warnings ( ""unchecked"" )  T [  ]  new Buffer =  ( T [  ]  )   Array Reflection . new Instance ( klass, new Capacity )  ;  if  ( old Buffer != null )  {      System . arraycopy ( old Buffer, 0, new Buffer, 0, old Capacity )  ;  } for  ( int i = old Capacity ;  i < new Capacity ;  i++ )  {     try {         new Buffer [ i ]  =  Class Reflection . new Instance ( klass )  ;      } catch  (  Exception e )  {         throw new  Runtime Exception ( e )  ;      } } return new Buffer ; }"
9556,"public static void set Identity M ( double [  ]  sm, int sm Offset ) { for  ( int i = 0 ;  i < 16 ;  i++ )  {     sm [ sm Offset + i ]  = 0 ;  } for  ( int i = 0 ;  i < 16 ;  i += 5 )  {     sm [ sm Offset + i ]  = 1 . 0f ;  }}"
9557,"public static  Ssa Basic Block new From Rop (  Rop Method rmeth, int basic Block Index, final  Ssa Method parent ) {  Basic Block List rop Blocks = rmeth . get Blocks (  )  ;   Basic Block bb = rop Blocks . get ( basic Block Index )  ;   Ssa Basic Block result = new  Ssa Basic Block ( basic Block Index, bb . get Label (  ) , parent )  ;   Insn List rop Insns = bb . get Insns (  )  ;  result . insns . ensure Capacity ( rop Insns . size (  )  )  ;  for  ( int i = 0, sz = rop Insns . size (  )  ;  i < sz ;  i++ )  {     result . insns . add ( new  Normal Ssa Insn ( rop Insns . get ( i ) , result )  )  ;  } result . predecessors =  Ssa Method . bit Set From Label List ( rop Blocks, rmeth . label To Predecessors ( bb . get Label (  )  )  )  ;  result . successors =  Ssa Method . bit Set From Label List ( rop Blocks, bb . get Successors (  )  )  ;  result . successor List =  Ssa Method . index List From Label List ( rop Blocks, bb . get Successors (  )  )  ;  if  ( result . successor List . size (  )  != 0 )  {     int primary Successor = bb . get Primary Successor (  )  ;      result . primary Successor =  ( primary Successor < 0 )  ? -1 : rop Blocks . index Of Label ( primary Successor )  ;  } return result ; }"
9558,"public com . anychart . core . gauge .  Cap fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
9559,"public  Token Request create Token Exchange Request ( @ Non Null  Map< String,  String> additional Exchange Parameters ) { check Not Null ( additional Exchange Parameters, ""additional Exchange Parameters cannot be null"" )  ;  if  ( authorization Code == null )  {     throw new  Illegal State Exception ( ""authorization Code not available for exchange request"" )  ;  } return new  Token Request .  Builder ( request . configuration, request . client Id )  . set Grant Type (  Grant Type Values . AUTHORIZATION_CODE )  . set Redirect Uri ( request . redirect Uri )  . set Code Verifier ( request . code Verifier )  . set Authorization Code ( authorization Code )  . set Additional Parameters ( additional Exchange Parameters )  . set Nonce ( request . nonce )  . build (  )  ; }"
9560,"public  Eval Error to Eval Error (  String msg,  Simple Node node,  Call Stack callstack ) { if  ( msg == null )      msg = get Message (  )  ;  else     msg = msg + "": "" + get Message (  )  ;  return new  Target Error ( msg, t, node, callstack, false )  ; }"
9561,"public com . anychart . core . annotations .  Trend Channel bounds (  String x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
9562,public void create Parent Dirs (  String path Relative To Project Root )  throws IO Exception{  Path file = get Path For Relative Path ( path Relative To Project Root )  ;  mkdirs ( file . get Parent (  )  )  ; }
9563,public int get Crc32 (  ) { return crc32 ; }
9564,"public com . anychart . core . cartesian . series .  Continuous Range Base top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
9565,"public com . anychart . core . cartesian . series .  Range Bar unhover (  Number index Or Indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unhover ( %s )  ; "", index Or Indexes )  )  ;  return this ; }"
9566,"private static void notify Developer Error (  String message ) {  Logger . log (  Logging Behavior . DEVELOPER_ERRORS, "" App Events"", message )  ; }"
9567,"public  String to String (  ) { if  ( type == NUM )  {     return ""NUM: "" + value ;  } else if  ( type == CMD )  {     return ""CMD: "" + name ;  } else if  ( type == UNK )  {     return ""UNK"" ;  } else if  ( type == EOF )  {     return ""EOF"" ;  } else if  ( type == NAME )  {     return ""NAME: "" + name ;  } else if  ( type == CMD )  {     return ""CMD: "" + name ;  } else if  ( type == STR )  {     return ""STR:  ( "" + name ;  } else if  ( type == ARYB )  {     return ""ARY  [ "" ;  } else if  ( type == ARYE )  {     return ""ARY  ] "" ;  } else {     return ""some kind of brace  ( "" + type + "" ) "" ;  }}"
9568,"public com . anychart . core . polar . series .  Continuous Base top (  Number top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", top )  )  ;  return this ; }"
9569,"public static void set Fingerprint (  String fingerprint ) {  Reflection Helpers . set Static Field (  Build . class, ""FINGERPRINT"", fingerprint )  ; }"
9570,"Path get Path To Trove4j Jar (  ) { return get Path To Jar ( ""trove4j"" )  ; }"
9571,"public boolean is Valid (  String value ) { if  ( value == null )  {     return false ;  } //  Check the whole url address structure  Matcher url Matcher = URL_PATTERN . matcher ( value )  ;  if  ( !url Matcher . matches (  )  )  {     return false ;  }  String scheme = url Matcher . group ( PARSE_URL_SCHEME )  ;  if  ( !is Valid Scheme ( scheme )  )  {     return false ;  }  String authority = url Matcher . group ( PARSE_URL_AUTHORITY )  ;  if  ( ""file"" . equals ( scheme )  && """" . equals ( authority )  )  { //  Special case - file: allows an empty authority } else {     //  Validate the authority     if  ( !is Valid Authority ( authority )  )  {         return false ;      } } if  ( !is Valid Path ( url Matcher . group ( PARSE_URL_PATH )  )  )  {     return false ;  } if  ( !is Valid Query ( url Matcher . group ( PARSE_URL_QUERY )  )  )  {     return false ;  } if  ( !is Valid Fragment ( url Matcher . group ( PARSE_URL_FRAGMENT )  )  )  {     return false ;  } return true ; }"
9572,public byte [  ]  get Raw Bytes (  ) { return raw Bytes ; }
9573,public  Builder set Creator Info ( com . facebook . buck . remoteexecution . proto .  Creator Info .  Builder builder For Value ) { if  ( creator Info Builder_ == null )  {     creator Info_ = builder For Value . build (  )  ;      on Changed (  )  ;  } else {     creator Info Builder_ . set Message ( builder For Value . build (  )  )  ;  } return this ; }
9574,public static  String format (  Date value ) { return STANDARD_DATE_FORMAT . get (  )  . format ( value )  ; }
9575,"static  Correspondence<T, T> equality (  ) { return  (  Equality<T> )   Equality . INSTANCE ; }"
9576,"public static  Immutable Type To Instance Map<B> of (  ) { return new  Immutable Type To Instance Map<B> (  Immutable Map . < Type Token<? extends B>, B>of (  )  )  ; }"
9577,public  Activity Controller<T> setup ( @ Nullable  Bundle saved Instance State ) { return create ( saved Instance State )  . start (  )  . restore Instance State ( saved Instance State )  . post Create ( saved Instance State )  . resume (  )  . visible (  )  ; }
9578,"public com . anychart . scales .  Ordinal Ticks set (  String [  ]  ticks ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set ( %s )  ; "", array To String Wrap Quotes ( ticks )  )  )  ;  return this ; }"
9579,"public void execute Even After Shutdown (  Runnable command ) { try {     internal Executor . execute ( command )  ;  } catch  (  Rejected Execution Exception e )  {     //  The only way we can get here is if the  Async Queue has panicked and we're now racing with     // the post to the main looper that will crash the app .       Logger . warn (  Async Queue . class . get Simple Name (  ) , "" Refused to enqueue task after panic"" )  ;  }}"
9580,"public com . anychart . core .  Separate Chart label (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s )  ; "", settings )  )  ;  return this ; }"
9581,public static boolean is Support Navigation Icon Dark (  ) { return OS Utils . is MIUI6 Later (  )  ||  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . O ; }
9582,private void remove All Nodes ( @ Nullable  Object key ) {  Iterators . clear ( new  Value For Key Iterator ( key )  )  ; }
9583,"public com . anychart . charts .  Pareto max Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
9584,"private void offset If Needed (  Coordinator Layout parent,  Floating Action Button fab ) {  Rect padding = new  Rect ( 0, 0, 0, 0 )  ;  try {      Field m Shadow Padding =  Floating Action Button . class . get Declared Field ( ""m Shadow Padding"" )  ;      m Shadow Padding . set Accessible ( true )  ;      padding =  (  Rect )  m Shadow Padding . get ( fab )  ;  } catch  (  No Such Field Exception e )  {     e . print Stack Trace (  )  ;  } catch  (  Illegal Access Exception e )  {     e . print Stack Trace (  )  ;  } if  ( padding != null && padding . center X (  )  > 0 && padding . center Y (  )  > 0 )  {     final  Coordinator Layout .  Layout Params lp =  (  Coordinator Layout .  Layout Params )  fab . get Layout Params (  )  ;      int offset TB = 0, offset LR = 0 ;      if  ( fab . get Right (  )  >= parent . get Width (  )  - lp . right Margin )  {         //  If we're on the right edge, shift it the right         offset LR = padding . right ;      } else if  ( fab . get Left (  )  <= lp . left Margin )  {         //  If we're on the left edge, shift it the left         offset LR = -padding . left ;      }     if  ( fab . get Bottom (  )  >= parent . get Height (  )  - lp . bottom Margin )  {         //  If we're on the bottom edge, shift it down         offset TB = padding . bottom ;      } else if  ( fab . get Top (  )  <= lp . top Margin )  {         //  If we're on the top edge, shift it up         offset TB = -padding . top ;      }     if  ( offset TB != 0 )  {          View Compat . offset Top And Bottom ( fab, offset TB )  ;      }     if  ( offset LR != 0 )  {          View Compat . offset Left And Right ( fab, offset LR )  ;      } }}"
9585,public boolean is Drawer Open ( @ Edge Gravity int drawer Gravity ) { final  View drawer View = find Drawer With Gravity ( drawer Gravity )  ;  if  ( drawer View != null )  {     return is Drawer Open ( drawer View )  ;  } return false ; }
9586,"public int last Index Of ( double target ) { for  ( int i = end - 1 ;  i >= start ;  i-- )  {     if  ( are Equal ( array [ i ] , target )  )  {         return i - start ;      } } return -1 ; }"
9587,"public  String scroll To Position At Progress ( float touch Fraction ) { int item Count = get Adapter (  )  . get Item Count (  )  ;  if  ( item Count == 0 )  {     return """" ;  } int span Count = 1 ;  int row Count = item Count ;  if  ( get Layout Manager (  )  instanceof  Grid Layout Manager )  {     span Count =  (  (  Grid Layout Manager )  get Layout Manager (  )  )  . get Span Count (  )  ;      row Count =  ( int )   Math . ceil (  ( double )  row Count / span Count )  ;  } //  Stop the scroller if it is scrolling stop Scroll (  )  ;  get Cur Scroll State ( m Scroll Pos State )  ;  float item Pos = item Count * touch Fraction ;  int available Scroll Height = get Available Scroll Height ( row Count, m Scroll Pos State . row Height, 0 )  ;  // The exact position of our desired item int exact Item Pos =  ( int )   ( available Scroll Height * touch Fraction )  ;  // Scroll to the desired item .   The offset used here is kind of hard to explain .  // If the position we wish to scroll to is, say, position 10 . 5, we scroll to position 10, //and then offset by 0 . 5 * row Height .   This is how we achieve smooth scrolling .   Linear Layout Manager layout Manager =  (  (  Linear Layout Manager )  get Layout Manager (  )  )  ;  layout Manager . scroll To Position With Offset ( span Count * exact Item Pos / m Scroll Pos State . row Height, - ( exact Item Pos % m Scroll Pos State . row Height )  )  ;  if  ( ! ( get Adapter (  )  instanceof  Sectioned Adapter )  )  {     return """" ;  } int pos Int =  ( int )   (  ( touch Fraction == 1 )  ? item Pos - 1 : item Pos )  ;   Sectioned Adapter sectioned Adapter =  (  Sectioned Adapter )  get Adapter (  )  ;  return sectioned Adapter . get Section Name ( pos Int )  ; }"
9588,"public  Single< Rx Inserter< Item2>> prepare Insert Into Item2 As Single ( @ On Conflict final int on Conflict Algorithm, final boolean without Auto Id ) { return  Single . from Callable ( new  Callable< Rx Inserter< Item2>> (  )  {     @ Override     public  Rx Inserter< Item2> call (  )  throws  Exception {         return new  Rx Inserter< Item2> ( connection,  Item2_ Schema . INSTANCE, on Conflict Algorithm, without Auto Id )  ;      } } )  ; }"
9589,"public void color (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . color (  )  ; "" )  ; }"
9590,"public com . anychart . core . annotations .  Triangle x Scale ( com . anychart . scales .  Base settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
9591,"public void select Marquee Stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . select Marquee Stroke (  )  ; "" )  ; }"
9592,private void add (  Edit Item item ) { mm History . set Size ( mm Position )  ;  mm History . add ( item )  ;  mm Position++ ; }
9593,"public void rect Line ( float x1, float y1, float x2, float y2, float width,  Color c1,  Color c2 ) { check (  Shape Type .  Line,  Shape Type .  Filled, 8 )  ;  float col1 Bits = c1 . to Float Bits (  )  ;  float col2 Bits = c2 . to Float Bits (  )  ;   Vector2 t = tmp . set ( y2 - y1, x1 - x2 )  . nor (  )  ;  width *= 0 . 5f ;  float tx = t . x * width ;  float ty = t . y * width ;  if  ( shape Type ==  Shape Type .  Line )  {     renderer . color ( col1 Bits )  ;      renderer . vertex ( x1 + tx, y1 + ty, 0 )  ;      renderer . color ( col1 Bits )  ;      renderer . vertex ( x1 - tx, y1 - ty, 0 )  ;      renderer . color ( col2 Bits )  ;      renderer . vertex ( x2 + tx, y2 + ty, 0 )  ;      renderer . color ( col2 Bits )  ;      renderer . vertex ( x2 - tx, y2 - ty, 0 )  ;      renderer . color ( col2 Bits )  ;      renderer . vertex ( x2 + tx, y2 + ty, 0 )  ;      renderer . color ( col1 Bits )  ;      renderer . vertex ( x1 + tx, y1 + ty, 0 )  ;      renderer . color ( col2 Bits )  ;      renderer . vertex ( x2 - tx, y2 - ty, 0 )  ;      renderer . color ( col1 Bits )  ;      renderer . vertex ( x1 - tx, y1 - ty, 0 )  ;  } else {     renderer . color ( col1 Bits )  ;      renderer . vertex ( x1 + tx, y1 + ty, 0 )  ;      renderer . color ( col1 Bits )  ;      renderer . vertex ( x1 - tx, y1 - ty, 0 )  ;      renderer . color ( col2 Bits )  ;      renderer . vertex ( x2 + tx, y2 + ty, 0 )  ;      renderer . color ( col2 Bits )  ;      renderer . vertex ( x2 - tx, y2 - ty, 0 )  ;      renderer . color ( col2 Bits )  ;      renderer . vertex ( x2 + tx, y2 + ty, 0 )  ;      renderer . color ( col1 Bits )  ;      renderer . vertex ( x1 - tx, y1 - ty, 0 )  ;  }}"
9594,"public void disable Stroke Scaling (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . disable Stroke Scaling (  )  ; "" )  ; }"
9595,"public com . anychart . core .  Visual Base z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
9596,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
9597,"private boolean exec IP (  Inet Address inet Address,  String ip ) { boolean is Connected = true ;   String Builder log = new  String Builder (  )  ;   Inet Socket Address socket Address = null ;  if  ( inet Address != null && ip != null )  {     socket Address = new  Inet Socket Address ( inet Address, PORT )  ;      int flag = 0 ;      this . listener .  On Net Socket Updated ( "" Connect to host: "" + ip + "" .  .  . "" + ""\n"" )  ;      for  ( int i = 0 ;  i < CONN_TIMES ;  i++ )  {         exec Socket ( socket Address, time Out, i )  ;          if  (  Rtt Times [ i ]  == -1 )  {             // 一旦发生time Out,则尝试加长连接时间             this . listener .  On Net Socket Updated (  ( i + 1 )  + ""'s time="" + "" Time Out"" + "",  "" )  ;              time Out += 4000 ;              if  ( i > 0 &&  Rtt Times [ i - 1 ]  == -1 )  {                 // 连续两次连接超时,停止后续测试                 flag = -1 ;                  break ;              }         } else if  (  Rtt Times [ i ]  == -2 )  {             this . listener .  On Net Socket Updated (  ( i + 1 )  + ""'s time="" + ""IO Exception"" )  ;              if  ( i > 0 &&  Rtt Times [ i - 1 ]  == -2 )  {                 // 连续两次出现IO异常,停止后续测试                 flag = -2 ;                  break ;              }         } else {             this . listener .  On Net Socket Updated (  ( i + 1 )  + ""'s time="" +  Rtt Times [ i ]  + ""ms,  "" )  ;          }     }     long time = 0 ;      int count = 0 ;      if  ( flag == -1 )  {         // log . append ( TIMEOUT )  ;          is Connected = false ;      } else if  ( flag == -2 )  {         // log . append ( IOERR )  ;          is Connected = false ;      } else {         for  ( int i = 0 ;  i < CONN_TIMES ;  i++ )  {             if  (  Rtt Times [ i ]  > 0 )  {                 time +=  Rtt Times [ i ]  ;                  count++ ;              }         }         if  ( count > 0 )  {             time = time / count ;              log . append ( ""average="" + time + ""ms"" )  ;          }     } } else {     is Connected = false ;  } this . listener .  On Net Socket Updated ( log . to String (  )  )  ;  return is Connected ; }"
9598,"public com . anychart . charts .  Cartesian3d bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
9599,"private synchronized  Producer< Closeable Reference< Closeable Image>> get Data Fetch Sequence (  ) { if  ( m Data Fetch Sequence == null )  {      Producer< Encoded Image> input Producer = m Producer Factory . new Data Fetch Producer (  )  ;      if  (  Webp Support Status . s Is Webp Support Required &&  ( !m Webp Support Enabled ||  Webp Support Status . s Webp Bitmap Factory == null )  )  {         input Producer = m Producer Factory . new Webp Transcode Producer ( input Producer )  ;      }     input Producer = m Producer Factory . new Add Image Transform Meta Data Producer ( input Producer )  ;      input Producer = m Producer Factory . new Resize And Rotate Producer ( input Producer, true, m Image Transcoder Factory )  ;      m Data Fetch Sequence = new Bitmap Cache Get To Decode Sequence ( input Producer )  ;  } return m Data Fetch Sequence ; }"
9600,"public static  File query File (  String type,  String key, boolean folder, boolean remote )  throws  File Cache Exception{ if  ( !BUILD_CACHE_ENABLED )  {     return null ;  }  File local Cache File = local Cache . get Local Cache File ( type, key )  ;  if  ( local Cache File . exists (  )  )  {     if  ( folder != local Cache File . is Directory (  )  )  {         try {              File Utils . force Delete ( local Cache File )  ;          } catch  ( IO Exception e )  {             e . print Stack Trace (  )  ;          }         throw new  File Cache Exception ( ""local dir is folder "" + folder )  ;      }     logger . log ( type + "" . "" + key + "" query local cache  "" + local Cache File . get Absolute Path (  )  + "" success"" )  ;      return local Cache File ;  } else {     logger . log ( type + "" . "" + key + "" miss local cache  "" + local Cache File . get Absolute Path (  )  )  ;  } if  ( null == network Cache || !remote )  {     return local Cache File ;  } try {     boolean success = network Cache . fetch File ( type, key, local Cache File, folder )  ;      logger . log ( type + "" . "" + key + "" fetch remote cache  "" + local Cache File . get Absolute Path (  )  + success )  ;      if  ( success )  {         return local Cache File ;      } } catch  (  Throwable e )  {     logger . log ( type + "" . "" + key + "" fetch remote cache  "" + local Cache File . get Absolute Path (  )  + "" exception"" )  ;      e . print Stack Trace (  )  ;  } logger . log ( type + "" . "" + key + "" get cache file failed  "" + local Cache File . get Absolute Path (  )  )  ;  try {      File Utils . force Delete ( local Cache File )  ;  } catch  ( IO Exception e )  {     e . print Stack Trace (  )  ;  } return local Cache File ; }"
9601,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
9602,"public static void override (  String key,  String val ) {  System Properties . set ( key, val )  ; }"
9603,public boolean offer Last ( E e ) { add Last ( e )  ;  return true ; }
9604,public int get Data Set Index (  ) { return m Data Set Index ; }
9605,"public  Builder set Shuffle Mode Enabled ( boolean shuffle Mode Enabled ) { return apply ( new  Set Shuffle Mode Enabled ( tag, shuffle Mode Enabled )  )  ; }"
9606,"public static  Vector3 lerp And Create ( @ Non Null  Vector3 from, @ Non Null  Vector3 to, double amount ) {  Vector3 out = new  Vector3 (  )  ;  out . x = from . x +  ( to . x - from . x )  * amount ;  out . y = from . y +  ( to . y - from . y )  * amount ;  out . z = from . z +  ( to . z - from . z )  * amount ;  return out ; }"
9607,public int last Length (  ) { return last Length ; }
9608,"public static boolean has Dagger Abstract Method Annotation (  Executable Element method ) { return has Annotation ( method,  Class Names . BINDS )  || has Annotation ( method,  Class Names . BINDS_OPTIONAL_OF )  || has Annotation ( method,  Class Names . MULTIBINDS )  || has Annotation ( method,  Class Names . CONTRIBUTES_ANDROID_INJECTOR )  ; }"
9609,public boolean are Headers Shown (  ) { return headers Shown ; }
9610,"protected int set Stream (  Input Stream bitmap Data,  Rect visible Crop Hint, boolean allow Backup, int which ) { if  ( which ==  Wallpaper Manager . FLAG_LOCK )  {     lock Screen Image =  Bitmap Factory . decode Stream ( bitmap Data )  ;      return 1 ;  } else if  ( which ==  Wallpaper Manager . FLAG_SYSTEM )  {     home Screen Image =  Bitmap Factory . decode Stream ( bitmap Data )  ;      return 1 ;  } return 0 ; }"
9611,"private void process Phi Use (  Ssa Insn use,  Escape Set esc Set,  Array List< Register Spec> reg Worklist ) { int set Index = find Set Index ( use . get Result (  )  )  ;  if  ( set Index != lattice Values . size (  )  )  {     //  Check if result is in a set already      Escape Set merge Set = lattice Values . get ( set Index )  ;      if  ( merge Set != esc Set )  {         //  If it is, merge the sets and states, then delete the copy         esc Set . replaceable Array = false ;          esc Set . reg Set . or ( merge Set . reg Set )  ;          if  ( esc Set . escape . compare To ( merge Set . escape )  < 0 )  {             esc Set . escape = merge Set . escape ;          }         replace Node ( esc Set, merge Set )  ;          lattice Values . remove ( set Index )  ;      } } else {     //  If no set is found, add it to this esc Set and the worklist     esc Set . reg Set . set ( use . get Result (  )  . get Reg (  )  )  ;      reg Worklist . add ( use . get Result (  )  )  ;  }}"
9612,"public com . anychart . charts .  Waterfall x Grid (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Grid ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9613,"static  Access Path from Var Decl (  Variable Declaration Node node ) {  Element elem =  Tree Utils . element From Declaration ( node . get Tree (  )  )  ;  return new  Access Path ( new  Root ( elem ) ,  Immutable List . of (  )  )  ; }"
9614,"public  Object Id insert ( int type, byte [  ]  data )  throws IO Exception{ return insert ( type, data, 0, data . length )  ; }"
9615,public  Describe Command set Always ( boolean always ) { this . always = always ;  return this ; }
9616,"public void split Atlas (  Texture Atlas Data atlas,  String output Dir ) { // create the output directory if it did not exist yet  File output Dir File = new  File ( output Dir )  ;  if  ( !output Dir File . exists (  )  )  {     output Dir File . mkdirs (  )  ;      if  ( !quiet )           System . out . println (  String . format ( "" Creating directory: %s"", output Dir File . get Path (  )  )  )  ;  } for  (  Page page : atlas . get Pages (  )  )  {     // load the image file belonging to this page as a  Buffered  Image      File file = page . texture File . file (  )  ;      if  ( !file . exists (  )  )          throw new  Runtime Exception ( "" Unable to find atlas image: "" + file . get Absolute Path (  )  )  ;       Buffered Image img = null ;      try {         img =  Image IO . read ( file )  ;      } catch  ( IO Exception e )  {         print Exception And Exit ( e )  ;      }     for  (  Region region : atlas . get Regions (  )  )  {         if  ( !quiet )               System . out . println (  String . format ( "" Processing image for %s: x [ %s ]  y [ %s ]  w [ %s ]  h [ %s ] , rotate [ %s ] "", region . name, region . left, region . top, region . width, region . height, region . rotate )  )  ;          // check if the page this region is in is currently loaded in a  Buffered  Image         if  ( region . page == page )  {              Buffered Image split Image = null ;               String extension = null ;              // check if the region is a ninepatch or a normal image and delegate accordingly             if  ( region . find Value ( ""split"" )  == null )  {                 split Image = extract Image ( img, region, output Dir File, 0 )  ;                  if  ( region . width != region . original Width || region . height != region . original Height )  {                      Buffered Image original Img = new  Buffered Image ( region . original Width, region . original Height, img . get Type (  )  )  ;                       Graphics2 D g2 = original Img . create Graphics (  )  ;                      g2 . draw Image ( split Image,  ( int )  region . offset X,  ( int )   ( region . original Height - region . height - region . offset Y ) , null )  ;                      g2 . dispose (  )  ;                      split Image = original Img ;                  }                 extension = OUTPUT_TYPE ;              } else {                 split Image = extract Nine Patch ( img, region, output Dir File )  ;                  extension =  String . format ( ""9 . %s"", OUTPUT_TYPE )  ;              }             // check if the parent directories of this image file exist and create them if not              File img Output = new  File ( output Dir File,  String . format ( ""%s . %s"", region . index == -1 ? region . name : region . name + ""_"" + region . index, extension )  )  ;               File img Dir = img Output . get Parent File (  )  ;              if  ( !img Dir . exists (  )  )  {                 if  ( !quiet )                       System . out . println (  String . format ( "" Creating directory: %s"", img Dir . get Path (  )  )  )  ;                  img Dir . mkdirs (  )  ;              }             // save the image             try {                  Image IO . write ( split Image, OUTPUT_TYPE, img Output )  ;              } catch  (  Exception e )  {                 print Exception And Exit ( e )  ;              }         }     } }}"
9617,public  Array List< Double> get Altitudes (  ) { return m Altitudes ; }
9618,public  Rounding Method get Rounding Method (  ) { return m Rounding Method ; }
9619,"public com . anychart . core . cartesian . series .  Column3d color Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9620,public T get Annotation (  Class<T> annotation Type ) { for  (  Annotation annotation : this . annotations )  {     if  ( annotation . annotation Type (  )  . equals ( annotation Type )  )  {         return  ( T )  annotation ;      } } for  (  Annotation meta Ann : this . annotations )  {     T ann = meta Ann . annotation Type (  )  . get Annotation ( annotation Type )  ;      if  ( ann != null )  {         return ann ;      } } return null ; }
9621,public  Search count (  Integer count ) { m Count = count ;  return this ; }
9622,private void setup Indicator (  ) { if  ( m Indicator Size != 0 )  {     set Indicator Background Size (  )  ;  } m Indicator Container . set Visibility ( m Show Indicator && m Indicator Size != 0 ? VISIBLE : GONE )  ; }
9623,public static int dp To Px ( int dp Value ) { return  ( int )   ( dp Value * DENSITY + 0 . 5f )  ; }
9624,"public com . anychart . core . annotations .  Trend Channel stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
9625,public void remove (  ) { throw new  Unsupported Operation Exception (  )  ; }
9626,"void refresh Token Without Cache ( final  String refresh Token, final  Authentication Request authentication Request, final  Authentication Callback< Authentication Result> external Callback ) { final  String method Name = "":refresh Token Without Cache"" ;   Logger . set Correlation Id ( authentication Request . get Correlation Id (  )  )  ;   Logger . v ( TAG + method Name, "" Refresh token without cache"" )  ;  final  Callback Handler callback Handle = new  Callback Handler ( get Handler (  ) , external Callback )  ;  //  Execute all the calls inside  Runnable to return immediately .   All UI // related actions will be performed using  Handler .  THREAD_EXECUTOR . execute ( new  Runnable (  )  {     @ Override     public void run (  )  {         try {             // validate acquire token call first .              validate Acquire Token Request ( authentication Request )  ;              final  Acquire Token Silent Handler acquire Token Silent Handler = new  Acquire Token Silent Handler ( m Context, authentication Request, m Token Cache Accessor )  ;              final  Authentication Result result = acquire Token Silent Handler . acquire Token With Refresh Token ( refresh Token )  ;              final  String correlation Id =  String . format ( ""  Correlation Id: %s"", authentication Request . get Correlation Id (  )  . to String (  )  )  ;              if  ( result == null )  {                  Logger . e ( TAG + method Name, "" Returned result with exchanging refresh token for access token is null"" + correlation Id, """", ADAL Error . AUTH_REFRESH_FAILED )  ;                  throw new  Authentication Exception ( ADAL Error . AUTH_REFRESH_FAILED, "" No result received from refresh token request . "" )  ;              }             if  ( ! String Extensions . is Null Or Blank ( result . get Error Code (  )  )  )  {                  Logger . e ( TAG + method Name, ""  Error Code:"" + result . get Error Code (  ) , ""  Error Description:"" + result . get Error Description (  ) , ADAL Error . AUTH_REFRESH_FAILED )  ;                  throw new  Authentication Exception ( ADAL Error . AUTH_REFRESH_FAILED, ""  Error Code:"" + result . get Error Code (  )  )  ;              }             if  (  String Extensions . is Null Or Blank ( result . get Access Token (  )  )  )  {                  Logger . e ( TAG + method Name, "" Access  Token not returned from server"", """", ADAL Error . AUTH_FAILED_NO_TOKEN )  ;                  throw new  Authentication Exception ( ADAL Error . AUTH_FAILED_NO_TOKEN, ""  Access  Token not returned from server "" )  ;              }             final  String raw Id Token = result . get Id Token (  )  ;              // on the  Authentication Request .              if  ( ! Text Utils . is Empty ( raw Id Token )  && ! Text Utils . is Empty ( authentication Request . get Resource (  )  )  )  {                 final  Id Token id Token Record = new  Id Token ( raw Id Token )  ;                  final  User Info user Info = new  User Info ( id Token Record )  ;                   Token Cache Item token Cache Item = new  Token Cache Item (  )  ;                  token Cache Item . set Raw Id Token ( raw Id Token )  ;                  token Cache Item . set User Info ( user Info )  ;                  token Cache Item . set Tenant Id ( id Token Record . get Tenant Id (  )  )  ;                  //  This method is used in ADAL to store tokens in cache during a silent aka                 // refresh token request .   We are going to be using the same method for this                 // API as well for consistency .                  //                 //  To get this to work, we created a  Token Cache Item object above and                 // populate it with an ID  Token and  User Info object as in this API ADAL does                 // not do a cache look up and does not have the ID  Token in cache already .                  //  We got an ID  Token from e STS and will be using that ID  Token to create                 // a  User Info object and seed it into the cache along with the other tokens .                  //  This allows us to achieve SSO for this API .                  m Token Cache Accessor . update Cached Item With Result ( authentication Request, result, token Cache Item )  ;              }             m API Event . set Was Api Call Successful ( true, null )  ;              m API Event . set Id Token ( result . get Id Token (  )  )  ;              callback Handle . on Success ( result )  ;          } catch  ( final  Authentication Exception authentication Exception )  {             m API Event . set Was Api Call Successful ( false, authentication Exception )  ;              callback Handle . on Error ( authentication Exception )  ;          } finally {             m API Event . set Correlation Id ( authentication Request . get Correlation Id (  )  . to String (  )  )  ;              m API Event . stop Telemetry And Flush (  )  ;          }     } } )  ; }"
9627,"public  Buffer Size Adaptation Builder set Buffer Durations Ms ( int min Buffer Ms, int max Buffer Ms, int buffer For Playback Ms, int buffer For Playback After Rebuffer Ms ) {  Assertions . check State ( !build Called )  ;  this . min Buffer Ms = min Buffer Ms ;  this . max Buffer Ms = max Buffer Ms ;  this . buffer For Playback Ms = buffer For Playback Ms ;  this . buffer For Playback After Rebuffer Ms = buffer For Playback After Rebuffer Ms ;  return this ; }"
9628,"private DRS Metadata request Cloud ( final  String domain )  throws  Authentication Exception{  Logger . v ( TAG, "" Requesting DRS discovery  ( cloud ) "" )  ;  try {     return request Drs Discovery Internal ( CLOUD, domain )  ;  } catch  (  Unknown Host Exception e )  {     throw new  Authentication Exception ( ADAL Error . DRS_DISCOVERY_FAILED_UNKNOWN_HOST )  ;  }}"
9629,public static  Set< Feature<?>> implied Features (  Set< Feature<?>> features ) {  Set< Feature<?>> implied Set = new  Linked Hash Set<> (  )  ;   Queue< Feature<?>> queue = new  Array Deque<> ( features )  ;  while  ( !queue . is Empty (  )  )  {      Feature<?> feature = queue . remove (  )  ;      for  (  Feature<?> implied : feature . get Implied Features (  )  )  {         if  ( !features . contains ( implied )  && implied Set . add ( implied )  )  {             queue . add ( implied )  ;          }     } } return implied Set ; }
9630,protected  String get Ref Log Message (  Receive Command cmd ) { return cmd . has Custom Ref Log (  )  ? cmd . get Ref Log Message (  )  : get Ref Log Message (  )  ; }
9631,public  Power Control get Power Control (  ) { return get Capability (  Power Control . class )  ; }
9632,"protected void draw Highlight Lines (  Canvas c, float x, float y, I Line Scatter Candle Radar Data Set set ) { // set color and stroke-width m Highlight Paint . set Color ( set . get High Light Color (  )  )  ;  m Highlight Paint . set Stroke Width ( set . get Highlight Line Width (  )  )  ;  // draw highlighted lines  ( if enabled )  m Highlight Paint . set Path Effect ( set . get Dash Path Effect Highlight (  )  )  ;  // draw vertical highlight lines if  ( set . is Vertical Highlight Indicator Enabled (  )  )  {     // create vertical path     m Highlight Line Path . reset (  )  ;      m Highlight Line Path . move To ( x, m View Port Handler . content Top (  )  )  ;      m Highlight Line Path . line To ( x, m View Port Handler . content Bottom (  )  )  ;      c . draw Path ( m Highlight Line Path, m Highlight Paint )  ;  } // draw horizontal highlight lines if  ( set . is Horizontal Highlight Indicator Enabled (  )  )  {     // create horizontal path     m Highlight Line Path . reset (  )  ;      m Highlight Line Path . move To ( m View Port Handler . content Left (  ) , y )  ;      m Highlight Line Path . line To ( m View Port Handler . content Right (  ) , y )  ;      c . draw Path ( m Highlight Line Path, m Highlight Paint )  ;  }}"
9633,"public  Message get Message (  ) {  Long __key = this . message Id ;  if  ( message__resolved Key == null || !message__resolved Key . equals ( __key )  )  {     final  Dao Session dao Session = this . dao Session ;      if  ( dao Session == null )  {         throw new  Dao Exception ( "" Entity is detached from DAO context"" )  ;      }      Message Dao target Dao = dao Session . get Message Dao (  )  ;       Message message New = target Dao . load ( __key )  ;      synchronized  ( this )  {         message = message New ;          message__resolved Key = __key ;      } } return message ; }"
9634,"public static void sort Descending ( byte [  ]  array ) { check Not Null ( array )  ;  sort Descending ( array, 0, array . length )  ; }"
9635,private boolean can Scroll X (  ) {  View child = get Child At ( 0 )  ;  if  ( child != null )  {     int child Width = child . get Width (  )  ;      return get Width (  )  < child Width + get Padding Left (  )  + get Padding Right (  )  ;  } return false ; }
9636,"private static byte [  ]  get Salt (  ) { byte [  ]  salt = null ;  if  ( configuration == null ||  (  ( salt = configuration . get Obfuscation Salt (  )  )  == null )  )  {      Log . w ( LOG_TAG, "" Can't  ( un ) obfuscate purchases without salt"" )  ;  } return salt ; }"
9637,"public com . anychart . core . stock . scrollerseries .  Candlestick container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
9638,"public void set Multi Choice Items ( JSON Array items, JSON Array selected )  throws JSON Exception{ set Items ( items )  ;  m Selected Items . clear (  )  ;  if  ( selected != null )  {     for  ( int i = 0 ;  i < selected . length (  )  ;  i++ )  {         m Selected Items . add ( selected . get Int ( i )  )  ;      } } m Input Type =  Input Type . MULTI_CHOICE ; }"
9639,"public  Find Iterable< Result T> find ( final  Bson filter, final  Class< Result T> result Class, final  Find Options options ) { return os Mongo Collection . find ( filter, result Class, options )  ; }"
9640,"public void to Xml (  Boolean as Xml Node ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Xml ( %s )  ; "", as Xml Node )  )  ; }"
9641,"public void add Pair (  String text ) {  String Tokenizer stz = new  String Tokenizer ( text, ""\0"" )  ;  if  ( stz . count Tokens (  )  == 2 )  {     add Pair ( stz . next Token (  ) , stz . next Token (  )  )  ;  }}"
9642,"public  Float Buffer get ( float [  ]  dest, int off, int len ) { int length = dest . length ;  if  ( off < 0 || len < 0 ||  ( long )  off +  ( long )  len > length )  {     throw new  Index Out Of Bounds Exception (  )  ;  } if  ( len > remaining (  )  )  {     throw new  Buffer Underflow Exception (  )  ;  } for  ( int i = off ;  i < off + len ;  i++ )  {     dest [ i ]  = get (  )  ;  } return this ; }"
9643,public  Cst Call Site get Call Site (  ) { return call Site ; }
9644,"public void set Rectangle (  Rect rect ) { set Rectangle ( rect . left, rect . top, rect . width (  ) , rect . height (  )  )  ; }"
9645,"public com . anychart . core . stock . scrollerseries .  Stick bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
9646,public  To String Helper add Value ( @ Check For Null  Object value ) { return add Holder ( value )  ; }
9647,"private void add Build Target Pattern (  Build Target Pattern build Target Pattern ) { switch ( build Target Pattern . get Kind (  )  )  {     case SINGLE:         //   We should stop accept flavors when parsing patterns, at least for focus .          if  ( build Target Pattern . get Local Name And Flavors (  )  . contains ( ""#"" )  )  {             break ;          }         this . matched Targets . add (  Unflavored Build Target . of ( build Target Pattern . get Cell Relative Base Path (  ) , build Target Pattern . get Local Name And Flavors (  )  )  )  ;          break ;      case PACKAGE:         //  Match //foo:         this . build Target Packages . add ( build Target Pattern . get Cell Relative Base Path (  )  )  ;          break ;      case RECURSIVE:         //  Match //foo/ .  .  .          this . build Target Prefixes . add ( build Target Pattern . get Cell Relative Base Path (  )  )  ;          break ;  }}"
9648,public void set Reuse Validating Objects ( boolean validate ) { reuse Validate = validate ; }
9649,"public  String verify Method (  Type Element sdk Class Elem,  Executable Element method Element, boolean loose Signatures ) {  String class Name = get Class FQ Name ( sdk Class Elem )  ;   Class Info class Info = get Class Info ( class Name )  ;  if  ( class Info == null )  {     return "" No such class "" + class Name ;  }  Method Extra Info sdk Method = class Info . find Method ( method Element, loose Signatures )  ;  if  ( sdk Method == null )  {     return "" No such method in "" + class Name ;  }  Method Extra Info impl Method = new  Method Extra Info ( method Element )  ;  if  ( !sdk Method . equals ( impl Method )  && !suppress Warnings ( method Element, ""robolectric .  Shadow Return Type Mismatch"" )  )  {     if  ( impl Method . is Static != sdk Method . is Static )  {         return ""@ Implementation for "" + method Element . get Simple Name (  )  + "" is "" +  ( impl Method . is Static ? ""static"" : ""not static"" )  + "" unlike the SDK method"" ;      }     if  ( !impl Method . return Type . equals ( sdk Method . return Type )  )  {         if  (  ( loose Signatures && type Is Ok For Loose Signatures ( impl Method, sdk Method )  )  ||  ( loose Signatures && impl Method . return Type . equals ( ""java . lang .  Object [  ] "" )  )  || //  Number is allowed for int or long return types         type Is Numeric ( sdk Method, impl Method )  )  {             return null ;          } else {             return ""@ Implementation for "" + method Element . get Simple Name (  )  + "" has a return type of "" + impl Method . return Type + "", not "" + sdk Method . return Type + "" as in the SDK method"" ;          }     } } return null ; }"
9650,public void insure Initialized (  ) { insure Initialized ( true )  ; }
9651,"public  Stream Model Builder with Map Method From Signature (  String method Sig,  String inner Method Name,  Immutable Set< Integer> args From Stream ) { this . map Method Sig To Record . put ( method Sig, new  Maplike Method Record ( inner Method Name, args From Stream )  )  ;  return this ; }"
9652,"public static void write Local ( @ Nonnull  Indenting Writer writer, @ Nullable  String name, @ Nullable  String type, @ Nullable  String signature )  throws IO Exception{ if  ( name != null )  {      Reference Formatter . write String Reference ( writer, name )  ;  } else {     writer . write ( ""null"" )  ;  } writer . write ( ':' )  ;  if  ( type != null )  {     writer . write ( type )  ;  } else {     writer . write ( ""V"" )  ;  } if  ( signature != null )  {     writer . write ( "", "" )  ;       Reference Formatter . write String Reference ( writer, signature )  ;  }}"
9653,public T remove (  ) { return super . remove First (  )  ; }
9654,"public com . anychart . core . gantt .  Data Grid Button padding (  Number value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
9655,"private static boolean has Always Denied Permission (  Source source,  String .  .  .  denied Permissions ) { for  (  String permission : denied Permissions )  {     if  ( !source . is Show Rationale Permission ( permission )  )  {         return true ;      } } return false ; }"
9656,"public static void register Stats (  String path, int block Count, int free Blocks, int available Blocks ) { stats . put ( path, new  Stats ( block Count, free Blocks, available Blocks )  )  ; }"
9657,public int hash Code (  ) { E e = get Element (  )  ;  return  (  ( e == null )  ? 0 : e . hash Code (  )  )  ^ get Count (  )  ; }
9658,public int get Code Point (  ) { return code Point ; }
9659,"public static  Path get Gen Path (  Project Filesystem filesystem,  Build Target target,  String format ) {  Preconditions . check Argument ( !format . starts With ( ""/"" ) , ""format string should not start with a slash"" )  ;  return filesystem . get Buck Paths (  )  . get Gen Dir (  )  . resolve ( get Base Path ( filesystem, target, format )  . to Path ( filesystem . get File System (  )  )  )  ; }"
9660,public void set Map (  Google Map map ) { remove Layer From Map (  )  ;  super . set Map ( map )  ;  add Layer To Map (  )  ; }
9661,public  String get Post Body Content Type (  ) { return get Body Content Type (  )  ; }
9662,private void _change Height ( boolean is Fullscreen ) { if  ( m Is Always Full Screen )  {     return ;  }  View Group .  Layout Params layout Params = get Layout Params (  )  ;  if  ( is Fullscreen )  {     // 高度扩展为横向全屏     layout Params . height = m Width Pixels ;  } else {     // 还原高度     layout Params . height = m Init Height ;  } set Layout Params ( layout Params )  ; }
9663,public void prepare Pack ( @ Non Null  Iterator< Rev Object> objects Source )  throws IO Exception{ while  ( objects Source . has Next (  )  )  {     add Object ( objects Source . next (  )  )  ;  }}
9664,public  Pack Config get Pack Config (  ) { return pack Config ; }
9665,public  Prop Groups View Model_ primitive And Object Group With Primitive Default ( long primitive And Object Group With Primitive Default ) { assigned Attributes_epoxy Generated Model . set ( 8 )  ;  assigned Attributes_epoxy Generated Model . clear ( 9 )  ;  this . primitive And Object Group With Primitive Default_ Char Sequence = null ;  on Mutation (  )  ;  this . primitive And Object Group With Primitive Default_ Long = primitive And Object Group With Primitive Default ;  return this ; }
9666,public  Char Sequence get Text Over Image (  ) { return m Text Over Image ; }
9667,"public com . anychart . core . annotations .  Fibonacci Timezones stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
9668,"public  Container<T> min Size ( float width, float height ) { min Size (  Fixed . value Of ( width ) ,  Fixed . value Of ( height )  )  ;  return this ; }"
9669,"public void test Null Start Command Intent (  )  throws  Exception{  Test Enhanced Intent Service service = new  Test Enhanced Intent Service (  )  {     @ Override     public  Intent get Start Command Intent (  Intent original Intent )  {         return null ;      } } ;  assert Equals (  Service . START_NOT_STICKY, execute Service On Start Command Grabbing Wake Lock ( service, new  Intent (  ) , NO_FLAGS, 1 )  )  ;  assert Null ( service . pop Handle Intent Call (  )  )  ;  assert Equals (  Integer . value Of ( 1 ) , service . pop Stop Self Call (  )  )  ;  assert That ( wake Lock . is Held (  )  )  . is False (  )  ; }"
9670,"public com . anychart . core . annotations .  Fibonacci Fan grid (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . grid ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
9671,"public  Remote Config call (  )  throws  Git API Exception{ check Callable (  )  ;  try {      Stored Config config = repo . get Config (  )  ;       Remote Config remote = new  Remote Config ( config, remote Name )  ;      config . unset Section (  Config Constants . CONFIG_KEY_REMOTE, remote Name )  ;      config . save (  )  ;      return remote ;  } catch  ( IO Exception | URI Syntax Exception e )  {     throw new J Git Internal Exception ( e . get Message (  ) , e )  ;  }}"
9672,"public void hover Mode (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . hover Mode (  )  ; "" )  ; }"
9673,"public synchronized  Amplitude Client initialize ( final  Context context, final  String api Key, final  String user Id, final  String platform, final boolean enable Diagnostic Logging, final  Call .  Factory call Factory ) { return this . initialize Internal ( context, api Key, user Id, platform, enable Diagnostic Logging, call Factory )  ; }"
9674,public void set Rewind Increment Ms ( int rewind Ms ) { this . rewind Ms = rewind Ms ;  update Navigation (  )  ; }
9675,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
9676,"public  Vector2 to Screen Coordinates (  Vector2 coords,  Matrix4 transform Matrix ) { return viewport . to Screen Coordinates ( coords, transform Matrix )  ; }"
9677,public boolean is Renderer Enabled ( int index ) { return renderer Configurations [ index ]  != null ; }
9678,public boolean is Closed At Right (  ) { return drag View . get Left (  )  >= get Width (  )  ; }
9679,"public  Base Adapter Helper set Typeface ( int view Id,  Typeface typeface ) {  Text View view = retrieve View ( view Id )  ;  view . set Typeface ( typeface )  ;  view . set Paint Flags ( view . get Paint Flags (  )  |  Paint . SUBPIXEL_TEXT_FLAG )  ;  return this ; }"
9680,public void invert Order ( int index ) { this . comparators . get ( index )  . invert Order (  )  ; }
9681,"public static  Glyf get Glyf (  Byte Buffer data ) { short num Contours = data . get Short (  )  ;   Glyf g = null ;  if  ( num Contours == 0 )  {     // no glyph data     g = new  Glyf (  )  ;  } else if  ( num Contours == -1 )  {     // compound glyf     g = new  Glyf Compound (  )  ;  } else if  ( num Contours > 0 )  {     // simple glyf     g = new  Glyf Simple (  )  ;  } else {     throw new  Illegal Argument Exception ( "" Unknown glyf type: "" + num Contours )  ;  } g . set Num Contours ( num Contours )  ;  g . set Min X ( data . get Short (  )  )  ;  g . set Min Y ( data . get Short (  )  )  ;  g . set Max X ( data . get Short (  )  )  ;  g . set Max Y ( data . get Short (  )  )  ;  // do glyphtype-specific parsing g . set Data ( data )  ;  return g ; }"
9682,"private void measure Text Width Height (  ) {  Rect rect = new  Rect (  )  ;  for  ( int i = 0 ;  i < adapter . get Items Count (  )  ;  i++ )  {      String s1 = get Content Text ( adapter . get Item ( i )  )  ;      paint Center Text . get Text Bounds ( s1, 0, s1 . length (  ) , rect )  ;      int text Width = rect . width (  )  ;      if  ( text Width > max Text Width )  {         max Text Width = text Width ;      } } // 星期的字符编码（以它为标准高度） paint Center Text . get Text Bounds ( ""星期"", 0, 2, rect )  ;  max Text Height = rect . height (  )  + 2 ;  item Height = line Spacing Multiplier * max Text Height ; }"
9683,"public com . anychart . charts .  Tree Map select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
9684,"public final synchronized void remove Media Source Range ( int from Index, int to Index,  Handler handler,  Runnable on Completion Action ) { remove Public Media Sources ( from Index, to Index, handler, on Completion Action )  ; }"
9685,"private void assert Mutations Read ( int by Key, int by Query ) { assert Equals ( "" Mutations read  ( by query ) "", by Query, query Engine . get Mutations Read By Query (  )  )  ;  assert Equals ( "" Mutations read  ( by key ) "", by Key, query Engine . get Mutations Read By Key (  )  )  ; }"
9686,public  String get Layout (  ) { return m Beacon Layout ; }
9687,"public static  Sorted Set<T> union (  Sorted Set<T> a,  Sorted Set<T> b ) { return new  Merged Sorted Set View<T> ( a, b )  ; }"
9688,"public  Method Visitor visit Method ( int access,  String name,  String desc,  String signature,  String [  ]  exceptions ) { if  ( instant Run Disabled || !is Access Compatible With Instant Run ( access )  )  {     //  Nothing to generate .      return null ;  } if  ( name . equals (  Byte Code Utils . CLASS_INITIALIZER )  )  {     // we skip the class init as it can reset static fields which we don't support right now     return null ;  } boolean is Static =  ( access &  Opcodes . ACC_STATIC )  != 0 ;   String new Desc = compute Override Method Desc ( desc, is Static )  ;  if  ( DEBUG )  {      System . out . println ( "">>>  Visiting method "" + visited Class Name + "":"" + name + "":"" + desc )  ;      if  ( exceptions != null )  {         for  (  String exception : exceptions )  {              System . out . println ( "">  Exception thrown : "" + exception )  ;          }     } } if  ( DEBUG )  {      System . out . println ( "" New  Desc is "" + new Desc + "":"" + is Static )  ;  } //  Do not carry on any access flags from the original method .   For example synchronized // on the original method would translate into a static synchronized method here .  access =  Opcodes . ACC_PUBLIC |  Opcodes . ACC_STATIC ;   Method Node method = get Method By Name In Class ( name, desc, class Node )  ;  if  ( name . equals (  Byte Code Utils . CONSTRUCTOR )  )  {      Constructor constructor =  Constructor Builder . build ( visited Class Name, method )  ;       Method Visitor mv = create Method Adapter ( access, constructor . args . name, constructor . args . desc, constructor . args . desc, constructor . args . signature, exceptions, is Static, true )  ;      constructor . args . accept ( mv )  ;      mv = create Method Adapter ( access, constructor . body . name, constructor . body . desc, new Desc, constructor . body . signature, exceptions, is Static, true )  ;      constructor . body . accept ( mv )  ;      //  Remember our created methods so we can generated the access$dispatch for them .      added Methods . add ( constructor . args )  ;      added Methods . add ( constructor . body )  ;      return null ;  } else {      String new Name = is Static ? compute Override Method Name ( name, desc )  : name ;      return create Method Adapter ( access, new Name, new Desc, new Desc, signature, exceptions, is Static, false )  ;  }}"
9689,public  Basic Block List get Blocks (  ) { return blocks ; }
9690,"public com . anychart . core . stock . scrollerseries .  Stick min Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
9691,public  Annotation get Annotation (  ) { return annotation ; }
9692,"public void load Url (  String url ) { if  ( app View == null )  {     init (  )  ;  } //  If keep Running this . keep Running = preferences . get Boolean ( "" Keep Running"", true )  ;  app View . load Url Into View ( url, true )  ; }"
9693,"public void reset (  Source source,  Payload payload ) {}"
9694,"public static  Pix pix Fast Tophat (  Pix pixs, int xsize, int ysize, @ Tophat Type int type ) { if  ( pixs == null )      throw new  Illegal Argument Exception ( "" Source pix must be non-null"" )  ;  if  ( pixs . get Depth (  )  != 8 )      throw new  Illegal Argument Exception ( "" Source pix depth must be 8bpp"" )  ;  if  ( xsize < 1 || ysize < 1 )      throw new  Illegal Argument Exception ( ""size < 1"" )  ;  if  ( type < 0 || type > 1 )      throw new  Illegal Argument Exception ( "" Type must be L_TOPHAT_BLACK or L_TOPHAT_WHITE"" )  ;  long native Pix = native Pix Fast Tophat ( pixs . get Native Pix (  ) , xsize, ysize, type )  ;  if  ( native Pix == 0 )      throw new  Runtime Exception ( "" Failed to perform pix Fast Tophat on image"" )  ;  return new  Pix ( native Pix )  ; }"
9695,public int get Event Flags (  ) { return last Event Flags ; }
9696,public void set Transition Duration ( int duration Ms ) { m Duration Ms = duration Ms ;  // re-initialize transition if it's running if  ( m Transition State == TRANSITION_RUNNING )  {     m Transition State = TRANSITION_STARTING ;  }}
9697,public final  String get Product (  ) { return  Check Validity Util . check Valid Data (  Build . PRODUCT )  ; }
9698,void set Scroll Animate ( boolean animate ) { this . animate From Observer = animate ; }
9699,"public com . anychart . graphics . vector .  Element attr (  String key,  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . attr ( %s, %s )  ; "", wrap Quotes ( key ) , wrap Quotes ( value )  )  )  ;  return this ; }"
9700,public void add ( J Menu jli ) {}
9701,"public com . anychart . charts .  Venn marker Palette (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . marker Palette ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9702,public boolean is Max Value Set (  ) { return m Max Value != - Math Helper . NULL_VALUE ; }
9703,public float get Animated Fraction (  ) { return m Current Fraction ; }
9704,public boolean not Empty (  ) { return size > 0 ; }
9705,private void set User Touch ( boolean is User Touch ) { if  ( m User Touch == is User Touch )  {     return ;  } m User Touch = is User Touch ;  if  ( is User Touch )  {     m Indicator Show = is User Touch ;  }}
9706,public void set Header Loading Text (  String header Loading Text ) { this . header Loading Text = header Loading Text ; }
9707,public  String get Text (  ) { return text ; }
9708,"public com . anychart . core . ui .  Legend Item line Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Height ( %s )  ; "", height )  )  ;  return this ; }"
9709,"public void add Section (  Form Section Controller section, int position ) { section Controllers . add ( position, section )  ; }"
9710,Field Number Tree child (  Sub Scope Id sub Scope Id ) {  Field Number Tree child = children . get ( sub Scope Id )  ;  return child == null ? EMPTY : child ; }
9711,public  Analytics Collector get Analytics Collector (  ) { return analytics Collector ; }
9712,"private void parse File ( PDF Password password )  throws IO Exception{ // start at the begining of the file buf . rewind (  )  ;   String version Line = read Line (  )  ;  if  ( version Line . starts With ( VERSION_COMMENT )  )  {     process Version ( version Line . substring ( VERSION_COMMENT . length (  )  )  )  ;  } buf . rewind (  )  ;  // back up about 32 characters from the end of the file to find // startxref\n byte [  ]  scan = new byte [ 32 ]  ;  int scan Pos = buf . remaining (  )  - scan . length ;  int loc = 0 ;  while  ( scan Pos >= 0 )  {     buf . position ( scan Pos )  ;      buf . get ( scan )  ;      // find startxref in scan      String scans = new  String ( scan )  ;      loc = scans . index Of ( ""startxref"" )  ;      if  ( loc > 0 )  {         if  ( scan Pos + loc + scan . length <= buf . limit (  )  )  {             scan Pos = scan Pos + loc ;              loc = 0 ;          }         break ;      }     scan Pos -= scan . length - 10 ;  } if  ( scan Pos < 0 )  {     throw new IO Exception ( "" This may not be a PDF  File"" )  ;  } buf . position ( scan Pos )  ;  buf . get ( scan )  ;   String scans = new  String ( scan )  ;  // skip over ""startxref"" and first EOL char loc += 10 ;  if  ( scans . char At ( loc )  < 32 )  {     loc++ ;  } // skip over possible 2nd EOL char while  ( scans . char At ( loc )  == 32 )  {     loc++ ;  } // skip over possible leading blanks // read number int numstart = loc ;  while  ( loc < scans . length (  )  && scans . char At ( loc )  >= '0' && scans . char At ( loc )  <= '9' )  {     loc++ ;  } int xrefpos =  Integer . parse Int ( scans . substring ( numstart, loc )  )  ;  buf . position ( xrefpos )  ;  try {     read Trailer ( password )  ;  } catch  (  Unsupported Encryption Exception e )  {     throw new PDF Parse Exception ( e . get Message (  ) , e )  ;  }}"
9713,"private  Immutable Sorted Map< Document Key,  Document> get Documents Matching Collection Query (  Query query,  Snapshot Version since Read Time ) {  Immutable Sorted Map< Document Key,  Mutable Document> remote Documents = remote Document Cache . get All Documents Matching Query ( query, since Read Time )  ;   List< Mutation Batch> matching Batches = mutation Queue . get All Mutation Batches Affecting Query ( query )  ;  remote Documents = add Missing Base Documents ( matching Batches, remote Documents )  ;  for  (  Mutation Batch batch : matching Batches )  {     for  (  Mutation mutation : batch . get Mutations (  )  )  {         //  Only process documents belonging to the collection .          if  ( !query . get Path (  )  . is Immediate Parent Of ( mutation . get Key (  )  . get Path (  )  )  )  {             continue ;          }          Document Key key = mutation . get Key (  )  ;           Mutable Document document = remote Documents . get ( key )  ;          if  ( document == null )  {             //  Create invalid document to apply mutations on top of             document =  Mutable Document . new Invalid Document ( key )  ;              remote Documents = remote Documents . insert ( key, document )  ;          }         mutation . apply To Local View ( document, batch . get Local Write Time (  )  )  ;          if  ( !document . is Found Document (  )  )  {             remote Documents = remote Documents . remove ( key )  ;          }     } }  Immutable Sorted Map< Document Key,  Document> results = empty Document Map (  )  ;  for  (  Map .  Entry< Document Key,  Mutable Document> doc Entry : remote Documents )  {     //  Finally, insert the documents that still match the query     if  ( query . matches ( doc Entry . get Value (  )  )  )  {         results = results . insert ( doc Entry . get Key (  ) , doc Entry . get Value (  )  )  ;      } } return results ; }"
9714,public static long get Section Triggered Async State Update Count (  ) { return s Section Triggered Async State Update Count . get (  )  ; }
9715,"public void test Trailing Empty Line (  )  throws IO Exception{ compare Styled ( ""@@ 0,1 0,1 @@\n-navigation_drawer_header_background\n\n"" )  ; }"
9716,public  Matrix3 rotate ( float degrees ) { return rotate Rad (  Math Utils . degrees To Radians * degrees )  ; }
9717,public double get Amplitude (  ) { if  ( m Recorder != null )  {     return  ( m Recorder . get Max Amplitude (  )  )  ;  } else     return 0 ; }
9718,"public void min Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Height (  )  ; "" )  ; }"
9719,public boolean is Directory (  ) { return is Directory ; }
9720,public boolean stop Pruning ( boolean stop ) { return true ; }
9721,public  Hash Code Builder append ( double [  ]  array ) { if  ( array == null )  {     i Total = i Total * i Constant ;  } else {     for  ( double element : array )  {         append ( element )  ;      } } return this ; }
9722,public  Byte Buffer get Data (  ) {  Byte Buffer buf =  Byte Buffer . allocate ( 262 )  ;  buf . put Short ( get Format (  )  )  ;  buf . put Short ( get Length (  )  )  ;  buf . put Short ( get Language (  )  )  ;  buf . put ( get Map (  )  )  ;  // reset the position to the beginning of the buffer buf . flip (  )  ;  return buf ; }
9723,public  Align get Annotations Text Align (  ) { return m Annotations Text Align ; }
9724,"public static void request Permission And Evaluate ( UQI uqi,  Function< Void,  Void> query ) { if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . M )  {     //  For  Android version M and above, there is chance to request permissions at runtime      Pair<UQI,  Function< Void,  Void>> uqi Query = new  Pair<> ( uqi, query )  ;      int request Code = uqi Query . hash Code (  )  ;      pending UQI Queries . put ( request Code, uqi Query )  ;       Intent permission Request = new  Intent ( uqi . get Context (  ) , PS Permission Activity . class )  ;      permission Request . put Extra ( PS Permission Activity . REQUEST_CODE, request Code )  ;      permission Request . set Flags (  Intent . FLAG_ACTIVITY_NEW_TASK )  ;      uqi . get Context (  )  . start Activity ( permission Request )  ;  } else {     //  For  Android M-, we cannot request permissions at runtime     uqi . evaluate ( query, false )  ;  }}"
9725,"public void point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . point Width (  )  ; "" )  ; }"
9726,"private static void test Exhaustively (  Ordering<? super T> ordering, T .  .  .  strictly Ordered Elements ) { check Argument ( strictly Ordered Elements . length >= 3, ""strictly Ordered Elements "" + ""requires at least 3 elements"" )  ;   List<T> list =  Arrays . as List ( strictly Ordered Elements )  ;  // for use calling  Collection . to Array later T [  ]  empty Array =  Platform . new Array ( strictly Ordered Elements, 0 )  ;  // shoot me, but I didn't want to deal with wildcards through the whole test @ Suppress Warnings ( ""unchecked"" )   Scenario<T> starter = new  Scenario<> (  (  Ordering )  ordering, list, empty Array )  ;  verify Scenario ( starter, 0 )  ; }"
9727,"protected void on Post Execute (  String result ) { if  ( !is Cancelled )  {     try {         if  ( !"""" . equals ( result )  )  {             if  ( "" No connectivity"" . equals ( result )  )  {                  Log . e ( ""TAG"", "" No connection"" )  ;              } else {                 if  ( traces . size (  )  > 0 && traces . get ( traces . size (  )  - 1 )  . get Ip (  )  . equals ( ip To Ping )  )  {                     if  ( ttl < max Ttl )  {                         ttl = max Ttl ;                          traces . remove ( traces . size (  )  - 1 )  ;                          new  Execute Ping Async Task ( max Ttl )  . execute (  )  ;                      }                 } else {                     if  ( ttl < max Ttl )  {                         ttl++ ;                          new  Execute Ping Async Task ( max Ttl )  . execute (  )  ;                      }                 }             }         }         finished Tasks++ ;      } catch  ( final  Exception e )  {         e . print Stack Trace (  )  ;      } } super . on Post Execute ( result )  ; }"
9728,public  Class<K> key Type (  ) { return key Type ; }
9729,"private void push Method Redirect Arguments On Stack (  String name,  String desc ) {  Type [  ]  parameter Types =  Type . get Argument Types ( desc )  ;  // stack : <parameters values> int parameters = box Parameters To New Local Array ( parameter Types )  ;  // push the parameter values as a  Object [  ]  on the stack .  load Local ( parameters )  ;  // push the parameter types as a  Class [  ]  on the stack push Parameter Types On Stack ( parameter Types )  ;  push ( name )  ; }"
9730,"public static boolean is Equals (  Object actual,  Object expected ) { return actual == expected ||  ( actual == null ? expected == null : actual . equals ( expected )  )  ; }"
9731,"public boolean exists (  ) { switch ( type )  {     case  Internal:         if  ( file (  )  . exists (  )  )              return true ;      //  Fall through .      case  Classpath:         return  File Handle . class . get Resource ( ""/"" + file . get Path (  )  . replace ( '\\', '/' )  )  != null ;  } return file (  )  . exists (  )  ; }"
9732,"static boolean equals ( @ Nullable final  Map<T, byte [  ] > map,  Map<T, byte [  ] > other Map ) { if  ( map == other Map )  {     return true ;  } if  ( map == null || other Map == null )  {     return false ;  } if  ( map . size (  )  != other Map . size (  )  )  {     return false ;  }  Set<T> keys = map . key Set (  )  ;  if  ( !keys . equals ( other Map . key Set (  )  )  )  {     return false ;  } for  ( T key : keys )  {     if  ( ! Objects . deep Equals ( map . get ( key ) , other Map . get ( key )  )  )  {         return false ;      } } return true ; }"
9733,public  Object Checker new Object Checker (  ) { return new Object Checker ( fetch Fsck )  ; }
9734,public  Builder set Service Uuid ( @ Nullable final  Parcel Uuid service Uuid ) { this . service Uuid = service Uuid ;  // clear uuid mask this . uuid Mask = null ;  return this ; }
9735,"public void verify No Changes (  Path first Output File,  List< Path> output Files )  throws  Parse Exception,  Max Differences Exception,  Targets Stress Run Exception{  Target Hash File Parser parser = new  Target Hash File Parser (  )  ;   Parsed Targets File original File = parser . parse File ( first Output File )  ;  for  (  Path file : output Files )  {      Parsed Targets File new Targets File = parser . parse File ( file )  ;       Targets Differ targets Differ = null ;      try {         targets Differ = differ Factory . call (  )  ;      } catch  (  Exception e )  {         throw new  Targets Stress Run Exception (  String . format ( "" Error creating differ: %s"", e . get Message (  )  ) , e )  ;      }     if  ( targets Differ . print Diff ( original File, new Targets File )  ==  Diff Result . CHANGES_FOUND )  {         throw new  Targets Stress Run Exception (  String . format ( "" Found differences between %s and %s"", original File . filename, new Targets File . filename )  )  ;      } }}"
9736,"public com . anychart . core . ui .  Circular Labels Factory padding (  String [  ]  padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "", array To String Wrap Quotes ( padding )  )  )  ;  return this ; }"
9737,"protected void setup Object List (  ) { object List . add ( new  Number Hash Map (  Data Types . OBJ_TEXT_ENCODING, this,  Text Encoding . TEXT_ENCODING_FIELD_SIZE )  )  ;  object List . add ( new  Text Encoded String Null Terminated (  Data Types . OBJ_DESCRIPTION, this )  )  ;  object List . add ( new  String Size Terminated (  Data Types . OBJ_URLLINK, this )  )  ; }"
9738,public  String validate (  String code ) {  String result = validate ISBN13 ( code )  ;  if  ( result == null )  {     result = validate ISBN10 ( code )  ;      if  ( result != null && convert )  {         result = convert To ISBN13 ( result )  ;      } } return result ; }
9739,"public static  String get Mobile Brand (  Context context ) { try {     // android系统版本号      String brand = android . os .  Build . BRAND ;      return brand ;  } catch  (  Exception e )  {     return ""未知"" ;  }}"
9740,public static _ Fields find By Name ( java . lang .  String name ) { return by Name . get ( name )  ; }
9741,"public com . anychart . charts .  Sunburst bounds (  String x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
9742,public  Object [  ]  get Sections (  ) { return m Alphabet Indexer . get Sections (  )  ; }
9743,"public com . anychart . charts .  Pareto bounds (  Number x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, height )  )  ;  return this ; }"
9744,public void set Parallax Multiplier ( float multiplier ) { m Parallax Mult = multiplier ; }
9745,private static  Listenable Future<? extends T> [  ]  gwt Compatible To Array (  Iterable<? extends  Listenable Future<? extends T>> futures ) { final  Collection< Listenable Future<? extends T>> collection ;  if  ( futures instanceof  Collection )  {     collection =  (  Collection< Listenable Future<? extends T>> )  futures ;  } else {     collection =  Immutable List . copy Of ( futures )  ;  } return  (  Listenable Future<? extends T> [  ]  )  collection . to Array ( new  Listenable Future<?> [ 0 ]  )  ; }
9746,"public com . anychart . charts .  Polar padding (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
9747,public static P Stream Provider as Updates ( long interval ) { return new  Empty Item Updates Provider ( interval )  ; }
9748,public void set Publish Permissions (  String .  .  .  permissions ) { properties . set Permissions (  Arrays . as List ( permissions )  )  ; }
9749,"public void right (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . right (  )  ; "" )  ; }"
9750,"public static float lowest Positive Root ( float a, float b, float c ) { float det = b * b - 4 * a * c ;  if  ( det < 0 )      return  Float .  Na N ;  float sqrt D =  ( float )   Math . sqrt ( det )  ;  float inv A = 1 /  ( 2 * a )  ;  float r1 =  ( -b - sqrt D )  * inv A ;  float r2 =  ( -b + sqrt D )  * inv A ;  if  ( r1 > r2 )  {     float tmp = r2 ;      r2 = r1 ;      r1 = tmp ;  } if  ( r1 > 0 )      return r1 ;  if  ( r2 > 0 )      return r2 ;  return  Float .  Na N ; }"
9751,"public  Tap Target description Text Size ( int sp ) { if  ( sp < 0 )      throw new  Illegal Argument Exception ( "" Given negative text size"" )  ;  this . description Text Size = sp ;  return this ; }"
9752,"public void put (  String param Name, final byte [  ]  raw Data ) { has File = true ;  write To Output Stream ( param Name, raw Data, TYPE_OCTET_STREAM, BINARY_ENCODING, ""KJ Frame File"" )  ; }"
9753,public  Full Rule Key hash (  ) { consume All Pending (  )  ;  return rule Key ; }
9754,"public static void replace ( @ Non Null final  Fragment Manager fm, @ Non Null final  Fragment fragment, @ Id Res final int container Id, final boolean is Add Stack, final  View .  .  .  shared Elements ) { replace ( fm, fragment, container Id, null, is Add Stack, shared Elements )  ; }"
9755,"public void left (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . left (  )  ; "" )  ; }"
9756,"public com . anychart . charts .  Sparkline max Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
9757,"public  Compare To Builder append (  Object lhs,  Object rhs ) { return append ( lhs, rhs, null )  ; }"
9758,public void set Text Gravity ( int text Gravity ) { m Text Gravity = text Gravity ;  invalidate Self (  )  ; }
9759,public void clear ( @ Non Null  View view ) { clear ( new  Clear Target ( view )  )  ; }
9760,"public com . anychart . charts .  Sunburst top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
9761,public byte [  ]  get Network Id (  ) { return network Id ; }
9762,"public T derivative At ( final T out, final int span, final float u ) { return derivative ( out, continuous ? span :  ( span +  ( int )   ( degree * 0 . 5f )  ) , u, control Points, degree, continuous, tmp )  ; }"
9763,"public com . anychart . core . cartesian . series .  Range Bar min Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
9764,public  Task< Void> remove Value (  ) { return set Value ( null )  ; }
9765,"public  Test Field Prop Do Not Hash Option View Model_ on Visibility Changed (  On Model Visibility Changed Listener< Test Field Prop Do Not Hash Option View Model_,  Test Field Prop Do Not Hash Option View> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
9766,public void set Paginate No More Items ( boolean is No More Items ) { set No More Items ( is No More Items )  ; }
9767,"public static void check Collection Name Validity ( final  String collection Name ) { not Null ( ""collection Name"", collection Name )  ;  is True Argument ( ""collection Name is not empty"", !collection Name . is Empty (  )  )  ; }"
9768,"protected final  Bluetooth Gatt Characteristic characteristic ( @ Non Null final UUID uuid, @ Characteristic Properties final int properties, @ Characteristic Permissions final int permissions, @ Nullable final  Data initial Value, final  Bluetooth Gatt Descriptor .  .  .  descriptors ) { return characteristic ( uuid, properties, permissions, initial Value != null ? initial Value . get Value (  )  : null, descriptors )  ; }"
9769,"public com . anychart . charts .  Radar select Marquee Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
9770,"public void short Summarize Ogg Page Headers (  File ogg File )  throws  Cannot Read Exception, IO Exception{  Random Access File raf = new  Random Access File ( ogg File, ""r"" )  ;  int i = 0 ;  while  ( raf . get File Pointer (  )  < raf . length (  )  )  {      System . out . println ( ""page Header starts at absolute file position:"" + raf . get File Pointer (  )  )  ;       Ogg Page Header page Header =  Ogg Page Header . read ( raf )  ;       System . out . println ( ""page Header finishes at absolute file position:"" + raf . get File Pointer (  )  )  ;       System . out . println ( page Header + ""\n"" )  ;      raf . seek ( raf . get File Pointer (  )  + page Header . get Page Length (  )  )  ;      i++ ;      if  ( i >= 5 )  {         break ;      } }  System . out . println ( "" Raf  File  Pointer at:"" + raf . get File Pointer (  )  + "" File  Size is:"" + raf . length (  )  )  ;  raf . close (  )  ; }"
9771,public void set Cert Nonce Seed (  String seed ) { cert Nonce Seed = seed ; }
9772,"public  Write Tree Ref child (  Child Key child Key ) { return new  Write Tree Ref ( this . tree Path . child ( child Key ) , this . write Tree )  ; }"
9773,public  Class<?> get Table Class (  String table ) { for  (  Table Wrap wrap : tables . values (  )  )  {     if  ( wrap . get Table Name (  )  . equals ( table )  )  {         return wrap . get Table Class (  )  ;      } } return null ; }
9774,"public  Builder set Response Mode ( @ Nullable  String response Mode ) { check Null Or Not Empty ( response Mode, ""response Mode must not be empty"" )  ;  m Response Mode = response Mode ;  return this ; }"
9775,"public  Closeable Reference< Bitmap> decode JPEG From Encoded Image With Color Space (  Encoded Image encoded Image,  Bitmap .  Config bitmap Config, @ Nullable  Rect region To Decode, int length, @ Nullable final  Color Space color Space ) { boolean is Jpeg Complete = encoded Image . is Complete At ( length )  ;  final  Bitmap Factory .  Options options = get Decode Options For Stream ( encoded Image, bitmap Config )  ;   Input Stream jpeg Data Stream = encoded Image . get Input Stream (  )  ;  //  At this point the  Input Stream from the encoded image should not be null since in the // pipeline,this comes from a call stack where this was checked before .   Also this method needs // the  Input Stream to decode the image so this can't be null .   Preconditions . check Not Null ( jpeg Data Stream )  ;  if  ( encoded Image . get Size (  )  > length )  {     jpeg Data Stream = new  Limited Input Stream ( jpeg Data Stream, length )  ;  } if  ( !is Jpeg Complete )  {     jpeg Data Stream = new  Tail Appending Input Stream ( jpeg Data Stream, EOI_TAIL )  ;  } boolean retry On Fail = options . in Preferred Config !=  Bitmap .  Config . ARGB_8888 ;  try {     return decode From Stream ( jpeg Data Stream, options, region To Decode, color Space )  ;  } catch  (  Runtime Exception re )  {     if  ( retry On Fail )  {         return decode JPEG From Encoded Image With Color Space ( encoded Image,  Bitmap .  Config . ARGB_8888, region To Decode, length, color Space )  ;      }     throw re ;  } finally {     try {         jpeg Data Stream . close (  )  ;      } catch  ( IO Exception e )  {         e . print Stack Trace (  )  ;      } }}"
9776,public  Keys<K> keys (  ) { if  (  Collections . allocate Iterators )      return new  Keys ( this )  ;  if  ( keys1 == null )  {     keys1 = new  Keys ( this )  ;      keys2 = new  Keys ( this )  ;  } if  ( !keys1 . valid )  {     keys1 . index = 0 ;      keys1 . valid = true ;      keys2 . valid = false ;      return keys1 ;  } keys2 . index = 0 ;  keys2 . valid = true ;  keys1 . valid = false ;  return keys2 ; }
9777,"private void grow If Needed (  ) { if  ( size == values . length )  {     //  Resize .      int [  ]  newv = new int [ size * 3 / 2 + 10 ]  ;       System . arraycopy ( values, 0, newv, 0, size )  ;      values = newv ;  }}"
9778,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
9779,public  Add Command add Filepattern (  String filepattern ) { check Callable (  )  ;  filepatterns . add ( filepattern )  ;  return this ; }
9780,"public com . anychart . charts .  Sunburst hatch Fill Palette ( com . anychart . palettes .  Hatch Fills settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill Palette ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
9781,"public  Builder estimated Viewport Count ( int estimated Viewport Count ) { if  ( estimated Viewport Count <= 0 )  {     throw new  Illegal Argument Exception ( "" Estimated viewport count must be > 0: "" + estimated Viewport Count )  ;  } this . estimated Viewport Count = estimated Viewport Count ;  return this ; }"
9782,public void set Default Swipe To Refresh Color Scheme ( int .  .  .  colors ) { m Swipe Refresh Layout . set Color Scheme Colors ( colors )  ; }
9783,"public com . anychart . standalones .  Data Grid bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
9784,public void unregister On Shared Preference Change Listener (  On Shared Preference Change Listener listener ) { synchronized  ( this )  {     if  ( m Listeners . remove ( listener )  != null && m Listeners . is Empty (  )  )  {         try Unregister Watcher (  )  ;      } }}
9785,"Item new Field Item ( final  String owner, final  String name, final  String desc ) { key3 . set ( 9, /* FIELD */ owner, name, desc )  ;   Item result = get ( key3 )  ;  if  ( result == null )  {     // put122 ( 9 /* FIELD */, new Class Item ( owner )  . index, new Name Type Item ( name, desc )  . index )  ;      int s1 = new Class Item ( owner )  . index, s2 = new Name Type Item ( name, desc )  . index ;      pool . put12 ( 9, /* FIELD */     s1 )  . put Short ( s2 )  ;      result = new  Item ( index++, key3 )  ;      put ( result )  ;  } return result ; }"
9786,"public  Media Period Info get Next Media Period Info ( long renderer Position Us,  Playback Info playback Info ) { return loading == null ? get First Media Period Info ( playback Info )  : get Following Media Period Info ( loading, renderer Position Us )  ; }"
9787,"private void on Action Down ( float x, float y ) { m Move Handler = m Crop Window Handler . get Move Handler ( x, y, m Touch Radius, m Crop Shape )  ;  if  ( m Move Handler != null )  {     invalidate (  )  ;  }}"
9788,"private static int set Color Alpha ( int color, byte alpha ) { return  Color . argb ( alpha,  Color . red ( color ) ,  Color . green ( color ) ,  Color . blue ( color )  )  ; }"
9789,protected void provide (  ) {  Looper . prepare (  )  ;  super . provide (  )  ;  if  ( authorized )  {     do Email Updates (  )  ;  }  Looper . loop (  )  ; }
9790,"public static  Immutable Double Array copy Of ( double [  ]  values ) { return values . length == 0 ? EMPTY : new  Immutable Double Array (  Arrays . copy Of ( values, values . length )  )  ; }"
9791,"public void insert ( @ Non Null final  Iterable< Pair< Integer, T>> index Item Pairs ) { if  ( get List View Wrapper (  )  == null )  {     throw new  Illegal State Exception ( "" Call set List View on this  Animate Addition Adapter!"" )  ;  }  Collection< Pair< Integer, T>> visible Views = new  Array List<> (  )  ;   Collection< Integer> inserted Positions = new  Array List<> (  )  ;   Collection< Integer> inserted Below Positions = new  Array List<> (  )  ;  int scroll Distance = 0 ;  int num Inserted Above = 0 ;  for  (  Pair< Integer, T> pair : index Item Pairs )  {     if  ( get List View Wrapper (  )  . get First Visible Position (  )  > pair . first )  {         /*  Inserting an item above the first visible position */         int index = pair . first ;          /*  Correct the index for already inserted positions above the first visible view .  */         for  ( int inserted Position : inserted Positions )  {             if  ( index >= inserted Position )  {                 index++ ;              }         }         m Insertable . add ( index, pair . second )  ;          inserted Positions . add ( index )  ;          num Inserted Above++ ;          if  ( m Should Animate Down )  {              View view = get View ( pair . first, null, get List View Wrapper (  )  . get List View (  )  )  ;              view . measure (  View .  Measure Spec . make Measure Spec ( 0,  View .  Measure Spec . UNSPECIFIED ) ,  View .  Measure Spec . make Measure Spec ( 0,  View .  Measure Spec . UNSPECIFIED )  )  ;              scroll Distance -= view . get Measured Height (  )  ;          }     } else if  ( get List View Wrapper (  )  . get Last Visible Position (  )  >= pair . first || get List View Wrapper (  )  . get Last Visible Position (  )  ==  Adapter View . INVALID_POSITION || !children Fill Abs List View (  )  )  {         /*  Inserting an item that becomes visible on screen */         int index = pair . first ;          /*  Correct the index for already inserted positions above the first visible view */         for  ( int inserted Position : inserted Positions )  {             if  ( index >= inserted Position )  {                 index++ ;              }         }          Pair< Integer, T> new Pair = new  Pair<> ( index, pair . second )  ;          visible Views . add ( new Pair )  ;      } else {         /*  Inserting an item below the last visible item */         int index = pair . first ;          /*  Correct the index for already inserted positions above the first visible view */         for  ( int inserted Position : inserted Positions )  {             if  ( index >= inserted Position )  {                 index++ ;              }         }         /*  Correct the index for already inserted positions below the last visible view */         for  ( int queued Position : inserted Below Positions )  {             if  ( index >= queued Position )  {                 index++ ;              }         }         inserted Below Positions . add ( index )  ;          m Insertable . add ( index, pair . second )  ;      } } if  ( m Should Animate Down )  {      (  (  Abs List View )  get List View Wrapper (  )  . get List View (  )  )  . smooth Scroll By ( scroll Distance,  ( int )   ( m Scrolldown Animation Duration Ms * num Inserted Above )  )  ;  } m Insert Queue . insert ( visible Views )  ;  int first Visible Position = get List View Wrapper (  )  . get First Visible Position (  )  ;   View first Child = get List View Wrapper (  )  . get Child At ( 0 )  ;  int child Top = first Child == null ? 0 : first Child . get Top (  )  ;   (  (  List View )  get List View Wrapper (  )  . get List View (  )  )  . set Selection From Top ( first Visible Position + num Inserted Above, child Top )  ; }"
9792,"private  Headers extract Headers ( @ Nullable  Readable Array headers Array, @ Nullable  Readable Map request Data ) { if  ( headers Array == null )  {     return null ;  }  Headers .  Builder headers Builder = new  Headers .  Builder (  )  ;  for  ( int headers Idx = 0, size = headers Array . size (  )  ;  headers Idx < size ;  headers Idx++ )  {      Readable Array header = headers Array . get Array ( headers Idx )  ;      if  ( header == null || header . size (  )  != 2 )  {         return null ;      }      String header Name =  Header Util . strip Header Name ( header . get String ( 0 )  )  ;       String header Value =  Header Util . strip Header Value ( header . get String ( 1 )  )  ;      if  ( header Name == null || header Value == null )  {         return null ;      }     headers Builder . add ( header Name, header Value )  ;  } if  ( headers Builder . get ( USER_AGENT_HEADER_NAME )  == null && m Default User Agent != null )  {     headers Builder . add ( USER_AGENT_HEADER_NAME, m Default User Agent )  ;  } //  Sanitize content encoding header, supported only when request specify payload as string boolean is Gzip Supported = request Data != null && request Data . has Key ( REQUEST_BODY_KEY_STRING )  ;  if  ( !is Gzip Supported )  {     headers Builder . remove All ( CONTENT_ENCODING_HEADER_NAME )  ;  } return headers Builder . build (  )  ; }"
9793,public  String get Ref (  ) { return ref ; }
9794,"public com . anychart . core . lineargauge .  Scale Bar fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
9795,"public com . anychart . charts .  Radar max Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
9796,"public static long set Max And Get ( long value,  Atomic Long atomic Value ) { return atomic Value . update And Get (  cur ->  Math . max ( cur, value )  )  ; }"
9797,"public static void rgb565 To Color (  Color color, int value ) { color . r =  (  ( value & 0x0000 F800 )  >>> 11 )  / 31f ;  color . g =  (  ( value & 0x000007 E0 )  >>> 5 )  / 63f ;  color . b =  (  ( value & 0x0000001 F )  >>> 0 )  / 31f ; }"
9798,"private boolean resolve Intent ( final  Intent intent ) { final  Resolve Info resolve Info = m Context . get Package Manager (  )  . resolve Activity ( intent, 0 )  ;  return resolve Info != null ; }"
9799,"public com . anychart . core . axismarkers .  Gantt Range range Marker (  Number index ) { return new com . anychart . core . axismarkers .  Gantt Range (  String . format (  Locale . US, js Base + "" . range Marker ( %s ) "", index )  )  ; }"
9800,"public void set Paths ( final  List< Path> paths ) { for  (  Path path : paths )  {     this . paths . add ( new  Svg Utils .  Svg Path ( path, paint )  )  ;  } synchronized  ( m Svg Lock )  {     update Paths Phase Locked (  )  ;  }}"
9801,"public void desc (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . desc (  )  ; "" )  ; }"
9802,public  Data Gate Client trust All Certs (  ) { this . trust All Certs = true ;  return this ; }
9803,public static  Glide Options circle Crop Transform (  ) { if  (  Glide Options . circle Crop Transform3 == null )  {      Glide Options . circle Crop Transform3 = new  Glide Options (  )  . circle Crop (  )  . auto Clone (  )  ;  } return  Glide Options . circle Crop Transform3 ; }
9804,"public  Builder<K, V> put (  Entry<? extends K, ? extends V> entry ) { super . put ( entry )  ;  return this ; }"
9805,public  File file (  String key ) {  File f = m Cache . new File ( key )  ;  if  ( f . exists (  )  )      return f ;  return null ; }
9806,public static  String get Application Name (  ) {  Validate . sdk Initialized (  )  ;  return application Name ; }
9807,void add (  Crouton crouton ) { crouton Queue . add ( crouton )  ;  display Crouton (  )  ; }
9808,"public com . anychart . charts .  Cartesian margin (  String value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
9809,"public void set Size Spec ( int width Spec, int height Spec,  Size output ) { set Root And Size Spec Internal ( null, width Spec, height Spec, false, /* is Async */ output, /* output */  Calculate Layout Source . SET_SIZE_SPEC_SYNC, -1, null, null, false, false )  ; }"
9810,public int get Texture Bindings (  ) { return gl Interceptor . get Texture Bindings (  )  ; }
9811,"public void set Declaring Class (  Cst Type declaring Class ) { if  ( this . declaring Class != null )  {     throw new  Illegal Argument Exception ( ""already added declaring class"" )  ;  } else if  ( declaring Class == null )  {     throw new  Null Pointer Exception ( ""declaring Class == null"" )  ;  } this . declaring Class = declaring Class ; }"
9812,public  String get Name (  ) { return name ; }
9813,"public void on Patch Service Start (  Intent intent ) {  Share Tinker Log . i ( TAG, ""patch Reporter on Patch Service Start: patch service start"" )  ;  should Retry = false ;   Upgrade Patch Retry . get Instance ( context )  . on Patch Service Start ( intent )  ; }"
9814,"public  Path Source Path get Include Source Path (  ) { return  Path Source Path . of ( get Project Filesystem (  ) , get Project Filesystem (  )  . relativize ( get Root (  )  )  . get Path (  )  )  ; }"
9815,"public  Closing Future<U> transform ( final  Closing Function<? super V, U> function,  Executor executor ) { check Not Null ( function )  ;   Async Function<V, U> apply Function = new  Async Function<V, U> (  )  {     @ Override     public  Listenable Future<U> apply ( V input )  throws  Exception {         return closeables . apply Closing Function ( function, input )  ;      }     @ Override     public  String to String (  )  {         return function . to String (  )  ;      } } ;  // TODO ( dpb ) :  Switch to future . transform Sync when that exists  ( passing a throwing function )  .  return derive ( future . transform Async ( apply Function, executor )  )  ; }"
9816,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
9817,"public static void put ( @ Non Null final  String key, final  Drawable value, final int save Time ) { put ( key, value, save Time, get Default Cache Double Utils (  )  )  ; }"
9818,public  Scan Mode get Scan Mode (  ) { return scan Mode ; }
