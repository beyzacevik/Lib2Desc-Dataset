,code
0,"public com . anychart . charts .  Pareto max Labels (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Labels ( %s )  ; "", settings )  )  ;  return this ; }"
1,"public com . anychart . core . stock . scrollerseries .  Stick color Scale ( com . anychart . scales .  Linear Color settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
2,"protected  Pair< Pair< Long,  Long>, JSON Array> merge Events And Identifys (  List<JSON Object> events,  List<JSON Object> identifys, long num Events )  throws JSON Exception{ JSON Array merged = new JSON Array (  )  ;  long max Event Id = -1 ;  long max Identify Id = -1 ;  while  ( merged . length (  )  < num Events )  {     boolean no Events = events . is Empty (  )  ;      boolean no Identifys = identifys . is Empty (  )  ;      // than expected     if  ( no Events && no Identifys )  {         logger . w ( TAG,  String . format ( ""merge Events And Identifys: number of events and identifys "" + ""less than expected by %d"", num Events - merged . length (  )  )  )  ;          break ;      // case 1: no identifys, grab from events     } else if  ( no Identifys )  {         JSON Object event = events . remove ( 0 )  ;          max Event Id = event . get Long ( ""event_id"" )  ;          merged . put ( event )  ;      // case 2: no events, grab from identifys     } else if  ( no Events )  {         JSON Object identify = identifys . remove ( 0 )  ;          max Identify Id = identify . get Long ( ""event_id"" )  ;          merged . put ( identify )  ;      // case 3: need to compare sequence numbers     } else {         // events logged before v2 . 1 . 0 won't have a sequence number, put those first         if  ( !events . get ( 0 )  . has ( ""sequence_number"" )  || events . get ( 0 )  . get Long ( ""sequence_number"" )  < identifys . get ( 0 )  . get Long ( ""sequence_number"" )  )  {             JSON Object event = events . remove ( 0 )  ;              max Event Id = event . get Long ( ""event_id"" )  ;              merged . put ( event )  ;          } else {             JSON Object identify = identifys . remove ( 0 )  ;              max Identify Id = identify . get Long ( ""event_id"" )  ;              merged . put ( identify )  ;          }     } } return new  Pair< Pair< Long,  Long>, JSON Array> ( new  Pair< Long,  Long> ( max Event Id, max Identify Id ) , merged )  ; }"
3,"public static  Http Response execute ( final  Http Client client, final  Http Host target, final  Http Request request )  throws IO Exception{ return execute ( client, target, request, new  Timer (  ) ,  Transport Manager . get Instance (  )  )  ; }"
4,public  Int List get Cases (  ) { return cases ; }
5,"public void test Compress URL (  )  throws  Malformed URL Exception{  String test URL = ""http://www . radiusnetworks . com"" ;  byte [  ]  expected Bytes = { 0x00, 'r', 'a', 'd', 'i', 'u', 's', 'n', 'e', 't', 'w', 'o', 'r', 'k', 's', 0x07 } ;  assert True (  Arrays . equals ( expected Bytes,  Url Beacon Url Compressor . compress ( test URL )  )  )  ; }"
6,"public  Node<K, V> last (  ) {  Node<K, V> node = this ;   Node<K, V> child = node . right ;  while  ( child != null )  {     node = child ;      child = node . right ;  } return node ; }"
7,"public void to Json (  Boolean stringify ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Json ( %s )  ; "", stringify )  )  ; }"
8,"public com . anychart . core . cartesian . series .  Width Based color Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
9,"private boolean handle Constructor (  String owner,  String name,  String desc ) { if  ( is In Same Package ( owner )  )  {      Type expected Type =  Type . get Type ( ""L"" + owner + "" ; "" )  ;      push Method Redirect Arguments On Stack ( name, desc )  ;      // pop the name, we don't need it .      pop (  )  ;      visit Ldc Insn ( expected Type )  ;      invoke Static ( ALI_RUNTIME_TYPE,  Method . get Method ( "" Object new For Class (  Object [  ] ,  Class [  ] ,  Class ) "" )  )  ;      check Cast ( expected Type )  ;       Byte Code Utils . unbox ( this, expected Type )  ;      return true ;  } else {     return false ;  }}"
10,"public  Array< Element> get Children By Name Recursively (  String name ) {  Array< Element> result = new  Array< Element> (  )  ;  get Children By Name Recursively ( name, result )  ;  return result ; }"
11,"public  Auto Size Config set Screen Width ( int screen Width ) {  Preconditions . check Argument ( screen Width > 0, ""screen Width must be > 0"" )  ;  m Screen Width = screen Width ;  return this ; }"
12,"Validation Report< Type Element> validate Referenced Modules (  Type Element annotated Type,  Annotation Mirror annotation,  Immutable Set< Module Kind> valid Module Kinds,  Set< Type Element> visited Modules ) {  Validation Report .  Builder< Type Element> subreport =  Validation Report . about ( annotated Type )  ;   Immutable Set<? extends  Class<? extends  Annotation>> valid Module Annotations = valid Module Kinds . stream (  )  . map (  Module Kind::annotation )  . collect ( to Immutable Set (  )  )  ;  for  (  Annotation Value included Module : get Modules ( annotation )  )  {     as Type ( included Module )  . accept ( new  Simple Type Visitor8< Void,  Void> (  )  {         @ Override         protected  Void default Action (  Type Mirror mirror,  Void p )  {             report Error ( ""%s is not a valid module type . "", mirror )  ;              return null ;          }         @ Override         public  Void visit Declared (  Declared Type t,  Void p )  {              Type Element module =  More Elements . as Type ( t . as Element (  )  )  ;              if  ( !t . get Type Arguments (  )  . is Empty (  )  )  {                 report Error ( ""%s is listed as a module, but has type parameters"", module . get Qualified Name (  )  )  ;              }             if  ( !is Any Annotation Present ( module, valid Module Annotations )  )  {                 report Error ( ""%s is listed as a module, but is not annotated with %s"", module . get Qualified Name (  ) ,  ( valid Module Annotations . size (  )  > 1 ? ""one of "" : """" )  + valid Module Annotations . stream (  )  . map (  other Class -> ""@"" + other Class . get Simple Name (  )  )  . collect ( joining ( "", "" )  )  )  ;              } else if  ( known Modules . contains ( module )  && !validate ( module, visited Modules )  . is Clean (  )  )  {                 report Error ( ""%s has errors"", module . get Qualified Name (  )  )  ;              }             if  ( metadata Util . is Companion Object Class ( module )  )  {                 report Error ( ""%s is listed as a module, but it is a companion object class .  "" + "" Add @ Module to the enclosing class and reference that instead . "", module . get Qualified Name (  )  )  ;              }             return null ;          }         @ Format Method         private void report Error (  String format,  Object .  .  .  args )  {             subreport . add Error (  String . format ( format, args ) , annotated Type, annotation, included Module )  ;          }     }, null )  ;  } return subreport . build (  )  ; }"
13,"public static  Class Name element Based Class Name (  Executable Element element,  String suffix ) {  Class Name enclosing Class Name =  Class Name . get (  More Elements . as Type ( element . get Enclosing Element (  )  )  )  ;   String method Name = element . get Kind (  )  . equals (  Element Kind . CONSTRUCTOR )  ? """" : LOWER_CAMEL . to ( UPPER_CAMEL, element . get Simple Name (  )  . to String (  )  )  ;  return  Class Name . get ( enclosing Class Name . package Name (  ) , class File Name ( enclosing Class Name )  + ""_"" + method Name + suffix )  ; }"
14,"public void connect Missing Points (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . connect Missing Points (  )  ; "" )  ; }"
15,"public com . anychart . graphics . vector .  Pattern Fill drag (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . drag ( %s )  ; "", value )  )  ;  return this ; }"
16,public  Crashlytics Report with Ndk Payload ( @ Non Null  Files Payload files Payload ) { return to Builder (  )  . set Session ( null )  . set Ndk Payload ( files Payload )  . build (  )  ; }
17,"public synchronized void remove (  String key ) { boolean deleted = get File For Key ( key )  . delete (  )  ;  remove Entry ( key )  ;  if  ( !deleted )  {      Volley Log . d ( "" Could not delete cache entry for key=%s, filename=%s"", key, get Filename For Key ( key )  )  ;  }}"
18,public int get Command Count (  ) { return commands . size (  )  ; }
19,"public com . anychart . core . ui .  Separator margin (  String space Or Top Or Top And Bottom,  String right Or Right And Left,  Number bottom,  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( space Or Top Or Top And Bottom ) , wrap Quotes ( right Or Right And Left ) , bottom, left )  )  ;  return this ; }"
20,"public com . anychart . core . stock . indicators . DMI dmi ( com . anychart . data .  Table Mapping mapping,  Number period,  Number adx Period,  Boolean use Wilders Smoothing,  String pdi Series Type, com . anychart . enums .  Stock Series Type ndi Series Type,  String adx Series Type ) { return new com . anychart . core . stock . indicators . DMI (  String . format (  Locale . US, js Base + "" . dmi ( %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, period, adx Period, use Wilders Smoothing, wrap Quotes ( pdi Series Type ) ,  ( ndi Series Type != null )  ? ndi Series Type . get Js Base (  )  : null, wrap Quotes ( adx Series Type )  )  )  ; }"
21,"public com . anychart . core . annotations .  Fibonacci Arc bounds (  String x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, height )  )  ;  return this ; }"
22,public  Frame Layout get Overlay Frame Layout (  ) { return overlay Frame Layout ; }
23,"public void download (  String file Name,  Output Stream output Stream, long restart At, FTP Data Transfer Listener listener )  throws  Illegal State Exception, IO Exception, FTP Illegal Reply Exception, FTP Exception, FTP Data Transfer Exception, FTP Aborted Exception{ synchronized  ( lock )  {     //  Is this client connected?     if  ( !connected )  {         throw new  Illegal State Exception ( "" Client not connected"" )  ;      }     //  Is this client authenticated?     if  ( !authenticated )  {         throw new  Illegal State Exception ( "" Client not authenticated"" )  ;      }     //  Select the type of contents .      int tp = type ;      if  ( tp == TYPE_AUTO )  {         tp = detect Type ( file Name )  ;      }     if  ( tp == TYPE_TEXTUAL )  {         communication . send FTP Command ( ""TYPE A"" )  ;      } else if  ( tp == TYPE_BINARY )  {         communication . send FTP Command ( ""TYPE I"" )  ;      }     FTP Reply r = communication . read FTP Reply (  )  ;      touch Auto Noop Timer (  )  ;      if  ( !r . is Success Code (  )  )  {         throw new FTP Exception ( r )  ;      }     //  Prepares the connection for the data transfer .      FTP Data Transfer Connection Provider provider = open Data Transfer Channel (  )  ;      // REST command  ( if supported and/or requested )  .      if  ( rest Supported || restart At > 0 )  {         boolean done = false ;          try {             communication . send FTP Command ( ""REST "" + restart At )  ;              r = communication . read FTP Reply (  )  ;              touch Auto Noop Timer (  )  ;              if  ( r . get Code (  )  != 350 &&  (  ( r . get Code (  )  != 501 && r . get Code (  )  != 502 )  || restart At > 0 )  )  {                 throw new FTP Exception ( r )  ;              }             done = true ;          } finally {             if  ( !done )  {                 provider . dispose (  )  ;              }         }     }     //  Local abort state .      boolean was Aborted = false ;      //  Send the RETR command .      communication . send FTP Command ( ""RETR "" + file Name )  ;      try {          Socket dt Connection ;          try {             dt Connection = provider . open Data Transfer Connection (  )  ;          } finally {             provider . dispose (  )  ;          }         //  Change the operation status .          synchronized  ( abort Lock )  {             ongoing Data Transfer = true ;              aborted = false ;              consume Abor Command Reply = false ;          }         //  Download the stream .          try {             //  Opens the data transfer connection .              data Transfer Input Stream = dt Connection . get Input Stream (  )  ;              // MODE Z enabled?             if  ( modez Enabled )  {                 data Transfer Input Stream = new  Inflater Input Stream ( data Transfer Input Stream )  ;              }             //  Listeners .              if  ( listener != null )  {                 listener . started (  )  ;              }             //  Let's do it!             if  ( tp == TYPE_TEXTUAL )  {                  Reader reader = new  Input Stream Reader ( data Transfer Input Stream, pick Charset (  )  )  ;                   Writer writer = new  Output Stream Writer ( output Stream )  ;                  char [  ]  buffer = new char [ SEND_AND_RECEIVE_BUFFER_SIZE ]  ;                  int l ;                  while  (  ( l = reader . read ( buffer, 0, buffer . length )  )  != -1 )  {                     writer . write ( buffer, 0, l )  ;                      writer . flush (  )  ;                      if  ( listener != null )  {                         listener . transferred ( l )  ;                      }                 }             } else if  ( tp == TYPE_BINARY )  {                 byte [  ]  buffer = new byte [ SEND_AND_RECEIVE_BUFFER_SIZE ]  ;                  int l ;                  while  (  ( l = data Transfer Input Stream . read ( buffer, 0, buffer . length )  )  != -1 )  {                     output Stream . write ( buffer, 0, l )  ;                      if  ( listener != null )  {                         listener . transferred ( l )  ;                      }                 }             }         } catch  ( IO Exception e )  {             synchronized  ( abort Lock )  {                 if  ( aborted )  {                     if  ( listener != null )  {                         listener . aborted (  )  ;                      }                     throw new FTP Aborted Exception (  )  ;                  } else {                     if  ( listener != null )  {                         listener . failed (  )  ;                      }                     throw new FTP Data Transfer Exception ( ""I/O error in data transfer"", e )  ;                  }             }         } finally {             //  Closing stream and data connection .              if  ( data Transfer Input Stream != null )  {                 try {                     data Transfer Input Stream . close (  )  ;                  } catch  (  Throwable t )  {                      ;                  }             }             try {                 dt Connection . close (  )  ;              } catch  (  Throwable t )  {                  ;              }             //  Set to null the instance-level input stream .              data Transfer Input Stream = null ;              //  Change the operation status .              synchronized  ( abort Lock )  {                 was Aborted = aborted ;                  ongoing Data Transfer = false ;                  aborted = false ;              }         }     } finally {         r = communication . read FTP Reply (  )  ;          touch Auto Noop Timer (  )  ;          if  ( r . get Code (  )  != 150 && r . get Code (  )  != 125 )  {             throw new FTP Exception ( r )  ;          }         //  Consumes the result reply of the transfer .          r = communication . read FTP Reply (  )  ;          if  ( !was Aborted && r . get Code (  )  != 226 )  {             throw new FTP Exception ( r )  ;          }         // ABOR command response  ( if needed )  .          if  ( consume Abor Command Reply )  {             communication . read FTP Reply (  )  ;              consume Abor Command Reply = false ;          }     }     //  Notifies the listener .      if  ( listener != null )  {         listener . completed (  )  ;      } }}"
24,"public com . anychart . core . annotations .  Fibonacci Timezones min Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", height )  )  ;  return this ; }"
25,"public static  Build Target get Target Platform Binary (  Optional< Build Target> binary,  Optional< Pattern Matched Collection< Build Target>> platform Binary,  Flavor cxx Platform Flavor ) {  String target Platform = cxx Platform Flavor . to String (  )  ;  return platform Binary . flat Map (  pb -> get Platform Matching Binary ( target Platform, pb )  )  . or Else Get (  (  )  -> binary . or Else Throw (  (  )  -> new  Human Readable Exception ( "" Binary matching target platform "" + target Platform + "" cannot be found and binary default is not specified . \n"" + "" Please refer to https://buck . build/rule/apple_bundle . html#binary for "" + ""more details . "" )  )  )  ; }"
26,"protected int size Of (  String key,  Bitmap bitmap ) { final int bitmap Size = get Bitmap Size ( bitmap )  / 1024 ;  return bitmap Size == 0 ? 1 : bitmap Size ; }"
27,public void set CRC ( int crc32 ) { crc = crc32 ; }
28,"public void even Holiday Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . even Holiday Fill (  )  ; "" )  ; }"
29,"public void append (  String name,  Rev Commit commit ) { append ( name, GITLINK, commit )  ; }"
30,"public  Factory set Live Presentation Delay Ms ( long live Presentation Delay Ms ) { if  ( live Presentation Delay Ms == DEFAULT_LIVE_PRESENTATION_DELAY_PREFER_MANIFEST_MS )  {     return set Live Presentation Delay Ms ( DEFAULT_LIVE_PRESENTATION_DELAY_MS, false )  ;  } else {     return set Live Presentation Delay Ms ( live Presentation Delay Ms, true )  ;  }}"
31,"private  Method Spec absent Optional Provider Method (  Optional Kind optional Kind ) {  Type Variable Name type Variable =  Type Variable Name . get ( ""T"" )  ;  return method Builder (  String . format ( ""absent%s Provider"", UPPER_UNDERSCORE . to ( UPPER_CAMEL, optional Kind . name (  )  )  )  )  . add Modifiers ( PRIVATE, STATIC )  . add Type Variable ( type Variable )  . returns ( provider Of ( optional Kind . of ( type Variable )  )  )  . add Javadoc ( "" Returns a {@link $T} that returns {@code $L} . "",  Provider . class, optional Kind . absent Value Expression (  )  )  . add Code ( ""$L // safe covariant cast\n"",  Annotation Specs . suppress Warnings ( UNCHECKED )  )  . add Code ( ""$1 T provider =  ( $1 T )  $2 N ; "", provider Of ( optional Kind . of ( type Variable )  ) , per Generated File Cache . absent Optional Provider Fields . compute If Absent ( optional Kind,  kind -> {      Field Spec field = absent Optional Provider Field ( kind )  ;      component Implementation . add Field ( ABSENT_OPTIONAL_FIELD, field )  ;      return field ;  } )  )  . add Code ( ""return provider ; "" )  . build (  )  ; }"
32,"public com . anychart . charts .  Gantt min Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", width )  )  ;  return this ; }"
33,"public  Async Operation insert In Tx (  Class<E> entity Class, E .  .  .  entities ) { return insert In Tx ( entity Class, 0, entities )  ; }"
34,public  Fragment Animator on Create Fragment Animator (  ) { return m Delegate . on Create Fragment Animator (  )  ; }
35,public  Provisioned Mesh Node get Node ( @ Non Null final byte [  ]  unicast Address ) { for  (  Provisioned Mesh Node node : nodes )  {     if  ( node . has Unicast Address (  Mesh Address . address Bytes To Int ( unicast Address )  )  )  {         return node ;      } } return null ; }
36,public int get Max Size (  ) { return max Size ; }
37,"public com . anychart . core . stock . indicators . B Bands bbands ( com . anychart . data .  Table Mapping mapping,  Number period,  Number deviation,  String middle Series Type,  String upper Series Type, com . anychart . enums .  Stock Series Type lower Series Type ) { return new com . anychart . core . stock . indicators . B Bands (  String . format (  Locale . US, js Base + "" . bbands ( %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, period, deviation, wrap Quotes ( middle Series Type ) , wrap Quotes ( upper Series Type ) ,  ( lower Series Type != null )  ? lower Series Type . get Js Base (  )  : null )  )  ; }"
38,"public void keep Only Points (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . keep Only Points ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ; }"
39,"public com . anychart . charts .  Waterfall max Labels (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Labels ( %s )  ; "", settings )  )  ;  return this ; }"
40,"void test Elf Blacksmith With Short Sword (  ) { var blacksmith = new  Elf Blacksmith (  )  ;  var weapon = blacksmith . manufacture Weapon (  Weapon Type . SHORT_SWORD )  ;  verify Weapon ( weapon,  Weapon Type . SHORT_SWORD,  Elf Weapon . class )  ; }"
41,public boolean visible From (  Ct Class clazz ) { int mod = get Modifiers (  )  ;  if  (  Modifier . is Public ( mod )  )      return true ;  else if  (  Modifier . is Private ( mod )  )      return clazz == declaring Class ;  else {     // package or protected      String decl Name = declaring Class . get Package Name (  )  ;       String from Name = clazz . get Package Name (  )  ;      boolean visible ;      if  ( decl Name == null )          visible = from Name == null ;      else         visible = decl Name . equals ( from Name )  ;      if  ( !visible &&  Modifier . is Protected ( mod )  )          return clazz . subclass Of ( declaring Class )  ;      return visible ;  }}
42,"public final  String get Package Name (  ) {  String qname = qualified Name ;  int index = qname . last Index Of ( ' . ' )  ;  if  ( index < 0 )      return null ;  return qname . substring ( 0, index )  ; }"
43,"public void save Frame ( final  File file, final boolean high, final GSY Video Shot Save Listener gsy Video Shot Save Listener ) { GSY Video Shot Listener gsy Video Shot Listener = new GSY Video Shot Listener (  )  {     @ Override     public void get Bitmap (  Bitmap bitmap )  {         if  ( bitmap == null )  {             gsy Video Shot Save Listener . result ( false, file )  ;          } else {              File Utils . save Bitmap ( bitmap, file )  ;              gsy Video Shot Save Listener . result ( true, file )  ;          }     } } ;  if  ( high )  {     gsy Video Shot Listener . get Bitmap ( init Cover High (  )  )  ;  } else {     gsy Video Shot Listener . get Bitmap ( init Cover (  )  )  ;  }}"
44,public static void set Allow Invalid Image Data ( boolean allow Invalid Image Data ) {  Shadow Bitmap Factory . allow Invalid Image Data = allow Invalid Image Data ; }
45,public void set Start After Prepared ( boolean start After Prepared ) { this . m Start After Prepared = start After Prepared ; }
46,public  String get Error Code (  ) { return super . get Error Code (  )  ; }
47,"public void bottom (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . bottom (  )  ; "" )  ; }"
48,public  Paginate Builder set On Load More Listener (  On Load More Listener load More Listener ) { this . load More Listener = load More Listener ;  return this ; }
49,"public void print Stack Trace (  Print Writer s ) { super . print Stack Trace ( s )  ;  if  (  Jaxen Exception . java Version < 1 . 4 && get Cause (  )  != null )  {     s . print ( "" Caused by: "" )  ;      get Cause (  )  . print Stack Trace ( s )  ;  }}"
50,public final  Type get Type (  ) { return prototype . get Return Type (  )  ; }
51,"public  Write Batch delete ( @ Non Null  Document Reference document Ref ) { firestore . validate Reference ( document Ref )  ;  verify Not Committed (  )  ;  mutations . add ( new  Delete Mutation ( document Ref . get Key (  ) ,  Precondition . NONE )  )  ;  return this ; }"
52,public  Builder set Draw Debug Overlay ( boolean draw Debug Overlay ) { return set Debug Overlay Enabled Supplier (  Suppliers . of ( draw Debug Overlay )  )  ; }
53,"public com . anychart . charts .  Radar hovered (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hovered ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
54,"public static long get Whole Number (  Object value ) { long number ;  if  ( value instanceof  String )  {     number =  Long . parse Long (  (  String )  value )  ;  } else if  ( value instanceof  Byte )  {     number =  (  Byte )  value ;  } else if  ( value instanceof  Short )  {     number =  (  Short )  value ;  } else if  ( value instanceof  Integer )  {     number =  (  Integer )  value ;  } else if  ( value instanceof  Long )  {     number =  (  Long )  value ;  } else {     throw new  Illegal Argument Exception ( "" Unsupported value class: "" + value . get Class (  )  . get Name (  )  )  ;  } return number ; }"
55,public int get Element Address (  ) { return m Element Address ; }
56,public  Stats x Stats (  ) { return x Stats ; }
57,On Card Selected get On Card Selected Listener (  ) { return m On Card Selected Listener ; }
58,public synchronized  True Time with Shared Preferences Cache (  Context context ) { DISK_CACHE_CLIENT . enable Cache Interface ( new  Shared Preference Cache Impl ( context )  )  ;  return INSTANCE ; }
59,public void start Tracking (  ) { if  ( is Tracking )  {     return ;  } add Broadcast Receiver (  )  ;  is Tracking = true ; }
60,public static void register Listener (  Object Context Listener listener ) { all Contexts Listeners . add ( listener )  ; }
61,"public com . anychart . graphics . vector .  Hatch Fill item At (  Number index ) { return new com . anychart . graphics . vector .  Hatch Fill (  String . format (  Locale . US, js Base + "" . item At ( %s ) "", index )  )  ; }"
62,"public  True Type Table get Table (  String tag String ) {  Object table Obj = tables . get ( tag String )  ;   True Type Table table = null ;  if  ( table Obj instanceof  Byte Buffer )  {     // the table has not yet been parsed .    Parse it, and add the     // parsed version to the map of tables .       Byte Buffer data =  (  Byte Buffer )  table Obj ;      table =  True Type Table . create Table ( this, tag String, data )  ;      add Table ( tag String, table )  ;  } else {     table =  (  True Type Table )  table Obj ;  } return table ; }"
63,"public com . anychart . core . stock . indicators .  Price Channels middle Series (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . middle Series ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
64,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
65,"public com . anychart . core . utils .  Interactivity interactivity (  ) { return new com . anychart . core . utils .  Interactivity ( js Base + "" . interactivity (  ) "" )  ; }"
66,"public void anchor (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . anchor (  )  ; "" )  ; }"
67,"public  Parcel File Descriptor open File (  Uri uri,  String mode )  throws  File Not Found Exception{ //  Content Provider has already checked granted permissions final  File file = m Strategy . get File For Uri ( uri )  ;  final int file Mode = mode To Mode ( mode )  ;  return  Parcel File Descriptor . open ( file, file Mode )  ; }"
68,"public com . anychart . core . stock .  Plot price Indicator (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . price Indicator ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
69,"public com . anychart . charts .  Sparkline max Fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
70,"public void reload All Classes (  )  throws  Class Path Exception{  Bsh Class Path bcp = new  Bsh Class Path ( ""temp"" )  ;  bcp . add Component ( base Class Path )  ;  bcp . add Component (  Bsh Class Path . get User Class Path (  )  )  ;  set Class Path ( bcp . get Path Components (  )  )  ; }"
71,"public  Multimap With Proto Values Fluent Assertion<M> using Double Tolerance For Field Descriptors For Values ( double tolerance,  Field Descriptor first Field Descriptor,  Field Descriptor .  .  .  rest ) { return using Config ( config . using Double Tolerance For Field Descriptors ( tolerance, as List ( first Field Descriptor, rest )  )  )  ; }"
72,"public static float [  ]  convert Doubles To Floats ( double [  ]  input, float [  ]  output ) { if  ( input == null || output == null )      return output ;  for  ( int i = 0 ;  i < input . length ;  ++i )  {     output [ i ]  =  ( float )  input [ i ]  ;  } return output ; }"
73,public void set Adapter (  Adapter adapter ) { super . set Adapter ( adapter )  ;  touch Listener . reset Items (  )  ;  //        adapter . register Data Set Observer ( new  Data Set Observer (  )  { // //            @ Override //            public void on Changed (  )  { //                super . on Changed (  )  ;  //                on List Changed (  )  ;  //                touch Listener . reset Items (  )  ;  //            } //        } )  ;  adapter . register Adapter Data Observer ( new  Adapter Data Observer (  )  {     @ Override     public void on Changed (  )  {         super . on Changed (  )  ;          on List Changed (  )  ;          touch Listener . reset Items (  )  ;      } } )  ; }
74,public  List< Address Array> get Addresses (  ) { return addresses ; }
75,"public  Ttml Style inherit (  Ttml Style ancestor ) { return inherit ( ancestor, false )  ; }"
76,public  Date get Modified Date (  ) { return modified Date ; }
77,"public T load (  Class<T> entity Class, K key ) { @ Suppress Warnings ( ""unchecked"" )   Abstract Dao<T, K> dao =  (  Abstract Dao<T, K> )  get Dao ( entity Class )  ;  return dao . load ( key )  ; }"
78,public void set Monitor Notifier ( @ Nullable  Monitor Notifier notifier ) { if  ( determine If Called From Separate Scanner Process (  )  )  {     return ;  } monitor Notifiers . clear (  )  ;  if  ( null != notifier )  {     add Monitor Notifier ( notifier )  ;  }}
79,"public  Properties get Statistics (  )  throws  Git API Exception{ try {     if  ( repo instanceof  File Repository )  {         GC gc = new GC (  (  File Repository )  repo )  ;          return to Properties ( gc . get Statistics (  )  )  ;      }     return new  Properties (  )  ;  } catch  ( IO Exception e )  {     throw new J Git Internal Exception ( J Git Text . get (  )  . could Not Get Repo Statistics, e )  ;  }}"
80,"public static  Animated Sprite from Frames (  Resources resources, int [  ]  ids ) { int sample Size = last Used Sample Size ;   Bitmap [  ]  frames = new  Bitmap [ ids . length ]  ;  for  ( int i = 0 ;  i < ids . length ;  i++ )  {      Pair< Bitmap,  Integer> pair = get Bitmap From Cache ( ids [ i ] , 0 )  ;      if  ( pair != null )  {         frames [ i ]  = pair . first ;          sample Size = pair . second ;      }     if  ( frames [ i ]  == null )  {         final  Bitmap Factory .  Options options = new  Bitmap Factory .  Options (  )  ;          for  ( int tries = 0 ;  tries < NUM_TRIES_TO_LOAD_FROM_MEMORY ;  tries++ )  {             try {                 //  Decode bitmap with in Sample Size set                 options . in Sample Size = sample Size ;                  frames [ i ]  =  Bitmap Factory . decode Resource ( resources, ids [ i ] , options )  ;              } catch  (  Out Of Memory Error oom )  {                 sample Size *= 2 ;                   Santa Log . d ( TAG, ""loading failed, trying sample Size: "" + sample Size, oom )  ;              }         }         put Bitmap In Cache ( frames [ i ] , ids [ i ] , 0, sample Size )  ;      } } return new  Animated Sprite ( frames, sample Size )  ; }"
81,"public  Entry_ Updater update Entry (  ) { return new  Entry_ Updater ( connection,  Entry_ Schema . INSTANCE )  ; }"
82,"public com . anychart . core . annotations .  Infinite Line stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
83,public void set Touchable (  Touchable touchable ) { this . touchable = touchable ; }
84,"protected byte [  ]  id Submodule (  Entry e ) { if  ( repository == null )      return zeroid ;   File directory ;  try {     directory = repository . get Work Tree (  )  ;  } catch  (  No Work Tree Exception nwte )  {     return zeroid ;  } return id Submodule ( directory, e )  ; }"
85,"public static void put ( @ Non Null final  String key, final  String value, final int save Time ) { put ( key, value, save Time, get Default Cache Double Utils (  )  )  ; }"
86,"public void transform (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . transform ( %s )  ; "", wrap Quotes ( value )  )  )  ; }"
87,public boolean can Replace With (  Dimension Status status ) { return ordinal < status . ordinal ||  (  ( !notified ||  Code Exact == this )  && ordinal == status . ordinal )  ; }
88,"public com . anychart . core .  State Settings low Hatch Fill (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Hatch Fill ( %s )  ; "", enabled )  )  ;  return this ; }"
89,"public  String file Name For Secondary ( APK Module module, int index ) { return file Name For Secondary ( module, index ( index )  )  ; }"
90,public float get Width (  ) { return bounds . width (  )  * scale ; }
91,"public void remove Listener ( @ Non Null final  Ui Message Callback listener ) { synchronized  ( m Listeners Universal )  {     if  ( DEBUG && !m Listeners Universal . contains ( listener )  )  {          Log . w ( TAG, "" Trying to remove a listener that is not registered .  "" + listener . to String (  )  )  ;      }     m Listeners Universal . remove ( listener )  ;  }}"
92,public void set Draggable Manager ( @ Non Null final  Draggable Manager draggable Manager ) { if  ( m Drag And Drop Handler != null )  {     m Drag And Drop Handler . set Draggable Manager ( draggable Manager )  ;  }}
93,public  Observable<T> unique (  ) { return wrap ( new  Callable<T> (  )  {     @ Override     public T call (  )  throws  Exception {         return query . for Current Thread (  )  . unique (  )  ;      } } )  ; }
94,"void one Exception (  ) { var find Customer = new  Find Customer ( ""123"", new  Business Exception ( ""test"" )  )  ;  assert Throws (  Business Exception . class, find Customer::perform )  ; }"
95,public int get Inner Padding Right (  ) { return inner Padding Right ; }
96,"public boolean start Activity For Result (  Activity activity,  Intent intent, int request Code,  Bundle options ) {  String plugin = get Plugin Name ( activity, intent )  ;  if  ( LOG )  {      Log Debug . d ( PLUGIN_TAG, ""start activity with start Activity For Result: intent="" + intent )  ;  } if  (  Text Utils . is Empty ( plugin )  )  {     return false ;  }  Component Name cn = intent . get Component (  )  ;  if  ( cn == null )  {     return false ;  }  String name = cn . get Class Name (  )  ;   Component Name cn New = load Plugin Activity ( intent, plugin, name, I Plugin Manager . PROCESS_AUTO )  ;  if  ( cn New == null )  {     return false ;  } intent . set Component ( cn New )  ;  if  (  Build . VERSION . SDK_INT >= 16 )  {     activity . start Activity For Result ( intent, request Code, options )  ;  } else {     activity . start Activity For Result ( intent, request Code )  ;  } return true ; }"
97,"public com . anychart . core . gauge . pointers .  Knob hatch Fill ( com . anychart . graphics . vector . hatchfill .  Hatch Fill Type type,  String color,  Number thickness,  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s, %s, %s, %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null, wrap Quotes ( color ) , thickness, size )  )  ;  return this ; }"
98,public int get Background Color (  ) { return m Background Color ; }
99,"public boolean is Remote Media Loaded (  )  throws  Transient Network Disconnection Exception,  No Connection Exception{ check Connectivity (  )  ;  return is Remote Movie Paused (  )  || is Remote Movie Playing (  )  ; }"
100,public  Media Period Info get Media Period Info (  Media Period Id media Period Id ) { return media Period Id To Info . get ( media Period Id )  ; }
101,"public void add Property (  String property,  Number value ) { add ( property, value == null ?  Json Null . INSTANCE : new  Json Primitive ( value )  )  ; }"
102,"public void test000_openrepo_default_git Dir Set (  )  throws IO Exception{  File repo1 Parent = new  File ( trash . get Parent File (  ) , ""r1"" )  ;  try  (  Repository repo1initial = new  File Repository ( new  File ( repo1 Parent,  Constants . DOT_GIT )  )  )  {     repo1initial . create (  )  ;  }  File the Dir = new  File ( repo1 Parent,  Constants . DOT_GIT )  ;  try  (  File Repository r =  (  File Repository )  new  File Repository Builder (  )  . set Git Dir ( the Dir )  . build (  )  )  {     assert Equals Path ( the Dir, r . get Directory (  )  )  ;      assert Equals Path ( repo1 Parent, r . get Work Tree (  )  )  ;      assert Equals Path ( new  File ( the Dir, ""index"" ) , r . get Index File (  )  )  ;      assert Equals Path ( new  File ( the Dir,  Constants . OBJECTS ) , r . get Object Database (  )  . get Directory (  )  )  ;  }}"
103,"public void parse (  String recur ) { /*      *  From RFC 2445 section 4 . 3 . 10:      *      * recur = ""FREQ""=freq * (       *        ;  either UNTIL or COUNT may appear in a 'recur',      *        ;  but UNTIL and COUNT MUST NOT occur in the same 'recur'      *      *        (  "" ; "" ""UNTIL"" ""="" enddate  )  /      *        (  "" ; "" ""COUNT"" ""="" 1*DIGIT  )  /      *      *        ;  the rest of these keywords are optional,      *        ;  but MUST NOT occur more than once      *      *        (  "" ; "" ""INTERVAL"" ""="" 1*DIGIT  )           /      *        (  "" ; "" ""BYSECOND"" ""="" byseclist  )         /      *        (  "" ; "" ""BYMINUTE"" ""="" byminlist  )         /      *        (  "" ; "" ""BYHOUR"" ""="" byhrlist  )            /      *        (  "" ; "" ""BYDAY"" ""="" bywdaylist  )           /      *        (  "" ; "" ""BYMONTHDAY"" ""="" bymodaylist  )     /      *        (  "" ; "" ""BYYEARDAY"" ""="" byyrdaylist  )      /      *        (  "" ; "" ""BYWEEKNO"" ""="" bywknolist  )        /      *        (  "" ; "" ""BYMONTH"" ""="" bymolist  )           /      *        (  "" ; "" ""BYSETPOS"" ""="" bysplist  )          /      *        (  "" ; "" ""WKST"" ""="" weekday  )               /      *        (  "" ; "" x-name ""="" text  )       *        )       *      *   The rule parts are not ordered in any particular sequence .       *      *  Examples:      *   FREQ=MONTHLY ; INTERVAL=2 ; COUNT=10 ; BYDAY=1 SU,-1 SU      *   FREQ=YEARLY ; INTERVAL=4 ; BYMONTH=11 ; BYDAY=TU ; BYMONTHDAY=2,3,4,5,6,7,8      *      *  Strategy:      *  ( 1 )   Split the string at ' ; ' boundaries to get an array of rule ""parts"" .       *  ( 2 )   For each part, find substrings for left/right sides of '='  ( name/value )  .       *  ( 3 )   Call a <name>-specific parsing function to parse the <value> into an      *     output field .       *      *  By keeping track of which names we've seen in a bit vector, we can verify the      * constraints indicated above  ( FREQ appears first, none of them appear more than once --      * though x- [ name ]  would require special treatment ) , and we have either UNTIL or COUNT      * but not both .       *      *  In general, RFC 2445 property names  ( e . g .  ""FREQ"" )  and enumerations  ( ""TU"" )  must      * be handled in a case-insensitive fashion, but case may be significant for other      * properties .    We don't have any case-sensitive values in RRULE, except possibly      * for the custom ""X-"" properties, but we ignore those anyway .    Thus, we can trivially      * convert the entire string to upper case and then use simple comparisons .       *      *  Differences from previous version:      * - allows lower-case property and enumeration values  [ optional ]       * - enforces that FREQ appears first      * - enforces that only one of UNTIL and COUNT may be specified      * - allows  ( but ignores )  X-* parts      * - improved validation on various values  ( e . g .  UNTIL timestamps )       * - error messages are more specific      *      * TODO: enforce additional constraints listed in RFC 5545, notably the ""N/A"" entries      * in section 3 . 3 . 10 .    For example, if FREQ=WEEKLY, we should reject a rule that      * includes a BYMONTHDAY part .       */ /* TODO: replace with ""if  ( freq != 0 )  throw"" if nothing requires this */ reset Fields (  )  ;  int parse Flags = 0 ;   String [  ]  parts ;  if  ( ALLOW_LOWER_CASE )  {     parts = recur . to Upper Case (  )  . split ( "" ; "" )  ;  } else {     parts = recur . split ( "" ; "" )  ;  } for  (  String part : parts )  {     // allow empty part  ( e . g . , double semicolon "" ;  ; "" )      if  (  Text Utils . is Empty ( part )  )  {         continue ;      }     int equal Index = part . index Of ( '=' )  ;      if  ( equal Index <= 0 )  {         /* no '=' or no LHS */         throw new  Invalid Format Exception ( "" Missing LHS in "" + part )  ;      }      String lhs = part . substring ( 0, equal Index )  ;       String rhs = part . substring ( equal Index + 1 )  ;      if  ( rhs . length (  )  == 0 )  {         throw new  Invalid Format Exception ( "" Missing RHS in "" + part )  ;      }     /*          *  In lieu of a ""switch"" statement that allows string arguments, we use a          * map from strings to parsing functions .           */      Part Parser parser = s Parse Part Map . get ( lhs )  ;      if  ( parser == null )  {         if  ( lhs . starts With ( ""X-"" )  )  {             // Log . d ( TAG, "" Ignoring custom part "" + lhs )  ;              continue ;          }         throw new  Invalid Format Exception ( "" Couldn't find parser for "" + lhs )  ;      } else {         int flag = parser . parse Part ( rhs, this )  ;          if  (  ( parse Flags & flag )  != 0 )  {             throw new  Invalid Format Exception ( "" Part "" + lhs + "" was specified twice"" )  ;          }         parse Flags |= flag ;      } } //  If not specified, week starts on  Monday .  if  (  ( parse Flags & PARSED_WKST )  == 0 )  {     wkst = MO ;  } // FREQ is mandatory .  if  (  ( parse Flags & PARSED_FREQ )  == 0 )  {     throw new  Invalid Format Exception ( "" Must specify a FREQ value"" )  ;  } //  Can't have both UNTIL and COUNT .  if  (  ( parse Flags &  ( PARSED_UNTIL | PARSED_COUNT )  )  ==  ( PARSED_UNTIL | PARSED_COUNT )  )  {     if  ( ONLY_ONE_UNTIL_COUNT )  {         throw new  Invalid Format Exception ( "" Must not specify both UNTIL and COUNT: "" + recur )  ;      } else {          Log . w ( TAG, "" Warning: rrule has both UNTIL and COUNT: "" + recur )  ;      } }}"
104,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
105,public static  Generic Transition Options< Transcode Type> with ( int view Animation Id ) { return new  Generic Transition Options< Transcode Type> (  )  . transition ( view Animation Id )  ; }
106,public PDF Object get Font File3 (  ) { return this . font File3 ; }
107,"public static boolean get Debuggable ( @ Non Null I Abstract File manifest File )  throws  Stream Exception{  String value = get String Value ( manifest File, ""/"" + NODE_MANIFEST + ""/"" + NODE_APPLICATION + ""/@"" +  Android X Path Factory . DEFAULT_NS_PREFIX + "":"" + ATTRIBUTE_DEBUGGABLE )  ;  // default is not debuggable, which is the same behavior as parse Boolean return  Boolean . parse Boolean ( value )  ; }"
108,public  Epoxy Model<?> get Model At Position ( int position ) { return get Current Models (  )  . get ( position )  ; }
109,public  Long Buffer put (  Long Buffer src ) { if  ( src == this )  {     throw new  Illegal Argument Exception (  )  ;  } if  ( src . remaining (  )  > remaining (  )  )  {     throw new  Buffer Overflow Exception (  )  ;  } long [  ]  contents = new long [ src . remaining (  )  ]  ;  src . get ( contents )  ;  put ( contents )  ;  return this ; }
110,public  List< View> get Bottom Views (  ) {  Array List< View> bottoms = new  Array List< View> (  )  ;  for  (  Drag Edge drag Edge :  Drag Edge . values (  )  )  {     bottoms . add ( m Drag Edges . get ( drag Edge )  )  ;  } return bottoms ; }
111,"public synchronized T get (  String file Name,  Class<T> type, boolean required ) {  Object Map< String,  Ref Counted Container> assets By Type = assets . get ( type )  ;  if  ( assets By Type != null )  {      Ref Counted Container asset Container = assets By Type . get ( file Name )  ;      if  ( asset Container != null )          return  ( T )  asset Container . object ;  } if  ( required )      throw new  Gdx Runtime Exception ( "" Asset not loaded: "" + file Name )  ;  return null ; }"
112,"private synchronized void return Pressed (  ) {  Document doc = get Document (  )  ;  int len = doc . get Length (  )  ;   Segment segment = new  Segment (  )  ;  try {     doc . get Text ( output Mark, len - output Mark, segment )  ;  } catch  ( javax . swing . text .  Bad Location Exception ignored )  {     ignored . print Stack Trace (  )  ;  }  String text = segment . to String (  )  ;  if  ( debug Gui . dim . string Is Compilable Unit ( text )  )  {     if  ( text . trim (  )  . length (  )  > 0 )  {         history . add ( text )  ;          history Index = history . size (  )  ;      }     append ( ""\n"" )  ;       String result = debug Gui . dim . eval ( text )  ;      if  ( result . length (  )  > 0 )  {         append ( result )  ;          append ( ""\n"" )  ;      }     append ( ""% "" )  ;      output Mark = doc . get Length (  )  ;  } else {     append ( ""\n"" )  ;  }}"
113,"public  String get File Content (  Context context,  String file Name,  String file Encoding ) { //  Reading json file from assets folder  String Buffer sb = new  String Buffer (  )  ;   Buffered Reader br = null ;  try {     br = new  Buffered Reader ( new  Input Stream Reader ( context . get Assets (  )  . open ( file Name ) , file Encoding )  )  ;       String temp ;      while  (  ( temp = br . read Line (  )  )  != null )  sb . append ( temp )  ;  } catch  ( IO Exception e )  {      Timber . e ( e )  ;  } finally {     try {         // stop reading         br . close (  )  ;      } catch  ( IO Exception e )  {          Timber . e ( e )  ;      } } return sb . to String (  )  ; }"
114,public  Request Builder< Drawable> load ( @ Nullable  Drawable drawable ) { return as Drawable (  )  . load ( drawable )  ; }
115,"public  Prop Groups View Model_ something Else ( @ Non Null  Char Sequence something Else ) { if  ( something Else == null )  {     throw new  Illegal Argument Exception ( ""something Else cannot be null"" )  ;  } assigned Attributes_epoxy Generated Model . set ( 2 )  ;  assigned Attributes_epoxy Generated Model . clear ( 3 )  ;  this . something Else_ Int = 0 ;  on Mutation (  )  ;  this . something Else_ Char Sequence = something Else ;  return this ; }"
116,"public static void unmount Component (  Litho View litho View ) { if  ( !litho View . is Incremental Mount Enabled (  )  )  {     throw new  Illegal Argument Exception ( "" In order to test unmounting a  Component, it needs to be mounted with "" + ""incremental mount enabled .   Please use a mount Component (  )  variation that "" + ""accepts an incremental Mount Enabled argument"" )  ;  } //  Unmounting the component by running incremental mount to a  Rect that we certain won't // contain the component .   Rect rect = new  Rect ( 99999, 99999, 999999, 999999 )  ;  litho View . notify Visible Bounds Changed ( rect, true )  ; }"
117,"public  Notification create Default Notification (  ) {  Notification notification = null ;  if  ( android . os .  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . JELLY_BEAN )  {     notification = new  Notification .  Builder ( this )  . set Small Icon ( get Application Info (  )  . icon )  . build (  )  ;  } else if  ( android . os .  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . HONEYCOMB )  {     notification = new  Notification .  Builder ( this )  . set Small Icon ( get Application Info (  )  . icon )  . get Notification (  )  ;  } else {     notification = new  Notification (  )  ;      notification . icon = get Application Info (  )  . icon ;      // temporary fix https://github . com/octo-online/robospice/issues/200      Pending Intent pending Intent =  Pending Intent . get Activity ( get Application Context (  ) , 0, new  Intent (  ) , 0 )  ;      notification . set Latest Event Info ( this, """", """", pending Intent )  ;      notification . ticker Text = null ;      notification . when =  System . current Time Millis (  )  ;  } if  ( android . os .  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . JELLY_BEAN )  {     notification . priority =  Notification . PRIORITY_MIN ;  } return notification ; }"
118,"public static  Default Drm Session Manager< Framework Media Crypto> new Play Ready Instance (  Media Drm Callback callback, @ Nullable  String custom Data )  throws  Unsupported Drm Exception{  Hash Map< String,  String> optional Key Request Parameters ;  if  ( ! Text Utils . is Empty ( custom Data )  )  {     optional Key Request Parameters = new  Hash Map<> (  )  ;      optional Key Request Parameters . put ( PLAYREADY_CUSTOM_DATA_KEY, custom Data )  ;  } else {     optional Key Request Parameters = null ;  } return new Framework Instance ( C . PLAYREADY_UUID, callback, optional Key Request Parameters )  ; }"
119,public void on File System Change (  Watchman Overflow Event event ) { file Tree Cache . cache = new  Concurrent Hash Map<> (  )  ; }
120,"public com . anychart . core . ui .  Labels Factory lower Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . lower Labels (  ) "" )  ; }"
121,public void set Title Text (  String text ) {  Text View tv Title =  (  Text View )  find View By Id ( R . id . tv Title )  ;  if  ( tv Title != null )  {     tv Title . set Text ( text )  ;  }}
122,public  String get Refresh Token (  ) { return m Refresh Token ; }
123,"private URL find Config File From System Properties ( boolean update Status ) {  String logback Config File =  Option Helper . get System Property ( CONFIG_FILE_PROPERTY )  ;  if  ( logback Config File != null )  {     URL result = null ;      try {          File file = new  File ( logback Config File )  ;          if  ( file . exists (  )  && file . is File (  )  )  {             if  ( update Status )  {                 status On Resource Search ( logback Config File, this . class Loader, logback Config File )  ;              }             result = file . to URI (  )  . to URL (  )  ;          } else {             result = new URL ( logback Config File )  ;          }         return result ;      } catch  (  Malformed URL Exception e )  {         // so, resource is not a URL:         // attempt to get the resource from the class path         result =  Loader . get Resource ( logback Config File, this . class Loader )  ;          if  ( result != null )  {             return result ;          }     } finally {         if  ( update Status )  {             status On Resource Search ( logback Config File, this . class Loader, result != null ? result . to String (  )  : null )  ;          }     } } return null ; }"
124,public int get Column (  ) { return m Source File Positions . get ( 0 )  . get Position (  )  . get Start Column (  )  + 1 ; }
125,public  String resolve Adb Executable (  ) { return buck Executable Settings Provider . resolve Adb Executable (  )  ; }
126,"public  Map< Class<?>,  Serialize Filter> get Class Serialize Filters (  ) { return class Serialize Filters ; }"
127,public  Provider Info Collection get Provider Infos (  ) { return provider Info Collection ; }
128,"public void set Scale ( double sx, double sy, double sz ) { scale . set All ( sx, sy, sz )  ; }"
129,"public com . anychart . standalones .  Title use Html (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . use Html ( %s )  ; "", enabled )  )  ;  return this ; }"
130,public void set Second Position Visible (  ) { if  ( get Adapter (  )  != null && get Adapter (  )  . get Count (  )  > 0 && get First Visible Position (  )  == 0 )  {     set Selection ( 1 )  ;  }}
131,"public static _ Fields find By Thrift Id Or Throw ( int field Id ) { _ Fields fields = find By Thrift Id ( field Id )  ;  if  ( fields == null )      throw new java . lang .  Illegal Argument Exception ( "" Field "" + field Id + "" doesn't exist!"" )  ;  return fields ; }"
132,"public void remove (  ) { throw new  Unsupported Operation Exception ( ""remove (  )  is not supported by  Realm Results iterators . "" )  ; }"
133,"private int find Noise Limit (  Byte Buffer buffer ) { //  The input is in  Byte Order . native Order (  ) , which is little endian on  Android .  for  ( int i = buffer . limit (  )  - 1 ;  i >= buffer . position (  )  ;  i -= 2 )  {     if  (  Math . abs ( buffer . get ( i )  )  > SILENCE_THRESHOLD_LEVEL_MSB )  {         //  Return the start of the next frame .          return bytes Per Frame *  ( i / bytes Per Frame )  + bytes Per Frame ;      } } return buffer . position (  )  ; }"
134,"public com . anychart . core . ui .  Crosshair Label max Font Size (  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Font Size ( %s )  ; "", size )  )  ;  return this ; }"
135,void unlink (  Node<E> x ) { // assert lock . is Held By Current Thread (  )  ;   Node<E> p = x . prev ;   Node<E> n = x . next ;  if  ( p == null )  {     unlink First (  )  ;  } else if  ( n == null )  {     unlink Last (  )  ;  } else {     p . next = n ;      n . prev = p ;      x . item = null ;      //  Don't mess with x's links .    They may still be in use by     // an iterator .      --count ;      not Full . signal (  )  ;  }}
136,public void set Line Visible ( boolean visible ) { set Divider Visible ( visible )  ; }
137,"public static  Resources adapt Width ( @ Non Null final  Resources resources, final int design Width ) { float new Xdpi =  ( resources . get Display Metrics (  )  . width Pixels * 72f )  / design Width ;  apply Display Metrics ( resources, new Xdpi )  ;  return resources ; }"
138,"public static  Multimap<K, V> synchronized Multimap (  Multimap<K, V> multimap ) { return  Synchronized . multimap ( multimap, null )  ; }"
139,"public com . anychart . palettes .  Range Colors item At (  Number index, com . anychart . graphics . vector .  Solid Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . item At ( %s, %s )  ; "", index,  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
140,private int wrap Position ( int position ) { return position < file Length ? position : HEADER_LENGTH + position - file Length ; }
141,public boolean is Module Binding Graph (  ) { return !root Component Node (  )  . is Real Component (  )  ; }
142,"private void parse Access Message ( final  Access Message message ) { final  Provisioned Mesh Node node = m Internal Transport Callbacks . get Node ( message . get Src (  )  )  ;  final int op Code Length =  Mesh Parser Utils . get Op Code Length ( message . get Access Pdu (  )  [ 0 ]  & 0x FF )  ;  // Op Code length switch ( op Code Length )  {     case 1:         if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_COMPOSITION_DATA_STATUS )  {             final  Config Composition Data Status status = new  Config Composition Data Status ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 node . set Composition Data ( status )  ;              }             m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . SCENE_STATUS )  {             final  Scene Status scene Status = new  Scene Status ( message )  ;              if  ( scene Status . is Successful (  )  )  {                 final  Mesh Model model = get Mesh Model ( node, scene Status . get Src (  ) , SCENE_SERVER )  ;                  if  ( model != null )  {                     final  Scene Server scene Server =  (  (  Scene Server )  model )  ;                      scene Server . current Scene = scene Status . get Current Scene (  )  ;                      scene Server . target Scene = scene Status . get Target Scene (  )  ;                  }             }             m Internal Transport Callbacks . update Mesh Network ( scene Status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , scene Status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_HEARTBEAT_PUBLICATION_STATUS )  {             final  Config Heartbeat Publication Status status = new  Config Heartbeat Publication Status ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 if  ( status . is Successful (  )  )  {                     final  Configuration Server Model model =  (  Configuration Server Model )  get Mesh Model ( node, status . get Src (  ) , CONFIGURATION_SERVER )  ;                      if  ( model != null )  {                         model . set Heartbeat Publication ( !is Valid Unassigned Address ( status . get Heartbeat Publication (  )  . get Dst (  )  )  ? status . get Heartbeat Publication (  )  : null )  ;                      }                 }             }             m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . SENSOR_DESCRIPTOR_STATUS )  {             final  Sensor Descriptor Status status = new  Sensor Descriptor Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . SENSOR_CADENCE_STATUS )  {             final  Sensor Cadence Status status = new  Sensor Cadence Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . SENSOR_SETTINGS_STATUS )  {             final  Sensor Settings Status status = new  Sensor Settings Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . SENSOR_SETTING_STATUS )  {             final  Sensor Setting Status status = new  Sensor Setting Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . SENSOR_STATUS )  {             final  Sensor Status status = new  Sensor Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . SENSOR_COLUMN_STATUS )  {             final  Sensor Column Status status = new  Sensor Column Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . SENSOR_SERIES_STATUS )  {             final  Sensor Series Status status = new  Sensor Series Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else {             handle Unknown Pdu ( message )  ;          }         break ;      case 2:         if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_DEFAULT_TTL_STATUS )  {             final  Config Default Ttl Status status = new  Config Default Ttl Status ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 node . set Ttl ( status . get Ttl (  )  )  ;              }             m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_NETKEY_STATUS )  {             final  Config Net Key Status status = new  Config Net Key Status ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 if  ( status . is Successful (  )  )  {                     if  ( m Mesh Message instanceof  Config Net Key Add )  {                         node . set Added Net Key Index ( status . get Net Key Index (  )  )  ;                      } else if  ( m Mesh Message instanceof  Config Net Key Update )  {                         node . update Added Net Key ( status . get Net Key Index (  )  )  ;                      } else if  ( m Mesh Message instanceof  Config Net Key Delete )  {                         node . remove Added Net Key Index ( status . get Net Key Index (  )  )  ;                      }                 }             }             m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_NETKEY_LIST )  {             final  Config Net Key List net Key List = new  Config Net Key List ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 if  ( net Key List . is Successful (  )  )  {                     node . update Net Key List ( net Key List . get Key Indexes (  )  )  ;                  }             }             m Internal Transport Callbacks . update Mesh Network ( net Key List )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , net Key List )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_APPKEY_STATUS )  {             final  Config App Key Status status = new  Config App Key Status ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 if  ( status . is Successful (  )  )  {                     if  ( m Mesh Message instanceof  Config App Key Add )  {                         node . set Added App Key Index ( status . get App Key Index (  )  )  ;                      } else if  ( m Mesh Message instanceof  Config App Key Update )  {                         node . update Added App Key ( status . get App Key Index (  )  )  ;                      } else if  ( m Mesh Message instanceof  Config App Key Delete )  {                         node . remove Added App Key Index ( status . get App Key Index (  )  )  ;                      }                 }             }             m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_APPKEY_LIST )  {             final  Config App Key List app Key List = new  Config App Key List ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 if  ( app Key List . is Successful (  )  )  {                     node . update App Key List ( app Key List . get Net Key Index (  ) , app Key List . get Key Indexes (  ) , m Internal Transport Callbacks . get Application Keys ( app Key List . get Net Key Index (  )  )  )  ;                  }             }             m Internal Transport Callbacks . update Mesh Network ( app Key List )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , app Key List )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_MODEL_APP_STATUS )  {             final  Config Model App Status status = new  Config Model App Status ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 if  ( status . is Successful (  )  )  {                     if  ( m Mesh Message instanceof  Config Model App Bind )  {                         node . set App Key Bind Status ( status )  ;                      } else {                         node . set App Key Unbind Status ( status )  ;                      }                 }             }             m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_SIG_MODEL_APP_LIST )  {             final  Config Sig Model App List app Key List = new  Config Sig Model App List ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 if  ( app Key List . is Successful (  )  )  {                     final  Mesh Model model = get Mesh Model ( node, app Key List . get Element Address (  ) , app Key List . get Model Identifier (  )  )  ;                      if  ( model != null )  {                         model . set Bound App Key Indexes ( app Key List . get Key Indexes (  )  )  ;                      }                 }             }             m Internal Transport Callbacks . update Mesh Network ( app Key List )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , app Key List )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_VENDOR_MODEL_APP_LIST )  {             final  Config Vendor Model App List app Key List = new  Config Vendor Model App List ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 if  ( app Key List . is Successful (  )  )  {                     final  Mesh Model model = get Mesh Model ( node, app Key List . get Element Address (  ) , app Key List . get Model Identifier (  )  )  ;                      if  ( model != null )  {                         model . set Bound App Key Indexes ( app Key List . get Key Indexes (  )  )  ;                      }                 }             }             m Internal Transport Callbacks . update Mesh Network ( app Key List )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , app Key List )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_MODEL_PUBLICATION_STATUS )  {             final  Config Model Publication Status status = new  Config Model Publication Status ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 if  ( status . is Successful (  )  )  {                     final  Mesh Model model = get Mesh Model ( node, status . get Element Address (  ) , status . get Model Identifier (  )  )  ;                      if  ( model != null )  {                         if  ( m Mesh Message instanceof  Config Model Publication Get )  {                             model . update Publication Status ( status )  ;                          } else if  ( m Mesh Message instanceof  Config Model Publication Set )  {                             model . set Publication Status ( status, null )  ;                          } else if  ( m Mesh Message instanceof  Config Model Publication Virtual Address Set )  {                             final UUID label UUID =  (  (  Config Model Publication Virtual Address Set )  m Mesh Message )  . get Label Uuid (  )  ;                              model . set Publication Status ( status, label UUID )  ;                          }                     }                 }             }             m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_MODEL_SUBSCRIPTION_STATUS )  {             final  Config Model Subscription Status status = new  Config Model Subscription Status ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 if  ( status . is Successful (  )  )  {                     final  Mesh Model model = get Mesh Model ( node, status . get Element Address (  ) , status . get Model Identifier (  )  )  ;                      if  ( model != null )  {                         if  ( m Mesh Message instanceof  Config Model Subscription Add )  {                             model . add Subscription Address ( status . get Subscription Address (  )  )  ;                          } else if  ( m Mesh Message instanceof  Config Model Subscription Virtual Address Add )  {                             model . add Subscription Address (  (  (  Config Model Subscription Virtual Address Add )  m Mesh Message )  . get Label Uuid (  ) , status . get Subscription Address (  )  )  ;                          } else if  ( m Mesh Message instanceof  Config Model Subscription Overwrite )  {                             model . overwrite Subscription Address ( status . get Subscription Address (  )  )  ;                          } else if  ( m Mesh Message instanceof  Config Model Subscription Virtual Address Overwrite )  {                             model . overwrite Subscription Address (  (  (  Config Model Subscription Virtual Address Overwrite )  m Mesh Message )  . get Label Uuid (  ) , status . get Subscription Address (  )  )  ;                          } else if  ( m Mesh Message instanceof  Config Model Subscription Delete )  {                             model . remove Subscription Address ( status . get Subscription Address (  )  )  ;                          } else if  ( m Mesh Message instanceof  Config Model Subscription Virtual Address Delete )  {                             model . remove Subscription Address (  (  (  Config Model Subscription Virtual Address Delete )  m Mesh Message )  . get Label Uuid (  ) , status . get Subscription Address (  )  )  ;                          } else if  ( m Mesh Message instanceof  Config Model Subscription Delete All )  {                             model . remove All Subscription Addresses (  )  ;                          }                     }                 }             }             m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_SIG_MODEL_SUBSCRIPTION_LIST )  {             final  Config Sig Model Subscription List status = new  Config Sig Model Subscription List ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 if  ( status . is Successful (  )  )  {                     final  Mesh Model model = get Mesh Model ( node, status . get Element Address (  ) , status . get Model Identifier (  )  )  ;                      if  ( model != null )  {                         model . update Subscription Addresses List ( status . get Subscription Addresses (  )  )  ;                      }                     create Groups ( status . get Subscription Addresses (  )  )  ;                  }             }             m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_VENDOR_MODEL_SUBSCRIPTION_LIST )  {             final  Config Vendor Model Subscription List status = new  Config Vendor Model Subscription List ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 if  ( status . is Successful (  )  )  {                     final  Mesh Model model = get Mesh Model ( node, status . get Element Address (  ) , status . get Model Identifier (  )  )  ;                      if  ( model != null )  {                         model . update Subscription Addresses List ( status . get Subscription Addresses (  )  )  ;                      }                     create Groups ( status . get Subscription Addresses (  )  )  ;                  }             }             m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_HEARTBEAT_SUBSCRIPTION_STATUS )  {             final  Config Heartbeat Subscription Status status = new  Config Heartbeat Subscription Status ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 if  ( status . is Successful (  )  )  {                     final  Mesh Model model = get Mesh Model ( node, message . get Src (  ) , CONFIGURATION_SERVER )  ;                      if  ( model != null )  {                          (  (  Configuration Server Model )  model )  . set Heartbeat Subscription (  ( !is Valid Unassigned Address ( status . get Heartbeat Subscription (  )  . get Src (  )  )  || !is Valid Unassigned Address ( status . get Heartbeat Subscription (  )  . get Dst (  )  )  )  ? status . get Heartbeat Subscription (  )  : null )  ;                      }                 }             }             m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_NODE_IDENTITY_STATUS )  {             final  Config Node Identity Status status = new  Config Node Identity Status ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 node . node Identity State = status . get Node Identity State (  )  ;              }             m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_NODE_RESET_STATUS )  {             final  Config Node Reset Status status = new  Config Node Reset Status ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 m Internal Transport Callbacks . on Mesh Node Reset ( node )  ;              }             m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_NETWORK_TRANSMIT_STATUS )  {             final  Config Network Transmit Status status = new  Config Network Transmit Status ( message )  ;              final  Network Transmit Settings network Transmit Settings = new  Network Transmit Settings ( status . get Network Transmit Count (  ) , status . get Network Transmit Interval Steps (  )  )  ;              node . set Network Transmit Settings ( network Transmit Settings )  ;              m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_RELAY_STATUS )  {             final  Config Relay Status status = new  Config Relay Status ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 final  Relay Settings relay Settings = new  Relay Settings ( status . get Relay Retransmit Count (  ) , status . get Relay Retransmit Interval Steps (  )  )  ;                  node . set Relay Settings ( relay Settings )  ;              }             m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_BEACON_STATUS )  {             final  Config Beacon Status status = new  Config Beacon Status ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 node . set Secure Network Beacon Supported ( status . is Enable (  )  )  ;              }             m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_FRIEND_STATUS )  {             final  Config Friend Status status = new  Config Friend Status ( message )  ;              if  ( !is Received Via Proxy Filter ( message )  )  {                 node . get Node Features (  )  . set Friend ( status . is Enable (  )  ?  Features . ENABLED :  Features . DISABLED )  ;              }             m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_KEY_REFRESH_PHASE_STATUS )  {             final  Config Key Refresh Phase Status status = new  Config Key Refresh Phase Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_GATT_PROXY_STATUS )  {             final  Config Proxy Status status = new  Config Proxy Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Config Message Op Codes . CONFIG_LOW_POWER_NODE_POLLTIMEOUT_STATUS )  {             final  Config Low Power Node Poll Timeout Status status = new  Config Low Power Node Poll Timeout Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . GENERIC_ON_OFF_STATUS )  {             final  Generic On Off Status status = new  Generic On Off Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . GENERIC_LEVEL_STATUS )  {             final  Generic Level Status generic Level Status = new  Generic Level Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( generic Level Status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , generic Level Status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . LIGHT_LIGHTNESS_STATUS )  {             final  Light Lightness Status light Lightness Status = new  Light Lightness Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( light Lightness Status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , light Lightness Status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . LIGHT_CTL_STATUS )  {             final  Light Ctl Status light Ctl Status = new  Light Ctl Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( light Ctl Status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , light Ctl Status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . LIGHT_HSL_STATUS )  {             final  Light Hsl Status light Hsl Status = new  Light Hsl Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( light Hsl Status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , light Hsl Status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . LIGHT_LC_MODE_STATUS )  {             final  Light LC Mode Status light Lc Mode Status = new  Light LC Mode Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( light Lc Mode Status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , light Lc Mode Status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . LIGHT_LC_OCCUPANCY_MODE_STATUS )  {             final  Light LC Occupancy Mode Status light Lc Occupancy Mode Status = new  Light LC Occupancy Mode Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( light Lc Occupancy Mode Status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , light Lc Occupancy Mode Status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . LIGHT_LC_LIGHT_ON_OFF_STATUS )  {             final  Light LC Light On Off Status light Lc Light On Off Status = new  Light LC Light On Off Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( light Lc Light On Off Status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , light Lc Light On Off Status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . LIGHT_LC_PROPERTY_STATUS )  {             final  Light LC Property Status status = new  Light LC Property Status ( message )  ;              m Internal Transport Callbacks . update Mesh Network ( status )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else if  ( message . get Op Code (  )  ==  Application Message Op Codes . SCENE_REGISTER_STATUS )  {             if  ( m Mesh Message instanceof  Scene Store )  {                 final  Scene Register Status status = new  Scene Register Status ( message )  ;                  store Scene ( node, status )  ;                  m Internal Transport Callbacks . update Mesh Network ( status )  ;                  m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;              } else if  ( m Mesh Message instanceof  Scene Recall )  {                 final  Scene Status status = new  Scene Status ( message )  ;                  store Scene ( node, status )  ;                  m Internal Transport Callbacks . update Mesh Network ( status )  ;                  m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;              } else if  ( m Mesh Message instanceof  Scene Delete )  {                 final  Scene Register Status status = new  Scene Register Status ( message )  ;                  delete Scene ( node, status )  ;                  m Internal Transport Callbacks . update Mesh Network ( status )  ;                  m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;              }         } else {             handle Unknown Pdu ( message )  ;          }         break ;      case 3:         if  ( m Mesh Message instanceof  Vendor Model Message Acked )  {             final  Vendor Model Message Acked vendor Model Message Acked =  (  Vendor Model Message Acked )  m Mesh Message ;              final  Vendor Model Message Status status = new  Vendor Model Message Status ( message, vendor Model Message Acked . get Model Identifier (  )  )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;               Log . v ( TAG, "" Vendor model  Access PDU  Received: "" +  Mesh Parser Utils . bytes To Hex ( message . get Access Pdu (  ) , false )  )  ;          } else if  ( m Mesh Message instanceof  Vendor Model Message Unacked )  {             final  Vendor Model Message Unacked vendor Model Message Unacked =  (  Vendor Model Message Unacked )  m Mesh Message ;              final  Vendor Model Message Status status = new  Vendor Model Message Status ( message, vendor Model Message Unacked . get Model Identifier (  )  )  ;              m Mesh Status Callbacks . on Mesh Message Received ( message . get Src (  ) , status )  ;          } else {             handle Unknown Pdu ( message )  ;          }         break ;  }}"
143,"public synchronized void set Persistence Cache Size Bytes ( long cache Size In Bytes ) { assert Unfrozen ( ""set Persistence Cache Size Bytes"" )  ;  this . config . set Persistence Cache Size Bytes ( cache Size In Bytes )  ; }"
144,public  String get Duplicate Frame Id (  ) { return duplicate Frame Id ; }
145,"public com . anychart . math .  Rect get Pixel Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . get Pixel Bounds (  ) "" )  ; }"
146,public float get Text Size Btn1 (  ) { return m Text Size Btn1 ; }
147,"public static void put ( @ Non Null final  String key, @ Nullable final  Serializable value, @ Non Null final  Cache Disk Utils cache Disk Utils ) { cache Disk Utils . put ( key, value )  ; }"
148,"protected  Session create Session ( final  Open Ssh Config .  Host hc, final  String user, final  String host, final int port, FS fs )  throws J Sch Exception{ return get J Sch ( hc, fs )  . get Session ( user, host, port )  ; }"
149,"private boolean draw Box (  Vector3 [  ]  vertices,  Policy policy ) { for  ( int i = 0 ;  i < 8 ;  i++ )  {     //  Multiply the world coordinates by the camera combined matrix, but do not divide by w component yet .       Vector3 v = vertices [ i ]  ;      tmp Vertices [ i ]  . set ( v . x, v . y, v . z, 1 )  . mul ( projection Matrix )  ;  } if  ( policy . evaluate ( tmp Vertices )  )      return true ;  //  Loop over each box quad in the predefined winding order .  for  ( int i = 0 ;  i < WINDING . length ;   )  {     quad [ 0 ]  . set ( tmp Vertices [ WINDING [ i++ ]  ]  )  ;      quad [ 1 ]  . set ( tmp Vertices [ WINDING [ i++ ]  ]  )  ;      quad [ 2 ]  . set ( tmp Vertices [ WINDING [ i++ ]  ]  )  ;      quad [ 3 ]  . set ( tmp Vertices [ WINDING [ i++ ]  ]  )  ;      //  Clip the quad with near frustum plane if needed     int num Vertices = clip Quad ( quad, clipped Quad )  ;      //  Divide by w to project vertices to camera space     for  ( int j = 0 ;  j < num Vertices ;  j++ )  {          Quaternion q = clipped Quad [ j ]  ;          q . z = 1 / q . w ;          vertices [ j ]  . set ( q . x * q . z, q . y * q . z, q . z )  ;      }     //  Perform draw/query     for  ( int j = 2 ;  j < num Vertices ;  j++ )  {         // since part of the AABB must be visible then .          if  ( draw Triangle ( vertices [ 0 ] , vertices [ j - 1 ] , vertices [ j ] , policy )  )              return true ;      } } return false ; }"
150,private void init (  ) { float dp = get Resources (  )  . get Display Metrics (  )  . density ;  paint = new  Paint (  )  ;  ECR = 1 . 0f ;  anchor X = 5f * dp ;  initial Y = 8f * dp ;  eye Height = 19f * dp ;  iris Radius = 4f * dp ;  paint . set Anti Alias ( true )  ;  paint . set Stroke Width ( 2 * dp )  ; }
151,public  String get Preview Thumbnail Small (  ) { return preview Thumbnail Small ; }
152,"public void test Get And Set (  ) { double prev =  Math . E ;   Atomic Double at = new  Atomic Double ( prev )  ;  for  ( double x : VALUES )  {     assert Bit Equals ( prev, at . get And Set ( x )  )  ;      prev = x ;  }}"
153,"public void set App Is Loaded (  ) { synchronized  ( _cly )  {     L . i ( "" [  Apm ]   Calling 'set App Is Loaded'"" )  ;      long timestamp =  System . current Time Millis (  )  ;      if  ( !use Manual App Loaded Trigger )  {         L . w ( "" [  Apm ]  trying to record that app has finished loading without enabling manual trigger"" )  ;          return ;      }     record App Start ( timestamp )  ;  }}"
154,"protected static void wait For Initial Device List ( final  Android Debug Bridge android Debug Bridge,  Logger logger ) { if  ( !android Debug Bridge . has Initial Device List (  )  )  {     logger . info ( "" Waiting for initial device list from the  Android  Debug  Bridge"" )  ;      long limit Time =  System . current Time Millis (  )  + ADB_TIMEOUT_MS ;      while  ( !android Debug Bridge . has Initial Device List (  )  &&  (  System . current Time Millis (  )  < limit Time )  )  {         try {              Thread . sleep ( 1000 )  ;          } catch  (  Interrupted Exception e )  {             throw new  Runtime Exception ( "" Interrupted waiting for initial device list from  Android  Debug  Bridge"" )  ;          }     }     if  ( !android Debug Bridge . has Initial Device List (  )  )  {         logger . error ( "" Did not receive initial device list from the  Android  Debug  Bridge . "" )  ;      } }}"
155,"public static  List< String> get Models After2000 (  List< Car> cars ) {  List< Car> cars Sorted By Year = new  Array List<> (  )  ;  for  (  Car car : cars )  {     if  ( car . get Year (  )  > 2000 )  {         cars Sorted By Year . add ( car )  ;      } }  Collections . sort ( cars Sorted By Year, new  Comparator< Car> (  )  {     @ Override     public int compare (  Car car1,  Car car2 )  {         return car1 . get Year (  )  - car2 . get Year (  )  ;      } } )  ;   List< String> models = new  Array List<> (  )  ;  for  (  Car car : cars Sorted By Year )  {     models . add ( car . get Model (  )  )  ;  } return models ; }"
156,"public  Big Integer as Number (  ) {  Big Integer result = null ;  switch ( this . descriptor Type )  {     case TYPE_BOOLEAN:     case TYPE_WORD:     case TYPE_DWORD:     case TYPE_QWORD:     case TYPE_BINARY:         if  ( this . content . length > 8 )  {             throw new  Number Format Exception ( "" Binary data would exceed QWORD"" )  ;          }         break ;      case TYPE_GUID:         throw new  Number Format Exception ( ""GUID cannot be converted to a number . "" )  ;      case TYPE_STRING:         result = new  Big Integer ( get String (  ) , 10 )  ;          break ;      default:         throw new  Illegal State Exception (  )  ;  } if  ( result == null )  {     final byte [  ]  copy = new byte [ this . content . length ]  ;      for  ( int i = 0 ;  i < copy . length ;  i++ )  {         copy [ i ]  = this . content [ this . content . length -  ( i + 1 )  ]  ;      }     result = new  Big Integer ( 1, copy )  ;  } return result ; }"
157,public int get Field Count (  ) {  Iterator< Tag Field> it = get Fields (  )  ;  int count = 0 ;  //whereas it . next (  )  works correctly try {     while  ( true )  {          Tag Field next = it . next (  )  ;          count++ ;      } } catch  (  No Such Element Exception nse )  { //this is thrown when no more elements } return count ; }
158,"void advance (  ) {  Preconditions . check State ( valid (  )  )  ;  //  We iterate over the possible edges in a lexicographical order with the LHS index as the // most significant part and the RHS index as the least significant .   So we first try // advancing to the next RHS index for the current LHS index, and if we can't we advance // to the next LHS index in the map and the first RHS index for that .  ++rhs Index For Lhs ;  while  ( lhs Index < lhs Vertices . size (  )  )  {     if  ( !selected Edges . contains Key ( lhs Vertex (  )  )  )  {         while  ( rhs Index For Lhs < edges . get ( lhs Vertex (  )  )  . size (  )  )  {             if  ( !selected Edges . contains Value ( rhs Vertex (  )  )  )  {                 return ;              }             ++rhs Index For Lhs ;          }     }     ++lhs Index ;      rhs Index For Lhs = 0 ;  }//  We have reached the end of the sequence, and lhs Index == lhs Vertices . size (  )  . }"
159,"public  Set< Element> get Nonnull Static Fields Before (  Tree Path path,  Context context ) {  Nullness Store store = data Flow . result Before Expr ( path, context, nullness Propagation )  ;  if  ( store == null )  {     return  Collections . empty Set (  )  ;  } return get Nonnull Static Fields ( store )  ; }"
160,"public com . anychart . charts .  Pareto select Marquee Fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
161,public static void clear (  ) { reset (  )  ; }
162,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
163,public void set Enabled ( boolean is Enabled ) { this . enabled = is Enabled ; }
164,public final S build (  ) { S vt = create Transition (  )  ;  mark Object As Modifiability Flag ( vt )  ;  vt . set Id ( m Id )  ;  if  ( m Interpolator != null )  {     vt . set Interpolator ( m Interpolator )  ;  } if  ( m Reverse )  {     vt . reverse (  )  ;  } return vt ; }
165,"private static  Manifest add Digests To Manifest (  Jar Map jar, int hashes )  throws IO Exception,  General Security Exception{  Manifest input = jar . get Manifest (  )  ;   Manifest output = new  Manifest (  )  ;   Attributes main = output . get Main Attributes (  )  ;  if  ( input != null )  {     main . put All ( input . get Main Attributes (  )  )  ;  } else {     main . put Value ( "" Manifest- Version"", ""1 . 0"" )  ;      main . put Value ( "" Created- By"", ""1 . 0  (  Android  Sign Apk ) "" )  ;  }  Message Digest md_sha1 = null ;   Message Digest md_sha256 = null ;  if  (  ( hashes & USE_SHA1 )  != 0 )  {     md_sha1 =  Message Digest . get Instance ( ""SHA1"" )  ;  } if  (  ( hashes & USE_SHA256 )  != 0 )  {     md_sha256 =  Message Digest . get Instance ( ""SHA256"" )  ;  } byte [  ]  buffer = new byte [ 4096 ]  ;  int num ;  //  We sort the input entries by name, and add them to the // output manifest in sorted order .    We expect that the output // map will be deterministic .   Tree Map< String,  Jar Entry> by Name = new  Tree Map<> (  )  ;  for  (  Enumeration< Jar Entry> e = jar . entries (  )  ;  e . has More Elements (  )  ;   )  {      Jar Entry entry = e . next Element (  )  ;      by Name . put ( entry . get Name (  ) , entry )  ;  } for  (  Jar Entry entry : by Name . values (  )  )  {      String name = entry . get Name (  )  ;      if  ( !entry . is Directory (  )  && !strip Pattern . matcher ( name )  . matches (  )  )  {          Input Stream data = jar . get Input Stream ( entry )  ;          while  (  ( num = data . read ( buffer )  )  > 0 )  {             if  ( md_sha1 != null )                  md_sha1 . update ( buffer, 0, num )  ;              if  ( md_sha256 != null )                  md_sha256 . update ( buffer, 0, num )  ;          }          Attributes attr = null ;          if  ( input != null )              attr = input . get Attributes ( name )  ;          attr = attr != null ? new  Attributes ( attr )  : new  Attributes (  )  ;          //  Remove any previously computed digests from this entry's attributes .          for  (  Iterator< Object> i = attr . key Set (  )  . iterator (  )  ;  i . has Next (  )  ;   )  {              Object key = i . next (  )  ;              if  ( ! ( key instanceof  Attributes .  Name )  )  {                 continue ;              }              String attribute Name Lower Case = key . to String (  )  . to Lower Case (  Locale . US )  ;              if  ( attribute Name Lower Case . ends With ( ""-digest"" )  )  {                 i . remove (  )  ;              }         }         //  Add SHA-1 digest if requested         if  ( md_sha1 != null )  {             attr . put Value ( ""SHA1- Digest"", new  String (  Base64 . encode ( md_sha1 . digest (  )  ) , ""ASCII"" )  )  ;          }         //  Add SHA-256 digest if requested         if  ( md_sha256 != null )  {             attr . put Value ( ""SHA-256- Digest"", new  String (  Base64 . encode ( md_sha256 . digest (  )  ) , ""ASCII"" )  )  ;          }         output . get Entries (  )  . put ( name, attr )  ;      } } return output ; }"
166,public int get Size (  ) { return TAG_LENGTH ; }
167,public  Emission Mode get Emission Mode (  ) { return emission Mode ; }
168,"public void enable GL Debug Output ( boolean enable,  Print Stream debug Output Stream ) { debug = enable ;  debug Stream = debug Output Stream ; }"
169,public final boolean has Address (  ) { return  ( address >= 0 )  ; }
170,"public static int read Signed Int (  Byte Input in, int zwidth ) { int result = 0 ;  for  ( int i = zwidth ;  i >= 0 ;  i-- )  {     result =  ( result >>> 8 )  |  (  ( in . read Byte (  )  & 0xff )  << 24 )  ;  } result >>=  ( 3 - zwidth )  * 8 ;  return result ; }"
171,"public void does Not Contain Entry ( @ Nullable  Object excluded Key, @ Nullable E excluded Value ) { if  ( actual . contains Key ( excluded Key )  )  {     //  Found matching key .   Fail if the value matches, too .      A actual Value = get Cast Subject (  )  . get ( excluded Key )  ;       Correspondence .  Exception Store exceptions =  Correspondence .  Exception Store . for Map Values (  )  ;      if  ( correspondence . safe Compare ( actual Value, excluded Value, exceptions )  )  {         //  The matching key had a matching value .   There's no need to check exceptions here,         // because if  Correspondence . compare (  )  threw then safe Compare (  )  would return false .          fail Without Actual (  Immutable List . < Fact>builder (  )  . add ( fact ( ""expected not to contain"", immutable Entry ( excluded Key, excluded Value )  )  )  . add All ( correspondence . describe For Map Values (  )  )  . add ( fact ( ""but contained"", immutable Entry ( excluded Key, actual Value )  )  )  . add ( fact ( ""full map"", actual Custom String Representation For Package Members To Call (  )  )  )  . add All ( exceptions . describe As Additional Info (  )  )  . build (  )  )  ;      }     //  The value didn't match, but we still need to fail if we hit an exception along the way .      if  ( exceptions . has Compare Exception (  )  )  {         fail Without Actual (  Immutable List . < Fact>builder (  )  . add All ( exceptions . describe As Main Cause (  )  )  . add ( fact ( ""expected not to contain"", immutable Entry ( excluded Key, excluded Value )  )  )  . add All ( correspondence . describe For Map Values (  )  )  . add ( simple Fact ( ""found no match  ( but failing because of exception ) "" )  )  . add ( fact ( ""full map"", actual Custom String Representation For Package Members To Call (  )  )  )  . build (  )  )  ;      } }}"
172,"public com . anychart . core . cartesian . series .  Stick stick (  String [  ]  data,  String csv Settings ) { return new com . anychart . core . cartesian . series .  Stick (  String . format (  Locale . US, js Base + "" . stick ( %s, %s ) "", array To String Wrap Quotes ( data ) , wrap Quotes ( csv Settings )  )  )  ; }"
173,public int get Audio Stream Type (  ) { return  Util . get Stream Type For Audio Usage ( audio Attributes . usage )  ; }
174,"private boolean is Dismissable ( final int position ) { if  ( m List View Wrapper . get Adapter (  )  == null )  {     return false ;  } if  ( m Dismissable Manager != null )  {     long down Id = m List View Wrapper . get Adapter (  )  . get Item Id ( position )  ;      return m Dismissable Manager . is Dismissable ( down Id, position )  ;  } return true ; }"
175,"public void add Direct Method (  Encoded Method method ) { if  ( method == null )  {     throw new  Null Pointer Exception ( ""method == null"" )  ;  } direct Methods . add ( method )  ; }"
176,"public void test Private Data (  ) {  Context cx =  Context . enter (  )  ;  try {     global . associate Value ( key, ""bar"" )  ;       Object result = cx . evaluate String ( global, ""g ( 'foo' )  ; "", ""test source"", 1, null )  ;      assert Equals ( ""foobar"", result )  ;  } finally {      Context . exit (  )  ;  }}"
177,public static void set Full Screen (  Activity activity ) {  Window window = activity . get Window (  )  ;  window . add Flags (  Window Manager .  Layout Params . FLAG_LAYOUT_NO_LIMITS )  ;  window . add Flags (  Window Manager .  Layout Params . FLAG_FULLSCREEN )  ; }
178,"public com . anychart . core . axismarkers .  Gantt Line stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
179,"private static  String read Name ( byte [  ]  data, int offset,  Hash Set< Integer> jumps )  throws IO Exception{ int c = data [ offset ]  & 0xff ;  if  (  ( c & 0xc0 )  == 0xc0 )  {     c =  (  ( c & 0x3f )  << 8 )  +  ( data [ offset + 1 ]  & 0xff )  ;      if  ( jumps . contains ( c )  )  {         throw new  Dns Exception ( """", "" Cyclic offsets detected . "" )  ;      }     jumps . add ( c )  ;      return read Name ( data, c, jumps )  ;  } if  ( c == 0 )  {     return """" ;  }  String s = new  String ( data, offset + 1, c )  ;   String t = read Name ( data, offset + 1 + c, jumps )  ;  if  ( t . length (  )  > 0 )  {     s = s + "" . "" + t ;  } return s ; }"
180,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
181,"public  Compare To Builder append ( double lhs, double rhs ) { if  ( comparison != 0 )  {     return this ;  } comparison =  Double . compare ( lhs, rhs )  ;  return this ; }"
182,public T thread Pool Size ( int thread Pool Size ) { m Executor = new  Scheduled Thread Pool Executor ( thread Pool Size )  ;  return self (  )  ; }
183,public float get Z (  ) { return z ; }
184,"public  Object [  ]  to Array (  ) { final  Object [  ]  items = this . items ;  final  Reentrant Lock lock = this . lock ;  lock . lock (  )  ;  try {     final int count = this . count ;       Object [  ]  a = new  Object [ count ]  ;      for  ( int i = take Index, k = 0 ;  k < count ;  i = inc ( i ) , k++ )  a [ k ]  = items [ i ]  ;      return a ;  } finally {     lock . unlock (  )  ;  }}"
185,"public static  List< String> split By Null Seperator (  String value ) {  String [  ]  valuesarray = value . split ( ""\\u0000"" )  ;   List< String> values =  Arrays . as List ( valuesarray )  ;  // Read only list so if empty have to create new list if  ( values . size (  )  == 0 )  {     values = new  Array List< String> ( 1 )  ;      values . add ( """" )  ;  } return values ; }"
186,"public com . anychart . charts .  Polar hatch Fill Palette (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill Palette ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
187,"public  Auto Layout Model View Match Parent Model_ on Visibility State Changed (  On Model Visibility State Changed Listener< Auto Layout Model View Match Parent Model_,  Auto Layout Model View Match Parent> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
188,"public final  Double Buffer put ( double [  ]  src ) { return put ( src, 0, src . length )  ; }"
189,"public com . anychart . core . stock . scrollerseries .  Range Step Area max Point Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Point Width ( %s )  ; "", width )  )  ;  return this ; }"
190,"public void add Parameter (  Ct Class type )  throws  Cannot Compile Exception{ declaring Class . check Modify (  )  ;   String desc = method Info . get Descriptor (  )  ;   String desc2 =  Descriptor . append Parameter ( type, desc )  ;  int offset =  Modifier . is Static ( get Modifiers (  )  )  ? 0 : 1 ;  try {     add Parameter2 ( offset +  Descriptor . param Size ( desc ) , type, desc )  ;  } catch  (  Bad Bytecode e )  {     throw new  Cannot Compile Exception ( e )  ;  } method Info . set Descriptor ( desc2 )  ; }"
191,public void start (  ) { animator Set . start (  )  ;  dynamic Animator Set . start (  )  ; }
192,"private static  Image Span make Image Span (  Context context, int drawable Res Id, int width, int height, int colour ) { final  Drawable drawable = context . get Resources (  )  . get Drawable ( drawable Res Id )  ;  drawable . mutate (  )  ;  drawable . set Color Filter ( colour,  Porter Duff .  Mode . MULTIPLY )  ;  drawable . set Bounds ( 0, 0, width, height )  ;  return new  Image Span ( drawable,  Image Span . ALIGN_BOTTOM )  ; }"
193,public void set Ip Id (  String ip Id ) { this . ip Id = ip Id ; }
194,"public static T get Parcelable ( @ Non Null final  String key, @ Non Null final  Parcelable .  Creator<T> creator, @ Non Null final  Cache Double Utils cache Double Utils ) { return cache Double Utils . get Parcelable ( key, creator )  ; }"
195,"public com . anychart . core . gantt . timelineheader .  Level Wrapper word Wrap (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . word Wrap ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
196,"private void handle Idle Close Timer (  ) { if  ( this . is Open (  )  )  {     //  When timing out an idle stream there's no reason to force the stream into backoff when     // it restarts so set the stream state to  Initial instead of  Error .      close (  State .  Initial,  Status . OK )  ;  }}"
197,public final int get Max Label (  ) { int sz = label To Index . size (  )  ;  //  Gobble any deleted labels that may be at the end .  int i ;  for  ( i = sz - 1 ;   ( i >= 0 )  &&  ( label To Index . get ( i )  < 0 )  ;  i-- )  /*empty*/  ;  int new Size = i + 1 ;  label To Index . shrink ( new Size )  ;  return new Size ; }
198,"public  Object [  ]  convert To Args ( @ Non Null  Model model, boolean without Auto Id ) { return get Schema (  )  . convert To Args ( conn, model, without Auto Id )  ; }"
199,"public  Entry get Entry For Highlight (  Highlight highlight ) { if  ( highlight . get Data Set Index (  )  >= m Data Sets . size (  )  )      return null ;  else {     return m Data Sets . get ( highlight . get Data Set Index (  )  )  . get Entry For X Value ( highlight . get X (  ) , highlight . get Y (  )  )  ;  }}"
200,public T1 get Value1 (  ) { return value1 ; }
201,"private void assert Elapsed ( double duration, double start ) { assert Equals ( duration, now (  )  - start - 200d, 250 . 0 )  ; }"
202,"public static  List Multimap<K, V> filter Keys (  List Multimap<K, V> unfiltered, final  Predicate<? super K> key Predicate ) { if  ( unfiltered instanceof  Filtered Key List Multimap )  {      Filtered Key List Multimap<K, V> prev =  (  Filtered Key List Multimap<K, V> )  unfiltered ;      return new  Filtered Key List Multimap<> ( prev . unfiltered (  ) ,  Predicates . <K>and ( prev . key Predicate, key Predicate )  )  ;  } else {     return new  Filtered Key List Multimap<> ( unfiltered, key Predicate )  ;  }}"
203,public int get Picture Type (  ) { return  (  (  Long )  get Object Value (  Data Types . OBJ_PICTURE_TYPE )  )  . int Value (  )  ; }
204,public void invalidate Drawable (  Drawable who ) { invalidate Self (  )  ; }
205,"public  Apk Info get Apk Info (  ) { return  Immutable Apk Info . of ( manifest Path, get Source Path To Output (  ) , exopackage Info )  ; }"
206,"public static  Immutable Set< Executable Element> assisted Factory Methods (  Type Element factory,  Dagger Elements elements ) { return elements . get Local And Inherited Methods ( factory )  . stream (  )  . filter (  method -> method . get Modifiers (  )  . contains ( ABSTRACT )  )  . filter (  method -> !method . is Default (  )  )  . collect ( to Immutable Set (  )  )  ; }"
207,public void set Export Everything ( final boolean export Everything ) { this . export Everything = export Everything ;  export Status . post Value ( null )  ; }
208,public void test Basic Invariants (  ) { for  (  Striped<?> striped : all Implementations (  )  )  {     assert Basic Invariants ( striped )  ;  }}
209,"public void add Invokeinterface (  Ct Class clazz,  String name,  String desc, int count ) { add Invokeinterface ( const Pool . add Class Info ( clazz ) , name, desc, count )  ; }"
210,public static boolean has Error Type Annotation (  Element element ) { for  (  Annotation Mirror annotation Mirror : element . get Annotation Mirrors (  )  )  {     if  ( annotation Mirror . get Annotation Type (  )  . get Kind (  )  ==  Type Kind . ERROR )  {         return true ;      } } return false ; }
211,"public boolean on Activity Result ( int request Code, int result Code,  Intent intent ) {  Cordova Plugin callback = activity Result Callback ;  if  ( callback == null && init Callback Service != null )  {     //  The application was restarted, but had defined an initial callback     // before being shut down .      saved Result = new  Activity Result Holder ( request Code, result Code, intent )  ;      if  ( plugin Manager != null )  {         callback = plugin Manager . get Plugin ( init Callback Service )  ;          if  ( callback != null )  {             callback . on Restore State For Activity Result ( saved Plugin State . get Bundle ( callback . get Service Name (  )  ) , new  Resume Callback ( callback . get Service Name (  ) , plugin Manager )  )  ;          }     } } activity Result Callback = null ;  if  ( callback != null )  {     LOG . d ( TAG, "" Sending activity result to plugin"" )  ;      init Callback Service = null ;      saved Result = null ;      callback . on Activity Result ( request Code, result Code, intent )  ;      return true ;  } LOG . w ( TAG, "" Got an activity result, but no plugin was registered to receive it"" +  ( saved Result != null ? "" yet!"" : "" . "" )  )  ;  return false ; }"
212,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
213,public void set Clean (  File Snapshot other ) { final  Instant now = other . last Read ;  if  ( !is Racy Clean ( now )  )  {     cannot Be Racily Clean = true ;  } last Read = now ; }
214,"public void test Margin (  ) { final  Simple Mount Spec Tester child =  Simple Mount Spec Tester . create ( m Context )  . build (  )  ;  final  Litho View litho View = mount Component ( m Context, new  Inline Layout Spec (  )  {     @ Override     protected  Component on Create Layout (  Component Context c )  {         return  Column . create ( c )  . layout Direction ( LTR )  . child (  Wrapper . create ( c )  . delegate ( child )  . width Px ( 10 )  . height Px ( 10 )  . margin Px ( START, 10 )  . margin Px ( END, 20 )  )  . build (  )  ;      } }, 40, 10 )  ;   Drawable drawable = litho View . get Drawables (  )  . get ( 0 )  ;  assert That ( drawable . get Bounds (  )  )  . is Equal To ( new  Rect ( 10, 0, 20, 10 )  )  ;  mount Component ( m Context, litho View, new  Inline Layout Spec (  )  {     @ Override     protected  Component on Create Layout (  Component Context c )  {         return  Column . create ( c )  . layout Direction ( RTL )  . child (  Wrapper . create ( c )  . delegate ( child )  . width Px ( 10 )  . height Px ( 10 )  . margin Px ( START, 10 )  . margin Px ( END, 20 )  )  . build (  )  ;      } }, 40, 10 )  ;  drawable = litho View . get Drawables (  )  . get ( 0 )  ;  assert That ( drawable . get Bounds (  )  )  . is Equal To ( new  Rect ( 20, 0, 30, 10 )  )  ; }"
215,public static  Checked Row get From Row (  Unchecked Row row ) { return new  Checked Row ( row )  ; }
216,"public com . anychart . charts .  Circular Gauge margin (  Number value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
217,public  Animated Drawable Options Builder set Enable Debugging ( boolean enable Debugging ) { m Enable Debugging = enable Debugging ;  return this ; }
218,public byte get As Byte (  ) { throw new  Unsupported Operation Exception ( get Class (  )  . get Simple Name (  )  )  ; }
219,"private void set Left Adapter (  ) {  Animation Adapter anim Card Array Adapter = new  Swing Left In Animation Adapter ( m Card Array Adapter )  ;  anim Card Array Adapter . set Abs List View ( m List View )  ;  if  ( m List View != null )  {     m List View . set External Adapter ( anim Card Array Adapter, m Card Array Adapter )  ;  }}"
220,"private void init Card (  ) {  Array List< Card> cards = new  Array List< Card> (  )  ;  for  ( int i = 0 ;  i < 200 ;  i++ )  {      Gplay Grid Card card = new  Gplay Grid Card ( get Activity (  )  )  ;      // Only for test, use different titles and ratings     card . header Title = "" App example "" + i ;      card . secondary Title = "" Some text here "" + i ;      card . rating =  ( float )   (  Math . random (  )  *  ( 5 . 0 )  )  ;      // Only for test, change some icons     if  (  ( i % 6 == 0 )  )  {         card . resource Id Thumbnail = R . drawable . ic_ic_dh_bat ;      } else if  (  ( i % 6 == 1 )  )  {         card . resource Id Thumbnail = R . drawable . ic_ic_dh_net ;      } else if  (  ( i % 6 == 2 )  )  {         card . resource Id Thumbnail = R . drawable . ic_tris ;      } else if  (  ( i % 6 == 3 )  )  {         card . resource Id Thumbnail = R . drawable . ic_info ;      } else if  (  ( i % 6 == 4 )  )  {         card . resource Id Thumbnail = R . drawable . ic_smile ;      }     card . init (  )  ;      cards . add ( card )  ;  } // Set the adapter m Card Array Adapter = new  Card Grid Array Adapter ( get Activity (  ) , cards )  ;  m List View =  (  Card Grid View )  get Activity (  )  . find View By Id ( R . id . carddemo_extras_grid_base1 )  ;  if  ( m List View != null )  {     set Alpha Adapter (  )  ;  }}"
221,public  Uri Components Builder replace Path (  String path ) { this . path Builder = new  Composite Path Component Builder ( path )  ;  reset Scheme Specific Part (  )  ;  return this ; }
222,"public com . anychart . core . annotations .  Fibonacci Base value Anchor (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . value Anchor ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
223,public  Rev Commit get Source Commit (  ) { return out Candidate . source Commit ; }
224,public int read Unsigned Byte (  ) { return  ( data [ position++ ]  & 0x FF )  ; }
225,public  Item get Item At ( int index )  throws PS Exception{  List< Item> items = this . limit ( index + 1 )  . as List (  )  ;  if  ( items != null && items . size (  )  > index )  {     return items . get ( index )  ;  } return null ; }
226,"public  Map< String,  Connectable Device> get Compatible Devices (  ) { return compatible Devices ; }"
227,"public com . anychart . core . stock .  Plot bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
228,"public void min Point Length (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Point Length (  )  ; "" )  ; }"
229,"protected static void modify Custom Data (  String key, double value,  String mod ) { try {     if  ( custom Mods == null )  {         custom Mods = new  Hash Map<> (  )  ;      }     JSON Object ob ;      if  ( !mod . equals ( ""$pull"" )  && !mod . equals ( ""$push"" )  && !mod . equals ( ""$add To Set"" )  )  {         ob = new JSON Object (  )  ;          ob . put ( mod, value )  ;      } else {         if  ( custom Mods . contains Key ( key )  )  {             ob = custom Mods . get ( key )  ;          } else {             ob = new JSON Object (  )  ;          }         ob . accumulate ( mod, value )  ;      }     custom Mods . put ( key, ob )  ;      is Synced = false ;  } catch  ( JSON Exception e )  {     e . print Stack Trace (  )  ;  }}"
230,"public static void define Const Property (  Scriptable destination,  String property Name ) { if  ( destination instanceof  Const Properties )  {      Const Properties cp =  (  Const Properties )  destination ;      cp . define Const ( property Name, destination )  ;  } else     define Property ( destination, property Name,  Undefined . instance, CONST )  ; }"
231,public long timestamp (  ) { return timestamp ; }
232,"public GSY Base Video Player start Window Fullscreen (  Context context, boolean action Bar, boolean status Bar ) {  Sample Control Video sample Video =  (  Sample Control Video )  super . start Window Fullscreen ( context, action Bar, status Bar )  ;  sample Video . m Source Position = m Source Position ;  sample Video . m Type = m Type ;  sample Video . m Transform Size = m Transform Size ;  //sample Video . resolve Transform (  )  ;  sample Video . resolve Type UI (  )  ;  //可参考super中的实现 return sample Video ; }"
233,"public com . anychart . core . cartesian . series .  Width Based parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
234,public byte [  ]  get Response Body As Byte Array (  ) { return this . response Body ; }
235,public void remove Animation Listener (  Animation Listener listener ) { m Animation Listener Set . remove ( listener )  ; }
236,public static int get Orientation ( byte [  ]  jpeg ) { // wrapping with  Byte Array Input Stream is cheap and we don't have duplicate implementation return get Orientation ( new  Byte Array Input Stream ( jpeg )  )  ; }
237,"private static  Linked List< Diff> diff_compute (  String text1,  String text2, boolean checklines ) {  Linked List< Diff> diffs = new  Linked List< Diff> (  )  ;  if  ( text1 . length (  )  == 0 )  {     //  Just add some text  ( speedup )  .      diffs . add ( new  Diff (  Operation . INSERT, text2 )  )  ;      return diffs ;  } if  ( text2 . length (  )  == 0 )  {     //  Just delete some text  ( speedup )  .      diffs . add ( new  Diff (  Operation . DELETE, text1 )  )  ;      return diffs ;  }  String longtext = text1 . length (  )  > text2 . length (  )  ? text1 : text2 ;   String shorttext = text1 . length (  )  > text2 . length (  )  ? text2 : text1 ;  int i = longtext . index Of ( shorttext )  ;  if  ( i != -1 )  {     //  Shorter text is inside the longer text  ( speedup )  .       Operation op =  ( text1 . length (  )  > text2 . length (  )  )  ?  Operation . DELETE :  Operation . INSERT ;      diffs . add ( new  Diff ( op, longtext . substring ( 0, i )  )  )  ;      diffs . add ( new  Diff (  Operation . EQUAL, shorttext )  )  ;      diffs . add ( new  Diff ( op, longtext . substring ( i + shorttext . length (  )  )  )  )  ;      return diffs ;  } if  ( shorttext . length (  )  == 1 )  {     //  Single character string .      //  After the previous speedup, the character can't be an equality .      diffs . add ( new  Diff (  Operation . DELETE, text1 )  )  ;      diffs . add ( new  Diff (  Operation . INSERT, text2 )  )  ;      return diffs ;  } //  Check to see if the problem can be split in two .   String [  ]  hm = diff_half Match ( text1, text2 )  ;  if  ( hm != null )  {     // A half-match was found, sort out the return data .       String text1_a = hm [ 0 ]  ;       String text1_b = hm [ 1 ]  ;       String text2_a = hm [ 2 ]  ;       String text2_b = hm [ 3 ]  ;       String mid_common = hm [ 4 ]  ;      //  Send both pairs off for separate processing .       Linked List< Diff> diffs_a = diff_main ( text1_a, text2_a, checklines )  ;       Linked List< Diff> diffs_b = diff_main ( text1_b, text2_b, checklines )  ;      //  Merge the results .      diffs = diffs_a ;      diffs . add ( new  Diff (  Operation . EQUAL, mid_common )  )  ;      diffs . add All ( diffs_b )  ;      return diffs ;  } if  ( checklines && text1 . length (  )  > 100 && text2 . length (  )  > 100 )  {     return diff_line Mode ( text1, text2 )  ;  } return diff_bisect ( text1, text2 )  ; }"
238,"public com . anychart . charts .  Gantt margin (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
239,"public com . anychart . charts .  Waterfall padding (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
240,"public com . anychart . core . cartesian . series .  Range Area range Area (  String data,  String csv Settings ) { return new com . anychart . core . cartesian . series .  Range Area (  String . format (  Locale . US, js Base + "" . range Area ( %s, %s ) "", wrap Quotes ( data ) , wrap Quotes ( csv Settings )  )  )  ; }"
241,"public void min Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Height (  )  ; "" )  ; }"
242,"public  Immutable List< Immutable Set< Build Target>> resolve Target Specs (  Cell root Cell,  Iterable<? extends  Target Node Spec> specs,  Optional< Target Configuration> target Configuration,  Flavor Enhancer flavor Enhancer,  Per Build State per Build State,  Target Node Filter For Spec Resolver target Node Filter )  throws  Build File Parse Exception,  Interrupted Exception{ //  Convert the input spec iterable into a list so we have a fixed ordering, which we'll rely on // when returning results .   Immutable List< Target Node Spec> ordered Specs =  Immutable List . copy Of ( specs )  ;   Multimap< Abs Path,  Integer> per Build File Specs = group Specs By Build File ( root Cell, ordered Specs )  ;  //  Kick off parse futures for each build file .   Array List< Listenable Future< Map .  Entry< Integer,  Immutable Set< Build Target>>>> target Futures = new  Array List<> (  )  ;  for  (  Abs Path build File : per Build File Specs . key Set (  )  )  {      Collection< Integer> build File Specs = per Build File Specs . get ( build File )  ;       Target Node Spec first Spec = ordered Specs . get (  Iterables . get ( build File Specs, 0 )  )  ;       Cell cell = root Cell . get Cell Provider (  )  . get Cell By Canonical Cell Name ( first Spec . get Build File Spec (  )  . get Cell Relative Base Name (  )  . get Cell Name (  )  )  ;      //  Format a proper error message for non-existent build files .      if  ( !cell . get Filesystem (  )  . is File ( build File )  )  {         throw new  Missing Build File Exception ( first Spec . to String (  ) , cell . get Filesystem (  )  . relativize ( build File )  . get Path (  )  )  ;      }     for  ( int index : build File Specs )  {          Target Node Spec spec = ordered Specs . get ( index )  ;          handle Target Node Spec ( flavor Enhancer, per Build State, target Node Filter, target Futures, cell, build File, target Configuration, index, spec )  ;      } } return collect Targets ( ordered Specs . size (  ) , target Futures )  ; }"
243,public  Litho View get Litho View (  ) { return m Component . get Litho View (  )  ; }
244,public  Number get As Number (  ) { throw new  Unsupported Operation Exception ( get Class (  )  . get Simple Name (  )  )  ; }
245,protected  Network Capabilities get Network Capabilities (  Network network ) { return network Capabilities Map . get ( network )  ; }
246,protected void scroll Y ( float pixels Y ) { this . amount Y = pixels Y ; }
247,"private void write Initial Data (  Map< String,  Object> initial Data ) { wait For ( doc Ref . set ( initial Data )  )  ;  expect Local And Remote Event ( initial Data )  ; }"
248,"public com . anychart . charts .  Pie padding (  String padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "", wrap Quotes ( padding )  )  )  ;  return this ; }"
249,public  Animated Drawable Options Builder set Maximum Bytes ( int maximum Bytes ) { m Maximum Bytes = maximum Bytes ;  return this ; }
250,"public  Nullness value Of Local Variable (  Local Variable Node node,  Nullness default Value ) {  Nullness result = contents . get (  Access Path . from Local ( node )  )  ;  return result != null ? result : default Value ; }"
251,"public com . anychart . core . cartesian . series .  Width Based min Point Length (  String length ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Point Length ( %s )  ; "", wrap Quotes ( length )  )  )  ;  return this ; }"
252,"public com . anychart . core . annotations .  Trend Channel max Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
253,"public final  Type Adapter<T> null Safe (  ) { return new  Type Adapter<T> (  )  {     @ Override     public void write (  Json Writer out, T value )  throws IO Exception {         if  ( value == null )  {             out . null Value (  )  ;          } else {              Type Adapter . this . write ( out, value )  ;          }     }     @ Override     public T read (  Json Reader reader )  throws IO Exception {         if  ( reader . peek (  )  ==  Json Token . NULL )  {             reader . next Null (  )  ;              return null ;          }         return  Type Adapter . this . read ( reader )  ;      } } ; }"
254,"public static  String pull Value From Strings (  File directory,  String key ) { if  ( key == null || !key . contains ( ""@"" )  )  {     return null ;  }  File file = new  File ( directory, ""/res/values/strings . xml"" )  ;  key = key . replace ( ""@string/"", """" )  ;  if  ( file . exists (  )  )  {     try {          Document doc = load Document ( file )  ;          X Path x Path = X Path Factory . new Instance (  )  . new X Path (  )  ;          X Path Expression expression = x Path . compile ( ""/resources/string [ @name="" + '""' + key + ""\"" ] /text (  ) "" )  ;           Object result = expression . evaluate ( doc, X Path Constants . STRING )  ;          if  ( result != null )  {             return  (  String )  result ;          }     } catch  ( SAX Exception |  Parser Configuration Exception | IO Exception | X Path Expression Exception ignored )  {     } } return null ; }"
255,public static  Navigation value Of ( int value ) { return for Number ( value )  ; }
256,"public void update Dex Statistics (  Dalv Code non Opt Code,  Dalv Code code ) { if  ( DEBUG )  {      System . err . println ( ""dex insns  ( old/new )  "" + non Opt Code . get Insns (  )  . code Size (  )  + ""/"" + code . get Insns (  )  . code Size (  )  + "" regs  ( o/n )  "" + non Opt Code . get Insns (  )  . get Registers Size (  )  + ""/"" + code . get Insns (  )  . get Registers Size (  )  )  ;  } dex Running Delta Insns +=  ( code . get Insns (  )  . code Size (  )  - non Opt Code . get Insns (  )  . code Size (  )  )  ;  dex Running Delta Registers +=  ( code . get Insns (  )  . get Registers Size (  )  - non Opt Code . get Insns (  )  . get Registers Size (  )  )  ;  dex Running Total Insns += code . get Insns (  )  . code Size (  )  ; }"
257,public int get Bitmap Format (  ) { return m Bitmap Format ; }
258,"public static byte [  ]  build Aac Audio Specific Config ( int audio Object Type, int sample Rate Index, int channel Config ) { byte [  ]  specific Config = new byte [ 2 ]  ;  specific Config [ 0 ]  =  ( byte )   (  (  ( audio Object Type << 3 )  & 0x F8 )  |  (  ( sample Rate Index >> 1 )  & 0x07 )  )  ;  specific Config [ 1 ]  =  ( byte )   (  (  ( sample Rate Index << 7 )  & 0x80 )  |  (  ( channel Config << 3 )  & 0x78 )  )  ;  return specific Config ; }"
259,public void set Group Size ( int group Size ) { this . group Size = group Size ; }
260,"public static  Go Arch from String (  String name ) { if  ( map . contains Key ( name )  )  {     return map . get ( name )  ;  } throw new  No Such Element Exception ( "" No GOARCH found for name '"" + name + ""'"" )  ; }"
261,"public static void print (  Class File cf,  Print Writer out ) { /* 0x0020  ( SYNCHRONIZED )  means ACC_SUPER if the modifiers      * are of a class .       */ int mod =  Access Flag . to Modifier ( cf . get Access Flags (  )  & ~ Access Flag . SYNCHRONIZED )  ;  out . println ( ""major: "" + cf . major + "", minor: "" + cf . minor + "" modifiers: "" +  Integer . to Hex String ( cf . get Access Flags (  )  )  )  ;  out . println (  Modifier . to String ( mod )  + "" class "" + cf . get Name (  )  + "" extends "" + cf . get Superclass (  )  )  ;   String [  ]  infs = cf . get Interfaces (  )  ;  if  ( infs != null && infs . length > 0 )  {     out . print ( ""    implements "" )  ;      out . print ( infs [ 0 ]  )  ;      for  ( int i = 1 ;  i < infs . length ;  ++i )  out . print ( "", "" + infs [ i ]  )  ;      out . println (  )  ;  } out . println (  )  ;   List< Field Info> fields = cf . get Fields (  )  ;  for  (  Field Info finfo : fields )  {     int acc = finfo . get Access Flags (  )  ;      out . println (  Modifier . to String (  Access Flag . to Modifier ( acc )  )  + "" "" + finfo . get Name (  )  + ""\t"" + finfo . get Descriptor (  )  )  ;      print Attributes ( finfo . get Attributes (  ) , out, 'f' )  ;  } out . println (  )  ;   List< Method Info> methods = cf . get Methods (  )  ;  for  (  Method Info minfo : methods )  {     int acc = minfo . get Access Flags (  )  ;      out . println (  Modifier . to String (  Access Flag . to Modifier ( acc )  )  + "" "" + minfo . get Name (  )  + ""\t"" + minfo . get Descriptor (  )  )  ;      print Attributes ( minfo . get Attributes (  ) , out, 'm' )  ;      out . println (  )  ;  } out . println (  )  ;  print Attributes ( cf . get Attributes (  ) , out, 'c' )  ; }"
262,"public  Model With Data Binding Binding Model_ on Bind (  On Model Bound Listener< Model With Data Binding Binding Model_,  Data Binding Epoxy Model .  Data Binding Holder> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
263,public void set Encoding ( @ Non Null  Charset encoding ) { this . encoding = encoding ; }
264,public void set Stem H ( int stem H ) { this . stem H = stem H ; }
265,public static  Compact Hash Set<E> create (  Collection<? extends E> collection ) {  Compact Hash Set<E> set = create With Expected Size ( collection . size (  )  )  ;  set . add All ( collection )  ;  return set ; }
266,"public com . anychart . core . cartesian . series .  Width Based container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
267,"protected E load Entity ( int location ) { boolean ok = cursor . move To Position ( location )  ;  if  ( !ok )  {     throw new  Dao Exception ( "" Could not move to cursor location "" + location )  ;  } E entity = dao Access . load Current ( cursor, 0, true )  ;  if  ( entity == null )  {     throw new  Dao Exception ( "" Loading of entity failed  ( null )  at position "" + location )  ;  } return entity ; }"
268,"public  Transform get Transform (  ) { jni Get Transform ( addr, transform . vals )  ;  return transform ; }"
269,public  Task< Void> run Batch ( @ Non Null  Write Batch .  Function batch Function ) {  Write Batch batch = batch (  )  ;  batch Function . apply ( batch )  ;  return batch . commit (  )  ; }
270,"public com . anychart . core . annotations .  Fibonacci Timezones bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
271,"public void hover Gap (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . hover Gap (  )  ; "" )  ; }"
272,public void add All ( double .  .  .  values ) { for  ( double value : values )  {     add ( value )  ;  }}
273,"public com . anychart . charts .  Sparkline connect Missing Points (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . connect Missing Points ( %s )  ; "", enabled )  )  ;  return this ; }"
274,"public float get Min Crop Height (  ) { return  Math . max ( m Min Crop Window Height, m Min Crop Result Height / m Scale Factor Height )  ; }"
275,"public  Init Command set Directory (  File directory )  throws  Illegal State Exception{ validate Dirs ( directory, git Dir, bare )  ;  this . directory = directory ;  return this ; }"
276,"private static boolean is In Buck Out (  Project Filesystem project Filesystem,  Path path ) { return path . starts With ( project Filesystem . get Buck Paths (  )  . get Configured Buck Out (  )  )  && !is In Embedded Cell Buck Out ( project Filesystem, path )  ; }"
277,public final boolean equals (  Object other ) { if  ( this == other )  {     return true ;  }  Offsetted Item other Item =  (  Offsetted Item )  other ;   Item Type this Type = item Type (  )  ;   Item Type other Type = other Item . item Type (  )  ;  if  ( this Type != other Type )  {     return false ;  } return  ( compare To0 ( other Item )  == 0 )  ; }
278,"public  Buffered Input Stream read ( int buffer Size ) { return new  Buffered Input Stream ( read (  ) , buffer Size )  ; }"
279,"public int restore (  String tag ) {  Array List< String> queries = m Tag Query Table . get ( tag )  ;   Array List< String [  ] > parameters = m Tag Query Parameters . get ( tag )  ;  if  ( queries != null && parameters != null )  {     int restored_queries = queries . size (  )  ;      for  ( int i = 0 ;  i < restored_queries ;  i++ )  {         m SQ Lite Database . raw Query ( queries . get ( i ) , parameters . get ( i )  )  . move To First (  )  ;      }     m Tag Query Table . remove ( tag )  ;      m Tag Query Parameters . remove ( tag )  ;      return restored_queries ;  } return 0 ; }"
280,"public void test Do Not Cache Stateful Image (  ) { when ( m Closeable Image1 . is Stateful (  )  )  . then Return ( true )  ;  when ( m Closeable Image2 . is Stateful (  )  )  . then Return ( true )  ;  setup Bitmap Memory Cache Get Not Found (  )  ;  setup Input Producer Streaming Success (  )  ;  when ( m Memory Cache . get ( m Bitmap Memory Cache Key )  )  . then Return ( null )  ;  m Bitmap Memory Cache Producer . produce Results ( m Consumer, m Producer Context )  ;  verify ( m Consumer )  . on New Result ( m Intermediate Image Reference,  Consumer . NO_FLAGS )  ;  verify ( m Consumer )  . on New Result ( m Final Image Reference,  Consumer . IS_LAST )  ;  verify ( m Memory Cache, never (  )  )  . cache ( any (  Bitmap Memory Cache Key . class ) , any (  Closeable Reference . class )  )  ; }"
281,public boolean is Connectable (  ) { for  (  Device Service service : services . values (  )  )  {     if  ( service . is Connectable (  )  )          return true ;  } return false ; }
282,public static int op Info ( int opcode ) { return OPCODE_INFO [ opcode ]  ; }
283,protected void on Draw (  Canvas canvas ) { super . on Draw ( canvas )  ;  draw Dimmed Layer ( canvas )  ;  draw Crop Grid ( canvas )  ; }
284,boolean has Default Ref Filter (  ) { return hide Refs . length == 0 ; }
285,public  Field Writer get Field Writer (  ) { return fields ; }
286,"public long get Animation Duration (  Recycler View recycler View, int animation Type, float animate Dx, float animate Dy ) { return animation Type ==  Item Touch Helper . ANIMATION_TYPE_DRAG ? m Drag Animation Duration : m Swipe Animation Duration ; }"
287,public void add Job In Background (  Job job ) {  Add Job Message message = message Factory . obtain (  Add Job Message . class )  ;  message . set Job ( job )  ;  message Queue . post ( message )  ; }
288,public  Builder show Restart Button ( boolean show Restart Button ) { config . show Restart Button = show Restart Button ;  return this ; }
289,public void set Simple Byte Array ( @ Not Null byte [  ]  simple Byte Array ) { this . simple Byte Array = simple Byte Array ; }
290,public void set Panel Slide Listener ( @ Nullable  Sliding Up Panel Layout .  Panel Slide Listener listener ) { m Listener = listener ; }
291,"T get File (  Cell cell,  Abs Path build File )  throws  Build File Parse Exception{ try {     return get File Job ( cell, build File )  . get (  )  ;  } catch  (  Exception e )  {     propagate Cause If Instance Of ( e,  Build File Parse Exception . class )  ;      propagate Cause If Instance Of ( e,  Execution Exception . class )  ;      propagate Cause If Instance Of ( e,  Unchecked Execution Exception . class )  ;      throw new  Runtime Exception ( e )  ;  }}"
292,public com . facebook . buck . remoteexecution . proto .  Worker Info get Worker Info (  ) { return worker Info_ == null ? com . facebook . buck . remoteexecution . proto .  Worker Info . get Default Instance (  )  : worker Info_ ; }
293,"private  Cst Array make Static Values Constant (  ) { //  First sort the statics into their final order .   Collections . sort ( static Fields )  ;  /*      *  Get the size of static Values minus any trailing zeros/nulls  ( both      * nulls per se as well as instances of  Cst Known Null )  .       */ int size = static Fields . size (  )  ;  while  ( size > 0 )  {      Encoded Field field = static Fields . get ( size - 1 )  ;       Constant cst = static Values . get ( field )  ;      if  ( cst instanceof  Cst Literal Bits )  {         //  Note:  Cst Known Null extends  Cst Literal Bits .          if  (  (  (  Cst Literal Bits )  cst )  . get Long Bits (  )  != 0 )  {             break ;          }     } else if  ( cst != null )  {         break ;      }     size-- ;  } if  ( size == 0 )  {     return null ;  } //  There is something worth encoding, so build up a result .   Cst Array .  List list = new  Cst Array .  List ( size )  ;  for  ( int i = 0 ;  i < size ;  i++ )  {      Encoded Field field = static Fields . get ( i )  ;       Constant cst = static Values . get ( field )  ;      if  ( cst == null )  {         cst =  Zeroes . zero For ( field . get Ref (  )  . get Type (  )  )  ;      }     list . set ( i, cst )  ;  } list . set Immutable (  )  ;  return new  Cst Array ( list )  ; }"
294,"public com . anychart . core . stock . scrollerseries .  Candlestick labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
295,"public com . anychart . core .  State Settings normal (  ) { return new com . anychart . core .  State Settings ( js Base + "" . normal (  ) "" )  ; }"
296,"public com . anychart . charts .  Linear Gauge padding (  String value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
297,public  Uri get Redirect Url (  ) { if  ( dynamic Link Data == null )  {     return null ;  } return dynamic Link Data . get Redirect Url (  )  ; }
298,"public void start ( @ Non Null  Activity activity ) { start ( activity, REQUEST_CODE )  ; }"
299,"public void connect (  String db Name,  String events Collection Name ) { if  ( mongo Client != null )  {     mongo Client . close (  )  ;  } mongo Client = new  Mongo Client (  System . get Property ( ""mongo-host"" ) ,  Integer . parse Int (  System . get Property ( ""mongo-port"" )  )  )  ;  database = mongo Client . get Database ( db Name )  ;  events Collection = database . get Collection ( events Collection Name )  ; }"
300,public  Batch Ref Update set Ref Log Ident (  Person Ident pi ) { ref Log Ident = pi ;  return this ; }
301,"public void does Not Contain Match (  Pattern pattern ) { if  ( pattern . matcher ( actual )  . find (  )  )  {     fail With Actual ( ""expected not to contain a match for"", pattern )  ;  }}"
302,public  Builder<B> maximum Size ( int maximum Size ) { check Argument ( maximum Size > 0 )  ;  this . maximum Size = maximum Size ;  return this ; }
303,public boolean is Dry Run (  ) { return dry Run ; }
304,"void eval (  ) { // execute expr1 if bool is true, expr2 if false if  ( pop Boolean (  )  )  {     //                        expression . push ( pop Expression (  )  )  ;      pop Expression (  )  ;  } else {     pop Expression (  )  ;  //                        expression . push ( pop Expression (  )  )  ;  }}"
305,public  Extra Transaction extra Transaction (  ) { return m Delegate . extra Transaction (  )  ; }
306,"public  Affine2 inv (  ) { float det = det (  )  ;  if  ( det == 0 )      throw new  Gdx Runtime Exception ( "" Can't invert a singular affine matrix"" )  ;  float inv Det = 1 . 0f / det ;  float tmp00 = m11 ;  float tmp01 = -m01 ;  float tmp02 = m01 * m12 - m11 * m02 ;  float tmp10 = -m10 ;  float tmp11 = m00 ;  float tmp12 = m10 * m02 - m00 * m12 ;  m00 = inv Det * tmp00 ;  m01 = inv Det * tmp01 ;  m02 = inv Det * tmp02 ;  m10 = inv Det * tmp10 ;  m11 = inv Det * tmp11 ;  m12 = inv Det * tmp12 ;  return this ; }"
307,"public com . anychart . core . utils .  Margin set (  String [  ]  value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
308,public void set Accent Color (  String color ) { m Accent Color =  Color . parse Color ( color )  ; }
309,"public  Request Creator network Policy ( @ Non Null  Network Policy policy, @ Non Null  Network Policy .  .  .  additional ) { data . network Policy ( policy, additional )  ;  return this ; }"
310,"public void change Buffer Data (  Buffer Info buffer Info,  Buffer new Data, int index, boolean resize Buffer ) { change Buffer Data ( buffer Info, new Data, index, new Data . capacity (  ) , resize Buffer )  ; }"
311,"public com . anychart . charts .  Radar bounds (  Number x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
312,"public  Set< Child Key> get Known Complete Children (  Path path ) { hard Assert ( !this . is Query Complete (  Query Spec . default Query At Path ( path )  ) , "" Path is fully complete . "" )  ;   Set< Child Key> complete Children = new  Hash Set< Child Key> (  )  ;  //  First, get complete children from any queries at this location .   Set< Long> query Ids = filtered Query Ids At Path ( path )  ;  if  ( !query Ids . is Empty (  )  )  {     complete Children . add All ( storage Layer . load Tracked Query Keys ( query Ids )  )  ;  } //  Second, get any complete default queries immediately below us .  for  (  Map .  Entry< Child Key,  Immutable Tree< Map< Query Params,  Tracked Query>>> child Entry : this . tracked Query Tree . subtree ( path )  . get Children (  )  )  {      Child Key child Key = child Entry . get Key (  )  ;       Immutable Tree< Map< Query Params,  Tracked Query>> child Tree = child Entry . get Value (  )  ;      if  ( child Tree . get Value (  )  != null && HAS_DEFAULT_COMPLETE_PREDICATE . evaluate ( child Tree . get Value (  )  )  )  {         complete Children . add ( child Key )  ;      } } return complete Children ; }"
313,"public com . anychart . core . resource .  Activities stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
314,"public com . anychart . core . gantt . elements .  Milestones Element milestones (  ) { return new com . anychart . core . gantt . elements .  Milestones Element ( js Base + "" . milestones (  ) "" )  ; }"
315,"public static final I Binder fetch Binder (  String name ) { try {     I Binder binder =  Plugin Process Main . get Plugin Host (  )  . fetch Binder ( name )  ;      if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, ""fetch Binder n="" + name + "" b="" + binder )  ;      }     return binder ;  } catch  (  Throwable e )  {     if  ( LOGR )  {          Log Release . e ( PLUGIN_TAG, ""mp f . b: "" + e . get Message (  ) , e )  ;      } } return null ; }"
316,"public com . anychart . charts .  Cartesian line Marker (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Marker ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
317,"int get Initial Animated Litho View Width ( int current Animated Width, boolean has New Component Tree ) { return get Initial Animated Litho View Dimension ( current Animated Width, has New Component Tree, m Root Width Animation,  Animated Properties . WIDTH )  ; }"
318,public void contains None In ( E [  ]  excluded ) { contains None In ( as List ( excluded )  )  ; }
319,public void set Side ( @ Gravity Flag int side ) { m Side = side ; }
320,public T [  ]  to Array ( T [  ]  a ) { final  Monitor monitor = this . monitor ;  monitor . enter (  )  ;  try {     return q . to Array ( a )  ;  } finally {     monitor . leave (  )  ;  }}
321,"public  List<? extends  Event> apply Server Merge ( final  Path path, final  Map< Path,  Node> changed Children ) { return persistence Manager . run In Transaction ( new  Callable< List<? extends  Event>> (  )  {     @ Override     public  List<? extends  Event> call (  )  {          Compound Write merge =  Compound Write . from Path Merge ( changed Children )  ;          persistence Manager . update Server Cache ( path, merge )  ;          return apply Operation To Sync Points ( new  Merge (  Operation Source . SERVER, path, merge )  )  ;      } } )  ; }"
322,"public com . anychart . core . axes .  Ticks container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
323,"public void purge (  String unique Tag, final long dex Patch Version ) { // remove old dexpatch try {      File dex Patch Dir = new  File ( bundle Dir, DEXPATCH_DIR )  ;       File [  ]  dex Patchs = dex Patch Dir . list Files ( new  Filename Filter (  )  {         @ Override         public boolean accept (  File dir,  String filename )  {             if  ( dex Patch Version > 0 && filename . equals ( dex Patch Version + """" )  )  {                 return false ;              } else {                 return true ;              }         }     } )  ;      if  ( dex Patchs != null )  {         for  (  File patch : dex Patchs )  {             if  ( patch . is Directory (  )  )  {                 delete Directory ( patch )  ;              }         }     }     // remove old update version      File [  ]  dirs = bundle Dir . list Files (  )  ;      for  (  File dir : dirs )  {         if  ( dir . is Directory (  )  && !dir . get Name (  )  . contains ( ""dexpatch"" )  && !dir . get Name (  )  . equals ( unique Tag )  )  {             delete Directory ( dir )  ;          }     } } catch  (  Throwable e )  {     e . print Stack Trace (  )  ;  }}"
324,public  String get Correlation Id (  ) { return m Correlation Id ; }
325,public  Swipe Builder2 right (  ) { return with Directions (  Item Touch Helper . RIGHT )  ; }
326,public  Ct Class get Declaring Class (  ) { return declaring Class ; }
327,"public com . anychart . core . resource . resourcelist .  Tags Settings word Break (  String mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . word Break ( %s )  ; "", wrap Quotes ( mode )  )  )  ;  return this ; }"
328,"public final boolean is Class Init (  ) { return name . get String (  )  . equals ( ""<clinit>"" )  ; }"
329,"public com . anychart . core . stock . scrollerseries .  Stick stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
330,"public static void cancel (  Object tag ) { AN Request Queue . get Instance (  )  . cancel Request With Given Tag ( tag, false )  ; }"
331,public static  Integer get Glyph Name Index (  String glyph Name ) { int [  ]  unicodes = get Unicode Values ( glyph Name )  ;  if  ( unicodes == null )  {     return null ;  } else {     return new  Integer ( unicodes [ 0 ]  )  ;  }}
332,"private static void update Animation Lock Count ( final  Extension State< Transitions Extension State> extension State, final  Transitions Extension Input input, final int index, final boolean increment ) { //  Update children final int last Descendant Index = find Last Descendant Index ( input, index )  ;  for  ( int i = index ;  i <= last Descendant Index ;  i++ )  {     final  Render Tree Node render Tree Node = input . get Mountable Output At ( i )  ;      final long id = render Tree Node . get Render Unit (  )  . get Id (  )  ;      if  ( increment )  {         if  ( !extension State . owns Reference ( id )  )  {             extension State . acquire Mount Reference ( id, false )  ;          }     } else {         if  ( extension State . owns Reference ( id )  )  {             extension State . release Mount Reference ( id, false )  ;          }     } } //  Update parents  Render Tree Node parent Render Tree Node = input . get Mountable Output At ( index )  . get Parent (  )  ;  while  ( parent Render Tree Node != null && parent Render Tree Node . get Parent (  )  != null )  {     final long id = parent Render Tree Node . get Render Unit (  )  . get Id (  )  ;      if  ( increment )  {         //  We use the position as 0 as we are not mounting it, just acquiring reference .          if  ( !extension State . owns Reference ( id )  )  {             extension State . acquire Mount Reference ( id, false )  ;          }         if  ( !extension State . owns Reference ( id )  )  {             extension State . acquire Mount Reference ( id, false )  ;          }     } else {         if  ( extension State . owns Reference ( id )  )  {             extension State . release Mount Reference ( id, false )  ;          }     }     parent Render Tree Node = parent Render Tree Node . get Parent (  )  ;  }}"
333,"public  Social Meta Tag Parameters .  Builder set Image Url ( @ Non Null  Uri image Url ) { parameters . put Parcelable ( KEY_SOCIAL_IMAGE_LINK, image Url )  ;  return this ; }"
334,"public com . anychart . charts .  Cartesian left (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", value )  )  ;  return this ; }"
335,"public final  Pack Lock parse (  Progress Monitor progress )  throws IO Exception{ return parse ( progress, progress )  ; }"
336,"public  Merkle Tree Node create Node (  Map< Path,  File Node> files,  Map< Path,  Symlink Node> symlinks,  Map< Path,  Directory Node> empty Directories ) {  Tree Node Builder root Builder = new  Tree Node Builder (  )  ;  files . for Each ( process Tree Node ( root Builder,  Node Type . FILE )  )  ;  symlinks . for Each ( process Tree Node ( root Builder,  Node Type . SYMLINK )  )  ;  empty Directories . for Each ( process Tree Node ( root Builder,  Node Type . DIRECTORY )  )  ;  return root Builder . build ( node Interner )  ; }"
337,"public void signal Period (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . signal Period (  )  ; "" )  ; }"
338,"private static void set Last Crash Timestamp ( @ Non Null  Context context, long timestamp ) { context . get Shared Preferences ( SHARED_PREFERENCES_FILE,  Context . MODE_PRIVATE )  . edit (  )  . put Long ( SHARED_PREFERENCES_FIELD_TIMESTAMP, timestamp )  . commit (  )  ; }"
339,"public com . anychart . charts .  Circular Gauge padding (  Number value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
340,"public com . anychart . core . cartesian . series .  Continuous Range Base a11y (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . a11y ( %s )  ; "", value )  )  ;  return this ; }"
341,"public static void emit Message (  Log Level level,  String category Key,  String message ) {  Error Reporter . get Instance (  )  . report ( map ( level ) , category Key, message )  ; }"
342,"public final  Object get Associated Value (  Object key ) {  Map< Object,  Object> h = associated Values ;  if  ( h == null )      return null ;  return h . get ( key )  ; }"
343,private boolean is Lock Free (  ) { return global Mutex . is Empty (  )  ; }
344,"public static void expend Touch Area ( final  View view, final int expend Size ) { if  ( view != null )  {     final  View parent View =  (  View )  view . get Parent (  )  ;      parent View . post ( new  Runnable (  )  {         @ Override         public void run (  )  {              Rect rect = new  Rect (  )  ;              //如果太早执行本函数，会获取rect失败，因为此时UI界面尚未开始绘制，无法获得正确的坐标             view . get Hit Rect ( rect )  ;              rect . left -= expend Size ;              rect . top -= expend Size ;              rect . right += expend Size ;              rect . bottom += expend Size ;              parent View . set Touch Delegate ( new  Touch Delegate ( rect, view )  )  ;          }     } )  ;  }}"
345,public UUID get Label UUID (  ) { return label UUID ; }
346,public boolean is User Dismissible (  ) { return user Dismissible ; }
347,public void set Proxy Database (  Proxy Data Factory factory ) { proxy Database = factory ; }
348,"protected static void assert Selector Has Default (  Build Target build Target,  Dependency Stack dependency Stack,  String attribute Name,  Selector<?> selector ) { if  ( selector . has Default Condition (  )  )  {     return ;  }  String no Match Message = "" None of the conditions in attribute \"""" + attribute Name + ""\"" of "" + build Target + "" match the configuration"" ;  if  ( selector . get No Match Message (  )  . is Empty (  )  )  {      Iterable<?> keys = selector . get Conditions (  )  . key Set (  )  . stream (  )  . filter (  key -> !key . is Reserved (  )  )  . map (  Selector Key::get Build Target )  . collect (  Collectors . to List (  )  )  ;      no Match Message += "" . \n Checked conditions:\n "" +  Joiner . on ( ""\n "" )  . join ( keys )  ;  } else {     no Match Message += "": "" + selector . get No Match Message (  )  ;  } throw new  Human Readable Exception ( dependency Stack, no Match Message )  ; }"
349,"public void get Object Id (  Mutable Object Id out, int nth ) { final  Abstract Tree Iterator t = trees [ nth ]  ;  if  ( t . matches == current Head )      t . get Entry Object Id ( out )  ;  else     out . clear (  )  ; }"
350,"public synchronized boolean remove (  String key )  throws IO Exception{ check Not Closed (  )  ;  validate Key ( key )  ;   Entry entry = lru Entries . get ( key )  ;  if  ( entry == null || entry . current Editor != null )  {     return false ;  } for  ( int i = 0 ;  i < value Count ;  i++ )  {      File file = entry . get Clean File ( i )  ;      if  ( file . exists (  )  && !file . delete (  )  )  {         throw new IO Exception ( ""failed to delete "" + file )  ;      }     size -= entry . lengths [ i ]  ;      file Count-- ;      entry . lengths [ i ]  = 0 ;  } redundant Op Count++ ;  journal Writer . append ( REMOVE + ' ' + key + '\n' )  ;  lru Entries . remove ( key )  ;  if  ( journal Rebuild Required (  )  )  {     executor Service . submit ( cleanup Callable )  ;  } return true ; }"
351,"public com . anychart . core . annotations .  Triangle top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
352,"public com . anychart . charts .  Sparkline last Hatch Fill (  String hatch Fill Function ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . last Hatch Fill ( %s )  ; "", wrap Quotes ( hatch Fill Function )  )  )  ;  return this ; }"
353,public  Ranged Uri get Initialization Uri (  ) { return initialization Uri ; }
354,public static void upload Events (  ) { get Instance (  )  . upload Events (  )  ; }
355,"public E get First (  ) { @ Suppress Warnings ( ""unchecked"" )  E result =  ( E )  elements [ head ]  ;  if  ( result == null )      throw new  No Such Element Exception (  )  ;  return result ; }"
356,"public com . anychart . core . cartesian . series .  Base With Markers labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
357,"public com . anychart . core . stock . indicators . TRIX trix ( com . anychart . data .  Table Mapping mapping,  Number period,  Number signal Period, com . anychart . enums .  Moving Average Type ma Type, com . anychart . enums .  Moving Average Type signal Ma Type, com . anychart . enums .  Stock Series Type trix Series Type, com . anychart . enums .  Stock Series Type signal Series Type ) { return new com . anychart . core . stock . indicators . TRIX (  String . format (  Locale . US, js Base + "" . trix ( %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, period, signal Period,  ( ma Type != null )  ? ma Type . get Js Base (  )  : null,  ( signal Ma Type != null )  ? signal Ma Type . get Js Base (  )  : null,  ( trix Series Type != null )  ? trix Series Type . get Js Base (  )  : null,  ( signal Series Type != null )  ? signal Series Type . get Js Base (  )  : null )  )  ; }"
358,"private void print Manual Invocation Instructions (  Console console,  Build Id build Id ) {  String message =  String . format ( "" Running `buck fix` .   Invoke this manually with `buck fix --build-id %s`"", build Id )  ;  console . get Std Err (  )  . get Raw Stream (  )  . println ( console . get Ansi (  )  . as Warning Text ( message )  )  ; }"
359,public void add (  Dalv Insn insn ) { finisher . add ( insn )  ; }
360,public void finish (  ) { time = duration ; }
361,"public static final G Code Flavor taste Flavor (  Resources res, int res Id )  throws IO Exception,  Not Found Exception{  Buffered Input Stream buffer = new  Buffered Input Stream ( res . open Raw Resource ( res Id )  )  ;  G Code Flavor ret = taste Flavor ( buffer )  ;  buffer . close (  )  ;  return ret ; }"
362,protected  String get Static Deployed Address (  String network Id ) { return null ; }
363,"public com . anychart . charts .  Pert select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
364,public void click City List Button (  View view ) {  Linear Layout cl =  (  Linear Layout )  find View By Id ( R . id . citylist_layout )  ;   Linear Layout lm =  (  Linear Layout )  find View By Id ( R . id . localmap_layout )  ;  lm . set Visibility (  View . GONE )  ;  cl . set Visibility (  View . VISIBLE )  ; }
365,public static  Node Name unwrap Name ( @ Non Null  Node node ) { return node . get Namespace URI (  )  == null ? new  Name ( node . get Node Name (  )  )  : new  Namespace Aware Name ( node )  ; }
366,"public com . anychart . core . ui .  Labels Factory labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . labels (  ) "" )  ; }"
367,public  Builder set Request Code ( int request Code ) { m Request Code = request Code ;  return this ; }
368,"public com . anychart . core . cartesian . series .  Column3d labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
369,"void begin Request (  Request<T> request ) { // flushed once initialization completes .  if  ( !m Is Cache Initialized )  {     synchronized  ( m Cache Initialization Lock )  {         if  ( !m Is Cache Initialized )  {             m Requests Awaiting Cache Initialization . add ( request )  ;              return ;          }     } } //  If the request is uncacheable, send it over the network .  if  ( request . should Cache (  )  )  {     if  ( m Async Cache != null )  {         m Non Blocking Executor . execute ( new  Cache Task<> ( request )  )  ;      } else {         m Blocking Executor . execute ( new  Cache Task<> ( request )  )  ;      } } else {     send Request Over Network ( request )  ;  }}"
370,public void set On Info Listener (  On Info Listener l ) { m Outside Info Listener = l ; }
371,"public com . anychart . core . resource .  Logo fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
372,public boolean is Set Store Log Entries (  ) { return this . store Log Entries != null ; }
373,"public  View Tree Assert has Visible Text Matching ( final  String pattern ) { final  Immutable List< View> path = get Path To Visible Matching Text ( pattern )  ;   Java6 Assertions . assert That ( path )  . overriding Error Message ( "" Cannot find text matching \""%s\"" in view hierarchy:%n%s"", pattern, actual . make String ( GET_TEXT_FUNCTION )  )  . is Not Null (  )  ;  return this ; }"
374,"public int add ( @ Nullable E element, int occurrences ) { if  ( occurrences == 0 )  {     return count ( element )  ;  } check Argument ( occurrences > 0, ""occurrences cannot be negative: %s"", occurrences )  ;   Count frequency = backing Map . get ( element )  ;  int old Count ;  if  ( frequency == null )  {     old Count = 0 ;      backing Map . put ( element, new  Count ( occurrences )  )  ;  } else {     old Count = frequency . get (  )  ;      long new Count =  ( long )  old Count +  ( long )  occurrences ;      check Argument ( new Count <=  Integer . MAX_VALUE, ""too many occurrences: %s"", new Count )  ;      frequency . add ( occurrences )  ;  } size += occurrences ;  return old Count ; }"
375,public void set Height ( float height ) { this . dimensions . y = height ;  updated = false ; }
376,boolean is Up To Date (  )  throws IO Exception{ // small so it's probably a minor optimization .  try {      List< String> names = read Table Names (  )  ;      if  ( names . size (  )  != stack . size (  )  )  {         return false ;      }     for  ( int i = 0 ;  i < names . size (  )  ;  i++ )  {         if  ( !names . get ( i )  . equals ( stack . get ( i )  . name )  )  {             return false ;          }     } } catch  (  File Not Found Exception e )  {     return stack . is Empty (  )  ;  } return true ; }
377,"public static  Service Finder<S> load (  Class<S> service ) {  Class Loader cl =  Thread . current Thread (  )  . get Context Class Loader (  )  ;  return load ( service, cl )  ; }"
378,"public  Object read From (  Class< Object> type,  Type generic Type,  Annotation [  ]  annotations,  Media Type media Type,  Multivalued Map< String,  String> http Headers,  Input Stream entity Stream )  throws IO Exception,  Web Application Exception{ try {      Fast Json Config fast Json Config = locate Config Provider ( type, media Type )  ;      return JSON . parse Object ( entity Stream, fast Json Config . get Charset (  ) , generic Type, fast Json Config . get Parser Config (  ) , fast Json Config . get Parse Process (  ) , JSON . DEFAULT_PARSER_FEATURE, fast Json Config . get Features (  )  )  ;  } catch  ( JSON Exception ex )  {     throw new  Web Application Exception ( ex )  ;  }}"
379,"public void local To Global (  Number x Coord,  Number y Coord ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . local To Global ( %s, %s )  ; "", x Coord, y Coord )  )  ; }"
380,private  Dop [  ]  make Opcodes Array (  ) { int size = insns . size (  )  ;   Dop [  ]  result = new  Dop [ size ]  ;  for  ( int i = 0 ;  i < size ;  i++ )  {     result [ i ]  = insns . get ( i )  . get Opcode (  )  ;  } return result ; }
381,"public void add Pix (  Pix pix, int mode ) { native Add Pix ( m Native Pixa, pix . m Native Pix, mode )  ; }"
382,public void set Halt On Shutdown ( boolean halt ) { try {     try {         if  ( halt )  {             if  ( shutdown Hook != null )                  return ;              shutdown Hook = new  Thread (  )  {                 public void run (  )  {                      Runtime . get Runtime (  )  . halt ( 0 )  ;                  }             } ;               Runtime . get Runtime (  )  . add Shutdown Hook ( shutdown Hook )  ;          } else if  ( shutdown Hook != null )  {              Runtime . get Runtime (  )  . remove Shutdown Hook ( shutdown Hook )  ;              shutdown Hook = null ;          }     } catch  (  Throwable ignored )  {     //  Can happen if already shutting down .      } } catch  (  Illegal State Exception ex )  {     shutdown Hook = null ;  }}
383,"public com . anychart . core . cartesian . series .  Range Bar parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
384,public synchronized void publish ( @ Nullable  Log Record record ) { list . add ( record )  ; }
385,"public void border Radius (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . border Radius (  )  ; "" )  ; }"
386,"public com . anychart . core . stock . scrollerseries .  Discrete Base height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
387,public void set Uicc Slots Info (  Object uicc Slots Infos ) { this . uicc Slot Infos = uicc Slots Infos ; }
388,"public com . anychart . charts .  Linear Gauge bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
389,"public com . anychart . core . stock . scrollerseries .  Step Area stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
390,"public com . anychart . core . gantt . elements .  Milestones Element stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
391,public  Regex Validator get Regex Validator (  ) { return regex Validator ; }
392,public long get Last Modified (  ) { return last Modified ; }
393,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
394,public  Optional< Transaction Receipt> get Transaction Receipt (  ) { return transaction Receipt ; }
395,"public com . anychart . standalones .  Resource List background (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
396,"public static  Linked Blocking Queue<E> new Linked Blocking Queue (  Iterable<? extends E> elements ) { if  ( elements instanceof  Collection )  {     return new  Linked Blocking Queue<E> (  (  Collection<? extends E> )  elements )  ;  }  Linked Blocking Queue<E> queue = new  Linked Blocking Queue<E> (  )  ;   Iterables . add All ( queue, elements )  ;  return queue ; }"
397,"public com . anychart . core . stock . scrollerseries .  Candlestick normal (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . normal ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
398,public void add Close Listener ( @ Non Null  Session Close Listener listener ) { listeners . add If Absent ( listener )  ; }
399,"public void set Smoothing ( final float smoothing ) { this . smoothing = smoothing ;  set Float ( smoothing Location, this . smoothing )  ; }"
400,"public com . anychart . core . ui .  Timeline row Hover Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Hover Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
401,"public void add Field (  Field Spec Kind field Kind,  Field Spec field Spec ) { field Specs Map . put ( field Kind, field Spec )  ; }"
402,"public void set Body (  String src )  throws  Cannot Compile Exception{ if  ( src == null )      if  ( is Class Initializer (  )  )          src = "" ; "" ;      else         src = ""super (  )  ; "" ;  super . set Body ( src )  ; }"
403,"public com . anychart . charts .  Cartesian3d bounds (  Number x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
404,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
405,"public com . anychart . core . lineargauge .  Scale Bar stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
406,public float get Width (  ) { return this . dimensions . x ; }
407,"public static  Optional< Linkable List Filter> from (  Cxx Buck Config cxx Buck Config,  Linkable Cxx Constructor Arg linkable Arg,  Target Graph target Graph ) { if  ( !linkable Arg . get Link Group Map (  )  . is Present (  )  )  {     return  Optional . empty (  )  ;  } return from ( cxx Buck Config, linkable Arg . get Link Group (  ) , linkable Arg . get Link Group Map (  )  . get (  ) , target Graph )  ; }"
408,"static void on Ref Released (  String plugin Name,  String service Name, int pid ) { synchronized  ( s Record Map )  {      Plugin Service Record pr = s Record Map . get ( generate Map Key ( plugin Name, service Name )  )  ;      if  ( pr != null )  {         int ret Count = pr . decrement Process Ref ( pid )  ;          if  ( DEBUG )  {              Log . d ( TAG, "" [ on Ref Released ]  remaining ref count: "" + ret Count )  ;          }         if  ( ret Count <= 0 )  {             remove Plugin Service Record ( pr )  ;          }     } }}"
409,"public com . anychart . standalones .  Title parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
410,"public com . anychart . core .  State Settings grid (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . grid ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
411,"public void set Loop Count ( @ Int Range ( from = 0, to =  Character . MAX_VALUE )  final int loop Count ) { m Native Info Handle . set Loop Count ( loop Count )  ; }"
412,"public void set Milliseconds ( long milliseconds ) { if  ( milliseconds < 0 )  {     throw new  Invalid Value Exception ( "" Invalid parameter milliseconds: "" + milliseconds )  ;  } this . milliseconds = milliseconds ; }"
413,void clear (  ) { m Global Ids . clear (  )  ;  m Scoped Ids By Owner . clear (  )  ;  m Autogenerated Ids . clear (  )  ;  m Ids . clear (  )  ; }
414,"public com . anychart . core . annotations .  Horizontal Line container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
415,"public com . anychart . core .  State Settings hovered (  ) { return new com . anychart . core .  State Settings ( js Base + "" . hovered (  ) "" )  ; }"
416,"public com . anychart . core . axismarkers .  Gantt Range layout (  String layout ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . layout ( %s )  ; "", wrap Quotes ( layout )  )  )  ;  return this ; }"
417,public void set Floating Label Text ( @ Nullable  Char Sequence floating Label Text ) { this . floating Label Text = floating Label Text == null ? get Hint (  )  : floating Label Text ;  post Invalidate (  )  ; }
418,"public T get ( T obj ) { //  String table =  Cache . get Instance (  )  . get Table Name ( obj . get Class (  )  )  ;   String pk =  Mapping . get Instance (  )  . get PK Property ( obj . get Class (  )  )  ;  long id = get Pk Value ( obj )  ;   Criteria criteria =  Criteria . create ( obj . get Class (  )  )  . add (  Restrictions . eq ( pk, id )  )  ;   Cursor c = query ( criteria )  ;  @ Suppress Warnings ( ""unchecked"" )   List<T> list =  Cursor Utils . get From Cursor ( c,  (  Class<T> )  obj . get Class (  ) , null )  ;  if  ( !list . is Empty (  )  )  {     return list . get ( 0 )  ;  } return null ; }"
419,public boolean is Set (  ) { return this != UNSET ; }
420,public JSON Object get Post Data (  ) { return m Post Data ; }
421,final void internal Reset ( long initial Value ) {  Cell [  ]  as = cells ;  base = initial Value ;  if  ( as != null )  {     int n = as . length ;      for  ( int i = 0 ;  i < n ;  ++i )  {          Cell a = as [ i ]  ;          if  ( a != null )              a . value = initial Value ;      } }}
422,"void add Remaining Completions (  Project project ) { for  (  String qualified Name : replaced Qualified Names )  {     result . add Element (  Prioritized Lookup Element . with Priority (  Spec Lookup Element . create ( qualified Name, project, insert Handler ) ,  Integer . MAX_VALUE )  )  ;  }}"
423,public  Tap Target Sequence consider Outer Circle Canceled ( boolean status ) { this . consider Outer Circle Canceled = status ;  return this ; }
424,"protected void init (  Context context,  Attribute Set attrs, int def Style ) { // Init attrs init Attrs ( context, attrs, def Style )  ; }"
425,"public static int saturated Multiply ( int a, int b ) { return  Ints . saturated Cast (  ( long )  a * b )  ; }"
426,public static  Rop op Aput (  Type Bearer type ) { switch ( type . get Basic Type (  )  )  {     case  Type . BT_INT:         return APUT_INT ;      case  Type . BT_LONG:         return APUT_LONG ;      case  Type . BT_FLOAT:         return APUT_FLOAT ;      case  Type . BT_DOUBLE:         return APUT_DOUBLE ;      case  Type . BT_OBJECT:         return APUT_OBJECT ;      case  Type . BT_BOOLEAN:         return APUT_BOOLEAN ;      case  Type . BT_BYTE:         return APUT_BYTE ;      case  Type . BT_CHAR:         return APUT_CHAR ;      case  Type . BT_SHORT:         return APUT_SHORT ;  } return throw Bad Type ( type )  ; }
427,"public static boolean is ID Card15 ( final  Char Sequence input ) { return is Match (  Regex Constants . REGEX_ID_CARD15, input )  ; }"
428,protected void build Title Over Color (  View Holder view Holder ) { if  ( view Holder != null && view Holder . m Title View != null )  {     if  ( m Title Over Color Res Id != 0 )  {         if  ( m Context != null )              view Holder . m Title View . set Text ( m Context . get Resources (  )  . get String ( m Title Over Color Res Id )  )  ;      } else {         view Holder . m Title View . set Text ( m Title Over Color )  ;      } }}
429,"public void brush ( int red, int green, int blue, int alpha ) { //  If alpha is zero, use a null brush to save rendering time .  if  ( alpha == 0 )  {     current Brush Color = null ;  } else {     current Brush Color = new  Color ( red, green, blue, alpha )  ;  }}"
430,protected void remove Last Field Separator (  String Buffer buffer ) { int len = buffer . length (  )  ;  int sep Len = field Separator . length (  )  ;  if  ( len > 0 && sep Len > 0 && len >= sep Len )  {     boolean match = true ;      for  ( int i = 0 ;  i < sep Len ;  i++ )  {         if  ( buffer . char At ( len - 1 - i )  != field Separator . char At ( sep Len - 1 - i )  )  {             match = false ;              break ;          }     }     if  ( match )  {         buffer . set Length ( len - sep Len )  ;      } }}
431,"public com . anychart . charts .  Cartesian crosshair (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . crosshair ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
432,public final void init Line Number ( int line Number ) { if  ( line Number <= 0 )      throw new  Illegal Argument Exception (  String . value Of ( line Number )  )  ;  if  ( this . line Number > 0 )      throw new  Illegal State Exception (  )  ;  this . line Number = line Number ; }
433,"public void test Rule Key Depends On Deps (  ) {  Fake Project Filesystem filesystem = new  Fake Project Filesystem (  )  ;   File Hash Loader hash Cache = new  Stacked File Hash Cache (  Immutable List . of (  Default File Hash Cache . create Default File Hash Cache ( filesystem,  File Hash Cache Mode . DEFAULT )  )  )  ;   Action Graph Builder graph Builder1 = new  Test Action Graph Builder (  )  ;   Action Graph Builder graph Builder2 = new  Test Action Graph Builder (  )  ;   Default Rule Key Factory rule Key Factory = new  Test Default Rule Key Factory ( hash Cache, graph Builder1 )  ;   Default Rule Key Factory rule Key Factory2 = new  Test Default Rule Key Factory ( hash Cache, graph Builder2 )  ;  //  Create a dependent build rule, //src/com/facebook/buck/cli:common .   Fake Target Node Builder builder =  Fake Target Node Builder . new Builder (  Build Target Factory . new Instance ( ""//src/com/facebook/buck/cli:common"" )  )  ;   Build Rule common Java Library = builder . build ( graph Builder1 )  ;  builder . build ( graph Builder2 )  ;  //  Create a java_library (  )  rule with no deps .   Fake Target Node Builder dependent Builder =  Fake Target Node Builder . new Builder (  Build Target Factory . new Instance ( ""//src/com/facebook/buck/cli:cli"" )  )  ;   Build Rule library No Common = dependent Builder . build ( graph Builder1, filesystem )  ;  //  Create the same java_library (  )  rule, but with a dep on //src/com/facebook/buck/cli:common .  dependent Builder . set Deps ( common Java Library . get Build Target (  )  )  ;   Build Rule library With Common = dependent Builder . build ( graph Builder2, filesystem )  ;  //  Assert that the  Rule Keys are distinct .   Rule Key r1 = rule Key Factory . build ( library No Common )  ;   Rule Key r2 = rule Key Factory2 . build ( library With Common )  ;  assert That ( "" Rule keys should be distinct because the deps of the rules are different . "", r1, not ( equal To ( r2 )  )  )  ; }"
434,"static  Type get Raw Type (  Type generic Type,  Map< Type Variable,  Type> type Variable Map ) {  Type resolved Type = generic Type ;  if  ( generic Type instanceof  Type Variable )  {      Type Variable tv =  (  Type Variable )  generic Type ;      resolved Type = type Variable Map . get ( tv )  ;      if  ( resolved Type == null )  {         resolved Type = extract Bound For Type Variable ( tv )  ;      } } if  ( resolved Type instanceof  Parameterized Type )  {     return  (  (  Parameterized Type )  resolved Type )  . get Raw Type (  )  ;  } else {     return resolved Type ;  }}"
435,private static  Array List< Lat Lng> convert To Lat Lng Array (  String coordinates String ) {  Array List< Lat Lng Alt> lat Lng Alts Array = convert To Lat Lng Alt Array ( coordinates String )  ;   Array List< Lat Lng> coordinates Array = new  Array List< Lat Lng> (  )  ;  for  (  Lat Lng Alt lat Lng Alt : lat Lng Alts Array )  {     coordinates Array . add ( lat Lng Alt . lat Lng )  ;  } return coordinates Array ; }
436,public int get Repeat Mode (  ) { return lottie Drawable . get Repeat Mode (  )  ; }
437,public static  Cache Memory Utils get Instance (  ) { return get Instance ( DEFAULT_MAX_COUNT )  ; }
438,"public static void write PNG (  File Handle file,  Pixmap pixmap, int compression, boolean flip Y ) { try {     //  Guess at deflated size .      PNG writer = new PNG (  ( int )   ( pixmap . get Width (  )  * pixmap . get Height (  )  * 1 . 5f )  )  ;      try {         writer . set Flip Y ( flip Y )  ;          writer . set Compression ( compression )  ;          writer . write ( file, pixmap )  ;      } finally {         writer . dispose (  )  ;      } } catch  ( IO Exception ex )  {     throw new  Gdx Runtime Exception ( "" Error writing PNG: "" + file, ex )  ;  }}"
439,"protected void on Next Obtained ( @ Non Null T obtained ) { synchronized  ( lock )  {     if  ( expected Values . size (  )  == 0 )  {         throw new  Illegal State Exception ( "" Received emission, but no more "" + ""emissions were expected: obtained "" + obtained + "", expected Values = "" + expected Values + "", obtained Values = "" + obtained Values )  ;      }     obtained Values . add ( obtained )  ;  }}"
440,"public com . anychart . core . stock . indicators . AO series (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . series ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
441,public float get Current Scale (  ) { return get Matrix Scale ( m Current Image Matrix )  ; }
442,public void set Transform (  Matrix transform ) { if  ( m Show View != null )      m Show View . set Render Transform ( transform )  ; }
443,"public void write To Parcel (  Parcel out, int flags ) { super . write To Parcel ( out, flags )  ; }"
444,public void instrument (  Expr Editor editor )  throws  Cannot Compile Exception{ check Modify (  )  ; }
445,"public void set Timestamp Format ( final int timestamp Format ) { if  (  Event Timing Timestamp Types . get Instance Of (  )  . get Value For Id ( timestamp Format )  == null )  {     throw new  Illegal Argument Exception ( "" Timestamp format must be 1 or 2  ( ID3v2 . 4, 4 . 5 ) : "" + timestamp Format )  ;  } set Object Value (  Data Types . OBJ_TIME_STAMP_FORMAT, timestamp Format )  ; }"
446,"public  Splitter limit ( int max Items ) { check Argument ( max Items > 0, ""must be greater than zero: %s"", max Items )  ;  return new  Splitter ( strategy, omit Empty Strings, trimmer, max Items )  ; }"
447,public final  Component Path child Path (  Type Element child ) { return create (  Immutable List . < Type Element>builder (  )  . add All ( components (  )  )  . add ( child )  . build (  )  )  ; }
448,void set Links ( final  List< Link> links ) { this . m Links = links ; }
449,"public com . anychart . core . ui .  Labels Factory labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . labels (  ) "" )  ; }"
450,"public  List<T> find All (  Class<T> type,  Predicate predicate ) {  Entity<T> entity = store Coordinator . get Model (  )  . get Entity ( type )  ;   Fetch Request<T> fetch Request = new  Fetch Request<T> ( entity )  ;  fetch Request . set Predicate ( predicate )  ;  return this . execute Fetch Operation ( fetch Request )  ; }"
451,"public  Network Request Metric build (  ) {  Session Manager . get Instance (  )  . unregister For Session Updates ( weak Reference )  ;  unregister For App State (  )  ;  com . google . firebase . perf . v1 .  Perf Session [  ]  perf Sessions =  Perf Session . build And Sort ( get Sessions (  )  )  ;  if  ( perf Sessions != null )  {     builder . add All Perf Sessions (  Arrays . as List ( perf Sessions )  )  ;  }  Network Request Metric metric = builder . build (  )  ;  if  ( !is Allowed User Agent ( user Agent )  )  {     logger . debug ( "" Dropping network request from a ' User- Agent' that is not allowed"" )  ;      return metric ;  } if  ( !is Report Sent )  {     transport Manager . log ( metric, get App State (  )  )  ;      is Report Sent = true ;      return metric ;  } if  ( is Manual Network Request Metric )  {     logger . info ( "" This metric has already been queued for transmission .   "" + "" Please create a new  Http Metric for each request/response"" )  ;  } return metric ; }"
452,"public com . anychart . charts .  Linear Gauge padding (  String value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
453,public static boolean is Enum ( int flags ) { return  ( flags & ACC_ENUM )  != 0 ; }
454,public int get Fade Duration (  ) { return m Fade Drawable . get Transition Duration (  )  ; }
455,private  Accessibility Node Info get Clone (  ) { //  We explicitly avoid allocating the  Accessibility Node Info from the actual pool by using // the private constructor .   Not doing so affects test suites which use both shadow and // non-shadow objects .  final  Accessibility Node Info new Info =  Reflection Helpers . call Constructor (  Accessibility Node Info . class )  ;  final  Shadow Accessibility Node Info new Shadow =  Shadow . extract ( new Info )  ;  new Shadow . m Origin Node Id = m Origin Node Id ;  new Shadow . bounds In Screen = new  Rect ( bounds In Screen )  ;  new Shadow . property Flags = property Flags ;  new Shadow . content Description = content Description ;  new Shadow . text = text ;  new Shadow . performed Action And Args List = performed Action And Args List ;  new Shadow . parent = parent ;  new Shadow . class Name = class Name ;  new Shadow . label For =  ( label For == null )  ? null : obtain ( label For )  ;  new Shadow . labeled By =  ( labeled By == null )  ? null : obtain ( labeled By )  ;  new Shadow . view = view ;  new Shadow . text Selection Start = text Selection Start ;  new Shadow . text Selection End = text Selection End ;  new Shadow . action Listener = action Listener ;  if  ( get Api Level (  )  >= LOLLIPOP )  {     if  ( actions Array != null )  {         new Shadow . actions Array = new  Array List<> (  )  ;          new Shadow . actions Array . add All ( actions Array )  ;      } else {         new Shadow . actions Array = null ;      } } else {     new Shadow . actions Mask = actions Mask ;  } if  ( children != null )  {     new Shadow . children = new  Array List<> (  )  ;      new Shadow . children . add All ( children )  ;  } else {     new Shadow . children = null ;  } new Shadow . refresh Return Value = refresh Return Value ;  new Shadow . movement Granularities = movement Granularities ;  new Shadow . package Name = package Name ;  if  ( get Api Level (  )  >= JELLY_BEAN_MR2 )  {     new Shadow . view Id Resource Name = view Id Resource Name ;  } if  ( get Api Level (  )  >= KITKAT )  {     new Shadow . collection Info = collection Info ;      new Shadow . collection Item Info = collection Item Info ;      new Shadow . input Type = input Type ;      new Shadow . live Region = live Region ;      new Shadow . range Info = range Info ;      new Shadow . real Accessibility Node Info . get Extras (  )  . put All ( real Accessibility Node Info . get Extras (  )  )  ;  } if  ( get Api Level (  )  >= LOLLIPOP )  {     new Shadow . max Text Length = max Text Length ;      new Shadow . error = error ;  } if  ( get Api Level (  )  >= LOLLIPOP_MR1 )  {     new Shadow . traversal After =  ( traversal After == null )  ? null : obtain ( traversal After )  ;      new Shadow . traversal Before =  ( traversal Before == null )  ? null : obtain ( traversal Before )  ;  } if  (  ( get Api Level (  )  >= LOLLIPOP )  &&  ( accessibility Window Info != null )  )  {     new Shadow . accessibility Window Info =  Shadow Accessibility Window Info . obtain ( accessibility Window Info )  ;  } if  ( get Api Level (  )  >= N )  {     new Shadow . drawing Order = drawing Order ;  } return new Info ; }
456,public static _ Fields find By Thrift Id ( int field Id ) { switch ( field Id )  {     case // RULE_KEY     1:         return RULE_KEY ;      case // WAS_STORED     2:         return WAS_STORED ;      case // LAST_STORED_TIMESTAMP_MILLIS     3:         return LAST_STORED_TIMESTAMP_MILLIS ;      case // STORE_LOG_ENTRIES     4:         return STORE_LOG_ENTRIES ;      default:         return null ;  }}
457,public static  Condition< Inspectable Component> text ( final  Matcher< String> matcher ) { return text ( new  Hamcrest Condition<> ( matcher )  )  ; }
458,"public com . anychart . core .  State Settings selected (  ) { return new com . anychart . core .  State Settings ( js Base + "" . selected (  ) "" )  ; }"
459,"public void test Select Preferred Audio Track Multiple Renderers (  )  throws  Exception{  Format english = build Audio Format With Language ( ""en"", ""en"" )  ;   Format german = build Audio Format With Language ( ""de"", ""de"" )  ;  //  First renderer handles english .   Map< String,  Integer> first Renderer Mapped Capabilities = new  Hash Map<> (  )  ;  first Renderer Mapped Capabilities . put ( english . id, FORMAT_HANDLED )  ;  first Renderer Mapped Capabilities . put ( german . id, FORMAT_UNSUPPORTED_SUBTYPE )  ;   Renderer Capabilities first Renderer Capabilities = new  Fake Mapped Renderer Capabilities ( C . TRACK_TYPE_AUDIO, first Renderer Mapped Capabilities )  ;  //  Second renderer handles german .   Map< String,  Integer> second Renderer Mapped Capabilities = new  Hash Map<> (  )  ;  second Renderer Mapped Capabilities . put ( english . id, FORMAT_UNSUPPORTED_SUBTYPE )  ;  second Renderer Mapped Capabilities . put ( german . id, FORMAT_HANDLED )  ;   Renderer Capabilities second Renderer Capabilities = new  Fake Mapped Renderer Capabilities ( C . TRACK_TYPE_AUDIO, second Renderer Mapped Capabilities )  ;   Renderer Capabilities [  ]  renderer Capabilities = new  Renderer Capabilities [  ]  { first Renderer Capabilities, second Renderer Capabilities } ;  //  Without an explicit language preference, prefer the first renderer .   Track Group Array track Groups = wrap Formats ( english, german )  ;   Track Selector Result result = track Selector . select Tracks ( renderer Capabilities, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, english )  ;  assert No Selection ( result . selections . get ( 1 )  )  ;  //  Explicit language preference for english .   First renderer should be used .  track Selector . set Parameters (  Parameters . DEFAULT . build Upon (  )  . set Preferred Audio Language ( ""en"" )  )  ;  result = track Selector . select Tracks ( renderer Capabilities, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, english )  ;  assert No Selection ( result . selections . get ( 1 )  )  ;  //  Explicit language preference for  German .   Second renderer should be used .  track Selector . set Parameters (  Parameters . DEFAULT . build Upon (  )  . set Preferred Audio Language ( ""de"" )  )  ;  result = track Selector . select Tracks ( renderer Capabilities, track Groups, period Id, TIMELINE )  ;  assert No Selection ( result . selections . get ( 0 )  )  ;  assert Fixed Selection ( result . selections . get ( 1 ) , track Groups, german )  ; }"
460,"public com . anychart . core .  Series Point hovered (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hovered ( %s )  ; "", enabled )  )  ;  return this ; }"
461,public float get Max X (  ) { return max X ; }
462,public static long to Long ( int value ) { return value & INT_MASK ; }
463,"public void add Conflict (  String path, int [  ]  [  ]  conflicting Ranges ) { if  ( conflicts == null )      conflicts = new  Hash Map<> (  )  ;  conflicts . put ( path, conflicting Ranges )  ; }"
464,protected  Class Loader get Class Loader (  ) { return get Class (  )  . get Class Loader (  )  ; }
465,"public void height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . height (  )  ; "" )  ; }"
466,protected int place ( K item ) { return  ( int )   ( item . hash Code (  )  * 0x9 E3779 B97 F4 A7 C15 L >>> shift )  ; }
467,"public static  Os Shared Realm get Instance (  Realm Configuration config,  Version ID version ) {  Os Realm Config .  Builder builder = new  Os Realm Config .  Builder ( config )  ;  return get Instance ( builder, version )  ; }"
468,"public com . anychart . charts .  Cartesian range Marker (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . range Marker ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
469,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
470,public static  Skylark Filesystem using (  Project Filesystem project Filesystem ) { return new  Skylark Filesystem ( project Filesystem )  ; }
471,public  File Mode get Entry File Mode (  ) { return  File Mode . from Bits ( mode )  ; }
472,"public static  Calendar get Calendar For Locale (  Calendar old Calendar,  Locale locale ) { if  ( old Calendar == null )  {     return  Calendar . get Instance ( locale )  ;  } else {     final long current Time Millis = old Calendar . get Time In Millis (  )  ;       Calendar new Calendar =  Calendar . get Instance ( locale )  ;      new Calendar . set Time In Millis ( current Time Millis )  ;      return new Calendar ;  }}"
473,public void set Title ( int title ) { tv_title . set Text ( title )  ; }
474,"public com . anychart . charts .  Sparkline x Scale ( com . anychart . scales .  Base settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
475,"public com . anychart . standalones .  Resource Timeline row Even Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Even Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
476,"public com . anychart . core .  Separate Chart top (  Number top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", top )  )  ;  return this ; }"
477,public static  Boolean evaluate (  ) { return  Boolean . FALSE ; }
478,"public void ends With (  String string ) { check Not Null ( string )  ;  if  ( actual == null )  {     fail With Actual ( ""expected a string that ends with"", string )  ;  } else if  ( !actual . ends With ( string )  )  {     fail With Actual ( ""expected to end with"", string )  ;  }}"
479,"public static  Retain Fragment find Or Create Retain Fragment (  Fragment Manager fm ) { //  Check to see if we have retained the worker fragment .   Retain Fragment m Retain Fragment =  (  Retain Fragment )  fm . find Fragment By Tag ( TAG )  ;  //  If not retained  ( or first time running ) , we need to create and add it .  if  ( m Retain Fragment == null )  {     m Retain Fragment = new  Retain Fragment (  )  ;      fm . begin Transaction (  )  . add ( m Retain Fragment, TAG )  . commit Allowing State Loss (  )  ;  } return m Retain Fragment ; }"
480,"public boolean get (  String image Url,  View view ) { return get ( image Url, null, view )  ; }"
481,"public static void dump (  File Descriptor fd,  Print Writer writer,  String [  ]  args ) {  Dump Utils . dump ( fd, writer, args )  ; }"
482,private void set Wave Shift Ratio ( float wave Shift Ratio ) { if  ( this . wave Shift Ratio != wave Shift Ratio )  {     this . wave Shift Ratio = wave Shift Ratio ;      invalidate (  )  ;  }}
483,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
484,"private void validate Environment Method (  Framework Method environment Method,  List< Throwable> errors ) { if  ( !environment Method . is Static (  )  )  {     errors . add ( new  Annotation Format Error ( "" Methods marked by @ Environment or @ Environment For must be static"" )  )  ;  } if  ( ! End To End Environment . class . is Assignable From ( environment Method . get Return Type (  )  )  )  {     errors . add ( new  Annotation Format Error ( "" Methods marked by @ Environment or @ Environment For must return an  End To End Environment"" )  )  ;  }}"
485,"public void delete (  ) { if  ( my Dao == null )  {     throw new  Dao Exception ( "" Entity is detached from DAO context"" )  ;  } my Dao . delete ( this )  ; }"
486,"public  Shared Preferences get Sonic Shared Preferences (  ) { return context . get Shared Preferences ( ""sonic"",  Context . MODE_PRIVATE )  ; }"
487,"private void wait For App Start (  String package Name ) {  Log . d ( LOG_TAG, ""wait for app start"" )  ;  boolean is Process Started = false ;  long start Time =  System . current Time Millis (  )  ;  while  (  System . current Time Millis (  )  < start Time + TIMEOUT )  {     pid = process Info . get Pid By Package Name ( get Base Context (  ) , package Name )  ;      if  ( pid != 0 )  {         is Process Started = true ;          break ;      }     if  ( is Process Started )  {         break ;      } }}"
488,"private void setup Repo (  String global Attributes Content,  String info Attributes Content,  String root Attributes Content,  String sub Dir Attributes Content )  throws  Exception{  File Based Config config = db . get Config (  )  ;  if  ( global Attributes Content != null )  {      File f = new  File ( db . get Directory (  ) , ""global/attributes"" )  ;      write ( f, global Attributes Content )  ;      config . set String (  Config Constants . CONFIG_CORE_SECTION, null,  Config Constants . CONFIG_KEY_ATTRIBUTESFILE, f . get Absolute Path (  )  )  ;  } if  ( info Attributes Content != null )  {      File f = new  File ( db . get Directory (  ) ,  Constants . INFO_ATTRIBUTES )  ;      write ( f, info Attributes Content )  ;  } config . save (  )  ;  if  ( root Attributes Content != null )  {     write Attributes File (  Constants . DOT_GIT_ATTRIBUTES, root Attributes Content )  ;  } if  ( sub Dir Attributes Content != null )  {     write Attributes File ( ""sub/"" +  Constants . DOT_GIT_ATTRIBUTES, sub Dir Attributes Content )  ;  } write Trash File ( ""sub/a . txt"", ""a"" )  ; }"
489,"public com . anychart . charts .  Heat Map y Scroller (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scroller ( %s )  ; "", settings )  )  ;  return this ; }"
490,"public static  New Cell Path Resolver create (  Abs Path root Path,  Config root Config ) { // TODO ( cjhopman ) :  We should support cells that the root cell doesn't know about .   To do that, we // should probably continue to compute this mapping first  ( because that's hardest to get wrong )  .  //  It would require here that we be able to traverse all the other cells in the build and look // at their buckconfigs .   We could construct canonical names for newly discovered cells by adding // a namespacing of some sort  ( i . e .  secondary#tertiary )  .   Immutable Sorted Map< String,  Abs Path> cell Mapping = get Cell Mapping ( root Path, root Config )  ;   Map< Abs Path,  Canonical Cell Name> canonical Name Map = new  Linked Hash Map<> (  )  ;  canonical Name Map . put ( root Path,  Canonical Cell Name . root Cell (  )  )  ;  cell Mapping . for Each (  (  name,  path )  -> canonical Name Map . compute If Absent ( path,  ignored ->  Canonical Cell Name . of (  Optional . of ( name )  )  )  )  ;  return  Default New Cell Path Resolver . of (  Immutable Map . copy Of ( canonical Name Map )  )  ; }"
491,"public com . anychart . core . axes .  Linear y Axis (  Number index ) { return new com . anychart . core . axes .  Linear (  String . format (  Locale . US, js Base + "" . y Axis ( %s ) "", index )  )  ; }"
492,"public com . anychart . core . utils .  Quarter max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
493,public int get Channel Count (  ) { return channel Count ; }
494,public void on Register (  Object o ) { BUS . register ( o )  ;  UI_BUS . register ( o )  ; }
495,public static  List< String> get Zip Entries (  File jar File )  throws IO Exception{  List< String> entries = new  Array List< String> (  )  ;   File Input Stream fis = new  File Input Stream ( jar File )  ;   Zip Input Stream zis = new  Zip Input Stream ( fis )  ;  try {     // loop on the entries of the jar file package and put them in the final jar      Zip Entry entry ;      while  (  ( entry = zis . get Next Entry (  )  )  != null )  {         // do not take directories or anything inside a potential META-INF folder .          if  ( entry . is Directory (  )  )  {             continue ;          }          String name = entry . get Name (  )  ;          entries . add ( name )  ;      } } finally {     zis . close (  )  ;  } return entries ; }
496,public  Builder set Clock (  Clock clock ) { this . clock = clock ;  return this ; }
497,public static  Matcher< Char Sequence> contains Pattern (  Pattern pattern ) { return new  Regex Find Matcher ( pattern )  ; }
498,"public com . anychart . core . annotations .  Infinite Line stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
499,"public void print ( java . io .  Print Writer out ) { new  Printer ( this, out )  . print (  )  ; }"
500,"public void test Observer (  Weather Type weather,  String response ) { final var observer = this . factory . get (  )  ;  assert Equals ( 0, appender . get Log Size (  )  )  ;  observer . update ( weather )  ;  assert Equals ( response, appender . get Last Message (  )  )  ;  assert Equals ( 1, appender . get Log Size (  )  )  ; }"
501,"public static boolean read More ( final  Byte Buffer buf,  Web Socket Impl ws,  Wrapped Byte Channel channel )  throws IO Exception{ buf . clear (  )  ;  int read = channel . read More ( buf )  ;  buf . flip (  )  ;  if  ( read == -1 )  {     ws . eot (  )  ;      return false ;  } return channel . is Need Read (  )  ; }"
502,"public com . anychart . charts .  Venn select Marquee Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
503,"public com . anychart . charts .  Stock plot (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . plot ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
504,"public  Test Many Types View Model_ click Listener ( @ Non Null final  On Model Click Listener< Test Many Types View Model_,  Test Many Types View> click Listener ) { assigned Attributes_epoxy Generated Model . set ( 12 )  ;  on Mutation (  )  ;  if  ( click Listener == null )  {     this . click Listener_ On Click Listener = null ;  } else {     this . click Listener_ On Click Listener = new  Wrapped Epoxy Model Click Listener ( click Listener )  ;  } return this ; }"
505,public final int get Unique Id (  ) { return -1 ; }
506,"public com . anychart . core . utils .  Quarter corners (  String top Left,  String top Right,  String bottom Right,  String bottom Left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . corners ( %s, %s, %s, %s )  ; "", wrap Quotes ( top Left ) , wrap Quotes ( top Right ) , wrap Quotes ( bottom Right ) , wrap Quotes ( bottom Left )  )  )  ;  return this ; }"
507,"public final void set ( final  Attribute attribute1, final  Attribute attribute2, final  Attribute attribute3 ) { set ( attribute1 )  ;  set ( attribute2 )  ;  set ( attribute3 )  ; }"
508,"public com . anychart . core . ui .  Title title (  ) { return new com . anychart . core . ui .  Title ( js Base + "" . title (  ) "" )  ; }"
509,"public void set Network Exclusions ( @ Non Null final  Map< Integer,  Array List< Integer>> network Exclusions ) { this . network Exclusions = network Exclusions ; }"
510,"public com . anychart . core .  Visual Base enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
511,public float get Scale X (  ) { return scale X ; }
512,public  Builder set Id1 (  String id1 String ) { m Id1 =  Identifier . parse ( id1 String )  ;  return this ; }
513,"private static void update (  Awb Bundle awb Bundle,  Map< String,  Bundle Info> bundle Info Map,  App Variant Context app Variant Context,  String apk Version,  String base Version )  throws  Document Exception{  String artifact Id = awb Bundle . get Resolved Coordinates (  )  . get Artifact Id (  )  ;   Bundle Info bundle Info = bundle Info Map . get ( artifact Id )  ;  if  ( null != bundle Info )  {     awb Bundle . bundle Info = bundle Info ;  } else {     bundle Info = awb Bundle . bundle Info ;  } bundle Info . set Is M Bundle ( awb Bundle . is M Bundle )  ;  if  ( app Variant Context . get Atlas Extension (  )  . get T Build Config (  )  . get Inside Of Apk Bundles (  )  . size (  )  > 0 )  {     awb Bundle . is Remote = !app Variant Context . get Atlas Extension (  )  . get T Build Config (  )  . get Inside Of Apk Bundles (  )  . contains ( artifact Id )  ;  } else if  ( app Variant Context . get Atlas Extension (  )  . get T Build Config (  )  . get Out Of Apk Bundles (  )  . size (  )  > 0 )  {     awb Bundle . is Remote = app Variant Context . get Atlas Extension (  )  . get T Build Config (  )  . get Out Of Apk Bundles (  )  . contains ( artifact Id )  ;  } bundle Info . set Is Internal ( !awb Bundle . is Remote )  ;  bundle Info . set Version ( base Version + ""@"" + awb Bundle . get Resolved Coordinates (  )  . get Version (  )  )  ;  bundle Info . set Pkg Name ( awb Bundle . get Package Name (  )  )  ;   String application Name =  Manifest File Utils . get Application Name ( awb Bundle . get Manifest (  )  )  ;  if  (  String Utils . is Not Empty ( application Name )  )  {     if  ( application Name . starts With ( "" . "" )  )  {         application Name = awb Bundle . get Package Name (  )  + application Name ;      }     bundle Info . set Application Name ( application Name )  ;  }  Manifest Helper . collect Bundle Info ( app Variant Context, bundle Info, awb Bundle . get Manifest (  ) , awb Bundle . get Android Libraries (  )  )  ; }"
514,"private void put Resize ( K key, float value ) { K [  ]  key Table = this . key Table ;  for  ( int i = place ( key )  ;   ;  i =  ( i + 1 )  & mask )  {     if  ( key Table [ i ]  == null )  {         key Table [ i ]  = key ;          value Table [ i ]  = value ;          return ;      } }}"
515,"public void add Invokevirtual (  String classname,  String name,  String desc ) { add Invokevirtual ( const Pool . add Class Info ( classname ) , name, desc )  ; }"
516,"public void exists (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . exists (  )  ; "" )  ; }"
517,public void delete (  ) { __throw If Detached (  )  ;  my Dao . delete ( this )  ; }
518,"private boolean is Decor View (  View view ) { if  ( view == null )  {     return false ;  } final  String name Of Class = view . get Class (  )  . get Name (  )  ;  return  ( name Of Class . equals ( ""com . android . internal . policy . impl .  Phone Window$ Decor View"" )  || name Of Class . equals ( ""com . android . internal . policy . impl .  Multi Phone Window$ Multi Phone Decor View"" )  || name Of Class . equals ( ""com . android . internal . policy .  Phone Window$ Decor View"" )  )  ; }"
519,"public com . anychart . core . gantt .  Data Grid Button word Break (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . word Break ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
520,"public com . anychart . core . polar . series .  Range Column min Labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
521,public void set Navigation Bar Tint Enabled ( boolean enabled ) { m Nav Bar Tint Enabled = enabled ;  if  ( m Nav Bar Available )  {     m Nav Bar Tint View . set Visibility ( enabled ?  View . VISIBLE :  View . GONE )  ;  }}
522,public  Iterator< Rev Commit> iterator (  ) {  Rev Commit first = next For Iterator (  )  ;  return new  Iterator< Rev Commit> (  )  {      Rev Commit next = first ;      @ Override     public boolean has Next (  )  {         return next != null ;      }     @ Override     public  Rev Commit next (  )  {          Rev Commit r = next ;          next = next For Iterator (  )  ;          return r ;      }     @ Override     public void remove (  )  {         throw new  Unsupported Operation Exception (  )  ;      } } ; }
523,public static void clear (  ) { local . remove (  )  ;   Global Bundle Cache . clear (  )  ; }
524,public void set Interrupt If Stopped ( boolean interrupt If Stopped ) { m Interrupt If Stopped = interrupt If Stopped ; }
525,public void set Rolling Policy (  Rolling Policy policy ) { rolling Policy = policy ;  if  ( rolling Policy instanceof  Triggering Policy )  {     triggering Policy =  (  Triggering Policy<E> )  policy ;  }}
526,public  Tree Filter get Path Filter (  ) { return path Filter ; }
527,"public com . anychart . standalones .  Project Timeline row Odd Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Odd Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
528,"public com . anychart . core . ui .  Timeline row Selected Fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
529,"public boolean add Children ( final  Collection< Object3 D> children ) {  Raj Log . d ( ""A Frame Task -  Adding children: "" + children )  ;  final A Frame Task task = new A Frame Task (  )  {     @ Override     protected void do Task (  )  {         m Children . add All ( children )  ;          if  ( m Scene Graph != null )  {         //m Scene Graph . add Object ( child )  ;  //TODO:  Uncomment         }     } } ;  return internal Offer Task ( task )  ; }"
530,"public void animate Ripple (  Motion Event event ) { create Animation ( event . get X (  ) , event . get Y (  )  )  ; }"
531,"public  Immutable Map< Path, T> as Map (  ) {  Immutable Map .  Builder< Path, T> builder =  Immutable Map . builder (  )  ;  map . for Each (  (  k,  v )  -> {     if  ( v . value != null )  {         builder . put ( k, v . value )  ;      } } )  ;  return builder . build (  )  ; }"
532,public  Builder clear Log Id (  ) { log Id_ = 0 ;  on Changed (  )  ;  return this ; }
533,public static  Immutable Range Set<C> union Of (  Iterable< Range<C>> ranges ) { return copy Of (  Tree Range Set . create ( ranges )  )  ; }
534,private  Object read Resolve (  ) { return  To String Style . DEFAULT_STYLE ; }
535,public static  Optional< String> get Description (  Throwable Cause Iterable iterable ) { for  (  Throwable t : iterable )  {     if  ( t instanceof  Corrupt Artifact Exception )  {         return  Optional . of (  (  (  Corrupt Artifact Exception )  t )  . get Description (  )  )  ;      } } return  Optional . empty (  )  ; }
536,"public synchronized boolean is Established (  ) { if  ( 0 == session Ptr )  {     throw new  Illegal State Exception ( "" Secure  Session is closed"" )  ;  } return jni Is Established (  )  ; }"
537,"public boolean init (  String datapath,  String language ) { if  ( datapath == null )  {     throw new  Illegal Argument Exception ( "" Data path must not be null!"" )  ;  } if  ( !datapath . ends With (  File . separator )  )  {     datapath +=  File . separator ;  }  File tessdata = new  File ( datapath + ""tessdata"" )  ;  if  ( !tessdata . exists (  )  || !tessdata . is Directory (  )  )  {     throw new  Illegal Argument Exception ( "" Data path must contain subfolder tessdata!"" )  ;  } return native Init ( datapath, language )  ; }"
538,"public com . anychart . core . cartesian . series .  Bar3d bounds (  Number x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
539,"public void set Attribute (  String name, byte [  ]  data ) { declaring Class . check Modify (  )  ;  method Info . add Attribute ( new  Attribute Info ( method Info . get Const Pool (  ) , name, data )  )  ; }"
540,"public void share With Twitter (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . share With Twitter (  )  ; "" )  ; }"
541,public final void init Line Source (  String line Source ) { if  ( line Source == null )      throw new  Illegal Argument Exception (  )  ;  if  ( this . line Source != null )      throw new  Illegal State Exception (  )  ;  this . line Source = line Source ; }
542,"public  Matrix refresh (  Matrix new Matrix,  View chart, boolean invalidate ) { m Matrix Touch . set ( new Matrix )  ;  // make sure scale and translation are within their bounds limit Trans And Scale ( m Matrix Touch, m Content Rect )  ;  if  ( invalidate )      chart . invalidate (  )  ;  new Matrix . set ( m Matrix Touch )  ;  return new Matrix ; }"
543,public  Cst Field Ref get Field (  ) { return field ; }
544,"public void create Or Update Object From Json_object With Primary Key Set Value Directly From Json Object (  )  throws JSON Exception{ JSON Object new Object = new JSON Object ( ""{\""id\"": 1, \""name\"": \""bar\""}"" )  ;  realm . begin Transaction (  )  ;  // id = 0 realm . create Object (  Owner Primary Key . class, 0 )  ;  realm . create Or Update Object From Json (  Owner Primary Key . class, new Object )  ;  realm . commit Transaction (  )  ;   Realm Results< Owner Primary Key> owners = realm . where (  Owner Primary Key . class )  . find All (  )  ;  assert Equals ( 2, owners . size (  )  )  ;  assert Equals ( 1, owners . get ( 1 )  . get Id (  )  )  ;  assert Equals ( ""bar"", owners . get ( 1 )  . get Name (  )  )  ; }"
545,"public static int find First ( int [  ]  bits, int idx ) { int len = bits . length ;  int min Bit = idx & 0x1f ;  for  ( int array Idx = idx >> 5 ;  array Idx < len ;  array Idx++ )  {     int word = bits [ array Idx ]  ;      if  ( word != 0 )  {         int bit Idx = find First ( word, min Bit )  ;          if  ( bit Idx >= 0 )  {             return  ( array Idx << 5 )  + bit Idx ;          }     }     min Bit = 0 ;  } return -1 ; }"
546,"public  Fake Data Set set Data (  Uri uri, byte [  ]  data ) { return new Data ( uri )  . append Read Data ( data )  . end Data (  )  ; }"
547,"public com . anychart . standalones . axes .  Radial container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
548,public  String get String ( short key ) { return read String Value ( get Value Offset For Key ( key )  )  ; }
549,protected boolean is Show Y Sequence Horizontal Line ( int row ) { return true ; }
550,public void stop Wait For Change (  ) { if  ( realm Cache != null )  {     realm Cache . invoke With Lock ( new  Realm Cache .  Callback0 (  )  {         @ Override         public void on Call (  )  {             //  Checks if the  Realm instance has been closed .              if  ( shared Realm == null || shared Realm . is Closed (  )  )  {                 throw new  Illegal State Exception (  Base Realm . CLOSED_REALM_MESSAGE )  ;              }             shared Realm . stop Wait For Change (  )  ;          }     } )  ;  } else {     throw new  Illegal State Exception (  Base Realm . CLOSED_REALM_MESSAGE )  ;  }}
551,"public com . anychart . charts .  Circular Gauge title (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . title ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
552,public  String get Date Format (  ) { return this . fast Json Config . get Date Format (  )  ; }
553,"protected int read Header (  Random Access File file )  throws  Invalid Tag Exception, IO Exception{ int size ;  byte [  ]  buffer = new byte [ 5 ]  ;  // read the 5 character size file . read ( buffer, 0, 5 )  ;  size =  Integer . parse Int ( new  String ( buffer, 0, 5 )  )  ;  if  (  ( size == 0 )  &&  ( ! Tag Option Singleton . get Instance (  )  . is Lyrics3 Keep Empty Field If Read (  )  )  )  {     throw new  Invalid Tag Exception ( "" Lyircs3v2  Field has size of zero . "" )  ;  } return size ; }"
554,"public void text Settings (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . text Settings (  )  ; "" )  ; }"
555,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
556,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
557,"static void register (  Object value ) { if  ( value != null )  {      Map< Object,  Object> m = get Registry (  )  ;      if  ( m == null )  {         REGISTRY . set ( new  Weak Hash Map< Object,  Object> (  )  )  ;      }     get Registry (  )  . put ( value, null )  ;  }}"
558,"public static void build (  Mesh Part Builder builder,  Vector3 corner00,  Vector3 corner10,  Vector3 corner11,  Vector3 corner01,  Vector3 normal, int divisions U, int divisions V ) { build ( builder, vert Tmp1 . set ( corner00, normal, null, null )  . set UV ( 0f, 1f ) , vert Tmp2 . set ( corner10, normal, null, null )  . set UV ( 1f, 1f ) , vert Tmp3 . set ( corner11, normal, null, null )  . set UV ( 1f, 0f ) , vert Tmp4 . set ( corner01, normal, null, null )  . set UV ( 0f, 0f ) , divisions U, divisions V )  ; }"
559,"public void update ( @ Nullable  Token Response token Response, @ Nullable  Authorization Exception auth Exception ) { check Argument ( token Response != null ^ auth Exception != null, ""exactly one of token Response or auth Exception should be non-null"" )  ;  if  ( m Authorization Exception != null )  {     //  Calling update From Token Response while in an error state probably means the developer     // obtained a new token and did the exchange without also calling     // update From Authorization Response .   Attempt to handle this gracefully, but warn the     // developer that this is unexpected .       Logger . warn ( "" Auth State . update should not be called in an error state  ( %s ) , call update"" + ""with the result of the fresh authorization response first"", m Authorization Exception )  ;      m Authorization Exception = null ;  } if  ( auth Exception != null )  {     if  ( auth Exception . type ==  Authorization Exception . TYPE_OAUTH_TOKEN_ERROR )  {         m Authorization Exception = auth Exception ;      }     return ;  } m Last Token Response = token Response ;  if  ( token Response . scope != null )  {     m Scope = token Response . scope ;  } if  ( token Response . refresh Token != null )  {     m Refresh Token = token Response . refresh Token ;  }}"
560,public  List< Value Line Series> get Data Series (  ) { return m Series ; }
561,"public void set From File (  File file )  throws IO Exception{  Random Access File image File = new  Random Access File ( file, ""r"" )  ;  byte [  ]  imagedata = new byte [  ( int )  image File . length (  )  ]  ;  image File . read ( imagedata )  ;  image File . close (  )  ;  set Binary Data ( imagedata )  ;  set Mime Type (  Image Formats . get Mime Type For Binary Signature ( imagedata )  )  ;  set Description ( """" )  ;  set Picture Type (  Picture Types . DEFAULT_ID )  ; }"
562,public  Builder set Curl Command Logger (  Curl Command Logger curl Command Logger ) { m Curl Command Logger = curl Command Logger ;  return this ; }
563,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
564,public  Content Metadata get Content Metadata (  String key ) {  Cached Content cached Content = get ( key )  ;  return cached Content != null ? cached Content . get Metadata (  )  :  Default Content Metadata . EMPTY ; }
565,"public  Builder executor ( @ Non Null  Executor Service executor Service ) { check Not Null ( executor Service, ""executor Service == null"" )  ;  this . service = executor Service ;  return this ; }"
566,"public static  Multimap< String,  Annotation Mirror> get Annotation Annotation Array Values (  Elements elements,  Annotation Mirror annotation ) {  Set Multimap< String,  Annotation Mirror> annotation Members =  Linked Hash Multimap . create (  )  ;  for  (  Map .  Entry<? extends  Executable Element, ? extends  Annotation Value> e : elements . get Element Values With Defaults ( annotation )  . entry Set (  )  )  {      String attribute = e . get Key (  )  . get Simple Name (  )  . to String (  )  ;       Set< Annotation Mirror> annotation Mirrors = new  Linked Hash Set<> (  )  ;      e . get Value (  )  . accept ( new  Annotation Mirror Annotation Value Visitor (  ) , annotation Mirrors )  ;      annotation Members . put All ( attribute, annotation Mirrors )  ;  } return annotation Members ; }"
567,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
568,public boolean has Next (  ) { synchronized  ( lock )  {     try {         return parser . peek (  )  !=  Json Token . END_DOCUMENT ;      } catch  (  Malformed Json Exception e )  {         throw new  Json Syntax Exception ( e )  ;      } catch  ( IO Exception e )  {         throw new  Json IO Exception ( e )  ;      } }}
569,"private byte [  ]  create Segment Table ( int new Comment Length, int setup Header Length,  List< Ogg Page Header .  Packet Start And Length> extra Packets ) { logger . finest ( "" Create  Segment Table  Comment Length:"" + new Comment Length + "": Setup Header Length:"" + setup Header Length )  ;   Byte Array Output Stream result Baos = new  Byte Array Output Stream (  )  ;  byte [  ]  new Start ;  byte [  ]  rest Should Be ;  byte [  ]  next Packet ;  // Vorbis  Comment if  ( setup Header Length == 0 )  {     // Comment  Stream continues onto next page so last lacing value can be 255     new Start = create Segments ( new Comment Length, false )  ;      return new Start ;  } else {     // Comment  Stream finishes on this page so if is a multiple of 255     //have to add an extra entry .      new Start = create Segments ( new Comment Length, true )  ;  } // Setup  Header, should be closed if  ( extra Packets . size (  )  > 0 )  {     rest Should Be = create Segments ( setup Header Length, true )  ;  } else // .  .  continue sonto next page {     rest Should Be = create Segments ( setup Header Length, false )  ;  } logger . finest ( "" Created "" + new Start . length + "" segments for header"" )  ;  logger . finest ( "" Created "" + rest Should Be . length + "" segments for setup"" )  ;  try {     result Baos . write ( new Start )  ;      result Baos . write ( rest Should Be )  ;      if  ( extra Packets . size (  )  > 0 )  {         // Packets are being copied literally not converted from a length, so always pass         //false parameter, TODO is this statement correct         logger . finer ( "" Creating segments for "" + extra Packets . size (  )  + "" packets"" )  ;          for  (  Ogg Page Header .  Packet Start And Length packet : extra Packets )  {             next Packet = create Segments ( packet . get Length (  ) , false )  ;              result Baos . write ( next Packet )  ;          }     } } catch  ( IO Exception ioe )  {     throw new  Runtime Exception ( "" Unable to create segment table:"" + ioe . get Message (  )  )  ;  } return result Baos . to Byte Array (  )  ; }"
570,"public double get Temperature ( double x, double z ) { return get Interpolate Value ( m Temperature, x, z )  ; }"
571,"public static  Function< Item,  String> sha1 (  String string Field ) { return new  String Hash Operator ( string Field,  Hash Utils . SHA1 )  ; }"
572,"public void notify Child Item Moved ( int from Group Position, int from Child Position, int to Group Position, int to Child Position ) { m Wrapper Adapter . notify Child Item Moved ( from Group Position, from Child Position, to Group Position, to Child Position )  ; }"
573,public void set Default Stereo Mode ( @C .  Stereo Mode int stereo Mode ) { default Stereo Mode = stereo Mode ; }
574,public  Timeoutable Value Request<T> with ( @ Non Null final T callback ) { this . value Callback = callback ;  return this ; }
575,"private void _handle Sp Info (  List< News Detail Info .  Spinfo Entity> spinfo ) { if  ( ! List Utils . is Empty ( spinfo )  )  {      View Stub stub =  (  View Stub )  find View By Id ( R . id . vs_related_content )  ;      assert stub != null ;      stub . inflate (  )  ;       Text View tv Type =  (  Text View )  find View By Id ( R . id . tv_type )  ;       Text View tv Related Content =  (  Text View )  find View By Id ( R . id . tv_related_content )  ;      tv Type . set Text ( spinfo . get ( 0 )  . get Sptype (  )  )  ;       Rich Text . from ( spinfo . get ( 0 )  . get Spcontent (  )  )  . url Click ( new  On URL Click Listener (  )  {         @ Override         public boolean url Clicked (  String url )  {              String news Id =  News Utils . clip News Id From Url ( url )  ;              if  ( news Id != null )  {                 launch (  News Article Activity . this, news Id )  ;              }             return true ;          }     } )  . into ( tv Related Content )  ;  }}"
576,"public com . anychart . core . axes .  Ticks container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
577,public  Builder clear Schedule Type (  ) { schedule Type_ = get Default Instance (  )  . get Schedule Type (  )  ;  on Changed (  )  ;  return this ; }
578,"public com . anychart . charts .  Tag Cloud padding (  Number value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
579,"public  Byte Vector put UTF8 ( final  String s ) { final int char Length = s . length (  )  ;  int len = length ;  if  ( len + 2 + char Length > data . length )  {     enlarge ( 2 + char Length )  ;  } final byte [  ]  data = this . data ;  // optimistic algorithm: instead of computing the byte length and then // serializing the string  ( which requires two loops ) , we assume the byte // length is equal to char length  ( which is the most frequent case ) , and // we start serializing the string right away .   During the serialization, // if we find that this assumption is wrong, we continue with the // general method .  data [ len++ ]  =  ( byte )   ( char Length >>> 8 )  ;  data [ len++ ]  =  ( byte )  char Length ;  for  ( int i = 0 ;  i < char Length ;  ++i )  {     final char c = s . char At ( i )  ;      if  (  ( c >= '\001' && c <= '\177' )  ||  ( c >= '一' && c <= '鿿' )  )  {         data [ len++ ]  =  ( byte )  c ;      } else {         throw new  Unsupported Operation Exception (  )  ;      } } length = len ;  return this ; }"
580,"static double [  ]  generate Kernel ( int radius, double sd ) { double [  ]  kernel = new double [ radius * 2 + 1 ]  ;  for  ( int i = -radius ;  i <= radius ;  i++ )  {     kernel [ i + radius ]  =  (  Math . exp ( -i * i /  ( 2 * sd * sd )  )  )  ;  } return kernel ; }"
581,public void set Draw Zero Line ( boolean m Draw Zero Line ) { this . m Draw Zero Line = m Draw Zero Line ; }
582,"public void gl Init (  ) { if  ( program != 0 )  {     return ;  } program =  Utils . compile Program ( vertex Shader Code, fragment Shader Code )  ;  mvp Matrix Handle = GLES20 . gl Get Uniform Location ( program, ""u Mvp Matrix"" )  ;  position Handle = GLES20 . gl Get Attrib Location ( program, ""a Position"" )  ;  check Gl Error (  )  ; }"
583,public  Throwable get Most Specific Cause (  ) {  Throwable root Cause = get Root Cause (  )  ;  return  ( root Cause != null ? root Cause : this )  ; }
584,protected boolean is Enabled (  ) { return is Enabled ; }
585,"public void test Path Separator (  )  throws URI Syntax Exception{  String str = ""http://user:secret@host . xy:80/some%2 Fpath"" ;  UR Iish u = new UR Iish ( str )  ;  assert Equals ( ""http"", u . get Scheme (  )  )  ;  assert True ( u . is Remote (  )  )  ;  assert Equals ( ""/some%2 Fpath"", u . get Raw Path (  )  )  ;  assert Equals ( ""/some/path"", u . get Path (  )  )  ;  assert Equals ( ""host . xy"", u . get Host (  )  )  ;  assert Equals ( 80, u . get Port (  )  )  ;  assert Equals ( ""user"", u . get User (  )  )  ;  assert Equals ( ""secret"", u . get Pass (  )  )  ;  assert Equals ( u, new UR Iish ( str )  )  ; }"
586,"public void set Offscreen Page Limit ( int limit ) { if  ( limit < DEFAULT_OFFSCREEN_PAGES )  {      Log . w ( TAG, "" Requested offscreen page limit "" + limit + "" too small ;  defaulting to "" + DEFAULT_OFFSCREEN_PAGES )  ;      limit = DEFAULT_OFFSCREEN_PAGES ;  } if  ( limit != m Offscreen Page Limit )  {     m Offscreen Page Limit = limit ;      populate (  )  ;  }}"
587,"public  View Transition Builder delay Translation Y As Fraction Of Height ( final float .  .  .  height Fractions ) { get Delayed Processor (  )  . add Process ( TRANSLATION_Y_AS_FRACTION_OF_HEIGHT, height Fractions )  ;  return self (  )  ; }"
588,"public  Maps Card menu Item ( @ Any Res int menu Item ) { if  ( menu Item == 0 )  {      Log . e ( "" Menu Item"", "" Impossible to set  Menu  Item to 0!  Please  Check it"" )  ;  } else {     m Menu Item = menu Item ;      is Menu Item = true ;  } return this ; }"
589,"public com . anychart . core . cartesian . series .  Column3d z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
590,boolean produces Cacheable Subgraph (  ) { return false ; }
591,"public  Item new Item From Cursor ( @ Non Null  Cursor cursor ) { return  Item_ Schema . INSTANCE . new Model From Cursor ( connection, cursor, 0 )  ; }"
592,"private  Optional< Integer> breadth First Search (  Bi Map<U, V> matching,  Map<U,  Integer> layers ) {  Queue<U> queue = new  Array Deque<> (  )  ;   Optional< Integer> free Rhs Vertex Layer =  Optional . absent (  )  ;  //  Enqueue all free LHS vertices and assign them to layer 1 .  for  ( U lhs : graph . key Set (  )  )  {     if  ( !matching . contains Key ( lhs )  )  {         layers . put ( lhs, 1 )  ;          queue . add ( lhs )  ;      } } //  Now proceed with the BFS .  while  ( !queue . is Empty (  )  )  {     U lhs = queue . remove (  )  ;      int layer = layers . get ( lhs )  ;      //  If the BFS has proceeded past a layer in which a free RHS vertex was found, stop .      if  ( free Rhs Vertex Layer . is Present (  )  && layer > free Rhs Vertex Layer . get (  )  )  {         break ;      }     // from the current LHS vertex: we'll just do nothing for matched edges .      for  ( V rhs : graph . get ( lhs )  )  {         if  ( !matching . contains Value ( rhs )  )  {             // to the RHS must be unmatched, because a matched edge cannot lead to a free vertex .  )              if  ( !free Rhs Vertex Layer . is Present (  )  )  {                 free Rhs Vertex Layer =  Optional . of ( layer )  ;              }         } else {             //  We found an RHS vertex with a matched vertex back to the LHS .   If we haven't visited             // that new LHS vertex yet, add it to the next layer .   (  If the edge from the LHS to the             // RHS was matched then the matched edge from the RHS to the LHS will lead back to the             // current LHS vertex, which has definitely been visited, so we correctly do nothing .  )              U next Lhs = matching . inverse (  )  . get ( rhs )  ;              if  ( !layers . contains Key ( next Lhs )  )  {                 layers . put ( next Lhs, layer + 1 )  ;                  queue . add ( next Lhs )  ;              }         }     } } return free Rhs Vertex Layer ; }"
593,"public void get Working Schedule (  Number start Date,  Number end Date,  String unit,  Number count ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Working Schedule ( %s, %s, %s, %s )  ; "", start Date, end Date, wrap Quotes ( unit ) , count )  )  ; }"
594,"public void build Children Of Node (  Byte Buffer moov Buffer,  Default Mutable Tree Node parent Node )  throws IO Exception,  Cannot Read Exception{  Mp4 Box Header box Header ;  // Preprocessing for nodes that contain data before their children atoms  Mp4 Box Header parent Box Header =  (  Mp4 Box Header )  parent Node . get User Object (  )  ;  // We set the buffers position back to this after processing the children int just After Header Pos = moov Buffer . position (  )  ;  // Preprocessing for meta that normally contains 4 data bytes, but doesn't where found under track or tags atom if  ( parent Box Header . get Id (  )  . equals (  Mp4 Atom Identifier . META . get Field Name (  )  )  )  {      Mp4 Meta Box meta = new  Mp4 Meta Box ( parent Box Header, moov Buffer )  ;      meta . process Data (  )  ;      try {         box Header = new  Mp4 Box Header ( moov Buffer )  ;      } catch  (  Null Box Id Exception nbe )  {         // It might be that the meta box didn't actually have any additional data after it so we adjust the buffer         //to be immediately after metabox and code can retry         moov Buffer . position ( moov Buffer . position (  )  -  Mp4 Meta Box . FLAGS_LENGTH )  ;      } finally {         // Skip back last header cos this was only a test          moov Buffer . position ( moov Buffer . position (  )  -  Mp4 Box Header . HEADER_LENGTH )  ;      } } // Defines where to start looking for the first child node int start Pos = moov Buffer . position (  )  ;  while  ( moov Buffer . position (  )  <  (  ( start Pos + parent Box Header . get Data Length (  )  )  -  Mp4 Box Header . HEADER_LENGTH )  )  {     box Header = new  Mp4 Box Header ( moov Buffer )  ;      if  ( box Header != null )  {         box Header . set File Pos ( moov Header . get File Pos (  )  + moov Buffer . position (  )  )  ;          logger . finest ( "" Atom "" + box Header . get Id (  )  + "" @ "" + box Header . get File Pos (  )  + "" of size:"" + box Header . get Length (  )  + "" ,ends @ "" +  ( box Header . get File Pos (  )  + box Header . get Length (  )  )  )  ;           Default Mutable Tree Node new Atom = new  Default Mutable Tree Node ( box Header )  ;          parent Node . add ( new Atom )  ;          if  ( box Header . get Id (  )  . equals (  Mp4 Atom Identifier . UDTA . get Field Name (  )  )  )  {             udta Node = new Atom ;          } else //only interested in meta Node that is child of udta node         if  ( box Header . get Id (  )  . equals (  Mp4 Atom Identifier . META . get Field Name (  )  )  && parent Box Header . get Id (  )  . equals (  Mp4 Atom Identifier . UDTA . get Field Name (  )  )  )  {             meta Node = new Atom ;          } else if  ( box Header . get Id (  )  . equals (  Mp4 Atom Identifier . HDLR . get Field Name (  )  )  && parent Box Header . get Id (  )  . equals (  Mp4 Atom Identifier . META . get Field Name (  )  )  )  {             hdlr Within Meta Node = new Atom ;          } else if  ( box Header . get Id (  )  . equals (  Mp4 Atom Identifier . HDLR . get Field Name (  )  )  )  {             hdlr Within Mdia Node = new Atom ;          } else if  ( box Header . get Id (  )  . equals (  Mp4 Atom Identifier . TAGS . get Field Name (  )  )  )  {             tags Node = new Atom ;          } else if  ( box Header . get Id (  )  . equals (  Mp4 Atom Identifier . STCO . get Field Name (  )  )  )  {             if  ( stco == null )  {                 stco = new  Mp4 Stco Box ( box Header, moov Buffer )  ;                  stco Node = new Atom ;              }         } else if  ( box Header . get Id (  )  . equals (  Mp4 Atom Identifier . ILST . get Field Name (  )  )  )  {              Default Mutable Tree Node parent =  (  Default Mutable Tree Node )  parent Node . get Parent (  )  ;              if  ( parent != null )  {                  Mp4 Box Header parents Parent =  (  Mp4 Box Header )   ( parent )  . get User Object (  )  ;                  if  ( parents Parent != null )  {                     if  ( parent Box Header . get Id (  )  . equals (  Mp4 Atom Identifier . META . get Field Name (  )  )  && parents Parent . get Id (  )  . equals (  Mp4 Atom Identifier . UDTA . get Field Name (  )  )  )  {                         ilst Node = new Atom ;                      }                 }             }         } else if  ( box Header . get Id (  )  . equals (  Mp4 Atom Identifier . FREE . get Field Name (  )  )  )  {             // Might be multiple in different locations             free Nodes . add ( new Atom )  ;          } else if  ( box Header . get Id (  )  . equals (  Mp4 Atom Identifier . TRAK . get Field Name (  )  )  )  {             // Might be multiple in different locations, although only one should be audio track             trak Nodes . add ( new Atom )  ;          }         // For these atoms iterate down to build their children         if  (  ( box Header . get Id (  )  . equals (  Mp4 Atom Identifier . TRAK . get Field Name (  )  )  )  ||  ( box Header . get Id (  )  . equals (  Mp4 Atom Identifier . MDIA . get Field Name (  )  )  )  ||  ( box Header . get Id (  )  . equals (  Mp4 Atom Identifier . MINF . get Field Name (  )  )  )  ||  ( box Header . get Id (  )  . equals (  Mp4 Atom Identifier . STBL . get Field Name (  )  )  )  ||  ( box Header . get Id (  )  . equals (  Mp4 Atom Identifier . UDTA . get Field Name (  )  )  )  ||  ( box Header . get Id (  )  . equals (  Mp4 Atom Identifier . META . get Field Name (  )  )  )  ||  ( box Header . get Id (  )  . equals (  Mp4 Atom Identifier . ILST . get Field Name (  )  )  )  )  {             build Children Of Node ( moov Buffer, new Atom )  ;          }         // Now  adjust buffer for the next atom header at this level         moov Buffer . position ( moov Buffer . position (  )  + box Header . get Data Length (  )  )  ;      } } moov Buffer . position ( just After Header Pos )  ; }"
595,"private  Json Element serialize Provisioners ( @ Non Null final  Json Serialization Context context, @ Non Null final  List< Provisioner> provisioners ) { final  Json Array json Array = new  Json Array (  )  ;  for  (  Provisioner provisioner : provisioners )  {     final  Json Object provisioner Json = new  Json Object (  )  ;      provisioner Json . add Property ( ""provisioner Name"", provisioner . get Provisioner Name (  )  )  ;      provisioner Json . add Property ( ""UUID"", provisioner . get Provisioner Uuid (  )  . to Upper Case (  Locale . US )  )  ;      provisioner Json . add ( ""allocated Unicast Range"", serialize Allocated Unicast Ranges ( context, provisioner . allocated Unicast Ranges )  )  ;      provisioner Json . add ( ""allocated Group Range"", serialize Allocated Group Ranges ( context, provisioner . allocated Group Ranges )  )  ;      provisioner Json . add ( ""allocated Scene Range"", serialize Allocated Scene Ranges ( context, provisioner . allocated Scene Ranges )  )  ;      json Array . add ( provisioner Json )  ;  } return json Array ; }"
596,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
597,public  List<T> get List (  ) { return select Box List . list ; }
598,"public com . anychart . core . ui .  Outline offset (  Number offset ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . offset ( %s )  ; "", offset )  )  ;  return this ; }"
599,"public com . anychart . core .  State Settings median Stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . median Stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
600,"private static float [  ]  append ( float [  ]  array, int current Size, float element ) { if  ( current Size + 1 > array . length )  {     float [  ]  new Array = new float [ grow Size ( current Size )  ]  ;       System . arraycopy ( array, 0, new Array, 0, current Size )  ;      array = new Array ;  } array [ current Size ]  = element ;  return array ; }"
601,public  Immutable Multiset<E> build (  ) { return copy Of ( contents )  ; }
602,"public static void assign Common Tag Values (  Tag tag,  Metadata Container description ) { assert description . get Container Type (  )  ==  Container Type . EXTENDED_CONTENT ;   Metadata Descriptor tmp ;  if  ( ! Utils . is Blank ( tag . get First (  Field Key . ALBUM )  )  )  {     tmp = new  Metadata Descriptor ( description . get Container Type (  ) ,  Asf Field Key . ALBUM . get Field Name (  ) ,  Metadata Descriptor . TYPE_STRING )  ;      tmp . set String Value ( tag . get First (  Field Key . ALBUM )  )  ;      description . remove Descriptors By Name ( tmp . get Name (  )  )  ;      description . add Descriptor ( tmp )  ;  } else {     description . remove Descriptors By Name (  Asf Field Key . ALBUM . get Field Name (  )  )  ;  } if  ( ! Utils . is Blank ( tag . get First (  Field Key . TRACK )  )  )  {     tmp = new  Metadata Descriptor ( description . get Container Type (  ) ,  Asf Field Key . TRACK . get Field Name (  ) ,  Metadata Descriptor . TYPE_STRING )  ;      tmp . set String Value ( tag . get First (  Field Key . TRACK )  )  ;      description . remove Descriptors By Name ( tmp . get Name (  )  )  ;      description . add Descriptor ( tmp )  ;  } else {     description . remove Descriptors By Name (  Asf Field Key . TRACK . get Field Name (  )  )  ;  } if  ( ! Utils . is Blank ( tag . get First (  Field Key . YEAR )  )  )  {     tmp = new  Metadata Descriptor ( description . get Container Type (  ) ,  Asf Field Key . YEAR . get Field Name (  ) ,  Metadata Descriptor . TYPE_STRING )  ;      tmp . set String Value ( tag . get First (  Field Key . YEAR )  )  ;      description . remove Descriptors By Name ( tmp . get Name (  )  )  ;      description . add Descriptor ( tmp )  ;  } else {     description . remove Descriptors By Name (  Asf Field Key . YEAR . get Field Name (  )  )  ;  } if  ( ! Utils . is Blank ( tag . get First (  Field Key . GENRE )  )  )  {     //  Write  Genre  String value     tmp = new  Metadata Descriptor ( description . get Container Type (  ) ,  Asf Field Key . GENRE . get Field Name (  ) ,  Metadata Descriptor . TYPE_STRING )  ;      tmp . set String Value ( tag . get First (  Field Key . GENRE )  )  ;      description . remove Descriptors By Name ( tmp . get Name (  )  )  ;      description . add Descriptor ( tmp )  ;       Integer genre Num =  Genre Types . get Instance Of (  )  . get Id For Name ( tag . get First (  Field Key . GENRE )  )  ;      // well     if  ( genre Num != null )  {         tmp = new  Metadata Descriptor ( description . get Container Type (  ) ,  Asf Field Key . GENRE_ID . get Field Name (  ) ,  Metadata Descriptor . TYPE_STRING )  ;          tmp . set String Value ( "" ( "" + genre Num + "" ) "" )  ;          description . remove Descriptors By Name ( tmp . get Name (  )  )  ;          description . add Descriptor ( tmp )  ;      } else {         description . remove Descriptors By Name (  Asf Field Key . GENRE_ID . get Field Name (  )  )  ;      } } else {     description . remove Descriptors By Name (  Asf Field Key . GENRE . get Field Name (  )  )  ;      description . remove Descriptors By Name (  Asf Field Key . GENRE_ID . get Field Name (  )  )  ;  }}"
603,"public  Mesh Part Builder part ( final  String id, int primitive Type, final long attributes, final  Material material ) { return part ( id, primitive Type,  Mesh Builder . create Attributes ( attributes ) , material )  ; }"
604,public void minimize (  ) { draggable View . minimize (  )  ; }
605,public  Find Iterable< Result T> filter ( @ Nullable final  Bson filter ) { this . filter = filter ;  return this ; }
606,public  Complete Builder affects Tags ( @ Nullable  Collection< String> tags ) { affects Tags = non Null Set ( tags )  ;  return this ; }
607,"public void create Structure (  ) { MP3 File . get Structure Formatter (  )  . open Heading Element ( TYPE_FRAME, get Identifier (  )  )  ;  MP3 File . get Structure Formatter (  )  . close Heading Element ( TYPE_FRAME )  ; }"
608,"public com . anychart . core .  State Settings text Direction (  String direction ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Direction ( %s )  ; "", wrap Quotes ( direction )  )  )  ;  return this ; }"
609,public static  Path drop Internal Caches (  Path p ) { //  Just bail without pessimizing in that case .  if  ( p instanceof  Buck Unix Path )  {     return p ;  } return p . get File System (  )  . get Path ( p . to String (  )  )  ; }
610,public void set Disable Caching ( boolean disable Caching ) { this . disable Caching = disable Caching ; }
611,"void write To Log ( final long timestamp, final  String msg ) { background Worker . submit ( new  Callable< Void> (  )  {     @ Override     public  Void call (  )  throws  Exception {         if  ( !is Handling Exception (  )  )  {             log File Manager . write To Log ( timestamp, msg )  ;          }         return null ;      } } )  ; }"
612,"public void get Account ( @ Non Null final  String identifier, @ Non Null final  Get Account Callback callback ) { get Account Internal ( identifier, callback,  Public Api Id . MULTIPLE_ACCOUNT_PCA_GET_ACCOUNT_WITH_IDENTIFIER_CALLBACK )  ; }"
613,"public float get ( K key, float default Value ) { int i = locate Key ( key )  ;  return i < 0 ? default Value : value Table [ i ]  ; }"
614,"public static T Result retry ( int max Attempts, T Input input,  Function<T Input, T Result, T Exception> function,  Retry Strategy<T Input, T Result> retry Strategy )  throws T Exception{ if  ( max Attempts < 1 )  {     return function . apply ( input )  ;  } while  ( true )  {     T Result result = function . apply ( input )  ;      input = retry Strategy . should Retry ( input, result )  ;      if  ( input == null || --max Attempts < 1 )  {         return result ;      } }}"
615,"public  Quaternion sub ( float qx, float qy, float qz, float qw ) { this . x -= qx ;  this . y -= qy ;  this . z -= qz ;  this . w -= qw ;  return this ; }"
616,public void set On State Source Change Listener ( @ Nullable  On State Source Change Listener listener ) { source Listener = listener ; }
617,protected  Progress Estimation get Estimated Progress Of Parsing Buck Files (  ) { if  ( progress Estimator . is Present (  )  )  {     return progress Estimator . get (  )  . get Estimated Progress Of Parsing Buck Files (  )  ;  } else {     return  Progress Estimation . UNKNOWN ;  }}
618,"public static  String get Network Type Name (  Context context ) {  Connectivity Manager manager =  (  Connectivity Manager )  context . get System Service (  Context . CONNECTIVITY_SERVICE )  ;   Network Info network Info ;   String type = NETWORK_TYPE_DISCONNECT ;  if  ( manager == null ||  ( network Info = manager . get Active Network Info (  )  )  == null )  {     return type ;  } if  ( network Info . is Connected (  )  )  {      String type Name = network Info . get Type Name (  )  ;      if  ( ""WIFI"" . equals Ignore Case ( type Name )  )  {         type = NETWORK_TYPE_WIFI ;      } else if  ( ""MOBILE"" . equals Ignore Case ( type Name )  )  {          String proxy Host = android . net .  Proxy . get Default Host (  )  ;          type =  Text Utils . is Empty ( proxy Host )  ?  ( is Fast Mobile Network ( context )  ? NETWORK_TYPE_3 G : NETWORK_TYPE_2 G )  : NETWORK_TYPE_WAP ;      } else {         type = NETWORK_TYPE_UNKNOWN ;      } } return type ; }"
619,"public  Color sub ( float r, float g, float b, float a ) { this . r -= r ;  this . g -= g ;  this . b -= b ;  this . a -= a ;  return clamp (  )  ; }"
620,"public void font Size (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Size (  )  ; "" )  ; }"
621,"public void add Value (  String value ) { if  ( is Null Seperate Multiple Values (  )  )  {     set Value ( this . value + """
622,"public static int sp2px (  Context context, int px ) { return  ( int )   Typed Value . apply Dimension (  Typed Value . COMPLEX_UNIT_SP, px, context . get Resources (  )  . get Display Metrics (  )  )  ; }"
623,"public com . anychart . core . annotations .  Fibonacci Base markers (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
624,"public static int px2dip (  Context context, float px Value ) { final float scale = context . get Resources (  )  . get Display Metrics (  )  . density ;  return  ( int )   ( px Value / scale + 0 . 5f )  ; }"
625,private static  Optional< String> get Abi Directory Component (  Target Cpu Type cpu Type ) { switch ( cpu Type )  {     case ARM:         return  Optional . of (  Sdk Constants . ABI_ARMEABI )  ;      case ARMV7:         return  Optional . of (  Sdk Constants . ABI_ARMEABI_V7 A )  ;      case ARM64:         return  Optional . of (  Sdk Constants . ABI_ARM64_V8 A )  ;      case X86:         return  Optional . of (  Sdk Constants . ABI_INTEL_ATOM )  ;      case X86_64:         return  Optional . of (  Sdk Constants . ABI_INTEL_ATOM64 )  ;      case MIPS:         return  Optional . of (  Sdk Constants . ABI_MIPS )  ;      default:         return  Optional . empty (  )  ;  }}
626,public static void process (  Ssa Method ssa Method ) {  Literal Op Upgrader dc ;  dc = new  Literal Op Upgrader ( ssa Method )  ;  dc . run (  )  ; }
627,"public void test Invalidating Remove2 (  ) {  Min Max Priority Queue< Integer> mm Heap =  Min Max Priority Queue . create (  )  ;   List< Integer> values =  Lists . new Array List ( 1, 20, 1000, 2, 3, 30, 40, 10, 11, 12, 13, 300, 400, 500, 600, 4, 5, 6, 7, 8, 9, 4, 5, 200, 250 )  ;  mm Heap . add All ( values )  ;  assert Equals ( 25, mm Heap . size (  )  )  ;  assert True ( "" Heap is not intact initially"", mm Heap . is Intact (  )  )  ;  mm Heap . remove ( 2 )  ;  assert Equals ( 24, mm Heap . size (  )  )  ;  assert True ( "" Heap is not intact after remove (  ) "", mm Heap . is Intact (  )  )  ;  values . remove All (  Lists . new Array List ( 2 )  )  ;  assert Equals ( values . size (  ) , mm Heap . size (  )  )  ;  assert True ( values . contains All ( mm Heap )  )  ;  assert True ( mm Heap . contains All ( values )  )  ; }"
628,"public double div ( double first Operand, double second Operand ) { check Argument ( second Operand != 0, ""second Operand must be != 0, you cannot divide by zero"" )  ;  return first Operand / second Operand ; }"
629,public  Builder blocks Enabled ( boolean blocks Enabled ) { this . blocks Enabled = blocks Enabled ;  return this ; }
630,private int duration Us To Frames ( long duration Us ) { return  ( int )   (  ( duration Us * sample Rate Hz )  / C . MICROS_PER_SECOND )  ; }
631,"Source Path get Source Path To Resources (  ) { return  Js Util . relative To Output Root ( get Build Target (  ) , get Project Filesystem (  ) , ""res"" )  ; }"
632,"private boolean compare Class Def_ (  Dex Backed Class Def base Class Def,  Dex Backed Class Def new Class Def ) { if  ( null == base Class Def || null == new Class Def )  {     return false ;  } if  ( base Class Def . equals ( new Class Def )  )  {     // compare access flag     if  ( base Class Def . get Access Flags (  )  != new Class Def . get Access Flags (  )  )  {         return true ;      }     // compare super class     if  ( ! String Utils . equals ( base Class Def . get Superclass (  ) , new Class Def . get Superclass (  )  )  )  {         return true ;      }     // compare interfaces     if  ( !equals Impl ( base Class Def . get Interfaces (  ) , new Class Def . get Interfaces (  )  )  )  {         return true ;      }     // compare annotations     if  ( !equals Impl ( base Class Def . get Annotations (  ) , new Class Def . get Annotations (  )  )  )  {         return true ;      }     // 不考虑source File     return false ;  } return true ; }"
633,"public com . anychart . core . stock . scrollerseries .  Stick normal (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . normal ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
634,"public  Optional< Path> get Path Relative To Project Root (  Path path ) { path =  More Paths . normalize ( path )  ;  if  ( path . is Absolute (  )  )  {      Abs Path path Abs =  Abs Path . of ( path )  ;       Abs Path configured Buck Out =  More Paths . normalize ( project Root . resolve ( buck Paths . get Configured Buck Out (  )  )  )  ;      //  If the path is in the configured buck-out, it's also part of the filesystem .      if  ( path Abs . starts With ( configured Buck Out )  || path Abs . starts With ( project Root )  )  {         return  Optional . of (  More Paths . relativize ( project Root . get Path (  ) , path )  )  ;      } else {         return  Optional . empty (  )  ;      } } else {     return  Optional . of ( path )  ;  }}"
635,public  Triple State is Flowing (  ) { return flowing ; }
636,"private void perfom Overlook (  ) {  Edit Text t =  (  Edit Text )  find View By Id ( R . id . overlookangle )  ;  try {     int overlook Angle =  Integer . parse Int ( t . get Text (  )  . to String (  )  )  ;       Map Status ms = new  Map Status .  Builder ( m Baidu Map . get Map Status (  )  )  . overlook ( overlook Angle )  . build (  )  ;       Map Status Update u =  Map Status Update Factory . new Map Status ( ms )  ;      m Baidu Map . animate Map Status ( u )  ;  } catch  (  Number Format Exception e )  {      Toast . make Text ( this, ""请输入正确的俯角"",  Toast . LENGTH_SHORT )  . show (  )  ;  }}"
637,"public static  Menu Item get Menu Item ( @ Non Null  Toolbar toolbar, @ Id Res int menu Id ) {  View v ;  int child Count ;   View inner View ;   Menu Item menu Item ;  for  ( int i = 0 ;  i < toolbar . get Child Count (  )  ;  i++ )  {     v = toolbar . get Child At ( i )  ;      if  ( v instanceof  Action Menu View )  {         child Count =  (  (  Action Menu View )  v )  . get Child Count (  )  ;          for  ( int j = 0 ;  j < child Count ;  j++ )  {             inner View =  (  (  Action Menu View )  v )  . get Child At ( j )  ;              if  ( inner View instanceof  Action Menu Item View )  {                 menu Item =  (  (  Action Menu Item View )  inner View )  . get Item Data (  )  ;                  if  ( menu Item . get Item Id (  )  == menu Id )  {                     return menu Item ;                  }             }         }     } } return null ; }"
638,"public void test Refs Cache After Update Loose Only (  )  throws  Exception{ //  Do not use the default repo for this case .   List< Ref> all Refs = db . get Ref Database (  )  . get Refs (  )  ;   Object Id old Value = db . resolve ( ""HEAD"" )  ;  write Symref (  Constants . HEAD, ""refs/heads/newref"" )  ;   Ref Update update Ref = db . update Ref (  Constants . HEAD )  ;  update Ref . set Force Update ( true )  ;  update Ref . set New Object Id ( old Value )  ;   Result update = update Ref . update (  )  ;  assert Equals (  Result . NEW, update )  ;  all Refs = db . get Ref Database (  )  . get Refs (  )  ;   Ref head = get Ref ( all Refs, ""HEAD"" )  . get (  )  ;   Ref newref = get Ref ( all Refs, ""refs/heads/newref"" )  . get (  )  ;  assert Equals ( ""refs/heads/newref"", newref . get Name (  )  )  ;  assert Equals ( ""HEAD"", head . get Name (  )  )  ;  assert True ( ""is symbolic reference"", head . is Symbolic (  )  )  ;  assert Same ( newref, head . get Target (  )  )  ; }"
639,"public com . anychart . core . series .  Rendering Settings rendering (  ) { return new com . anychart . core . series .  Rendering Settings ( js Base + "" . rendering (  ) "" )  ; }"
640,"public static  Drekkar get Default (  Object subscriber,  Web View web View,  When Ready On Main when Ready ) {  Drekkar d =  Drekkar Factory . get Default (  )  ;  d . add Bus ( subscriber, web View, when Ready, false )  ;  return d ; }"
641,private void init Cancelable (  ) { if  ( !is Cancelable )  {     return ;  }  View view = root View . find View By Id ( R . id . dialogplus_outmost_container )  ;  view . set On Touch Listener ( on Cancelable Touch Listener )  ; }
642,"public static void assert Empty (  Timeline timeline ) { assert Window Tags ( timeline )  ;  assert Period Counts ( timeline )  ;  for  ( boolean shuffled : new boolean [  ]  { false, true } )  {     assert That ( timeline . get First Window Index ( shuffled )  )  . is Equal To ( C . INDEX_UNSET )  ;      assert That ( timeline . get Last Window Index ( shuffled )  )  . is Equal To ( C . INDEX_UNSET )  ;  }}"
643,"public void test Get Buffered Position Us Returns Minimum Non End Of Source Loader Buffered Position (  ) {  Fake Sequenceable Loader loader1 = new  Fake Sequenceable Loader ( /* buffered Position Us */ 1000, /* next Load Position Us */ 2000 )  ;   Fake Sequenceable Loader loader2 = new  Fake Sequenceable Loader ( /* buffered Position Us */ 1001, /* next Load Position Us */ 2000 )  ;   Fake Sequenceable Loader loader3 = new  Fake Sequenceable Loader ( /* buffered Position Us */ C . TIME_END_OF_SOURCE, /* next Load Position Us */ C . TIME_END_OF_SOURCE )  ;   Composite Sequenceable Loader composite Sequenceable Loader = new  Composite Sequenceable Loader ( new  Sequenceable Loader [  ]  { loader1, loader2, loader3 } )  ;  assert That ( composite Sequenceable Loader . get Buffered Position Us (  )  )  . is Equal To ( 1000 )  ; }"
644,public void write Char ( int v )  throws IO Exception{ write Short ( v )  ; }
645,"public int get Num Triangles (  ) { int triangle Count = 0 ;   Array List< Object3 D> children = get Children Copy (  )  ;  for  ( int i = 0, j = children . size (  )  ;  i < j ;  i++ )  {      Object3 D child = children . get ( i )  ;      if  ( child . get Geometry (  )  != null && child . get Geometry (  )  . get Vertices (  )  != null && child . is Visible (  )  )          if  ( child . get Num Children (  )  > 0 )  {             triangle Count += child . get Num Triangles (  )  ;          } else {             triangle Count += child . get Geometry (  )  . get Vertices (  )  . limit (  )  / 9 ;          } } return triangle Count ; }"
646,public  String get Action (  ) { return  Native Protocol . ACTION_SHARE_STORY ; }
647,public  Async Server get Server (  ) { return http Client . get Server (  )  ; }
648,"private long get Randomized Backoff Duration In Millis ( int num Failed Fetches ) { //  The backoff duration length after num Failed Fetches .  long time Out Duration In Millis = MINUTES . to Millis ( BACKOFF_TIME_DURATIONS_IN_MINUTES [  Math . min ( num Failed Fetches, BACKOFF_TIME_DURATIONS_IN_MINUTES . length )  - 1 ]  )  ;  // A random duration that is in the range: time Out Duration +/- 50% of time Out Duration .  return time Out Duration In Millis / 2 + random Generator . next Int (  ( int )  time Out Duration In Millis )  ; }"
649,public  File Header get File Header (  ) { return file ; }
650,"private void check Scopes (  ) {  Immutable Set< Scope> scopes = scopes Of ( element )  ;   String error = null ;  switch ( allows Scoping )  {     case ALLOWS_SCOPING:         if  ( scopes . size (  )  <= 1 )  {             return ;          }         error = binding Elements ( ""cannot use more than one @ Scope"" )  ;          break ;      case NO_SCOPING:         error = binding Elements ( ""cannot be scoped"" )  ;          break ;  } verify Not Null ( error )  ;  for  (  Scope scope : scopes )  {     report . add Error ( error, element, scope . scope Annotation (  )  )  ;  }}"
651,"public com . anychart . charts .  Stock bottom (  Number bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", bottom )  )  ;  return this ; }"
652,"private void smooth Scroll To ( int new Scroll Value ) { smooth Scroll To ( new Scroll Value, get Smooth Scroll Duration (  ) , 0 )  ; }"
653,public  Annotations List get Parameter Annotations (  Cst Method Ref method ) { return annotations Directory . get Parameter Annotations ( method )  ; }
654,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
655,public static  Set<T> unmodifiable Non Null Set ( @ Nullable  Set<T> set ) { return set == null || set . is Empty (  )  ?  (  Set<T> )  empty Set (  )  :  Collections . unmodifiable Set ( set )  ; }
656,"public com . anychart . charts .  Sparkline max Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
657,public  Quaternion get Orientation (  ) { return get Orientation ( m Tmp Orientation )  ; }
658,"public static void drop Table (  Database db, boolean if Exists ) {  String sql = ""DROP TABLE "" +  ( if Exists ? ""IF EXISTS "" : """" )  + ""\""READ_RECEIPT_USER_LINK\"""" ;  db . exec SQL ( sql )  ; }"
659,"public  List< User Thread Link Meta Value> _query User Thread Link_ Meta Values (  Long user Thread Link Id ) { synchronized  ( this )  {     if  ( user Thread Link_ Meta Values Query == null )  {          Query Builder< User Thread Link Meta Value> query Builder = query Builder (  )  ;          query Builder . where (  Properties .  User Thread Link Id . eq ( null )  )  ;          user Thread Link_ Meta Values Query = query Builder . build (  )  ;      } }  Query< User Thread Link Meta Value> query = user Thread Link_ Meta Values Query . for Current Thread (  )  ;  query . set Parameter ( 0, user Thread Link Id )  ;  return query . list (  )  ; }"
660,"public static byte [  ]  to Byte Array ( long value ) { //  Note that this code needs to stay compatible with GWT, which has known // bugs when narrowing byte casts of long values occur .  byte [  ]  result = new byte [ 8 ]  ;  for  ( int i = 7 ;  i >= 0 ;  i-- )  {     result [ i ]  =  ( byte )   ( value & 0xff L )  ;      value >>= 8 ;  } return result ; }"
661,"public  Map<R, V> column ( C column Key ) { check Not Null ( column Key )  ;   Integer column Index = column Key To Index . get ( column Key )  ;  return  ( column Index == null )  ?  Immutable Map . <R, V>of (  )  : new  Column ( column Index )  ; }"
662,"private  Immutable Set< Executable Element> methods Only In Component (  Type Element component Type ) { // that, and it doesn't seem likely, so the warning won't be too bad .  return  Immutable Set . copy Of ( methods In ( component Type . get Enclosed Elements (  )  )  )  ; }"
663,"private static int compare Class Names (  String a,  String b ) { //  Ensure inner classes sort second a = a . replace ( '$', '0' )  ;  b = b . replace ( '$', '0' )  ;  /*      *  Assuming ""package-info"" only occurs at the end, ensures package-info      * sorts first .       */ a = a . replace ( ""package-info"", """" )  ;  b = b . replace ( ""package-info"", """" )  ;  return a . compare To ( b )  ; }"
664,private static boolean is Valid Alias Name (  String alias Name ) { return ALIAS_PATTERN . matcher ( alias Name )  . matches (  )  ; }
665,"private int [  ]  black White Range ( int fixed Dimension, int max White Run, int min Dim, int max Dim, boolean horizontal ) { int center =  ( min Dim + max Dim )  / 2 ;  //  Scan left/up first int start = center ;  while  ( start >= min Dim )  {     if  ( horizontal ? image . get ( start, fixed Dimension )  : image . get ( fixed Dimension, start )  )  {         start-- ;      } else {         int white Run Start = start ;          do {             start-- ;          } while  ( start >= min Dim && ! ( horizontal ? image . get ( start, fixed Dimension )  : image . get ( fixed Dimension, start )  )  )  ;          int white Run Size = white Run Start - start ;          if  ( start < min Dim || white Run Size > max White Run )  {             start = white Run Start ;              break ;          }     } } start++ ;  //  Then try right/down int end = center ;  while  ( end < max Dim )  {     if  ( horizontal ? image . get ( end, fixed Dimension )  : image . get ( fixed Dimension, end )  )  {         end++ ;      } else {         int white Run Start = end ;          do {             end++ ;          } while  ( end < max Dim && ! ( horizontal ? image . get ( end, fixed Dimension )  : image . get ( fixed Dimension, end )  )  )  ;          int white Run Size = end - white Run Start ;          if  ( end >= max Dim || white Run Size > max White Run )  {             end = white Run Start ;              break ;          }     } } end-- ;  return end > start ? new int [  ]  { start, end } : null ; }"
666,"private static void test Concurrent Loading Checked Exception (  Cache Builder< Object,  Object> builder )  throws  Interrupted Exception{ int count = 10 ;  final  Atomic Integer call Count = new  Atomic Integer (  )  ;  final  Count Down Latch start Signal = new  Count Down Latch ( count + 1 )  ;  final IO Exception e = new IO Exception (  )  ;   Loading Cache< String,  String> cache = builder . build ( new  Cache Loader< String,  String> (  )  {     @ Override     public  String load (  String key )  throws IO Exception,  Interrupted Exception {         call Count . increment And Get (  )  ;          start Signal . await (  )  ;          throw e ;      } } )  ;   List< Object> result = do Concurrent Get ( cache, ""bar"", count, start Signal )  ;  assert Equals ( 1, call Count . get (  )  )  ;  for  ( int i = 0 ;  i < count ;  i++ )  {     // do Concurrent Get alternates between calling get Unchecked and calling get .   If we call get (  ) ,     // we should get an  Execution Exception ;  if we call get Unchecked (  ) , we should get an     //  Unchecked Execution Exception .      int mod = i % 3 ;      if  ( mod == 0 || mod == 2 )  {         assert That ( result . get ( i )  )  . is Instance Of (  Execution Exception . class )  ;          assert That (  (  Execution Exception )  result . get ( i )  )  . has Cause That (  )  . is Same Instance As ( e )  ;      } else {         assert That ( result . get ( i )  )  . is Instance Of (  Unchecked Execution Exception . class )  ;          assert That (  (  Unchecked Execution Exception )  result . get ( i )  )  . has Cause That (  )  . is Same Instance As ( e )  ;      } } // subsequent calls should call the loader again, not get the old exception try {     cache . get Unchecked ( ""bar"" )  ;      fail (  )  ;  } catch  (  Unchecked Execution Exception expected )  { } assert Equals ( 2, call Count . get (  )  )  ; }"
667,"public com . anychart . core . stock .  Plot left (  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", wrap Quotes ( left )  )  )  ;  return this ; }"
668,"public static boolean create Dialog (  String message,  String ok Text,  String cancel Text ) {  Dialog Builder builder = new  Dialog Builder (  )  ;  builder . set Title ( "" Dialog  Message"" )  ;  builder . resizable ( false )  ;  builder . set Center Panel ( new J Label ( message,  Messages . get Information Icon (  ) ,  Swing Constants . CENTER )  )  ;  builder . add Ok Action (  )  . set Text ( ok Text )  ;  builder . add Cancel Action (  )  . set Text ( cancel Text )  ;  builder . set Buttons Alignment (  Swing Constants . CENTER )  ;  return builder . show (  )  == 0 ; }"
669,public void on Bottom Complete (  ) { if  ( is On Bottom Style )  {     if  ( is Show Footer Progress Bar )  {         footer Progress Bar . set Visibility (  View . GONE )  ;      }     if  ( !has More )  {         footer Button . set Text ( footer No More Text )  ;          footer Button . set Enabled ( false )  ;          if  ( !is Show Footer When No More )  {             remove Footer View ( footer Layout )  ;          }     } else {         footer Button . set Text ( footer Default Text )  ;          footer Button . set Enabled ( true )  ;      }     is On Bottom Loading = false ;  }}
670,"public  Writer writer ( boolean append ) { return writer ( append, null )  ; }"
671,"public com . anychart . core . ui .  Labels Factory max Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . max Labels (  ) "" )  ; }"
672,"private void create Test Configuration From Context (  String name,  String test Selectors,  Project project,  Virtual File containing File ) {  Atomic Reference< Runner And Configuration Settings> settings Reference = new  Atomic Reference<> (  )  ;   Buck Build Manager build Manager =  Buck Build Manager . get Instance ( project )  ;   String containing File Path = containing File . get Path (  )  ;   Buck Json Command Handler handler = new  Buck Json Command Handler ( project,  Buck Command . QUERY, new  Buck Json Command Handler .  Callback< Map< String,  List< String>>> (  )  {     @ Override     public void on Success (  Map< String,  List< String>> result,  String stderr )  {          List< String> owners List = result . get ( containing File Path )  ;          if  ( owners List == null || owners List . is Empty (  )  )  {              Buck Notification . get Instance ( project )  . show Warning Balloon ( "" No test targets found that are owners of "" + containing File Path )  ;          } else {              Test Configuration Type type = new  Test Configuration Type (  )  ;              if  ( type . get Configuration Factories (  )  . length > 0 )  {                  Run Manager Impl run Manager =  (  Run Manager Impl )   Run Manager . get Instance ( project )  ;                   Runner And Configuration Settings Impl runner And Configuration Settings =  (  Runner And Configuration Settings Impl )  run Manager . create Run Configuration ( name, type . get Configuration Factories (  )  [ 0 ]  )  ;                   Test Configuration test Configuration =  (  Test Configuration )  runner And Configuration Settings . get Configuration (  )  ;                  test Configuration . data . targets =  Joiner . on ( "" "" )  . join ( owners List )  ;                  test Configuration . data . test Selectors = test Selectors ;                  settings Reference . set ( runner And Configuration Settings )  ;                  run Manager . add Configuration ( runner And Configuration Settings, false )  ;              }         }     }     @ Override     public void on Failure (  String stdout,  String stderr, @ Nullable  Integer exit Code, @ Nullable  Throwable throwable )  {          Buck Notification . get Instance ( project )  . show Warning Balloon ( "" Cannot run test: could not determine owners for "" + containing File Path )  ;      } } )  ;  handler . command (  )  . add Parameters ( ""owner ( %s ) "", containing File Path )  ;  build Manager . run In Current Thread Post End ( handler,  (  )  -> {      Runner And Configuration Settings settings = settings Reference . get And Set ( null )  ;      if  ( settings != null )  {          Run Manager Impl run Manager =  (  Run Manager Impl )   Run Manager . get Instance ( project )  ;          run Manager . set Selected Configuration ( settings )  ;           Executor executor ;          if  ( is Debug (  )  )  {             executor =  Default Debug Executor . get Debug Executor Instance (  )  ;          } else {             if  (  Executor Registry . get Instance (  )  . get Registered Executors (  )  . length == 0 )  {                 return ;              }             executor =  Executor Registry . get Instance (  )  . get Registered Executors (  )  [ 0 ]  ;          }          Program Runner Util . execute Configuration ( project, settings, executor )  ;      } } )  ; }"
673,"public void on Cell Clicked ( @ Non Null  Recycler View .  View Holder cell View, int column, int row ) { //  Do what you want .  show Toast ( "" Cell "" + column + "" "" + row + "" has been clicked . "" )  ; }"
674,"public void change Background Color Resource Id ( int color Resource Id ) { if  ( color Resource Id !=  Card . DEFAULT_COLOR )  {     //this . set Background Drawable ( m Helper Impl . get Resource From Attrs ( get Context (  ) ,R . attr . card Background Color )  )  ;      m Internal Main Card Layout . set Background Color ( get Resources (  )  . get Color ( color Resource Id )  )  ;  }}"
675,"public  List<T> find All (  Class<T> type ) { return find All ( type, null )  ; }"
676,"public  View new Drop Down View (  Layout Inflater inflater, int position,  View Group container ) { return new View ( inflater, position, container )  ; }"
677,public void on Visible (  ) {}
678,"public void test Set Type (  ) { final  String type Name = ""type"" ;  final  String type = ""thisisatype"" ;  final  String another Type = ""another Type"" ;  //  Make sure there's no attributes to start with assert Equals ( 0, get XML Object (  )  . get Attributes (  )  . size (  )  )  ;  //  Declare the xsi namespace get XML Object (  )  . declare Prefix ( XML Node . NS_PREFIX_XSI, XML Node . NS_URI_XSI )  ;  //  Set the type - this will create an attribute for xsi:type get XML Object (  )  . set Type ( type )  ;  //  Now get the attributes  Collection<XML Attribute> attributes = get XML Object (  )  . get Attributes (  )  ;  assert Equals ( 1, attributes . size (  )  )  ;  XML Attribute type Att = attributes . iterator (  )  . next (  )  ;  //  Ensure the attribute is correct assert Equals ( type, type Att . get Value (  )  )  ;  assert Equals ( XML Node . NS_URI_XSI, type Att . get Namespace (  )  )  ;  assert Equals ( type Name, type Att . get Name (  )  )  ;  //  Test the type is to Stringing properly  String as String = get XML Object (  )  . to String (  )  ;  assert True ( as String, as String . contains ( XML Node . NS_PREFIX_XSI + "":"" + type Name + ""=\"""" + type + ""\"""" )  )  ;  //  Set the type again get XML Object (  )  . set Type ( another Type )  ;  //  Get the type attribute again attributes = get XML Object (  )  . get Attributes (  )  ;  assert Equals ( 1, attributes . size (  )  )  ;  type Att = attributes . iterator (  )  . next (  )  ;  //  Ensure the attribute is still correct and has the new value assert Equals ( another Type, type Att . get Value (  )  )  ;  assert Equals ( XML Node . NS_URI_XSI, type Att . get Namespace (  )  )  ;  assert Equals ( type Name, type Att . get Name (  )  )  ;  as String = get XML Object (  )  . to String (  )  ;  assert True ( as String . contains ( XML Node . NS_PREFIX_XSI + "":"" + type Name + ""=\"""" + another Type + ""\"""" )  )  ; }"
679,public B add Alternate Object Directories (  Collection< File> in List ) { if  ( in List != null )  {     for  (  File path : in List )  add Alternate Object Directory ( path )  ;  } return self (  )  ; }
680,"public void test Set Trim Lines Happy Path (  )  throws  Throwable{ I Shell Enabled Device shell Enabled Device = new  Test Device (  )  ;   Remote Android Test Runner runner = new  Remote Android Test Runner ( ""foobar"", ""blah"", shell Enabled Device )  ;   Field field =  Remote Android Test Runner . class . get Declared Field ( ""m Parser"" )  ;  field . set Accessible ( true )  ;  field . set ( runner, new  Instrumentation Result Parser ( ""foo Bar"", new  Array List<I Test Run Listener> (  )  )  )  ;   Instrumentation Test Runner . set Trim Line ( runner, true )  ; }"
681,Stack Frame Type get Stack Frame Type (  ) { return stack Frame Type ; }
682,"public com . anychart . standalones .  Color Range overlap Mode (  String mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . overlap Mode ( %s )  ; "", wrap Quotes ( mode )  )  )  ;  return this ; }"
683,"private static void add Bundle Location To Dest Manifest (  Document document,  Map< String,  File> lib Manifest Map,  Multimap< String,  File> lib Dependencies Maps,  Manifest Options manifest Options )  throws  Document Exception{  Table< String,  String,  String> bundle Info Table =  Hash Based Table . create (  )  ;   Map< String,  String> package Name Map = new  Hash Map< String,  String> (  )  ;  for  (  Map .  Entry< String,  File> entry : lib Manifest Map . entry Set (  )  )  {      File lib Manifest = entry . get Value (  )  ;      if  ( lib Manifest . exists (  )  )  {         SAX Reader reader = new SAX Reader (  )  ;          //  Read the XML file          Document lib Document = reader . read ( lib Manifest )  ;          //  Get the root node          Element lib Root = lib Document . get Root Element (  )  ;           String package Name = lib Root . attribute Value ( ""package"" )  ;          package Name Map . put ( entry . get Key (  ) , package Name )  ;           List<? extends  Node> nodes = lib Root . select Nodes ( ""//activity|//service|//receiver"" )  ;          for  (  Node node : nodes )  {              Element e =  (  Element )  node ;               String name = e . attribute Value ( ""name"" )  ;               String type = e . get Name (  )  ;              bundle Info Table . put ( type, name, package Name )  ;          }     } } //  Gets all dependent manifest information for  (  String key : lib Dependencies Maps . key Set (  )  )  {      Collection< File> lib Manifests = lib Dependencies Maps . get ( key )  ;      for  (  File lib Manifest : lib Manifests )  {         if  ( lib Manifest . exists (  )  )  {             SAX Reader reader = new SAX Reader (  )  ;              //  Read the XML file              Document lib Document = reader . read ( lib Manifest )  ;              //  Get the root node              Element lib Root = lib Document . get Root Element (  )  ;               String package Name = package Name Map . get ( key )  ;               List<? extends  Node> nodes = lib Root . select Nodes ( ""//activity|//service|//receiver"" )  ;              for  (  Node node : nodes )  {                  Element e =  (  Element )  node ;                   String name = e . attribute Value ( ""name"" )  ;                   String type = e . get Name (  )  ;                  bundle Info Table . put ( type, name, package Name )  ;              }         }     } } //  Get the root node  Element root = document . get Root Element (  )  ;   List<? extends  Node> nodes = root . select Nodes ( ""//activity|//service|//receiver"" )  ;  for  (  Node node : nodes )  {      Element e =  (  Element )  node ;       String name = e . attribute Value ( ""name"" )  ;       String type = e . get Name (  )  ;       String package Name = bundle Info Table . get ( type, name )  ;      if  ( null != package Name )  {          Element meta Data = e . add Element ( ""meta-data"" )  ;          meta Data . add Attribute ( ""android:name"", ""bundle Location"" )  ;          meta Data . add Attribute ( ""android:value"", package Name )  ;      } }}"
684,public void enable Cube Map Seamless ( boolean enable ) { if  ( enable )  {     gl20 . gl Enable ( GL32 . GL_TEXTURE_CUBE_MAP_SEAMLESS )  ;  } else {     gl20 . gl Disable ( GL32 . GL_TEXTURE_CUBE_MAP_SEAMLESS )  ;  }}
685,"public int hash Code (  ) { return  Objects . hash ( type, hash Code )  ; }"
686,public static int set Package ( int accflags ) { return  ( accflags & ~ ( PROTECTED | PUBLIC | PRIVATE )  )  ; }
687,private int get Track Index Of Next Read Sample ( long input Position ) { long preferred Skip Amount =  Long . MAX_VALUE ;  boolean preferred Requires Reload = true ;  int preferred Track Index = C . INDEX_UNSET ;  long preferred Accumulated Bytes =  Long . MAX_VALUE ;  long min Accumulated Bytes =  Long . MAX_VALUE ;  boolean min Accumulated Bytes Requires Reload = true ;  int min Accumulated Bytes Track Index = C . INDEX_UNSET ;  for  ( int track Index = 0 ;  track Index < tracks . length ;  track Index++ )  {      Mp4 Track track = tracks [ track Index ]  ;      int sample Index = track . sample Index ;      if  ( sample Index == track . sample Table . sample Count )  {         continue ;      }     long sample Offset = track . sample Table . offsets [ sample Index ]  ;      long sample Accumulated Bytes = accumulated Sample Sizes [ track Index ]  [ sample Index ]  ;      long skip Amount = sample Offset - input Position ;      boolean requires Reload = skip Amount < 0 || skip Amount >= RELOAD_MINIMUM_SEEK_DISTANCE ;      if  (  ( !requires Reload && preferred Requires Reload )  ||  ( requires Reload == preferred Requires Reload && skip Amount < preferred Skip Amount )  )  {         preferred Requires Reload = requires Reload ;          preferred Skip Amount = skip Amount ;          preferred Track Index = track Index ;          preferred Accumulated Bytes = sample Accumulated Bytes ;      }     if  ( sample Accumulated Bytes < min Accumulated Bytes )  {         min Accumulated Bytes = sample Accumulated Bytes ;          min Accumulated Bytes Requires Reload = requires Reload ;          min Accumulated Bytes Track Index = track Index ;      } } return min Accumulated Bytes ==  Long . MAX_VALUE || !min Accumulated Bytes Requires Reload || preferred Accumulated Bytes < min Accumulated Bytes + MAXIMUM_READ_AHEAD_BYTES_STREAM ? preferred Track Index : min Accumulated Bytes Track Index ; }
688,private void set Time Step ( float time Step ) { delta Time = time Step ;  delta Time Sqr = delta Time * delta Time ; }
689,public T7 get Value7 (  ) { return value7 ; }
690,public void clear (  ) { size = 0 ;  init Table ( INITIAL_TABLE_SIZE )  ; }
691,"public void get Type (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Type (  )  ; "" )  ; }"
692,"public void test Resiliency Token Return Extended Lifetime Onwith Expired Stale AT (  )  throws  Package Manager .  Name Not Found Exception, IO Exception,  Interrupted Exception, JSON Exception{ // make sure AT's expires_in is expired and ext_expires_in is expired final I Token Cache Store cache Store = get Token Cache ( get Expire Date ( -MINUS_MINUTE ) , false, false, get Expire Date ( -1 )  )  ;  final  File Mock Context mock Context = create Mock Context (  )  ;  final  Authentication Context auth Context = new  Authentication Context ( mock Context, VALID_AUTHORITY, false, cache Store )  ;  auth Context . set Extended Lifetime Enabled ( true )  ;  final  Http URL Connection mocked Connection =  Mockito . mock (  Http URL Connection . class )  ;   Http Url Connection Factory . set Mocked Http Url Connection ( mocked Connection )  ;   Util . prepare Mocked Url Connection ( mocked Connection )  ;   Mockito . when ( mocked Connection . get Output Stream (  )  )  . then Return (  Mockito . mock (  Output Stream . class )  )  ;   Mockito . when ( mocked Connection . get Input Stream (  )  )  . then Return (  Util . create Input Stream (  Util . get Error Response Body ( ""HTTP_GATEWAY_TIMEOUT"" )  )  )  ;   Mockito . when ( mocked Connection . get Response Code (  )  )  . then Return (  Http URL Connection . HTTP_GATEWAY_TIMEOUT )  ;  try {     auth Context . acquire Token Silent Sync ( ""resource"", ""clientid"", TEST_USERID )  ;      fail ( "" Expect an exception"" )  ;  } catch  ( final  Authentication Exception exception )  {     verify ( mocked Connection, times ( 2 )  )  . get Input Stream (  )  ;      assert Not Null ( exception )  ;      assert Same ( exception . get Code (  ) , ADAL Error . AUTH_FAILED_NO_TOKEN )  ;      assert True ( exception . get Cause (  )  instanceof  Authentication Exception )  ;      assert Same (  (  (  Authentication Exception )  exception . get Cause (  )  )  . get Code (  ) , ADAL Error . SERVER_ERROR )  ;  } finally {     cache Store . remove All (  )  ;  }}"
693,public final void set Colorized ( boolean colorized ) { if  ( this . colorized != colorized )  {     this . colorized = colorized ;      invalidate (  )  ;  }}
694,"public com . anychart . core .  Separate Chart bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
695,"public static void put ( @ Non Null final  String key, @ Nullable final  Drawable value, final int save Time, @ Non Null final  Cache Disk Utils cache Disk Utils ) { cache Disk Utils . put ( key, value, save Time )  ; }"
696,"public void remove Y Text Label ( double y ) { remove Y Text Label ( y, 0 )  ; }"
697,public  Input Stream get Input Stream (  ) { if  ( m Input Stream Supplier != null )  {     return m Input Stream Supplier . get (  )  ;  }  Closeable Reference< Pooled Byte Buffer> pooled Byte Buffer Ref =  Closeable Reference . clone Or Null ( m Pooled Byte Buffer Ref )  ;  if  ( pooled Byte Buffer Ref != null )  {     try {         return new  Pooled Byte Buffer Input Stream ( pooled Byte Buffer Ref . get (  )  )  ;      } finally {          Closeable Reference . close Safely ( pooled Byte Buffer Ref )  ;      } } return null ; }
698,"public com . anychart . core . ui .  Circular Labels Factory offset X (  Number offset ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . offset X ( %s )  ; "", offset )  )  ;  return this ; }"
699,"public static void print (  Context context, long threshold ) { if  ( context == null )  {     throw new  Illegal Argument Exception ( "" Context argument cannot be null"" )  ;  }  Status Manager sm = context . get Status Manager (  )  ;  if  ( sm == null )  {     ps . println ( ""WARN:  Context named \"""" + context . get Name (  )  + ""\"" has no status manager"" )  ;  } else {     print ( sm, threshold )  ;  }}"
700,"public static  Mutable Class To Instance Map<B> create (  ) { return new  Mutable Class To Instance Map<B> ( new  Hash Map< Class<? extends B>, B> (  )  )  ; }"
701,"public synchronized SQ Lite Database get Writable Database (  ) {  File db File = context . get Database Path ( database Name )  ;  if  ( db File != null && !db File . exists (  )  )  {     try {         copy Database ( db File )  ;      } catch  ( IO Exception e )  {         throw new  Runtime Exception ( "" Error creating source database"", e )  ;      } } return SQ Lite Database . open Database ( db File . get Path (  ) , null, SQ Lite Database . OPEN_READWRITE )  ; }"
702,"public static void force Cancel (  Object tag ) { AN Request Queue . get Instance (  )  . cancel Request With Given Tag ( tag, true )  ; }"
703,"public void test No Attributes (  )  throws  Exception{ write Trash File ( ""l0 . txt"", """" )  ;  write Trash File ( ""level1/l1 . txt"", """" )  ;  write Trash File ( ""level1/level2/l2 . txt"", """" )  ;  try  (  Tree Walk walk = begin Walk (  )  )  {     assert Iteration ( walk, F, ""l0 . txt"" )  ;      assert Iteration ( walk, D, ""level1"" )  ;      assert Iteration ( walk, F, ""level1/l1 . txt"" )  ;      assert Iteration ( walk, D, ""level1/level2"" )  ;      assert Iteration ( walk, F, ""level1/level2/l2 . txt"" )  ;      assert False ( "" Not all files tested"", walk . next (  )  )  ;  }}"
704,"private int measure Height ( int measure Spec ) { float result ;  int spec Mode =  Measure Spec . get Mode ( measure Spec )  ;  int spec Size =  Measure Spec . get Size ( measure Spec )  ;  if  ( spec Mode ==  Measure Spec . EXACTLY )  {     // We were told how big to be     result = spec Size ;  } else {     // Measure the height     result = m Paint Selected . get Stroke Width (  )  + get Padding Top (  )  + get Padding Bottom (  )  ;      // Respect AT_MOST value if that was what is called for by measure Spec     if  ( spec Mode ==  Measure Spec . AT_MOST )  {         result =  Math . min ( result, spec Size )  ;      } } return  ( int )   Float Math . ceil ( result )  ; }"
705,"public void scroll To Group With Total Children Height ( int group Position, int total Children Height, int top Margin, int bottom Margin ) { scroll To Group With Total Children Height ( group Position, total Children Height, top Margin, bottom Margin, null )  ; }"
706,"public com . anychart . core . resource . resourcelist .  Text Settings margin (  String value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
707,public  Writer append (  Char Sequence csq )  throws IO Exception{ if  ( null == csq )  {     write ( TOKEN_NULL )  ;  } else {     write ( csq . to String (  )  )  ;  } return this ; }
708,"public void set Touch Offset ( float touch Offset X, float touch Offset Y ) { this . touch Offset X = touch Offset X ;  this . touch Offset Y = touch Offset Y ; }"
709,"public void dispatch Resume (  ) { m Cur State = RESUMED ;  if  ( m Single Mode )  {     if  ( m Resumed != null )  {         move To State ( m Resumed, RESUMED )  ;      } } else {     final int N = m Activity Array . size (  )  ;      for  ( int i = 0 ;  i < N ;  i++ )  {         move To State ( m Activity Array . get ( i ) , RESUMED )  ;      } }}"
710,"public com . anychart . core . stock . scrollerseries . OHLC bounds (  String x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
711,"public com . anychart . core . gantt .  Time Line Header bounds (  String x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
712,public com . google . protobuf .  Byte String get Resource Name Bytes (  ) { java . lang .  Object ref = resource Name_ ;  if  ( ref instanceof  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      resource Name_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
713,"public void triangle Down (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . triangle Down (  )  ; "" )  ; }"
714,public boolean is Socket Bound (  File Descriptor fd ) { return bound File Descriptors . contains ( fd )  ; }
715,public void set Media List (  ) { m Media List = m Primary List ; }
716,public void close (  ) { synchronized  ( this )  {     if  ( m Is Closed )  {         return ;      }     m Is Closed = true ;  } m Shared Reference . delete Reference (  )  ; }
717,"public void fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . fill (  )  ; "" )  ; }"
718,"private void read PCM (  ) { boolean wrote = false ;  while  ( true )  {     // we repeat if the bitstream is chained     if  ( end Of Bit Stream )  {         if  ( !get Page And Packet (  )  )  {             break ;          }         end Of Bit Stream = false ;      }     if  ( !inited )  {         inited = true ;          return ;      }     float [  ]  [  ]  [  ]  _pcm = new float [ 1 ]  [  ]  [  ]  ;      int [  ]  _index = new int [ ogg Info . channels ]  ;      //  The rest is just a straight decode loop until end of stream     while  ( !end Of Bit Stream )  {         while  ( !end Of Bit Stream )  {             int result = sync State . pageout ( page )  ;              if  ( result == 0 )  {                 // need more data                 break ;              }             if  ( result == -1 )  {                 // missing or corrupt data at this page position                 // throw new  Gdx Runtime Exception ( "" Corrupt or missing data in bitstream . "" )  ;                   Gdx . app . log ( ""gdx-audio"", "" Error reading OGG:  Corrupt or missing data in bitstream . "" )  ;              } else {                 // can safely ignore errors at                 stream State . pagein ( page )  ;                  // this point                 while  ( true )  {                     result = stream State . packetout ( packet )  ;                      // need more data                     if  ( result == 0 )                          break ;                      if  ( result == -1 )  {                     // missing or corrupt data at this page position                     // no reason to complain ;  already complained above                     } else {                         // we have a packet .   Decode it                         int samples ;                          if  ( vorbis Block . synthesis ( packet )  == 0 )  {                             // test for success!                             dsp State . synthesis_blockin ( vorbis Block )  ;                          }                         while  (  ( samples = dsp State . synthesis_pcmout ( _pcm, _index )  )  > 0 )  {                             float [  ]  [  ]  pcm = _pcm [ 0 ]  ;                              // boolean clipflag = false ;                              int bout =  ( samples < convsize ? samples : convsize )  ;                              // interleave                             for  ( int i = 0 ;  i < ogg Info . channels ;  i++ )  {                                 int ptr = i * 2 ;                                  // int ptr=i ;                                  int mono = _index [ i ]  ;                                  for  ( int j = 0 ;  j < bout ;  j++ )  {                                     int val =  ( int )   ( pcm [ i ]  [ mono + j ]  * 32767 .  )  ;                                      // might as well guard against clipping                                     if  ( val > 32767 )  {                                         val = 32767 ;                                      }                                     if  ( val < -32768 )  {                                         val = -32768 ;                                      }                                     if  ( val < 0 )                                          val = val | 0x8000 ;                                      if  ( big Endian )  {                                         convbuffer [ ptr ]  =  ( byte )   ( val >>> 8 )  ;                                          convbuffer [ ptr + 1 ]  =  ( byte )   ( val )  ;                                      } else {                                         convbuffer [ ptr ]  =  ( byte )   ( val )  ;                                          convbuffer [ ptr + 1 ]  =  ( byte )   ( val >>> 8 )  ;                                      }                                     ptr += 2 *  ( ogg Info . channels )  ;                                  }                             }                             int bytes To Write = 2 * ogg Info . channels * bout ;                              if  ( out Index + bytes To Write > out Buffer . length )  {                                 throw new  Gdx Runtime Exception ( "" Ogg block too big to be buffered: "" + bytes To Write + "", "" +  ( out Buffer . length - out Index )  )  ;                              } else {                                  System . arraycopy ( convbuffer, 0, out Buffer, out Index, bytes To Write )  ;                                  out Index += bytes To Write ;                              }                             wrote = true ;                              // tell libvorbis how                             dsp State . synthesis_read ( bout )  ;                          // many samples we                         // actually consumed                         }                     }                 }                 if  ( page . eos (  )  != 0 )  {                     end Of Bit Stream = true ;                  }                 if  (  ( !end Of Bit Stream )  &&  ( wrote )  )  {                     return ;                  }             }         }         if  ( !end Of Bit Stream )  {             bytes = 0 ;              int index = sync State . buffer ( BUFFER_SIZE )  ;              if  ( index >= 0 )  {                 buffer = sync State . data ;                  try {                     bytes = input . read ( buffer, index, BUFFER_SIZE )  ;                  } catch  (  Exception e )  {                     throw new  Gdx Runtime Exception ( "" Error during  Vorbis decoding . "", e )  ;                  }             } else {                 bytes = 0 ;              }             sync State . wrote ( bytes )  ;              if  ( bytes == 0 )  {                 end Of Bit Stream = true ;              }         }     }     // clean up this logical bitstream ;  before exit we see if we're     // followed by another  [ chained ]      stream State . clear (  )  ;      // ogg_page and ogg_packet structs always point to storage in     // libvorbis .   They're never freed or manipulated directly     vorbis Block . clear (  )  ;      dsp State . clear (  )  ;      // must be called last     ogg Info . clear (  )  ;  } // OK, clean up the framer sync State . clear (  )  ;  end Of Stream = true ; }"
719,"private void internal Setup Progress Bar (  View Group parent,  View view ) { if  ( use Progress Bar && m Progress View == null )  {     m Progress View =  (  (  View )  get Card View (  )  )  . find View By Id ( get Progress Bar Id (  )  )  ;      m Card Shown = true ;      if  ( m Progress View != null )  {         if  ( m Progress View instanceof  View Stub )               (  (  View Stub )  m Progress View )  . set Layout Resource ( get Progress Bar View Stub Layout Id (  )  )  ;          set Progress View ( m Progress View )  ;      } else {         m Progress View =  (  (  View )  get Card View (  )  )  . find View By Id ( R . id . card_native_progressbar_inflated )  ;          set Progress View ( m Progress View )  ;      } }}"
720,"static  Immutable Set Multimap<K, V> from Map Entries (  Collection<? extends  Map .  Entry<? extends K, ? extends  Collection<? extends V>>> map Entries, @ Nullable  Comparator<? super V> value Comparator ) { if  ( map Entries . is Empty (  )  )  {     return of (  )  ;  }  Immutable Map .  Builder<K,  Immutable Set<V>> builder = new  Immutable Map .  Builder<> ( map Entries . size (  )  )  ;  int size = 0 ;  for  (  Entry<? extends K, ? extends  Collection<? extends V>> entry : map Entries )  {     K key = entry . get Key (  )  ;       Collection<? extends V> values = entry . get Value (  )  ;       Immutable Set<V> set = value Set ( value Comparator, values )  ;      if  ( !set . is Empty (  )  )  {         builder . put ( key, set )  ;          size += set . size (  )  ;      } } return new  Immutable Set Multimap<> ( builder . build (  ) , size, value Comparator )  ; }"
721,"public com . anychart . charts .  Mekko parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
722,"public void refresh (  ) { if  ( my Dao == null )  {     throw new  Dao Exception ( "" Entity is detached from DAO context"" )  ;  } my Dao . refresh ( this )  ; }"
723,"public int get Int Value (  Keyframe< Integer> keyframe, float keyframe Progress ) { if  ( keyframe . start Value == null || keyframe . end Value == null )  {     throw new  Illegal State Exception ( "" Missing values for keyframe . "" )  ;  } int start Color = keyframe . start Value ;  int end Color = keyframe . end Value ;  if  ( value Callback != null )  {     //noinspection  Constant Conditions      Integer value = value Callback . get Value Internal ( keyframe . start Frame, keyframe . end Frame, start Color, end Color, keyframe Progress, get Linear Current Keyframe Progress (  ) , get Progress (  )  )  ;      if  ( value != null )  {         return value ;      } } return  Gamma Evaluator . evaluate (  Misc Utils . clamp ( keyframe Progress, 0f, 1f ) , start Color, end Color )  ; }"
724,public  Dynamic Realm get Dynamic Realm (  ) { final  Base Realm realm = realm Get$proxy State (  )  . get Realm$realm (  )  ;  realm . check If Valid (  )  ;  if  ( !is Valid (  )  )  {     throw new  Illegal State Exception ( MSG_DELETED_OBJECT )  ;  } return  (  Dynamic Realm )  realm ; }
725,"public com . anychart . core . stock . indicators . DMI pdi Series ( com . anychart . enums .  Stock Series Type type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . pdi Series ( %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
726,"public void right (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . right (  )  ; "" )  ; }"
727,"private  Description check Param Overriding (  List< Var Symbol> overriding Param Symbols,  Symbol .  Method Symbol overridden Method, @ Nullable  Lambda Expression Tree lambda Expression Tree, @ Nullable  Member Reference Tree member Reference Tree,  Visitor State state ) { com . sun . tools . javac . util .  List< Var Symbol> super Param Symbols = overridden Method . get Parameters (  )  ;  boolean unbound Member Ref =  ( member Reference Tree != null )  &&  (  ( JC Tree . JC Member Reference )  member Reference Tree )  . kind . is Unbound (  )  ;  // @ Non Null, as this parameter will be used as a method receiver inside the generated lambda if  ( unbound Member Ref )  {     boolean is First Param Null = false ;      //  Two cases: for annotated code, look first at the annotation     if  ( ! Nullability Util . is Unannotated ( overridden Method, config )  )  {         is First Param Null =  Nullness . has Nullable Annotation ( super Param Symbols . get ( 0 ) , config )  ;      }     //  For both annotated and unannotated code, look then at handler overrides  ( e . g .   Library     //  Models )      is First Param Null = handler . on Unannotated Invocation Get Explicitly Nullable Positions ( state . context, overridden Method, is First Param Null ?  Immutable Set . of ( 0 )  :  Immutable Set . of (  )  )  . contains ( 0 )  ;      if  ( is First Param Null )  {          String message = ""unbound instance method reference cannot be used, as first parameter of "" + ""functional interface method "" + AST Helpers . enclosing Class ( overridden Method )  + "" . "" + overridden Method . to String (  )  + "" is @ Nullable"" ;          return error Builder . create Error Description ( new  Error Message (  Message Types . WRONG_OVERRIDE_PARAM, message ) , build Description ( member Reference Tree ) , state )  ;      } } // for unbound member references, we need to adjust parameter indices by 1 when matching with // overridden method int start Param = unbound Member Ref ? 1 : 0 ;  //  Collect @ Nullable params of overriden method  Immutable Set< Integer> nullable Params Of Overriden ;  if  (  Nullability Util . is Unannotated ( overridden Method, config )  )  {     nullable Params Of Overriden = handler . on Unannotated Invocation Get Explicitly Nullable Positions ( state . context, overridden Method,  Immutable Set . of (  )  )  ;  } else {      Immutable Set .  Builder< Integer> builder =  Immutable Set . builder (  )  ;      for  ( int i = start Param ;  i < super Param Symbols . size (  )  ;  i++ )  {         // in a class file         if  (  Nullness . param Has Nullable Annotation ( overridden Method, i, config )  )  {             builder . add ( i )  ;          }     }     nullable Params Of Overriden = builder . build (  )  ;  } for  ( int i : nullable Params Of Overriden )  {     int method Param Ind = i - start Param ;       Var Symbol param Symbol = overriding Param Symbols . get ( method Param Ind )  ;      // in the case where we have a parameter of a lambda expression, we do     // *not* force the parameter to be annotated with @ Nullable ;  instead we ""inherit""     // nullability from the corresponding functional interface method .      //  So, we report an error if the @ Nullable annotation is missing *and*     // we don't have a lambda with implicitly typed parameters     boolean implicitly Typed Lambda Param = lambda Expression Tree != null &&  Nullability Util . lambda Param Is Implicitly Typed ( lambda Expression Tree . get Parameters (  )  . get ( method Param Ind )  )  ;      if  ( ! Nullness . has Nullable Annotation ( param Symbol, config )  && !implicitly Typed Lambda Param )  {         final  String message = ""parameter "" + param Symbol . name . to String (  )  +  ( member Reference Tree != null ? "" of referenced method"" : """" )  + "" is @ Non Null, but parameter in "" +  (  ( lambda Expression Tree != null || member Reference Tree != null )  ? ""functional interface "" : ""superclass "" )  + ""method "" + AST Helpers . enclosing Class ( overridden Method )  + "" . "" + overridden Method . to String (  )  + "" is @ Nullable"" ;           Tree error Tree ;          if  ( member Reference Tree != null )  {             error Tree = member Reference Tree ;          } else {             error Tree = get Trees Instance ( state )  . get Tree ( param Symbol )  ;          }         return error Builder . create Error Description ( new  Error Message (  Message Types . WRONG_OVERRIDE_PARAM, message ) , build Description ( error Tree ) , state )  ;      } } return  Description . NO_MATCH ; }"
728,public  String get Date Format (  ) { return date Format ; }
729,"public void full Screen (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . full Screen (  )  ; "" )  ; }"
730,public T peek ( int index ) { //noinspection unchecked return  ( T )  history . get ( history . size (  )  - index - 1 )  ; }
731,"public com . anychart . charts .  Gantt column Stroke (  String color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . column Stroke ( %s )  ; "", wrap Quotes ( color )  )  )  ;  return this ; }"
732,"public void start (  ) { //  For now, all setup is handled by enable Network (  )  .   We might expand on this in the future .  enable Network (  )  ; }"
733,Cxx Deps get Private Cxx Deps (  ) { return  Cxx Deps . builder (  )  . add Deps ( get Deps (  )  )  . add Platform Deps ( get Platform Deps (  )  )  . add Dep ( get Precompiled Header (  )  )  . build (  )  ; }
734,"public  Iterable< String> split ( final  Char Sequence sequence ) { check Not Null ( sequence )  ;  return new  Iterable< String> (  )  {     @ Override     public  Iterator< String> iterator (  )  {         return splitting Iterator ( sequence )  ;      }     @ Override     public  String to String (  )  {         return  Joiner . on ( "", "" )  . append To ( new  String Builder (  )  . append ( ' [ ' ) , this )  . append ( ' ] ' )  . to String (  )  ;      } } ; }"
735,"public com . anychart . core . ui .  Callout margin (  Number value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
736,"public void add ( int index, E element ) { throw new  Unsupported Operation Exception ( NOT_SUPPORTED_MESSAGE )  ; }"
737,"public  Realm Result Task< Document T> find One ( final  Bson filter, final  Find Options options ) { return new  Realm Result Task Impl<> ( thread Pool Executor, new  Realm Result Task Impl .  Executor< Document T> (  )  {     @ Nullable     @ Override     public  Document T run (  )  {         return os Mongo Collection . find One ( filter, options )  ;      } } )  ; }"
738,public  Matrix4 get World Transform (  ) { return renderable . world Transform ; }
739,"public  Bitmap create Bitmap (  ) { if  ( get Width (  )  <= 0 && get Height (  )  <= 0 )  {     int spec =  Measure Spec . make Measure Spec ( 0,  Measure Spec . UNSPECIFIED )  ;      measure ( spec, spec )  ;      layout ( 0, 0, get Measured Width (  ) , get Measured Height (  )  )  ;  }  Bitmap b =  Bitmap . create Bitmap ( get Width (  ) , get Height (  ) ,  Bitmap .  Config . ARGB_8888 )  ;   Canvas c = new  Canvas ( b )  ;  draw ( c )  ;  return b ; }"
740,"static byte [  ]  to Integer Bytes (  Big Integer big Int ) { int bitlen = big Int . bit Length (  )  ;  // round bitlen bitlen =  (  ( bitlen + 7 )  >> 3 )  << 3 ;  byte [  ]  big Bytes = big Int . to Byte Array (  )  ;  if  (  (  ( big Int . bit Length (  )  % 8 )  != 0 )  &&  (  (  ( big Int . bit Length (  )  / 8 )  + 1 )  ==  ( bitlen / 8 )  )  )  {     return big Bytes ;  } // set up params for copying everything but sign bit int start Src = 0 ;  int len = big Bytes . length ;  // if big Int is exactly byte-aligned, just skip signbit in copy if  (  ( big Int . bit Length (  )  % 8 )  == 0 )  {     start Src = 1 ;      len-- ;  } // to pad w/ nulls as per spec int start Dst = bitlen / 8 - len ;  byte [  ]  resized Bytes = new byte [ bitlen / 8 ]  ;   System . arraycopy ( big Bytes, start Src, resized Bytes, start Dst, len )  ;  return resized Bytes ; }"
741,public boolean get Properties (  ) { return properties ; }
742,"public static  String [  ]  get String Array Value (  Annotation Mirror annotation,  String value Name ) { return get Annotation Values ( get Annotation Value ( annotation, value Name )  )  . stream (  )  . map (  it ->  (  String )  it . get Value (  )  )  . to Array (  String [  ] ::new )  ; }"
743,"public void move Next Position ( boolean smooth ) { if  ( get Real Adapter (  )  == null )      throw new  Illegal State Exception ( "" You did not set a slider adapter"" )  ;  m View Pager . set Current Item ( m View Pager . get Current Item (  )  + 1, smooth )  ; }"
744,"public  String to String (  ) {  String prefix = get Prefix (  )  ;   String q Name = """" . equals ( prefix )  ? get Local Name (  )  : get Prefix (  )  + "":"" + get Local Name (  )  ;  return "" [  (  Default Name Step ) : "" + q Name + "" ] "" ; }"
745,protected void reset ( long addr ) { this . addr = addr ;  this . user Data = null ;  for  ( int i = 0 ;  i < fixtures . size ;  i++ )  this . world . free Fixtures . free ( fixtures . get ( i )  )  ;  fixtures . clear (  )  ;  this . joints . clear (  )  ; }
746,"public com . anychart . core . venn .  Intersections hovered (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hovered ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
747,"public com . anychart . math .  Rect get Pixel Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . get Pixel Bounds (  ) "" )  ; }"
748,"public com . anychart . charts .  Mekko margin (  Number [  ]  margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "",  Arrays . to String ( margin )  )  )  ;  return this ; }"
749,"public static  Ct Method make (  String src,  Ct Class declaring )  throws  Cannot Compile Exception{ return make ( src, declaring, null, null )  ; }"
750,public void set Error Concealment ( final GUID err Conc ) { this . error Concealment = err Conc ; }
751,"public void set Current Viewport ( float left, float top, float right, float bottom ) { constrain Viewport ( left, top, right, bottom )  ; }"
752,"public static void request Permissions (  Permission Request request ) { //  Check for permissions before dispatching the request if  ( has Permissions ( request . get Helper (  )  . get Context (  ) , request . get Perms (  )  )  )  {     notify Already Has Permissions ( request . get Helper (  )  . get Host (  ) , request . get Request Code (  ) , request . get Perms (  )  )  ;      return ;  } //  Request permissions request . get Helper (  )  . request Permissions ( request . get Rationale (  ) , request . get Positive Button Text (  ) , request . get Negative Button Text (  ) , request . get Theme (  ) , request . get Request Code (  ) , request . get Perms (  )  )  ; }"
753,"protected  Shader Var add Uniform (  String name,  Data Type data Type ) {  Shader Var v = get Instance For Data Type ( name, data Type )  ;  v . is Global ( true )  ;  m Uniforms . put ( v . get Name (  ) , v )  ;  return v ; }"
754,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
755,public  Activity get Context (  ) { return context . get (  )  ; }
756,"public com . anychart . core . polar . series .  Range Column hover (  Number index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hover ( %s )  ; "", index )  )  ;  return this ; }"
757,"public com . anychart . charts .  Tree Map padding (  Number [  ]  padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "",  Arrays . to String ( padding )  )  )  ;  return this ; }"
758,"public com . anychart . charts .  Cartesian top (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", value )  )  ;  return this ; }"
759,public void on Configuration Changed (  Configuration new Config ) { super . on Configuration Changed ( new Config )  ;  if  ( recycler View Manager != null )  {     // recycler View Manager can be null here if we use camera Only mode     recycler View Manager . change Orientation ( new Config . orientation )  ;  }}
760,"private void assert Timed Out (  Timeout .  .  .  expected ) { assert Equals (  Arrays . as List ( expected ) , new  Array List< Timeout> ( timed Out )  )  ; }"
761,"Watch Stream create Watch Stream (  Watch Stream .  Callback listener ) { return new  Watch Stream ( channel, worker Queue, serializer, listener )  ; }"
762,void on Rendered First Frame ( @ Nullable  Surface surface ) {}
763,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
764,"public  Realm List< Dynamic Realm Object> get List (  String field Name ) { proxy State . get Realm$realm (  )  . check If Valid (  )  ;  long column Key = proxy State . get Row$realm (  )  . get Column Key ( field Name )  ;  try {      Os List os List = proxy State . get Row$realm (  )  . get Model List ( column Key )  ;      //noinspection  Constant Conditions     @ Nonnull  String class Name = os List . get Target Table (  )  . get Class Name (  )  ;      return new  Realm List<> ( class Name, os List, proxy State . get Realm$realm (  )  )  ;  } catch  (  Illegal Argument Exception e )  {     check Field Type ( field Name, column Key,  Realm Field Type . LIST )  ;      throw e ;  }}"
765,"protected void wait For Service To Be Unbound (  )  throws  Interrupted Exception{  Ln . d ( "" Waiting for service to be unbound . "" )  ;  lock Acquire Service . lock (  )  ;  try {     while  ( spice Service != null )  {         condition Service Unbound . await (  )  ;      } } finally {     lock Acquire Service . unlock (  )  ;  }}"
766,public  View get Progress View (  ) { return m Progress View ; }
767,"public  Builder add Computed Link Property (  String name,  String source Class,  String source Class Name ) { long property Ptr =  Property . native Create Computed Link Property ( name, source Class, source Class Name )  ;  computed Property Ptr Array [ computed Property Ptr Cur Pos ]  = property Ptr ;  computed Property Ptr Cur Pos++ ;  return this ; }"
768,"public void left (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . left (  )  ; "" )  ; }"
769,void record Pending Target Request ( int target Id ) { //  For each request we get we need to record we need a response for it .   Target State target State = ensure Target State ( target Id )  ;  target State . record Pending Target Request (  )  ; }
770,"boolean has Flavors (  Immutable Set< Flavor> flavors,  Target Configuration toolchain Target Configuration ) { return flavor Domains ( toolchain Target Configuration )  . map (  domains -> domains . stream (  )  . any Match (  domain -> domain . contains Any Of ( flavors )  )  )  . or Else ( false )  ; }"
771,"private boolean is Granted For Backwards Compatibility (  String pkg Name,  Package Info permissions Info ) { // package to the  Package Manager, without updating the requested Permissions Flags .  return permissions Info . requested Permissions Flags == null || // we treat this as a special case .  pkg Name . equals (  Runtime Environment . get Application (  )  . get Package Name (  )  )  ; }"
772,public boolean is Closed (  ) { if  ( !frozen && this . thread Id !=  Thread . current Thread (  )  . get Id (  )  )  {     throw new  Illegal State Exception ( INCORRECT_THREAD_MESSAGE )  ;  } return shared Realm == null || shared Realm . is Closed (  )  ; }
773,"protected void parse Args (  String .  .  .  args ) {  File output Directory = null ;  long default Test Timeout Millis =  Long . MAX_VALUE ;   Test Selector List .  Builder test Selector List Builder =  Test Selector List . builder (  )  ;  boolean is Dry Run = false ;  boolean should Explain Test Selectors = false ;   List< String> test Class Names = new  Array List<> (  )  ;  for  ( int i = 0 ;  i < args . length ;  i++ )  {     switch ( args [ i ]  )  {         case ""--default-test-timeout"":             default Test Timeout Millis =  Long . parse Long ( args [ ++i ]  )  ;              break ;          case ""--test-selectors"":              List< String> raw Selectors =  Arrays . as List ( args [ ++i ]  . split ( ""\n"" )  )  ;              test Selector List Builder . add Raw Selectors ( raw Selectors )  ;              break ;          case ""--simple-test-selector"":             try {                 test Selector List Builder . add Simple Test Selector ( args [ ++i ]  )  ;              } catch  (  Illegal Argument Exception e )  {                  System . err . print ( ""--simple-test-selector takes 2 args:  [ suite ]  and  [ method name ]  . "" )  ;                   System . exit ( 1 )  ;              }             break ;          case ""--b64-test-selector"":             try {                 test Selector List Builder . add Base64 Encoded Test Selector ( args [ ++i ]  )  ;              } catch  (  Illegal Argument Exception e )  {                  System . err . print ( ""--b64-test-selector takes 2 args:  [ suite ]  and  [ method name ]  . "" )  ;                   System . exit ( 1 )  ;              }             break ;          case ""--explain-test-selectors"":             should Explain Test Selectors = true ;              break ;          case ""--dry-run"":             is Dry Run = true ;              break ;          case ""--output"":             output Directory = new  File ( args [ ++i ]  )  ;              if  ( !output Directory . exists (  )  )  {                  System . err . printf ( "" The output directory did not exist: %s\n"", output Directory )  ;                   System . exit ( 1 )  ;              }             break ;          default:             test Class Names . add ( args [ i ]  )  ;      } } if  ( test Class Names . is Empty (  )  )  {      System . err . println ( "" Must specify at least one test . "" )  ;       System . exit ( 1 )  ;  } this . output Directory = output Directory ;  this . default Test Timeout Millis = default Test Timeout Millis ;  this . is Dry Run = is Dry Run ;  this . test Class Names = test Class Names ;  this . test Selector List = test Selector List Builder . build (  )  ;  if  ( !test Selector List . is Empty (  )  && !should Explain Test Selectors )  {     //  Don't bother class-loading any classes that aren't possible, according to test selectors     test Class Names . remove If (  name -> !test Selector List . possibly Includes Class Name ( name )  )  ;  } this . should Explain Test Selectors = should Explain Test Selectors ; }"
774,"public static void send ( byte [  ]  content, final  Http Servlet Request req, final  Http Servlet Response rsp )  throws IO Exception{ content = send Init ( content, req, rsp )  ;  try  (  Output Stream out = rsp . get Output Stream (  )  )  {     out . write ( content )  ;      out . flush (  )  ;  }}"
775,private void remove Notification (  ) {  (  (  Notification Manager )  get System Service (  Context . NOTIFICATION_SERVICE )  )  . cancel ( NOTIFICATION_ID )  ; }
776,"public static  Object doctest (  Context cx,  Scriptable this Obj,  Object [  ]  args,  Function fun Obj ) { if  ( args . length == 0 )  {     return  Boolean . FALSE ;  }  String session =  Context . to String ( args [ 0 ]  )  ;   Global global = get Instance ( fun Obj )  ;  return new  Integer ( global . run Doctest ( cx, global, session, null, 0 )  )  ; }"
777,"private void validate Child Order (  ) {  Log . d ( TAG, ""validating child count "" + get Child Count (  )  )  ;  if  ( get Child Count (  )  < 1 )  {     return ;  } int last Pos = get Position ( get Child At ( 0 )  )  ;  int last Screen Loc = m Orientation Helper . get Decorated Start ( get Child At ( 0 )  )  ;  if  ( m Should Reverse Layout )  {     for  ( int i = 1 ;  i < get Child Count (  )  ;  i++ )  {          View child = get Child At ( i )  ;          int pos = get Position ( child )  ;          int screen Loc = m Orientation Helper . get Decorated Start ( child )  ;          if  ( pos < last Pos )  {             log Children (  )  ;              throw new  Runtime Exception ( ""detected invalid position .  loc invalid? "" +  ( screen Loc < last Screen Loc )  )  ;          }         if  ( screen Loc > last Screen Loc )  {             log Children (  )  ;              throw new  Runtime Exception ( ""detected invalid location"" )  ;          }     } } else {     for  ( int i = 1 ;  i < get Child Count (  )  ;  i++ )  {          View child = get Child At ( i )  ;          int pos = get Position ( child )  ;          int screen Loc = m Orientation Helper . get Decorated Start ( child )  ;          if  ( pos < last Pos )  {             log Children (  )  ;              throw new  Runtime Exception ( ""detected invalid position .  loc invalid? "" +  ( screen Loc < last Screen Loc )  )  ;          }         if  ( screen Loc < last Screen Loc )  {             log Children (  )  ;              throw new  Runtime Exception ( ""detected invalid location"" )  ;          }     } }}"
778,public void set Parser (  Incoming Parser parser ) { this . parser = parser ; }
779,public final void set Variable Padding ( boolean variable ) { m Variable Padding = variable ; }
780,"public  Swipe Builder3< Epoxy Model> with Targets (  Class<? extends  Epoxy Model> .  .  .  target Model Classes ) { return new  Swipe Builder3<> ( recycler View, movement Flags,  Epoxy Model . class,  Arrays . as List ( target Model Classes )  )  ; }"
781,"public com . anychart . core . utils .  Legend Item Settings icon Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . icon Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
782,"public  String get Database Directory Path (  ) { return this . context != null && this . context . get Database Path ( ""x"" )  != null ? this . context . get Database Path ( ""x"" )  . get Parent (  )  : """" ; }"
783,public static  App Compat Activity get App Comp Activity (  Context context ) { if  ( context == null )      return null ;  if  ( context instanceof  App Compat Activity )  {     return  (  App Compat Activity )  context ;  } else if  ( context instanceof  Context Theme Wrapper )  {     return get App Comp Activity (  (  (  Context Theme Wrapper )  context )  . get Base Context (  )  )  ;  } return null ; }
784,"public com . anychart . core . resource .  Grid odd Holiday Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . odd Holiday Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
785,public boolean read Bit (  ) { boolean return Value =  ( data [ byte Offset ]  &  ( 0x80 >> bit Offset )  )  != 0 ;  skip Bit (  )  ;  return return Value ; }
786,"public static void w (  String tag,  String msg ) { if  ( s Level > LEVEL_WARNING )  {     return ;  }  Log . w ( tag, msg )  ; }"
787,"private static  String text Property From View (  View v ) {  String ret = null ;  if  ( v instanceof  Text View )  {     final  Text View text V =  (  Text View )  v ;      final  Char Sequence ret Sequence = text V . get Text (  )  ;      if  ( null != ret Sequence )  {         ret = ret Sequence . to String (  )  ;      } } else if  ( v instanceof  View Group )  {     final  String Builder builder = new  String Builder (  )  ;      final  View Group v Group =  (  View Group )  v ;      final int child Count = v Group . get Child Count (  )  ;      boolean text Seen = false ;      for  ( int i = 0 ;  i < child Count && builder . length (  )  < MAX_PROPERTY_LENGTH ;  i++ )  {         final  View child = v Group . get Child At ( i )  ;          final  String child Text = text Property From View ( child )  ;          if  ( null != child Text && child Text . length (  )  > 0 )  {             if  ( text Seen )  {                 builder . append ( "", "" )  ;              }             builder . append ( child Text )  ;              text Seen = true ;          }     }     if  ( builder . length (  )  > MAX_PROPERTY_LENGTH )  {         ret = builder . substring ( 0, MAX_PROPERTY_LENGTH )  ;      } else if  ( text Seen )  {         ret = builder . to String (  )  ;      } } return ret ; }"
788,protected boolean is Show Y Sequence Vertical Line ( int row ) { return true ; }
789,"public com . anychart . core . ui .  Label label (  Number index ) { return new com . anychart . core . ui .  Label (  String . format (  Locale . US, js Base + "" . label ( %s ) "", index )  )  ; }"
790,"public void write To (  Object obj,  Class<?> type,  Type generic Type,  Annotation [  ]  annotations,  Media Type media Type,  Multivalued Map< String,  Object> http Headers,  Output Stream entity Stream )  throws IO Exception,  Web Application Exception{  Fast Json Config fast Json Config = locate Config Provider ( type, media Type )  ;   Serializer Feature [  ]  serializer Features = fast Json Config . get Serializer Features (  )  ;  if  ( pretty )  {     if  ( serializer Features == null )          serializer Features = new  Serializer Feature [  ]  {  Serializer Feature .  Pretty Format } ;      else {          List< Serializer Feature> feature List = new  Array List< Serializer Feature> (  Arrays . as List ( serializer Features )  )  ;          feature List . add (  Serializer Feature .  Pretty Format )  ;          serializer Features = feature List . to Array ( serializer Features )  ;      }     fast Json Config . set Serializer Features ( serializer Features )  ;  } try {     //     JSON . write JSON String With Fast Json Config ( //     entity Stream, //     fast Json Config . get Charset (  ) , //     obj, //     fast Json Config . get Serialize Config (  ) , //     fast Json Config . get Serialize Filters (  ) , //     fast Json Config . get Date Format (  ) , //     JSON . DEFAULT_GENERATE_FEATURE, fast Json Config . get Serializer Features (  )  )  ;      entity Stream . flush (  )  ;  } catch  ( JSON Exception ex )  {     throw new  Web Application Exception ( ex )  ;  }}"
791,private static boolean is MIUI Custom Status Bar Light Mode Impl (  ) { if  ( QMUI Device Helper . is MIUIV9 (  )  &&  Build . VERSION . SDK_INT <  Build . VERSION_CODES . M )  {     return true ;  } return QMUI Device Helper . is MIUIV5 (  )  || QMUI Device Helper . is MIUIV6 (  )  || QMUI Device Helper . is MIUIV7 (  )  || QMUI Device Helper . is MIUIV8 (  )  ; }
792,public boolean apply (  Character character ) { return matches ( character )  ; }
793,"public static byte [  ]  sha3 ( byte [  ]  input ) { return sha3 ( input, 0, input . length )  ; }"
794,public float get Bar Width (  ) { return m Bar Width ; }
795,public void set Is Network Roaming ( boolean is Network Roaming ) { this . is Network Roaming = is Network Roaming ; }
796,"public static void activate App (  Context context,  String _str ) {  App Events Logger Impl . function DEPRECATED ( "" Please use activate App (  Application )  "" + ""or activate App (  Application,  String ) "" )  ; }"
797,"public com . anychart . charts .  Heat Map select Marquee Stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
798,"public com . anychart . charts .  Radar left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
799,"public com . anychart . charts .  Sparkline max Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
800,public  Attributes Node get Entry Attributes Node (  Object Reader reader )  throws IO Exception{ if  ( attributes Node instanceof  Lazy Loading Attributes Node )      attributes Node =  (  (  Lazy Loading Attributes Node )  attributes Node )  . load ( reader )  ;  return attributes Node ; }
801,"public void test Versioning (  )  throws IO Exception{ //  Define data that will be written to cache  Cache Key key = new  Simple Cache Key ( ""version_test"" )  ;  byte [  ]  value = new byte [ 32 ]  ;  value [ 0 ]  = 'v' ;  //  Set up cache with version == 1  Disk Storage storage1 = create Disk Storage ( TESTCACHE_CURRENT_VERSION )  ;   Disk Storage Cache cache1 = create Disk Cache ( storage1, false )  ;  //  Write test data to cache 1 cache1 . insert ( key,  Writer Callbacks . from ( value )  )  ;  //  Get cached file  Binary Resource resource1 = get Resource ( storage1, key )  ;  assert Not Null ( resource1 )  ;  //  Set up cache with version == 2  Disk Storage storage Supplier2 = create Disk Storage ( TESTCACHE_NEXT_VERSION )  ;   Disk Storage Cache cache2 = create Disk Cache ( storage Supplier2, false )  ;  //  Write test data to cache 2 cache2 . insert ( key,  Writer Callbacks . from ( value )  )  ;  //  Get cached file  Binary Resource resource2 = get Resource ( storage Supplier2, key )  ;  assert Not Null ( resource2 )  ;  //  Make sure filenames of the two file are different assert False ( resource2 . equals ( resource1 )  )  ; }"
802,"public  Set< String> get Query Parameter Names (  Uri uri ) { if  ( uri == null )  {     return  Collections . empty Set (  )  ;  } if  ( uri . is Opaque (  )  )  {     throw new  Unsupported Operation Exception ( "" This isn't a hierarchical URI . "" )  ;  }  String query = uri . get Encoded Query (  )  ;  if  ( query == null )  {     return  Collections . empty Set (  )  ;  }  Set< String> names = new  Linked Hash Set< String> (  )  ;  int start = 0 ;  do {     int next = query . index Of ( '&', start )  ;      int end =  ( next == -1 )  ? query . length (  )  : next ;      int separator = query . index Of ( '=', start )  ;      if  ( separator > end || separator == -1 )  {         separator = end ;      }      String name = query . substring ( start, separator )  ;      names . add (  Uri . decode ( name )  )  ;      //  Move start to end of name .      start = end + 1 ;  } while  ( start < query . length (  )  )  ;  return  Collections . unmodifiable Set ( names )  ; }"
803,void check State Preconditions (  ) {}
804,public int get End Offset (  ) { parse If Necessary (  )  ;  return end Offset ; }
805,"public com . anychart . core . annotations .  Trend Channel min Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", height )  )  ;  return this ; }"
806,"public void save As Pdf (  Number paper Size Or Width Or Options,  Boolean landscape,  Number x,  Number y,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Pdf ( %s, %s, %s, %s, %s )  ; "", paper Size Or Width Or Options, landscape, x, y, wrap Quotes ( filename )  )  )  ; }"
807,public boolean equals (  Object obj ) { if  ( ! ( obj instanceof  Lyrics3v2 )  )  {     return false ;  }  Lyrics3v2 object =  (  Lyrics3v2 )  obj ;  return this . field Map . equals ( object . field Map )  && super . equals ( obj )  ; }
808,"public void add Actor Before (  Actor actor Before,  Actor actor ) { throw new  Unsupported Operation Exception ( "" Use  Scroll Pane#set Widget . "" )  ; }"
809,"public static void restart With Mixed Theme (  Activity activity ) {  Theme Manager . restart With Theme ( activity,  Theme Manager . MIXED )  ; }"
810,public  On Item Swipe Event Listener get On Item Swipe Event Listener (  ) { return m Item Swipe Event Listener ; }
811,"public com . anychart . core .  Visual Base With Bounds parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
812,public  String get Type (  ) { return get Geometry Type (  )  ; }
813,protected boolean has Processor (  Field field ) { return !field . get Annotation ( XML Field . class )  . processor (  )  . equals (  Processor . class )  ; }
814,public  Two Level Header open Two Level ( boolean width On Two Level Listener ) { final  Refresh Kernel refresh Kernel = m Refresh Kernel ;  if  ( refresh Kernel != null )  {     final  On Two Level Listener two Level Listener = m Two Level Listener ;      refresh Kernel . start Two Level ( !width On Two Level Listener || two Level Listener == null || two Level Listener . on Two Level ( refresh Kernel . get Refresh Layout (  )  )  )  ;  } return this ; }
815,"public void send Message (  String message,  Response Listener< Object> listener ) { if  ( listener != null )      listener . on Error (  Service Command Error . not Supported (  )  )  ; }"
816,"public void save As Xlsx (  String chart Data Export Mode,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Xlsx ( %s, %s )  ; "", wrap Quotes ( chart Data Export Mode ) , wrap Quotes ( filename )  )  )  ; }"
817,"public static boolean is Valid Opcode ( final int op Code )  throws  Illegal Argument Exception{ if  ( op Code !=  ( op Code & 0x FFFFFF )  )      throw new  Illegal Argument Exception ( "" Invalid opcode, opcode must be 1-3 octets"" )  ;  return true ; }"
818,"public static  Cache Disk Utils get Instance ( final long max Size, final int max Count ) { return get Instance ( """", max Size, max Count )  ; }"
819,"public static int dip2px (  Context context, float dp Value ) {  Resources r = context . get Resources (  )  ;  float px =  Typed Value . apply Dimension (  Typed Value . COMPLEX_UNIT_DIP, dp Value, r . get Display Metrics (  )  )  ;  return  ( int )  px ; }"
820,"private static  List< String> separate Challenges ( final  String challenges )  throws  Resource Authentication Challenge Exception{ final  String method Name = "":separate Challenges"" ;  if  (  String Extensions . is Null Or Blank ( challenges )  )  {      Logger . w ( TAG + method Name, "" Input  String was null"" )  ;      throw new  Resource Authentication Challenge Exception ( AUTH_HEADER_INVALID_FORMAT )  ;  } //  Split the supplied  String on those commas which are not constrained by quotes  Logger . i ( TAG + method Name, "" Splitting input  String on unquoted commas"", ""input [ "" + challenges + "" ] "" )  ;   String [  ]  split On Unquoted Commas = challenges . split ( REGEX_SPLIT_UNQUOTED_COMMA, -1 )  ;   Logger . i ( TAG + method Name, "" Splitting input  String on unquoted commas"", ""output [ "" +  Arrays . to String ( split On Unquoted Commas )  + "" ] "" )  ;  sanitize Whitespace ( split On Unquoted Commas )  ;   List< String> tokens Containing Scheme = extract Tokens Containing Scheme ( split On Unquoted Commas )  ;  // init an array to store the out-values  String [  ]  out Strings = new  String [ tokens Containing Scheme . size (  )  ]  ;  for  ( int ii = 0 ;  ii < out Strings . length ;  ii++ )  {     out Strings [ ii ]  = """" ;  } write Parsed Challenges ( split On Unquoted Commas, tokens Containing Scheme, out Strings )  ;  //  Remove the suffix comma from the last element of each list .  .  .  sanitize Parsed Suffixes ( out Strings )  ;  //  Collapse the results to a single list .  .  .  return  Arrays . as List ( out Strings )  ; }"
821,"public com . anychart . charts .  Waterfall no Data (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . no Data ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
822,protected  Drawable get Controller Overlay (  ) { return m Controller Overlay ; }
823,public void wait For Completion (  ) { executor . wait For Completion (  )  ; }
824,public float get Anchor Point (  ) { return m Anchor Point ; }
825,public void add Filter (  Filter<E> new Filter ) { filter List . add ( new Filter )  ; }
826,"protected  String get Uri Prefix (  ) {  String prefix = prefs . get String ( PREF_URI_PREFIX, null )  ;  if  ( prefix == null )  {     prefix = build Uri Prefix (  )  ;      prefs . edit (  )  . put String ( PREF_URI_PREFIX, prefix )  . apply (  )  ;  } return  ( prefix )  ; }"
827,"public  Download download (  Download Tracker download Tracker ) { return new  Download ( download Tracker, this )  ; }"
828,public void gen (  )  throws  Exception{ info Gen . gen (  )  ; }
829,"private XY Chart get XY Chart (  String type )  throws  Illegal Access Exception,  Instantiation Exception{ XY Chart chart = null ;  int length = xy Chart Types . length ;  for  ( int i = 0 ;  i < length && chart == null ;  i++ )  {     XY Chart new Chart =  ( XY Chart )  xy Chart Types [ i ]  . new Instance (  )  ;      if  ( type . equals ( new Chart . get Chart Type (  )  )  )  {         chart = new Chart ;      } } return chart ; }"
830,public T14 get Value14 (  ) { return value14 ; }
831,"private void add Proxy Methods (  Type Spec .  Builder class Builder,  Element member, int method Index ) {  Executable Element executable Element =  (  Executable Element )  member ;   String method Name = executable Element . get Simple Name (  )  . to String (  )  ;  boolean is Oneway Annotated = member . get Annotation (  Oneway . class )  != null ;  boolean is One Way = executable Element . get Return Type (  )  . get Kind (  )  ==  Type Kind . VOID && is Oneway Annotated ;  if  ( !is One Way && is Oneway Annotated )  {     log Warning ( ""@ Oneway is expected only for methods with void return .   Ignoring it for "" + member . get Simple Name (  )  )  ;  }  Method Spec .  Builder method Builder =  Method Spec . method Builder ( method Name )  . add Modifiers (  Modifier . PUBLIC )  . add Annotation (  Override . class )  . returns (  Type Name . get ( executable Element . get Return Type (  )  )  )  ;  //add  Exceptions for  (  Type Mirror exceptions : executable Element . get Thrown Types (  )  )  {     method Builder . add Exception (  Class Name . best Guess ( exceptions . to String (  )  )  )  ;  } //add parameters int param Index = 0 ;  for  (  Variable Element params : executable Element . get Parameters (  )  )  {     method Builder . add Parameter (  Type Name . get ( params . as Type (  )  ) , params . get Simple Name (  )  . to String (  )  + ""_"" + param Index )  ;      param Index++ ;  } method Builder . add Statement ( ""__check Proxy (  ) "" )  ;  //add statements method Builder . add Statement ( ""android . os .  Parcel data = android . os .  Parcel . obtain (  ) "" )  ;  if  ( !is One Way )  {     method Builder . add Statement ( ""android . os .  Parcel reply = android . os .  Parcel . obtain (  ) "" )  ;  } //add return if any if  ( executable Element . get Return Type (  )  . get Kind (  )  !=  Type Kind . VOID )  {      Type Element generic Parceler = get Binding Manager (  )  . get Generic Type ( executable Element . get Return Type (  )  )  ;      if  ( generic Parceler != null )  {         method Builder . add Statement ( ""$T<$T> result"",  List . class, generic Parceler )  ;      } else {         method Builder . add Statement ( executable Element . get Return Type (  )  . to String (  )  + "" result"" )  ;      } } //start main body block method Builder . begin Control Flow ( ""try"" )  ;  //write the descriptor method Builder . add Statement ( ""data . write Interface Token ( DESCRIPTOR ) "" )  ;   List< Variable Element> out Params = new  Array List<> (  )  ;  //pass parameters param Index = 0 ;  for  (  Variable Element param : executable Element . get Parameters (  )  )  {      Param Builder .  Param Type param Type = param . get Annotation (  Param In . class )  != null ?  Param Builder .  Param Type . IN : param . get Annotation (  Param Out . class )  != null ?  Param Builder .  Param Type . OUT :  Param Builder .  Param Type . IN_OUT ;       Variable Element wrapped Param = new  Variable Element Wrapper ( param, param Index )  ;      if  ( param Type !=  Param Builder .  Param Type . IN )  {         out Params . add ( wrapped Param )  ;      }      Param Builder param Builder = get Binding Manager (  )  . get Builder For Param ( param . as Type (  )  )  ;      if  ( param Builder != null )  {         param Builder . write Params To Proxy ( wrapped Param, param Type, method Builder )  ;      } else {         log Error ( "" Parameter cannot be marshalled "" + param . get Simple Name (  )  )  ;      }     param Index++ ;  } method Builder . add Statement ( ""data . write Map ( __global_properties ) "" )  ;  //send remote command if  ( is One Way )  {     method Builder . add Statement ( ""m Remote . transact ( TRANSACTION_"" + method Name + ""_"" + method Index + "", data, null, android . os . I Binder . FLAG_ONEWAY ) "" )  ;  } else {     method Builder . add Statement ( ""m Remote . transact ( TRANSACTION_"" + method Name + ""_"" + method Index + "", data, reply, 0 ) "" )  ;      //read exception if any     method Builder . add Statement ( "" Throwable exception = check Exception ( reply ) "" )  ;      method Builder . begin Control Flow ( ""if ( exception != null ) "" )  ;      for  (  Type Mirror exceptions : executable Element . get Thrown Types (  )  )  {          Class Name exception C Name =  Class Name . best Guess ( exceptions . to String (  )  )  ;          method Builder . begin Control Flow ( ""if ( exception instanceof $T ) "", exception C Name )  ;          method Builder . add Statement ( ""throw  ( $T ) exception"", exception C Name )  ;          method Builder . end Control Flow (  )  ;      }     method Builder . add Statement ( ""throw  ( $T ) exception"",  Runtime Exception . class )  ;      method Builder . end Control Flow (  )  ;      //read result     if  ( executable Element . get Return Type (  )  . get Kind (  )  !=  Type Kind . VOID )  {          Param Builder param Builder = get Binding Manager (  )  . get Builder For Param ( executable Element . get Return Type (  )  )  ;          if  ( param Builder != null )  {             param Builder . read Results From Proxy ( executable Element . get Return Type (  ) , method Builder )  ;          } else {             log Error ( "" Unmarshellable return type "" + executable Element . get Return Type (  )  )  ;              method Builder . add Statement ( ""result = null"" )  ;          }     }     for  (  Variable Element param : out Params )  {          Param Builder .  Param Type param Type = param . get Annotation (  Param In . class )  != null ?  Param Builder .  Param Type . IN : param . get Annotation (  Param Out . class )  != null ?  Param Builder .  Param Type . OUT :  Param Builder .  Param Type . IN_OUT ;           Param Builder param Builder = get Binding Manager (  )  . get Builder For Param ( param . as Type (  )  )  ;          if  ( param Builder != null )  {             param Builder . read Out Params From Proxy ( param, param Type, method Builder )  ;          }     } } //end of try method Builder . end Control Flow (  )  ;  //catch rethrow method Builder . begin Control Flow ( ""catch  ( $T re ) "",  Class Name . get ( ""android . os"", "" Remote Exception"" )  )  ;  method Builder . add Statement ( ""throw new $T ( re ) "",  Runtime Exception . class )  ;  method Builder . end Control Flow (  )  ;  //finally block method Builder . begin Control Flow ( ""finally"" )  ;  if  ( !is One Way )  {     method Builder . add Statement ( ""reply . recycle (  ) "" )  ;  } method Builder . add Statement ( ""data . recycle (  ) "" )  ;  method Builder . end Control Flow (  )  ;  if  ( executable Element . get Return Type (  )  . get Kind (  )  !=  Type Kind . VOID )  {     method Builder . add Statement ( ""return result"" )  ;  } class Builder . add Method ( method Builder . build (  )  )  ; }"
832,"public com . anychart . charts .  Heat Map background (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
833,public  List< String> get Comments (  ) { return comments ; }
834,public  Media Player .  On Prepared Listener get On Prepared Listener (  ) { return prepared Listener ; }
835,"public com . anychart . charts .  Venn min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
836,"public static boolean contains ( short [  ]  array, short target ) { for  ( short value : array )  {     if  ( value == target )  {         return true ;      } } return false ; }"
837,"public static synchronized void initialize (  Context context ) { if  (  Fresco Systrace . is Tracing (  )  )  {      Fresco Systrace . begin Section ( "" Image Pipeline Factory#initialize"" )  ;  } initialize (  Image Pipeline Config . new Builder ( context )  . build (  )  )  ;  if  (  Fresco Systrace . is Tracing (  )  )  {      Fresco Systrace . end Section (  )  ;  }}"
838,public void update (  ) { __throw If Detached (  )  ;  my Dao . update ( this )  ; }
839,"public com . anychart . charts .  Waterfall select Marquee Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
840,public  Intent get Request Intent (  ) { return request Intent ; }
841,public static void set Debug ( boolean debug ) {  Skia Pooled Image Region Decoder . debug = debug ; }
842,"public boolean is Ascendant Of (  Actor actor ) { if  ( actor == null )      throw new  Illegal Argument Exception ( ""actor cannot be null . "" )  ;  do {     if  ( actor == this )          return true ;      actor = actor . parent ;  } while  ( actor != null )  ;  return false ; }"
843,public boolean is Clickable (  ) { return m Polygon Options . is Clickable (  )  ; }
844,public boolean is Write Mp3 Genres As Text (  ) { return is Write Mp3 Genres As Text ; }
845,"public static  String parse Charset ( @ Nullable  Map< String,  String> headers,  String default Charset ) { if  ( headers == null )  {     return default Charset ;  }  String content Type = headers . get ( HEADER_CONTENT_TYPE )  ;  if  ( content Type != null )  {      String [  ]  params = content Type . split ( "" ; "", 0 )  ;      for  ( int i = 1 ;  i < params . length ;  i++ )  {          String [  ]  pair = params [ i ]  . trim (  )  . split ( ""="", 0 )  ;          if  ( pair . length == 2 )  {             if  ( pair [ 0 ]  . equals ( ""charset"" )  )  {                 return pair [ 1 ]  ;              }         }     } } return default Charset ; }"
846,public static char max ( char .  .  .  array ) { check Argument ( array . length > 0 )  ;  char max = array [ 0 ]  ;  for  ( int i = 1 ;  i < array . length ;  i++ )  {     if  ( array [ i ]  > max )  {         max = array [ i ]  ;      } } return max ; }
847,public static  Expect create (  ) { return new  Expect ( new  Expectation Gatherer (  )  )  ; }
848,"private static boolean is File Available (  Optional< Path> file Path,  String label, boolean required ) { if  ( !file Path . is Present (  )  )  {     throw If Required ( required, "" Required option for %s unset"", label )  ;      return false ;  } if  ( ! Files . is Readable ( file Path . get (  )  )  )  {     throw If Required ( required, "" Cannot read %s file %s"", label, file Path . get (  )  )  ;      return false ;  } return true ; }"
849,"public static boolean do Targets Match Project Whitelist (  List< String> command Args,  Immutable Set< String> project Whitelist,  Buck Config buck Config ) {  Immutable Set< String> build Targets = get Build Targets ( command Args, buck Config )  ;  return do Targets Match Project Whitelist ( build Targets, project Whitelist )  ; }"
850,"public  Bottom List Sheet Builder add Item (  String text,  String tag ) { m Items . add ( new QMUI Bottom Sheet List Item Model ( text, tag )  )  ;  return this ; }"
851,"public com . anychart . core . cartesian . series .  Stick stick (  String [  ]  data, com . anychart . data .  Text Parsing Settings csv Settings ) { return new com . anychart . core . cartesian . series .  Stick (  String . format (  Locale . US, js Base + "" . stick ( %s, %s ) "", array To String Wrap Quotes ( data ) ,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
852,"private void recycle Views From Start (  Recycler View .  Recycler recycler, int dt ) { if  ( dt < 0 )  {     if  ( DEBUG )  {          Log . d ( TAG, "" Called recycle from start with a negative value .   This might happen"" + "" during layout changes but may be sign of a bug"" )  ;      }     return ;  } final int limit = m Orientation Helper . get Start After Padding (  )  + dt - m Header Increment Fixer ;  final int child Count = get Child Count (  )  ;  if  ( m Should Reverse Layout )  {     for  ( int i = child Count - 1 ;  i >= 0 ;  i-- )  {          View child = get Child At ( i )  ;          if  ( m Orientation Helper . get Decorated End ( child )  > limit )  {             // stop here if             recycle Children ( recycler, child Count - 1, i )  ;              return ;          }     } } else {     for  ( int i = 0 ;  i < child Count ;  i++ )  {          View child = get Child At ( i )  ;          if  ( m Orientation Helper . get Decorated End ( child )  > limit )  {             // stop here             recycle Children ( recycler, 0, i )  ;              return ;          }     } }}"
853,"public  Network Builder<N, E> expected Node Count ( int expected Node Count ) { this . expected Node Count =  Optional . of ( check Non Negative ( expected Node Count )  )  ;  return this ; }"
854,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
855,public  String get Name (  ) { return name Space . get Collection Name (  )  ; }
856,public  Build Target assert Unflavored (  ) { unconfigured Build Target . assert Unflavored (  )  ;  return this ; }
857,"public void filter Items ( @ Non Null  List<T> unfiltered Items ) { m Handler . remove Messages ( FILTER )  ;  m Handler . send Message (  Message . obtain ( m Handler, FILTER, unfiltered Items )  )  ; }"
858,"public void test Second Insert (  ) { m Insert Queue . insert ( 0, 0 )  ;  m Insert Queue . insert ( 0, 1 )  ;  verify ( m Insertable, times ( 0 )  )  . add ( 0, 1 )  ;  assert That ( m Insert Queue . get Active Indexes (  ) , not ( has Item ( 1 )  )  )  ;  assert That ( m Insert Queue . get Pending Items To Insert (  ) , has Item ( pair With Values ( 0, 1 )  )  )  ; }"
859,"private static void initialize (  File file )  throws IO Exception{ //  Use a temp file so we don't leave a partially-initialized file .   File temp File = new  File ( file . get Path (  )  + "" . tmp"" )  ;   Random Access File raf = open ( temp File )  ;  try {     raf . set Length ( INITIAL_LENGTH )  ;      raf . seek ( 0 )  ;      byte [  ]  header Buffer = new byte [ 16 ]  ;      write Ints ( header Buffer, INITIAL_LENGTH, 0, 0, 0 )  ;      raf . write ( header Buffer )  ;  } finally {     raf . close (  )  ;  } // A rename is atomic .  if  ( !temp File . rename To ( file )  )  {     throw new IO Exception ( "" Rename failed!"" )  ;  }}"
860,public void put New Bundle (  Bundle new Bundle ) { m Delegate . put New Bundle ( new Bundle )  ; }
861,"public void add Tenant (  String tenant Name ) { tenant Calls Count . put If Absent ( tenant Name, new  Atomic Long ( 0 )  )  ; }"
862,"public static  Litho View mount Component (  Component Context context,  Component component, int width, int height ) { return mount Component ( context, new  Litho View ( context ) , component, width, height )  ; }"
863,"private  Message Digest create MD5 Digest (  )  throws  No Such Algorithm Exception{ return  Message Digest . get Instance ( ""MD5"" )  ; }"
864,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
865,public static  Comparator<long [  ] > lexicographical Comparator (  ) { return  Lexicographical Comparator . INSTANCE ; }
866,"public com . anychart . math .  Rect get Pixel Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . get Pixel Bounds (  ) "" )  ; }"
867,"public com . anychart . charts .  Radar margin (  Number [  ]  margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "",  Arrays . to String ( margin )  )  )  ;  return this ; }"
868,public void set Scroll Multiplier ( float mul ) { this . m Scroll Multiplier = mul ; }
869,"public com . anychart . charts .  Gantt top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
870,Buck Unix Path get Empty Path (  ) { return empty Path ; }
871,"public static boolean is SE Linux Enforced (  ) { if  ( !s Is SE Linux Enabled )  {     return false ;  } boolean result = false ;  final  File SELINUX_STATUS_FILE = new  File ( ""/sys/fs/selinux/enforce"" )  ;  if  ( SELINUX_STATUS_FILE . exists (  )  )  {     try {          File Input Stream fis = new  File Input Stream ( SELINUX_STATUS_FILE )  ;          int status = fis . read (  )  ;          switch ( status )  {             case 49:                 result = true ;                  break ;              case 48:                 result = false ;                  break ;              default:                  Xposed Bridge . log ( "" Unexpected byte "" + status + "" in /sys/fs/selinux/enforce"" )  ;          }         fis . close (  )  ;      } catch  ( IO Exception e )  {         if  ( e . get Message (  )  . contains ( "" Permission denied"" )  )  {             result = true ;          } else {              Xposed Bridge . log ( "" Failed to read SE Linux status: "" + e . get Message (  )  )  ;              result = false ;          }     } } return result ; }"
872,public  String [  ]  get Build Targets (  ) { return build Targets ; }
873,"public int resume Download ( long .  .  .  ids ) { init Resume Method (  )  ;  if  ( resume Download == null )  {     return -1 ;  } try {     return  (  (  Integer )  resume Download . invoke ( download Manager, ids )  )  . int Value (  )  ;  } catch  (  Exception e )  {     /**          * accept all exception, include  Class Not Found Exception,  No Such Method Exception,  Invocation Target Exception,          *  Null Point Exception          */     e . print Stack Trace (  )  ;  } return -1 ; }"
874,"public void set Fixed Text Size ( int unit, float size ) {  Context context = get Context (  )  ;   Resources resources ;  if  ( context == null )  {     resources =  Resources . get System (  )  ;  } else {     resources = context . get Resources (  )  ;  } set Text Size (  Cue . TEXT_SIZE_TYPE_ABSOLUTE,  Typed Value . apply Dimension ( unit, size, resources . get Display Metrics (  )  )  )  ; }"
875,"protected boolean process Entry (  Canonical Tree Parser base,  Canonical Tree Parser ours,  Canonical Tree Parser theirs,  Dir Cache Build Iterator index,  Working Tree Iterator work, boolean ignore Conflicts,  Attributes attributes )  throws  Missing Object Exception,  Incorrect Object Type Exception,  Corrupt Object Exception, IO Exception{ enter Subtree = true ;  final int mode O = tw . get Raw Mode ( T_OURS )  ;  final int mode T = tw . get Raw Mode ( T_THEIRS )  ;  final int mode B = tw . get Raw Mode ( T_BASE )  ;  boolean git Link Merging = is Git Link ( mode O )  || is Git Link ( mode T )  || is Git Link ( mode B )  ;  if  ( mode O == 0 && mode T == 0 && mode B == 0 )      //  File is either untracked or new, staged but uncommitted     return true ;  if  ( is Index Dirty (  )  )      return false ;   Dir Cache Entry our Dce = null ;  if  ( index == null || index . get Dir Cache Entry (  )  == null )  {     // in case it is valid, so a null our Dce is ok in all other cases .      if  ( non Tree ( mode O )  )  {         our Dce = new  Dir Cache Entry ( tw . get Raw Path (  )  )  ;          our Dce . set Object Id ( tw . get Object Id ( T_OURS )  )  ;          our Dce . set File Mode ( tw . get File Mode ( T_OURS )  )  ;      } } else {     our Dce = index . get Dir Cache Entry (  )  ;  } if  ( non Tree ( mode O )  && non Tree ( mode T )  && tw . id Equal ( T_OURS, T_THEIRS )  )  {     // OURS and THEIRS have equal content .   Check the file mode     if  ( mode O == mode T )  {         // content and mode of OURS and THEIRS are equal: it doesn't         // matter which one we choose .  OURS is chosen .   Since the index         // is clean  ( the index matches already OURS )  we can keep the existing one         keep ( our Dce )  ;          // no checkout needed!         return true ;      }     // same content but different mode on OURS and THEIRS .      //  Try to merge the mode and report an error if this is     // not possible .      int new Mode = merge File Modes ( mode B, mode O, mode T )  ;      if  ( new Mode !=  File Mode . MISSING . get Bits (  )  )  {         if  ( new Mode == mode O )  {             // ours version is preferred             keep ( our Dce )  ;          } else {             // than ours .   Check it out!             if  ( is Worktree Dirty ( work, our Dce )  )  {                 return false ;              }             // we know about length and last Mod only after we have             // written the new content .              //  This will happen later .   Set these values to 0 for know .               Dir Cache Entry e = add ( tw . get Raw Path (  ) , theirs,  Dir Cache Entry . STAGE_0, EPOCH, 0 )  ;              add To Checkout ( tw . get Path String (  ) , e, attributes )  ;          }         return true ;      }     if  ( !ignore Conflicts )  {         //  File Modes are not mergeable .   We found a conflict on modes .          //  For conflicting entries we don't know last Modified and         // length .          //  This path can be skipped on ignore Conflicts, so the caller         // could use virtual commit .          add ( tw . get Raw Path (  ) , base,  Dir Cache Entry . STAGE_1, EPOCH, 0 )  ;          add ( tw . get Raw Path (  ) , ours,  Dir Cache Entry . STAGE_2, EPOCH, 0 )  ;          add ( tw . get Raw Path (  ) , theirs,  Dir Cache Entry . STAGE_3, EPOCH, 0 )  ;          unmerged Paths . add ( tw . get Path String (  )  )  ;          merge Results . put ( tw . get Path String (  ) , new  Merge Result<> (  Collections . empty List (  )  )  )  ;      }     return true ;  } if  ( mode B == mode T && tw . id Equal ( T_BASE, T_THEIRS )  )  {     // OURS .  OURS is chosen .   We can keep the existing entry .      if  ( our Dce != null )          keep ( our Dce )  ;      // no checkout needed!     return true ;  } if  ( mode B == mode O && tw . id Equal ( T_BASE, T_OURS )  )  {     //  Check worktree before checking out THEIRS     if  ( is Worktree Dirty ( work, our Dce )  )          return false ;      if  ( non Tree ( mode T )  )  {         // we know about length and last Mod only after we have written         // the new content .          //  This will happen later .   Set these values to 0 for know .           Dir Cache Entry e = add ( tw . get Raw Path (  ) , theirs,  Dir Cache Entry . STAGE_0, EPOCH, 0 )  ;          if  ( e != null )  {             add To Checkout ( tw . get Path String (  ) , e, attributes )  ;          }         return true ;      }     // which we know to be clean .      if  ( tw . get Tree Count (  )  > T_FILE && tw . get Raw Mode ( T_FILE )  == 0 )  {         //  Not present in working tree, so nothing to delete         return true ;      }     if  ( mode T != 0 && mode T == mode B )  {         //  Base, ours, and theirs all contain a folder: don't delete         return true ;      }     add Deletion ( tw . get Path String (  ) , non Tree ( mode O ) , attributes )  ;      return true ;  } if  ( tw . is Subtree (  )  )  {     // detected later     if  ( non Tree ( mode O )  != non Tree ( mode T )  )  {         if  ( ignore Conflicts )  {             //  In case of merge failures, ignore this path instead of reporting unmerged, so             // a caller can use virtual commit .   This will not result in files with conflict             // markers in the index/working tree .   The actual diff on the path will be             // computed directly on children .              enter Subtree = false ;              return true ;          }         if  ( non Tree ( mode B )  )              add ( tw . get Raw Path (  ) , base,  Dir Cache Entry . STAGE_1, EPOCH, 0 )  ;          if  ( non Tree ( mode O )  )              add ( tw . get Raw Path (  ) , ours,  Dir Cache Entry . STAGE_2, EPOCH, 0 )  ;          if  ( non Tree ( mode T )  )              add ( tw . get Raw Path (  ) , theirs,  Dir Cache Entry . STAGE_3, EPOCH, 0 )  ;          unmerged Paths . add ( tw . get Path String (  )  )  ;          enter Subtree = false ;          return true ;      }     // return here .      if  ( !non Tree ( mode O )  )          return true ;  // ours and theirs are both files, just fall out of the if block // and do the content merge } if  ( non Tree ( mode O )  && non Tree ( mode T )  )  {     //  Check worktree before modifying files     boolean worktree Dirty = is Worktree Dirty ( work, our Dce )  ;      if  ( !attributes . can Be Content Merged (  )  && worktree Dirty )  {         return false ;      }     if  ( git Link Merging && ignore Conflicts )  {         //  Always select 'ours' in case of GITLINK merge failures so         // a caller can use virtual commit .          add ( tw . get Raw Path (  ) , ours,  Dir Cache Entry . STAGE_0, EPOCH, 0 )  ;          return true ;      } else if  ( git Link Merging )  {         add ( tw . get Raw Path (  ) , base,  Dir Cache Entry . STAGE_1, EPOCH, 0 )  ;          add ( tw . get Raw Path (  ) , ours,  Dir Cache Entry . STAGE_2, EPOCH, 0 )  ;          add ( tw . get Raw Path (  ) , theirs,  Dir Cache Entry . STAGE_3, EPOCH, 0 )  ;           Merge Result< Submodule Conflict> result = create Git Links Merge Result ( base, ours, theirs )  ;          result . set Contains Conflicts ( true )  ;          merge Results . put ( tw . get Path String (  ) , result )  ;          unmerged Paths . add ( tw . get Path String (  )  )  ;          return true ;      } else if  ( !attributes . can Be Content Merged (  )  )  {         //  File marked as binary         switch ( get Content Merge Strategy (  )  )  {             case OURS:                 keep ( our Dce )  ;                  return true ;              case THEIRS:                  Dir Cache Entry their Entry = add ( tw . get Raw Path (  ) , theirs,  Dir Cache Entry . STAGE_0, EPOCH, 0 )  ;                  add To Checkout ( tw . get Path String (  ) , their Entry, attributes )  ;                  return true ;              default:                 break ;          }         add ( tw . get Raw Path (  ) , base,  Dir Cache Entry . STAGE_1, EPOCH, 0 )  ;          add ( tw . get Raw Path (  ) , ours,  Dir Cache Entry . STAGE_2, EPOCH, 0 )  ;          add ( tw . get Raw Path (  ) , theirs,  Dir Cache Entry . STAGE_3, EPOCH, 0 )  ;          // attribute merge issues are conflicts but not failures         unmerged Paths . add ( tw . get Path String (  )  )  ;          return true ;      }     //  Check worktree before modifying files     if  ( worktree Dirty )  {         return false ;      }      Merge Result< Raw Text> result = null ;      try {         result = content Merge ( base, ours, theirs, attributes, get Content Merge Strategy (  )  )  ;      } catch  (  Binary Blob Exception e )  {         switch ( get Content Merge Strategy (  )  )  {             case OURS:                 keep ( our Dce )  ;                  return true ;              case THEIRS:                  Dir Cache Entry their Entry = add ( tw . get Raw Path (  ) , theirs,  Dir Cache Entry . STAGE_0, EPOCH, 0 )  ;                  add To Checkout ( tw . get Path String (  ) , their Entry, attributes )  ;                  return true ;              default:                 result = new  Merge Result<> (  Collections . empty List (  )  )  ;                  result . set Contains Conflicts ( true )  ;                  break ;          }     }     if  ( ignore Conflicts )  {         result . set Contains Conflicts ( false )  ;      }     update Index ( base, ours, theirs, result, attributes )  ;       String current Path = tw . get Path String (  )  ;      if  ( result . contains Conflicts (  )  && !ignore Conflicts )  {         unmerged Paths . add ( current Path )  ;      }     modified Files . add ( current Path )  ;      add Checkout Metadata ( current Path, attributes )  ;  } else if  ( mode O != mode T )  {     // OURS or THEIRS has been deleted     if  (  (  ( mode O != 0 && !tw . id Equal ( T_BASE, T_OURS )  )  ||  ( mode T != 0 && !tw . id Equal ( T_BASE, T_THEIRS )  )  )  )  {         if  ( git Link Merging && ignore Conflicts )  {             add ( tw . get Raw Path (  ) , ours,  Dir Cache Entry . STAGE_0, EPOCH, 0 )  ;          } else if  ( git Link Merging )  {             add ( tw . get Raw Path (  ) , base,  Dir Cache Entry . STAGE_1, EPOCH, 0 )  ;              add ( tw . get Raw Path (  ) , ours,  Dir Cache Entry . STAGE_2, EPOCH, 0 )  ;              add ( tw . get Raw Path (  ) , theirs,  Dir Cache Entry . STAGE_3, EPOCH, 0 )  ;               Merge Result< Submodule Conflict> result = create Git Links Merge Result ( base, ours, theirs )  ;              result . set Contains Conflicts ( true )  ;              merge Results . put ( tw . get Path String (  ) , result )  ;              unmerged Paths . add ( tw . get Path String (  )  )  ;          } else {             //  Content merge strategy does not apply to delete-modify             // conflicts!              Merge Result< Raw Text> result ;              try {                 result = content Merge ( base, ours, theirs, attributes,  Content Merge Strategy . CONFLICT )  ;              } catch  (  Binary Blob Exception e )  {                 result = new  Merge Result<> (  Collections . empty List (  )  )  ;                  result . set Contains Conflicts ( true )  ;              }             if  ( ignore Conflicts )  {                 //  In case a conflict is detected the working tree file                 // is again filled with new content  ( containing conflict                 // markers )  .   But also stage 0 of the index is filled                 // with that content .                  result . set Contains Conflicts ( false )  ;                  update Index ( base, ours, theirs, result, attributes )  ;              } else {                 add ( tw . get Raw Path (  ) , base,  Dir Cache Entry . STAGE_1, EPOCH, 0 )  ;                  add ( tw . get Raw Path (  ) , ours,  Dir Cache Entry . STAGE_2, EPOCH, 0 )  ;                   Dir Cache Entry e = add ( tw . get Raw Path (  ) , theirs,  Dir Cache Entry . STAGE_3, EPOCH, 0 )  ;                  // OURS was deleted checkout THEIRS                 if  ( mode O == 0 )  {                     //  Check worktree before checking out THEIRS                     if  ( is Worktree Dirty ( work, our Dce )  )  {                         return false ;                      }                     if  ( non Tree ( mode T )  )  {                         if  ( e != null )  {                             add To Checkout ( tw . get Path String (  ) , e, attributes )  ;                          }                     }                 }                 unmerged Paths . add ( tw . get Path String (  )  )  ;                  // generate a  Merge Result for the deleted file                 merge Results . put ( tw . get Path String (  ) , result )  ;              }         }     } } return true ; }"
876,"public static  Uri get Temp Uri (  Context context,  File file ) { if  ( !file . get Parent File (  )  . exists (  )  )  {     file . get Parent File (  )  . mkdirs (  )  ;  } return get Uri For File ( context, file )  ; }"
877,private boolean can Scroll Y (  ) {  View child = get Child At ( 0 )  ;  if  ( child != null )  {     int child Height = child . get Height (  )  ;      return get Height (  )  < child Height + get Padding Top (  )  + get Padding Bottom (  )  ;  } return false ; }
878,"void check Working Range And Dispatch (  Layout State Context layout State Context, int position, int first Visible Index, int last Visible Index, int first Fully Visible Index, int last Fully Visible Index,  Working Range Status Handler status Handler ) { if  ( m Working Ranges == null )  {     return ;  } for  (  String key : m Working Ranges . key Set (  )  )  {     final  Range Tuple range Tuple = m Working Ranges . get ( key )  ;      for  ( int i = 0, size = range Tuple . m Components . size (  )  ;  i < size ;  i++ )  {          Component component = range Tuple . m Components . get ( i )  ;           String global Key = range Tuple . m Component Keys . get ( i )  ;          if  ( !status Handler . is In Range ( range Tuple . m Name, component, global Key )  && is Entering Range ( range Tuple . m Working Range, position, first Visible Index, last Visible Index, first Fully Visible Index, last Fully Visible Index )  )  {              Component Context scoped Context = component . get Scoped Context ( layout State Context, global Key )  ;              try {                 component . dispatch On Entered Range ( scoped Context, range Tuple . m Name )  ;              } catch  (  Exception e )  {                  Component Utils . handle ( scoped Context, e )  ;              }             status Handler . set Entered Range Status ( range Tuple . m Name, component, global Key )  ;          } else if  ( status Handler . is In Range ( range Tuple . m Name, component, global Key )  && is Exiting Range ( range Tuple . m Working Range, position, first Visible Index, last Visible Index, first Fully Visible Index, last Fully Visible Index )  )  {              Component Context scoped Context = component . get Scoped Context ( layout State Context, global Key )  ;              try {                 component . dispatch On Exited Range ( scoped Context, range Tuple . m Name )  ;              } catch  (  Exception e )  {                  Component Utils . handle ( scoped Context, e )  ;              }             status Handler . set Exited Range Status ( range Tuple . m Name, component, global Key )  ;          }     } }}"
879,public void on Detach (  ) { m Drawee Holder . on Detach (  )  ; }
880,"public com . anychart . charts .  Sparkline fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
881,"public void init Quit Action (  Quit Action quit Action ) { if  ( quit Action == null )      throw new  Illegal Argument Exception ( ""quit Action is null"" )  ;  if  ( this . quit Action != null )      throw new  Illegal Argument Exception ( "" The method is once-call . "" )  ;  this . quit Action = quit Action ; }"
882,"public static  Decal new Decal (  Texture Region texture Region, boolean has Transparency ) { return new Decal ( texture Region . get Region Width (  ) , texture Region . get Region Height (  ) , texture Region, has Transparency ? GL20 . GL_SRC_ALPHA :  Decal Material . NO_BLEND, has Transparency ? GL20 . GL_ONE_MINUS_SRC_ALPHA :  Decal Material . NO_BLEND )  ; }"
883,"public static boolean verify File Md5 (  File file,  String md5 ) { if  ( md5 == null )  {     return false ;  }  String file Md5 = get MD5 ( file )  ;  if  ( file Md5 == null )  {     return false ;  } return md5 . equals ( file Md5 )  ; }"
884,"private  String read Error (  Xml Pull Parser parser )  throws  Xml Pull Parser Exception, IO Exception{  String error Message = """" ;  parser . require (  Xml Pull Parser . START_TAG, ns, NODE_ERROR )  ;  while  ( parser . next (  )  !=  Xml Pull Parser . END_TAG )  {     if  ( parser . get Event Type (  )  !=  Xml Pull Parser . START_TAG )  {         continue ;      }      String name = parser . get Name (  )  ;      // read NODE_MESSAGE     if  ( name . equals Ignore Case ( NODE_MESSAGE )  )  {         error Message = read Text ( parser )  ;      } else {         skip ( parser )  ;      } } return error Message ; }"
885,"boolean process (  Float Buffer depth Buffer, int buffer Index, float new Depth ) { float old Depth = depth Buffer . get ( buffer Index )  ;  switch ( this )  {     case DRAW:         if  ( new Depth > old Depth )              depth Buffer . put ( buffer Index, new Depth )  ;          return false ;      case QUERY:         return  ( new Depth >= old Depth )  ;  } return false ; }"
886,"public com . anychart . core . stock . scrollerseries .  Spline max Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
887,"public com . anychart . scales .  Base y Scale (  ) { return new com . anychart . scales .  Base ( js Base + "" . y Scale (  ) "" )  ; }"
888,"public com . anychart . charts .  Cartesian point Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . point Width ( %s )  ; "", width )  )  ;  return this ; }"
889,"synchronized void add (  Listener Call Queue .  Event<L> event,  Object label ) { wait Queue . add ( event )  ;  label Queue . add ( label )  ; }"
890,"void log Message Click (  In App Message message,  Action action ) { if  ( !is Test Campaign ( message )  )  {     //  If message is not a test message then log     firebase Installations . get Id (  )  . add On Success Listener (  id -> engagement Metrics Logger . log Event ( create Event Entry ( message, id, CLICK_EVENT_TYPE )  . to Byte Array (  )  )  )  ;      //  For clicks log to analytics as well     log Event Async ( message,  Analytics Constants . ANALYTICS_ACTION_EVENT, true )  ;  } //  No matter what, always trigger developer callbacks developer Listener Manager . message Clicked ( message, action )  ; }"
891,"public  String get Canonical Id (  ) { if  ( memoized Cannonical Id != null )  {     return memoized Cannonical Id ;  }  String Builder builder = new  String Builder (  )  ;  builder . append ( get Path (  )  . canonical String (  )  )  ;  if  ( collection Group != null )  {     builder . append ( ""|cg:"" )  ;      builder . append ( collection Group )  ;  } //  Add filters .  builder . append ( ""|f:"" )  ;  for  (  Filter filter : get Filters (  )  )  {     builder . append ( filter . get Canonical Id (  )  )  ;  } //  Add order by .  builder . append ( ""|ob:"" )  ;  for  (  Order By order By : get Order By (  )  )  {     builder . append ( order By . get Field (  )  . canonical String (  )  )  ;      builder . append ( order By . get Direction (  )  . equals (  Direction . ASCENDING )  ? ""asc"" : ""desc"" )  ;  } //  Add limit .  if  ( has Limit (  )  )  {     builder . append ( ""|l:"" )  ;      builder . append ( get Limit (  )  )  ;  } if  ( start At != null )  {     builder . append ( ""|lb:"" )  ;      builder . append ( start At . canonical String (  )  )  ;  } if  ( end At != null )  {     builder . append ( ""|ub:"" )  ;      builder . append ( end At . canonical String (  )  )  ;  } memoized Cannonical Id = builder . to String (  )  ;  return memoized Cannonical Id ; }"
892,public com . facebook . buck . remoteexecution . proto .  Capability Value .  Builder get Task Name Builder (  ) { on Changed (  )  ;  return get Task Name Field Builder (  )  . get Builder (  )  ; }
893,"public com . anychart . core . resource .  Activities hatch Fill (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "", enabled )  )  ;  return this ; }"
894,"private static boolean check Reg Used (  Bit Set regs Used,  Register Spec rs ) { int reg = rs . get Reg (  )  ;  int category = rs . get Category (  )  ;  return regs Used . get ( reg )  ||  ( category == 2 ? regs Used . get ( reg + 1 )  : false )  ; }"
895,"private  Json Element serialize Net Keys ( @ Non Null final  Json Serialization Context context, @ Non Null final  List< Network Key> network Keys ) { final  Type network Key = new  Type Token< List< Network Key>> (  )  { } . get Type (  )  ;  return context . serialize ( network Keys, network Key )  ; }"
896,"public static boolean is Binary ( byte [  ]  raw, int length ) { //  Same heuristic as C  Git if  ( length > FIRST_FEW_BYTES )      length = FIRST_FEW_BYTES ;  for  ( int ptr = 0 ;  ptr < length ;  ptr++ )  if  ( raw [ ptr ]  == '\0' )      return true ;  return false ; }"
897,"private void test JAR Template (  String pkg,  String jar Path )  throws  Exception{  Definitely Derefed Params Driver driver = new  Definitely Derefed Params Driver (  )  ;  driver . run ( jar Path, ""L"" + pkg . replace All ( ""\\ . "", ""/"" )  )  ;   String out JAR Path = driver . last Out Path ;   Assert . assert True ( ""jar file not found! - "" + out JAR Path, new  File ( out JAR Path )  . exists (  )  )  ; }"
898,"public  Polygon Options get Polygon Options (  ) { return create Polygon Options ( m Polygon Options, m Fill, m Outline )  ; }"
899,"private static sun . misc .  Unsafe get Unsafe (  ) { try {     return sun . misc .  Unsafe . get Unsafe (  )  ;  } catch  (  Security Exception try Reflection Instead )  { } try {     return java . security .  Access Controller . do Privileged ( new java . security .  Privileged Exception Action<sun . misc .  Unsafe> (  )  {         @ Override         public sun . misc .  Unsafe run (  )  throws  Exception {              Class<sun . misc .  Unsafe> k = sun . misc .  Unsafe . class ;              for  ( java . lang . reflect .  Field f : k . get Declared Fields (  )  )  {                 f . set Accessible ( true )  ;                   Object x = f . get ( null )  ;                  if  ( k . is Instance ( x )  )                      return k . cast ( x )  ;              }             throw new  No Such Field Error ( ""the  Unsafe"" )  ;          }     } )  ;  } catch  ( java . security .  Privileged Action Exception e )  {     throw new  Runtime Exception ( "" Could not initialize intrinsics"", e . get Cause (  )  )  ;  }}"
900,protected  Bitmap Font Cache get Bitmap Font Cache (  ) { return cache ; }
901,"public void test Get Image Size Scale To_dont Use Image Actual Size With Wrap Content (  )  throws  Exception{ // Set it to wrap content so that it will fall back to m View . set Layout Params ( new  Frame Layout .  Layout Params (  View Group .  Layout Params . WRAP_CONTENT,  View Group .  Layout Params . WRAP_CONTENT )  )  ;  m View . measure (  View .  Measure Spec . make Measure Spec ( 250,  View .  Measure Spec . EXACTLY ) ,  View .  Measure Spec . make Measure Spec ( 250,  View .  Measure Spec . EXACTLY )  )  ;  //  We layout the view to give it a width and height m View . layout ( 0, 0, 200, 200 )  ;   Image Size expected = new  Image Size ( 500, 500 )  ;   Image Size result =  Image Size Utils . define Target Size For View ( m Image Aware, new  Image Size ( 500, 500 )  )  ;   Assertions . assert That ( result )  . is Not Null (  )  . is Equals To By Comparing Fields ( expected )  ; }"
902,"private void show Arrow ( int which Arrow, int requested X ) { final  View show Arrow =  ( which Arrow == R . id . arrow_up )  ? m Arrow Up : m Arrow Down ;  final  View hide Arrow =  ( which Arrow == R . id . arrow_up )  ? m Arrow Down : m Arrow Up ;  final int arrow Width = m Arrow Up . get Measured Width (  )  ;  show Arrow . set Visibility (  View . VISIBLE )  ;   View Group .  Margin Layout Params param =  (  View Group .  Margin Layout Params )  show Arrow . get Layout Params (  )  ;  param . left Margin = requested X - arrow Width / 2 ;  hide Arrow . set Visibility (  View . INVISIBLE )  ; }"
903,public void set Cells (  List< Buck Cell> cells ) {  Immutable List .  Builder< Buck Cell> builder =  Immutable List . builder (  )  ;  for  (  Buck Cell cell : cells )  {     builder . add ( cell . copy (  )  )  ;  } this . state . cells = builder . build (  )  ; }
904,"public com . anychart . core . annotations .  Andrews Pitchfork x Anchor (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Anchor ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
905,public void before Test ( final  Method method ) { if  ( is Test Lifecycle Application Class (  Runtime Environment . get Configured Application Class (  )  )  )  {      (  (  Test Lifecycle Application )   Runtime Environment . get Application (  )  )  . before Test ( method )  ;  }}
906,"private  List< List< Cell>> get Cell List For Sorting Test (  ) {  List< List< Cell>> list = new  Array List<> (  )  ;  for  ( int i = 0 ;  i < ROW_SIZE ;  i++ )  {      List< Cell> cell List = new  Array List<> (  )  ;      for  ( int j = 0 ;  j < COLUMN_SIZE ;  j++ )  {          Object text = ""cell "" + j + "" "" + i ;          final int random = new  Random (  )  . next Int (  )  ;          if  ( j == 0 )  {             text = i ;          } else if  ( j == 1 )  {             text = random ;          } else if  ( j == MOOD_COLUMN_INDEX )  {             text = random % 2 == 0 ? HAPPY : SAD ;          } else if  ( j == GENDER_COLUMN_INDEX )  {             text = random % 2 == 0 ? BOY : GIRL ;          }         //  Create dummy id .           String id = j + ""-"" + i ;           Cell cell ;          if  ( j == 3 )  {             cell = new  Cell ( id, text )  ;          } else if  ( j == 4 )  {             // NOTE female and male keywords for filter will have conflict since ""female""             // contains ""male""             cell = new  Cell ( id, text )  ;          } else {             cell = new  Cell ( id, text )  ;          }         cell List . add ( cell )  ;      }     list . add ( cell List )  ;  } return list ; }"
907,"public com . anychart . core .  Separate Chart select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
908,public int get Sample Rate (  ) { return SAMPLE_RATE ; }
909,"public com . anychart . charts .  Sankey container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
910,"public static final  Intent get Bar Chart Intent (  Context context, XY Multiple Series Dataset dataset, XY Multiple Series Renderer renderer,  Type type ) { return get Bar Chart Intent ( context, dataset, renderer, type, """" )  ; }"
911,public  Cxx Tool Flags get Other Flags (  ) { return  Cxx Tool Flags . of (  )  ; }
912,public static boolean is Cause (  Throwable Cause Iterable iterable ) { for  (  Throwable t : iterable )  {     if  ( t instanceof  Corrupt Artifact Exception )  {         return true ;      } } return false ; }
913,"public com . anychart . core . stock . indicators . B Bands Width bbands Width ( com . anychart . data .  Table Mapping mapping,  Number period,  Number deviation,  String series Type ) { return new com . anychart . core . stock . indicators . B Bands Width (  String . format (  Locale . US, js Base + "" . bbands Width ( %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, period, deviation, wrap Quotes ( series Type )  )  )  ; }"
914,"public com . anychart . core . annotations .  Fibonacci Fan selected (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
915,"public void delete By Id (  Class<?> clazz,  Object id ) { check Table Exist ( clazz )  ;  exe Sql Info (  Sql Builder . build Delete Sql ( clazz, id )  )  ; }"
916,"public com . anychart . core . resource .  Logo corners (  Number top Left,  String top Right,  String bottom Right,  String bottom Left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . corners ( %s, %s, %s, %s )  ; "", top Left, wrap Quotes ( top Right ) , wrap Quotes ( bottom Right ) , wrap Quotes ( bottom Left )  )  )  ;  return this ; }"
917,"public static  Browser Descriptor select (  Context context,  Browser Matcher browser Matcher ) {  List< Browser Descriptor> all Browsers = get All Browsers ( context )  ;   Browser Descriptor best Match = null ;  for  (  Browser Descriptor browser : all Browsers )  {     if  ( !browser Matcher . matches ( browser )  )  {         continue ;      }     if  ( browser . use Custom Tab )  {         // directly return the first custom tab supporting browser that is matched         return browser ;      }     if  ( best Match == null )  {         // store this as the best match for use if we don't find any matching         // custom tab supporting browsers         best Match = browser ;      } } return best Match ; }"
918,public  List< Gesture Dispatch> get Gestures Dispatched (  ) { return gestures Dispatched ; }
919,"public com . anychart . core . axes .  Circular Ticks fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
920,protected void append Core Flags (  String Builder s ) { s . append (  ( flags &  Rev Walk . TOPO_DELAY )  != 0 ? 'o' : '-' )  ;  s . append (  ( flags &  Rev Walk . TOPO_QUEUED )  != 0 ? 'q' : '-' )  ;  s . append (  ( flags &  Rev Walk . TEMP_MARK )  != 0 ? 't' : '-' )  ;  s . append (  ( flags &  Rev Walk . REWRITE )  != 0 ? 'r' : '-' )  ;  s . append (  ( flags &  Rev Walk . UNINTERESTING )  != 0 ? 'u' : '-' )  ;  s . append (  ( flags &  Rev Walk . SEEN )  != 0 ? 's' : '-' )  ;  s . append (  ( flags &  Rev Walk . PARSED )  != 0 ? 'p' : '-' )  ; }
921,"public void on Patch Type Extract Fail (  File patch File,  File extract To,  String filename, int file Type ) {  Share Tinker Log . i ( TAG, ""patch Reporter on Patch Type Extract Fail: file extract fail type: %s, path: %s, extract To: %s, filename: %s"",  Share Tinker Internals . get Type String ( file Type ) , patch File . get Path (  ) , extract To . get Path (  ) , filename )  ;  //delete temp files  Tinker . with ( context )  . clean Patch By Patch Apk ( patch File )  ; }"
922,"public com . anychart . charts .  Pareto right (  String right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", wrap Quotes ( right )  )  )  ;  return this ; }"
923,"public com . anychart . core . utils .  Quarter bottom Stroke ( com . anychart . graphics . vector .  Stroke value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom Stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
924,"public com . anychart . core .  State Settings high Hatch Fill ( com . anychart . graphics . vector .  Hatch Fill settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . high Hatch Fill ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
925,private  Bundle get Fdl Parameter Bundle (  ) { return get Parameter Bundle (  )  . get Bundle (  Builder . KEY_DYNAMIC_LINK_PARAMETERS )  ; }
926,"Expression get Dependency Expression For Component Method (  Binding Request request,  Component Method Descriptor component Method,  Component Implementation component Implementation ) { return get Binding Expression ( request )  . get Dependency Expression For Component Method ( component Method, component Implementation )  ; }"
927,"public void on Measure ( int width Measure Spec, int height Measure Spec ) { int measured Width =  Measure Spec . get Size ( width Measure Spec )  ;  int width Mode =  Measure Spec . get Mode ( width Measure Spec )  ;  int measured Height =  Measure Spec . get Size ( height Measure Spec )  ;  int height Mode =  Measure Spec . get Mode ( height Measure Spec )  ;  int min Dimension =  Math . min ( measured Width, measured Height )  ;  super . on Measure (  Measure Spec . make Measure Spec ( min Dimension, width Mode ) ,  Measure Spec . make Measure Spec ( min Dimension, height Mode )  )  ; }"
928,public int [  ]  get Offsets (  ) { if  ( yuv Offsets == null )      throw new  Illegal State Exception ( NO_ASSOC_ERROR )  ;  return yuv Offsets ; }
929,"public void select Marquee Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . select Marquee Fill (  )  ; "" )  ; }"
930,public void stop Scrolling (  ) { scroller . force Finished ( true )  ; }
931,public static void notify Adapter (  Abs List View list View ) { if  ( list View instanceof  Card List View )  {      Card List View card List View =  (  Card List View )  list View ;      if  ( card List View . m Adapter != null )  {         card List View . m Adapter . notify Data Set Changed (  )  ;      } else if  ( card List View . m Cursor Adapter != null )  {     //card List View . m Cursor Adapter . notify Data Set Changed (  )  ;      } }}
932,"private static  Track Bundle parse Tfhd (  Parsable Byte Array tfhd,  Sparse Array< Track Bundle> track Bundles ) { tfhd . set Position (  Atom . HEADER_SIZE )  ;  int full Atom = tfhd . read Int (  )  ;  int atom Flags =  Atom . parse Full Atom Flags ( full Atom )  ;  int track Id = tfhd . read Int (  )  ;   Track Bundle track Bundle = get Track Bundle ( track Bundles, track Id )  ;  if  ( track Bundle == null )  {     return null ;  } if  (  ( atom Flags & 0x01 )  != 0 )  {     long base Data Position = tfhd . read Unsigned Long To Long (  )  ;      track Bundle . fragment . data Position = base Data Position ;      track Bundle . fragment . auxiliary Data Position = base Data Position ;  }  Default Sample Values default Sample Values = track Bundle . default Sample Values ;  int default Sample Description Index =  (  ( atom Flags & 0x02 )  != 0 )  ? tfhd . read Unsigned Int To Int (  )  - 1 : default Sample Values . sample Description Index ;  int default Sample Duration =  (  ( atom Flags & 0x08 )  != 0 )  ? tfhd . read Unsigned Int To Int (  )  : default Sample Values . duration ;  int default Sample Size =  (  ( atom Flags & 0x10 )  != 0 )  ? tfhd . read Unsigned Int To Int (  )  : default Sample Values . size ;  int default Sample Flags =  (  ( atom Flags & 0x20 )  != 0 )  ? tfhd . read Unsigned Int To Int (  )  : default Sample Values . flags ;  track Bundle . fragment . header = new  Default Sample Values ( default Sample Description Index, default Sample Duration, default Sample Size, default Sample Flags )  ;  return track Bundle ; }"
933,public static long increment Component Calculate Layout On UI Count (  ) { return s Component Calculate Layout On UI Count . add And Get ( 1 )  ; }
934,public java . lang .  String get Product (  ) { java . lang .  Object ref = product_ ;  if  ( ! ( ref instanceof java . lang .  String )  )  {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      product_ = s ;      return s ;  } else {     return  ( java . lang .  String )  ref ;  }}
935,public long log Bytes (  ) { return log Bytes ; }
936,"public static  Immutable Value Graph<N, V> copy Of (  Immutable Value Graph<N, V> graph ) { return check Not Null ( graph )  ; }"
937,protected void class Loader Changed (  ) { // clear the static caches in  Bsh Class Manager clear Caches (  )  ;  // safely remove  Vector to Remove = new  Vector (  )  ;  for  (  Enumeration e = listeners . elements (  )  ;  e . has More Elements (  )  ;   )  {      Weak Reference wr =  (  Weak Reference )  e . next Element (  )  ;       Listener l =  (  Listener )  wr . get (  )  ;      if  ( // garbage collected     l == null )          to Remove . add ( wr )  ;      else         l . class Loader Changed (  )  ;  } for  (  Enumeration e = to Remove . elements (  )  ;  e . has More Elements (  )  ;   )  listeners . remove Element ( e . next Element (  )  )  ; }
938,"public com . anychart . charts .  Pert bounds (  String x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, height )  )  ;  return this ; }"
939,public void set Appendix (  String appendix ) { this . m Text = appendix ; }
940,"public com . anychart . core . ui .  Crosshair display Mode ( com . anychart . enums .  Crosshair Display Mode mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . display Mode ( %s )  ; "",  ( mode != null )  ? mode . get Js Base (  )  : null )  )  ;  return this ; }"
941,"public void font Decoration (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Decoration (  )  ; "" )  ; }"
942,"public  Long Array to Array (  ) {  Long Array array = new  Long Array ( true, map . size )  ;  while  ( has Next )  array . add ( next (  )  )  ;  return array ; }"
943,public  String get Date Format (  ) { return this . fast Json Config . get Date Format (  )  ; }
944,public  Set< Monitor Notifier> get Monitoring Notifiers (  ) { return  Collections . unmodifiable Set ( monitor Notifiers )  ; }
945,"public static  View Target navigation Button View Target (  Toolbar toolbar )  throws  Missing View Exception{ try {      Field field =  Toolbar . class . get Declared Field ( ""m Nav Button View"" )  ;      field . set Accessible ( true )  ;       View navigation View =  (  View )  field . get ( toolbar )  ;      return new  View Target ( navigation View )  ;  } catch  (  No Such Field Exception e )  {     throw new  Missing View Exception ( e )  ;  } catch  (  Illegal Access Exception e )  {     throw new  Missing View Exception ( e )  ;  }}"
946,public  List<T Value> as List (  String field To Select )  throws PS Exception{ return this . output (  Items Operators . <T Value>as Field List ( field To Select )  )  ; }
947,"public com . anychart . core . stock . scrollerseries .  Range Area low Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
948,"public  To String Builder append (  String field Name, long value ) { style . append ( buffer, field Name, value )  ;  return this ; }"
949,"public void share With Linked In (  String caption Or Options,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Linked In ( %s, %s )  ; "", wrap Quotes ( caption Or Options ) , wrap Quotes ( description )  )  )  ; }"
950,"public  To String Helper add (  String name, float value ) { return add Holder ( name,  String . value Of ( value )  )  ; }"
951,public void set Value Text Color ( int color ) { for  ( I Data Set set : m Data Sets )  {     set . set Value Text Color ( color )  ;  }}
952,"public final void set Text Encoding ( byte text Encoding ) { // Number  Hash Map actually converts this byte to a long set Object Value (  Data Types . OBJ_TEXT_ENCODING, text Encoding )  ; }"
953,"protected  Hash Map< String,  String> child Value (  Hash Map< String,  String> parent Value ) { if  ( parent Value == null )  {     return null ;  } else {     return new  Hash Map< String,  String> ( parent Value )  ;  }}"
954,"public A Transformable3 D set Scale ( double scale X, double scale Y, double scale Z ) { m Scale . x = scale X ;  m Scale . y = scale Y ;  m Scale . z = scale Z ;  mark Model Matrix Dirty (  )  ;  return this ; }"
955,protected boolean is Capable Of (  String option ) { return remote Capabilities . contains Key ( option )  ; }
956,"public com . anychart . core . resource .  Logo corners (  String top Left,  Number top Right,  Number bottom Right,  String bottom Left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . corners ( %s, %s, %s, %s )  ; "", wrap Quotes ( top Left ) , top Right, bottom Right, wrap Quotes ( bottom Left )  )  )  ;  return this ; }"
957,"public static  Build Cell Relative Path Factory new Cell Relative Path Factory (  Path build Cell Root Path,  Project Filesystem project Filesystem ) { return new  Default Build Cell Relative Path Factory ( build Cell Root Path, project Filesystem,  Optional . empty (  )  )  ; }"
958,"public com . anychart . core . annotations .  Fibonacci Retracement bounds (  String x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
959,"public  Iterator<?> get Java Iterator (  Context cx,  Scriptable scope,  Object obj ) { if  ( obj instanceof  Wrapper )  {      Object unwrapped =  (  (  Wrapper )  obj )  . unwrap (  )  ;       Iterator<?> iterator = null ;      if  ( unwrapped instanceof  Iterator )          iterator =  (  Iterator<?> )  unwrapped ;      if  ( unwrapped instanceof  Iterable )          iterator =  (  (  Iterable<?> )  unwrapped )  . iterator (  )  ;      return iterator ;  } return null ; }"
960,"public E put Boolean ( final  String key, final boolean value ) { this . bundle . put Boolean ( key, value )  ;  return  ( E )  this ; }"
961,"public  Selection Creator choose (  Set< Mime Type> mime Types ) { return this . choose ( mime Types, true )  ; }"
962,"public void paint (  Graphics g ) { super . paint ( g )  ;   File Text Area text Area = file Window . text Area ;   Font font = text Area . get Font (  )  ;  g . set Font ( font )  ;   Font Metrics metrics = get Font Metrics ( font )  ;   Rectangle clip = g . get Clip Bounds (  )  ;  g . set Color ( get Background (  )  )  ;  g . fill Rect ( clip . x, clip . y, clip . width, clip . height )  ;  int ascent = metrics . get Max Ascent (  )  ;  int h = metrics . get Height (  )  ;  int line Count = text Area . get Line Count (  )  + 1 ;   String dummy =  Integer . to String ( line Count )  ;  if  ( dummy . length (  )  < 2 )  {     dummy = ""99"" ;  } int start Line = clip . y / h ;  int end Line =  ( clip . y + clip . height )  / h + 1 ;  int width = get Width (  )  ;  if  ( end Line > line Count )      end Line = line Count ;  for  ( int i = start Line ;  i < end Line ;  i++ )  {      String text ;      int pos = -2 ;      try {         pos = text Area . get Line Start Offset ( i )  ;      } catch  (  Bad Location Exception ignored )  {     }     boolean is Break Point = file Window . is Break Point ( i + 1 )  ;      text =  Integer . to String ( i + 1 )  + "" "" ;      int y = i * h ;      g . set Color (  Color . blue )  ;      g . draw String ( text, 0, y + ascent )  ;      int x = width - ascent ;      if  ( is Break Point )  {         g . set Color ( new  Color ( 0x80, 0x00, 0x00 )  )  ;          int dy = y + ascent - 9 ;          g . fill Oval ( x, dy, 9, 9 )  ;          g . draw Oval ( x, dy, 8, 8 )  ;          g . draw Oval ( x, dy, 9, 9 )  ;      }     if  ( pos == file Window . current Pos )  {          Polygon arrow = new  Polygon (  )  ;          int dx = x ;          y += ascent - 10 ;          int dy = y ;          arrow . add Point ( dx, dy + 3 )  ;          arrow . add Point ( dx + 5, dy + 3 )  ;          for  ( x = dx + 5 ;  x <= dx + 10 ;  x++, y++ )  {             arrow . add Point ( x, y )  ;          }         for  ( x = dx + 9 ;  x >= dx + 5 ;  x--, y++ )  {             arrow . add Point ( x, y )  ;          }         arrow . add Point ( dx + 5, dy + 7 )  ;          arrow . add Point ( dx, dy + 7 )  ;          g . set Color (  Color . yellow )  ;          g . fill Polygon ( arrow )  ;          g . set Color (  Color . black )  ;          g . draw Polygon ( arrow )  ;      } }}"
963,"public static  Container Type [  ]  get Ordered (  ) { return new  Container Type [  ]  { CONTENT_DESCRIPTION, CONTENT_BRANDING, EXTENDED_CONTENT, METADATA_OBJECT, METADATA_LIBRARY_OBJECT } ; }"
964,"public int read (  )  throws java . io . IO Exception{ //  Do we need to get data? if  ( position < 0 )  {     if  ( encode )  {         byte [  ]  b3 = new byte [ 3 ]  ;          int num Binary Bytes = 0 ;          for  ( int i = 0 ;  i < 3 ;  i++ )  {             int b = in . read (  )  ;              //  If end of stream, b is -1 .              if  ( b >= 0 )  {                 b3 [ i ]  =  ( byte )  b ;                  num Binary Bytes++ ;              } else {                 // out of for loop                 break ;              }         // end else: end of stream         }         if  ( num Binary Bytes > 0 )  {             encode3to4 ( b3, 0, num Binary Bytes, buffer, 0, options )  ;              position = 0 ;              num Sig Bytes = 4 ;          } else // end if: got data         {             //  Must be end of stream             return -1 ;          }     // end else     } else // end if: encoding     //  Else decoding     {         byte [  ]  b4 = new byte [ 4 ]  ;          int i = 0 ;          for  ( i = 0 ;  i < 4 ;  i++ )  {             //  Read four ""meaningful"" bytes:             int b = 0 ;              do {                 b = in . read (  )  ;              } while  ( b >= 0 && decodabet [ b & 0x7f ]  <= WHITE_SPACE_ENC )  ;              if  ( b < 0 )  {                 //  Reads a -1 if end of stream                 break ;              }             // end if: end of stream             b4 [ i ]  =  ( byte )  b ;          }         if  ( i == 4 )  {             num Sig Bytes = decode4to3 ( b4, 0, buffer, 0, options )  ;              position = 0 ;          } else // end if: got four characters         if  ( i == 0 )  {             return -1 ;          } else // end else if: also padded correctly         {             //  Must have broken out from above .              throw new java . io . IO Exception ( "" Improperly padded  Base64 input . "" )  ;          }     // end      } // end else: decode } //  Got data? if  ( position >= 0 )  {     //  End of relevant data?     if  ( /*!encode &&*/     position >= num Sig Bytes )  {         return -1 ;      }     if  ( encode && break Lines && line Length >= MAX_LINE_LENGTH )  {         line Length = 0 ;          return '\n' ;      } else // end if     {         //  This isn't important when decoding         line Length++ ;          // but throwing an extra ""if"" seems         // just as wasteful .          int b = buffer [ position++ ]  ;          if  ( position >= buffer Length )  {             position = -1 ;          }         //  This is how you ""cast"" a byte that's         return b & 0x FF ;      // intended to be unsigned .      } // end else } else // end if: position >= 0 //  Else error {     throw new java . io . IO Exception ( "" Error in  Base64 code reading stream . "" )  ;  }// end else}"
965,public void set Display Values ( boolean display ) { m Display Values = display ; }
966,public  List< Android Library> get All Android Librarys (  ) { if  ( null == all Android Librarys )  {     all Android Librarys = new  Array List<> (  )  ;      all Android Librarys . add All ( get Main Bundle (  )  . get Android Libraries (  )  )  ;      for  (  Awb Bundle awb Bundle : get Awb Bundles (  )  )  {         all Android Librarys . add ( awb Bundle . get Android Library (  )  )  ;          all Android Librarys . add All ( awb Bundle . get Android Libraries (  )  )  ;      } } return all Android Librarys ; }
967,public static X509 Certificate [  ]  get Java Trusted C As (  ) { return java Trusted C As . get (  )  ; }
968,public com . facebook . buck . remoteexecution . proto .  Manifold Bucket Or Builder get Manifold Bucket Or Builder (  ) { if  ( manifold Bucket Builder_ != null )  {     return manifold Bucket Builder_ . get Message Or Builder (  )  ;  } else {     return manifold Bucket_ == null ? com . facebook . buck . remoteexecution . proto .  Manifold Bucket . get Default Instance (  )  : manifold Bucket_ ;  }}
969,public void download Initial Remote Changes (  Realm Configuration config ) {//  Do nothing}
970,public  String Builder append Code Point ( int code Point ) { append0 (  Character . to Chars ( code Point )  )  ;  return this ; }
971,public  String get Content Disposition (  ) { return m Content Disposition . get Value (  )  ; }
972,"public com . anychart . core . gantt .  Time Line Header stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
973,"public com . anychart . core . cartesian . series .  Width Based error (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . error ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
974,"public static void install Tinker (  Application Like app Like ) { if  ( is Installed )  {      Tinker Log . w ( TAG, ""install tinker, but has installed, ignore"" )  ;      return ;  } //or you can just use  Default Load Reporter  Load Reporter load Reporter = new  Sample Load Reporter ( app Like . get Application (  )  )  ;  //or you can just use  Default Patch Reporter  Patch Reporter patch Reporter = new  Sample Patch Reporter ( app Like . get Application (  )  )  ;  //or you can just use  Default Patch Listener  Patch Listener patch Listener = new  Sample Patch Listener ( app Like . get Application (  )  )  ;  //you can set your own upgrade patch if you need  Abstract Patch upgrade Patch Processor = new  Upgrade Patch (  )  ;   Tinker Installer . install ( app Like, load Reporter, patch Reporter, patch Listener,  Sample Result Service . class, upgrade Patch Processor )  ;  is Installed = true ; }"
975,public  String get Script Text (  Charset [  ]  charset Guess ) { return super . get Script Text ( charset Guess )  ; }
976,"public void put (  String key, byte [  ]  value ) {  File file = m Cache . new File ( key )  ;   File Output Stream out = null ;  try {     out = new  File Output Stream ( file )  ;      out . write ( value )  ;  } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  } finally {     if  ( out != null )  {         try {             out . flush (  )  ;              out . close (  )  ;          } catch  ( IO Exception e )  {             e . print Stack Trace (  )  ;          }     }     m Cache . put ( file )  ;  }}"
977,"private boolean is Circular No Side Effect ( int reg V,  Bit Set set ) { if  (  ( set != null )  && set . get ( reg V )  )  {     return true ;  } for  (  Ssa Insn use : use List [ reg V ]  )  {     if  ( has Side Effect ( use )  )  {         return false ;      } } if  ( set == null )  {     set = new  Bit Set ( reg Count )  ;  } //  This register is only used in operations that have no side effect .  set . set ( reg V )  ;  for  (  Ssa Insn use : use List [ reg V ]  )  {      Register Spec result = use . get Result (  )  ;      if  ( result == null || !is Circular No Side Effect ( result . get Reg (  ) , set )  )  {         return false ;      } } return true ; }"
978,"public com . anychart . charts .  Circular Gauge top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
979,"public com . anychart . core . annotations .  Fibonacci Retracement bounds (  String x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
980,"public  Build Rule require Build Rule (  Action Graph Builder graph Builder,  Flavor .  .  .  flavors ) { return graph Builder . require Rule ( get Build Target (  )  . with Appended Flavors ( flavors )  )  ; }"
981,"public com . anychart . charts .  Tree Map stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
982,"public  Parameterized Type Name of (  Type Name value Type ) { return  Parameterized Type Name . get (  Class Name . get ( clazz ) , value Type )  ; }"
983,"public static boolean confirm Notifications (  Context context,  String item Id ) { final  Set< String> notifications = manual Confirmations . get ( item Id )  ;  if  ( notifications != null )  {     confirm Notifications ( context, notifications . to Array ( new  String [  ]  {} )  )  ;      return true ;  } else {     return false ;  }}"
984,"public  Metadata Container create Container ( final  Container Type type, final long pos, final  Big Integer chunk Size ) {  Metadata Container result ;  if  ( type ==  Container Type . CONTENT_DESCRIPTION )  {     result = new  Content Description ( pos, chunk Size )  ;  } else if  ( type ==  Container Type . CONTENT_BRANDING )  {     result = new  Content Branding ( pos, chunk Size )  ;  } else {     result = new  Metadata Container ( type, pos, chunk Size )  ;  } return result ; }"
985,"private void bind Target ( final  Object target, final  Context context ) { init Listeners ( target )  ;  init Service Handlers ( target, context )  ; }"
986,"public com . anychart . core .  No Data Settings no Data (  ) { return new com . anychart . core .  No Data Settings ( js Base + "" . no Data (  ) "" )  ; }"
987,"public void falling Stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . falling Stroke (  )  ; "" )  ; }"
988,"private  Optional< Path> get Output Path For Jar Genrule (  Build Target build Target,  Project Filesystem filesystem ) { //  Note: `get Short Name And Flavor Postfix` comes from the implementation of the ""%s"" formatter in // `get Gen Path`, and  Jar Genrule names its jarfile after the name of the target .   Jar Genrule // doesn't have flavors, so this is roughly equivalent to `get Short Name`, but it's more correct // in that it's what `get Gen Path` does .   String jar Name = build Target . get Short Name And Flavor Postfix (  )  + "" . jar"" ;  return  Optional . of (  Build Target Paths . get Gen Path ( filesystem, build Target, ""%s"" )  . resolve ( jar Name )  )  ; }"
989,public  String get File Id (  ) { return file Id ; }
990,public  Test Many Types View Model_ int Value With Annotation ( @ String Res int int Value With Annotation ) { on Mutation (  )  ;  this . int Value With Annotation_ Int = int Value With Annotation ;  return this ; }
991,"public void test Genrules Default To Not Remote Executable (  ) {  Target Node<?> genrule Node =  Genrule Builder . new Genrule Builder (  Build Target Factory . new Instance ( ""//:rule"" )  )  . set Out ( ""out"" )  . set Bash ( ""echo something > out"" )  . build (  )  ;   Target Graph target Graph =  Target Graph Factory . new Instance ( genrule Node )  ;   Action Graph Builder graph Builder = new  Test Action Graph Builder ( target Graph )  ;   Genrule genrule =  (  Genrule )  graph Builder . require Rule ( genrule Node . get Build Target (  )  )  ;  assert False ( genrule . get Buildable (  )  . should Execute Remotely (  )  )  ; }"
992,public boolean is Display Bounding Points (  ) { return m Display Bounding Points ; }
993,"private static  Step get Report Command (  Immutable Set< Java Library> rules Under Test,  Default Java Package Finder default Java Package Finder,  Tool java Runtime Launcher,  Project Filesystem filesystem,  Source Path Rule Finder rule Finder,  Path output Directory,  Set< Coverage Report Format> formats,  String title, boolean use Intermediate Classes Dir,  Optional< String> coverage Includes,  Optional< String> coverage Excludes ) {  Immutable Set .  Builder< String> src Directories =  Immutable Set . builder (  )  ;   Immutable Set .  Builder< Path> paths To Jars =  Immutable Set . builder (  )  ;  //  Add all source directories of java libraries that we are testing to -sourcepath .  for  (  Java Library rule : rules Under Test )  {      Immutable Set< String> source Folder Path = get Path To Source Folders ( rule, rule Finder, default Java Package Finder )  ;      if  ( !source Folder Path . is Empty (  )  )  {         src Directories . add All ( source Folder Path )  ;      }      Path classes Item = null ;      if  ( use Intermediate Classes Dir )  {         classes Item =  Compiler Output Paths . get Classes Dir ( rule . get Build Target (  ) , filesystem )  ;      }     // compilation run, then we'll need to unzip the output jar to get access to the classes     if  ( classes Item == null || !filesystem . is Directory ( classes Item )  )  {          Source Path path = rule . get Source Path To Output (  )  ;          if  ( path != null )  {             classes Item = rule Finder . get Source Path Resolver (  )  . get Relative Path ( path )  ;          }     }     if  ( classes Item == null )  {         continue ;      }     paths To Jars . add ( classes Item )  ;  } return new  Generate Code Coverage Report Step ( java Runtime Launcher . get Command Prefix ( rule Finder . get Source Path Resolver (  )  ) , filesystem, src Directories . build (  ) , paths To Jars . build (  ) , output Directory, formats, title, coverage Includes, coverage Excludes )  ; }"
994,"public com . anychart . core . annotations .  Infinite Line x Scale ( com . anychart . scales .  Stock Scatter Date Time settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
995,protected static  File resolve Grandparent File (  File grandchild ) { if  ( grandchild != null )  {      File parent = grandchild . get Parent File (  )  ;      if  ( parent != null )          return parent . get Parent File (  )  ;  } return null ; }
996,"Callable< Test Results> interpret Test Results (  Execution Context execution Context,  Source Path Resolver Adapter path Resolver, boolean is Using Test Selectors ) { throw should Not Be Called (  )  ; }"
997,"private void test Connect Via Http Proxy To Https (  Proxy Config proxy Config )  throws  Exception{  Recording Hostname Verifier hostname Verifier = new  Recording Hostname Verifier (  )  ;  server . use Https ( handshake Certificates . ssl Socket Factory (  ) , true )  ;  server . enqueue ( new  Mock Response (  )  . set Socket Policy ( UPGRADE_TO_SSL_AT_END )  . clear Headers (  )  )  ;  server . enqueue ( new  Mock Response (  )  . set Body ( ""this response comes via a secure proxy"" )  )  ;   Http Url url =  Http Url . parse ( ""https://android . com/foo"" )  ;  client = client . new Builder (  )  . ssl Socket Factory ( handshake Certificates . ssl Socket Factory (  ) , handshake Certificates . trust Manager (  )  )  . hostname Verifier ( hostname Verifier )  . build (  )  ;   Call call = proxy Config . connect ( server, client, url )  ;  assert Content ( ""this response comes via a secure proxy"", call . execute (  )  )  ;   Recorded Request connect = server . take Request (  )  ;  assert That ( connect . get Request Line (  )  )  . overriding Error Message ( "" Connect line failure on proxy"" )  . is Equal To ( ""CONNECT android . com:443 HTTP/1 . 1"" )  ;  assert That ( connect . get Header ( "" Host"" )  )  . is Equal To ( ""android . com:443"" )  ;   Recorded Request get = server . take Request (  )  ;  assert That ( get . get Request Line (  )  )  . is Equal To ( ""GET /foo HTTP/1 . 1"" )  ;  assert That ( get . get Header ( "" Host"" )  )  . is Equal To ( ""android . com"" )  ;  assert That ( hostname Verifier . calls )  . is Equal To ( as List ( ""verify android . com"" )  )  ; }"
998,public float get Last Know Text Size (  ) { return text Size ; }
999,public  Units Manager get Units Manager (  ) { return m Units Manager ; }
1000,public final boolean is Encrypted (  ) { return get Flag ( C . BUFFER_FLAG_ENCRYPTED )  ; }
1001,public void set Cache Location ( int cache Location ) { this . cache Location = cache Location ;  if  ( cache Location ==  Cache Location . EXTERNAL_STORAGE_PUBLIC_DIR )  {     check If Permissions Available (  )  ;  }}
1002,"public com . anychart . core . ui .  Paginator margin (  String space Or Top Or Top And Bottom,  String right Or Right And Left,  Number bottom,  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( space Or Top Or Top And Bottom ) , wrap Quotes ( right Or Right And Left ) , bottom, left )  )  ;  return this ; }"
1003,"public com . anychart . charts .  Tag Cloud legend (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . legend ( %s )  ; "", settings )  )  ;  return this ; }"
1004,"public void insert Range ( int index, int count ) { if  ( index > size )      throw new  Index Out Of Bounds Exception ( ""index can't be > size: "" + index + "" > "" + size )  ;  int size Needed = size + count ;  if  ( size Needed > items . length )      items = resize (  Math . max (  Math . max ( 8, size Needed ) ,  ( int )   ( size * 1 . 75f )  )  )  ;   System . arraycopy ( items, index, items, index + count, size - index )  ;  size = size Needed ; }"
1005,"public void from Raw ( int [  ]  ints, int p ) { w1 = ints [ p ]  ;  w2 = ints [ p + 1 ]  ;  w3 = ints [ p + 2 ]  ;  w4 = ints [ p + 3 ]  ;  w5 = ints [ p + 4 ]  ; }"
1006,"public com . anychart . charts .  Pert interactivity ( com . anychart . enums .  Hover Mode settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . interactivity ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
1007,public  String get Generic Signature (  ) {  Signature Attribute sa =  (  Signature Attribute )  method Info . get Attribute (  Signature Attribute . tag )  ;  return sa == null ? null : sa . get Signature (  )  ; }
1008,"public void record Read Configuration Option (  String section,  String key, @ Nullable  String value ) { read Config Options . compute If Absent ( section,  s -> new  Hash Map<> (  )  )  . put If Absent ( key,  Optional . of Nullable ( value )  )  ; }"
1009,"protected void setup Object List (  ) { object List . add ( new  Number Hash Map (  Data Types . OBJ_TEXT_ENCODING, this,  Text Encoding . TEXT_ENCODING_FIELD_SIZE )  )  ;  object List . add ( new  Text Encoded String Null Terminated (  Data Types . OBJ_DESCRIPTION, this )  )  ;  object List . add ( new  Text Encoded String Size Terminated (  Data Types . OBJ_TEXT, this )  )  ; }"
1010,protected void setup Object List (  ) {}
1011,public void on Destroy (  ) {}
1012,"public void get Stat (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Stat ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
1013,"public static T parse Object (  String json,  Type type,  Feature .  .  .  features ) { return  ( T )  parse Object ( json, type,  Parser Config . global, DEFAULT_PARSER_FEATURE, features )  ; }"
1014,"public void write To Parcel (  Parcel dest, int flags ) { final int N = m List . size (  )  ;  final int call Flags = flags ;  dest . write Int ( N )  ;  if  ( DEBUG )       Log . d ( TAG, "" Writing "" + N + "" items"" )  ;  if  ( N > 0 )  {     final  Class<?> list Element Class = m List . get ( 0 )  . get Class (  )  ;      // dest . write Parcelable Creator ( m List . get ( 0 )  )  ;      int i = 0 ;      while  ( i < N && dest . data Size (  )  < MAX_FIRST_IPC_SIZE )  {         dest . write Int ( 1 )  ;          final T parcelable = m List . get ( i )  ;          verify Same Type ( list Element Class, parcelable . get Class (  )  )  ;          // parcelable . write To Parcel ( dest, call Flags )  ;          dest . write Parcelable ( parcelable, call Flags )  ;          if  ( DEBUG )               Log . d ( TAG, "" Wrote inline #"" + i + "": "" + m List . get ( i )  )  ;          i++ ;      }     if  ( i < N )  {         dest . write Int ( 0 )  ;           Binder retriever = new  Binder (  )  {             @ Override             protected boolean on Transact ( int code,  Parcel data,  Parcel reply, int flags )  throws  Remote Exception {                 if  ( code != FIRST_CALL_TRANSACTION )  {                     return super . on Transact ( code, data, reply, flags )  ;                  }                 int i = data . read Int (  )  ;                  if  ( DEBUG )                       Log . d ( TAG, "" Writing more @"" + i + "" of "" + N )  ;                  while  ( i < N && reply . data Size (  )  < MAX_IPC_SIZE )  {                     reply . write Int ( 1 )  ;                      final T parcelable = m List . get ( i )  ;                      verify Same Type ( list Element Class, parcelable . get Class (  )  )  ;                      // parcelable . write To Parcel ( reply, call Flags )  ;                      reply . write Parcelable ( parcelable, call Flags )  ;                      if  ( DEBUG )                           Log . d ( TAG, "" Wrote extra #"" + i + "": "" + m List . get ( i )  )  ;                      i++ ;                  }                 if  ( i < N )  {                     if  ( DEBUG )                           Log . d ( TAG, "" Breaking @"" + i + "" of "" + N )  ;                      reply . write Int ( 0 )  ;                  }                 return true ;              }         } ;          if  ( DEBUG )               Log . d ( TAG, "" Breaking @"" + i + "" of "" + N + "": retriever="" + retriever )  ;          dest . write Strong Binder ( retriever )  ;      } }}"
1015,public T4 get Value4 (  ) { return value4 ; }
1016,public byte [  ]  next Bytes ( int cnt ) { final byte [  ]  r = new byte [ cnt ]  ;  for  ( int i = 0 ;  i < cnt ;  i++ )  r [ i ]  =  ( byte )  next Int (  )  ;  return r ; }
1017,public boolean is Top Domain Under Registry Suffix (  ) { return registry Suffix Index == 1 ; }
1018,public void remove Position Update Listener ( @ Non Null  Position Update Listener listener ) { listeners . remove ( listener )  ;  if  ( is Ready (  )  )  {     get Animator Non Null (  )  . remove Position Update Listener ( listener )  ;  }}
1019,"public static boolean is Raw Type Publicly Accessible (  Type Mirror type ) { return type . accept ( RAW_TYPE_ACCESSIBILITY_VISITOR,  Optional . empty (  )  )  ; }"
1020,public  Const Pool get Const Pool (  ) { return const Pool ; }
1021,"private  Attribute annotation Default (  Direct Class File cf, int offset, int length,  Parse Observer observer ) { if  ( length < 2 )  {     throw Severely Truncated (  )  ;  }  Annotation Parser ap = new  Annotation Parser ( cf, offset, length, observer )  ;   Constant cst = ap . parse Value Attribute (  )  ;  return new  Att Annotation Default ( cst, length )  ; }"
1022,public  Drawable get State Drawable ( int index ) { return m State List State . get Children (  )  [ index ]  ; }
1023,public  Throwable get Throwable (  ) { return throwable ; }
1024,public void dispatch (  ) { if  ( m Opt Out )      return ;  m Dispatcher . force Dispatch (  )  ; }
1025,"public static  File add External Dir (  String path ) {  Path external File Dir ;  if  ( path == null )  {     external File Dir = null ;  } else {     try {         if  ( tmp External Files Dir Base == null )  {             tmp External Files Dir Base =  Runtime Environment . get Temp Directory (  )  . create ( ""external-files-base"" )  ;          }         external File Dir = tmp External Files Dir Base . resolve ( path )  ;           Files . create Directories ( external File Dir )  ;          external Dirs . add ( external File Dir . to File (  )  )  ;      } catch  ( IO Exception e )  {         throw new  Runtime Exception ( "" Could not create external files dir"", e )  ;      } } if  (  Runtime Environment . get Api Level (  )  >= JELLY_BEAN_MR1 &&  Runtime Environment . get Api Level (  )  < KITKAT )  {     if  ( external Dirs . size (  )  == 1 && external File Dir != null )  {          Environment .  User Environment user Environment =  Reflection Helpers . get Static Field (  Environment . class, ""s Current User"" )  ;          reflector ( _ User Environment_ . class, user Environment )  . set External Storage Android Data ( external File Dir . to File (  )  )  ;      } } else if  (  Runtime Environment . get Api Level (  )  >= KITKAT &&  Runtime Environment . get Api Level (  )  < M )  {      Environment .  User Environment user Environment =  Reflection Helpers . get Static Field (  Environment . class, ""s Current User"" )  ;      reflector ( _ User Environment_ . class, user Environment )  . set External Dirs For App ( external Dirs . to Array ( new  File [ 0 ]  )  )  ;  } if  ( external File Dir == null )  {     return null ;  } return external File Dir . to File (  )  ; }"
1026,public int get Model Identifier (  ) { return m Model Identifier ; }
1027,"void for Each Fwd Dep (  Iterable<NODE_TYPE> targets,  Consumer<NODE_TYPE> action )  throws  Query Exception{ get Fwd Deps ( targets )  . for Each ( action )  ; }"
1028,public boolean is Ancestor Of (  String that Path ) { return that Path . starts With ( get Path With Slash (  )  )  ; }
1029,"public com . anychart . core . series .  Rendering Settings rendering (  ) { return new com . anychart . core . series .  Rendering Settings ( js Base + "" . rendering (  ) "" )  ; }"
1030,"public void set Left Imag Src ( int id ) { iv Back . set Compound Drawables ( get Resources (  )  . get Drawable ( id ) , null, null, null )  ; }"
1031,"public com . anychart . charts .  Venn padding (  Number value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
1032,"public static  Class<T> wrap (  Class<T> type ) { check Not Null ( type )  ;  // cast is safe: long . class and  Long . class are both of type  Class< Long> @ Suppress Warnings ( ""unchecked"" )   Class<T> wrapped =  (  Class<T> )  PRIMITIVE_TO_WRAPPER_TYPE . get ( type )  ;  return  ( wrapped == null )  ? type : wrapped ; }"
1033,"private int fix Layout End Gap Expose ( int end Offset,  Recycler View .  Recycler recycler,  Recycler View .  State state, boolean can Offset Children ) { int gap = m Orientation Helper . get End After Padding (  )  - end Offset ;  int fix Offset = 0 ;  if  ( gap > 0 )  {     fix Offset = -scroll Internal By ( -gap, recycler, state )  ;  } else {     // nothing to fix     return 0 ;  } // move offset according to scroll amount end Offset += fix Offset ;  if  ( can Offset Children )  {     // re-calculate gap, see if we could fix it     gap = m Orientation Helper . get End After Padding (  )  - end Offset ;      if  ( gap > 0 )  {         m Orientation Helper . offset Children ( gap )  ;          return gap + fix Offset ;      } } return fix Offset ; }"
1034,"public static T derivative ( final T out, final int i, final float u, final T [  ]  points, final boolean continuous, final T tmp ) { /*		 * catmull' ( u )  = 0 . 5 * (  ( -p0 + p2 )  + 2 *  ( 2*p0 - 5*p1 + 4*p2 - p3 )  * u + 3 *  ( -p0 + 3*p1 - 3*p2 + p3 )  * u * u ) 		 */ final int n = points . length ;  final float u2 = u * u ;  // final float u3 = u2 * u ;  out . set ( points [ i ]  )  . scl ( -u * 5 + u2 * 4 . 5f )  ;  if  ( continuous || i > 0 )      out . add ( tmp . set ( points [  ( n + i - 1 )  % n ]  )  . scl ( -0 . 5f + u * 2 - u2 * 1 . 5f )  )  ;  if  ( continuous || i <  ( n - 1 )  )      out . add ( tmp . set ( points [  ( i + 1 )  % n ]  )  . scl ( 0 . 5f + u * 4 - u2 * 4 . 5f )  )  ;  if  ( continuous || i <  ( n - 2 )  )      out . add ( tmp . set ( points [  ( i + 2 )  % n ]  )  . scl ( -u + u2 * 1 . 5f )  )  ;  return out ; }"
1035,"public void set Actor ( @ Null T actor ) { if  ( actor == this )      throw new  Illegal Argument Exception ( ""actor cannot be the  Container . "" )  ;  if  ( actor == this . actor )      return ;  if  ( this . actor != null )      super . remove Actor ( this . actor )  ;  this . actor = actor ;  if  ( actor != null )      super . add Actor ( actor )  ; }"
1036,"private void process Block ( int block Index ) {  Register Spec Set primary State = result Info . mutable Copy Of Starts ( block Index )  ;   Ssa Basic Block block = blocks . get ( block Index )  ;   List< Ssa Insn> insns = block . get Insns (  )  ;  int insn Sz = insns . size (  )  ;  //  The exit block has no insns and no successors if  ( block Index == method . get Exit Block Index (  )  )  {     return ;  } /*      *  We may have to treat the last instruction specially:  If it      * can  ( but doesn't always )  throw, and the exception can be      * caught within the same method, then we need to use the      * state *before* executing it to be what is merged into      * exception targets .       */  Ssa Insn last Insn = insns . get ( insn Sz - 1 )  ;  boolean has Exception Handlers = last Insn . get Original Rop Insn (  )  . get Catches (  )  . size (  )  != 0 ;  boolean can Throw During Last Insn = has Exception Handlers &&  ( last Insn . get Result (  )  != null )  ;  int freeze Secondary State At = insn Sz - 1 ;   Register Spec Set secondary State = primary State ;  for  ( int i = 0 ;  i < insn Sz ;  i++ )  {     if  ( can Throw During Last Insn &&  ( i == freeze Secondary State At )  )  {         //  Until this point, primary State == secondary State .          primary State . set Immutable (  )  ;          primary State = primary State . mutable Copy (  )  ;      }      Ssa Insn insn = insns . get ( i )  ;       Register Spec result ;      result = insn . get Local Assignment (  )  ;      if  ( result == null )  {         //  We may be nuking an existing local         result = insn . get Result (  )  ;          if  ( result != null && primary State . get ( result . get Reg (  )  )  != null )  {             primary State . remove ( primary State . get ( result . get Reg (  )  )  )  ;          }         continue ;      }     result = result . with Simple Type (  )  ;       Register Spec already = primary State . get ( result )  ;      /*          *  The equals (  )  check ensures we only add new info if          * the instruction causes a change to the set of          * active variables .           */     if  ( !result . equals ( already )  )  {         /*              *  If this insn represents a local moving from one register              * to another, remove the association between the old register              * and the local .               */          Register Spec previous = primary State . local Item To Spec ( result . get Local Item (  )  )  ;          if  ( previous != null &&  ( previous . get Reg (  )  != result . get Reg (  )  )  )  {             primary State . remove ( previous )  ;          }         result Info . add Assignment ( insn, result )  ;          primary State . put ( result )  ;      } } primary State . set Immutable (  )  ;  /*      *  Merge this state into the start state for each successor,      * and update the work set where required  ( that is, in cases      * where the start state for a block changes )  .       */  Int List successors = block . get Successor List (  )  ;  int succ Sz = successors . size (  )  ;  int primary Successor = block . get Primary Successor Index (  )  ;  for  ( int i = 0 ;  i < succ Sz ;  i++ )  {     int succ = successors . get ( i )  ;       Register Spec Set state =  ( succ == primary Successor )  ? primary State : secondary State ;      if  ( result Info . merge Starts ( succ, state )  )  {         work Set . set ( succ )  ;      } }}"
1037,public  Builder set Response Type Values ( @ Nullable  String .  .  .  response Type Values ) { return set Response Type Values (  Arrays . as List ( response Type Values )  )  ; }
1038,"public com . anychart . graphics . vector .  Pattern Fill hatch Fill (  ) { return new com . anychart . graphics . vector .  Pattern Fill ( js Base + "" . hatch Fill (  ) "" )  ; }"
1039,"public void notify Group Item Changed ( int group Position,  Object payload ) { m Wrapper Adapter . notify Group Item Changed ( group Position, payload )  ; }"
1040,"void run Migrations ( int from Version, int to Version ) { if  ( from Version < 1 && to Version >= 1 )  {     create V1 Mutation Queue (  )  ;      create V1 Target Cache (  )  ;      create V1 Remote Document Cache (  )  ;  } if  ( from Version < 3 && to Version >= 3 )  {     // corrupt data .      if  ( from Version != 0 )  {         drop V1 Target Cache (  )  ;          create V1 Target Cache (  )  ;      } } if  ( from Version < 4 && to Version >= 4 )  {     ensure Target Global (  )  ;      add Target Count (  )  ;  } if  ( from Version < 5 && to Version >= 5 )  {     add Sequence Number (  )  ;  } if  ( from Version < 6 && to Version >= 6 )  {     remove Acknowledged Mutations (  )  ;  } if  ( from Version < 7 && to Version >= 7 )  {     ensure Sequence Numbers (  )  ;  } if  ( from Version < 8 && to Version >= 8 )  {     create V8 Collection Parents Index (  )  ;  } if  ( from Version < 9 && to Version >= 9 )  {     if  ( !has Read Time (  )  )  {         add Read Time (  )  ;      } else {         //  Index-free queries rely on the fact that documents updated after a query's last limbo         // free snapshot version are persisted with their read-time .   If a customer upgrades to         // schema version 9, downgrades and then upgrades again, some queries may have a last limbo         // free snapshot version despite the fact that not all updated document have an associated         // read time .          drop Last Limbo Free Snapshot Version (  )  ;      } } if  ( from Version == 9 && to Version >= 10 )  {     //  Firestore v21 . 10 contained a regression that led us to disable an assert that is required     // to ensure data integrity .   While the schema did not change between version 9 and 10, we use     // the schema bump to version 10 to clear any affected data .      drop Last Limbo Free Snapshot Version (  )  ;  } if  ( from Version < 11 && to Version >= 11 )  {     //  Schema version 11 changed the format of canonical I Ds in the target cache .      rewrite Canonical Ids (  )  ;  } if  ( from Version < 12 && to Version >= 12 )  {     create Bundle Cache (  )  ;  } if  ( from Version < INDEXING_SUPPORT_VERSION && to Version >= INDEXING_SUPPORT_VERSION )  {      Preconditions . check State (  Persistence . INDEXING_SUPPORT_ENABLED )  ;      create Local Documents Collection Index (  )  ;  }}"
1041,"public  Launched Process launch Process (  Process Executor Params params,  Process Listener listener )  throws IO Exception{ LOG . debug ( "" Launching process with params %s"", params )  ;   Listening Process Handler process Handler = new  Listening Process Handler ( listener, params )  ;  //  Unlike with  Java's  Process Builder, we don't need special param escaping for  Win32 platforms .   Nu Process Builder process Builder = new  Nu Process Builder ( process Handler, params . get Command (  )  )  ;  if  ( params . get Environment (  )  . is Present (  )  )  {     process Builder . environment (  )  . clear (  )  ;      process Builder . environment (  )  . put All ( params . get Environment (  )  . get (  )  )  ;  } if  ( params . get Directory (  )  . is Present (  )  )  {     process Builder . set Cwd ( params . get Directory (  )  . get (  )  )  ;  }  Nu Process process =  Bg Process Killer . start Process ( process Builder )  ;  if  ( process == null )  {     throw new IO Exception (  String . format ( "" Could not start process with params %s"", params )  )  ;  } LOG . debug ( "" Successfully launched process %s"", process )  ;  //  This should be set by on Pre Start (  )  .   Preconditions . check State ( process Handler . process != null )  ;  process Registry . register Process ( process Handler . process . nu Process, params,  Immutable Map . of (  )  )  ;  return process Handler . process ; }"
1042,"private void set Right Adapter (  ) {  Animation Adapter anim Card Array Adapter = new  Swing Right In Animation Adapter ( m Card Array Adapter )  ;  anim Card Array Adapter . set Abs List View ( m List View )  ;  if  ( m List View != null )  {     m List View . set External Adapter ( anim Card Array Adapter, m Card Array Adapter )  ;  }}"
1043,public  String get Quote (  ) { return this . quote ; }
1044,"public void add (  String [  ]  titles, double [  ]  values ) { add ( m Categories . size (  )  + """", titles, values )  ; }"
1045,"private static  Register Spec List explicitize (  Register Spec List orig ) { int word Count = word Count ( orig )  ;  int sz = orig . size (  )  ;  if  ( word Count == sz )  {     return orig ;  }  Register Spec List result = new  Register Spec List ( word Count )  ;  int word At = 0 ;  for  ( int i = 0 ;  i < sz ;  i++ )  {      Register Spec one = orig . get ( i )  ;      result . set ( word At, one )  ;      if  ( one . get Category (  )  == 2 )  {         result . set ( word At + 1,  Register Spec . make ( one . get Reg (  )  + 1,  Type . VOID )  )  ;          word At += 2 ;      } else {         word At++ ;      } } result . set Immutable (  )  ;  return result ; }"
1046,public  Byte Array get Bytes (  ) { return bytes ; }
1047,"public com . anychart . charts .  Gantt zoom To ( com . anychart . enums .  Interval unit,  Number count,  String anchor ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . zoom To ( %s, %s, %s )  ; "",  ( unit != null )  ? unit . get Js Base (  )  : null, count, wrap Quotes ( anchor )  )  )  ;  return this ; }"
1048,protected boolean is TV (  ) { final  Context context = m Context . get Application Context (  )  ;   Ui Mode Manager manager =  (  Ui Mode Manager )  context . get System Service (  Context . UI_MODE_SERVICE )  ;  return manager != null && manager . get Current Mode Type (  )  ==  Configuration . UI_MODE_TYPE_TELEVISION ; }
1049,"public com . anychart . core . gantt . elements .  Tasks Element stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1050,"public com . anychart . scales .  Scatter Ticks mode (  String mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . mode ( %s )  ; "", wrap Quotes ( mode )  )  )  ;  return this ; }"
1051,protected static void on Billing Checked ( boolean supported ) { billing Status = supported ?  Billing Status . SUPPORTED :  Billing Status . UNSUPPORTED ;  if  ( billing Status ==  Billing Status . UNSUPPORTED )  {     //  Save us the     // subscription     // check     subscription Status =  Billing Status . UNSUPPORTED ;  } for  ( I Billing Observer o : observers )  {     o . on Billing Checked ( supported )  ;  }}
1052,private static int buffer To Value ( byte [  ]  buffer ) { //when cast byte to int return  (  ( buffer [ 0 ]  & 0xff )  << 21 )  +  (  ( buffer [ 1 ]  & 0xff )  << 14 )  +  (  ( buffer [ 2 ]  & 0xff )  << 7 )  +  (  ( buffer [ 3 ]  )  & 0xff )  ; }
1053,"public void dispose (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . dispose (  )  ; "" )  ; }"
1054,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
1055,"private int convert Focus Direction To Layout Direction ( int focus Direction ) { switch ( focus Direction )  {     case  View . FOCUS_BACKWARD:         return  Render State . LAYOUT_START ;      case  View . FOCUS_FORWARD:         return  Render State . LAYOUT_END ;      case  View . FOCUS_UP:         return m Orientation == VERTICAL ?  Render State . LAYOUT_START :  Render State . INVALID_LAYOUT ;      case  View . FOCUS_DOWN:         return m Orientation == VERTICAL ?  Render State . LAYOUT_END :  Render State . INVALID_LAYOUT ;      case  View . FOCUS_LEFT:         return m Orientation == HORIZONTAL ?  Render State . LAYOUT_START :  Render State . INVALID_LAYOUT ;      case  View . FOCUS_RIGHT:         return m Orientation == HORIZONTAL ?  Render State . LAYOUT_END :  Render State . INVALID_LAYOUT ;      default:         if  ( DEBUG )  {              Log . d ( TAG, "" Unknown focus request:"" + focus Direction )  ;          }         return  Render State . INVALID_LAYOUT ;  }}"
1056,public  Builder set Id Bytes ( com . google . protobuf .  Byte String value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } check Byte String Is Utf8 ( value )  ;  id_ = value ;  on Changed (  )  ;  return this ; }
1057,"private void _set Drag Fix Background (  Recycler View .  View Holder holder, int position ) { if  ( position < m Drag Fix Count )  {     holder . item View . set Background Drawable ( m Drag Fix Drawable )  ;  }}"
1058,public  String get String Value (  )  throws IO Exception{ if  ( type == INDIRECT )  {     return dereference (  )  . get String Value (  )  ;  } else if  ( type == STRING || type == NAME || type == KEYWORD )  {     return  (  String )  value ;  } // wrong type return null ; }
1059,"public static  List< Type> decode (  String raw Input,  List< Type Reference< Type>> output Parameters ) { return decoder (  )  . decode Function Result ( raw Input, output Parameters )  ; }"
1060,"public void set Max Crop Result Size ( int max Crop Result Width, int max Crop Result Height ) { m Max Crop Result Width = max Crop Result Width ;  m Max Crop Result Height = max Crop Result Height ; }"
1061,"public com . anychart . core . polar . series .  Continuous Base enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
1062,public  Checkout Command set Name (  String name ) { check Callable (  )  ;  this . name = name ;  return this ; }
1063,public boolean is Fill Points (  ) { return m Fill Points ; }
1064,"public void update Data Set ( @ Nullable  List<T> items, boolean animate ) { //  Reset original list from filter m Original List = null ;  if  ( items == null )  {     items = new  Array List<> (  )  ;  } if  ( animate )  {     m Handler . remove Messages ( UPDATE )  ;      m Handler . send Message (  Message . obtain ( m Handler, UPDATE, items )  )  ;  } else {     //  Copy of the original list      List<T> new Items = new  Array List<> ( items )  ;      prepare Items For Update ( new Items )  ;      m Items = new Items ;      //  Execute instant reset on init     log . w ( ""update Data Set with notify Data Set Changed!"" )  ;      notify Data Set Changed (  )  ;      on Post Update (  )  ;  }}"
1065,public int get Inner Padding Top (  ) { return inner Padding Top ; }
1066,"void generate Constructor Switch ( int cons Index, int args Var, int cons Args Var,  Code Visitor cv ) {  Label default Label = new  Label (  )  ;   Label end Label = new  Label (  )  ;  int cases = super Constructors . length + constructors . length ;   Label [  ]  labels = new  Label [ cases ]  ;  for  ( int i = 0 ;  i < cases ;  i++ )  labels [ i ]  = new  Label (  )  ;  //  Generate code to call  Class Generator Util to get our switch index // and give us args .  .  .  // push super class name // use super Class Name var? cv . visit Ldc Insn ( super Class . get Name (  )  )  ;  //  Push the bsh static namespace field push Bsh Static ( fq Class Name, class Name, cv )  ;  // push args cv . visit Var Insn ( ALOAD, args Var )  ;  // push this constructor index number onto stack cv . visit Int Insn ( BIPUSH, cons Index )  ;  // invoke the  Class Generator Util get Constructors Args (  )  method cv . visit Method Insn ( INVOKESTATIC, ""bsh/ Class Generator Util"", ""get Constructor Args"", "" (  Ljava/lang/ String ;  Lbsh/ This ;  [  Ljava/lang/ Object ; I ) "" + "" Lbsh/ Class Generator Util$ Constructor Args ; "" )  ;  // store  Constructor Args in cons Args Var cv . visit Var Insn ( ASTORE, cons Args Var )  ;  //  Get the  Constructor Args selector field from  Constructor Args // push  Constructor Args cv . visit Var Insn ( ALOAD, cons Args Var )  ;  cv . visit Field Insn ( GETFIELD, ""bsh/ Class Generator Util$ Constructor Args"", ""selector"", ""I"" )  ;  // start switch cv . visit Table Switch Insn ( 0, /*min*/ cases - 1, /*max*/ default Label, labels )  ;  // generate switch body int index = 0 ;  for  ( int i = 0 ;  i < super Constructors . length ;  i++, index++ )  do Switch Branch ( index, super Class Name, get Type Descriptors ( super Constructors [ i ]  . get Parameter Types (  )  ) , end Label, labels, cons Args Var, cv )  ;  for  ( int i = 0 ;  i < constructors . length ;  i++, index++ )  do Switch Branch ( index, fq Class Name, constructors [ i ]  . get Param Type Descriptors (  ) , end Label, labels, cons Args Var, cv )  ;  // generate the default branch of switch cv . visit Label ( default Label )  ;  // default branch always invokes no args super // push 'this' cv . visit Var Insn ( ALOAD, 0 )  ;  cv . visit Method Insn ( INVOKESPECIAL, super Class Name, ""<init>"", "" (  ) V"" )  ;  // done with switch cv . visit Label ( end Label )  ; }"
1067,"public com . anychart . core . annotations .  Trend Channel bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
1068,boolean stop Self Result Hook ( int start Id ) { return stop Self Result ( start Id )  ; }
1069,"public com . anychart . ui .  Range Selector zoom Label Text (  String text ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . zoom Label Text ( %s )  ; "", wrap Quotes ( text )  )  )  ;  return this ; }"
1070,"public com . anychart . core . cartesian . series .  Continuous Range Base high Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . high Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1071,"public com . anychart . core . stock . scrollerseries .  Step Area fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
1072,public  Texture Data get Texture Data (  Cubemap Side side ) { return data [ side . index ]  ; }
1073,public  Builder set Indicator Width Size ( float width ) { this . line Indicator Width Size = width ;  return this ; }
1074,public int get Address (  ) { return address ; }
1075,"public T build (  )  throws IO Exception{ check ( handler != null, ""handler == null"" )  ;  check ( constructor Arg Types . length == constructor Arg Values . length, ""constructor Arg Values . length != constructor Arg Types . length"" )  ;   Class<? extends T> proxy Class = build Proxy Class (  )  ;   Constructor<? extends T> constructor ;  try {     constructor = proxy Class . get Constructor ( constructor Arg Types )  ;  } catch  (  No Such Method Exception e )  {     throw new  Illegal Argument Exception ( "" No constructor for "" + base Class . get Name (  )  + "" with parameter types "" +  Arrays . to String ( constructor Arg Types )  )  ;  } T result ;  try {     result = constructor . new Instance ( constructor Arg Values )  ;  } catch  (  Instantiation Exception e )  {     //  Should not be thrown, generated class is not abstract .      throw new  Assertion Error ( e )  ;  } catch  (  Illegal Access Exception e )  {     //  Should not be thrown, the generated constructor is accessible .      throw new  Assertion Error ( e )  ;  } catch  (  Invocation Target Exception e )  {     //  Thrown when the base class constructor throws an exception .      throw launder Cause ( e )  ;  } set Invocation Handler ( result, handler )  ;  return result ; }"
1076,public boolean is Valid (  ) { return assert GUID ( get GUID (  )  )  ; }
1077,"public void attach To (  Recycler View recycler ) { attach To ( recycler, false )  ; }"
1078,"protected  Codec Max Values get Codec Max Values (  Media Codec Info codec Info,  Format format,  Format [  ]  stream Formats ) { int max Width = format . width ;  int max Height = format . height ;  int max Input Size = get Max Input Size ( codec Info, format )  ;  if  ( stream Formats . length == 1 )  {     // being configured .      if  ( max Input Size !=  Format . NO_VALUE )  {         int codec Max Input Size = get Codec Max Input Size ( codec Info, format . sample Mime Type, format . width, format . height )  ;          if  ( codec Max Input Size !=  Format . NO_VALUE )  {             //  Scale up the initial video decoder maximum input size so playlist item transitions with             // small increases in maximum sample size don't require reinitialization .   This only makes             // a difference if the exact maximum sample sizes are known from the container .              int scaled Max Input Size =  ( int )   ( max Input Size * INITIAL_FORMAT_MAX_INPUT_SIZE_SCALE_FACTOR )  ;              //  Avoid exceeding the maximum expected for the codec .              max Input Size =  Math . min ( scaled Max Input Size, codec Max Input Size )  ;          }     }     return new  Codec Max Values ( max Width, max Height, max Input Size )  ;  } boolean have Unknown Dimensions = false ;  for  (  Format stream Format : stream Formats )  {     if  ( codec Info . is Seamless Adaptation Supported ( format, stream Format, /* is New Format Complete= */     false )  )  {         have Unknown Dimensions |=  ( stream Format . width ==  Format . NO_VALUE || stream Format . height ==  Format . NO_VALUE )  ;          max Width =  Math . max ( max Width, stream Format . width )  ;          max Height =  Math . max ( max Height, stream Format . height )  ;          max Input Size =  Math . max ( max Input Size, get Max Input Size ( codec Info, stream Format )  )  ;      } } if  ( have Unknown Dimensions )  {      Log . w ( TAG, "" Resolutions unknown .   Codec max resolution: "" + max Width + ""x"" + max Height )  ;       Point codec Max Size = get Codec Max Size ( codec Info, format )  ;      if  ( codec Max Size != null )  {         max Width =  Math . max ( max Width, codec Max Size . x )  ;          max Height =  Math . max ( max Height, codec Max Size . y )  ;          max Input Size =  Math . max ( max Input Size, get Codec Max Input Size ( codec Info, format . sample Mime Type, max Width, max Height )  )  ;           Log . w ( TAG, "" Codec max resolution adjusted to: "" + max Width + ""x"" + max Height )  ;      } } return new  Codec Max Values ( max Width, max Height, max Input Size )  ; }"
1079,public static boolean is Teredo Address (  Inet6 Address ip ) { byte [  ]  bytes = ip . get Address (  )  ;  return  ( bytes [ 0 ]  ==  ( byte )  0x20 )  &&  ( bytes [ 1 ]  ==  ( byte )  0x01 )  &&  ( bytes [ 2 ]  == 0 )  &&  ( bytes [ 3 ]  == 0 )  ; }
1080,"public com . anychart . core . axismarkers .  Gantt Text offset Y (  Number offset ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . offset Y ( %s )  ; "", offset )  )  ;  return this ; }"
1081,protected void set Pages (  Bitmap [  ]  pages ) { m Pages = pages ; }
1082,"public com . anychart . core . stock . series .  Base series (  ) { return new com . anychart . core . stock . series .  Base ( js Base + "" . series (  ) "" )  ; }"
1083,"public  Postcard with Double ( @ Nullable  String key, double value ) { m Bundle . put Double ( key, value )  ;  return this ; }"
1084,"protected void setup Buttons (  ) { if  ( m Card Header . is Button Overflow Visible (  )  )  {     visibility Button Helper ( VISIBLE, GONE, GONE )  ;      add Popup (  )  ;      if  ( m Popup Menu == null && m Card Header . get Custom Overflow Animation (  )  != null )  {         add Custom Overflow Animation (  )  ;      } } else {     if  ( m Card Header . is Button Expand Visible (  )  )  {         visibility Button Helper ( GONE, VISIBLE, GONE )  ;      } else {         if  ( m Card Header . is Other Button Visible (  )  && m Image Button Other != null )  {             visibility Button Helper ( GONE, GONE, VISIBLE )  ;              // Check if button is not null             if  ( m Image Button Other != null )  {                 if  ( m Card Header . get Other Button Drawable (  )  > 0 )  {                     m Helper Impl . set Button Background ( m Image Button Other, m Card Header . get Other Button Drawable (  )  )  ;                  }                 add Other Listener (  )  ;              }         } else {             visibility Button Helper ( GONE, GONE, GONE )  ;          }     } }}"
1085,"public final synchronized void remove Media Source ( int index ) { remove Public Media Sources ( index, index + 1, /* handler= */ null, /* on Completion Action= */ null )  ; }"
1086,"protected void end (  ) { if  ( !applying )      throw new  Gdx Runtime Exception ( "" You must call begin (  )  first"" )  ;  for  (  Entry< Node,  Transform> entry : transforms . entries (  )  )  {     entry . value . to Matrix4 ( entry . key . local Transform )  ;      transform Pool . free ( entry . value )  ;  } transforms . clear (  )  ;  target . calculate Transforms (  )  ;  applying = false ; }"
1087,public void set Transparent Framebuffer ( boolean transparent Framebuffer ) { this . transparent Framebuffer = transparent Framebuffer ; }
1088,"public void notify Exception (  Request< Type To Return, SOAP Fault Type> request, SOAP Exception exception ) { for  ( SOAP Observer< Type To Return, SOAP Fault Type> observer : observers )  {     observer . on Exception ( request, exception )  ;  }}"
1089,void post Read Cleanup (  ) { if  (  ( read Count . increment And Get (  )  & DRAIN_THRESHOLD )  == 0 )  {     run Cleanup (  )  ;  }}
1090,"public static void add Delayed Shutdown Hook (  Executor Service service,  Duration termination Timeout ) { add Delayed Shutdown Hook ( service, to Nanos Saturated ( termination Timeout ) ,  Time Unit . NANOSECONDS )  ; }"
1091,"public  Realm Async Task fetch Async (  Object Id id,  App .  Callback< Api Key> callback ) {  Util . check Looper Thread ( "" Asynchronous fetching an api key is only possible from looper threads . "" )  ;  return new  Request< Api Key> ( NETWORK_POOL_EXECUTOR, callback )  {     @ Override     public  Api Key run (  )  throws  App Exception {         return fetch ( id )  ;      } } . start (  )  ; }"
1092,"public com . anychart . core . polar . series .  Range Column point Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . point Width ( %s )  ; "", width )  )  ;  return this ; }"
1093,public  String get Style Id (  ) { return super . get Id (  )  ; }
1094,"public com . anychart . charts .  Pareto a11y (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . a11y ( %s )  ; "", settings )  )  ;  return this ; }"
1095,public  Register Spec find Matching Local (  Register Spec spec ) { int length = specs . length ;  for  ( int reg = 0 ;  reg < length ;  reg++ )  {      Register Spec s = specs [ reg ]  ;      if  ( s == null )  {         continue ;      }     if  ( spec . matches Variable ( s )  )  {         return s ;      } } return null ; }
1096,public  Builder cache On Disc ( boolean cache On Disk ) { return cache On Disk ( cache On Disk )  ; }
1097,"public static  Bitmap Resource obtain ( @ Nullable  Bitmap bitmap, @ Non Null  Bitmap Pool bitmap Pool ) { if  ( bitmap == null )  {     return null ;  } else {     return new  Bitmap Resource ( bitmap, bitmap Pool )  ;  }}"
1098,"private void add To Write Pipeline (  Mutation Batch mutation Batch ) { hard Assert ( can Add To Write Pipeline (  ) , ""add To Write Pipeline called when pipeline is full"" )  ;  write Pipeline . add ( mutation Batch )  ;  if  ( write Stream . is Open (  )  && write Stream . is Handshake Complete (  )  )  {     write Stream . write Mutations ( mutation Batch . get Mutations (  )  )  ;  }}"
1099,"public void read (  Byte Buffer byte Buffer )  throws  Invalid Tag Exception{ int size = get Size (  )  ;  // Allocate a buffer to the size of the  Frame  Body and read from file byte [  ]  buffer = new byte [ size ]  ;  byte Buffer . get ( buffer )  ;  // Offset into buffer, incremented by length of previous MP3 Object int offset = 0 ;  // Go through the  Object List of the  Frame reading the data into the //correct datatype .   Abstract Data Type object ;   Iterator< Abstract Data Type> iterator = object List . list Iterator (  )  ;  while  ( iterator . has Next (  )  )  {     // The read has extended further than the defined frame size     if  ( offset >  ( size - 1 )  )  {         throw new  Invalid Tag Exception ( "" Invalid size for  Frame  Body"" )  ;      }     // Get next  Object and load it with data from the  Buffer     object = iterator . next (  )  ;      object . read Byte Array ( buffer, offset )  ;      // Increment  Offset to start of next datatype .      offset += object . get Size (  )  ;  }}"
1100,"protected  Socket Connector new Connector (  Inet Address address, int port, long initial Delay, long retry Delay ) { return new  Default Socket Connector ( address, port, initial Delay, retry Delay )  ; }"
1101,"public  Task< Void> probe ( final  Cache Key key ) {  Preconditions . check Not Null ( key )  ;  try {     final  Object token =  Fresco Instrumenter . on Before Submit Work ( "" Buffered Disk Cache_probe"" )  ;      return  Task . call ( new  Callable< Void> (  )  {         @ Override         public  Void call (  )  throws  Exception {             final  Object current Token =  Fresco Instrumenter . on Begin Work ( token, null )  ;              try {                 m File Cache . probe ( key )  ;              } finally {                  Fresco Instrumenter . on End Work ( current Token )  ;              }             return null ;          }     }, m Write Executor )  ;  } catch  (  Exception exception )  {     F Log . w ( TAG, exception, "" Failed to schedule disk-cache probe for %s"", key . get Uri String (  )  )  ;      return  Task . for Error ( exception )  ;  }}"
1102,public int size (  ) { if  ( is Managed (  )  )  {     check Valid Realm (  )  ;      return os List Operator . size (  )  ;  } else {     return unmanaged List . size (  )  ;  }}
1103,"public com . anychart . charts .  Sankey node Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . node Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
1104,"public boolean cancel Event ( final  String key ) { synchronized  ( _cly )  {     L . i ( "" [  Events ]   Calling cancel Event:  [ "" + key + "" ] "" )  ;      return cancel Event Internal ( key )  ;  }}"
1105,"public com . anychart . charts .  Radar margin (  Number value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, value3, value4 )  )  ;  return this ; }"
1106,public void set Columns ( int columns ) { this . columns = columns ; }
1107,"public synchronized  File move Model To Destination Folder ( @ Non Null  Custom Model custom Model, @ Non Null  Parcel File Descriptor model File Descriptor )  throws  Firebase Ml Exception{  File model File Destination = get Model File Destination ( custom Model )  ;  // why would this ever be true?  File model Folder = model File Destination . get Parent File (  )  ;  if  ( !model Folder . exists (  )  )  {     model Folder . mkdirs (  )  ;  } // other apps .  try  (  File Input Stream fis = new  Auto Close Input Stream ( model File Descriptor )  ;       File Output Stream fos = new  File Output Stream ( model File Destination )  )  {     byte [  ]  buffer = new byte [ 4096 ]  ;      int read ;      while  (  ( read = fis . read ( buffer )  )  != -1 )  {         fos . write ( buffer, 0, read )  ;      }     //  Let's be extra sure it is all written before we return .      fos . get FD (  )  . sync (  )  ;  } catch  ( IO Exception e )  {     //  Failed to copy to destination - clean up .       Log . d ( TAG, "" Failed to copy downloaded model file to destination folder: "" + e . to String (  )  )  ;      model File Destination . delete (  )  ;      return null ;  } return model File Destination ; }"
1108,"public com . anychart . scales .  Geo y Minor Ticks (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Minor Ticks ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1109,public static  Predicate<T> equal To ( @ Nullable T target ) { return  ( target == null )  ?  Predicates . <T>is Null (  )  : new  Is Equal To Predicate<T> ( target )  ; }
1110,private void release (  ) { matrix Helper . un Register All (  )  ;  annotation Parser = null ;  measurer = null ;  provider = null ;  matrix Helper = null ;  provider = null ;  if  ( table Data != null )  {     table Data . clear (  )  ;      table Data = null ;  } x Axis = null ;  y Axis = null ; }
1111,"public void measure With At Most Layout Params (  ) { final  Component component = new  Inline Layout Spec (  )  {     @ Override     protected  Component on Create Layout (  Component Context c )  {         return  Simple Mount Spec Tester . create ( c )  . width Percent ( 50 )  . height Percent ( 10 )  . build (  )  ;      } } ;  m Litho View = new  Litho View ( get Application Context (  )  )  ;  m Litho View . set Component ( component )  ;  m Litho View . set Layout Params ( new  Recycler View Layout Manager Override Params (  Size Spec . make Size Spec ( 100,  Size Spec . AT_MOST ) ,  Size Spec . make Size Spec ( 200,  Size Spec . AT_MOST )  )  )  ;  m Litho View . measure ( make Measure Spec ( 0, UNSPECIFIED ) , make Measure Spec ( 0, UNSPECIFIED )  )  ;  m Litho View . layout ( 0, 0, m Litho View . get Measured Width (  ) , m Litho View . get Measured Height (  )  )  ;  //  View got measured .  assert That ( m Litho View . get Measured Width (  )  )  . is Equal To ( 50 )  ;  assert That ( m Litho View . get Measured Height (  )  )  . is Equal To ( 20 )  ;  //  Attaching will automatically mount since we already have a layout fitting our size .   Shadow View shadow = shadow Of ( m Litho View )  ;  shadow . call On Attached To Window (  )  ;  assert That ( get Internal Mount Items ( m Litho View )  )  . is Equal To ( 2 )  ; }"
1112,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings min Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", width )  )  ;  return this ; }"
1113,"public com . anychart . charts .  Radar select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
1114,"public static  List< String> read File2 List ( final  File file, final  String charset Name ) { return read File2 List ( file, 0, 0x7 FFFFFFF, charset Name )  ; }"
1115,"public void request Data (  Beacon Data Notifier notifier ) { beacon Data Factory . request Beacon Data ( this, notifier )  ; }"
1116,"public com . anychart . data .  Table Selectable select (  Number start Date,  Number end Date,  String interval Unit,  Number interval Count ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select ( %s, %s, %s, %s )  ; "", start Date, end Date, wrap Quotes ( interval Unit ) , interval Count )  )  ;  return this ; }"
1117,"public void read Byte Array ( byte [  ]  arr, int offset )  throws  Invalid Data Type Exception{ super . read Byte Array ( arr, offset )  ;  // Mismatch: Superclass uses  Long, but maps expect  Integer  Integer int Value =  (  (  Long )  value )  . int Value (  )  ;  if  ( !key To Value . contains Key ( int Value )  )  {     if  ( !has Empty Value )  {         throw new  Invalid Data Type Exception (  Error Message . MP3_REFERENCE_KEY_INVALID . get Msg ( identifier, int Value )  )  ;      } else if  ( identifier . equals (  Data Types . OBJ_PICTURE_TYPE )  )  {         logger . warning (  Error Message . MP3_PICTURE_TYPE_INVALID . get Msg ( value )  )  ;      } }}"
1118,"public static void set Cache Mqtt Broker Url (  String mqtt Base Url, boolean ever Connected ) { local Data Manager . set Mqtt Broker Url ( mqtt Base Url )  ;  local Data Manager . set Will Get New Node Mqtt Broker Url ( ever Connected )  ; }"
1119,"public com . anychart . core . stock . scrollerseries .  Spline Area allow Point Settings (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . allow Point Settings ( %s )  ; "", enabled )  )  ;  return this ; }"
1120,public void add Ldc (  String s ) { add Ldc ( const Pool . add String Info ( s )  )  ; }
1121,"public void stop Surface (  ) { if  ( is Stopped (  )  )  {     return ;  } //  Prevent more views from being created, or the hierarchy from being manipulated at all .   This // causes further operations to noop .  m Is Stopped = true ;  // and some accesses from  View classes in the UI thread? for  (  View State view State : m Tag To View State . values (  )  )  {     if  ( view State . m State Wrapper != null )  {         view State . m State Wrapper . destroy State (  )  ;          view State . m State Wrapper = null ;      } }  Runnable runnable = new  Runnable (  )  {     @ Override     public void run (  )  {         //  We must call `on Drop View Instance` on all remaining  Views         for  (  View State view State : m Tag To View State . values (  )  )  {             on View State Deleted ( view State )  ;          }         //  Evict all views from cache and memory         m Last Successful Query Time =  System . current Time Millis (  )  ;          m Tag Set For Stopped Surface = m Tag To View State . key Set (  )  ;          m Tag To View State = null ;          m JS Responder Handler = null ;          m Root View Manager = null ;          m Mounting Manager = null ;          m On View Attach Items . clear (  )  ;      } } ;  if  (  Ui Thread Util . is On Ui Thread (  )  )  {     runnable . run (  )  ;  } else {      Ui Thread Util . run On Ui Thread ( runnable )  ;  }}"
1122,"public com . anychart . charts .  Radar inner Radius (  Number radius ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . inner Radius ( %s )  ; "", radius )  )  ;  return this ; }"
1123,"public void insert Or Update (  Realm Model object ) { check If Valid And In Transaction (  )  ;  //noinspection  Constant Conditions if  ( object == null )  {     throw new  Illegal Argument Exception ( "" Null object cannot be inserted into  Realm . "" )  ;  }  Map< Realm Model,  Long> cache = new  Hash Map<> (  )  ;  configuration . get Schema Mediator (  )  . insert Or Update ( this, object, cache )  ; }"
1124,"public com . anychart . core . stock . scrollerseries .  Spline Area stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
1125,"public  Activity Result exec Start Activity (  Context who, I Binder context Thread, I Binder token,  Activity target,  Intent intent, int request Code ) { wrap Intent ( intent )  ;  ensure Inject Message Handler ( s Activity Thread )  ;  return  Reflect Accelerator . exec Start Activity ( m Base, who, context Thread, token, target, intent, request Code )  ; }"
1126,"public void bind ( @ Non Null T view, @ Non Null  List< Object> payloads ) { bind ( view )  ; }"
1127,"private void init_custom_card_expand_clicking_text (  ) { // Create a  Card  Custom Card2 card = new  Custom Card2 ( get Activity (  )  )  ;  card . set Title ( "" Click here to expand/collapse"" )  ;  // This provides a simple  ( and useless )  expand area  Card Expand expand = new  Card Expand ( get Activity (  )  )  ;  // Set inner title in  Expand  Area expand . set Title ( get String ( R . string . demo_expand_customtitle3 )  )  ;  card . add Card Expand ( expand )  ;  // Set card in the card View  Card View Native card View =  (  Card View Native )  get Activity (  )  . find View By Id ( R . id . carddemo_example_card_expand3 )  ;  card View . set Card ( card )  ; }"
1128,"private  File get (  Input Stream Provider input,  Context context )  throws IO Exception{ try {     return new  Engine ( input, get Image Cache File ( context,  Checker . SINGLE . ext Suffix ( input )  ) , focus Alpha )  . compress (  )  ;  } finally {     input . close (  )  ;  }}"
1129,"public void add Stub Methods (  Type Spec .  Builder class Builder ) {  Method Spec .  Builder method Builder =  Method Spec . method Builder ( ""on Transact"" )  . add Modifiers (  Modifier . PUBLIC )  . add Annotation (  Override . class )  . returns ( boolean . class )  . add Exception (  Class Name . get ( ""android . os"", "" Remote Exception"" )  )  . add Parameter ( int . class, ""code"" )  . add Parameter (  Class Name . get ( ""android . os"", "" Parcel"" ) , ""data"" )  . add Parameter (  Class Name . get ( ""android . os"", "" Parcel"" ) , ""reply"" )  . add Parameter ( int . class, ""flags"" )  ;  method Builder . begin Control Flow ( ""try"" )  ;  method Builder . begin Control Flow ( ""switch  ( map Transaction Code ( code )  ) "" )  ;  method Builder . begin Control Flow ( ""case INTERFACE_TRANSACTION:"" )  ;  method Builder . add Statement ( ""reply . write String ( DESCRIPTOR ) "" )  ;  method Builder . add Statement ( ""return true"" )  ;  method Builder . end Control Flow (  )  ;  process Remoter Elements ( class Builder, new  Element Visitor (  )  {     @ Override     public void visit Element (  Type Spec .  Builder class Builder,  Element member, int method Index,  Method Spec .  Builder method Builder )  {         add Stub Methods ( class Builder, member, method Index, method Builder )  ;      } }, method Builder )  ;  method Builder . begin Control Flow ( ""case TRANSACTION__get Stub ID:"" )  ;  method Builder . add Statement ( ""data . enforce Interface ( DESCRIPTOR ) "" )  ;  method Builder . add Statement ( ""reply . write No Exception (  ) "" )  ;  method Builder . add Statement ( ""reply . write Int ( service Impl . hash Code (  )  ) "" )  ;  method Builder . add Statement ( ""return true"" )  ;  method Builder . end Control Flow (  )  ;  method Builder . begin Control Flow ( ""case TRANSACTION__get Stub Process ID:"" )  ;  method Builder . add Statement ( ""data . enforce Interface ( DESCRIPTOR ) "" )  ;  method Builder . add Statement ( ""reply . write No Exception (  ) "" )  ;  method Builder . add Statement ( ""reply . write Int ( android . os .  Process . my Pid (  )  ) "" )  ;  method Builder . add Statement ( ""return true"" )  ;  method Builder . end Control Flow (  )  ;  //end switch method Builder . end Control Flow (  )  ;  //end of try method Builder . end Control Flow (  )  ;  //catch rethrow method Builder . begin Control Flow ( ""catch  ( $T re ) "",  Throwable . class )  ;  method Builder . begin Control Flow ( ""if  (  ( flags & FLAG_ONEWAY )  == 0 ) "" )  ;  method Builder . add Statement ( ""reply . set Data Position ( 0 ) "" )  ;  method Builder . add Statement ( ""reply . write Int ( REMOTER_EXCEPTION_CODE ) "" )  ;  method Builder . add Statement ( ""reply . write String ( re . get Message (  )  ) "" )  ;  method Builder . add Statement ( ""reply . write Serializable ( re ) "" )  ;  method Builder . add Statement ( ""return true"" )  ;  method Builder . end Control Flow (  )  ;  method Builder . begin Control Flow ( ""else"" )  ;  method Builder . add Statement ( ""$T . w ( service Impl . get Class (  )  . get Name (  ) , \"" Binder call failed . \"", re ) "",  Class Name . get ( ""android . util"", "" Log"" )  )  ;  method Builder . add Statement ( ""throw new  Runtime Exception ( re ) "" )  ;  method Builder . end Control Flow (  )  ;  method Builder . end Control Flow (  )  ;  method Builder . add Statement ( ""return super . on Transact ( code, data, reply, flags ) "" )  ;  class Builder . add Method ( method Builder . build (  )  )  ;  add Common Extras ( class Builder )  ;  add Stub Extras ( class Builder )  ; }"
1130,"private V put For Null Key ( V value ) { for  (  Entry<K, V> e = table [ 0 ]  ;  e != null ;  e = e . next )  {     if  ( e . key == null )  {         V old Value = e . value ;          e . value = value ;          return old Value ;      } } mod Count++ ;  add Entry ( 0, null, value, 0 )  ;  return null ; }"
1131,public  Render State consume Previous Render State (  ) { final  Render State previous Render State = m Previous Render State ;  m Previous Render State = null ;  return previous Render State ; }
1132,"public com . anychart . standalones .  Data Grid row Odd Fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Odd Fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
1133,"public static boolean has Messenger Installed (  Context context ) { return  Facebook Signature Validator . validate Signature ( context, PACKAGE_NAME )  ; }"
1134,"public com . anychart . core . resource . resourcelist .  Tags Settings padding (  Number value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
1135,"public  Flexible Adapter<T> set Endless Target Count ( @ Int Range ( from = 0 )  int endless Target Count ) { log . i ( "" Set endless Target Count=%s"", endless Target Count )  ;  m Endless Target Count = endless Target Count ;  return this ; }"
1136,"public com . anychart . charts .  Pie select Marquee Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1137,public  String get Ref (  ) { return this . ref ; }
1138,"public static void add Steps To Copy Resources (  Build Context context,  Immutable List .  Builder< Step> steps Builder,  Immutable List .  Builder< Path> code Sign On Copy Paths Builder,  Apple Bundle Resources resources, boolean verify Resources,  Path dir Root,  Apple Bundle Destinations destinations,  Project Filesystem project Filesystem,  Immutable List< String> ibtool Flags, boolean is Legacy Watch App,  Apple Platform platform,  Logger LOG,  Tool ibtool, boolean ibtool Module Flag,  Build Target build Target,  Optional< String> binary Name ) { boolean has No Resource To Copy = resources . get Resource Dirs (  )  . is Empty (  )  && resources . get Dirs Containing Resource Dirs (  )  . is Empty (  )  && resources . get Resource Files (  )  . is Empty (  )  ;  if  ( has No Resource To Copy )  {     return ;  } if  ( verify Resources )  {     verify Resource Conflicts ( resources, context . get Source Path Resolver (  )  )  ;  } for  (  Apple Bundle Destination bundle Destination : resources . get All Destinations (  )  )  {      Path bundle Destination Path = dir Root . resolve ( bundle Destination . get Path ( destinations )  )  ;      steps Builder . add (  Mkdir Step . of (  Build Cell Relative Path . from Cell Relative Path ( context . get Build Cell Root Path (  ) , project Filesystem, bundle Destination Path )  )  )  ;  } for  (  Source Path With Apple Bundle Destination dir With Destination : resources . get Resource Dirs (  )  )  {      Path bundle Destination Path = dir Root . resolve ( dir With Destination . get Destination (  )  . get Path ( destinations )  )  ;      steps Builder . add (  Copy Step . for Directory ( project Filesystem, context . get Source Path Resolver (  )  . get Absolute Path ( dir With Destination . get Source Path (  )  ) , bundle Destination Path,  Copy Step .  Directory Mode . DIRECTORY_AND_CONTENTS )  )  ;  } for  (  Source Path With Apple Bundle Destination dir With Destination : resources . get Dirs Containing Resource Dirs (  )  )  {      Path bundle Destination Path = dir Root . resolve ( dir With Destination . get Destination (  )  . get Path ( destinations )  )  ;      steps Builder . add (  Copy Step . for Directory ( project Filesystem, context . get Source Path Resolver (  )  . get Absolute Path ( dir With Destination . get Source Path (  )  ) , bundle Destination Path,  Copy Step .  Directory Mode . CONTENTS_ONLY )  )  ;  } for  (  Source Path With Apple Bundle Destination file With Destination : resources . get Resource Files (  )  )  {      Path resolved File Path = context . get Source Path Resolver (  )  . get Absolute Path ( file With Destination . get Source Path (  )  )  ;       Path bundle Destination Path = dir Root . resolve ( file With Destination . get Destination (  )  . get Path ( destinations )  )  ;       Path destination Path = bundle Destination Path . resolve ( resolved File Path . get File Name (  )  )  ;       Apple Resource Processing . add Resource Processing Steps ( context . get Source Path Resolver (  ) , resolved File Path, destination Path, steps Builder, ibtool Flags, project Filesystem, is Legacy Watch App, platform, LOG, ibtool, ibtool Module Flag, build Target, binary Name )  ;      if  ( file With Destination . get Codesign On Copy (  )  )  {         code Sign On Copy Paths Builder . add ( destination Path )  ;      } }}"
1139,"protected void add To Checkout (  String path,  Dir Cache Entry entry,  Attributes attributes )  throws IO Exception{ to Be Checked Out . put ( path, entry )  ;  add Checkout Metadata ( path, attributes )  ; }"
1140,public void set Captive Portal Server Url (  String captive Portal Server Url ) { this . captive Portal Server Url = captive Portal Server Url ; }
1141,"public com . anychart . standalones .  Resource Timeline background Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
1142,"void smooth Scroll To ( int x, int y ) { smooth Scroll To ( x, y, 0 )  ; }"
1143,protected void configure J Sch ( J Sch jsch ) {//  No additional configuration required . }
1144,public static void set Post Frame Callback Delay ( int delay Millis ) { if  ( looper Mode (  )  ==  Mode . PAUSED )  {      Shadow Display Event Receiver . set Async Vsync ( delay Millis )  ;  } else {      Shadow Legacy Choreographer . set Post Frame Callback Delay ( delay Millis )  ;  }}
1145,"public com . anychart . core . resource .  Grid odd Holiday Fill (  String [  ]  value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . odd Holiday Fill ( %s )  ; "", array To String Wrap Quotes ( value )  )  )  ;  return this ; }"
1146,"public static boolean write File From String ( final  String file Path, final  String content, final boolean append ) { return write File From String (  Utils Bridge . get File By Path ( file Path ) , content, append )  ; }"
1147,"public void swap Items (  List<T> list, int from Position, int to Position ) { if  ( from Position < 0 || from Position >= get Item Count (  )  || to Position < 0 || to Position >= get Item Count (  )  )  {     return ;  } log . v ( ""swap Items from=%s  [ selected? %s ]  to=%s  [ selected? %s ] "", from Position, is Selected ( from Position ) , to Position, is Selected ( to Position )  )  ;  //  Collapse expandable before swapping  ( otherwise items are mixed badly )  if  ( from Position < to Position && is Expandable ( get Item ( from Position )  )  && is Expanded ( to Position )  )  {     collapse ( to Position )  ;  } //  Perform item swap  ( for all  Layout Managers )  if  ( from Position < to Position )  {     for  ( int i = from Position ;  i < to Position ;  i++ )  {         log . v ( ""swap Items from=%s to=%s"", i,  ( i + 1 )  )  ;           Collections . swap ( list, i, i + 1 )  ;          swap Selection ( i, i + 1 )  ;      } } else {     for  ( int i = from Position ;  i > to Position ;  i-- )  {         log . v ( ""swap Items from=%s to=%s"", i,  ( i - 1 )  )  ;           Collections . swap ( list, i, i - 1 )  ;          swap Selection ( i, i - 1 )  ;      } } notify Item Moved ( from Position, to Position )  ;  //  Header swap linkage if  ( headers Shown )  {     //  Situation AFTER items have been swapped, items are inverted!     T from Item = get Item ( to Position )  ;      T to Item = get Item ( from Position )  ;      int old Position, new Position ;      if  ( to Item instanceof I Header && from Item instanceof I Header )  {         if  ( from Position < to Position )  {             //  Dragging down from Header             //  Auto-linkage all section-items with new header             I Header header =  ( I Header )  from Item ;               List<I Sectionable> items = get Section Items ( header )  ;              for  ( I Sectionable sectionable : items )  {                 link Header To (  ( T )  sectionable, header,  Payload . LINK )  ;              }         } else {             //  Dragging up from Header             //  Auto-linkage all section-items with new header             I Header header =  ( I Header )  to Item ;               List<I Sectionable> items = get Section Items ( header )  ;              for  ( I Sectionable sectionable : items )  {                 link Header To (  ( T )  sectionable, header,  Payload . LINK )  ;              }         }     } else if  ( to Item instanceof I Header )  {         // A  Header is being swapped up         //  Else a  Header is being swapped down         old Position = from Position < to Position ? to Position + 1 : to Position ;          new Position = from Position < to Position ? to Position : from Position + 1 ;          //  Swap header linkage         link Header To ( get Item ( old Position ) , get Section Header ( old Position ) ,  Payload . LINK )  ;          link Header To ( get Item ( new Position ) ,  ( I Header )  to Item,  Payload . LINK )  ;      } else if  ( from Item instanceof I Header )  {         // A  Header is being dragged down         //  Else a  Header is being dragged up         old Position = from Position < to Position ? from Position : from Position + 1 ;          new Position = from Position < to Position ? to Position + 1 : from Position ;          //  Swap header linkage         link Header To ( get Item ( old Position ) , get Section Header ( old Position ) ,  Payload . LINK )  ;          link Header To ( get Item ( new Position ) ,  ( I Header )  from Item,  Payload . LINK )  ;      } else {         // A  Header receives the to Item         //  Else a  Header receives the from Item         old Position = from Position < to Position ? to Position : from Position ;          new Position = from Position < to Position ? from Position : to Position ;          //  Swap header linkage         T old Item = get Item ( old Position )  ;          I Header header = get Header Of ( old Item )  ;          if  ( header != null )  {             I Header old Header = get Section Header ( old Position )  ;              if  ( old Header != null && !old Header . equals ( header )  )  {                 link Header To ( old Item, old Header,  Payload . LINK )  ;              }             link Header To ( get Item ( new Position ) , header,  Payload . LINK )  ;          }     } }}"
1148,"private void log Stats (  ) { if  ( F Log . is Loggable ( F Log . VERBOSE )  )  {     F Log . v ( TAG, "" Used =  ( %d, %d )  ;   Free =  ( %d, %d ) "", m Used . m Count, m Used . m Num Bytes, m Free . m Count, m Free . m Num Bytes )  ;  }}"
1149,public void set Trust Store (  Key Store Factory Bean trust Store ) { this . trust Store = trust Store ; }
1150,"public com . anychart . core . stock . scrollerseries .  Jump Line parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
1151,public long get Entry Length (  ) { return current (  )  . get Length (  )  ; }
1152,"protected  Silent Authentication Callback failure Silent Callback ( final  Count Down Latch latch, final  String error Code ) { return new  Silent Authentication Callback (  )  {     @ Override     public void on Success ( I Authentication Result authentication Result )  {          Assert . fail ( "" Unexpected success"" )  ;          latch . count Down (  )  ;      }     @ Override     public void on Error (  Msal Exception exception )  {          Assert . assert Same ( error Code, exception . get Error Code (  )  )  ;          latch . count Down (  )  ;      } } ; }"
1153,public boolean enter If Interruptibly (  Guard guard )  throws  Interrupted Exception{ if  ( guard . monitor != this )  {     throw new  Illegal Monitor State Exception (  )  ;  } final  Reentrant Lock lock = this . lock ;  lock . lock Interruptibly (  )  ;  boolean satisfied = false ;  try {     return satisfied = guard . is Satisfied (  )  ;  } finally {     if  ( !satisfied )  {         lock . unlock (  )  ;      } }}
1154,"public static  Gradle Dependency Entity parse (  String text ) {  Gradle Dependency Entity entity = new  Gradle Dependency Entity (  )  ;   Xml Pull Parser Factory f = null ;  try {     f =  Xml Pull Parser Factory . new Instance (  )  ;      f . set Namespace Aware ( true )  ;       Xml Pull Parser xml Pull Parser = f . new Pull Parser (  )  ;      xml Pull Parser . set Input ( new  Input Stream Reader ( new  Byte Array Input Stream ( text . get Bytes (  )  )  )  )  ;      int event Type = xml Pull Parser . get Event Type (  )  ;      while  ( event Type !=  Xml Pull Parser . END_DOCUMENT )  {         if  ( event Type ==  Xml Pull Parser . START_DOCUMENT )  {         } else if  ( event Type ==  Xml Pull Parser . START_TAG )  {              String name = xml Pull Parser . get Name (  )  ;              if  ( name . equals ( ""group Id"" )  )  {                 entity . set Group Id ( xml Pull Parser . next Text (  )  )  ;              } else if  ( name . equals ( ""artifact Id"" )  )  {                 entity . set Artifact Id ( xml Pull Parser . next Text (  )  )  ;              } else if  ( name . equals ( ""version"" )  )  {                  String version = xml Pull Parser . next Text (  )  ;                  entity . set Version ( version )  ;              } else if  ( name . equals ( ""last Updated"" )  )  {                 entity . set Update Time ( xml Pull Parser . next Text (  )  )  ;              }         } else if  ( event Type ==  Xml Pull Parser . END_TAG )  {         } else if  ( event Type ==  Xml Pull Parser . TEXT )  {         }         event Type = xml Pull Parser . next (  )  ;      } } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  } return entity ; }"
1155,"public static void fetch From Url ( @ Non Null  Uri open Id Connect Discovery Uri, @ Non Null  Retrieve Configuration Callback callback ) { fetch From Url ( open Id Connect Discovery Uri, callback,  Default Connection Builder . INSTANCE )  ; }"
1156,"public static  Boolean evaluate (  Object str Arg,  Object match Arg,  Navigator nav ) {  String str =  String Function . evaluate ( str Arg, nav )  ;   String match =  String Function . evaluate ( match Arg, nav )  ;  return  (  ( str . index Of ( match )  >= 0 )  ?  Boolean . TRUE :  Boolean . FALSE )  ; }"
1157,public static boolean is Managed ( E object ) { return object instanceof  Realm Object Proxy ; }
1158,private boolean entering Root Element ( X Path Pull Parser parser )  throws  Xml Pull Parser Exception{ return parser . get Event Type (  )  == X Path Pull Parser . START_TAG && root X Paths . contains ( parser . get Current Element (  )  )  ; }
1159,"public com . anychart . core . annotations .  Fibonacci Fan second X Anchor (  String  Second ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . second X Anchor ( %s )  ; "", wrap Quotes (  Second )  )  )  ;  return this ; }"
1160,public void process Scheduled Event (  Http Artifact Cache Event .  Scheduled event ) { if  ( event . get Operation (  )  !=  Artifact Cache Event .  Operation . STORE )  {     return ;  } scheduled Count . increment And Get (  )  ; }
1161,"public static  String display As Binary ( byte buffer ) { // Convert buffer to hex representation  String hex Value =  Integer . to Hex String ( buffer )  ;   String char1 = """" ;   String char2 = """" ;  try {     if  ( hex Value . length (  )  == 8 )  {         char1 = hex Value . substring ( 6, 7 )  ;          char2 = hex Value . substring ( 7, 8 )  ;      } else if  ( hex Value . length (  )  == 2 )  {         char1 = hex Value . substring ( 0, 1 )  ;          char2 = hex Value . substring ( 1, 2 )  ;      } else if  ( hex Value . length (  )  == 1 )  {         char1 = ""0"" ;          char2 = hex Value . substring ( 0, 1 )  ;      } } catch  (  String Index Out Of Bounds Exception se )  {     return """" ;  } return hex Binary Map . get ( char1 )  + hex Binary Map . get ( char2 )  ; }"
1162,"public void put ( @ Non Null final  String key, final  Parcelable value ) { put ( key, value, -1 )  ; }"
1163,public void connect (  ) { new  Thread ( new  Runnable (  )  {     @ Override     public void run (  )  {         is Connecting = true ;          for  (  Device Service service : services . values (  )  )  {             if  ( !service . is Connected (  )  )  {                 service . connect (  )  ;              }         }         is Connecting = false ;      } } )  . start (  )  ; }
1164,"static boolean equals Impl (  Multiset<?> multiset, @ Nullable  Object object ) { if  ( object == multiset )  {     return true ;  } if  ( object instanceof  Multiset )  {      Multiset<?> that =  (  Multiset<?> )  object ;      if  ( multiset . size (  )  != that . size (  )  || multiset . entry Set (  )  . size (  )  != that . entry Set (  )  . size (  )  )  {         return false ;      }     for  (  Entry<?> entry : that . entry Set (  )  )  {         if  ( multiset . count ( entry . get Element (  )  )  != entry . get Count (  )  )  {             return false ;          }     }     return true ;  } return false ; }"
1165,"public com . anychart . core . stock . scrollerseries .  Range Area fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
1166,"public com . anychart . standalones .  Markers Factory offset X (  Number offset ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . offset X ( %s )  ; "", offset )  )  ;  return this ; }"
1167,"public com . anychart . core .  State Settings dummy Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . dummy Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
1168,"public void seek To Frame ( @ Int Range ( from = 0, to =  Integer . MAX_VALUE )  final int frame Index ) { if  ( frame Index < 0 )  {     throw new  Index Out Of Bounds Exception ( "" Frame index is not positive"" )  ;  } m Executor . execute ( new  Safe Runnable ( this )  {     @ Override     public void do Work (  )  {         m Native Info Handle . seek To Frame ( frame Index, m Buffer )  ;          m Invalidation Handler . send Empty Message At Time ( MSG_TYPE_INVALIDATION, 0 )  ;      } } )  ; }"
1169,"private boolean equal Id And Mode (  Object Id id1,  File Mode mode1,  Object Id id2,  File Mode mode2 ) { if  ( !mode1 . equals ( mode2 )  )      return false ;  return id1 != null ? id1 . equals ( id2 )  : id2 == null ; }"
1170,"protected void set Summary Object End Text (  String summary Object End Text ) { if  ( summary Object End Text == null )  {     summary Object End Text = """" ;  } this . summary Object End Text = summary Object End Text ; }"
1171,public static boolean is Kotlin Module (  Jvm Library Arg constructor Arg ) { return constructor Arg instanceof  Kotlin Library Description Arg || constructor Arg instanceof  Kotlin Test Description Arg || constructor Arg instanceof  Android Library Description Arg &&  (  (  Android Library Description Arg )  constructor Arg )  . get Language (  )  . map (  Android Library Description .  Jvm Language . KOTLIN::equals )  . or Else ( false )  ; }
1172,"public static void v (  String tag,  String s,  Object .  .  .  args ) { if  ( LOG . VERBOSE >= LOGLEVEL )       Log . v ( tag,  String . format ( s, args )  )  ; }"
1173,"public com . anychart . standalones .  Data Grid row Stroke ( com . anychart . graphics . vector .  Stroke color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Stroke ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
1174,public void unfocus All (  ) { set Scroll Focus ( null )  ;  set Keyboard Focus ( null )  ;  cancel Touch Focus (  )  ; }
1175,"public com . anychart . graphics . vector .  Unmanaged Layer disable Pointer Events (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . disable Pointer Events ( %s )  ; "", value )  )  ;  return this ; }"
1176,"public static int v (  String tag,  String msg ) { if  (  Re Plugin Internal . FOR_DEV )  {     return  Log . v ( TAG_PREFIX + tag, msg )  ;  } return -1 ; }"
1177,"public static  Pack Index Writer create Oldest Possible ( final  Output Stream dst, final  List<? extends  Packed Object Info> objs ) { return create Version ( dst, oldest Possible Format ( objs )  )  ; }"
1178,public  String get Message (  ) { return message ; }
1179,"public void set Request Properties (  Map< String,  String> request Properties ) { this . request Properties = request Properties ; }"
1180,public void set Position ( int position ) { byte Offset = position / 8 ;  bit Offset = position -  ( byte Offset * 8 )  ;  assert Valid Offset (  )  ; }
1181,"public void share With Facebook (  String caption Or Options,  String link,  String name,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Facebook ( %s, %s, %s, %s )  ; "", wrap Quotes ( caption Or Options ) , wrap Quotes ( link ) , wrap Quotes ( name ) , wrap Quotes ( description )  )  )  ; }"
1182,"private static void diff_cleanup Semantic Lossless (  Linked List< Diff> diffs ) {  String equality1, edit, equality2 ;   String common String ;  int common Offset ;  int score, best Score ;   String best Equality1, best Edit, best Equality2 ;  //  Create a new iterator at the start .   List Iterator< Diff> pointer = diffs . list Iterator (  )  ;   Diff prev Diff = pointer . has Next (  )  ? pointer . next (  )  : null ;   Diff this Diff = pointer . has Next (  )  ? pointer . next (  )  : null ;   Diff next Diff = pointer . has Next (  )  ? pointer . next (  )  : null ;  //  Intentionally ignore the first and last element  ( don't need checking )  .  while  ( next Diff != null )  {     if  ( prev Diff . operation ==  Operation . EQUAL && next Diff . operation ==  Operation . EQUAL )  {         //  This is a single edit surrounded by equalities .          equality1 = prev Diff . text ;          edit = this Diff . text ;          equality2 = next Diff . text ;          //  First, shift the edit as far left as possible .          common Offset = diff_common Suffix ( equality1, edit )  ;          if  ( common Offset != 0 )  {             common String = edit . substring ( edit . length (  )  - common Offset )  ;              equality1 = equality1 . substring ( 0, equality1 . length (  )  - common Offset )  ;              edit = common String + edit . substring ( 0, edit . length (  )  - common Offset )  ;              equality2 = common String + equality2 ;          }         //  Second, step character by character right, looking for the best fit .          best Equality1 = equality1 ;          best Edit = edit ;          best Equality2 = equality2 ;          best Score = diff_cleanup Semantic Score ( equality1, edit )  + diff_cleanup Semantic Score ( edit, equality2 )  ;          while  ( edit . length (  )  != 0 && equality2 . length (  )  != 0 && edit . char At ( 0 )  == equality2 . char At ( 0 )  )  {             equality1 += edit . char At ( 0 )  ;              edit = edit . substring ( 1 )  + equality2 . char At ( 0 )  ;              equality2 = equality2 . substring ( 1 )  ;              score = diff_cleanup Semantic Score ( equality1, edit )  + diff_cleanup Semantic Score ( edit, equality2 )  ;              //  The >= encourages trailing rather than leading whitespace on edits .              if  ( score >= best Score )  {                 best Score = score ;                  best Equality1 = equality1 ;                  best Edit = edit ;                  best Equality2 = equality2 ;              }         }         if  ( !prev Diff . text . equals ( best Equality1 )  )  {             //  We have an improvement, save it back to the diff .              if  ( best Equality1 . length (  )  != 0 )  {                 prev Diff . text = best Equality1 ;              } else {                 //  Walk past next Diff .                  pointer . previous (  )  ;                  //  Walk past this Diff .                  pointer . previous (  )  ;                  //  Walk past prev Diff .                  pointer . previous (  )  ;                  //  Delete prev Diff .                  pointer . remove (  )  ;                  //  Walk past this Diff .                  pointer . next (  )  ;                  //  Walk past next Diff .                  pointer . next (  )  ;              }             this Diff . text = best Edit ;              if  ( best Equality2 . length (  )  != 0 )  {                 next Diff . text = best Equality2 ;              } else {                 //  Delete next Diff .                  pointer . remove (  )  ;                  next Diff = this Diff ;                  this Diff = prev Diff ;              }         }     }     prev Diff = this Diff ;      this Diff = next Diff ;      next Diff = pointer . has Next (  )  ? pointer . next (  )  : null ;  }}"
1183,"public static _ Fields find By Thrift Id Or Throw ( int field Id ) { _ Fields fields = find By Thrift Id ( field Id )  ;  if  ( fields == null )      throw new java . lang .  Illegal Argument Exception ( "" Field "" + field Id + "" doesn't exist!"" )  ;  return fields ; }"
1184,"public void test Zombie Help Argument (  )  throws  Exception{  String [  ]  output = execute ( ""git repo -h"" )  ;   String all =  Arrays . to String ( output )  ;  assert True ( "" Unexpected help output: "" + all, all . contains ( ""jgit repo"" )  )  ;  assert False ( "" Unexpected help output: "" + all, all . contains ( ""jgit repo VAL"" )  )  ; }"
1185,"public  Code Block new Module Instance (  Type Element module Element,  Class Name requesting Class ) {  Module Kind . check Is Module ( module Element, metadata Util )  ;   String package Name = requesting Class . package Name (  )  ;  return non Public Nullary Constructor ( module Element )  . filter (  constructor -> !is Element Accessible From ( constructor, package Name )  )  . map (  constructor ->  Code Block . of ( ""$T . new Instance (  ) "", constructor Proxy Type Name ( module Element )  )  )  . or Else (  Code Block . of ( ""new $T (  ) "", module Element )  )  ; }"
1186,public  Xml Serializer build Serializer (  ) { try {     return parser Factory . new Serializer (  )  ;  } catch  (  Xml Pull Parser Exception e )  {     throw new  Runtime Exception ( e )  ;  }}
1187,public  String get Model Hash (  ) { return model Hash ; }
1188,"public com . anychart . core . utils .  Quarter Settings right Top (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right Top ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1189,public void add Card Sections (  Card Section [  ]  card Sections ) { if  ( card Sections != null && card Sections . length > 0 )  {     int old Size = m Card Sections . size (  )  ;      // Get current sections      Card Section [  ]  new Card Sections = new  Card Section [ old Size + card Sections . length ]  ;      for  ( int i = 0 ;  i < m Card Sections . size (  )  ;  i++ )  {         new Card Sections [ i ]  = m Card Sections . value At ( i )  ;      }     // Add new sections     for  ( int i = 0 ;  i < card Sections . length ;  i++ )  {         new Card Sections [ i + old Size ]  = card Sections [ i ]  ;      }     set Card Sections ( new Card Sections )  ;  }}
1190,"public com . anychart . core . polar . series .  Continuous Base parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
1191,"public com . anychart . core . annotations .  Fibonacci Retracement container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
1192,"public com . anychart . core .  State Settings word Break (  String mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . word Break ( %s )  ; "", wrap Quotes ( mode )  )  )  ;  return this ; }"
1193,"public static  Method find Method (  Class<?> clazz,  String name,  Class<?> .  .  .  parameter Types )  throws  No Such Method Exception{ for  (  ;  clazz != null ;  clazz = clazz . get Superclass (  )  )  {     try {          Method method = clazz . get Declared Method ( name, parameter Types )  ;          if  ( !method . is Accessible (  )  )  {             method . set Accessible ( true )  ;          }         return method ;      } catch  (  No Such Method Exception e )  {     // ignore and search next     } } throw new  No Such Method Exception ( "" Method "" + name + "" with parameters "" +  Arrays . as List ( parameter Types )  + "" not found in "" + clazz )  ; }"
1194,"public void test Non Gist Id (  ) { assert Null (  Gist Uri Matcher . get Gist (  Uri . parse ( ""https://gist . github . com/TEST"" )  )  )  ;  assert Null (  Gist Uri Matcher . get Gist (  Uri . parse ( ""https://gist . github . com/abc%20"" )  )  )  ;  assert Null (  Gist Uri Matcher . get Gist (  Uri . parse ( ""https://gist . github . com/abcdefg"" )  )  )  ; }"
1195,public  Uri get Device Redirect Uri (  ) { return this . device Redirect Uri ; }
1196,"protected int synthesize To File (  Char Sequence text,  Bundle params,  File file,  String utterance Id ) { this . last Synthesize To File Text = text . to String (  )  ;  return  Text To Speech . SUCCESS ; }"
1197,"public com . anychart . core . resource .  Logo right Stroke ( com . anychart . graphics . vector .  Stroke color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right Stroke ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
1198,"public  Result delete (  Rev Walk walk )  throws IO Exception{ final  String my Name = detaching Symbolic Ref ? get Ref (  )  . get Name (  )  : get Ref (  )  . get Leaf (  )  . get Name (  )  ;  if  ( my Name . starts With (  Constants . R_HEADS )  && !get Repository (  )  . is Bare (  )  )  {     //  Don't allow the currently checked out branch to be deleted .       Ref head = get Ref Database (  )  . exact Ref (  Constants . HEAD )  ;      while  ( head != null && head . is Symbolic (  )  )  {         head = head . get Target (  )  ;          if  ( my Name . equals ( head . get Name (  )  )  )              return result =  Result . REJECTED_CURRENT_BRANCH ;      } } try {     return result = update Impl ( walk, new  Store (  )  {         @ Override          Result execute (  Result status )  throws IO Exception {             return do Delete ( status )  ;          }     } )  ;  } catch  ( IO Exception x )  {     result =  Result . IO_FAILURE ;      throw x ;  }}"
1199,public boolean is Multiple Marker (  ) { return multiple Marker ; }
1200,void eval (  ) { double num2 = pop Double (  )  ;  double num1 = pop Double (  )  ;  push Boolean ( num1 < num2 )  ; }
1201,public static J Git Text get (  ) { return NLS . get Bundle For ( J Git Text . class )  ; }
1202,public void set Filter ( GPU Image Filter filter ) { this . filter = filter ;  gpu Image . set Filter ( filter )  ;  request Render (  )  ; }
1203,"public void word Break (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . word Break (  )  ; "" )  ; }"
1204,"public com . anychart . charts .  Waterfall text Marker (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Marker ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1205,"private static  Annotation translate Enclosing Method (  Attribute List attribs ) {  Att Enclosing Method enclosing Method =  (  Att Enclosing Method )  attribs . find First (  Att Enclosing Method . ATTRIBUTE_NAME )  ;  if  ( enclosing Method == null )  {     return null ;  }  Cst Type enclosing Class = enclosing Method . get Enclosing Class (  )  ;   Cst Nat nat = enclosing Method . get Method (  )  ;  if  ( nat == null )  {     /*          *  Dalvik doesn't use  Enclosing Method annotations unless          * there really is an enclosing method .   Anonymous classes          * are unambiguously identified by having an  Inner Class          * annotation with an empty name along with an appropriate          *  Enclosing Class .           */     return  Annotation Utils . make Enclosing Class ( enclosing Class )  ;  } return  Annotation Utils . make Enclosing Method ( new  Cst Method Ref ( enclosing Class, nat )  )  ; }"
1206,"public com . anychart . core .  Pie Point hovered (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hovered ( %s )  ; "", enabled )  )  ;  return this ; }"
1207,"public com . anychart . charts .  Venn select Marquee Fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
1208,"void handle New Id Validation Exception (  Receive Command cmd, IO Exception e ) { cmd . set Result (  Result . REJECTED_MISSING_OBJECT, cmd . get New Id (  )  . name (  )  )  ; }"
1209,public void offer All (  Iterator<? extends T> elements ) { while  ( elements . has Next (  )  )  {     offer ( elements . next (  )  )  ;  }}
1210,public void set Session Type (  Launch Session Type session Type ) { this . session Type = session Type ; }
1211,"public final  List< Class<?>> find Classes In Package (  String package Name ) { synchronized  ( classpath Locations )  {     synchronized  ( results )  {         errors = new  Array List<> (  )  ;          results = new  Tree Map<> ( CLASS_COMPARATOR )  ;          return find Subclasses ( classpath Locations, package Name )  ;      } }}"
1212,"public com . anychart . standalones .  Resource Timeline text Marker (  Number index,  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Marker ( %s, %s )  ; "", index, value )  )  ;  return this ; }"
1213,"private  Statement method Block (  End To End Test Descriptor test Descriptor ) {  Object test ;  try {     test = new  Reflective Callable (  )  {         @ Override         protected  Object run Reflective Call (  )  throws  Throwable {             return create Test (  )  ;          }     } . run (  )  ;  } catch  (  Throwable e )  {     return new  Fail ( e )  ;  }  Statement statement = new  Buck Invoker ( test Descriptor, test )  ;  statement = with Befores ( test, statement )  ;  statement = with Afters ( test, statement )  ;  statement = with Expected Exceptions ( test Descriptor, statement )  ;  statement = with Rules ( test Descriptor, test, statement )  ;  return statement ; }"
1214,"public com . anychart . charts .  Scatter min Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
1215,public void play Together (  List< Spruce Dynamics<?>> items ) { anim = items ; }
1216,"public com . anychart . core . stock . scrollerseries .  Candlestick color Scale ( com . anychart . scales .  Ordinal Color settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
1217,"public  Cache Builder<K, V> concurrency Level ( int concurrency Level ) { check State ( this . concurrency Level == UNSET_INT, ""concurrency level was already set to %s"", this . concurrency Level )  ;  check Argument ( concurrency Level > 0 )  ;  this . concurrency Level = concurrency Level ;  return this ; }"
1218,"public void should Build (  End To End Test Descriptor test,  End To End Workspace workspace )  throws  Exception{  Process Result result = workspace . run Buck Command ( test )  ;  result . assert Success ( "" Did not successfully build"" )  ; }"
1219,"public void set Content Length ( int value )  throws IO Exception{ set Header ( "" Content- Length"",  String . value Of ( value )  )  ; }"
1220,"protected  Value Node get Input (  ) { if  ( get Input Count (  )  > 1 )  {     throw new  Runtime Exception ( "" Trying to get single input of node with multiple inputs!"" )  ;  } return get Input ( DEFAULT_INPUT )  ; }"
1221,"public synchronized boolean remove Session Cache ( @ Non Null  String session Id ) {  Sonic Session sonic Session = preload Session Pool . get ( session Id )  ;  if  ( null != sonic Session )  {     sonic Session . destroy (  )  ;      preload Session Pool . remove ( session Id )  ;      runtime . log ( TAG,  Log . INFO, ""session Id ( "" + session Id + "" )  remove Session Cache: remove preload session . "" )  ;  } if  ( !running Session Hash Map . contains Key ( session Id )  )  {     runtime . log ( TAG,  Log . INFO, ""session Id ( "" + session Id + "" )  remove Session Cache success . "" )  ;       Sonic Utils . remove Session Cache ( session Id )  ;      return true ;  } runtime . log ( TAG,  Log . ERROR, ""session Id ( "" + session Id + "" )  remove Session Cache fail: session is running . "" )  ;  return false ; }"
1222,"public void remove Item ( @ Int Range ( from = 0 )  int position ) { this . remove Item ( position,  Payload . CHANGE )  ; }"
1223,"public static void apply Global Debouncing ( final  View [  ]  views, @ Int Range ( from = 0 )  long duration, final  View .  On Click Listener listener ) { apply Debouncing ( views, true, duration, listener )  ; }"
1224,"public void test Invalid Not Equals Equal Object (  ) { equals Tester . add Equality Group ( reference, not Equal Object1 )  ;  try {     equals Tester . test Equals (  )  ;  } catch  (  Assertion Failed Error e )  {     assert Error Message ( e, reference + ""  [ group 1, item 1 ] "" )  ;      assert Error Message ( e, not Equal Object1 + ""  [ group 1, item 2 ] "" )  ;      return ;  } fail ( "" Should get not equal to equal object error"" )  ; }"
1225,"public com . anychart . graphics . vector .  Pattern Fill negative Hatch Fill (  ) { return new com . anychart . graphics . vector .  Pattern Fill ( js Base + "" . negative Hatch Fill (  ) "" )  ; }"
1226,"public void execute ( final  Action Invocation< Local Service> action Invocation ) { log . fine ( "" Invoking on local service: "" + action Invocation )  ;  final  Local Service service = action Invocation . get Action (  )  . get Service (  )  ;  try {     if  ( service . get Manager (  )  == null )  {         throw new  Illegal State Exception ( "" Service has no implementation factory, can't get service instance"" )  ;      }     service . get Manager (  )  . execute ( new  Command (  )  {         public void execute (  Service Manager service Manager )  throws  Exception {              Abstract Action Executor . this . execute ( action Invocation, service Manager . get Implementation (  )  )  ;          }         @ Override         public  String to String (  )  {             return "" Action invocation: "" + action Invocation . get Action (  )  ;          }     } )  ;  } catch  (  Action Exception ex )  {     if  ( log . is Loggable (  Level . FINE )  )  {         log . fine ( "" Action Exception thrown by service, wrapping in invocation and returning: "" + ex )  ;          log . log (  Level . FINE, "" Exception root cause: "",  Exceptions . unwrap ( ex )  )  ;      }     action Invocation . set Failure ( ex )  ;  } catch  (  Interrupted Exception ex )  {     if  ( log . is Loggable (  Level . FINE )  )  {         log . fine ( "" Interrupted Exception thrown by service, wrapping in invocation and returning: "" + ex )  ;          log . log (  Level . FINE, "" Exception root cause: "",  Exceptions . unwrap ( ex )  )  ;      }     action Invocation . set Failure ( new  Action Cancelled Exception ( ex )  )  ;  } catch  (  Throwable t )  {      Throwable root Cause =  Exceptions . unwrap ( t )  ;      if  ( log . is Loggable (  Level . FINE )  )  {         log . fine ( "" Execution has thrown, wrapping root cause in  Action Exception and returning: "" + t )  ;          log . log (  Level . FINE, "" Exception root cause: "", root Cause )  ;      }     action Invocation . set Failure ( new  Action Exception (  Error Code . ACTION_FAILED,  ( root Cause . get Message (  )  != null ? root Cause . get Message (  )  : root Cause . to String (  )  ) , root Cause )  )  ;  }}"
1227,public boolean is Enabled (  ) { return m Enabled ; }
1228,"public static  String get Test Label ( @ Non Null I Abstract File manifest File )  throws  Stream Exception{ return get String Value ( manifest File, get Test Label X Path (  )  )  ; }"
1229,public void on Load Failed ( @ Nullable  Drawable error Drawable ) { super . on Load Failed ( error Drawable )  ;  set Resource Internal ( null )  ;  set Drawable ( error Drawable )  ; }
1230,"public void add Reference (  Document Key key, int target Or Batch Id ) {  Document Reference ref = new  Document Reference ( key, target Or Batch Id )  ;  references By Key = references By Key . insert ( ref )  ;  references By Target = references By Target . insert ( ref )  ; }"
1231,public  Person Ident get Source Committer (  ) {  Rev Commit c = get Source Commit (  )  ;  return c != null ? c . get Committer Ident (  )  : null ; }
1232,"public static  String generate Drop DDL (  Class<?> table Class ) {  Table t =  Mapping . get Instance (  )  . get Table ( table Class )  ;  return ""DROP TABLE IF EXISTS "" + t . name (  )  ; }"
1233,public  Decoder Factory get Decoder Factory (  ) { return decoder Factory ; }
1234,"public com . anychart . core . lineargauge . pointers .  Thermometer bulb Padding (  String padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bulb Padding ( %s )  ; "", wrap Quotes ( padding )  )  )  ;  return this ; }"
1235,"public  Amplitude Client set Device Id ( final  String device Id ) {  Set< String> invalid Device Ids = get Invalid Device Ids (  )  ;  if  ( !context And Api Key Set ( ""set Device Id (  ) "" )  ||  Utils . is Empty String ( device Id )  || invalid Device Ids . contains ( device Id )  )  {     return this ;  } final  Amplitude Client client = this ;  run On Log Thread ( new  Runnable (  )  {     @ Override     public void run (  )  {         if  (  Utils . is Empty String ( client . api Key )  )  {             // in case initialization failed             return ;          }         client . device Id = device Id ;          save Device Id ( device Id )  ;      } } )  ;  return this ; }"
1236,public static ISBN Validator get Instance ( boolean convert ) { return  ( convert ? ISBN_VALIDATOR : ISBN_VALIDATOR_NO_CONVERT )  ; }
1237,"protected  Conditional Wait Request<T> wait Until ( @ Nullable final T parameter, @ Non Null final  Conditional Wait Request .  Condition<T> condition ) { return wait If ( parameter, condition )  . negate (  )  ; }"
1238,"public void maximum Y (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . maximum Y (  )  ; "" )  ; }"
1239,public void set Cleanup Delay ( long cleanup Delay Millis ) { this . cleanup Delay Millis = cleanup Delay Millis ; }
1240,"public com . anychart . charts .  Sunburst hatch Fill (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "", enabled )  )  ;  return this ; }"
1241,"public void height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . height (  )  ; "" )  ; }"
1242,public boolean includes (  Content Coding Type other ) { if  ( other == null )  {     return false ;  } if  ( this . is Wildcard Type (  )  )  {     // * includes anything     return true ;  } else if  ( this . type . equals ( other . type )  )  {     return true ;  } return false ; }
1243,"public void test Correlation Id In Web Request (  )  throws  Interrupted Exception, IO Exception{  Logger . get Instance (  )  . set Enable PII ( true )  ;   Authority Validation Metadata Cache . clear Authority Validation Cache (  )  ;  final int min SDK Version For Test = 15 ;  if  (  Build . VERSION . SDK_INT <= min SDK Version For Test )  {      Logger . v ( TAG, "" Server is returning 401 status code without challenge .  "" + "" Http Url Connection does not return error stream for that in SDK 15 .  "" + "" Without error stream, this test is useless . "" )  ;      return ;  }  File Mock Context mock Context = new  File Mock Context ( get Instrumentation (  )  . get Context (  )  )  ;   String expected Access Token = "" Token Fortest Acquire Token"" + UUID . random UUID (  )  . to String (  )  ;   String expected Client Id = ""client"" + UUID . random UUID (  )  . to String (  )  ;   String expected Resource = ""resource"" + UUID . random UUID (  )  . to String (  )  ;   String expected User = ""userid"" + UUID . random UUID (  )  . to String (  )  ;  final int cache Time Offset Mins = -30 ;  I Token Cache Store mock Cache = get Mock Cache ( cache Time Offset Mins, expected Access Token, expected Resource, expected Client Id, expected User, false )  ;  final  Authentication Context context = get Authentication Context ( mock Context, VALID_AUTHORITY, false, mock Cache )  ;  UUID request Correlation Id = UUID . random UUID (  )  ;   Logger . d ( TAG, ""test correlation Id:"" + request Correlation Id . to String (  )  )  ;  final  Count Down Latch signal = new  Count Down Latch ( 1 )  ;   Mock Authentication Callback callback = new  Mock Authentication Callback ( signal )  ;  final  String error Response = ""{\""error\"":\""invalid_request\"", \""error_description\"":\"" Authentication failed .  "" + ""correlation_id:"" + request Correlation Id . to String (  )  + ""\"", \""correlation_id\"": \"""" + request Correlation Id . to String (  )  + ""\""}"" ;  final  Http URL Connection mocked Connection =  Mockito . mock (  Http URL Connection . class )  ;   Http Url Connection Factory . set Mocked Http Url Connection ( mocked Connection )  ;   Util . prepare Mocked Url Connection ( mocked Connection )  ;   Mockito . when ( mocked Connection . get Output Stream (  )  )  . then Return (  Mockito . mock (  Output Stream . class )  )  ;   Mockito . when ( mocked Connection . get Input Stream (  )  )  . then Throw ( IO Exception . class )  . then Return (  Util . create Input Stream ( error Response )  )  ;   Mockito . when ( mocked Connection . get Response Code (  )  )  . then Return (  Http URL Connection . HTTP_BAD_REQUEST )  ;  final  Test Log Response response = new  Test Log Response (  )  ;  response . listen Log For Message Segments ( "" Authentication failed"", ""correlation_id:\""\"""" + request Correlation Id . to String (  )  )  ;  //  Call acquire token with prompt never to prevent activity launch context . set Request Correlation Id ( request Correlation Id )  ;  context . acquire Token Silent Async ( expected Resource, expected Client Id, expected User, callback )  ;  signal . await ( CONTEXT_REQUEST_TIME_OUT,  Time Unit . MILLISECONDS )  ;  //  Verify that web request send correct headers  Logger . i ( TAG, "" Get response message .  "", "" Response msg:"" + response . get Message (  )  )  ;  assert Not Null ( "" Server response isn't null "", response . get Message (  )  )  ;  assert True ( "" Server response has same correlation Id"", response . get Message (  )  . contains ( request Correlation Id . to String (  )  )  )  ; }"
1244,"protected static  Immutable Multimap< Path,  Path> get Source Folders To Inputs Index (  Immutable Collection< Path> paths ) {  Path default Parent =  Paths . get ( """" )  ;  return paths . stream (  )  . collect (  Immutable List Multimap . to Immutable List Multimap (  path -> {      Path parent = path . get Parent (  )  ;      return parent == null ? default Parent : parent ;  },  path -> path )  )  ; }"
1245,private int get Priority (  Request<?> request ) { switch ( request . get Priority (  )  )  {     case LOW:         return  Url Request .  Builder . REQUEST_PRIORITY_LOW ;      case HIGH:     case IMMEDIATE:         return  Url Request .  Builder . REQUEST_PRIORITY_HIGHEST ;      case NORMAL:     default:         return  Url Request .  Builder . REQUEST_PRIORITY_MEDIUM ;  }}
1246,"public void save As Pdf (  String paper Size Or Width Or Options,  Boolean landscape,  Number x,  Number y,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Pdf ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( paper Size Or Width Or Options ) , landscape, x, y, wrap Quotes ( filename )  )  )  ; }"
1247,"protected  Rev Commit get Base Commit (  Rev Commit a,  Rev Commit b, int call Depth )  throws IO Exception{  Array List< Rev Commit> base Commits = new  Array List<> (  )  ;  walk . reset (  )  ;  walk . set Rev Filter (  Rev Filter . MERGE_BASE )  ;  walk . mark Start ( a )  ;  walk . mark Start ( b )  ;   Rev Commit c ;  while  (  ( c = walk . next (  )  )  != null )  base Commits . add ( c )  ;  if  ( base Commits . is Empty (  )  )      return null ;  if  ( base Commits . size (  )  == 1 )      return base Commits . get ( 0 )  ;  if  ( base Commits . size (  )  >= MAX_BASES )      throw new  No Merge Base Exception (  No Merge Base Exception .  Merge Base Failure Reason . TOO_MANY_MERGE_BASES,  Message Format . format ( J Git Text . get (  )  . merge Recursive Too Many Merge Bases For,  Integer . value Of ( MAX_BASES ) , a . name (  ) , b . name (  ) ,  Integer . value Of ( base Commits . size (  )  )  )  )  ;  //  We know we have more than one base commit .   We have to do merges now // to determine a single base commit .   We don't want to spoil the current // dircache and working tree with the results of this intermediate // merges .   Therefore set the dircache to a new in-memory dircache and // disable that we update the working-tree .   We set this back to the // original values once a single base commit is created .   Rev Commit current Base = base Commits . get ( 0 )  ;   Dir Cache old Dircache = dircache ;  boolean old Incore = in Core ;   Working Tree Iterator old W Tree It = working Tree Iterator ;  working Tree Iterator = null ;  try {     dircache =  Dir Cache . read ( reader, current Base . get Tree (  )  )  ;      in Core = true ;       List< Rev Commit> parents = new  Array List<> (  )  ;      parents . add ( current Base )  ;      for  ( int commit Idx = 1 ;  commit Idx < base Commits . size (  )  ;  commit Idx++ )  {          Rev Commit next Base = base Commits . get ( commit Idx )  ;          if  ( commit Idx >= MAX_BASES )              throw new  No Merge Base Exception (  No Merge Base Exception .  Merge Base Failure Reason . TOO_MANY_MERGE_BASES,  Message Format . format ( J Git Text . get (  )  . merge Recursive Too Many Merge Bases For,  Integer . value Of ( MAX_BASES ) , a . name (  ) , b . name (  ) ,  Integer . value Of ( base Commits . size (  )  )  )  )  ;          parents . add ( next Base )  ;           Rev Commit bc = get Base Commit ( current Base, next Base, call Depth + 1 )  ;           Abstract Tree Iterator bc Tree =  ( bc == null )  ? new  Empty Tree Iterator (  )  : open Tree ( bc . get Tree (  )  )  ;          if  ( merge Trees ( bc Tree, current Base . get Tree (  ) , next Base . get Tree (  ) , true )  )              current Base = create Commit For Tree ( result Tree, parents )  ;          else             throw new  No Merge Base Exception (  No Merge Base Exception .  Merge Base Failure Reason . CONFLICTS_DURING_MERGE_BASE_CALCULATION,  Message Format . format ( J Git Text . get (  )  . merge Recursive Conflicts When Merging Common Ancestors, current Base . get Name (  ) , next Base . get Name (  )  )  )  ;      } } finally {     in Core = old Incore ;      dircache = old Dircache ;      working Tree Iterator = old W Tree It ;      to Be Checked Out . clear (  )  ;      to Be Deleted . clear (  )  ;      modified Files . clear (  )  ;      unmerged Paths . clear (  )  ;      merge Results . clear (  )  ;      failing Paths . clear (  )  ;  } return current Base ; }"
1248,"public com . anychart . core . stock . scrollerseries .  Range Spline Area low Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1249,"public static void set Status Bar Dark Icon (  Window window, int color ) { try {     set Status Bar Color ( window, color )  ;      if  (  Build . VERSION . SDK_INT >  Build . VERSION_CODES . LOLLIPOP_MR1 )  {         set Status Bar Dark Icon ( window . get Decor View (  ) , true )  ;      } } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  }}"
1250,"public boolean equals ( @ Nullable  Object object ) { if  ( object instanceof  Multiset .  Entry )  {      Multiset .  Entry<?> that =  (  Multiset .  Entry<?> )  object ;      return this . get Count (  )  == that . get Count (  )  &&  Objects . equal ( this . get Element (  ) , that . get Element (  )  )  ;  } return false ; }"
1251,"public com . anychart . charts .  Pert bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
1252,public static  Bitmap Transition Options with Wrapped ( @ Non Null  Transition Factory< Drawable> drawable Cross Fade Factory ) { return new  Bitmap Transition Options (  )  . transition Using ( drawable Cross Fade Factory )  ; }
1253,"int get Child Count And Increment ( final  Component component ) { if  ( m Child Counters == null )  {     m Child Counters = new  Sparse Int Array (  )  ;  } final int count = m Child Counters . get ( component . get Type Id (  ) , 0 )  ;  m Child Counters . put ( component . get Type Id (  ) , count + 1 )  ;  return count ; }"
1254,"public byte [  ]  decrypt ( byte [  ]  sender Key Message Bytes,  Decryption Callback callback )  throws  Legacy Message Exception,  Invalid Message Exception,  Duplicate Message Exception,  No Session Exception{ synchronized  ( LOCK )  {     try {          Sender Key Record record = sender Key Store . load Sender Key ( sender Key Id )  ;          if  ( record . is Empty (  )  )  {             throw new  No Session Exception ( "" No sender key for: "" + sender Key Id )  ;          }          Sender Key Message sender Key Message = new  Sender Key Message ( sender Key Message Bytes )  ;           Sender Key State sender Key State = record . get Sender Key State ( sender Key Message . get Key Id (  )  )  ;          sender Key Message . verify Signature ( sender Key State . get Signing Key Public (  )  )  ;           Sender Message Key sender Key = get Sender Key ( sender Key State, sender Key Message . get Iteration (  )  )  ;          byte [  ]  plaintext = get Plain Text ( sender Key . get Iv (  ) , sender Key . get Cipher Key (  ) , sender Key Message . get Cipher Text (  )  )  ;          callback . handle Plaintext ( plaintext )  ;          sender Key Store . store Sender Key ( sender Key Id, record )  ;          return plaintext ;      } catch  ( org . whispersystems . libsignal .  Invalid Key Exception |  Invalid Key Id Exception e )  {         throw new  Invalid Message Exception ( e )  ;      } }}"
1255,"protected  Rev Commit commit Chain ( int depth, int width )  throws  Exception{ if  ( depth <= 0 )  {     throw new  Illegal Argument Exception ( "" Chain depth must be > 0"" )  ;  } if  ( width <= 0 )  {     throw new  Illegal Argument Exception ( "" Number of files per commit must be > 0"" )  ;  }  Commit Builder cb = tr . commit (  )  ;   Rev Commit tip = null ;  do {     --depth ;      for  ( int i = 0 ;  i < width ;  i++ )  {          String id = depth + ""-"" + i ;          cb . add ( ""a"" + id, id )  . message ( id )  ;      }     tip = cb . create (  )  ;      cb = cb . child (  )  ;  } while  ( depth > 0 )  ;  return tip ; }"
1256,public  Array List< Camera> get Cameras Copy (  ) {  Array List< Camera> list = new  Array List< Camera> (  )  ;  list . add All ( m Cameras )  ;  return list ; }
1257,public float get Animated Value Absolute (  ) { if  ( composition == null )  {     return 0 ;  } return  ( frame - composition . get Start Frame (  )  )  /  ( composition . get End Frame (  )  - composition . get Start Frame (  )  )  ; }
1258,"public int number Of Classes (  ) { return  Byte Array . read U16bit ( info, 0 )  ; }"
1259,public com . google . protobuf .  Byte String get Name Bytes (  ) { java . lang .  Object ref = name_ ;  if  ( ref instanceof  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      name_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
1260,"private void maybe Skip Remaining Meta Atom Header Bytes (  Extractor Input input )  throws IO Exception,  Interrupted Exception{ scratch . reset ( 8 )  ;  //  Peek the next 8 bytes which can be either //  ( iso )   [ 1 byte version + 3 bytes flags ]  [ 4 byte size of next atom ]  //  ( qt )    [ 4 byte size of next atom       ]  [ 4 byte hdlr atom type    ]  //  In case of  ( iso )  we need to skip the next 4 bytes .  input . peek Fully ( scratch . data, 0, 8 )  ;  scratch . skip Bytes ( 4 )  ;  if  ( scratch . read Int (  )  ==  Atom . TYPE_hdlr )  {     input . reset Peek Position (  )  ;  } else {     input . skip Fully ( 4 )  ;  }}"
1261,"protected  Write Request send Notification ( @ Nullable final  Bluetooth Gatt Characteristic server Characteristic, @ Nullable final  Data data ) { return  Request . new Notification Request ( server Characteristic, data != null ? data . get Value (  )  : null )  . set Request Handler ( request Handler )  ; }"
1262,public void set Met Hint Text Color ( int color ) { text Color Hint State List =  Color State List . value Of ( color )  ;  reset Hint Text Color (  )  ; }
1263,"public com . anychart . charts .  Stock bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
1264,"public static void put ( @ Non Null final  String key, final int value, final boolean is Commit ) { put ( key, value, is Commit, get Default SP Utils (  )  )  ; }"
1265,public final void set Rewind Increment Ms ( long rewind Ms ) { if  ( this . rewind Ms == rewind Ms )  {     return ;  } this . rewind Ms = rewind Ms ;  invalidate (  )  ; }
1266,"public  File get Extra Odex Dir (  ) { return get Dex Dir ( get Dex Parent Dir (  ) ,  Constant . LOCAL_PLUGIN_INDEPENDENT_EXTRA_ODEX_SUB_DIR )  ; }"
1267,public void set Date Format (  String date Format ) { this . fast Json Config . set Date Format ( date Format )  ; }
1268,"public  String get Name (  ) { int name End = user Id . index Of ( '<' )  ;  if  ( name End < 0 || user Id . index Of ( '>', name End )  < 0 )  {     name End = user Id . length (  )  ;  } name End-- ;  while  ( name End >= 0 && user Id . char At ( name End )  == ' ' )  {     name End-- ;  } int name Begin = 0 ;  while  ( name Begin < name End && user Id . char At ( name Begin )  == ' ' )  {     name Begin++ ;  } return user Id . substring ( name Begin, name End + 1 )  ; }"
1269,public  Draw Order [  ]  get Draw Order (  ) { return m Draw Order ; }
1270,"public static  Map With Proto Values Subject<M> assert That ( @ Nullable  Map<?, M> map ) { return assert About ( protos (  )  )  . that ( map )  ; }"
1271,public void on UI Reset (  Ptr Frame Layout frame ) { m Scale = 1f ;  m Drawable . stop (  )  ; }
1272,"public com . anychart . standalones .  Markers Factory clear (  Number index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . clear ( %s )  ; "", index )  )  ;  return this ; }"
1273,"public com . anychart . charts .  Linear Gauge padding (  String padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "", wrap Quotes ( padding )  )  )  ;  return this ; }"
1274,public  Horizontal Group wrap Reverse (  ) { wrap Reverse = true ;  return this ; }
1275,"public void max Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Width (  )  ; "" )  ; }"
1276,public void write (  Annotations Writer writer )  throws IO Exception{ writer . const Value Index ( get Value (  )  )  ; }
1277,"Type Resolver where (  Map< Type Variable Key, ? extends  Type> mappings ) { return new  Type Resolver ( type Table . where ( mappings )  )  ; }"
1278,"protected void draw Text (  Canvas canvas,  String text, float x, float y,  Paint paint, float extra Angle ) { float angle = -m Renderer . get Orientation (  )  . get Angle (  )  + extra Angle ;  if  ( angle != 0 )  {     // canvas . scale ( 1 / m Scale, m Scale )  ;      canvas . rotate ( angle, x, y )  ;  } draw String ( canvas, text, x, y, paint )  ;  if  ( angle != 0 )  {     canvas . rotate ( -angle, x, y )  ;  // canvas . scale ( m Scale, 1 / m Scale )  ;  }}"
1279,"private static byte [  ]  generate Seed (  ) { try {      Byte Array Output Stream seed Buffer = new  Byte Array Output Stream (  )  ;       Data Output Stream seed Buffer Out = new  Data Output Stream ( seed Buffer )  ;      seed Buffer Out . write Long (  System . current Time Millis (  )  )  ;      seed Buffer Out . write Long (  System . nano Time (  )  )  ;      seed Buffer Out . write Int (  Process . my Pid (  )  )  ;      seed Buffer Out . write Int (  Process . my Uid (  )  )  ;      seed Buffer Out . write ( BUILD_FINGERPRINT_AND_DEVICE_SERIAL )  ;      seed Buffer Out . close (  )  ;      return seed Buffer . to Byte Array (  )  ;  } catch  ( IO Exception e )  {     throw new  Security Exception ( "" Failed to generate seed"", e )  ;  }}"
1280,"public  String send Audio Call Request (  Contact contact ) { return send Video Call Request ( contact, true )  ; }"
1281,public void set On Cluster Item Click Listener (  On Cluster Item Click Listener<T> listener ) { m On Cluster Item Click Listener = listener ;  m Renderer . set On Cluster Item Click Listener ( listener )  ; }
1282,protected  Bitmap get Bitmap ( int index ) { return circle Bitmaps [ index % circle Bitmaps . length ]  ; }
1283,"public com . anychart . charts .  Sunburst legend (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . legend ( %s )  ; "", settings )  )  ;  return this ; }"
1284,"private static void assert Mean ( int x, int y ) { int expected Mean = compute Mean Safely ( x, y )  ;  assert Equals ( expected Mean,  Int Math . mean ( x, y )  )  ;  assert Equals ( "" The mean of x and y should equal the mean of y and x"", expected Mean,  Int Math . mean ( y, x )  )  ; }"
1285,"public com . anychart . charts .  Sunburst animation (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . animation ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1286,"public void get Minimum (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Minimum (  )  ; "" )  ; }"
1287,public final int get Major (  ) { return major ; }
1288,public void set Negative Button Action (  Button Action negative Button Action ) { this . negative Button Action = negative Button Action ; }
1289,"public  Nitrite Collection get Collection (  String name ) { validate Collection Name ( name )  ;  if  ( store != null )  {      Nitrite Map< Nitrite Id,  Document> map Store = store . open Map ( name )  ;       Nitrite Collection collection =  Collection Factory . open ( map Store, context )  ;      context . get Collection Registry (  )  . add ( name )  ;      return collection ;  } else {     log . error ( "" Underlying store is null .   Nitrite has not been initialized properly . "" )  ;  } return null ; }"
1290,public void set Direction (  Legend Direction pos ) { m Direction = pos ; }
1291,"public com . anychart . charts .  Stock margin (  Number value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
1292,public void set Magic Number ( int magic Number ) { this . magic Number = magic Number ; }
1293,private  String get Text Value For Frame (  Abstract ID3v2 Frame frame ) { return frame . get Body (  )  . get User Friendly Value (  )  ; }
1294,"static void save Sonic Data (  String session Id,  String e Tag,  String template Tag,  String html Sha1, long html Size,  Map< String,  List< String>> headers ) { if  (  Sonic Utils . should Log (  Log . INFO )  )  {      Sonic Utils . log ( TAG,  Log . INFO, ""save Sonic Data session Id = "" + session Id + "", e Tag = "" + e Tag + "", template Tag = "" + template Tag + "",html Sha1 = "" + html Sha1 + "", html Size = "" + html Size )  ;  }  Sonic Data Helper .  Session Data session Data = new  Sonic Data Helper .  Session Data (  )  ;  session Data . session Id = session Id ;  handle Cache Control ( headers, session Data )  ;  session Data . e Tag = e Tag ;  session Data . template Tag = template Tag ;  session Data . html Sha1 = html Sha1 ;  session Data . html Size = html Size ;  session Data . template Update Time =  System . current Time Millis (  )  ;   Sonic Data Helper . save Session Data ( session Id, session Data )  ; }"
1295,"public com . anychart . charts .  Sankey margin (  String value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
1296,"public com . anychart . core . annotations .  Trend Channel bounds ( com . anychart . core . utils .  Bounds bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
1297,Object get (  Object instance )  throws  Illegal Access Exception{ return field . get ( instance )  ; }
1298,"public com . anychart . core . utils .  Margin margin (  ) { return new com . anychart . core . utils .  Margin ( js Base + "" . margin (  ) "" )  ; }"
1299,private static  Edit next Edit (  Iterator< Edit> it ) { return  ( it . has Next (  )  ? it . next (  )  : END_EDIT )  ; }
1300,"public com . anychart . core . utils .  Legend Item Settings font Size (  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Size ( %s )  ; "", size )  )  ;  return this ; }"
1301,"Map< String,  String> get Shadow Picker Map (  ) { return  Collections . empty Map (  )  ; }"
1302,public static final boolean is Index File (  String file Name ) { //  Atomic file backups add additional suffixes to the file name .  return file Name . starts With ( FILE_NAME_ATOMIC )  ; }
1303,"static final I Plugin Client probe Plugin Client By Pid ( final int pid, final  Plugin Binder Info info ) { return read Process Client Lock ( new  Action<I Plugin Client> (  )  {     @ Override     public I Plugin Client call (  )  {         for  (  Process Client Record r : ALL . values (  )  )  {             if  ( r . pid != pid )  {                 continue ;              }             if  ( !is Binder Alive ( r )  )  {                 return null ;              }             if  ( !r . binder . ping Binder (  )  )  {                 return null ;              }             info . pid = r . pid ;              info . index = r . index ;              return r . client ;          }         return null ;      } } )  ; }"
1304,"public com . anychart . core .  No Data Settings no Data (  ) { return new com . anychart . core .  No Data Settings ( js Base + "" . no Data (  ) "" )  ; }"
1305,public void set Board Edge ( int board Edge ) { m Board Edge = board Edge ;  update Board Spaces (  )  ; }
1306,"public void update Projection Matrix ( int width, int height ) { m Camera . set Projection Matrix ( width, height )  ; }"
1307,"public static  Function< Item, T Value> get Field ( final  String field ) { return new  Field Value Getter<> ( field )  ; }"
1308,public void set Grid Line Width ( float width ) { m Grid Line Width =  Utils . convert Dp To Pixel ( width )  ; }
1309,public  Text get Title (  ) { return title ; }
1310,public boolean is Valid Perf Metric (  ) { // TODO ( b/113113391 ) :  Add more  Gauge Metric validation .  return gauge Metric . has Session Id (  )  &&  ( gauge Metric . get Cpu Metric Readings Count (  )  > 0 || gauge Metric . get Android Memory Readings Count (  )  > 0 ||  ( gauge Metric . has Gauge Metadata (  )  && gauge Metric . get Gauge Metadata (  )  . has Max App Java Heap Memory Kb (  )  )  )  ; }
1311,public  Prop Groups View Model_ something ( int something ) { assigned Attributes_epoxy Generated Model . set ( 1 )  ;  assigned Attributes_epoxy Generated Model . clear ( 0 )  ;  this . something_ Char Sequence =  (  Char Sequence )  null ;  on Mutation (  )  ;  this . something_ Int = something ;  return this ; }
1312,public void set Text Padding ( int text Padding ) { this . text Padding = text Padding ; }
1313,"public com . anychart . core . stock . scrollerseries .  Spline Area fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
1314,"public  Result link (  String target )  throws IO Exception{ if  ( !target . starts With (  Constants . R_REFS )  )      throw new  Illegal Argument Exception (  Message Format . format ( J Git Text . get (  )  . illegal Argument Not A,  Constants . R_REFS )  )  ;  if  ( check Conflicting && get Ref Database (  )  . is Name Conflicting ( get Name (  )  )  )      return  Result . LOCK_FAILURE ;  try {     if  ( !try Lock ( false )  )          return  Result . LOCK_FAILURE ;      final  Ref old = get Ref Database (  )  . exact Ref ( get Name (  )  )  ;      if  ( old != null && old . is Symbolic (  )  )  {         final  Ref dst = old . get Target (  )  ;          if  ( target . equals ( dst . get Name (  )  )  )              return result =  Result . NO_CHANGE ;      }     if  ( old != null && old . get Object Id (  )  != null )          set Old Object Id ( old . get Object Id (  )  )  ;      final  Ref dst = get Ref Database (  )  . exact Ref ( target )  ;      if  ( dst != null && dst . get Object Id (  )  != null )          set New Object Id ( dst . get Object Id (  )  )  ;      return result = do Link ( target )  ;  } catch  ( IO Exception x )  {     result =  Result . IO_FAILURE ;      throw x ;  } finally {     unlock (  )  ;  }}"
1315,public void set Debug ( boolean enabled ) { debug = enabled ;  if  ( enabled )       Stage . debug = true ; }
1316,"public static int get Version Code (  Context context ) { try {      Package Info pi = context . get Package Manager (  )  . get Package Info ( context . get Package Name (  ) , /* flags= */     0 )  ;      return pi . version Code ;  } catch  (  Name Not Found Exception e )  {     return 0 ;  }}"
1317,void setup (  ) { shard Manager = new  Test Shard Manager (  )  ; }
1318,"public static  Object Animator of Int ( @ Nullable T target, @ Non Null  Property<T,  Integer> x Property, @ Non Null  Property<T,  Integer> y Property, @ Non Null  Path path ) { if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . LOLLIPOP )  {     return  Object Animator Compat Lollipop . of Int ( target, x Property, y Property, path )  ;  } else {     return  Object Animator Compat Base . of Int ( target, x Property, y Property, path )  ;  }}"
1319,"public QMUI Alpha Image Button add Left Back Image Button (  ) { if  ( m Clear Left Padding When Add Left Back View )  {     QMUI View Helper . set Padding Left ( this, 0 )  ;  } if  ( m Left Back View Width > 0 )  {     return add Left Image Button ( m Left Back Drawable Res, true, R . id . qmui_topbar_item_left_back, m Left Back View Width, -1 )  ;  } return add Left Image Button ( m Left Back Drawable Res, R . id . qmui_topbar_item_left_back )  ; }"
1320,"public  Server Handshake Builder on Websocket Handshake Received As Server (  Web Socket conn,  Draft draft,  Client Handshake request )  throws  Invalid Data Exception{ return new  Handshake Impl1 Server (  )  ; }"
1321,"public static  Scope send Event ( final  Buck Event Bus event Bus, int blob Count, long size Bytes ) { final  Started started Event = new  Started ( blob Count, size Bytes )  ;  event Bus . post ( started Event )  ;  return  (  )  -> event Bus . post ( new  Finished ( started Event )  )  ; }"
1322,"public  Immutable List< Build Rule> get Rules To Build (  Iterable<? extends  Build Target> targetish ) { //  It is important to use this logic to determine the set of rules to build rather than // build . get Action Graph (  )  . get Nodes With No Incoming Edges (  )  because, due to graph enhancement, // there could be disconnected subgraphs in the  Dependency Graph that we do not want to build .   Immutable Set< Build Target> targets To Build =  Immutable Set . copy Of ( targetish )  ;   Immutable List< Build Rule> rules To Build =  Immutable List . copy Of ( targets To Build . stream (  )  . map (  build Target -> get Graph Builder (  )  . require Rule ( build Target )  )  . collect (  Immutable Set . to Immutable Set (  )  )  )  ;  //  Calculate and post the number of rules that need to built .  int num Rules = build Engine . get Num Rules To Build ( rules To Build )  ;  get Execution Context (  )  . get Buck Event Bus (  )  . post (  Build Event . rule Count Calculated ( targets To Build, num Rules )  )  ;  return rules To Build ; }"
1323,public void set Cannonical Url (  String cannonical Url ) { this . cannonical Url = cannonical Url ; }
1324,"public com . anychart . core . resource .  Grid overlay (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . overlay ( %s )  ; "", settings )  )  ;  return this ; }"
1325,public void invalidate Render Offset (  ) { render Offset Dirty = true ; }
1326,public  Animation Builder duration ( long duration ) { m Duration = duration ;  return this ; }
1327,public void set Response Content Type ( @ Nullable  String content Type ) { network Metric Builder . set Response Content Type ( content Type )  ; }
1328,"public com . anychart . core . grids .  Polar x Minor Grid (  Number index ) { return new com . anychart . core . grids .  Polar (  String . format (  Locale . US, js Base + "" . x Minor Grid ( %s ) "", index )  )  ; }"
1329,"public void test Deserialize Random String (  )  throws  Authentication Exception{ final  String ramdom String = ""abc"" ;  final  File Mock Context mock Context = new  File Mock Context ( get Instrumentation (  )  . get Context (  )  )  ;  final  Default Token Cache Store mock Cache = new  Default Token Cache Store ( mock Context )  ;  final  Authentication Context context = get Authentication Context ( mock Context, VALID_AUTHORITY, false, mock Cache )  ;  context . deserialize ( ramdom String )  ; }"
1330,public boolean get Scale Down Inside Borders (  ) { return m Scale Down Inside Borders ; }
1331,"public com . anychart . charts .  Tree Map padding (  String value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
1332,public int read Array (  ) { check Type ( ENCODED_ARRAY )  ;  type = MUST_READ ;  return  Leb128 . read Unsigned Leb128 ( in )  ; }
1333,"public static boolean is Equals (  Array List<V> actual,  Array List<V> expected ) { if  ( actual == null )  {     return expected == null ;  } if  ( expected == null )  {     return false ;  } if  ( actual . size (  )  != expected . size (  )  )  {     return false ;  } for  ( int i = 0 ;  i < actual . size (  )  ;  i++ )  {     if  ( ! Object Utils . is Equals ( actual . get ( i ) , expected . get ( i )  )  )  {         return false ;      } } return true ; }"
1334,"static final  String attach Stub Process ( int pid, int index, I Binder binder, I Plugin Client client,  String def ) { // 检测状态是否一致  Process Record r = STUB_PROCESSES [ index ]  ;  synchronized  ( r )  {     if  ( ! Text Utils . is Empty ( def )  )  {         if  ( LOG )  {              Log Debug . d ( PLUGIN_TAG, ""attach process: allocate now"" )  ;          }         r . allocate ( def )  ;      }     if  ( r . state !=  Stub Process State . STATE_ALLOCATED )  {         if  ( LOG )  {              Log Debug . d ( PLUGIN_TAG, ""attach process: state not allocated: state="" + r . state )  ;          }         return null ;      }     r . set Running ( pid )  ;      r . set Client ( binder, client )  ;      return r . plugin ;  }}"
1335,public void info (  String message ) { logger . info ( message )  ; }
1336,"public float get Translation Y (  ) { return calc Average ( m Detector . get Current Y (  ) , m Detector . get Pointer Count (  )  )  - calc Average ( m Detector . get Start Y (  ) , m Detector . get Pointer Count (  )  )  ; }"
1337,protected  String get Array Start (  ) { return array Start ; }
1338,"public com . anychart . charts .  Linear Gauge padding (  Number value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
1339,public  Validator get On Read Validator (  ) { return m On Read Validator ; }
1340,"public boolean collapse Group ( int group Position,  Object payload ) { return  ( m Wrapper Adapter != null )  && m Wrapper Adapter . collapse Group ( group Position, false, payload )  ; }"
1341,State Handler consume State Handler (  ) { final  State Handler state Handler = m State Handler ;  m State Handler = null ;  return state Handler ; }
1342,public final int hash Code (  ) { return  System . identity Hash Code ( this )  ; }
1343,"public com . anychart . core . annotations .  Fibonacci Timezones levels (  String [  ]  levels List ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . levels ( %s )  ; "", array To String Wrap Quotes ( levels List )  )  )  ;  return this ; }"
1344,"public com . anychart . core . ui .  Tooltip tooltip (  ) { return new com . anychart . core . ui .  Tooltip ( js Base + "" . tooltip (  ) "" )  ; }"
1345,"public com . anychart . charts .  Waterfall x Zoom (  Number settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Zoom ( %s )  ; "", settings )  )  ;  return this ; }"
1346,"public com . anychart . core . resource .  Activities labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1347,"public static T find Fragment (  Fragment Manager fragment Manager,  String fragment Tag ) { return find Stack Fragment ( null, fragment Tag, fragment Manager )  ; }"
1348,public  Lazy<T> get (  ) { return  Double Check . lazy ( provider )  ; }
1349,"public boolean add Reftable (  Writer w )  throws IO Exception{  Lock File lock = new  Lock File ( stack Path )  ;  try {     if  ( !lock . lock For Append (  )  )  {         return false ;      }     if  ( !is Up To Date (  )  )  {         return false ;      }      String fn = filename ( next Update Index (  ) , next Update Index (  )  )  ;       File tmp Table =  File . create Temp File ( fn + ""_"", "" . ref"", stack Path . get Parent File (  )  )  ;       Reftable Writer .  Stats s ;      try  (  File Output Stream fos = new  File Output Stream ( tmp Table )  )  {          Reftable Writer rw = new  Reftable Writer ( reftable Config (  ) , fos )  ;          w . call ( rw )  ;          rw . finish (  )  ;          s = rw . get Stats (  )  ;      }     if  ( s . min Update Index (  )  < next Update Index (  )  )  {         return false ;      }     //  The spec says to name log-only files with  . log, which is somewhat     // pointless given compaction, but we do so anyway .      fn += s . ref Count (  )  > 0 ? "" . ref"" : "" . log"" ;       File dest = new  File ( reftable Dir, fn )  ;       File Utils . rename ( tmp Table, dest,  Standard Copy Option . ATOMIC_MOVE )  ;      lock . write (  ( fn + ""\n"" )  . get Bytes ( UTF_8 )  )  ;      if  ( !lock . commit (  )  )  {          File Utils . delete ( dest )  ;          return false ;      }     reload (  )  ;      auto Compact (  )  ;  } finally {     lock . unlock (  )  ;  } return true ; }"
1350,public void set Dot Size Radius Px ( final float dot Size Radius Px ) { m Dot Size Radius Px = dot Size Radius Px ; }
1351,public int get Orientation (  ) { return super . get Orientation (  )  ; }
1352,"public  Task< Long> get Model Download Id ( @ Non Null  String model Name, @ Nullable  Task< Custom Model> get Model Task ) { if  ( get Model Task == null )  {      Custom Model local Model = shared Preferences Util . get Downloading Custom Model Details ( model Name )  ;      if  ( local Model != null )  {         return  Tasks . for Result ( local Model . get Download Id (  )  )  ;      }     return  Tasks . for Result ( 0 L )  ;  } long download Id = 0 ;  while  ( download Id == 0 && !get Model Task . is Complete (  )  )  {      Custom Model local Model = shared Preferences Util . get Downloading Custom Model Details ( model Name )  ;      if  ( local Model != null )  {         download Id = local Model . get Download Id (  )  ;      } } return  Tasks . for Result ( download Id )  ; }"
1353,"public static int get Default Text Color Highlight (  Context context ) { return get Default Text Attribute ( context, android . R . attr . text Color Highlight )  . get Default Color (  )  ; }"
1354,"public com . anychart . charts .  Mekko palette (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1355,public int hash Code (  ) { return get Base Font (  )  . hash Code (  )  ; }
1356,"public com . anychart . core . utils .  Padding bottom (  String bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", wrap Quotes ( bottom )  )  )  ;  return this ; }"
1357,"public  String [  ]  scan Field String Array ( char [  ]  field Name, int arg Types Count,  Symbol Table type Symbol Table ) { throw new  Unsupported Operation Exception (  )  ; }"
1358,"public  Stored Config get System Config (  )  throws  Config Invalid Exception, IO Exception{  File Based Config c = system Config . get (  )  ;  if  ( c == null )  {     system Config . compare And Set ( null, open System Config ( get J Git Config (  ) , FS . DETECTED )  )  ;      c = system Config . get (  )  ;  } update All ( c )  ;  return c ; }"
1359,"public static  Old Concurrent Hash Multiset<E> create (  ) { return new  Old Concurrent Hash Multiset<E> ( new  Concurrent Hash Map<E,  Integer> (  )  )  ; }"
1360,"protected  String standard To String (  ) { return get Key (  )  + ""="" + get Value (  )  ; }"
1361,"public void test Index Only (  )  throws IO Exception,  No Filepattern Exception,  Git API Exception{  List< File> attr Files = new  Array List<> (  )  ;  attr Files . add ( write Global Attribute File ( ""global Attributes File"", ""* . txt -custom2"" )  )  ;  attr Files . add ( write Attributes File ( "" . git/info/attributes"", ""* . txt eol=crlf"" )  )  ;  attr Files . add ( write Attributes File ( "" . gitattributes"", ""* . txt custom=root"" )  )  ;  attr Files . add ( write Attributes File ( ""level1/ . gitattributes"", ""* . txt text"" )  )  ;  attr Files . add ( write Attributes File ( ""level1/level2/ . gitattributes"", ""* . txt -delta"" )  )  ;  write Trash File ( ""l0 . txt"", """" )  ;  write Trash File ( ""level1/l1 . txt"", """" )  ;  write Trash File ( ""level1/level2/l2 . txt"", """" )  ;  git . add (  )  . add Filepattern ( "" . "" )  . call (  )  ;  //  Modify all attributes for  (  File attr File : attr Files )  attr File . delete (  )  ;  begin Walk (  )  ;  assert Entry ( M, "" . gitattributes"" )  ;  assert Entry ( F, ""l0 . txt"", as Set ( CUSTOM_ROOT )  )  ;  assert Entry ( D, ""level1"" )  ;  assert Entry ( M, ""level1/ . gitattributes"" )  ;  assert Entry ( F, ""level1/l1 . txt"", as Set ( CUSTOM_ROOT, TEXT_SET )  )  ;  assert Entry ( D, ""level1/level2"" )  ;  assert Entry ( M, ""level1/level2/ . gitattributes"" )  ;  assert Entry ( F, ""level1/level2/l2 . txt"", as Set ( CUSTOM_ROOT, TEXT_SET, DELTA_UNSET )  )  ;  end Walk (  )  ; }"
1362,public void set Option Model List (  List< Video Option Model> option Model List ) { this . option Model List = option Model List ; }
1363,public void set Custom Piece Place Positions (  Array List< Point F> custom Piece Place Positions ) { if  ( this . custom Piece Place Positions . equals ( custom Piece Place Positions )  )      return ;  this . custom Piece Place Positions = custom Piece Place Positions ;  clear Pieces (  )  ;  to Layout (  )  ; }
1364,"public final T execute As Blocking (  ) { return build Chain ( stor IOSQ Lite . interceptors (  ) , get Real Call Interceptor (  )  )  . proceed ( this )  ; }"
1365,public static  Camera Fragment new Instance (  ) { return new  Camera Fragment (  )  ; }
1366,public final void await Terminated (  ) { delegate . await Terminated (  )  ; }
1367,"public  Immutable Map< Path,  Path> create Relative Map (  Path base Path,  Iterable< Source Path> source Paths ) { return resolver . create Relative Map ( base Path, source Paths )  ; }"
1368,public boolean remove ( @ Nullable  Object o ) { final  Monitor monitor = this . monitor ;  monitor . enter (  )  ;  try {     return q . remove ( o )  ;  } finally {     monitor . leave (  )  ;  }}
1369,public static boolean is MPEG Frame (  Byte Buffer bb ) { int position = bb . position (  )  ;  return  (  (  ( bb . get ( position )  & SYNC_BYTE1 )  == SYNC_BYTE1 )  &&  (  ( bb . get ( position + 1 )  & SYNC_BYTE2 )  == SYNC_BYTE2 )  &&  (  ( bb . get ( position + 2 )  & SYNC_BIT_ANDSAMPING_BYTE3 )  != SYNC_BIT_ANDSAMPING_BYTE3 )  )  ; }
1370,"public synchronized void set Persistence Enabled ( boolean is Enabled ) { assert Unfrozen ( ""set Persistence Enabled"" )  ;  this . config . set Persistence Enabled ( is Enabled )  ; }"
1371,private int get Scroll Velocity (  ) { m Velocity Tracker . compute Current Velocity ( 1000 )  ;  int velocity =  ( int )  m Velocity Tracker . get X Velocity (  )  ;  return  Math . abs ( velocity )  ; }
1372,"public boolean run Next (  ) { if  ( !has Queued Tasks (  )  )  {     return false ;  } if  (  Thread . current Thread (  )  . equals ( executor Thread )  )  {      Logger . info ( ""ignoring request to execute task - called from executor's own thread"" )  ;      return false ;  }  Runnable task = deferred Tasks . poll (  )  ;  task . run (  )  ;  return true ; }"
1373,"public int show (  Fragment Transaction transaction,  String tag ) { m Dismissed = false ;  m Shown By Me = true ;  transaction . add ( this, tag )  ;  m View Destroyed = false ;  return m Back Stack Id = transaction . commit (  )  ; }"
1374,"public  Metadata Container get Extended Content Description (  ) { return  (  Metadata Container )  get First ( GUID . GUID_EXTENDED_CONTENT_DESCRIPTION,  Metadata Container . class )  ; }"
1375,"protected final void update App Key List ( final int net Key Index, @ Non Null final  List< Integer> indexes, @ Non Null final  List< Application Key> key Indexes ) { if  ( m Added App Keys . is Empty (  )  )  {     m Added App Keys . add All ( add App Key List ( indexes, new  Array List<> (  )  )  )  ;  } else {     final  Array List< Node Key> temp List = new  Array List<> ( m Added App Keys )  ;      for  (  Application Key application Key : key Indexes )  {         if  ( application Key . get Bound Net Key Index (  )  == net Key Index )  {             for  (  Node Key node Key : m Added App Keys )  {                 if  ( node Key . get Index (  )  == application Key . get Key Index (  )  )  {                     temp List . remove ( node Key )  ;                  }             }         }     }     m Added App Keys . clear (  )  ;      add App Key List ( indexes, temp List )  ;      m Added App Keys . add All ( temp List )  ;  }}"
1376,"public static  Fresco Vito Provider .  Implementation create Default Provider Implementation ( final  Resources resources, final  Image Pipeline image Pipeline, @ Nullable final  Supplier< Boolean> debug Overlay Enabled Supplier ) { final  Supplier< Boolean> use Native Code =  Suppliers . BOOLEAN_TRUE ;  return new  Default Fresco Vito Provider ( resources, image Pipeline, image Pipeline . get Config (  )  . get Executor Supplier (  )  . for Lightweight Background Tasks (  ) ,  Ui Thread Immediate Executor Service . get Instance (  ) , create Image Pipeline Utils ( use Native Code,  Suppliers . BOOLEAN_FALSE ) , debug Overlay Enabled Supplier )  ; }"
1377,public int get Publish Retransmit Count (  ) { return publish Retransmit Count ; }
1378,public boolean contains (  Class ex Type ) { if  ( ex Type == null )  {     return false ;  } if  ( ex Type . is Instance ( this )  )  {     return true ;  }  Throwable cause = get Cause (  )  ;  if  ( cause == this )  {     return false ;  } if  ( cause instanceof  Nested Runtime Exception )  {     return  (  (  Nested Runtime Exception )  cause )  . contains ( ex Type )  ;  } else {     while  ( cause != null )  {         if  ( ex Type . is Instance ( cause )  )  {             return true ;          }         if  ( cause . get Cause (  )  == cause )  {             break ;          }         cause = cause . get Cause (  )  ;      }     return false ;  }}
1379,private void check And Dispatch Load More Event ( int position ) { if  ( position == get Count (  )  - 1 && is Load More Request Listener Set (  )  )  {     dispatch Load More Request (  )  ;  }}
1380,"public com . anychart . core .  State Settings stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1381,"public com . anychart . charts .  Polar padding (  String value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, value4 )  )  ;  return this ; }"
1382,"public void clear (  ) {  Array List< Entry<K, V>> old Exclusives ;   Array List< Entry<K, V>> old Entries ;  synchronized  ( this )  {     old Exclusives = m Exclusive Entries . clear (  )  ;      old Entries = m Cached Entries . clear (  )  ;      make Orphans ( old Entries )  ;  } maybe Close ( old Entries )  ;  maybe Notify Exclusive Entry Removal ( old Exclusives )  ;  maybe Update Cache Params (  )  ; }"
1383,"public  Realm Query<E> equal To (  String field Name, @ Nullable  Double value ) { realm . check If Valid (  )  ;  return equal To Without Thread Validation ( field Name, value )  ; }"
1384,"public com . anychart . core . resource .  Activities stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
1385,"public com . anychart . core . axes .  Circular Ticks position (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . position ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
1386,"public static  Cancellable from Input Stream (  Input Stream stream,  On Composition Loaded Listener l ) {  Listener Adapter listener = new  Listener Adapter ( l )  ;   Lottie Composition Factory . from Json Input Stream ( stream, null )  . add Listener ( listener )  ;  return listener ; }"
1387,public  Anim Dialog Utils set Anim Back View Transparent ( boolean anim Back View Transparent ) { is Anim Back View Transparent = anim Back View Transparent ;  return this ; }
1388,"public com . anychart . core . stock . scrollerseries .  Candlestick falling Stroke (  String value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( value ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1389,public void validate (  ) { validate ( false )  ; }
1390,"private void handle End Of Stream (  )  throws IO Exception{ try {     engine . close Inbound (  )  ;  } catch  (  Exception e )  {     log . error ( "" This engine was forced to close inbound, without having received the proper SSL/TLS close notification message from the peer, due to end of stream . "" )  ;  } close Connection (  )  ; }"
1391,"public void test Select Tracks Within Capabilities And Force Highest Bitrate Select Higher Bitrate (  )  throws  Exception{  Format lower Bitrate Format = build Audio Format With Bitrate ( ""lower Bitrate Format"", 5000 )  ;   Format higher Bitrate Format = build Audio Format With Bitrate ( ""higher Bitrate Format"", 15000 )  ;   Format exceeds Bitrate Format = build Audio Format With Bitrate ( ""exceeds Bitrate Format"", 30000 )  ;   Track Group Array track Groups = wrap Formats ( lower Bitrate Format, higher Bitrate Format, exceeds Bitrate Format )  ;   Map< String,  Integer> mapped Capabilities = new  Hash Map<> (  )  ;  mapped Capabilities . put ( lower Bitrate Format . id, FORMAT_HANDLED )  ;  mapped Capabilities . put ( higher Bitrate Format . id, FORMAT_HANDLED )  ;  mapped Capabilities . put ( exceeds Bitrate Format . id, FORMAT_EXCEEDS_CAPABILITIES )  ;   Renderer Capabilities mapped Audio Renderer Capabilities = new  Fake Mapped Renderer Capabilities ( C . TRACK_TYPE_AUDIO, mapped Capabilities )  ;  track Selector . set Parameters ( new  Parameters Builder (  )  . set Force Highest Supported Bitrate ( true )  . build (  )  )  ;   Track Selector Result result = track Selector . select Tracks ( new  Renderer Capabilities [  ]  { mapped Audio Renderer Capabilities }, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, higher Bitrate Format )  ; }"
1392,"public com . anychart . core . annotations .  Infinite Line min Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", height )  )  ;  return this ; }"
1393,"public void look At (  Vector3 position,  Vector3 up ) { dir . set ( position )  . sub ( this . position )  . nor (  )  ;  set Rotation ( dir, up )  ; }"
1394,"public static  Progress Request Body create Progress Request (  Request Body request Body,  Progress Listener listener ) { return new  Progress Request Body ( request Body, listener )  ; }"
1395,"public com . anychart . charts .  Polar x Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1396,"public  Hash Map< String,  Service Info> get Service Map (  ) { return m Services ; }"
1397,"public com . anychart . charts .  Gantt background (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1398,"protected void add Subscription Address ( @ Non Null final UUID label Uuid, final int address ) { if  ( !label Uuids . contains ( label Uuid )  )  {     label Uuids . add ( label Uuid )  ;  } if  ( !subscription Addresses . contains ( address )  )  {     subscription Addresses . add ( address )  ;  }}"
1399,"public  Map Provider Factory<K, V> build (  ) { return new  Map Provider Factory<> ( map )  ; }"
1400,public boolean is Zero (  ) { return  ( x == 0 && y == 0 && z == 0 )  ; }
1401,"public com . anychart . charts .  Mekko parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
1402,public void set Focused Window (  View view ) { m Focus Lock . write Lock (  )  . lock (  )  ;  try {     m Focused Window = view == null ? null : view . get Root View (  )  ;  } finally {     m Focus Lock . write Lock (  )  . unlock (  )  ;  } fire Focus Changed Event (  )  ; }
1403,"public com . anychart . core . annotations .  Fibonacci Retracement min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
1404,private void set Text Color ( int color ) { m Text Color = color ;  m Good . set Text Color ( color )  ; }
1405,"public void test Unparsed Uninteresting Commit With Two Parents (  )  throws  Exception{  Object Id a = unparsed Commit (  )  ;   Object Id b = unparsed Commit ( a )  ;   Object Id c1 = unparsed Commit ( b )  ;   Object Id c2 = unparsed Commit ( b )  ;   Object Id d = unparsed Commit ( c1 )  ;   Object Id e = unparsed Commit ( c1, c2 )  ;   Object Id u A = unparsed Commit ( a, b )  ;   Object Id u B1 = unparsed Commit ( u A, c2 )  ;   Object Id u B2 = unparsed Commit ( u A, d )  ;   Object Id uninteresting = unparsed Commit ( u B1, u B2 )  ;  rw . reset (  )  ;  rw . set First Parent ( true )  ;   Rev Commit parsed E = rw . parse Commit ( e )  ;  mark Start ( parsed E )  ;  mark Uninteresting ( rw . parse Commit ( uninteresting )  )  ;  assert Commit ( parsed E, rw . next (  )  )  ;  assert Null ( rw . next (  )  )  ; }"
1406,"public com . anychart . charts .  Pareto y Scale ( com . anychart . scales .  Base settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
1407,public void set Companion Slots (  Collection< Companion Ad Slot> companion Slots ) { ad Display Container . set Companion Slots ( companion Slots )  ; }
1408,"private void download Start (  ) { new  Thread ( new  Runnable (  )  {     @ Override     public void run (  )  {         try {              Request request = new  Request .  Builder (  )  . url ( m New Download Url )  . build (  )  ;               Response response = m Ok Http Client . new Call ( request )  . execute (  )  ;               Input Stream is = response . body (  )  . byte Stream (  )  ;              //为了方便就不动态申请权限了,直接将文件放到 Cache Dir (  ) 中              File file = new  File ( get Cache Dir (  ) , ""download"" )  ;               File Output Stream fos = new  File Output Stream ( file )  ;               Buffered Input Stream bis = new  Buffered Input Stream ( is )  ;              byte [  ]  buffer = new byte [ 1024 ]  ;              int len ;              while  (  ( len = bis . read ( buffer )  )  != -1 )  {                 fos . write ( buffer, 0, len )  ;              }             fos . flush (  )  ;              fos . close (  )  ;              bis . close (  )  ;              is . close (  )  ;          } catch  ( IO Exception e )  {             e . print Stack Trace (  )  ;              //当外部发生错误时,使用此方法可以通知所有监听器的 on Error 方法              Progress Manager . get Instance (  )  . notify On Erorr ( m New Download Url, e )  ;          }     } } )  . start (  )  ; }"
1409,"public  List< Span> get Spans ( int start, int end ) { final int length = length (  )  ;  if  ( !is Position Valid ( length, start, end )  )  {     // we might as well throw here     return  Collections . empty List (  )  ;  } // all requested if  ( start == 0 && length == end )  {     // but also copy  ( do not allow external modification )      final  List< Span> list = new  Array List<> ( spans )  ;       Collections . reverse ( list )  ;      return  Collections . unmodifiable List ( list )  ;  } final  List< Span> list = new  Array List<> ( 0 )  ;  final  Iterator< Span> iterator = spans . descending Iterator (  )  ;   Span span ;  while  ( iterator . has Next (  )  )  {     span = iterator . next (  )  ;      // if span . end is <= end -> check if it's after range . start     if  (  ( span . start >= start && span . start < end )  ||  ( span . end <= end && span . end > start )  ||  ( span . start < start && span . end > end )  )  {         list . add ( span )  ;      } } return  Collections . unmodifiable List ( list )  ; }"
1410,"private static void check Unmodifiable Multimap (  Multimap< String,  Integer> multimap, boolean permits Duplicates ) { check Unmodifiable Multimap ( multimap, permits Duplicates, null, null )  ; }"
1411,private static  String get Path For Ropc ( @ Non Null final  List< String> path Segments ) { final  String provided Path = path Segments . get ( 0 )  ;  if  ( provided Path . equals (  Azure Active Directory Audience . ALL )  || provided Path . equals (  Azure Active Directory Audience . CONSUMERS )  )  {     return  Azure Active Directory Audience . ORGANIZATIONS ;  } else {     return provided Path ;  }}
1412,"public void min Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Height (  )  ; "" )  ; }"
1413,"public com . anychart . core . stock . scrollerseries .  Step Line allow Point Settings (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . allow Point Settings ( %s )  ; "", enabled )  )  ;  return this ; }"
1414,"public void fix (  String name ) {  String name2 = to Jvm Name ( name )  ;  super . put ( name2, name2 )  ; }"
1415,"public void get (  String field ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get ( %s )  ; "", wrap Quotes ( field )  )  )  ; }"
1416,boolean is Debug Enabled (  ) { return false ; }
1417,public int get Worker Size Value (  ) { return worker Size_ ; }
1418,"int inflate ( final  Pack pack, long position, final byte [  ]  dstbuf, boolean header Only )  throws IO Exception,  Data Format Exception{ prepare Inflater (  )  ;  pin ( pack, position )  ;  position += window . set Input ( position, inf )  ;  for  ( int dstoff = 0 ;   ;   )  {     int n = inf . inflate ( dstbuf, dstoff, dstbuf . length - dstoff )  ;      dstoff += n ;      if  ( inf . finished (  )  ||  ( header Only && dstoff == dstbuf . length )  )          return dstoff ;      if  ( inf . needs Input (  )  )  {         pin ( pack, position )  ;          position += window . set Input ( position, inf )  ;      } else if  ( n == 0 )          throw new  Data Format Exception (  )  ;  }}"
1419,public  String get Host Build ID (  ) { return host Build ID ; }
1420,public  Legend Direction get Direction (  ) { return m Direction ; }
1421,public void set Min Zoom ( float min ) { min Scale = min ;  super Min Scale = SUPER_MIN_MULTIPLIER * min Scale ; }
1422,"public  Object exec Id Call (  Id Function Object f,  Context cx,  Scriptable scope,  Scriptable this Obj,  Object [  ]  args ) { throw f . unknown (  )  ; }"
1423,public static  Builder builder (  ) { return new  Builder (  )  ; }
1424,"public void finish To Value And Closer ( final  Value And Closer Consumer<? super V> consumer,  Executor executor ) { check Not Null ( consumer )  ;  if  ( !compare And Update State ( OPEN, WILL_CREATE_VALUE_AND_CLOSER )  )  {     switch ( state . get (  )  )  {         case SUBSUMED:             throw new  Illegal State Exception ( "" Cannot call finish To Value And Closer (  )  after deriving another step"" )  ;          case WILL_CLOSE:         case CLOSING:         case CLOSED:             throw new  Illegal State Exception ( "" Cannot call finish To Value And Closer (  )  after calling finish To Future (  ) "" )  ;          case WILL_CREATE_VALUE_AND_CLOSER:             throw new  Illegal State Exception ( "" Cannot call finish To Value And Closer (  )  twice"" )  ;          case OPEN:             break ;      }     throw new  Assertion Error ( state )  ;  } future . add Listener ( new  Runnable (  )  {     @ Override     public void run (  )  {         provide Value And Closer ( consumer,  Closing Future . this )  ;      } }, executor )  ; }"
1425,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
1426,"public static void create (  Android Platform Target android Platform Target,  Immutable List< String> java Runtime Launcher,  Project Filesystem filesystem,  Optional< Path> proguard Jar Override,  String proguard Max Heap Size,  Optional< String> proguard Agent Path,  Set< Path> custom Proguard Configs,  Sdk Proguard Type sdk Proguard Config, int optimization Passes,  Optional< List< String>> proguard Jvm Args,  Map< Path,  Path> input And Output Entries,  Immutable Set< Path> additional Library Jars For Proguard,  Path proguard Directory,  Buildable Context buildable Context,  Build Context build Context, boolean skip Proguard,  Immutable List .  Builder< Step> steps ) { steps . add All (  Make Clean Directory Step . of (  Build Cell Relative Path . from Cell Relative Path ( build Context . get Build Cell Root Path (  ) , filesystem, proguard Directory )  )  )  ;   Path path To Pro Guard Command Line Args File = proguard Directory . resolve ( ""command-line . txt"" )  ;   Command Line Helper Step command Line Helper Step = new  Command Line Helper Step ( filesystem, android Platform Target, custom Proguard Configs, sdk Proguard Config, optimization Passes, input And Output Entries, additional Library Jars For Proguard, proguard Directory, path To Pro Guard Command Line Args File )  ;  if  ( skip Proguard )  {     steps . add ( command Line Helper Step, new  Touch Step ( filesystem, command Line Helper Step . get Mapping Txt (  )  )  )  ;  } else {      Pro Guard Obfuscate Step pro Guard Step = new  Pro Guard Obfuscate Step ( android Platform Target, java Runtime Launcher, filesystem, input And Output Entries, path To Pro Guard Command Line Args File, skip Proguard, proguard Jar Override, proguard Max Heap Size, proguard Jvm Args, proguard Agent Path )  ;      buildable Context . record Artifact ( command Line Helper Step . get Configuration Txt (  )  )  ;      buildable Context . record Artifact ( command Line Helper Step . get Mapping Txt (  )  )  ;      buildable Context . record Artifact ( command Line Helper Step . get Seeds Txt (  )  )  ;      buildable Context . record Artifact ( command Line Helper Step . get Usage Txt (  )  )  ;      steps . add ( command Line Helper Step, pro Guard Step, //  So touch it here to guarantee it's around when we go to cache this rule .      new  Touch Step ( filesystem, command Line Helper Step . get Mapping Txt (  )  ) , new  Touch Step ( filesystem, command Line Helper Step . get Usage Txt (  )  )  )  ;  }}"
1427,public  Auto Size Config set Private Font Scale ( float font Scale ) { private Font Scale = font Scale ;  return this ; }
1428,public void clear Builders (  ) { boom Button Builders . clear (  )  ; }
1429,public static final  List< Plugin Info> get Plugins ( boolean clone ) {  Array List< Plugin Info> array = new  Array List<> (  )  ;   Set< String> path Set = new  Hash Set<> (  )  ;  synchronized  (  Plugin Table . PLUGINS )  {     for  (  Plugin Info info :  Plugin Table . PLUGINS . values (  )  )  {          String path = info . get Path (  )  ;          // 避免加了两次，毕竟包名和别名都会加进来         if  ( !path Set . contains ( path )  )  {             path Set . add ( path )  ;               Plugin Info add To ;              if  ( clone )  {                 add To =  (  Plugin Info )  info . clone (  )  ;              } else {                 add To = info ;              }             array . add ( add To )  ;          }     } } return array ; }
1430,public  Quaternion log And Create (  ) {  Quaternion result = new  Quaternion ( this )  ;  result . log (  )  ;  return result ; }
1431,public void clear Usability Scores (  ) { synchronized  ( usability Scores )  {     usability Scores . clear (  )  ;  }}
1432,public static void set Current Thread Tracing Interface From Jsr199 Javac (  Buck Tracing Interface buck Tracing Interface ) { cur Thread Tracing Interface . set ( buck Tracing Interface )  ; }
1433,"public final void add Callback (  Future Callback<? super V> callback,  Executor executor ) {  Futures . add Callback ( this, callback, executor )  ; }"
1434,"public static  Version Range between (  String lower Bound,  String upper Bound ) { return new  Version Range (  Delimited Version . parse ( lower Bound ) ,  Delimited Version . parse ( upper Bound )  )  ; }"
1435,"public static float find Skew (  Pix pixs ) { return find Skew ( pixs, SWEEP_RANGE, SWEEP_DELTA, SWEEP_REDUCTION, SEARCH_REDUCTION, SEARCH_MIN_DELTA )  ; }"
1436,"public com . anychart . charts .  Linear Gauge enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
1437,"public com . anychart . charts .  Polar start Select Marquee (  Boolean repeat ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . start Select Marquee ( %s )  ; "", repeat )  )  ;  return this ; }"
1438,public boolean is Cancelled (  ) { return cancelled ; }
1439,"public com . anychart . charts .  Sparkline first Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . first Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
1440,"public long measure (  Context context,  Readable Map local Data,  Readable Map props,  Readable Map state, float width,  Yoga Measure Mode width Mode, float height,  Yoga Measure Mode height Mode, @ Nullable float [  ]  attachments Positions ) { return 0 ; }"
1441,"private void determine Offsets (  ) { // offset from the start of the file to the first cst int at = 10 ;  int last Category ;  for  ( int i = 1 ;  i < offsets . length ;  i += last Category )  {     offsets [ i ]  = at ;      int tag = bytes . get Unsigned Byte ( at )  ;      try {         switch ( tag )  {             case CONSTANT_ Integer:             case CONSTANT_ Float:             case CONSTANT_ Fieldref:             case CONSTANT_ Methodref:             case CONSTANT_ Interface Methodref:             case CONSTANT_ Name And Type:                 {                     last Category = 1 ;                      at += 5 ;                      break ;                  }             case CONSTANT_ Long:             case CONSTANT_ Double:                 {                     last Category = 2 ;                      at += 9 ;                      break ;                  }             case CONSTANT_ Class:             case CONSTANT_ String:                 {                     last Category = 1 ;                      at += 3 ;                      break ;                  }             case CONSTANT_ Utf8:                 {                     last Category = 1 ;                      at += bytes . get Unsigned Short ( at + 1 )  + 3 ;                      break ;                  }             case CONSTANT_ Method Handle:                 {                     throw new  Parse Exception ( "" Method Handle not supported"" )  ;                  }             case CONSTANT_ Method Type:                 {                     throw new  Parse Exception ( "" Method Type not supported"" )  ;                  }             case CONSTANT_ Invoke Dynamic:                 {                     throw new  Parse Exception ( "" Invoke Dynamic not supported"" )  ;                  }             default:                 {                     throw new  Parse Exception ( ""unknown tag byte: "" +  Hex . u1 ( tag )  )  ;                  }         }     } catch  (  Parse Exception ex )  {         ex . add Context ( "" .  .  . while preparsing cst "" +  Hex . u2 ( i )  + "" at offset "" +  Hex . u4 ( at )  )  ;          throw ex ;      } } end Offset = at ; }"
1442,"static long optimal Num Of Bits ( long n, double p ) { if  ( p == 0 )  {     p =  Double . MIN_VALUE ;  } return  ( long )   ( -n *  Math . log ( p )  /  (  Math . log ( 2 )  *  Math . log ( 2 )  )  )  ; }"
1443,"public static  Cst Boolean make ( int value ) { if  ( value == 0 )  {     return VALUE_FALSE ;  } else if  ( value == 1 )  {     return VALUE_TRUE ;  } else {     throw new  Illegal Argument Exception ( ""bogus value: "" + value )  ;  }}"
1444,public int get Column (  ) { return m Column ; }
1445,"private boolean requires Module Instance (  Dagger Elements elements,  Kotlin Metadata Util metadata Util ) { boolean is Kotlin Object = metadata Util . is Object Class ( type Element (  )  )  || metadata Util . is Companion Object Class ( type Element (  )  )  ;  if  ( is Kotlin Object )  {     return false ;  }  Immutable Set< Executable Element> methods = elements . get Local And Inherited Methods ( type Element (  )  )  ;  return methods . stream (  )  . filter ( this::is Binding Method )  . map (  Executable Element::get Modifiers )  . any Match (  modifiers -> !modifiers . contains ( ABSTRACT )  && !modifiers . contains ( STATIC )  )  ; }"
1446,"public static  Rop op Conv (  Type Bearer dest,  Type Bearer source ) { int dbt = dest . get Basic Frame Type (  )  ;  switch ( source . get Basic Frame Type (  )  )  {     case  Type . BT_INT:         {             switch ( dbt )  {                 case  Type . BT_LONG:                     return CONV_I2 L ;                  case  Type . BT_FLOAT:                     return CONV_I2 F ;                  case  Type . BT_DOUBLE:                     return CONV_I2 D ;                  default:                     break ;              }             break ;          }     case  Type . BT_LONG:         {             switch ( dbt )  {                 case  Type . BT_INT:                     return CONV_L2 I ;                  case  Type . BT_FLOAT:                     return CONV_L2 F ;                  case  Type . BT_DOUBLE:                     return CONV_L2 D ;                  default:                     break ;              }             break ;          }     case  Type . BT_FLOAT:         {             switch ( dbt )  {                 case  Type . BT_INT:                     return CONV_F2 I ;                  case  Type . BT_LONG:                     return CONV_F2 L ;                  case  Type . BT_DOUBLE:                     return CONV_F2 D ;                  default:                     break ;              }             break ;          }     case  Type . BT_DOUBLE:         {             switch ( dbt )  {                 case  Type . BT_INT:                     return CONV_D2 I ;                  case  Type . BT_LONG:                     return CONV_D2 L ;                  case  Type . BT_FLOAT:                     return CONV_D2 F ;                  default:                     break ;              }             break ;          } } return throw Bad Types (  Std Type List . make ( dest . get Type (  ) , source . get Type (  )  )  )  ; }"
1447,"public com . anychart . standalones .  Data Grid row Hover Fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Hover Fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
1448,"public static  Exo Player new Instance (  Context context,  Renderer [  ]  renderers,  Track Selector track Selector,  Load Control load Control,  Bandwidth Meter bandwidth Meter,  Looper looper ) { return new  Exo Player Impl ( renderers, track Selector, load Control, bandwidth Meter,  Clock . DEFAULT, looper )  ; }"
1449,"private boolean determine Variable Bitrate ( final  Asf Header header ) { assert header != null ;  boolean result = false ;  final  Metadata Container ext Desc = header . find Extended Content Description (  )  ;  if  ( ext Desc != null )  {     final  List< Metadata Descriptor> descriptors = ext Desc . get Descriptors By Name ( "" Is VBR"" )  ;      if  ( descriptors != null && !descriptors . is Empty (  )  )  {         result =  Boolean . TRUE . to String (  )  . equals ( descriptors . get ( 0 )  . get String (  )  )  ;      } } return result ; }"
1450,public boolean equals (  Object obj ) { if  ( ! ( obj instanceof  Lyrics3 Image )  )  {     return false ;  }  Lyrics3 Image object =  (  Lyrics3 Image )  obj ;  if  ( !this . description . equals ( object . description )  )  {     return false ;  } if  ( !this . filename . equals ( object . filename )  )  {     return false ;  } if  ( this . time == null )  {     if  ( object . time != null )  {         return false ;      } } else {     if  ( !this . time . equals ( object . time )  )  {         return false ;      } } return super . equals ( obj )  ; }
1451,"public void serialize (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . serialize (  )  ; "" )  ; }"
1452,"public com . anychart . core . ui .  Circular Labels Factory anchor (  String anchor ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . anchor ( %s )  ; "", wrap Quotes ( anchor )  )  )  ;  return this ; }"
1453,"public void id (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . id (  )  ; "" )  ; }"
1454,"public void test Party Action (  Supplier< Party Member> member Supplier ) { final var member = member Supplier . get (  )  ;  for  ( final var action :  Action . values (  )  )  {     member . party Action ( action )  ;      assert Equals ( member . to String (  )  + "" "" + action . get Description (  ) , appender . get Last Message (  )  )  ;  } assert Equals (  Action . values (  )  . length, appender . get Log Size (  )  )  ; }"
1455,"public com . anychart . core . utils .  Quarter stroke (  String color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( color )  )  )  ;  return this ; }"
1456,public  List< Geo Json Polygon> get Polygons (  ) { //convert list of  Geometry types to list of  Geo Json Polygon types  List< Geometry> geometry List = get Geometry Object (  )  ;   Array List< Geo Json Polygon> geo Json Polygon = new  Array List< Geo Json Polygon> (  )  ;  for  (  Geometry geometry : geometry List )  {      Geo Json Polygon polygon =  (  Geo Json Polygon )  geometry ;      geo Json Polygon . add ( polygon )  ;  } return geo Json Polygon ; }
1457,"public synchronized void close (  ) { if  ( DEBUG )       Log . i ( TAG, "" Usb Control Block#close:"" )  ;  if  ( m Connection != null )  {     final int n = m Interfaces . size (  )  ;      for  ( int i = 0 ;  i < n ;  i++ )  {         final  Sparse Array< Usb Interface> intfs = m Interfaces . value At ( i )  ;          if  ( intfs != null )  {             final int m = intfs . size (  )  ;              for  ( int j = 0 ;  j < m ;  j++ )  {                 final  Usb Interface intf = intfs . value At ( j )  ;                  m Connection . release Interface ( intf )  ;              }             intfs . clear (  )  ;          }     }     m Interfaces . clear (  )  ;      m Connection . close (  )  ;      m Connection = null ;      final USB Monitor monitor = m Weak Monitor . get (  )  ;      if  ( monitor != null )  {         if  ( monitor . m On Device Connect Listener != null )  {             monitor . m On Device Connect Listener . on Disconnect ( m Weak Device . get (  ) ,  Usb Control Block . this )  ;          }         monitor . m Ctrl Blocks . remove ( get Device (  )  )  ;      } }}"
1458,"private void parse (  ) { int attribute Context = get Attribute Context (  )  ;  int count = get Count (  )  ;  //  Skip the count .  int at = offset + 2 ;   Byte Array bytes = cf . get Bytes (  )  ;   Constant Pool pool = cf . get Constant Pool (  )  ;  if  ( observer != null )  {     observer . parsed ( bytes, offset, 2, human Name (  )  + ""s_count: "" +  Hex . u2 ( count )  )  ;  } for  ( int i = 0 ;  i < count ;  i++ )  {     try {         int access Flags = bytes . get Unsigned Short ( at )  ;          int name Idx = bytes . get Unsigned Short ( at + 2 )  ;          int desc Idx = bytes . get Unsigned Short ( at + 4 )  ;           Cst String name =  (  Cst String )  pool . get ( name Idx )  ;           Cst String desc =  (  Cst String )  pool . get ( desc Idx )  ;          if  ( observer != null )  {             observer . start Parsing Member ( bytes, at, name . get String (  ) , desc . get String (  )  )  ;              observer . parsed ( bytes, at, 0, ""\n"" + human Name (  )  + ""s [ "" + i + "" ] :\n"" )  ;              observer . change Indent ( 1 )  ;              observer . parsed ( bytes, at, 2, ""access_flags: "" + human Access Flags ( access Flags )  )  ;              observer . parsed ( bytes, at + 2, 2, ""name: "" + name . to Human (  )  )  ;              observer . parsed ( bytes, at + 4, 2, ""descriptor: "" + desc . to Human (  )  )  ;          }         at += 6 ;           Attribute List Parser parser = new  Attribute List Parser ( cf, attribute Context, at, attribute Factory )  ;          parser . set Observer ( observer )  ;          at = parser . get End Offset (  )  ;           Std Attribute List attributes = parser . get List (  )  ;          attributes . set Immutable (  )  ;           Cst Nat nat = new  Cst Nat ( name, desc )  ;           Member member = set ( i, access Flags, nat, attributes )  ;          if  ( observer != null )  {             observer . change Indent ( -1 )  ;              observer . parsed ( bytes, at, 0, ""end "" + human Name (  )  + ""s [ "" + i + "" ] \n"" )  ;              observer . end Parsing Member ( bytes, at, name . get String (  ) , desc . get String (  ) , member )  ;          }     } catch  (  Parse Exception ex )  {         ex . add Context ( "" .  .  . while parsing "" + human Name (  )  + ""s [ "" + i + "" ] "" )  ;          throw ex ;      } catch  (  Runtime Exception ex )  {          Parse Exception pe = new  Parse Exception ( ex )  ;          pe . add Context ( "" .  .  . while parsing "" + human Name (  )  + ""s [ "" + i + "" ] "" )  ;          throw pe ;      } } end Offset = at ; }"
1459,"public  Glide Request< Transcode Type> encode Quality ( @ Int Range ( from = 0, to = 100 )  int value ) { return  (  Glide Request< Transcode Type> )  super . encode Quality ( value )  ; }"
1460,public void set Rev Filter (  Rev Filter new Filter ) { assert Not Started (  )  ;  filter = new Filter != null ? new Filter :  Rev Filter . ALL ; }
1461,"public static  String generate New Auth Token (  ) {  String client Id =  Auth Utils . random String ( 16 )  ;  return client Id + ""@"" + net . i2p . crypto . eddsa .  Utils . bytes To Hex ( new  Key Pair Generator (  )  . generate Key Pair (  )  . get Private (  )  . get Encoded (  )  )  ; }"
1462,"public com . anychart . core . polar . series .  Range Column hover (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hover ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ;  return this ; }"
1463,"public void right (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . right (  )  ; "" )  ; }"
1464,public  Form Section Controller get Section (  String name ) { for  (  Form Section Controller section : get Sections (  )  )  {     if  ( section . get Name (  )  . equals ( name )  )  {         return section ;      } } return null ; }
1465,protected  Drawable get Profile Switching Icon Drawable (  User Handle user Handle ) { verify Can Access User ( user Handle )  ;  return new  Color Drawable ( user Handle . get Identifier (  )  )  ; }
1466,public int get Padding Left (  ) { return padding Left ; }
1467,private int get Surface Id (  ) { if  ( m Root View Group != null && m Root View Group instanceof  React Root &&  (  (  React Root )  m Root View Group )  . get UI Manager Type (  )  == UI Manager Type . FABRIC )  {     if  ( m Root View Group . get Context (  )  instanceof  Themed React Context )  {          Themed React Context context =  (  Themed React Context )  m Root View Group . get Context (  )  ;          return context . get Surface Id (  )  ;      }     return  (  (  React Root )  m Root View Group )  . get Root View Tag (  )  ;  } return -1 ; }
1468,"public void h Line (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . h Line (  )  ; "" )  ; }"
1469,"public com . anychart . core . ui .  Timeline position ( com . anychart . enums .  Anchor position ) { return new com . anychart . core . ui .  Timeline (  String . format (  Locale . US, js Base + "" . position ( %s ) "",  ( position != null )  ? position . get Js Base (  )  : null )  )  ; }"
1470,"public void max Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Width (  )  ; "" )  ; }"
1471,"private void sanity Check (  Object animator Child ) { if  ( ! ( animator Child instanceof  Spruce Dynamics<?> )  && ! ( animator Child instanceof  Animator )  )  {     throw new  Unsupported Operation Exception ( "" Error:  Items added for animation should be the subtype of"" + "" Dynamic Animation or  Animator . "" )  ;  }}"
1472,public T2 get Value2 (  ) { return value2 ; }
1473,"public static  String post Json (  String data,  String url ) { return do Http Action ( data, true, true, url )  ; }"
1474,"private void reset Header Height (  ) { int height = m Header View . get Visiable Height (  )  ;  if  ( // not visible .  height == 0 )      return ;  // refreshing and header isn't shown fully .  do nothing .  if  ( m Pull Refreshing && height <= m Header View Height )  {     return ;  } // default: scroll back to dismiss header .  int final Height = 0 ;  // is refreshing, just scroll back to show all the header .  if  ( m Pull Refreshing && height > m Header View Height )  {     final Height = m Header View Height ;  } m Scroll Back = SCROLLBACK_HEADER ;  m Scroller . start Scroll ( 0, height, 0, final Height - height, SCROLL_DURATION )  ;  // trigger compute Scroll invalidate (  )  ; }"
1475,"public com . anychart . core . stock . scrollerseries .  Range Spline Area color Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1476,"public  Button add Left Text Button (  String button Text, int view Id ) {  Button button = generate Top Bar Text Button ( button Text )  ;  this . add Left View ( button, view Id, generate Top Bar Text Button Layout Params (  )  )  ;  return button ; }"
1477,"public com . anychart . core . ui .  Chart Scroller outline Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . outline Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1478,"public  Float Buffer put ( float [  ]  src, int off, int len ) { int length = src . length ;  if  ( off < 0 || len < 0 ||  ( long )  off +  ( long )  len > length )  {     throw new  Index Out Of Bounds Exception (  )  ;  } if  ( len > remaining (  )  )  {     throw new  Buffer Overflow Exception (  )  ;  } for  ( int i = off ;  i < off + len ;  i++ )  {     put ( src [ i ]  )  ;  } return this ; }"
1479,public long get Cpu Stat User Usec (  ) { return cpu Stat User Usec_ ; }
1480,"private void generate Call To Class Handler (  Mutable Class mutable Class,  Method Node original Method,  String original Method Name,  Robolectric Generator Adapter generator ) { decorator . decorate Method Pre Class Handler ( mutable Class, original Method, original Method Name, generator )  ;  int plan Local Var = generator . new Local ( PLAN_TYPE )  ;  int exception Local Var = generator . new Local ( THROWABLE_TYPE )  ;   Label direct Call = new  Label (  )  ;   Label do Return = new  Label (  )  ;  // prepare for call to class Handler . method Invoked (  String signature, boolean is Static )  generator . push ( mutable Class . class Type . get Internal Name (  )  + ""/"" + original Method Name + original Method . desc )  ;  generator . push ( generator . is Static (  )  )  ;  // my class generator . push ( mutable Class . class Type )  ;  generator . invoke Static ( ROBOLECTRIC_INTERNALS_TYPE, METHOD_INVOKED_METHOD )  ;  generator . store Local ( plan Local Var )  ;  // plan generator . load Local ( plan Local Var )  ;  generator . if Null ( direct Call )  ;  // prepare for call to plan . run (  Object instance,  Object [  ]  params )   Try Catch try Catch For Handler = generator . try Start ( THROWABLE_TYPE )  ;  // plan generator . load Local ( plan Local Var )  ;  // instance generator . load This Or Null (  )  ;  // params generator . load Arg Array (  )  ;  generator . invoke Interface ( PLAN_TYPE, PLAN_RUN_METHOD )  ;   Type return Type = generator . get Return Type (  )  ;  int sort = return Type . get Sort (  )  ;  switch ( sort )  {     case VOID:         generator . pop (  )  ;          break ;      case OBJECT:     /* falls through */     case ARRAY:         generator . check Cast ( return Type )  ;          break ;      default:         int unbox Local Var = generator . new Local ( OBJECT_TYPE )  ;          generator . store Local ( unbox Local Var )  ;          generator . load Local ( unbox Local Var )  ;           Label not Null = generator . new Label (  )  ;           Label afterward = generator . new Label (  )  ;          generator . if Non Null ( not Null )  ;          // return zero, false, whatever         generator . push Default Return Value To Stack ( return Type )  ;          generator . go To ( afterward )  ;          generator . mark ( not Null )  ;          generator . load Local ( unbox Local Var )  ;          generator . unbox ( return Type )  ;          generator . mark ( afterward )  ;          break ;  } try Catch For Handler . end (  )  ;  generator . go To ( do Return )  ;  // catch (  Throwable )  try Catch For Handler . handler (  )  ;  generator . store Local ( exception Local Var )  ;  generator . load Local ( exception Local Var )  ;  generator . invoke Static ( ROBOLECTRIC_INTERNALS_TYPE, HANDLE_EXCEPTION_METHOD )  ;  generator . throw Exception (  )  ;  if  ( !original Method . name . equals ( ""<init>"" )  )  {     generator . mark ( direct Call )  ;       Try Catch try Catch For Direct = generator . try Start ( THROWABLE_TYPE )  ;      generator . invoke Method ( mutable Class . class Type . get Internal Name (  ) , original Method . name, original Method . desc )  ;      try Catch For Direct . end (  )  ;      generator . return Value (  )  ;      // catch (  Throwable )      try Catch For Direct . handler (  )  ;      generator . store Local ( exception Local Var )  ;      generator . load Local ( exception Local Var )  ;      generator . invoke Static ( ROBOLECTRIC_INTERNALS_TYPE, HANDLE_EXCEPTION_METHOD )  ;      generator . throw Exception (  )  ;  } generator . mark ( do Return )  ;  generator . return Value (  )  ; }"
1481,"public com . anychart . core . stock . scrollerseries .  Step Line rendering (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rendering ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1482,"public int compare To (  Char Buffer other Buffer ) { int compare Remaining =  ( remaining (  )  < other Buffer . remaining (  )  )  ? remaining (  )  : other Buffer . remaining (  )  ;  int this Pos = position ;  int other Pos = other Buffer . position ;  char this Byte, other Byte ;  while  ( compare Remaining > 0 )  {     this Byte = get ( this Pos )  ;      other Byte = other Buffer . get ( other Pos )  ;      if  ( this Byte != other Byte )  {         return this Byte < other Byte ? -1 : 1 ;      }     this Pos++ ;      other Pos++ ;      compare Remaining-- ;  } return remaining (  )  - other Buffer . remaining (  )  ; }"
1483,"public com . anychart . core . annotations .  Horizontal Line bounds (  Number x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
1484,void init Filer (  Filer filer ) {}
1485,"public T Value get First (  String field Name )  throws PS Exception{ return this . get Field At ( field Name, 0 )  ; }"
1486,"public  List< User Thread Link> query Deep (  String where,  String .  .  .  selection Arg ) {  Cursor cursor = db . raw Query ( get Select Deep (  )  + where, selection Arg )  ;  return load Deep All And Close Cursor ( cursor )  ; }"
1487,"public void start With Pop To ( I Support Fragment to Fragment,  Class<?> target Fragment Class, boolean include Target Fragment ) { m Delegate . start With Pop To ( to Fragment, target Fragment Class, include Target Fragment )  ; }"
1488,"public static  Object Filter in (  String field,  Object .  .  .  values ) { return new  In Object Filter ( field, values )  ; }"
1489,public static  Uri Components Builder from Path (  String path ) {  Uri Components Builder builder = new  Uri Components Builder (  )  ;  builder . path ( path )  ;  return builder ; }
1490,public int get Ancestor Horizontal Margin (  ) { return  ( m Parent != null ? m Parent . get Ancestor Horizontal Margin (  )  + m Parent . get Horizontal Margin (  )  : 0 )  ; }
1491,"protected void before View Fling ( @ Non Null final  View view, final int position ) {}"
1492,public boolean is Exported (  ) { boolean default Value = !intent Filters . is Empty (  )  ;  return  ( attributes . contains Key ( EXPORTED )  ?  Boolean . parse Boolean ( attributes . get ( EXPORTED )  )  : default Value )  ; }
1493,public int get Columns (  ) { return columns ; }
1494,"public  Rect add Image (  Buffered Image image,  String name ) {  Rect rect = process Image ( image, name )  ;  if  ( rect == null )  {     if  ( !settings . silent )           System . out . println ( "" Ignoring blank input image: "" + name )  ;      return null ;  } if  ( settings . alias )  {      String crc = hash ( rect . get Image ( this )  )  ;       Rect existing = crcs . get ( crc )  ;      if  ( existing != null )  {         if  ( !settings . silent )  {              String rect Name = rect . name +  ( rect . index != -1 ? ""_"" + rect . index : """" )  ;               String existing Name = existing . name +  ( existing . index != -1 ? ""_"" + existing . index : """" )  ;               System . out . println ( rect Name + ""  ( alias of "" + existing Name + "" ) "" )  ;          }         existing . aliases . add ( new  Alias ( rect )  )  ;          return null ;      }     crcs . put ( crc, rect )  ;  } rects . add ( rect )  ;  return rect ; }"
1495,public void subscribe (  Process Register Callback process Register Callback ) { process Register Callbacks . add ( process Register Callback )  ; }
1496,public int get Id (  ) { return id ; }
1497,"static T invoke Any Impl (  Listening Executor Service executor Service,  Collection<? extends  Callable<T>> tasks, boolean timed,  Duration timeout )  throws  Interrupted Exception,  Execution Exception,  Timeout Exception{ return invoke Any Impl ( executor Service, tasks, timed, to Nanos Saturated ( timeout ) ,  Time Unit . NANOSECONDS )  ; }"
1498,protected final  Activity get Current Activity (  ) { return m React Application Context . get Current Activity (  )  ; }
1499,public void set Clockwise ( boolean clockwise ) { m Clockwise = clockwise ; }
1500,public boolean is Logcat Enabled (  ) { return m Logcat Enabled ; }
1501,"protected  Ssh Config Store create Ssh Config Store ( @ Non Null  File home Dir,  File config File,  String local User Name ) { return config File == null ? null : new  Open Ssh Config File ( home Dir, config File, local User Name )  ; }"
1502,"public com . anychart . core . axismarkers .  Current Price Indicator label (  String index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , settings )  )  ;  return this ; }"
1503,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
1504,public void set Swipe Touch Child ( final int child Res Id ) { if  ( m Swipe Touch Listener != null )  {     m Swipe Touch Listener . set Touch Child ( child Res Id )  ;  }}
1505,public  All Types Model View Model_ drawable Res ( @ Drawable Res int drawable Res ) { on Mutation (  )  ;  this . drawable Res_ Int = drawable Res ;  return this ; }
1506,"public static void register Annotation ( final  Class<? extends  Annotation> annotation, final  Class<VIEW> view Type, final  View Data Adapter<VIEW, ?> view Data Adapter ) {  Validate Using validate Using = annotation . get Annotation (  Validate Using . class )  ;   Class rule Data Type =  Reflector . get Rule Data Type ( validate Using )  ;  SARIPAAR_REGISTRY . register ( view Type, rule Data Type, view Data Adapter, annotation )  ; }"
1507,"public  Test Field Prop Text Prop View Model_ on Visibility Changed (  On Model Visibility Changed Listener< Test Field Prop Text Prop View Model_,  Test Field Prop Text Prop View> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
1508,"public static void vali File Can Read (  File file )  throws IO Exception{ if  ( !file . can Read (  )  )  {     throw new IO Exception ( "" For file '"" + file . get Name (  )  + ""' not read access!"" )  ;  }}"
1509,public void add Possible Result Point (  Result Point point ) { if  ( possible Result Points . size (  )  < MAX_RESULT_POINTS )      possible Result Points . add ( point )  ; }
1510,"public com . anychart . core .  Visual Base With Bounds bounds (  Number x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, height )  )  ;  return this ; }"
1511,public static boolean is Available (  ) { return get State (  )  . equals (  Environment . MEDIA_MOUNTED )  ; }
1512,"private  String get Fingerprint Hash For Package (  ) { byte [  ]  hash ;  try {     hash =  Android Utils Light . get Package Certificate Hash Bytes ( context, context . get Package Name (  )  )  ;      if  ( hash == null )  {          Log . e ( TAG, "" Could not get fingerprint hash for package: "" + context . get Package Name (  )  )  ;          return null ;      } else {         return  Hex . bytes To String Uppercase ( hash, /* zero Terminated= */         false )  ;      } } catch  (  Package Manager .  Name Not Found Exception e )  {      Log . e ( TAG, "" No such package: "" + context . get Package Name (  ) , e )  ;      return null ;  }}"
1513,"public  Input Stream interpret Response Stream ( @ Nullable  Input Stream response Stream ) { throw If No Connection (  )  ;  if  ( is Stetho Active (  )  )  {     //  Note that  Content- Encoding is stripped out by  Http URL Connection on modern versions of     //  Android  ( fun fact, it's powered by okhttp )  when decompression is handled transparently .      //  When this occurs, we will not be able to report the compressed size properly .    Callers,     // however, can disable this behaviour which will once again give us access to the raw     //  Content- Encoding so that we can handle it properly .      response Stream = m Stetho Hook . interpret Response Stream ( get Stetho Request Id (  ) , m Connection . get Header Field ( "" Content- Type"" ) , m Connection . get Header Field ( "" Content- Encoding"" ) , response Stream, new  Default Response Handler ( m Stetho Hook, get Stetho Request Id (  )  )  )  ;  } return response Stream ; }"
1514,"public com . anychart . core . ui .  Paginator letter Spacing (  String spacing ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . letter Spacing ( %s )  ; "", wrap Quotes ( spacing )  )  )  ;  return this ; }"
1515,"public void println (  Print Writer w ) {  Printer . print ( this, w )  ; }"
1516,"protected void on Position Reset ( long position Us, boolean joining )  throws  Exo Playback Exception{//  Do nothing . }"
1517,public void mouse Pressed ( P Input Event e ) { if  ( e . is Popup Trigger (  )  )  {     show Popup ( e )  ;  } else {     last X =  ( int )  e . get Position (  )  . get X (  )  ;      last Y =  ( int )  e . get Position (  )  . get Y (  )  ;      timer . restart (  )  ;  }}
1518,public final void remove Callbacks (  Runnable r ) { final  Weak Runnable runnable = m Runnables . remove ( r )  ;  if  ( runnable != null )  {     m Exec . remove Callbacks ( runnable )  ;  }}
1519,"public com . anychart . core . ui .  Circular Labels Factory text Indent (  Number indent ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Indent ( %s )  ; "", indent )  )  ;  return this ; }"
1520,"public com . anychart . charts .  Sankey padding (  Number value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
1521,"public void max Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Width (  )  ; "" )  ; }"
1522,"public  List< String> guess Qualified Names (  Project project,  Global Search Scope search Scope,  String short Name,  Map< String,  String> event Metadata ) { return  Arrays . stream (  Psi Search Utils . get Instance (  )  . find Classes By Short Name ( project, search Scope,  Litho Plugin Utils . get Litho Component Spec Name From Component ( short Name )  )  )  . filter (  cls -> {     if  (  Litho Plugin Utils . is Layout Spec ( cls )  )  {         event Metadata . put (  Event Logger . KEY_CLASS, ""layout_spec"" )  ;          return true ;      } else if  (  Litho Plugin Utils . is Mount Spec ( cls )  )  {         event Metadata . put (  Event Logger . KEY_CLASS, ""mount_spec"" )  ;          return true ;      } else {         return false ;      } } )  . map (  spec Cls -> {     final  String component FQN =  Litho Plugin Utils . get Litho Component Name From Spec ( spec Cls . get Qualified Name (  )  )  ;      component FQN To Spec . put ( component FQN, spec Cls )  ;      return component FQN ;  } )  . collect (  Collectors . to List (  )  )  ; }"
1523,private int calc Display Orientation ( int screen Orientation Degrees ) { if  ( m Camera Info . facing ==  Camera .  Camera Info . CAMERA_FACING_FRONT )  {     return  ( 360 -  ( m Camera Info . orientation + screen Orientation Degrees )  % 360 )  % 360 ;  } else {     // back-facing     return  ( m Camera Info . orientation - screen Orientation Degrees + 360 )  % 360 ;  }}
1524,public int get Padding Top (  ) { return padding Top ; }
1525,public static void clear ( @ Non Null final SP Utils sp Utils ) { sp Utils . clear (  )  ; }
1526,public static int get App Key Index Int ( final byte [  ]  app Key Index ) { return  Byte Buffer . wrap ( app Key Index )  . order (  Byte Order . BIG_ENDIAN )  . get Short (  )  ; }
1527,"public static  Map< String, byte [  ] > get Files (  File apk File,  String regex )  throws IO Exception{ return get Files ( apk File,  Pattern . compile ( regex )  )  ; }"
1528,public synchronized boolean can Constant State (  ) { if  ( m Checked Constant State )  {     return m Can Constant State ;  } create All Futures (  )  ;  m Checked Constant State = true ;  final int count = m Num Children ;  final  Drawable [  ]  drawables = m Drawables ;  for  ( int i = 0 ;  i < count ;  i++ )  {     if  ( drawables [ i ]  . get Constant State (  )  == null )  {         m Can Constant State = false ;          return false ;      } } m Can Constant State = true ;  return true ; }
1529,public int get Security (  ) { return security ; }
1530,"public com . anychart . core . cartesian . series .  Column3d selected (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1531,"public  Base Adapter Helper set Image Url ( int view Id,  String image Url ) {  Image View view = retrieve View ( view Id )  ;   Glide . with ( context )  . load ( image Url )  . into ( view )  ;  return this ; }"
1532,public void flush To Logger (  ) { rule Key Logger . write ( rule Key )  ; }
1533,"public void peek After Peek (  )  throws IO Exception{  Json Reader reader = new Reader ( "" [ {\""a\"":\""aaa\"",'b':'bbb',c:c,\""d\"":\""d\""},true,false,null,1,2 . 0 ] "" )  ;  reader . set Lenient ( true )  ;  read Value ( reader, true )  ;  reader . peek Json (  )  ; }"
1534,public void set Listener (  Listener listener ) { m Listener = listener ; }
1535,Immutable Sorted Set< String> get Public System Include Directories (  ) { return  Immutable Sorted Set . of (  )  ; }
1536,"private boolean is Resolved In Parent (  Key request Key,  Contribution Binding binding ) {  Optional< Resolver> owning Resolver = get Owning Resolver ( binding )  ;  if  ( owning Resolver . is Present (  )  && !owning Resolver . get (  )  . equals ( this )  )  {     parent Resolver . get (  )  . resolve ( request Key )  ;      return true ;  } else {     return false ;  }}"
1537,"public void dispose (  ) { GL20 gl =  Gdx . gl20 ;  gl . gl Bind Buffer ( GL20 . GL_ARRAY_BUFFER, 0 )  ;  gl . gl Delete Buffer ( buffer Handle )  ;  buffer Handle = 0 ; }"
1538,"private static  Bluetooth Gatt Descriptor get Cccd ( @ Nullable final  Bluetooth Gatt Characteristic characteristic, final int required Property ) { if  ( characteristic == null )      return null ;  //  Check characteristic property final int properties = characteristic . get Properties (  )  ;  if  (  ( properties & required Property )  == 0 )      return null ;  return characteristic . get Descriptor (  Ble Manager . CLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR_UUID )  ; }"
1539,"public com . anychart . standalones .  Resource List odd Fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . odd Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
1540,public final  Object Id get Id (  ) { return this ; }
1541,private static void mark Registered By Plugin (  ) { if  ( !register By Plugin )  {     register By Plugin = true ;  }}
1542,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
1543,public void add ( int element ) { for  ( int i = 0 ;  i < size ;  i++ )  {     if  ( reg [ i ]  == element )  {         count [ i ] ++ ;          return ;      } } reg [ size ]  = element ;  count [ size ]  = 1 ;  size++ ; }
1544,public final int get Width (  ) { return width ; }
1545,"public static  Parsing Error from (  Exception ex ) { return  Immutable Parsing Error . of ( ex . get Message (  ) ,  Arrays . stream ( ex . get Stack Trace (  )  )  . map (  element -> element . to String (  )  )  . collect (  Immutable List . to Immutable List (  )  )  )  ; }"
1546,public  Object get Data (  ) { return data ; }
1547,public void set Is Device Idle Mode ( boolean is Device Idle Mode ) { this . is Device Idle Mode = is Device Idle Mode ; }
1548,"private void clip View On The Right (  Rect cur View Bound, float cur View Width, int right ) { cur View Bound . right =  ( int )   ( right - m Clip Padding )  ;  cur View Bound . left =  ( int )   ( cur View Bound . right - cur View Width )  ; }"
1549,"public com . anychart . core . stock .  Plot x Grid (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Grid ( %s )  ; "", settings )  )  ;  return this ; }"
1550,"public boolean if Non Zero ( int .  .  .  nums ) { LOGGER . info ( "" Source module {}"", VERSION )  ;  return  Arrays . stream ( nums )  . all Match (  num -> num != 0 )  ; }"
1551,public void set Close Up Algorithm (  Close Up Algorithm close Up Algorithm ) { this . m Close Up Algorithm = close Up Algorithm ; }
1552,"public  String generate Gid (  String pbx Class Name, int hash ) { int counter = hash == 0 ? pbx Class Name Counter Map . get Or Default ( pbx Class Name, 0 )  : 0 ;   String gid ;  do {     gid =  String . format ( ""%08 X%08 X%08 X"", pbx Class Name . hash Code (  ) , hash, counter++ )  ;  } while  ( generated And Reserved Ids . contains ( gid )  )  ;  generated And Reserved Ids . add ( gid )  ;  if  ( hash == 0 )  {     pbx Class Name Counter Map . put ( pbx Class Name, counter )  ;  } return gid ; }"
1553,public boolean were Catches Used (  ) { return catches Used ; }
1554,public void set Bits Per Sample ( final int bps ) { this . bits Per Sample = bps ; }
1555,public  String get Link (  ) { return link ; }
1556,"public void from Raw ( int [  ]  ints ) { from Raw ( ints, 0 )  ; }"
1557,"private static double polar Triangle Area ( double tan1, double lng1, double tan2, double lng2 ) { double delta Lng = lng1 - lng2 ;  double t = tan1 * tan2 ;  return 2 * atan2 ( t * sin ( delta Lng ) , 1 + t * cos ( delta Lng )  )  ; }"
1558,"public  Immersion Bar title Bar ( @ Id Res int view Id, boolean status Bar Color Transform Enable ) { if  ( m Support Fragment != null && m Support Fragment . get View (  )  != null )  {     return title Bar ( m Support Fragment . get View (  )  . find View By Id ( view Id ) , status Bar Color Transform Enable )  ;  } else if  ( m Fragment != null && m Fragment . get View (  )  != null )  {     return title Bar ( m Fragment . get View (  )  . find View By Id ( view Id ) , status Bar Color Transform Enable )  ;  } else {     return title Bar ( m Activity . find View By Id ( view Id ) , status Bar Color Transform Enable )  ;  }}"
1559,public  String get Sub Id (  ) { return sub Id ; }
1560,public  Set< Class<?>> dagger Required Modules (  ) { return dagger Required Modules ; }
1561,public  Epoxy Controller Adapter get Adapter (  ) { return adapter ; }
1562,"public static  Runtime Exception create (  Collection<? extends  Throwable> exceptions ) { if  ( exceptions . size (  )  == 0 )  {     throw new  Illegal Argument Exception ( "" Can't create an  Exception Collection with no exceptions"" )  ;  } if  ( exceptions . size (  )  == 1 )  {      Throwable temp = exceptions . iterator (  )  . next (  )  ;      if  ( temp instanceof  Runtime Exception )  {         return  (  Runtime Exception )  temp ;      } else {         return new  Runtime Exception ( temp )  ;      } } return new  Cluster Exception ( exceptions )  ; }"
1563,"public com . anychart . core . gantt . elements .  Timeline Element height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
1564,protected final boolean flush Or Reinitialize Codec (  )  throws  Exo Playback Exception{ boolean released = flush Or Release Codec (  )  ;  if  ( released )  {     maybe Init Codec (  )  ;  } return released ; }
1565,"public static  String create Default Failure Message (  Upnp Response response Status,  Exception exception ) {  String message = "" Subscription failed: "" ;  if  ( response Status != null )  {     message = message + "" HTTP response was: "" + response Status . get Response Details (  )  ;  } else if  ( exception != null )  {     message = message + ""  Exception occured: "" + exception ;  } else {     message = message + ""  No response received . "" ;  } return message ; }"
1566,public void on Done (  ) { m User Aware Video View . on User Attention Gone (  )  ; }
1567,public  Constant get Constant (  ) { return array Type ; }
1568,"public com . anychart . charts .  Scatter remove All Series (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . remove All Series (  )  ; "" )  ;  return this ; }"
1569,"public com . anychart . core . stock . indicators . MACD signal Series (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . signal Series ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
1570,protected void trigger Shutdown (  ) {}
1571,public  String get Value (  ) { return value ; }
1572,public int get Current Retry Count (  ) { return m Current Retry Count ; }
1573,public  String get Path (  ) {  String path = m Storage Uri . get Path (  )  ;  assert path != null ;  return path ; }
1574,public static  Method Signature to Method Signature (  String sig )  throws  Bad Bytecode{ try {     return parse Method Sig ( sig )  ;  } catch  (  Index Out Of Bounds Exception e )  {     throw error ( sig )  ;  }}
1575,"public static void report ( final  Log Level level, final  String category Key, final  String message, final  Throwable cause ) { get Instance (  )  . report ( level, category Key, message, cause )  ; }"
1576,public static void set Enable Debug ( boolean enable Debug ) { ENABLE_DEBUG = enable Debug ; }
1577,"public long read Utf8 Encoded Long (  ) { int length = 0 ;  long value = data [ position ]  ;  // find the high most 0 bit for  ( int j = 7 ;  j >= 0 ;  j-- )  {     if  (  ( value &  ( 1 << j )  )  == 0 )  {         if  ( j < 6 )  {             value &=  ( 1 << j )  - 1 ;              length = 7 - j ;          } else if  ( j == 7 )  {             length = 1 ;          }         break ;      } } if  ( length == 0 )  {     throw new  Number Format Exception ( "" Invalid UTF-8 sequence first byte: "" + value )  ;  } for  ( int i = 1 ;  i < length ;  i++ )  {     int x = data [ position + i ]  ;      if  (  ( x & 0x C0 )  != 0x80 )  {         // if the high most 0 bit not 7th         throw new  Number Format Exception ( "" Invalid UTF-8 sequence continuation byte: "" + value )  ;      }     value =  ( value << 6 )  |  ( x & 0x3 F )  ;  } position += length ;  return value ; }"
1578,"public  All Types Model View Model_ on Visibility State Changed (  On Model Visibility State Changed Listener< All Types Model View Model_,  All Types Model View> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
1579,public  Ssa Method get Parent (  ) { return parent ; }
1580,"public  File file (  ) { throw new  Gdx Runtime Exception ( ""file (  )  not supported in GWT backend"" )  ; }"
1581,public short get Num Points (  ) { return  ( short )  flags . length ; }
1582,"public void rising Stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . rising Stroke (  )  ; "" )  ; }"
1583,protected void initialize (  ) {// empty initialization queue}
1584,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
1585,"public com . anychart . core .  State Settings selected (  ) { return new com . anychart . core .  State Settings ( js Base + "" . selected (  ) "" )  ; }"
1586,"public  Long get Long ( @ Non Null  String field ) {  Number val = get Typed Value ( field,  Number . class )  ;  return val != null ? val . long Value (  )  : null ; }"
1587,"public void right (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . right (  )  ; "" )  ; }"
1588,public  Map Properties get Properties (  ) { return properties ; }
1589,public double get Annotation X ( int index ) { return m String XY . get X By Index ( index )  ; }
1590,public  Type get Type (  ) { return type ; }
1591,"public void skips When Not Subject Alt Name (  )  throws  Exception{ server . enqueue ( new  Mock Response (  )  )  ;  server . enqueue ( new  Mock Response (  )  )  ;  assert200 Http2 Response ( execute ( url ) , server . get Host Name (  )  )  ;   Http Url nonsan Url = url . new Builder (  )  . host ( ""nonsan . com"" )  . build (  )  ;  try {     execute ( nonsan Url )  ;      fail ( ""expected a failed attempt to connect"" )  ;  } catch  ( SSL Peer Unverified Exception expected )  { }}"
1592,public int hash Code (  ) { return id . hash Code (  )  ; }
1593,"public static  Object reentrant Check (  Object current Instance,  Object new Instance ) { boolean is Reentrant = ! ( current Instance == UNINITIALIZED || //  This check is needed for fast Init's implementation, which uses  Memoized Sentinel types .  current Instance instanceof  Memoized Sentinel )  ;  if  ( is Reentrant && current Instance != new Instance )  {     throw new  Illegal State Exception ( "" Scoped provider was invoked recursively returning "" + ""different results: "" + current Instance + "" & "" + new Instance + "" .   This is likely "" + ""due to a circular dependency . "" )  ;  } return new Instance ; }"
1594,"public static  Realm Configuration for Recovery (  String canonical Path ) { return for Recovery ( canonical Path, null )  ; }"
1595,"public static  Rop op Move Exception (  Type Bearer type ) { return new  Rop (  Reg Ops . MOVE_EXCEPTION, type . get Type (  ) ,  Std Type List . EMPTY,  (  String )  null )  ; }"
1596,public static _ Fields find By Name ( java . lang .  String name ) { return by Name . get ( name )  ; }
1597,"public static void drop Table ( SQ Lite Database db, boolean if Exists ) {  String sql = ""DROP TABLE "" +  ( if Exists ? ""IF EXISTS "" : """" )  + ""'TWEET'"" ;  db . exec SQL ( sql )  ; }"
1598,public static  Char Matcher java Lower Case (  ) { return  Java Lower Case . INSTANCE ; }
1599,"public com . anychart . charts .  Scatter min Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", height )  )  ;  return this ; }"
1600,public boolean performs Atomic Transactions (  ) { return false ; }
1601,"protected void add To Members ( I Graph Node Member object ) {  Raj Log . d ( "" [ "" + this . get Class (  )  . get Name (  )  + "" ]   Adding object: "" + object + "" to members list in: "" + this )  ;  object . get Transformed Bounding Volume (  )  . set Bounding Color ( m Bounding Color . get (  )  )  ;  object . set Graph Node ( this, true )  ;  m Members . add ( object )  ; }"
1602,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
1603,public void set App Id (  String app Id ) { this . app Id = app Id ; }
1604,"public com . anychart . charts .  Tag Cloud exports (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . exports ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1605,public  String get Title (  ) { return get Value For ( KEY_TITLE )  ; }
1606,"private static void apply Workarounds (  String mime Type,  List< Media Codec Info> decoder Infos ) { if  (  Mime Types . AUDIO_RAW . equals ( mime Type )  )  {      Collections . sort ( decoder Infos, new  Raw Audio Codec Comparator (  )  )  ;  } else if  (  Util . SDK_INT < 21 && decoder Infos . size (  )  > 1 )  {      String first Codec Name = decoder Infos . get ( 0 )  . name ;      if  ( ""OMX . SEC . mp3 . dec"" . equals ( first Codec Name )  || ""OMX . SEC . MP3 .  Decoder"" . equals ( first Codec Name )  || ""OMX . brcm . audio . mp3 . decoder"" . equals ( first Codec Name )  )  {         //  Prefer OMX . google codecs over OMX . SEC . mp3 . dec, OMX . SEC . MP3 .  Decoder and         // OMX . brcm . audio . mp3 . decoder on older devices .   See:         // https://github . com/google/ Exo Player/issues/398 and         // https://github . com/google/ Exo Player/issues/4519 .           Collections . sort ( decoder Infos, new  Prefer Omx Google Codec Comparator (  )  )  ;      } }}"
1607,"public com . anychart . core . annotations .  Fibonacci Fan bounds (  Number x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
1608,"public void test Removal Notification_clear_basher (  )  throws  Interrupted Exception{ //  If a clear (  )  happens close to the end of computation, one of two things should happen: // - computation ends first: the removal listener is called, and the cache does not contain the //   key/value pair // - clear (  )  happens first: the removal listener is not called, and the cache contains the pair  Atomic Boolean computation Should Wait = new  Atomic Boolean (  )  ;   Count Down Latch computation Latch = new  Count Down Latch ( 1 )  ;   Queuing Removal Listener< String,  String> listener = queuing Removal Listener (  )  ;  final  Loading Cache< String,  String> cache =  Cache Builder . new Builder (  )  . removal Listener ( listener )  . concurrency Level ( 20 )  . build ( new  Delaying Identity Loader< String> ( computation Should Wait, computation Latch )  )  ;  int n Threads = 100 ;  int n Tasks = 1000 ;  int n Seeded Entries = 100 ;   Set< String> expected Keys =  Sets . new Hash Set With Expected Size ( n Tasks + n Seeded Entries )  ;  // entries for  ( int i = 0 ;  i < n Seeded Entries ;  i++ )  {      String s = ""b"" + i ;      cache . get Unchecked ( s )  ;      expected Keys . add ( s )  ;  } computation Should Wait . set ( true )  ;  final  Atomic Integer computed Count = new  Atomic Integer (  )  ;   Executor Service thread Pool =  Executors . new Fixed Thread Pool ( n Threads )  ;  final  Count Down Latch tasks Finished = new  Count Down Latch ( n Tasks )  ;  for  ( int i = 0 ;  i < n Tasks ;  i++ )  {     final  String s = ""a"" + i ;      // https://errorprone . info/bugpattern/ Future Return Value Ignored     @ Suppress Warnings ( ""unused"" )   Future<?> possibly Ignored Error = thread Pool . submit ( new  Runnable (  )  {         @ Override         public void run (  )  {             cache . get Unchecked ( s )  ;              computed Count . increment And Get (  )  ;              tasks Finished . count Down (  )  ;          }     } )  ;      expected Keys . add ( s )  ;  } computation Latch . count Down (  )  ;  // let some computations complete while  ( computed Count . get (  )  < n Threads )  {      Thread . yield (  )  ;  } cache . invalidate All (  )  ;  tasks Finished . await (  )  ;  //  Check all of the removal notifications we received: they should have had correctly-associated // keys and values .   (  An earlier bug saw removal notifications for in-progress computations, // which had real keys with null values .  )   Map< String,  String> removal Notifications =  Maps . new Hash Map (  )  ;  for  (  Removal Notification< String,  String> notification : listener )  {     removal Notifications . put ( notification . get Key (  ) , notification . get Value (  )  )  ;      assert Equals ( "" Unexpected key/value pair passed to removal Listener"", notification . get Key (  ) , notification . get Value (  )  )  ;  } // notifications for all of them .  for  ( int i = 0 ;  i < n Seeded Entries ;  i++ )  {     assert Equals ( ""b"" + i, removal Notifications . get ( ""b"" + i )  )  ;  } //  Each of the values added to the map should either still be there, or have seen a removal // notification .  assert Equals ( expected Keys,  Sets . union ( cache . as Map (  )  . key Set (  ) , removal Notifications . key Set (  )  )  )  ;  assert True (  Sets . intersection ( cache . as Map (  )  . key Set (  ) , removal Notifications . key Set (  )  )  . is Empty (  )  )  ; }"
1609,public  Equals Builder append Super ( boolean super Equals ) { if  ( is Equals == false )  {     return this ;  } is Equals = super Equals ;  return this ; }
1610,public  Media Codec Info Builder set Is Hardware Accelerated ( boolean is Hardware Accelerated ) { this . is Hardware Accelerated = is Hardware Accelerated ;  return this ; }
1611,"public com . anychart . core . utils .  Exports exports (  ) { return new com . anychart . core . utils .  Exports ( js Base + "" . exports (  ) "" )  ; }"
1612,"public com . anychart . charts .  Mekko enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
1613,"private  Text Field find Next Text Field (  Array< Actor> actors, @ Null  Text Field best,  Vector2 best Coords,  Vector2 current Coords, boolean up ) { for  ( int i = 0, n = actors . size ;  i < n ;  i++ )  {      Actor actor = actors . get ( i )  ;      if  ( actor instanceof  Text Field )  {         if  ( actor == this )              continue ;           Text Field text Field =  (  Text Field )  actor ;          if  ( text Field . is Disabled (  )  || !text Field . focus Traversal || !text Field . ascendants Visible (  )  )              continue ;           Vector2 actor Coords = actor . get Parent (  )  . local To Stage Coordinates ( tmp3 . set ( actor . get X (  ) , actor . get Y (  )  )  )  ;          boolean below = actor Coords . y != current Coords . y &&  ( actor Coords . y < current Coords . y ^ up )  ;          boolean right = actor Coords . y == current Coords . y &&  ( actor Coords . x > current Coords . x ^ up )  ;          if  ( !below && !right )              continue ;          boolean better = best == null ||  ( actor Coords . y != best Coords . y &&  ( actor Coords . y > best Coords . y ^ up )  )  ;          if  ( !better )              better = actor Coords . y == best Coords . y &&  ( actor Coords . x < best Coords . x ^ up )  ;          if  ( better )  {             best =  (  Text Field )  actor ;              best Coords . set ( actor Coords )  ;          }     } else if  ( actor instanceof  Group )          best = find Next Text Field (  (  (  Group )  actor )  . get Children (  ) , best, best Coords, current Coords, up )  ;  } return best ; }"
1614,"public com . anychart . charts .  Cartesian3d margin (  Number [  ]  margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "",  Arrays . to String ( margin )  )  )  ;  return this ; }"
1615,"public static void replace ( @ Non Null final  Fragment Manager fm, @ Non Null final  Fragment fragment, @ Id Res final int container Id, final  String dest Tag ) { replace ( fm, fragment, container Id, dest Tag, false )  ; }"
1616,public void add Live Out ( int reg V ) { if  ( live Out == null )  {     live Out =  Set Factory . make Liveness Set ( parent . get Reg Count (  )  )  ;  } live Out . add ( reg V )  ; }
1617,"public com . anychart . charts .  Cartesian3d start Select Marquee (  Boolean repeat ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . start Select Marquee ( %s )  ; "", repeat )  )  ;  return this ; }"
1618,"public void test Acquire Token Silent Sync With Force Refresh Without Broker (  )  throws IO Exception,  Interrupted Exception,  Authentication Exception{ final  File Mock Context mock Context = new  File Mock Context ( get Instrumentation (  )  . get Context (  )  )  ;  final  String redirect Uri = ""redirect Uri"" ;  final  String client Id = ""client Id"" ;  final  String token To Test = ""access Token="" + UUID . random UUID (  )  ;  final  String expected AT = ""accesstoken"" ;   String resource = "" Resource"" + UUID . random UUID (  )  ;  I Token Cache Store mock Cache = new  Default Token Cache Store ( mock Context )  ;  mock Cache . remove All (  )  ;   Test Cache Item new Item = new  Test Cache Item (  )  ;  new Item . set Token ( token To Test )  ;  new Item . set Refresh Token ( ""refresh Token Normal"" )  ;  new Item . set Authority ( VALID_AUTHORITY )  ;  new Item . set Resource ( resource )  ;  new Item . set Client Id ( client Id )  ;  new Item . set User Id ( TEST_IDTOKEN_USERID )  ;  new Item . set Name ( ""name"" )  ;  new Item . set Family Name ( ""family Name"" )  ;  new Item . set Display Id ( TEST_IDTOKEN_UPN )  ;  new Item . set Tenant Id ( ""tenant Id"" )  ;  new Item . set Multi Resource ( false )  ;  add Item To Cache ( mock Cache, new Item )  ;  new Item = new  Test Cache Item (  )  ;  new Item . set Token ( """" )  ;  new Item . set Refresh Token ( ""refresh Token Multi Resource"" )  ;  new Item . set Authority ( VALID_AUTHORITY )  ;  new Item . set Resource ( resource )  ;  new Item . set Client Id ( client Id )  ;  new Item . set User Id ( TEST_IDTOKEN_USERID )  ;  new Item . set Name ( ""name"" )  ;  new Item . set Family Name ( ""family Name"" )  ;  new Item . set Display Id ( TEST_IDTOKEN_UPN )  ;  new Item . set Tenant Id ( ""tenant Id"" )  ;  new Item . set Multi Resource ( true )  ;  add Item To Cache ( mock Cache, new Item )  ;  // only one MRRT for same user, client, authority final  Authentication Context context = new  Authentication Context ( mock Context, VALID_AUTHORITY, false, mock Cache )  ;  final  String response = ""{\""access_token\"":\""accesstoken"" + ""\"",\""token_type\"":\"" Bearer\"",\""expires_in\"":\""29344\"",\""expires_on\"":\""1368768616\"","" + ""\""resource\"":\"""" + resource + ""\"","" + ""\""refresh_token\"":\"""" + ""refresh Token"" + ""\"",\""scope\"":\""*\"",\""id_token\"":\"""" + TEST_IDTOKEN + ""\"", \""client_info\"":\"""" +  Util . TEST_CLIENT_INFO + ""\""}"" ;  final  Http URL Connection mocked Connection =  Mockito . mock (  Http URL Connection . class )  ;   Http Url Connection Factory . set Mocked Http Url Connection ( mocked Connection )  ;   Util . prepare Mocked Url Connection ( mocked Connection )  ;   Mockito . when ( mocked Connection . get Output Stream (  )  )  . then Return (  Mockito . mock (  Output Stream . class )  )  ;   Mockito . when ( mocked Connection . get Input Stream (  )  )  . then Return (  Util . create Input Stream ( response ) ,  Util . create Input Stream ( response )  )  ;   Mockito . when ( mocked Connection . get Response Code (  )  )  . then Return (  Http URL Connection . HTTP_OK )  ;  // 1st token request, read from cache .   Authentication Result result = context . acquire Token Silent Sync ( resource, client Id, TEST_IDTOKEN_UPN )  ;  assert Null ( "" Error is null"", result . get Error Code (  )  )  ;  assert Equals ( "" Same token in response as in cache"", token To Test, result . get Access Token (  )  )  ;  // 2st token request, force Refresh false .  result = context . acquire Token Silent Sync ( resource, client Id, TEST_IDTOKEN_UPN, false )  ;  assert Null ( "" Error is null"", result . get Error Code (  )  )  ;  assert Equals ( "" Same token in response as in cache"", token To Test, result . get Access Token (  )  )  ;  // 3nd token request with force refresh true .  result = context . acquire Token Silent Sync ( resource, client Id, TEST_IDTOKEN_UPN, true )  ;  assert Null ( "" Error is null"", result . get Error Code (  )  )  ;  assert Equals ( "" Same token as refresh token result"", expected AT, result . get Access Token (  )  )  ;  clear Cache ( context )  ; }"
1619,"private  String report Context (  List<E> expected ) { return  Platform . format ( ""expected collection %s ;  actual collection %s"", expected, this . collection )  ; }"
1620,public boolean should Be Test Rule (  ) { return should Be Test Rule ; }
1621,"public static void show Text (  Activity activity, int text Resource Id,  Style style, int view Group Res Id ) { show Text ( activity, activity . get String ( text Resource Id ) , style, view Group Res Id )  ; }"
1622,public  Builder use Cancelable Layout Futures ( boolean is Enabled ) { this . use Cancelable Layout Futures = is Enabled ;  return this ; }
1623,public void set Collapsed Title Text Color ( @ Non Null  Color State List colors ) { m Collapsed Text Color Skin Attr = 0 ;  m Collapsing Text Helper . set Collapsed Text Color ( colors )  ; }
1624,public int get Transition State (  ) { return m Transition State ; }
1625,"private  Path get Header Symlink Tree Path (  Target Node<? extends  Cxx Library Description .  Common Arg> target Node,  Header Visibility header Visibility ) {  Path tree Root = get Absolute Path To Header Symlink Tree ( target Node, header Visibility )  ;  return tree Root ; }"
1626,"public void set Image ( final  File file ) { new  Load Image File Task ( this, file )  . execute (  )  ; }"
1627,"public static boolean get Boolean ( @ Non Null final  String key, @ Non Null final SP Utils sp Utils ) { return sp Utils . get Boolean ( key )  ; }"
1628,"public com . anychart . core . cartesian . series .  Base With Markers min Labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1629,public  List< Intent> get Broadcast Intents (  ) { return get Shadow Instrumentation (  )  . get Broadcast Intents (  )  ; }
1630,public  Method get Method (  ) { return this . method ; }
1631,int get Flags (  ) { return flags ; }
1632,public  Builder set Worker Size Value ( int value ) { worker Size_ = value ;  on Changed (  )  ;  return this ; }
1633,"public com . anychart . palettes .  Distinct Colors items ( com . anychart . graphics . vector .  Fill color, com . anychart . graphics . vector .  Fill var_args ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . items ( %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null,  ( var_args != null )  ? var_args . get Js Base (  )  : null )  )  ;  return this ; }"
1634,"public com . anychart . core . pert .  Milestones fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
1635,"public static  String color To String ( @ Color Int int color ) { return  String . format ( ""#%08 X"", color )  ; }"
1636,"public com . anychart . core . cartesian . series .  Line3d selection Mode ( com . anychart . enums .  Selection Mode value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selection Mode ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
1637,public void set Stream Number ( final int stream Num ) { this . stream Number = stream Num ; }
1638,"private final void init For Client (  ) { if  ( LOG )  {      Log Debug . d ( PLUGIN_TAG, ""list plugins from persistent process"" )  ;  } // 1 .  先尝试连接  Plugin Process Main . connect To Host Svc (  )  ;  // 2 .  然后从常驻进程获取插件列表 refresh Plugins From Host Svc (  )  ; }"
1639,"public static void add Emojis (  Context context,  Spannable String Builder text, int emoji Size, int text Size ) { add Emojis ( context, text, emoji Size, text Size, 0, -1, false )  ; }"
1640,"public void rotate Image ( int degrees ) { if  ( m Bitmap != null )  {     //  Force degrees to be a non-zero value between 0 and 360  ( inclusive )      if  ( degrees < 0 )  {         degrees =  ( degrees % 360 )  + 360 ;      } else {         degrees = degrees % 360 ;      }     boolean flip Axes = !m Crop Overlay View . is Fix Aspect Ratio (  )  &&  (  ( degrees > 45 && degrees < 135 )  ||  ( degrees > 215 && degrees < 305 )  )  ;       Bitmap Utils . RECT . set ( m Crop Overlay View . get Crop Window Rect (  )  )  ;      float half Width =  ( flip Axes ?  Bitmap Utils . RECT . height (  )  :  Bitmap Utils . RECT . width (  )  )  / 2f ;      float half Height =  ( flip Axes ?  Bitmap Utils . RECT . width (  )  :  Bitmap Utils . RECT . height (  )  )  / 2f ;      if  ( flip Axes )  {         boolean is Flipped Horizontally = m Flip Horizontally ;          m Flip Horizontally = m Flip Vertically ;          m Flip Vertically = is Flipped Horizontally ;      }     m Image Matrix . invert ( m Image Inverse Matrix )  ;       Bitmap Utils . POINTS [ 0 ]  =  Bitmap Utils . RECT . center X (  )  ;       Bitmap Utils . POINTS [ 1 ]  =  Bitmap Utils . RECT . center Y (  )  ;       Bitmap Utils . POINTS [ 2 ]  = 0 ;       Bitmap Utils . POINTS [ 3 ]  = 0 ;       Bitmap Utils . POINTS [ 4 ]  = 1 ;       Bitmap Utils . POINTS [ 5 ]  = 0 ;      m Image Inverse Matrix . map Points (  Bitmap Utils . POINTS )  ;      //  This is valid because degrees is not negative .      m Degrees Rotated =  ( m Degrees Rotated + degrees )  % 360 ;      apply Image Matrix ( get Width (  ) , get Height (  ) , true, false )  ;      // adjust the zoom so the crop window size remains the same even after image scale change     m Image Matrix . map Points (  Bitmap Utils . POINTS2,  Bitmap Utils . POINTS )  ;      m Zoom /=  Math . sqrt (  Math . pow (  Bitmap Utils . POINTS2 [ 4 ]  -  Bitmap Utils . POINTS2 [ 2 ] , 2 )  +  Math . pow (  Bitmap Utils . POINTS2 [ 5 ]  -  Bitmap Utils . POINTS2 [ 3 ] , 2 )  )  ;      m Zoom =  Math . max ( m Zoom, 1 )  ;      apply Image Matrix ( get Width (  ) , get Height (  ) , true, false )  ;      m Image Matrix . map Points (  Bitmap Utils . POINTS2,  Bitmap Utils . POINTS )  ;      // adjust the width/height by the changes in scaling to the image     double change =  Math . sqrt (  Math . pow (  Bitmap Utils . POINTS2 [ 4 ]  -  Bitmap Utils . POINTS2 [ 2 ] , 2 )  +  Math . pow (  Bitmap Utils . POINTS2 [ 5 ]  -  Bitmap Utils . POINTS2 [ 3 ] , 2 )  )  ;      half Width *= change ;      half Height *= change ;      // calculate the new crop window rectangle to center in the same location and have proper     // width/height      Bitmap Utils . RECT . set (  Bitmap Utils . POINTS2 [ 0 ]  - half Width,  Bitmap Utils . POINTS2 [ 1 ]  - half Height,  Bitmap Utils . POINTS2 [ 0 ]  + half Width,  Bitmap Utils . POINTS2 [ 1 ]  + half Height )  ;      m Crop Overlay View . reset Crop Overlay View (  )  ;      m Crop Overlay View . set Crop Window Rect (  Bitmap Utils . RECT )  ;      apply Image Matrix ( get Width (  ) , get Height (  ) , true, false )  ;      handle Crop Window Changed ( false, false )  ;      // make sure the crop window rectangle is within the cropping image bounds after all the     // changes     m Crop Overlay View . fix Current Crop Window Rect (  )  ;  }}"
1641,"public com . anychart . core .  State Settings selected (  ) { return new com . anychart . core .  State Settings ( js Base + "" . selected (  ) "" )  ; }"
1642,void transfer Into (  Scoped Component Info info ) { info . m Inter Stage Props Container = m Inter Stage Props Container ; }
1643,"void start Provisioning With Input OOB ( @ Non Null final  Unprovisioned Mesh Node unprovisioned Mesh Node, @ Non Null final  Input OOB Action action )  throws  Illegal Argument Exception{ send Provisioning Start With Input OOB ( unprovisioned Mesh Node, action )  ; }"
1644,"public  Type Descriptor get Map Key Type Descriptor (  Object map Key ) { return narrow ( map Key, get Map Key Type Descriptor (  )  )  ; }"
1645,"private void set Bottom Right Adapter (  ) {  Animation Adapter anim Card Array Adapter = new  Swing Bottom In Animation Adapter ( new  Swing Right In Animation Adapter ( m Card Array Adapter )  )  ;  anim Card Array Adapter . set Abs List View ( m List View )  ;  if  ( m List View != null )  {     m List View . set External Adapter ( anim Card Array Adapter, m Card Array Adapter )  ;  }}"
1646,"public static void close Soft Keyboard (  Context context ) { if  ( context == null || ! ( context instanceof  Activity )  ||  (  (  Activity )  context )  . get Current Focus (  )  == null )  {     return ;  } try {      View view =  (  (  Activity )  context )  . get Current Focus (  )  ;       Input Method Manager imm =  (  Input Method Manager )  view . get Context (  )  . get System Service (  Context . INPUT_METHOD_SERVICE )  ;      view . clear Focus (  )  ;      imm . hide Soft Input From Window ( view . get Window Token (  ) , 0 )  ;  } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  }}"
1647,"public  List Multimap Builder<K0,  Object> array List Values ( final int expected Values Per Key ) { check Nonnegative ( expected Values Per Key, ""expected Values Per Key"" )  ;  return new  List Multimap Builder<K0,  Object> (  )  {     @ Override     public <K extends K0, V>  List Multimap<K, V> build (  )  {         return  Multimaps . new List Multimap (  Multimap Builder With Keys . this . <K, V>create Map (  ) , new  Array List Supplier<V> ( expected Values Per Key )  )  ;      } } ; }"
1648,public java . lang .  String get Log Message (  ) { java . lang .  Object ref = log Message_ ;  if  ( ! ( ref instanceof java . lang .  String )  )  {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      log Message_ = s ;      return s ;  } else {     return  ( java . lang .  String )  ref ;  }}
1649,public void write (  Annotations Writer writer )  throws IO Exception{ writer . const Value Index ( get Value (  )  )  ; }
1650,public static int get Cache Disk Count (  ) { return get Cache Disk Count ( get Default Cache Double Utils (  )  )  ; }
1651,"static  Drawable maybe Wrap With Matrix ( @ Nullable  Drawable drawable, @ Nullable  Matrix matrix ) { if  ( drawable == null || matrix == null )  {     return drawable ;  } return new  Matrix Drawable ( drawable, matrix )  ; }"
1652,"protected float get Mouse Wheel X (  ) { return  Math . min ( widget Area . width,  Math . max ( widget Area . width * 0 . 9f, max X * 0 . 1f )  / 4 )  ; }"
1653,"public static  Immutable Map< String,  String> get Generic Target Build Settings (  Cxx Platform cxx Platform,  Map< String,  String> appended Settings,  Source Path Resolver Adapter path Resolver ) {  Array List< String> cxx Flags = new  Array List<> (  Arg . stringify ( cxx Platform . get Cxxflags (  ) , path Resolver )  )  ;   Linked Hash Map< String,  String> mutable Appended Settings = new  Linked Hash Map<> ( appended Settings )  ;   Immutable Map .  Builder< String,  String> settings Builder =  Immutable Map . builder (  )  ;  get And Set Sdk Root And Deployment Target Values ( settings Builder, cxx Platform, cxx Flags, mutable Appended Settings )  ;  return settings Builder . build (  )  ; }"
1654,"public void present Quest Test (  ) {  Launch Collection game Launch Collection = m Activity Test Rule . get Activity (  )  . get Game Launch Collection (  )  ;  //  Open  Present  Quest  View Interaction recycler View = on View ( all Of ( with Id ( com . google . android . apps . santatracker . R . id . card_list ) , is Displayed (  )  )  )  ;  int present Quest Position = game Launch Collection . get Position From Card Key (  Card Keys . PRESENT_QUEST_CARD )  ;  recycler View . perform ( action On Item At Position ( present Quest Position, scroll To (  )  ) , action On Item At Position ( present Quest Position, click (  )  )  )  ;  //  Click on the ""location"" fab  View Interaction floating Action Button = on View ( all Of ( with Id ( com . google . android . apps . santatracker . R . id . fab_location ) , is Displayed (  )  )  )  ;  floating Action Button . perform ( click (  )  )  ;  // C Lick on the user image  View Interaction image View = on View ( all Of ( with Id ( com . google . android . apps . santatracker . R . id . map_user_image ) , is Displayed (  )  )  )  ;  image View . perform ( click (  )  )  ;  //  Click the right arrow a few times  View Interaction app Compat Image View = on View ( all Of ( with Id ( com . google . android . apps . santatracker . R . id . arrow_right ) , with Parent ( with Id ( com . google . android . apps . santatracker . R . id . activity_profile )  )  )  )  ;  app Compat Image View . perform ( scroll To (  ) , click (  )  )  ;   View Interaction app Compat Image View2 = on View ( all Of ( with Id ( com . google . android . apps . santatracker . R . id . arrow_right ) , with Parent ( with Id ( com . google . android . apps . santatracker . R . id . activity_profile )  )  )  )  ;  app Compat Image View2 . perform ( scroll To (  ) , click (  )  )  ;   View Interaction app Compat Image View3 = on View ( all Of ( with Id ( com . google . android . apps . santatracker . R . id . arrow_right ) , with Parent ( with Id ( com . google . android . apps . santatracker . R . id . activity_profile )  )  )  )  ;  app Compat Image View3 . perform ( scroll To (  ) , click (  )  )  ;  //  Click the left arrow a few times  View Interaction app Compat Image View4 = on View ( all Of ( with Id ( com . google . android . apps . santatracker . R . id . arrow_left ) , with Parent ( with Id ( com . google . android . apps . santatracker . R . id . activity_profile )  )  )  )  ;  app Compat Image View4 . perform ( scroll To (  ) , click (  )  )  ;   View Interaction app Compat Image View5 = on View ( all Of ( with Id ( com . google . android . apps . santatracker . R . id . arrow_left ) , with Parent ( with Id ( com . google . android . apps . santatracker . R . id . activity_profile )  )  )  )  ;  app Compat Image View5 . perform ( scroll To (  ) , click (  )  )  ;   View Interaction app Compat Image View6 = on View ( all Of ( with Id ( com . google . android . apps . santatracker . R . id . arrow_left ) , with Parent ( with Id ( com . google . android . apps . santatracker . R . id . activity_profile )  )  )  )  ;  app Compat Image View6 . perform ( scroll To (  ) , click (  )  )  ;   View Interaction app Compat Image View7 = on View ( all Of ( with Id ( com . google . android . apps . santatracker . R . id . arrow_left ) , with Parent ( with Id ( com . google . android . apps . santatracker . R . id . activity_profile )  )  )  )  ;  app Compat Image View7 . perform ( scroll To (  ) , click (  )  )  ;  //  Right arrow again  View Interaction app Compat Image View8 = on View ( all Of ( with Id ( com . google . android . apps . santatracker . R . id . arrow_right ) , with Parent ( with Id ( com . google . android . apps . santatracker . R . id . activity_profile )  )  )  )  ;  app Compat Image View8 . perform ( scroll To (  ) , click (  )  )  ;  //  Go back to the map screen press Back (  )  ;  //  Click the user image again  View Interaction image View2 = on View ( all Of ( with Id ( com . google . android . apps . santatracker . R . id . map_user_image ) , is Displayed (  )  )  )  ;  image View2 . perform ( click (  )  )  ;  //  Click the button to edit the first workshop  View Interaction app Compat Image View9 = on View ( all Of ( with Id ( com . google . android . apps . santatracker . R . id . button_edit_1 ) , with Parent ( with Id ( com . google . android . apps . santatracker . R . id . activity_profile )  )  )  )  ;  app Compat Image View9 . perform ( scroll To (  ) , click (  )  )  ;  //  Cancel workshop move by pressing back press Back (  )  ;  //  Go back to map screen press Back (  )  ; }"
1655,"public void minimum Gap (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . minimum Gap (  )  ; "" )  ; }"
1656,public void close (  )  throws IO Exception{ // don't call super . close (  )  because that calls finish (  )  conditionally if  ( !closed )  {     finish (  )  ;      def . end (  )  ;      out . close (  )  ;      out = null ;      closed = true ;  }}
1657,"public com . anychart . core . utils .  Unbound Regions Settings fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
1658,"public void start Trace (  String trace Key ) { synchronized  ( _cly )  {     L . i ( "" [  Apm ]   Calling 'start Trace' with key: [ "" + trace Key + "" ] "" )  ;      start Trace Internal ( trace Key )  ;  }}"
1659,"public com . anychart . charts .  Pareto x Minor Grid (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Minor Grid ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
1660,"public  Prepared Put Collection Of Objects .  Builder<T> objects ( @ Non Null  Collection<T> objects ) { return new  Prepared Put Collection Of Objects .  Builder<T> ( stor IOSQ Lite, objects )  ; }"
1661,"public com . anychart . core . resource . resourcelist .  Settings With Margin margin (  Number value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
1662,public static void restart Activity (  Activity activity ) { assert Is Ui Thread (  )  ;  final  Intent intent = activity . get Intent (  )  ;  activity . start Activity ( intent )  ;  activity . finish (  )  ; }
1663,"private static  Code Block component Manager Call Block (  Android Entry Point Metadata metadata ) { return  Code Block . of ( ""$L . component Manager (  ) "", !metadata . is Root Metadata (  )  && metadata . root Metadata (  )  . requires Bytecode Injection (  )  ? unsafe Cast This To (  Class Names . GENERATED_COMPONENT_MANAGER_HOLDER )  : ""this"" )  ; }"
1664,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
1665,"public  String get Content Type (  ) {  String content Type Header =  Http Headers . get Header ( http Message,  Http Headers .  Names . CONTENT_TYPE )  ;  if  ( content Type Header == null || content Type Header . is Empty (  )  )  {     return  Browser Mob Http Util . UNKNOWN_CONTENT_TYPE ;  } else {     return content Type Header ;  }}"
1666,public void disable Shake Switch (  ) { sensor Detector . un Register (  )  ; }
1667,"public  Optional< Long> get Long (  String key ) { if  ( key == null )  {     logger . debug ( "" Key is null when getting long value on device cache . "" )  ;      return  Optional . absent (  )  ;  } if  ( shared Pref == null )  {     set Context ( get Firebase Application Context (  )  )  ;      if  ( shared Pref == null )  {         return  Optional . absent (  )  ;      } } if  ( !shared Pref . contains ( key )  )  {     return  Optional . absent (  )  ;  } try {     //  Default value should never be used because key existence is checked above .      return  Optional . of ( shared Pref . get Long ( key, 0 L )  )  ;  } catch  (  Class Cast Exception e )  {     logger . debug ( "" Key %s from shared Preferences has type other than long: %s"", key, e . get Message (  )  )  ;  } return  Optional . absent (  )  ; }"
1668,"public com . anychart . core . gantt . edit .  Structure Edit fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
1669,public  String to String (  ) { return get Hash Code (  )  . to String (  )  ; }
1670,"public com . anychart . charts .  Venn padding (  Number [  ]  padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "",  Arrays . to String ( padding )  )  )  ;  return this ; }"
1671,"public static  Property Values Holder of Keyframe (  Property property,  Keyframe .  .  .  values ) {  Keyframe Set keyframe Set =  Keyframe Set . of Keyframe ( values )  ;  if  ( keyframe Set instanceof  Int Keyframe Set )  {     return new  Int Property Values Holder ( property,  (  Int Keyframe Set )  keyframe Set )  ;  } else if  ( keyframe Set instanceof  Float Keyframe Set )  {     return new  Float Property Values Holder ( property,  (  Float Keyframe Set )  keyframe Set )  ;  } else {      Property Values Holder pvh = new  Property Values Holder ( property )  ;      pvh . m Keyframe Set = keyframe Set ;      pvh . m Value Type =  (  (  Keyframe )  values [ 0 ]  )  . get Type (  )  ;      return pvh ;  }}"
1672,"public void test Get Committer Date (  ) {  Commit commit =  Commit . builder (  )  . build (  )  ;  assert Null (  Commit Utils . get Committer Date ( commit )  )  ;   Git Commit raw Commit =  Git Commit . builder (  )  . build (  )  ;  commit = commit . to Builder (  )  . commit ( raw Commit )  . build (  )  ;  assert Null (  Commit Utils . get Committer Date ( commit )  )  ;   Git User user =  Git User . builder (  )  . build (  )  ;  raw Commit = raw Commit . to Builder (  )  . committer ( user )  . build (  )  ;  commit = commit . to Builder (  )  . commit ( raw Commit )  . build (  )  ;  assert Null (  Commit Utils . get Committer Date ( commit )  )  ;  user = user . to Builder (  )  . date ( new  Date ( 12000 )  )  . build (  )  ;  raw Commit = raw Commit . to Builder (  )  . committer ( user )  . build (  )  ;  commit = commit . to Builder (  )  . commit ( raw Commit )  . build (  )  ;  assert Equals ( new  Date ( 12000 ) ,  Commit Utils . get Committer Date ( commit )  )  ; }"
1673,"public void create Chain ( float [  ]  vertices, int offset, int length ) { jni Create Chain ( addr, vertices, offset, length / 2 )  ;  is Looped = false ; }"
1674,public void set Geodesic ( boolean geodesic ) { m Polygon Options . geodesic ( geodesic )  ;  style Changed (  )  ; }
1675,public void write (  Annotations Writer writer )  throws IO Exception{ writer . const Value Index ( get Value (  )  )  ; }
1676,"public  Immutable Set< Target Node Spec> parse (  Cell owning Cell,  String arg ) {  Immutable Set< String> resolved Args =  Alias Config . from ( config )  . get Build Target For Alias As String ( arg )  ;  if  ( resolved Args . is Empty (  )  )  {     resolved Args =  Immutable Set . of ( arg )  ;  }  Immutable Set .  Builder< Target Node Spec> specs = new  Immutable Set .  Builder<> (  )  ;  for  (  String resolved Arg : resolved Args )  {      String build Target = normalize Build Target String ( resolved Arg )  ;       Target Node Spec spec = parser . parse ( build Target, owning Cell . get Cell Name Resolver (  )  )  ;      validate Target Spec ( spec, resolved Arg, owning Cell )  ;      specs . add ( spec )  ;  } return specs . build (  )  ; }"
1677,"public static  Custom Zip Output Stream new Output Stream (  Output Stream out,  Handle Duplicates mode ) { return new Output Stream ( out, mode, new  Default Clock (  )  )  ; }"
1678,public  Producer< Void> get Decoded Image Prefetch Producer Sequence (  Image Request image Request ) {  Producer< Closeable Reference< Closeable Image>> input Producer = get Basic Decoded Image Sequence ( image Request )  ;  if  ( m Use Bitmap Prepare To Draw )  {     input Producer = get Bitmap Prepare Sequence ( input Producer )  ;  } return get Decoded Image Prefetch Sequence ( input Producer )  ; }
1679,"public com . anychart . core .  Separate Chart top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
1680,"public static  Enum Hash Bi Map<K, V> create (  Map<K, ? extends V> map ) {  Enum Hash Bi Map<K, V> bimap = create (  Enum Bi Map . infer Key Type ( map )  )  ;  bimap . put All ( map )  ;  return bimap ; }"
1681,public boolean is Sync Realm (  ) { return os Realm Config . get Resolved Realm URI (  )  != null ; }
1682,public boolean is View To Select (  ) { return view To Select ; }
1683,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
1684,"public com . anychart . charts .  Gantt margin (  Number value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
1685,"public void minimum X (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . minimum X (  )  ; "" )  ; }"
1686,"public  On Visibility Changed View Model_ on Unbind (  On Model Unbound Listener< On Visibility Changed View Model_,  On Visibility Changed View> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
1687,public boolean is Action Mode Started (  ) { if  ( action Mode != null )  {     return true ;  } return false ; }
1688,"public void auto Redraw (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . auto Redraw (  )  ; "" )  ; }"
1689,"public synchronized void set Focus ( final int focus ) { if  ( m Native Ptr != 0 )  {     final float range =  Math . abs ( m Focus Max - m Focus Min )  ;      if  ( range > 0 )          native Set Focus ( m Native Ptr,  ( int )   ( focus / 100 . f * range )  + m Focus Min )  ;  }}"
1690,public boolean is Controller Valid (  ) { return m Controller != null && m Controller . get Hierarchy (  )  == m Hierarchy ; }
1691,"public com . anychart . core . utils .  Quarter parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
1692,"public com . anychart . core . stock . scrollerseries .  Jump Line stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
1693,public int get Simple Int (  ) { return simple Int ; }
1694,"public  Cursor add Contact To Cursor At Top (  String user Id,  Cursor original Cursor ) { if  ( original Cursor == null )  {     //if original items are null, ignore user Id     return null ;  } if  (  Text Utils . is Empty ( user Id )  )  {     return original Cursor ;  }  Cursor user Id Cursor = contact Database . get Contact Cursor By Id For Loader ( user Id )  ;  if  ( user Id Cursor != null && user Id Cursor . get Count (  )  > 0 )  {     return new  Merge Cursor ( new  Cursor [  ]  { user Id Cursor, original Cursor } )  ;  } else {     return original Cursor ;  }}"
1695,public boolean is Set ( _ Fields field ) { if  ( field == null )  {     throw new java . lang .  Illegal Argument Exception (  )  ;  } switch ( field )  {     case FASTEST_CACHE_HIT_STORE:         return is Set Fastest Cache Hit Store (  )  ;      case FASTEST_CACHE_HIT_STORE_ID:         return is Set Fastest Cache Hit Store Id (  )  ;  } throw new java . lang .  Illegal State Exception (  )  ; }
1696,public void remove Audio Debug Listener (  Audio Renderer Event Listener listener ) { audio Debug Listeners . remove ( listener )  ; }
1697,"public static void put ( @ Non Null final  String key, final  Object value, int save Time, @ Non Null final  Cache Memory Utils cache Memory Utils ) { cache Memory Utils . put ( key, value, save Time )  ; }"
1698,"public  String get Email Address (  ) { final int lt =  Raw Parse Utils . next LF ( buffer, val Start, '<' )  ;  if  ( val End <= lt )  {     final int at =  Raw Parse Utils . next LF ( buffer, val Start, '@' )  ;      if  ( val Start < at && at < val End )          return get Value (  )  ;      return null ;  } final int gt =  Raw Parse Utils . next LF ( buffer, lt, '>' )  ;  if  ( val End < gt )      return null ;  return  Raw Parse Utils . decode ( enc, buffer, lt, gt - 1 )  ; }"
1699,public boolean is Received Subscription Timeout Ignored (  ) { return false ; }
1700,public void set Row Layout Id ( int row Layout Id ) { this . m Row Layout Id = row Layout Id ; }
1701,"public com . anychart . core . stock .  Plot no Data (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . no Data ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
1702,"public static final int days In Month ( int year, int month ) { return days In Month ( year, month, false )  ; }"
1703,"Transition Id get Scoped Id (  String owner,  String reference ) { final  Map< String,  Transition Id> siblings Ids = m Scoped Ids By Owner . get ( owner )  ;  return siblings Ids != null ? siblings Ids . get ( reference )  : null ; }"
1704,public boolean is Restore With Selection (  ) { return restore Selection ; }
1705,public  Class<?> get Declared Class (  ) { return field . get Type (  )  ; }
1706,public  Int List get Successors (  ) { return successors ; }
1707,"private  Map< String,  String> get User Properties (  ) {  Map< String,  String> user Properties Map = new  Hash Map<> (  )  ;   Analytics Connector connector = this . analytics Connector . get (  )  ;  if  ( connector == null )  {     return user Properties Map ;  } for  (  Map .  Entry< String,  Object> user Property Entry : connector . get User Properties ( /*include Internal=*/ false )  . entry Set (  )  )  {     user Properties Map . put ( user Property Entry . get Key (  ) , user Property Entry . get Value (  )  . to String (  )  )  ;  } return user Properties Map ; }"
1708,public  Property Values Holder [  ]  get Values (  ) { return m Values ; }
1709,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
1710,"public com . anychart . standalones .  Title align ( com . anychart . enums .  Align align ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . align ( %s )  ; "",  ( align != null )  ? align . get Js Base (  )  : null )  )  ;  return this ; }"
1711,"public  String get Identifier (  ) { return TAG_RELEASE + get Release (  )  + "" . "" + get Major Version (  )  + "" . "" + get Revision (  )  ; }"
1712,"public boolean contains (  Vector2 point ) { return contains ( point . x, point . y )  ; }"
1713,public  String get Poster (  ) { return poster ; }
1714,public  Dfs Garbage Collector set Coalesce Garbage Limit ( long limit ) { coalesce Garbage Limit = limit ;  return this ; }
1715,"public void default Pointer Type (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . default Pointer Type (  )  ; "" )  ; }"
1716,"public static void attach Base Context (  Application app,  Re Plugin Callbacks pc ) { attach Base Context ( app, new  Re Plugin Config (  )  . set Callbacks ( pc )  )  ; }"
1717,"private int pre Append ( int length ) { if  ( !write Allocation Node . was Initialized )  {     write Allocation Node . initialize ( allocator . allocate (  ) , new  Allocation Node ( write Allocation Node . end Position, allocation Length )  )  ;  } return  Math . min ( length,  ( int )   ( write Allocation Node . end Position - total Bytes Written )  )  ; }"
1718,"public com . anychart . core . stock . scrollerseries .  Spline Area max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
1719,"public com . anychart . core . axismarkers .  Gantt Text text Settings (  String name,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Settings ( %s, %s )  ; "", wrap Quotes ( name ) , settings )  )  ;  return this ; }"
1720,public  String get Last Seen On Wifi (  ) { return last Seen On Wifi ; }
1721,public  Byte String get Resume Token (  ) { return resume Token ; }
1722,public void clear (  ) { throw new  Unsupported Operation Exception ( NOT_SUPPORTED_MESSAGE )  ; }
1723,"public static DST Offset read DST Offset ( @ Non Null final  Data data, final int offset ) { if  ( data . size (  )  < offset + 1 )      return null ;  final int o = data . get Int Value (  Data . FORMAT_UINT8, offset )  ;  return DST Offset . from ( o )  ; }"
1724,"public static void write To Stream (  Bit Matrix matrix,  String format,  Output Stream stream,  Matrix To Image Config config )  throws IO Exception{  Buffered Image image = to Buffered Image ( matrix, config )  ;  if  ( ! Image IO . write ( image, format, stream )  )  {     throw new IO Exception ( "" Could not write an image of format "" + format )  ;  }}"
1725,"protected  File write Trash File ( final  String subdir, final  String name, final  String data )  throws IO Exception{ return J Git Test Util . write Trash File ( db, subdir, name, data )  ; }"
1726,"public com . anychart . charts .  Radar draw (  Boolean async ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . draw ( %s )  ; "", async )  )  ;  return this ; }"
1727,public void send Pairing Key (  String pairing Key ) {}
1728,"private  Immutable Bi Map< String,  String> brute Force Maximal Matching (  ) {  Immutable Bi Map< String,  String> best =  Immutable Bi Map . of (  )  ;   Matching candidate = new  Matching (  )  ;  while  ( candidate . valid (  )  )  {     if  ( candidate . size (  )  > best . size (  )  )  {         best = candidate . as Bi Map (  )  ;      }     candidate . advance (  )  ;  } return best ; }"
1729,"public void show Feedback Popup ( final  String widget Id, final  String close Button Text, final  Activity activity, final  Feedback Rating Callback callback ) { synchronized  ( _cly )  {     L . i ( "" [  Ratings ]   Calling show Feedback Popup"" )  ;      show Feedback Popup Internal ( widget Id, close Button Text, activity, callback )  ;  }}"
1730,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
1731,public void set On Card Selected Listener (  On Card Selected on Card Selected Listener ) { this . m On Card Selected Listener = on Card Selected Listener ; }
1732,public  Network Request Metric Builder set Http Response Code ( int code ) { builder . set Http Response Code ( code )  ;  return this ; }
1733,"public  Inet Socket Address start Public ( int port ) {  Inet Address address ;  try {     // address = get Public Inet Address (  )  ;      address = null ;      m Server = new  Server Socket ( port, 5, /* backlog */     address )  ;  } catch  (  Exception e )  {      Log . e ( "" Failed to start server . "", e )  ;      return null ;  } int bound Port = start (  )  ;  return  Inet Socket Address . create Unresolved ( m Server . get Inet Address (  )  . get Host Address (  ) , bound Port )  ; }"
1734,"public static void get Movement Area Position ( @ Non Null  Settings settings, @ Non Null  Rect out ) { tmp Rect1 . set ( 0, 0, settings . get Viewport W (  ) , settings . get Viewport H (  )  )  ;   Gravity . apply ( settings . get Gravity (  ) , settings . get Movement Area W (  ) , settings . get Movement Area H (  ) , tmp Rect1, out )  ; }"
1735,"static long parse Token Expiration Timestamp (  String expires In ) { check Argument ( EXPIRATION_TIMESTAMP_PATTERN . matcher ( expires In )  . matches (  ) , PARSING_EXPIRATION_TIME_ERROR_MESSAGE )  ;  return  ( expires In == null || expires In . length (  )  == 0 )  ? 0 L :  Long . parse Long ( expires In . substring ( 0, expires In . length (  )  - 1 )  )  ; }"
1736,public T get Buck Config View (  Class<T> cls ) { return get Buck Config (  )  . get View ( cls )  ; }
1737,public synchronized void set Pitch Offset ( float pitch Degrees ) { touch Pitch = pitch Degrees ;  update Pitch Matrix (  )  ; }
1738,public void set Text Color Center ( int text Color Center ) { wv_day . set Text Color Center ( text Color Center )  ;  wv_month . set Text Color Center ( text Color Center )  ;  wv_year . set Text Color Center ( text Color Center )  ;  wv_hours . set Text Color Center ( text Color Center )  ;  wv_minutes . set Text Color Center ( text Color Center )  ;  wv_seconds . set Text Color Center ( text Color Center )  ; }
1739,public void set Empty View (  View empty View ) { m Empty View = empty View ;  use Empty View = empty View != null ? true : false ;  final  Linear List Adapter adapter = get Linear List Adapter (  )  ;  final boolean empty =  (  ( adapter == null )  || adapter . is Empty (  )  )  ;  update Empty Status ( empty )  ; }
1740,"public static byte [  ]  hex String To Byte Array (  String hex String ) { int len = hex String . length (  )  ;  byte [  ]  data = new byte [ len / 2 ]  ;  for  ( int i = 0 ;  i < len ;  i += 2 )  {     data [ i / 2 ]  =  ( byte )   (  (  Character . digit ( hex String . char At ( i ) , 16 )  << 4 )  +  Character . digit ( hex String . char At ( i + 1 ) , 16 )  )  ;  } return data ; }"
1741,"public com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Screen Layout Size get Screen Layout Size (  ) { @ Suppress Warnings ( ""deprecation"" )  com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Screen Layout Size result = com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Screen Layout Size . value Of ( screen Layout Size_ )  ;  return result == null ? com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Screen Layout Size . UNRECOGNIZED : result ; }"
1742,boolean cancel ( int property Constant ) { if  (  ( m Property Mask & property Constant )  != 0 && m Name Values Holder != null )  {     int count = m Name Values Holder . size (  )  ;      for  ( int i = 0 ;  i < count ;  ++i )  {          Name Values Holder name Values Holder = m Name Values Holder . get ( i )  ;          if  ( name Values Holder . m Name Constant == property Constant )  {             m Name Values Holder . remove ( i )  ;              m Property Mask &= ~property Constant ;              return true ;          }     } } return false ; }
1743,"public com . anychart . core . utils .  Error error (  ) { return new com . anychart . core . utils .  Error ( js Base + "" . error (  ) "" )  ; }"
1744,"public static  Apk Files record Apk File Infos (  App Variant Context app Variant Context ) {  Apk Files apk Files = new  Apk Files (  )  ;   List< File> main Bundle Res Folders = new  Array List< File> (  )  ;  main Bundle Res Folders . add ( app Variant Context . get Scope (  )  . get Variant Data (  )  . merge Resources Task . get Output Dir (  )  )  ;  prepare Apk File List ( app Variant Context . get Scope (  )  . get Variant Data (  )  . merge Assets Task . get Output Dir (  ) , ""assets"", apk Files )  ;  for  (  File res Folder : main Bundle Res Folders )  {     prepare Apk File List ( res Folder, ""res"", apk Files )  ;  } //  Record the resource information for each bundle  Atlas Dependency Tree dependency Tree =  Atlas Build Context . android Dependency Trees . get ( app Variant Context . get Scope (  )  . get Variant Configuration (  )  . get Full Name (  )  )  ;  if  ( null == dependency Tree )  {     throw new  Stop Execution Exception ( "" Dependency Tree cannot be null!"" )  ;  }  List< Awb Bundle> libs = dependency Tree . get Awb Bundles (  )  ;  for  (  Awb Bundle awb Lib : libs )  {      File merge Assert Folder = app Variant Context . get Merge Assets ( awb Lib )  ;       File merge Res Folder = app Variant Context . get Merge Resources ( awb Lib )  ;       String awb Name = awb Lib . get Name (  )  ;      prepare Apk File List ( merge Assert Folder, ""assets"", awb Name, apk Files )  ;      prepare Apk File List ( merge Res Folder, ""res"", awb Name, apk Files )  ;  } return apk Files ; }"
1745,"public  Closeable Reference<V> cache ( final K key, final  Closeable Reference<V> value Ref ) { return cache ( key, value Ref, null )  ; }"
1746,"int [  ]  get Projection Separators (  ) { int [  ]  src = new int [ 10 ]  ;   Criteria root = this . root ;  int i = 0 ;  int sum = 0 ;  while  ( root != null )  {     if  ( root . result Column )  {         sum += root . projections . size (  )  ;          src [ i++ ]  = sum ;      }     root = root . child ;  } int [  ]  dst = new int [ i ]  ;   System . arraycopy ( src, 0, dst, 0, i )  ;  return dst ; }"
1747,public void show (  ) { m Popup . show (  )  ; }
1748,public boolean is Upload (  ) { return operation . equals ( UPLOAD )  ; }
1749,public  String get Entry Path String (  ) { return  Tree Walk . path Of ( this )  ; }
1750,protected final  Constant get Aux Cst (  ) { return aux Cst ; }
1751,public void set Login Behavior (  Login Behavior login Behavior ) { properties . set Login Behavior ( login Behavior )  ; }
1752,"public void set Packed Color ( float color ) {  Color . abgr8888 To Color ( this . color, color )  ;  vertices [ C1 ]  = color ;  vertices [ C2 ]  = color ;  vertices [ C3 ]  = color ;  vertices [ C4 ]  = color ; }"
1753,public  File Processor set Output Suffix (  String output Suffix ) { this . output Suffix = output Suffix ;  return this ; }
1754,"public com . anychart . core . grids .  Linear y Grid (  Number index ) { return new com . anychart . core . grids .  Linear (  String . format (  Locale . US, js Base + "" . y Grid ( %s ) "", index )  )  ; }"
1755,"public static void build (  Mesh Part Builder builder, float width, float height, float depth, int divisions, float angle From, float angle To ) { build ( builder, width, height, depth, divisions, angle From, angle To, true )  ; }"
1756,"public com . anychart . core . annotations .  Fibonacci Base x Scale ( com . anychart . scales .  Base settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
1757,"public com . anychart . charts .  Waterfall draw (  Boolean async ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . draw ( %s )  ; "", async )  )  ;  return this ; }"
1758,"public boolean remove Item (  Media Item item ) { int item Index = media Queue . index Of ( item )  ;  if  ( item Index == -1 )  {     return false ;  } concatenating Media Source . remove Media Source ( item Index )  ;  if  ( current Player == cast Player )  {     if  ( cast Player . get Playback State (  )  !=  Player . STATE_IDLE )  {          Timeline cast Timeline = cast Player . get Current Timeline (  )  ;          if  ( cast Timeline . get Period Count (  )  <= item Index )  {             return false ;          }         cast Player . remove Item (  ( int )  cast Timeline . get Period ( item Index, new  Period (  )  )  . id )  ;      } } media Queue . remove ( item Index )  ;  if  ( item Index == current Item Index && item Index == media Queue . size (  )  )  {     maybe Set Current Item And Notify ( C . INDEX_UNSET )  ;  } else if  ( item Index < current Item Index )  {     maybe Set Current Item And Notify ( current Item Index - 1 )  ;  } return true ; }"
1759,void maybe Invalidate Accessibility State (  ) { if  ( has Accessibility Delegate And Virtual Views (  )  && m Component Accessibility Delegate != null )  {     m Component Accessibility Delegate . invalidate Root (  )  ;  }}
1760,"public com . anychart . charts .  Pareto marker Palette ( com . anychart . palettes .  Markers settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . marker Palette ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
1761,"public void exclude Point (  Number indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . exclude Point ( %s )  ; "", indexes )  )  ; }"
1762,public boolean keep Alive (  ) { return keep Alive ; }
1763,public boolean is Success Code (  ) { int aux = code - 200 ;  return aux >= 0 && aux < 100 ; }
1764,"public void baseline Bar Anchor (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . baseline Bar Anchor (  )  ; "" )  ; }"
1765,public  Default Inspector Modules Builder runtime Repl (  Runtime Repl Factory factory ) { m Runtime Repl = factory ;  return this ; }
1766,public static boolean verify Permissions ( int [  ]  grant Results ) { for  ( int result : grant Results )  {     if  ( result !=  Package Manager . PERMISSION_GRANTED )  {         return false ;      } } return true ; }
1767,"public void set Size Limits ( int min Width, int min Height, int max Width, int max Height ) { set Size Limits ( window Handle, min Width, min Height, max Width, max Height )  ; }"
1768,"public  Reflog Writer log (  String ref Name,  Object Id old Id,  Object Id new Id,  Person Ident ident,  String message )  throws IO Exception{ byte [  ]  encoded = encode ( old Id, new Id, ident, message )  ;  return log ( ref Name, encoded )  ; }"
1769,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
1770,"public final void send ( final int id, @ Non Null final  Object obj ) { m Handler . send Message ( m Handler . obtain Message ( id, obj )  )  ; }"
1771,"public com . anychart . core . lineargauge . pointers .  Thermometer hatch Fill ( com . anychart . graphics . vector .  Pattern Fill pattern Fill ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "",  ( pattern Fill != null )  ? pattern Fill . get Js Base (  )  : null )  )  ;  return this ; }"
1772,"private void load Next Batch Id Across All Users (  ) { //  The dependent query below turned out to be ~500x faster than any other technique, given just // the primary key index on  ( uid, batch_id )  .  // // naive: SELECT MAX ( batch_id )  FROM mutations // group: SELECT uid, MAX ( batch_id )  FROM mutations GROUP BY uid // join:  SELECT q . uid, MAX ( b . batch_id )  FROM mutation_queues q, mutations b WHERE q . uid = b . uid // //  Given 1 E9 mutations divvied up among 10 queues, timings looked like this: // // method       seconds // join:        0 . 3187 // group_max:   0 . 1985 // naive_scan:  0 . 1041 // dependent:   0 . 0002  List< String> uids = new  Array List<> (  )  ;  db . query ( ""SELECT uid FROM mutation_queues"" )  . for Each (  row -> uids . add ( row . get String ( 0 )  )  )  ;  next Batch Id = 0 ;  for  (  String uid : uids )  {     db . query ( ""SELECT MAX ( batch_id )  FROM mutations WHERE uid = ?"" )  . binding ( uid )  . for Each (  row -> next Batch Id =  Math . max ( next Batch Id, row . get Int ( 0 )  )  )  ;  } next Batch Id += 1 ; }"
1773,"public static  Matrix4 create Rotation Matrix ( double x, double y, double z, double angle ) { return new  Matrix4 (  )  . set To Rotation ( x, y, z, angle )  ; }"
1774,"public com . anychart . core . resource .  Conflicts stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1775,"void test Full Work Day (  ) { final var gold Mine = new  Dwarven Goldmine Facade (  )  ;  gold Mine . start New Day (  )  ;  //  On the start of a day, all workers should wake up  .  .  .  assert True ( appender . log Contains ( "" Dwarf gold digger wakes up . "" )  )  ;  assert True ( appender . log Contains ( "" Dwarf cart operator wakes up . "" )  )  ;  assert True ( appender . log Contains ( "" Dwarven tunnel digger wakes up . "" )  )  ;  //  .  .  .  and go to the mine assert True ( appender . log Contains ( "" Dwarf gold digger goes to the mine . "" )  )  ;  assert True ( appender . log Contains ( "" Dwarf cart operator goes to the mine . "" )  )  ;  assert True ( appender . log Contains ( "" Dwarven tunnel digger goes to the mine . "" )  )  ;  //  No other actions were invoked, so the workers shouldn't have done  ( printed )  anything else assert Equals ( 6, appender . get Log Size (  )  )  ;  //  Now do some actual work, start digging gold! gold Mine . dig Out Gold (  )  ;  //  Since we gave the dig command, every worker should be doing it's job  .  .  .  assert True ( appender . log Contains ( "" Dwarf gold digger digs for gold . "" )  )  ;  assert True ( appender . log Contains ( "" Dwarf cart operator moves gold chunks out of the mine . "" )  )  ;  assert True ( appender . log Contains ( "" Dwarven tunnel digger creates another promising tunnel . "" )  )  ;  //  Again, they shouldn't be doing anything else .  assert Equals ( 9, appender . get Log Size (  )  )  ;  //  Enough gold, lets end the day .  gold Mine . end Day (  )  ;  //  Check if the workers go home  .  .  .  assert True ( appender . log Contains ( "" Dwarf gold digger goes home . "" )  )  ;  assert True ( appender . log Contains ( "" Dwarf cart operator goes home . "" )  )  ;  assert True ( appender . log Contains ( "" Dwarven tunnel digger goes home . "" )  )  ;  //  .  .  .  and go to sleep .   We need well rested workers the next day : )  assert True ( appender . log Contains ( "" Dwarf gold digger goes to sleep . "" )  )  ;  assert True ( appender . log Contains ( "" Dwarf cart operator goes to sleep . "" )  )  ;  assert True ( appender . log Contains ( "" Dwarven tunnel digger goes to sleep . "" )  )  ;  //  Every worker should be sleeping now, no other actions allowed assert Equals ( 15, appender . get Log Size (  )  )  ; }"
1776,"public  Flexible Adapter<T> expand Items At Start Up (  ) { int position = 0 ;  set Scroll Animate ( true )  ;  multi Range = true ;  while  ( position < get Item Count (  )  )  {     T item = get Item ( position )  ;      if  ( !headers Shown && is Header ( item )  && !item . is Hidden (  )  )  {         headers Shown = true ;      }     if  ( is Expanded ( item )  )  {         //  All sub Items will be added recursively if they result to be expanded at start up         position += expand ( position, false, true, false )  ;      } else {         position++ ;      } } multi Range = false ;  set Scroll Animate ( false )  ;  return this ; }"
1777,public void set Filter Type (  Filter Type filter Type ) { super . set Filter Type ( filter Type )  ;  if  ( m Compressed Texture != null )      m Compressed Texture . set Filter Type ( filter Type )  ; }
1778,public void set Torch On (  ) { barcode View . set Torch ( true )  ;  if  ( torch Listener != null )  {     torch Listener . on Torch On (  )  ;  }}
1779,public int get Width (  ) { return m Target . get Width (  )  ; }
1780,"public static int decode U Int24 ( byte [  ]  intbuf, int offset ) { int r =  ( intbuf [ offset ]  & 0xff )  << 8 ;  r |= intbuf [ offset + 1 ]  & 0xff ;  return  ( r << 8 )  |  ( intbuf [ offset + 2 ]  & 0xff )  ; }"
1781,"public com . anychart . charts .  Gantt label (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
1782,"public com . anychart . charts .  Waterfall margin (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
1783,"public boolean is Valid (  String value,  String pattern,  Locale locale ) {  Object parsed Value = parse ( value, pattern, locale )  ;  return  ( parsed Value == null ? false : true )  ; }"
1784,"private  String find Qualifier Name (  Variable Element element ) {  String name = null ;  if  ( element . get Annotation Mirrors (  )  . is Empty (  )  )  {     return name ;  } for  (  Annotation Mirror annotation Mirror : element . get Annotation Mirrors (  )  )  {      Type Element annotation Type Element =  (  Type Element )  annotation Mirror . get Annotation Type (  )  . as Element (  )  ;      if  ( is Same Type ( annotation Type Element, ""javax . inject .  Named"" )  )  {         check If Already Has Name ( element, name )  ;          name = get Value Of Annotation ( annotation Mirror )  ;      } else if  ( annotation Type Element . get Annotation ( javax . inject .  Qualifier . class )  != null )  {         check If Already Has Name ( element, name )  ;          name = annotation Type Element . get Qualified Name (  )  . to String (  )  ;      } } return name ; }"
1785,public  Reftable Writer set Config (  Reftable Config cfg ) { this . config = cfg != null ? cfg : new  Reftable Config (  )  ;  return this ; }
1786,"static  Path get Exopackage Symlink Tree Path (  Build Target target,  Project Filesystem filesystem ) { return  Build Target Paths . get Scratch Path ( filesystem, target, ""__%s__exopackage_dir__"" )  ; }"
1787,public void on Progress Changed (  Bootstrap Progress Bar bootstrap Progress Bar ) { update Bootstrap Group (  )  ; }
1788,public  Byte Buffer get Data (  ) {  Byte Buffer buf =  Byte Buffer . allocate ( get Length (  )  )  ;  buf . put Int ( get Version (  )  )  ;  buf . put Short ( get Ascent (  )  )  ;  buf . put Short ( get Descent (  )  )  ;  buf . put Short ( get Line Gap (  )  )  ;  buf . put Short ( get Advance Width Max (  )  )  ;  buf . put Short ( get Min Left Side Bearing (  )  )  ;  buf . put Short ( get Min Right Side Bearing (  )  )  ;  buf . put Short ( get X Max Extent (  )  )  ;  buf . put Short ( get Caret Slope Rise (  )  )  ;  buf . put Short ( get Caret Slope Run (  )  )  ;  buf . put Short ( get Caret Offset (  )  )  ;  // padding buf . put Short (  ( short )  0 )  ;  buf . put Short (  ( short )  0 )  ;  buf . put Short (  ( short )  0 )  ;  buf . put Short (  ( short )  0 )  ;  buf . put Short ( get Metric Data Format (  )  )  ;  buf . put Short (  ( short )  get Num Of Long Hor Metrics (  )  )  ;  // reset the position to the start of the buffer buf . flip (  )  ;  return buf ; }
1789,public int get Length (  ) { return length ; }
1790,public int hash Code (  ) { int result = product Id != null ? product Id . hash Code (  )  : 0 ;  result = 31 * result + quantity ;  result = 31 * result +  ( price != null ? price . hash Code (  )  : 0 )  ;  result = 31 * result +  ( revenue Type != null ? revenue Type . hash Code (  )  : 0 )  ;  result = 31 * result +  ( receipt != null ? receipt . hash Code (  )  : 0 )  ;  result = 31 * result +  ( receipt Sig != null ? receipt Sig . hash Code (  )  : 0 )  ;  result = 31 * result +  ( properties != null ? properties . hash Code (  )  : 0 )  ;  return result ; }
1791,public  String get Path (  ) { return uri ; }
1792,"public static  Out Of Process Isolated Execution Clients create (  Protocol protocol,  Buck Event Bus event Bus )  throws IO Exception{ return new  Out Of Process Isolated Execution Clients ( protocol, event Bus )  ; }"
1793,public static  Rx2 AN Request .  Head Request Builder head (  String url ) { return new  Rx2 AN Request .  Head Request Builder ( url )  ; }
1794,public void copy To (  Writer w )  throws IO Exception{ w . write ( to Hex Char Array (  )  )  ; }
1795,public int get Num Children (  ) { // Thread safety deferred to the  List return m Children . size (  )  ; }
1796,"public static  Function< Item,  Number> sub ( final  String num Field1, final  String num Field2 ) { return new  Subtract Operator ( num Field1, num Field2 )  ; }"
1797,"public com . anychart . core . stock . scrollerseries .  Stick allow Point Settings (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . allow Point Settings ( %s )  ; "", enabled )  )  ;  return this ; }"
1798,"public static void visible View By Alpha ( final  View view, final boolean is Ban Click, final  Animation Listener animation Listener ) { visible View By Alpha ( view,  Animation Utils . DEFAULT_ANIMATION_DURATION, is Ban Click, animation Listener )  ; }"
1799,"public void clear Flag ( final  Rev Flag flag, final int range Begin, final int range End ) { try {     apply Flag (  Rev Filter . NONE, flag, range Begin, range End )  ;  } catch  ( IO Exception e )  { //  Never happen .   The filter we use does not throw any // exceptions, for any reason .  }}"
1800,private static long [  ]  [  ]  calculate Accumulated Sample Sizes (  Mp4 Track [  ]  tracks ) { long [  ]  [  ]  accumulated Sample Sizes = new long [ tracks . length ]  [  ]  ;  int [  ]  next Sample Index = new int [ tracks . length ]  ;  long [  ]  next Sample Times Us = new long [ tracks . length ]  ;  boolean [  ]  tracks Finished = new boolean [ tracks . length ]  ;  for  ( int i = 0 ;  i < tracks . length ;  i++ )  {     accumulated Sample Sizes [ i ]  = new long [ tracks [ i ]  . sample Table . sample Count ]  ;      next Sample Times Us [ i ]  = tracks [ i ]  . sample Table . timestamps Us [ 0 ]  ;  } long accumulated Sample Size = 0 ;  int finished Tracks = 0 ;  while  ( finished Tracks < tracks . length )  {     long min Time Us =  Long . MAX_VALUE ;      int min Time Track Index = -1 ;      for  ( int i = 0 ;  i < tracks . length ;  i++ )  {         if  ( !tracks Finished [ i ]  && next Sample Times Us [ i ]  <= min Time Us )  {             min Time Track Index = i ;              min Time Us = next Sample Times Us [ i ]  ;          }     }     int track Sample Index = next Sample Index [ min Time Track Index ]  ;      accumulated Sample Sizes [ min Time Track Index ]  [ track Sample Index ]  = accumulated Sample Size ;      accumulated Sample Size += tracks [ min Time Track Index ]  . sample Table . sizes [ track Sample Index ]  ;      next Sample Index [ min Time Track Index ]  = ++track Sample Index ;      if  ( track Sample Index < accumulated Sample Sizes [ min Time Track Index ]  . length )  {         next Sample Times Us [ min Time Track Index ]  = tracks [ min Time Track Index ]  . sample Table . timestamps Us [ track Sample Index ]  ;      } else {         tracks Finished [ min Time Track Index ]  = true ;          finished Tracks++ ;      } } return accumulated Sample Sizes ; }
1801,public static boolean is Compilable Type (  Cxx Source .  Type source Type ) { return source Type ==  Cxx Source .  Type . C_CPP_OUTPUT || source Type ==  Cxx Source .  Type . CXX_CPP_OUTPUT || source Type ==  Cxx Source .  Type . ASSEMBLER || source Type ==  Cxx Source .  Type . OBJC_CPP_OUTPUT || source Type ==  Cxx Source .  Type . OBJCXX_CPP_OUTPUT || source Type ==  Cxx Source .  Type . CUDA_CPP_OUTPUT || source Type ==  Cxx Source .  Type . HIP_CPP_OUTPUT || source Type ==  Cxx Source .  Type . ASM || source Type ==  Cxx Source .  Type . PCM ; }
1802,Date delayed Date ( long delay Millis ) { return new  Date (  System . current Time Millis (  )  + delay Millis )  ; }
1803,"public com . anychart . core . gantt . elements .  Timeline Element fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
1804,"public com . anychart . standalones .  Resource Timeline row Hover Fill ( com . anychart . graphics . vector .  Fill value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Hover Fill ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
1805,"public  File Handle [  ]  list (  File Filter filter ) { return preloader . list ( file, filter )  ; }"
1806,"public void remove Change Listener (  Ordered Realm Collection Change Listener< Realm List<E>> listener ) { check For Add Remove Listener ( listener, true )  ;  os List Operator . get Os List (  )  . remove Listener ( this, listener )  ; }"
1807,private void handle Error (  Throwable t ) { maybe Finish ( true )  ;  get Consumer (  )  . on Failure ( t )  ; }
1808,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
1809,public void add To ( @ Non Null  Epoxy Controller controller ) { controller . add Internal ( this )  ; }
1810,"public static T read Lines (  Readable readable,  Line Processor<T> processor )  throws IO Exception{ check Not Null ( readable )  ;  check Not Null ( processor )  ;   Line Reader line Reader = new  Line Reader ( readable )  ;   String line ;  while  (  ( line = line Reader . read Line (  )  )  != null )  {     if  ( !processor . process Line ( line )  )  {         break ;      } } return processor . get Result (  )  ; }"
1811,"public  Truss push Span (  Object span ) { stack . add Last ( new  Span ( builder . length (  ) , span )  )  ;  return this ; }"
1812,"public  Iterable Of Protos Fluent Assertion<M> using Double Tolerance For Field Descriptors ( double tolerance,  Field Descriptor first Field Descriptor,  Field Descriptor .  .  .  rest ) { return using Config ( config . using Double Tolerance For Field Descriptors ( tolerance, as List ( first Field Descriptor, rest )  )  )  ; }"
1813,"public com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Layout Direction get Layout Direction (  ) { @ Suppress Warnings ( ""deprecation"" )  com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Layout Direction result = com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Layout Direction . value Of ( layout Direction_ )  ;  return result == null ? com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Layout Direction . UNRECOGNIZED : result ; }"
1814,"public  Particle Controller copy (  ) {  Emitter emitter =  (  Emitter )  this . emitter . copy (  )  ;   Influencer [  ]  influencers = new  Influencer [ this . influencers . size ]  ;  int i = 0 ;  for  (  Influencer influencer : this . influencers )  {     influencers [ i++ ]  =  (  Influencer )  influencer . copy (  )  ;  } return new  Particle Controller ( new  String ( this . name ) , emitter,  (  Particle Controller Renderer<?, ?> )  renderer . copy (  ) , influencers )  ; }"
1815,"public com . anychart . charts .  Mekko text Marker (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Marker ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1816,"public com . anychart . graphics . math .  Rect get Bounds (  ) { return new com . anychart . graphics . math .  Rect ( js Base + "" . get Bounds (  ) "" )  ; }"
1817,public int used (  ) { return data . position (  )  - initial Position ; }
1818,"public void max Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Width (  )  ; "" )  ; }"
1819,public  Insn Format get Format (  ) { return format ; }
1820,"public static  Builder<T> builder ( int individual Producer Size, int collection Producer Size ) { return new  Builder<T> ( individual Producer Size, collection Producer Size )  ; }"
1821,public  Metadata Descriptor get Descriptor (  ) { return this . to Wrap ; }
1822,public int get Obj Gen (  ) { return obj Gen ; }
1823,"public static  String get Local Dns (  String dns ) {  Process process = null ;   String str = """" ;   Buffered Reader reader = null ;  try {     process =  Runtime . get Runtime (  )  . exec ( ""getprop net . "" + dns )  ;      reader = new  Buffered Reader ( new  Input Stream Reader ( process . get Input Stream (  )  )  )  ;       String line = null ;      while  (  ( line = reader . read Line (  )  )  != null )  {         str += line ;      }     reader . close (  )  ;      process . wait For (  )  ;  } catch  ( IO Exception e )  {     e . print Stack Trace (  )  ;  } catch  (  Interrupted Exception e )  {     e . print Stack Trace (  )  ;  } finally {     try {         if  ( reader != null )  {             reader . close (  )  ;          }         process . destroy (  )  ;      } catch  (  Exception e )  {     } } return str . trim (  )  ; }"
1824,protected  User Handle get User For Serial Number ( long serial Number ) {  Integer user Handle = user Manager State . user Serial Numbers . inverse (  )  . get ( serial Number )  ;  return user Handle == null ? null : new  User Handle ( user Handle )  ; }
1825,protected boolean is Ref Log Including Result (  ) { return ref Log Include Result ; }
1826,"public long get Network Event Count Foreground (  ) { //  Order of precedence is: // 1 .   If the value exists through  Firebase  Remote  Config, cache and return this value .  // 2 .   If the value exists in device cache, return this value .  // 3 .   Otherwise, return default value .   Network Event Count Foreground config =  Network Event Count Foreground . get Instance (  )  ;  // 1 .   Reads value from  Firebase  Remote  Config, saves this value in cache layer if valid .   Optional< Long> rc Value = get Remote Config Long ( config )  ;  if  ( rc Value . is Available (  )  && is Event Count Valid ( rc Value . get (  )  )  )  {     device Cache Manager . set Value ( config . get Device Cache Flag (  ) , rc Value . get (  )  )  ;      return rc Value . get (  )  ;  } // 2 .   Reads value from cache layer .   Optional< Long> device Cache Value = get Device Cache Long ( config )  ;  if  ( device Cache Value . is Available (  )  && is Event Count Valid ( device Cache Value . get (  )  )  )  {     return device Cache Value . get (  )  ;  } // 3 .   Returns default value if there is no valid value from above approaches .  return config . get Default (  )  ; }"
1827,"public com . anychart . core . utils .  Unbound Regions Settings fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
1828,public void abort Current Connection Attempt (  ) { connector . abort Connect For Communication Channel (  )  ; }
1829,"public  File extract ID3v2 Tag Data Into File (  File output File )  throws  Tag Not Found Exception, IO Exception{ int start Byte =  ( int )   (  ( MP3 Audio Header )  audio Header )  . get Mp3 Start Byte (  )  ;  if  ( start Byte >= 0 )  {     // Read byte into buffer      File Input Stream fis = new  File Input Stream ( file )  ;       File Channel fc = fis . get Channel (  )  ;       Byte Buffer bb =  Byte Buffer . allocate ( start Byte )  ;      fc . read ( bb )  ;      // Write bytes to output File      File Output Stream out = new  File Output Stream ( output File )  ;      out . write ( bb . array (  )  )  ;      out . close (  )  ;      fc . close (  )  ;      fis . close (  )  ;      return output File ;  } throw new  Tag Not Found Exception ( "" There is no ID3v2 Tag data in this file"" )  ; }"
1830,"public  Builder text Color Button ( @ Color Res int .  .  .  color ) { if  ( color . length > 2 )  {      Log . e ( "" Text Color Button"", "" Impossible to set  Text  Color  Button value more than 2!  Please  Check it"" )  ;      throw new  Illegal Argument Exception ( "" Impossible to set  Text  Color  Button value more than 2!  Please  Check it"" )  ;  } if  ( color . length > 0 )  {     if  ( color [ 0 ]  == 0 )  {          Log . e ( "" Text Color Button"", "" Impossible to set  Text  Color  Button to 0, default value black is set!  Please  Check it"" )  ;          m Text Color Btn1 = android . R . color . black ;      } else {         m Text Color Btn1 = color [ 0 ]  ;      } } if  ( color . length > 1 )  {     if  ( color [ 1 ]  == 0 )  {          Log . e ( "" Text Color Button"", "" Impossible to set  Text  Color  Button to 0, default value black is set!  Please  Check it"" )  ;          m Text Color Btn2 = android . R . color . black ;      } else {         m Text Color Btn2 = color [ 1 ]  ;      } } return this ; }"
1831,"public com . anychart . palettes .  Range Colors items (  String color, com . anychart . graphics . vector .  Solid Fill var_args ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . items ( %s, %s )  ; "", wrap Quotes ( color ) ,  ( var_args != null )  ? var_args . get Js Base (  )  : null )  )  ;  return this ; }"
1832,public java . lang .  String get Auxiliary Build Tag (  ) { java . lang .  Object ref = auxiliary Build Tag_ ;  if  ( ref instanceof java . lang .  String )  {     return  ( java . lang .  String )  ref ;  } else {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      auxiliary Build Tag_ = s ;      return s ;  }}
1833,"private void add Off Curve Point (  Point Rec rec,  Render State rs ) { if  ( rs . prev Off != null )  {      Point Rec oc = new  Point Rec (  ( rec . x + rs . prev Off . x )  / 2,  ( rec . y + rs . prev Off . y )  / 2, true )  ;      add On Curve Point ( oc, rs )  ;  } else if  ( rs . first On == null )  {     rs . first Off = rec ;  } rs . prev Off = rec ; }"
1834,public  Secure Utils . K2 Output get Derivatives (  ) { return derivatives ; }
1835,"public static  Dir Cache read (  File index Location, FS fs )  throws  Corrupt Object Exception, IO Exception{ final  Dir Cache c = new  Dir Cache ( index Location, fs )  ;  c . read (  )  ;  return c ; }"
1836,int key And Precondition Hash Code (  ) { return get Key (  )  . hash Code (  )  * 31 + precondition . hash Code (  )  ; }
1837,"public com . anychart . core . stock . scrollerseries .  Candlestick top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
1838,"public  Immutable Set< Build Target> get Exported Deps Closure (  Build Target build Target ) { if  ( index . contains Key ( build Target )  )  {     return index . get ( build Target )  ;  }  Immutable Set< Build Target> exported Deps =  Immutable Set . of (  )  ;   Target Node<?> target Node = target Graph . get ( build Target )  ;  if  ( target Node . get Constructor Arg (  )  instanceof  Java Library Description .  Core Arg )  {      Java Library Description .  Core Arg arg =  (  Java Library Description .  Core Arg )  target Node . get Constructor Arg (  )  ;      exported Deps =  Immutable Set . < Build Target>builder (  )  . add All ( arg . get Exported Deps (  )  )  . add All ( arg . get Exported Provided Deps (  )  )  . build (  )  ;  } else if  ( target Node . get Constructor Arg (  )  instanceof  Prebuilt Jar Description Arg )  {      Prebuilt Jar Description Arg arg =  (  Prebuilt Jar Description Arg )  target Node . get Constructor Arg (  )  ;      exported Deps = arg . get Deps (  )  ;  }  Immutable Set< Build Target> exported Deps Closure = exported Deps . stream (  )  . filter (  target -> {      Build Rule Arg arg =  (  Build Rule Arg )  target Graph . get ( target )  . get Constructor Arg (  )  ;      return !arg . labels Contains Any Of ( ignored Target Labels )  ;  } )  . flat Map (  target ->  Stream . concat (  Stream . of ( target ) , get Exported Deps Closure ( target )  . stream (  )  )  )  . collect (  Immutable Set . to Immutable Set (  )  )  ;  index . put ( build Target, exported Deps Closure )  ;  return exported Deps Closure ; }"
1839,public  Activity Builder set Activity Title (  Char Sequence activity Title ) { m Options . activity Title = activity Title ;  return this ; }
1840,"public static  Virtual File get Buck File From Absolute Target (  Project project,  String target ) { if  ( !is Valid Absolute Target ( target )  )  {     return null ;  }  Virtual File buck Dir = project . get Base Dir (  )  . find File By Relative Path ( extract Absolute Target ( target )  )  ;  return buck Dir != null ? buck Dir . find Child (  Buck File Util . get Build File Name (  )  )  : null ; }"
1841,public void set Carrier Id From Sim Mcc Mnc ( int carrier Id From Sim Mcc Mnc ) { this . carrier Id From Sim Mcc Mnc = carrier Id From Sim Mcc Mnc ; }
1842,"public static void show Keyboard ( final  View panel Layout, final  View focus View ) { final  Activity activity =  (  Activity )  panel Layout . get Context (  )  ;   Keyboard Util . show Keyboard ( focus View )  ;  if  ( is Handle By Placeholder ( activity )  )  {     panel Layout . set Visibility (  View . INVISIBLE )  ;  } else if  ( m Is In Multi Window Mode )  {     panel Layout . set Visibility (  View . GONE )  ;  }}"
1843,"private static float sanitize Float Property Value ( float value ) { if  ( value >= - Float . MAX_VALUE && value <=  Float . MAX_VALUE )  {     return value ;  } if  ( value < - Float . MAX_VALUE || value ==  Float . NEGATIVE_INFINITY )  {     return - Float . MAX_VALUE ;  } if  ( value >  Float . MAX_VALUE || value ==  Float . POSITIVE_INFINITY )  {     return  Float . MAX_VALUE ;  } if  (  Float . is Na N ( value )  )  {     return 0 ;  } //  Shouldn't be possible to reach this point .  throw new  Illegal State Exception ( "" Invalid float property value: "" + value )  ; }"
1844,"public com . anychart . core .  Separate Chart context Menu (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . context Menu ( %s )  ; "", settings )  )  ;  return this ; }"
1845,"public static  Field Descriptor create Standard Field Descriptor (  Schema Proxy schema,  Table table,  String field Description,  Realm Field Type .  .  .  valid Final Column Types ) { return create Field Descriptor ( schema, table, field Description, null, new  Hash Set<> (  Arrays . as List ( valid Final Column Types )  )  )  ; }"
1846,"public com . anychart . core . ui .  Crosshair Label h Align ( com . anychart . graphics . vector . text . H Align align ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . h Align ( %s )  ; "",  ( align != null )  ? align . get Js Base (  )  : null )  )  ;  return this ; }"
1847,"private  Class get Imported Class Impl (  String name )  throws  Util Eval Error{ //  Try explicitly imported class, e . g .  import foo .  Bar ;   String fullname = null ;  if  ( imported Classes != null )      fullname =  (  String )  imported Classes . get ( name )  ;  if  ( fullname != null )  {     /*				 Found the full name in imported classes . 			*/     //  Try to make the full imported name      Class clas = class For Name ( fullname )  ;      //  Handle imported inner class case     if  ( clas == null )  {         if  (  Name . is Compound ( fullname )  )              try {                 clas = get Name Resolver ( fullname )  . to Class (  )  ;              } catch  (  Class Not Found Exception e )  {             /* not a class */             }         else if  (  Interpreter . DEBUG )               Interpreter . debug ( ""imported unpackaged name not found:"" + fullname )  ;          //  If found cache the full name in the  Bsh Class Manager         if  ( clas != null )  {             //  ( should we cache info in not a class case too? )              get Class Manager (  )  . cache Class Info ( fullname, clas )  ;              return clas ;          }     } else         return clas ;      // should we throw an error here??     return null ;  } /*			 Try imported packages, e . g .  ""import foo . bar . * ; ""			in reverse order of import .  .  . 			 ( give later imports precedence .  .  .  ) 		*/ if  ( imported Packages != null )      for  ( int i = imported Packages . size (  )  - 1 ;  i >= 0 ;  i-- )  {          String s =  (  (  String )  imported Packages . element At ( i )  )  + "" . "" + name ;           Class c = class For Name ( s )  ;          if  ( c != null )              return c ;      }  Bsh Class Manager bcm = get Class Manager (  )  ;  /*			 Try super import if available			 Note: we do this last to allow explicitly imported classes			and packages to take priority .    This method will also throw an			error indicating ambiguity if it exists .  .  . 		*/ if  ( bcm . has Super Import (  )  )  {      String s = bcm . get Class Name By Unq Name ( name )  ;      if  ( s != null )          return class For Name ( s )  ;  } return null ; }"
1848,public final  String join (  Joiner joiner ) { return joiner . join ( this )  ; }
1849,public long next Long (  ) { long s1 = this . seed0 ;  final long s0 = this . seed1 ;  this . seed0 = s0 ;  s1 ^= s1 << 23 ;  return  ( this . seed1 =  ( s1 ^ s0 ^  ( s1 >>> 17 )  ^  ( s0 >>> 26 )  )  )  + s0 ; }
1850,"public com . anychart . charts .  Mekko min Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", width )  )  ;  return this ; }"
1851,public static int get Min Retransmission Interval (  ) { return  ( DEFAULT_PUBLICATION_RETRANSMIT_INTERVAL_STEPS + 1 )  * 50 ; }
1852,public  String get New Prefix (  ) { return this . new Prefix ; }
1853,"public void value Anchor (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . value Anchor (  )  ; "" )  ; }"
1854,public boolean is Directory (  File path ) { return  File Utils . is Directory ( path )  ; }
1855,"protected static void stop Sync Server (  ) { try {      Http Utils . stop Sync Server (  )  ;  } catch  (  Exception e )  {      Log . e (  Http Utils . TAG, "" Failed to stop  Sync  Server: "" +  Util . get Stack Trace ( e )  )  ;  }}"
1856,"public  Moshi Converter Factory with Null Serialization (  ) { return new  Moshi Converter Factory ( moshi, lenient, fail On Unknown, true )  ; }"
1857,"Remap Src Paths get Remap Src Paths (  ) { return delegate . get Enum ( SECTION, REMAP_SRC_PATHS,  Remap Src Paths . class )  . or Else (  Remap Src Paths . NO )  ; }"
1858,"private  Exit Code init Go Workspace (  Target Graph Creation Result target Graph Creation Result )  throws  Exception{  Map< Build Target Source Path,  Path> generated Packages = find Code Generation Targets ( target Graph Creation Result . get Target Graph (  )  )  ;  if  ( generated Packages . is Empty (  )  )  {     return  Exit Code . SUCCESS ;  } //  Run code generation targets  Exit Code exit Code = run Build ( generated Packages . key Set (  )  . stream (  )  . map (  Build Target Source Path::get Target )  . collect (  Immutable Set . to Immutable Set (  )  )  )  ;  if  ( exit Code !=  Exit Code . SUCCESS )  {     return exit Code ;  } copy Generated Go Code ( target Graph Creation Result, generated Packages )  ;  return  Exit Code . SUCCESS ; }"
1859,public int get Row Size (  ) { return row Size ; }
1860,public float get Visible X Range (  ) { return  Math . abs ( get Highest Visible X (  )  - get Lowest Visible X (  )  )  ; }
1861,"public com . anychart . core . ui .  Timeline background Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
1862,public int get Item Count (  ) { return m Internal Adapter . get Item Count (  )  ; }
1863,"private void render Cell ( final  Tiled Map Tile Layer .  Cell cell, final float x, final float y, final float color ) { if  ( cell != null )  {     final  Tiled Map Tile tile = cell . get Tile (  )  ;      if  ( tile != null )  {         if  ( tile instanceof  Animated Tiled Map Tile )              return ;          final boolean flip X = cell . get Flip Horizontally (  )  ;          final boolean flip Y = cell . get Flip Vertically (  )  ;          final int rotations = cell . get Rotation (  )  ;           Texture Region region = tile . get Texture Region (  )  ;          float x1 = x + tile . get Offset X (  )  * unit Scale ;          float y1 = y + tile . get Offset Y (  )  * unit Scale ;          float x2 = x1 + region . get Region Width (  )  * unit Scale ;          float y2 = y1 + region . get Region Height (  )  * unit Scale ;          float u1 = region . get U (  )  ;          float v1 = region . get V2 (  )  ;          float u2 = region . get U2 (  )  ;          float v2 = region . get V (  )  ;          vertices [ X1 ]  = x1 ;          vertices [ Y1 ]  = y1 ;          vertices [ C1 ]  = color ;          vertices [ U1 ]  = u1 ;          vertices [ V1 ]  = v1 ;          vertices [ X2 ]  = x1 ;          vertices [ Y2 ]  = y2 ;          vertices [ C2 ]  = color ;          vertices [ U2 ]  = u1 ;          vertices [ V2 ]  = v2 ;          vertices [ X3 ]  = x2 ;          vertices [ Y3 ]  = y2 ;          vertices [ C3 ]  = color ;          vertices [ U3 ]  = u2 ;          vertices [ V3 ]  = v2 ;          vertices [ X4 ]  = x2 ;          vertices [ Y4 ]  = y1 ;          vertices [ C4 ]  = color ;          vertices [ U4 ]  = u2 ;          vertices [ V4 ]  = v1 ;          if  ( flip X )  {             float temp = vertices [ U1 ]  ;              vertices [ U1 ]  = vertices [ U3 ]  ;              vertices [ U3 ]  = temp ;              temp = vertices [ U2 ]  ;              vertices [ U2 ]  = vertices [ U4 ]  ;              vertices [ U4 ]  = temp ;          }         if  ( flip Y )  {             float temp = vertices [ V1 ]  ;              vertices [ V1 ]  = vertices [ V3 ]  ;              vertices [ V3 ]  = temp ;              temp = vertices [ V2 ]  ;              vertices [ V2 ]  = vertices [ V4 ]  ;              vertices [ V4 ]  = temp ;          }         if  ( rotations == 2 )  {             float temp U = vertices [ U1 ]  ;              vertices [ U1 ]  = vertices [ U3 ]  ;              vertices [ U3 ]  = temp U ;              temp U = vertices [ U2 ]  ;              vertices [ U2 ]  = vertices [ U4 ]  ;              vertices [ U4 ]  = temp U ;              float temp V = vertices [ V1 ]  ;              vertices [ V1 ]  = vertices [ V3 ]  ;              vertices [ V3 ]  = temp V ;              temp V = vertices [ V2 ]  ;              vertices [ V2 ]  = vertices [ V4 ]  ;              vertices [ V4 ]  = temp V ;          }         batch . draw ( region . get Texture (  ) , vertices, 0, NUM_VERTICES )  ;      } }}"
1864,"float get Float Value (  Keyframe< Float> keyframe, float keyframe Progress ) { if  ( keyframe . start Value == null || keyframe . end Value == null )  {     throw new  Illegal State Exception ( "" Missing values for keyframe . "" )  ;  } if  ( value Callback != null )  {     //noinspection  Constant Conditions      Float value = value Callback . get Value Internal ( keyframe . start Frame, keyframe . end Frame, keyframe . start Value, keyframe . end Value, keyframe Progress, get Linear Current Keyframe Progress (  ) , get Progress (  )  )  ;      if  ( value != null )  {         return value ;      } } return  Misc Utils . lerp ( keyframe . get Start Value Float (  ) , keyframe . get End Value Float (  ) , keyframe Progress )  ; }"
1865,public  Builder set Content Title (  Char Sequence title ) { showcase View . set Content Title ( title )  ;  return this ; }
1866,"public com . anychart . core . pert .  Milestones selected (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1867,public void go Offline (  ) { ensure Repo (  )  ;   Repo Manager . interrupt ( this . repo )  ; }
1868,public void set Uri ( UR Iish uri ) { this . remote Uri = uri ; }
1869,public void set Subtype (  String subtype ) { this . subtype = subtype ; }
1870,"public com . anychart . charts .  Tree Map padding (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
1871,public void set Padding Top ( final int padding Top ) { this . padding Top = padding Top ; }
1872,private  View get Content View (  ) {  Frame Layout frame Layout = new  Frame Layout ( get Context (  )  )  ;  frame Layout . add View ( m Host View )  ;  if  ( m Status Bar Translucent )  {     frame Layout . set System Ui Visibility (  View . SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN )  ;  } else {     frame Layout . set Fits System Windows ( true )  ;  } return frame Layout ; }
1873,"public void register Function (  String namespace URI,  String local Name,  Function function ) { this . functions . put ( new  Qualified Name ( namespace URI, local Name ) , function )  ; }"
1874,"public static  Metadata parse Mdta From Meta (  Atom .  Container Atom meta ) {  Atom .  Leaf Atom hdlr Atom = meta . get Leaf Atom Of Type (  Atom . TYPE_hdlr )  ;   Atom .  Leaf Atom keys Atom = meta . get Leaf Atom Of Type (  Atom . TYPE_keys )  ;   Atom .  Leaf Atom ilst Atom = meta . get Leaf Atom Of Type (  Atom . TYPE_ilst )  ;  if  ( hdlr Atom == null || keys Atom == null || ilst Atom == null ||  Atom Parsers . parse Hdlr ( hdlr Atom . data )  != TYPE_mdta )  {     //  There isn't enough information to parse the metadata, or the handler type is unexpected .      return null ;  } //  Parse metadata keys .   Parsable Byte Array keys = keys Atom . data ;  keys . set Position (  Atom . FULL_HEADER_SIZE )  ;  int entry Count = keys . read Int (  )  ;   String [  ]  key Names = new  String [ entry Count ]  ;  for  ( int i = 0 ;  i < entry Count ;  i++ )  {     int entry Size = keys . read Int (  )  ;      // key Namespace     keys . skip Bytes ( 4 )  ;      int key Size = entry Size - 8 ;      key Names [ i ]  = keys . read String ( key Size )  ;  } //  Parse metadata items .   Parsable Byte Array ilst = ilst Atom . data ;  ilst . set Position (  Atom . HEADER_SIZE )  ;   Array List< Metadata .  Entry> entries = new  Array List<> (  )  ;  while  ( ilst . bytes Left (  )  >  Atom . HEADER_SIZE )  {     int atom Position = ilst . get Position (  )  ;      int atom Size = ilst . read Int (  )  ;      int key Index = ilst . read Int (  )  - 1 ;      if  ( key Index >= 0 && key Index < key Names . length )  {          String key = key Names [ key Index ]  ;           Metadata .  Entry entry =  Metadata Util . parse Mdta Metadata Entry From Ilst ( ilst, atom Position + atom Size, key )  ;          if  ( entry != null )  {             entries . add ( entry )  ;          }     } else {          Log . w ( TAG, "" Skipped metadata with unknown key index: "" + key Index )  ;      }     ilst . set Position ( atom Position + atom Size )  ;  } return entries . is Empty (  )  ? null : new  Metadata ( entries )  ; }"
1875,public  Object next Element (  ) { return next Token (  )  ; }
1876,"public static  Annotation make Annotation Default (  Annotation defaults ) {  Annotation result = new  Annotation ( ANNOTATION_DEFAULT_TYPE, SYSTEM )  ;  result . put ( new  Name Value Pair ( VALUE_STRING, new  Cst Annotation ( defaults )  )  )  ;  result . set Immutable (  )  ;  return result ; }"
1877,"public com . anychart . charts .  Gantt margin (  String value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, value4 )  )  ;  return this ; }"
1878,private void init_standard_header_with_expandcollapse_button (  ) { // Create a  Card  Card card = new  Card ( get Activity (  )  )  ;  // Create a  Card Header  Card Header header = new  Card Header ( get Activity (  )  )  ;  // Set the header title header . set Title ( get String ( R . string . demo_header_basetitle )  )  ;  // Set visible the expand/collapse button header . set Button Expand Visible ( true )  ;  // Add  Header to card card . add Card Header ( header )  ;  // This provides a simple  ( and useless )  expand area  Card Expand expand = new  Card Expand ( get Activity (  )  )  ;  // Set inner title in  Expand  Area expand . set Title ( get String ( R . string . demo_expand_basetitle )  )  ;  card . add Card Expand ( expand )  ;  // Set card in the  Card View  Card View card View =  (  Card View )  get Activity (  )  . find View By Id ( R . id . carddemo_header_expand )  ;  card View . set Card ( card )  ; }
1879,public  Cst Type get Outer Class (  ) { return outer Class ; }
1880,"public com . anychart . core .  State Settings median Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . median Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
1881,"public com . anychart . charts .  Pie animation (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . animation ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
1882,"public com . anychart . charts .  Radar margin (  Number value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
1883,"public com . anychart . charts .  Sparkline max Fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
1884,public void start With Pop ( I Support Fragment to Fragment ) { m Delegate . start With Pop ( to Fragment )  ; }
1885,"public static int get Art Method Size (  ) { if  ( art Method Size > 0 )  {     return art Method Size ;  } final  Method rule1 =  Xposed Helpers . find Method Exact (  Art Method . class, ""rule1"" )  ;  final  Method rule2 =  Xposed Helpers . find Method Exact (  Art Method . class, ""rule2"" )  ;  final long rule2 Address =  Epic Native . get Method Address ( rule2 )  ;  final long rule1 Address =  Epic Native . get Method Address ( rule1 )  ;  final long size =  Math . abs ( rule2 Address - rule1 Address )  ;  art Method Size =  ( int )  size ;   Logger . d ( TAG, ""art  Method size: "" + size )  ;  return art Method Size ; }"
1886,"public  Object Builder add Number (  String field Name,  Optional< Double> maybe Value ) { return maybe Value . is Present (  )  ? add Number ( field Name, maybe Value . get (  )  )  : this ; }"
1887,public static  Http Request get Sent Http Request ( int index ) { return get Fake Http Layer (  )  . get Sent Http Request Info ( index )  . get Http Request (  )  ; }
1888,"public static JSON Object get JSON Object ( @ Non Null final  String key, @ Non Null final  Cache Disk Utils cache Disk Utils ) { return cache Disk Utils . get JSON Object ( key )  ; }"
1889,"public static  Block Info Ex new Instance (  File file ) {  Block Info Ex block Info = new  Block Info Ex (  )  ;  block Info . log File = file ;   Buffered Reader reader = null ;  try {      Input Stream Reader in = new  Input Stream Reader ( new  File Input Stream ( file ) , ""UTF-8"" )  ;      reader = new  Buffered Reader ( in )  ;      for  (  String line = reader . read Line (  )  ;  line != null ;  line = reader . read Line (  )  )  {         if  ( line . starts With ( KEY_QUA )  )  {             block Info . qualifier = line . split ( KV )  [ 1 ]  ;          } else if  ( line . starts With ( KEY_MODEL )  )  {             block Info . model = line . split ( KV )  [ 1 ]  ;          } else if  ( line . starts With ( KEY_API )  )  {             block Info . api Level = line . split ( KV )  [ 1 ]  ;          } else if  ( line . starts With ( KEY_IMEI )  )  {             block Info . imei = line . split ( KV )  [ 1 ]  ;          } else if  ( line . starts With ( KEY_CPU_CORE )  )  {             block Info . cpu Core Num =  Integer . value Of ( line . split ( KV )  [ 1 ]  )  ;          } else if  ( line . starts With ( KEY_UID )  )  {             block Info . uid = line . split ( KV )  [ 1 ]  ;          } else if  ( line . starts With ( KEY_TIME_COST_START )  )  {             block Info . time Start = line . split ( KV )  [ 1 ]  ;          } else if  ( line . starts With ( KEY_TIME_COST_END )  )  {             block Info . time End = line . split ( KV )  [ 1 ]  ;          } else if  ( line . starts With ( KEY_TIME_COST )  )  {             block Info . time Cost =  Long . value Of ( line . split ( KV )  [ 1 ]  )  ;          } else if  ( line . starts With ( KEY_THREAD_TIME_COST )  )  {             block Info . thread Time Cost =  Long . value Of ( line . split ( KV )  [ 1 ]  )  ;          } else if  ( line . starts With ( KEY_PROCESS )  )  {             block Info . process Name = line . split ( KV )  [ 1 ]  ;          } else if  ( line . starts With ( KEY_VERSION_NAME )  )  {             block Info . version Name = line . split ( KV )  [ 1 ]  ;          } else if  ( line . starts With ( KEY_VERSION_CODE )  )  {             block Info . version Code =  Integer . value Of ( line . split ( KV )  [ 1 ]  )  ;          } else if  ( line . starts With ( KEY_NETWORK )  )  {             block Info . network = line . split ( KV )  [ 1 ]  ;          } else if  ( line . starts With ( KEY_TOTAL_MEMORY )  )  {             block Info . total Memory = line . split ( KV )  [ 1 ]  ;          } else if  ( line . starts With ( KEY_FREE_MEMORY )  )  {             block Info . free Memory = line . split ( KV )  [ 1 ]  ;          } else if  ( line . starts With ( KEY_CPU_BUSY )  )  {             block Info . cpu Busy =  Boolean . value Of ( line . split ( KV )  [ 1 ]  )  ;          } else if  ( line . starts With ( KEY_CPU_RATE )  )  {              String [  ]  split = line . split ( KV )  ;              if  ( split . length > 1 )  {                  String Builder cpu Rate Sb = new  String Builder ( split [ 1 ]  )  ;                  cpu Rate Sb . append ( line . split ( KV )  [ 1 ]  )  . append ( SEPARATOR )  ;                  line = reader . read Line (  )  ;                  // read until SEPARATOR appears                 while  ( line != null )  {                     if  ( !line . equals ( """" )  )  {                         cpu Rate Sb . append ( line )  . append ( SEPARATOR )  ;                      } else {                         break ;                      }                     line = reader . read Line (  )  ;                  }                 block Info . cpu Rate Info = cpu Rate Sb . to String (  )  ;              }         } else if  ( line . starts With ( KEY_STACK )  )  {              String Builder stack Sb = new  String Builder ( line . split ( KV )  [ 1 ]  )  ;              line = reader . read Line (  )  ;              // read until file ends             while  ( line != null )  {                 if  ( !line . equals ( """" )  )  {                     stack Sb . append ( line )  . append ( SEPARATOR )  ;                  } else if  ( stack Sb . length (  )  > 0 )  {                     // ignore continual blank lines                     block Info . thread Stack Entries . add ( stack Sb . to String (  )  )  ;                      stack Sb = new  String Builder (  )  ;                  }                 line = reader . read Line (  )  ;              }         }     }     reader . close (  )  ;      reader = null ;  } catch  (  Throwable t )  {      Log . e ( TAG, NEW_INSTANCE_METHOD, t )  ;  } finally {     try {         if  ( reader != null )  {             reader . close (  )  ;          }     } catch  (  Exception e )  {          Log . e ( TAG, NEW_INSTANCE_METHOD, e )  ;      } } block Info . flush String (  )  ;  return block Info ; }"
1890,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
1891,"synchronized void record Node Action ( @ Non Null  Xml Element merged Element, @ Non Null  Actions .  Node Record node Record ) {  Node Key storage Key = merged Element . get Original Id (  )  ;   Actions .  Decision Tree Record node Decision Tree = m Records . get ( storage Key )  ;  if  ( node Decision Tree == null )  {     node Decision Tree = new  Actions .  Decision Tree Record (  )  ;      m Records . put ( storage Key, node Decision Tree )  ;  } node Decision Tree . add Node Record ( node Record )  ; }"
1892,"public com . anychart . standalones .  Color Range stroke ( com . anychart . graphics . vector .  Colored Fill value,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
1893,public void set Connection Time Out ( int time Out ) { m Time Out = time Out ;  m Packet Sender . set Timeout ( m Time Out )  ; }
1894,private static void re Order Elements ( @ Non Null  Xml Element xml Element ) { re Order Application ( xml Element )  ;  re Order Uses Sdk ( xml Element )  ; }
1895,"public synchronized void reset (  )  throws IO Exception{ if  ( buf == null )  {     throw new IO Exception ( "" Stream is closed"" )  ;  } if  ( -1 == markpos )  {     throw new  Invalid Mark Exception ( "" Mark has been invalidated, pos: "" + pos + "" mark Limit: "" + marklimit )  ;  } pos = markpos ; }"
1896,"public com . anychart . charts .  Waterfall x Grid (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Grid ( %s )  ; "", settings )  )  ;  return this ; }"
1897,"public  Result<U> if Succeeded Attempt Map ( @ Non Null final  Function<? super T,  Result<U>> attempt Function ) { if  ( value != null )  {     return attempt Function . apply ( value )  ;  } return same Failure (  )  ; }"
1898,"public static boolean has Shortcut (  Activity activity ) { boolean is Install Shortcut = false ;  final  Content Resolver cr = activity . get Content Resolver (  )  ;  final  String AUTHORITY = ""com . android . launcher . settings"" ;  final  Uri CONTENT_URI =  Uri . parse ( ""content://"" + AUTHORITY + ""/favorites?notify=true"" )  ;   Cursor c = cr . query ( CONTENT_URI, new  String [  ]  { ""title"", ""icon Resource"" }, ""title=?"", new  String [  ]  { activity . get String ( R . string . app_name )  . trim (  )  }, null )  ;  if  ( c != null && c . get Count (  )  > 0 )  {     is Install Shortcut = true ;  } return is Install Shortcut ; }"
1899,static  Drawable Parent find Drawable Parent For Leaf (  Drawable Parent parent ) { while  ( true )  {      Drawable child = parent . get Drawable (  )  ;      if  ( child == parent || ! ( child instanceof  Drawable Parent )  )  {         break ;      }     parent =  (  Drawable Parent )  child ;  } return parent ; }
1900,public  Amplitude Client set Event Upload Period Millis ( int event Upload Period Millis ) { this . event Upload Period Millis = event Upload Period Millis ;  return this ; }
1901,"private  List< String> get Usernames (  ) { //  Simulate network latency try {      Thread . sleep ( 2000 )  ;  } catch  (  Interrupted Exception e )  {      Log . e ( TAG, e . to String (  )  )  ;      return null ;  } if  ( NUMBER_OF_USERS < 0 )  {     return null ;  }  String name1 = "" Joe"" ;   String name2 = "" Amanda"" ;  final  List< String> usernames = new  Array List< String> (  )  ;   Random random = new  Random (  )  ;  for  ( int i = 0 ;  i < NUMBER_OF_USERS ;  i++ )  {     int number = random . next Int ( 50 )  ;      if  (  System . current Time Millis (  )  % 2 == 0 )  {         usernames . add ( name1 + number )  ;      } else {         usernames . add ( name2 + number )  ;      } } return usernames ; }"
1902,"private  Http URL Connection make Connection (  Data Spec data Spec )  throws IO Exception{ URL url = new URL ( data Spec . uri . to String (  )  )  ;  @ Http Method int http Method = data Spec . http Method ;  byte [  ]  http Body = data Spec . http Body ;  long position = data Spec . position ;  long length = data Spec . length ;  boolean allow Gzip = data Spec . is Flag Set (  Data Spec . FLAG_ALLOW_GZIP )  ;  boolean allow Icy Metadata = data Spec . is Flag Set (  Data Spec . FLAG_ALLOW_ICY_METADATA )  ;  if  ( !allow Cross Protocol Redirects )  {     // automatically .   This is the behavior we want, so use it .      return make Connection ( url, http Method, http Body, position, length, allow Gzip, allow Icy Metadata, /* follow Redirects= */     true )  ;  } //  We need to handle redirects ourselves to allow cross-protocol redirects .  int redirect Count = 0 ;  while  ( redirect Count++ <= MAX_REDIRECTS )  {      Http URL Connection connection = make Connection ( url, http Method, http Body, position, length, allow Gzip, allow Icy Metadata, /* follow Redirects= */     false )  ;      int response Code = connection . get Response Code (  )  ;       String location = connection . get Header Field ( "" Location"" )  ;      if  (  ( http Method ==  Data Spec . HTTP_METHOD_GET || http Method ==  Data Spec . HTTP_METHOD_HEAD )  &&  ( response Code ==  Http URL Connection . HTTP_MULT_CHOICE || response Code ==  Http URL Connection . HTTP_MOVED_PERM || response Code ==  Http URL Connection . HTTP_MOVED_TEMP || response Code ==  Http URL Connection . HTTP_SEE_OTHER || response Code == HTTP_STATUS_TEMPORARY_REDIRECT || response Code == HTTP_STATUS_PERMANENT_REDIRECT )  )  {         connection . disconnect (  )  ;          url = handle Redirect ( url, location )  ;      } else if  ( http Method ==  Data Spec . HTTP_METHOD_POST &&  ( response Code ==  Http URL Connection . HTTP_MULT_CHOICE || response Code ==  Http URL Connection . HTTP_MOVED_PERM || response Code ==  Http URL Connection . HTTP_MOVED_TEMP || response Code ==  Http URL Connection . HTTP_SEE_OTHER )  )  {         // POST request follows the redirect and is transformed into a GET request .          connection . disconnect (  )  ;          http Method =  Data Spec . HTTP_METHOD_GET ;          http Body = null ;          url = handle Redirect ( url, location )  ;      } else {         return connection ;      } } //  If we get here we've been redirected more times than are permitted .  throw new  No Route To Host Exception ( "" Too many redirects: "" + redirect Count )  ; }"
1903,"public boolean contains Value (  Object value ) {  Iterator< Map .  Entry<K, V>> it = entry Set (  )  . iterator (  )  ;  if  ( value != null )  {     while  ( it . has Next (  )  )  {         if  ( value . equals ( it . next (  )  . get Value (  )  )  )  {             return true ;          }     } } else {     while  ( it . has Next (  )  )  {         if  ( it . next (  )  . get Value (  )  == null )  {             return true ;          }     } } return false ; }"
1904,"private void create Animated Graph With Addition Node ( int view Tag, double first Value, double second Value ) { m Native Animated Nodes Manager . create Animated Node ( 1,  Java Only Map . of ( ""type"", ""value"", ""value"", first Value, ""offset"", 0d )  )  ;  m Native Animated Nodes Manager . create Animated Node ( 2,  Java Only Map . of ( ""type"", ""value"", ""value"", second Value, ""offset"", 0d )  )  ;  m Native Animated Nodes Manager . create Animated Node ( 3,  Java Only Map . of ( ""type"", ""addition"", ""input"",  Java Only Array . of ( 1, 2 )  )  )  ;  m Native Animated Nodes Manager . create Animated Node ( 4,  Java Only Map . of ( ""type"", ""style"", ""style"",  Java Only Map . of ( ""translate X"", 3 )  )  )  ;  m Native Animated Nodes Manager . create Animated Node ( 5,  Java Only Map . of ( ""type"", ""props"", ""props"",  Java Only Map . of ( ""style"", 4 )  )  )  ;  m Native Animated Nodes Manager . connect Animated Nodes ( 1, 3 )  ;  m Native Animated Nodes Manager . connect Animated Nodes ( 2, 3 )  ;  m Native Animated Nodes Manager . connect Animated Nodes ( 3, 4 )  ;  m Native Animated Nodes Manager . connect Animated Nodes ( 4, 5 )  ;  m Native Animated Nodes Manager . connect Animated Node To View ( 5, view Tag )  ; }"
1905,"public com . anychart . core . ui .  Crosshair Label padding (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
1906,"public com . anychart . charts .  Scatter palette (  String [  ]  settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "", array To String Wrap Quotes ( settings )  )  )  ;  return this ; }"
1907,"private void drain And Reinitialize Codec (  )  throws  Exo Playback Exception{ if  ( codec Received Buffers )  {     codec Drain State = DRAIN_STATE_SIGNAL_END_OF_STREAM ;      codec Drain Action = DRAIN_ACTION_REINITIALIZE ;  } else {     //  Nothing has been queued to the decoder, so we can re-initialize immediately .      reinitialize Codec (  )  ;  }}"
1908,public  String get Value (  ) { return m Xml . get Value (  )  ; }
1909,public  Submodule Walk set Tree (  Any Object Id tree Id )  throws IO Exception{ walk . add Tree ( tree Id )  ;  return this ; }
1910,public void remove Request Event Listener (  Request Event Listener listener ) { synchronized  ( m Event Listeners )  {     m Event Listeners . remove ( listener )  ;  }}
1911,public boolean is Automatic Data Collection Enabled (  ) { return data Collection Helper . is Automatic Data Collection Enabled (  )  ; }
1912,"public  Proto Fluent Assertion using Float Tolerance For Field Descriptors ( float tolerance,  Field Descriptor first Field Descriptor,  Field Descriptor .  .  .  rest ) { return using Config ( config . using Float Tolerance For Field Descriptors ( tolerance, as List ( first Field Descriptor, rest )  )  )  ; }"
1913,public byte [  ]  get Response Body As Byte Array (  ) { return this . response Body ; }
1914,public  Tag Command set Message (  String message ) { check Callable (  )  ;  this . message = message ;  return this ; }
1915,"public static  Bitmap create Bitmap Safely ( int width, int height,  Bitmap .  Config config, int retry Count ) { try {     return  Bitmap . create Bitmap ( width, height, config )  ;  } catch  (  Out Of Memory Error e )  {     e . print Stack Trace (  )  ;      if  ( retry Count > 0 )  {          System . gc (  )  ;          return create Bitmap Safely ( width, height, config, retry Count - 1 )  ;      }     return null ;  }}"
1916,public void set Is Primary User ( boolean is Primary User ) {  User Info user Info = get User Info (  User Handle . my User Id (  )  )  ;  if  ( is Primary User )  {     user Info . flags |=  User Info . FLAG_PRIMARY ;  } else {     user Info . flags &= ~ User Info . FLAG_PRIMARY ;  }}
1917,public void set Modified Date (  Date modified Date ) { this . modified Date = modified Date ; }
1918,"public static  Either< Buck Fix Spec,  Fix Spec Failure> parse From Build Id With Exit Code (  Build Log Helper helper,  Fix Buck Config fix Config,  Build Id build Id,  Exit Code exit Code, boolean manually Invoked,  Optional< Exception> run Exception )  throws IO Exception{  Optional< Build Log Entry> entry = helper . get Build Log Entry From Id ( build Id )  ;  return entry . map (  e -> spec From Build Log Entry ( fix Config, e,  Optional Int . of ( exit Code . get Code (  )  ) , manually Invoked, run Exception )  )  . or Else (  Either . of Right (  Fix Spec Failure . MISSING )  )  ; }"
1919,"private long get Playback Head Position (  ) {  Audio Track audio Track =  Assertions . check Not Null ( this . audio Track )  ;  if  ( stop Timestamp Us != C . TIME_UNSET )  {     //  Simulate the playback head position up to the total number of frames submitted .      long elapsed Time Since Stop Us =  (  System Clock . elapsed Realtime (  )  * 1000 )  - stop Timestamp Us ;      long frames Since Stop =  ( elapsed Time Since Stop Us * output Sample Rate )  / C . MICROS_PER_SECOND ;      return  Math . min ( end Playback Head Position, stop Playback Head Position + frames Since Stop )  ;  } int state = audio Track . get Play State (  )  ;  if  ( state == PLAYSTATE_STOPPED )  {     //  The audio track hasn't been started .      return 0 ;  } long raw Playback Head Position = 0x FFFFFFFFL & audio Track . get Playback Head Position (  )  ;  if  ( needs Passthrough Workarounds )  {     // tracks .   See  [  Internal: b/19187573 ]  .      if  ( state == PLAYSTATE_PAUSED && raw Playback Head Position == 0 )  {         passthrough Workaround Pause Offset = last Raw Playback Head Position ;      }     raw Playback Head Position += passthrough Workaround Pause Offset ;  } if  (  Util . SDK_INT <= 29 )  {     if  ( raw Playback Head Position == 0 && last Raw Playback Head Position > 0 && state == PLAYSTATE_PLAYING )  {         // {@link #FORCE_RESET_WORKAROUND_TIMEOUT_MS} has elapsed .          if  ( force Reset Workaround Time Ms == C . TIME_UNSET )  {             force Reset Workaround Time Ms =  System Clock . elapsed Realtime (  )  ;          }         return last Raw Playback Head Position ;      } else {         force Reset Workaround Time Ms = C . TIME_UNSET ;      } } if  ( last Raw Playback Head Position > raw Playback Head Position )  {     //  The value must have wrapped around .      raw Playback Head Wrap Count++ ;  } last Raw Playback Head Position = raw Playback Head Position ;  return raw Playback Head Position +  ( raw Playback Head Wrap Count << 32 )  ; }"
1920,public  Storage Task< Result T> remove On Paused Listener ( @ Non Null  On Paused Listener<? super  Result T> listener ) {  Preconditions . check Not Null ( listener )  ;  paused Manager . remove Listener ( listener )  ;  return this ; }
1921,"public  Rx Inserter< Category> prepare Insert Into Category ( @ On Conflict int on Conflict Algorithm ) { return prepare Insert Into Category ( on Conflict Algorithm, true )  ; }"
1922,public void delete (  Random Access File file )  throws IO Exception{ long file Pointer ;  ID3v1 Tag id3v1tag = new ID3v1 Tag (  )  ; }
1923,void action (  String param ) {}
1924,"public void on Item Checked State Changed (  Action Mode mode, int position, long id, boolean checked ) { m Helper . on Item Checked State Changed ( mode, position, id, checked )  ; }"
1925,"public com . anychart . charts .  Stock zoom Marquee Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . zoom Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1926,"private boolean extend String To Match By One Character ( char c ) { final  List< Head> new Heads = list For Local Useage ;  new Heads . clear (  )  ;   List< Head> last Added Heads = null ;  for  ( int i = 0 ;  i < heads . size (  )  ;  i++ )  {     final  Head head = heads . get ( i )  ;      final  List< Head> heads To Add = head . get Next Heads ( c )  ;      // both can return the list  [ ""*"",""b"" ]      if  ( heads To Add != last Added Heads )  {         if  ( !heads To Add . is Empty (  )  )              new Heads . add All ( heads To Add )  ;          last Added Heads = heads To Add ;      } } list For Local Useage = heads ;  heads = new Heads ;  return !new Heads . is Empty (  )  ; }"
1927,"private static  String get Version Name (  Context context ) { try {      Package Info package Info = context . get Package Manager (  )  . get Package Info ( context . get Package Name (  ) , 0 )  ;      return package Info . version Name ;  } catch  (  Exception e )  {     return "" Unknown"" ;  }}"
1928,void change Drag View Scale (  ) { transformer . update Width ( get Vertical Drag Offset (  )  )  ;  transformer . update Height ( get Vertical Drag Offset (  )  )  ; }
1929,"public  String get Primary Key ( int database Id,  String table ) { // 1 .  get the struct of table  Database Result info = get Table Info ( database Id, table )  ;  int column Size = info . column Names . size (  )  ;  int pk Index = -1 ;  int name Index = -1 ;  // 2 .  find the position of name and pk for  ( int i = 0 ;  i < column Size ;  i++ )  {     if  (  Text Utils . equals ( info . column Names . get ( i ) ,  Column . PK )  )  {         pk Index = i ;      } else if  (  Text Utils . equals ( info . column Names . get ( i ) ,  Column . NAME )  )  {         name Index = i ;      }     if  ( pk Index >= 0 && name Index >= 0 )  {         break ;      } } // 3 .  determine the primary key based on the value of pk  String primary Key Name = null ;  for  ( int i = 0 ;  i < info . values . size (  )  ;  i++ )  {      String pk Value = info . values . get ( i )  . get ( pk Index )  ;      if  ( ! Text Utils . is Empty ( pk Value )  && ""1"" . equals ( pk Value )  )  {         primary Key Name = info . values . get ( i )  . get ( name Index )  ;          break ;      } } // 4 .  if no primary key defined, use ROW_ID as default if  (  Text Utils . is Empty ( primary Key Name )  )  {     primary Key Name =  Column . ROW_ID ;  } return primary Key Name ; }"
1930,public static  Api Key Obfuscator obfuscator (  ) { return new  Api Key Obfuscator ( get Patterns (  )  )  ; }
1931,"public void on Match Method (  Null Away analysis,  Method Tree tree,  Visitor State state,  Symbol .  Method Symbol method Symbol ) {  Set< String> annotation Content =  Nullability Util . get Annotation Value Array ( method Symbol, annot Name, false )  ;  boolean is Annotated = annotation Content != null ;  boolean is Valid = is Annotated && validate Annotation Syntax ( annotation Content, analysis, tree, state, method Symbol )  && validate Annotation Semantics ( analysis, state, tree, method Symbol )  ;  if  ( is Annotated && !is Valid )  {     return ;  }  Symbol .  Method Symbol closest Overridden Method =  Nullability Util . get Closest Overridden Method ( method Symbol, state . get Types (  )  )  ;  if  ( closest Overridden Method == null )  {     return ;  }  Set< String> field Names ;  if  ( is Annotated )  {     field Names =  Contract Utils . trim Receivers ( annotation Content )  ;  } else {     field Names =  Collections . empty Set (  )  ;  } validate Overriding Rules ( field Names, analysis, state, tree, closest Overridden Method )  ;  super . on Match Method ( analysis, tree, state, method Symbol )  ; }"
1932,public  Media Codec Info Builder set Capabilities (  Codec Capabilities .  .  .  capabilities ) { this . capabilities = capabilities ;  return this ; }
1933,"public  Auto Size Config set Design Height In Dp ( int design Height In Dp ) {  Preconditions . check Argument ( design Height In Dp > 0, ""design Height In Dp must be > 0"" )  ;  m Design Height In Dp = design Height In Dp ;  return this ; }"
1934,"public void write String (  String s ) { int null Terminated Chars =  ( s != null )  ?  ( s . length (  )  + 1 )  : 0 ;  //  Android encodes strings as length plus a null-terminated array of 2-byte characters .  // write Value will pad to nearest 4 bytes .    Null is encoded as just -1 .  int size Bytes = INT_SIZE_BYTES +  ( null Terminated Chars * 2 )  ;  write Value ( size Bytes, s )  ; }"
1935,"public boolean has Listener (  Sensor Event Listener listener,  Sensor sensor ) { return listeners . contains Entry ( listener, sensor )  ; }"
1936,"private void decode Header (  Buffered Reader in,  Map< String,  String> pre,  Map< String,  List< String>> parms,  Map< String,  String> headers )  throws  Response Exception{ try {     //  Read the request line      String in Line = in . read Line (  )  ;      if  ( in Line == null )  {         return ;      }      String Tokenizer st = new  String Tokenizer ( in Line )  ;      if  ( !st . has More Tokens (  )  )  {         throw new  Response Exception (  Status . BAD_REQUEST, ""BAD REQUEST:  Syntax error .   Usage: GET /example/file . html"" )  ;      }     pre . put ( ""method"", st . next Token (  )  )  ;      if  ( !st . has More Tokens (  )  )  {         throw new  Response Exception (  Status . BAD_REQUEST, ""BAD REQUEST:  Missing URI .   Usage: GET /example/file . html"" )  ;      }      String uri = st . next Token (  )  ;      //  Decode parameters from the URI     int qmi = uri . index Of ( '?' )  ;      if  ( qmi >= 0 )  {         decode Parms ( uri . substring ( qmi + 1 ) , parms )  ;          uri =  Nano HTTPD . decode Percent ( uri . substring ( 0, qmi )  )  ;      } else {         uri =  Nano HTTPD . decode Percent ( uri )  ;      }     // case insensitive and vary by client .      if  ( st . has More Tokens (  )  )  {         protocol Version = st . next Token (  )  ;      } else {         protocol Version = ""HTTP/1 . 1"" ;           Nano HTTPD . LOG . log (  Level . FINE, ""no protocol version specified, strange .   Assuming HTTP/1 . 1 . "" )  ;      }      String line = in . read Line (  )  ;      while  ( line != null && !line . trim (  )  . is Empty (  )  )  {         int p = line . index Of ( ':' )  ;          if  ( p >= 0 )  {             headers . put ( line . substring ( 0, p )  . trim (  )  . to Lower Case (  Locale . US ) , line . substring ( p + 1 )  . trim (  )  )  ;          }         line = in . read Line (  )  ;      }     pre . put ( ""uri"", uri )  ;  } catch  ( IO Exception ioe )  {     throw new  Response Exception (  Status . INTERNAL_ERROR, ""SERVER INTERNAL ERROR: IO Exception: "" + ioe . get Message (  ) , ioe )  ;  }}"
1937,"private boolean check Mime Type (  String mime Type,  Al Customization Settings al Customization Settings ) {  File Utils .  Gallery Filter Options option = get Filter Options ( al Customization Settings )  ;  switch ( option )  {     case ALL_FILES:         return true ;      case IMAGE_VIDEO:         return mime Type . contains ( ""image/"" )  || mime Type . contains ( ""video/"" )  ;      case IMAGE_ONLY:         return mime Type . contains ( ""image/"" )  ;      case VIDEO_ONLY:         return mime Type . contains ( ""video/"" )  ;      case AUDIO_ONLY:         return mime Type . contains ( ""audio/"" )  ;  } return false ; }"
1938,"public void text Direction (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . text Direction (  )  ; "" )  ; }"
1939,"public com . anychart . core . resource . resourcelist .  Image Settings margin (  String [  ]  margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "", array To String Wrap Quotes ( margin )  )  )  ;  return this ; }"
1940,"public static  Class<?> to Class (  Lookup lookup, byte [  ]  bcode )  throws  Cannot Compile Exception{ try {     return lookup . define Class ( bcode )  ;  } catch  (  Illegal Access Exception |  Illegal Argument Exception e )  {     throw new  Cannot Compile Exception ( e . get Message (  )  )  ;  }}"
1941,"public com . anychart . core . cartesian . series .  Step Area step Area ( com . anychart . data .  View data,  String csv Settings ) { return new com . anychart . core . cartesian . series .  Step Area (  String . format (  Locale . US, js Base + "" . step Area ( %s, %s ) "",  ( data != null )  ? data . get Js Base (  )  : null, wrap Quotes ( csv Settings )  )  )  ; }"
1942,"public com . anychart . charts .  Pie fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
1943,"public static  Path get Path To File (  Source Path Resolver Adapter resolver,  Source Path source Path ) { if  ( source Path instanceof  Archive Member Source Path )  {     return resolver . get Relative Path (  (  (  Archive Member Source Path )  source Path )  . get Archive Source Path (  )  )  ;  } return resolver . get Relative Path ( source Path )  ; }"
1944,"public com . anychart . charts .  Radar y Grid (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Grid ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
1945,public final void sort (  ) { if  ( !sorted )  {     attributes . sort ( this )  ;      sorted = true ;  }}
1946,Finder not (  Finder not Finder ) { return  txt -> {      List< String> res = this . find ( txt )  ;      res . remove All ( not Finder . find ( txt )  )  ;      return res ;  } ; }
1947,"public com . anychart . charts .  Cartesian animation (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . animation ( %s )  ; "", settings )  )  ;  return this ; }"
1948,"public  Closeable Image decode ( final  Encoded Image encoded Image, final int length, final  Quality Info quality Info, final  Image Decode Options options ) { if  ( options . custom Image Decoder != null )  {     return options . custom Image Decoder . decode ( encoded Image, length, quality Info, options )  ;  }  Image Format image Format = encoded Image . get Image Format (  )  ;  if  ( image Format == null || image Format ==  Image Format . UNKNOWN )  {      Input Stream input Stream = encoded Image . get Input Stream (  )  ;      if  ( input Stream != null )  {         image Format =  Image Format Checker . get Image Format_ Wrap IO Exception ( input Stream )  ;          encoded Image . set Image Format ( image Format )  ;      } } if  ( m Custom Decoders != null )  {      Image Decoder decoder = m Custom Decoders . get ( image Format )  ;      if  ( decoder != null )  {         return decoder . decode ( encoded Image, length, quality Info, options )  ;      } } return m Default Decoder . decode ( encoded Image, length, quality Info, options )  ; }"
1949,"public com . anychart . core . ui .  Labels Factory min Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . min Labels (  ) "" )  ; }"
1950,protected  Object on Request Resource (  String url ) { return null ; }
1951,"private  Closeable Wrapper< Print Stream> get Print Stream Wrapper (  Command Runner Params params )  throws IO Exception{ if  ( output File == null )  {     // use stdout for output, do not close stdout stream as it is not owned here     return  Closeable Wrapper . of ( params . get Console (  )  . get Std Out (  ) ,  stream -> {     } )  ;  } return  Closeable Wrapper . of ( new  Print Stream ( new  Buffered Output Stream (  Files . new Output Stream ( output File . to Path (  )  )  )  ) ,  stream -> stream . close (  )  )  ; }"
1952,"public void set Drawer Shadow (  Drawable shadow Drawable, @ Edge Gravity int gravity ) { /*      * TODO  Someone someday might want to set more complex drawables here .       *  They're probably nuts, but we might want to consider registering callbacks,      * setting states, etc .  properly .       */ final int abs Gravity =  Gravity Compat . get Absolute Gravity ( gravity,  View Compat . get Layout Direction ( this )  )  ;  if  (  ( abs Gravity &  Gravity . LEFT )  ==  Gravity . LEFT )  {     m Shadow Left = shadow Drawable ;      invalidate (  )  ;  } if  (  ( abs Gravity &  Gravity . RIGHT )  ==  Gravity . RIGHT )  {     m Shadow Right = shadow Drawable ;      invalidate (  )  ;  }}"
1953,"private boolean might Be A Test Class (  Class<?> klass ) { int klass Modifiers = klass . get Modifiers (  )  ;  //  Test classes must be public, non-abstract, non-interface if  ( ! Modifier . is Public ( klass Modifiers )  ||  Modifier . is Interface ( klass Modifiers )  ||  Modifier . is Abstract ( klass Modifiers )  )  {     return false ;  } //  Test classes must either have a public, no-arg constructor, or have a constructor that // initializes using dependency injection, via the org . testng . annotations .  Guice annotation on // the class and the com . google . inject .  Inject or javax . inject .  Inject annotation on the // constructor .  boolean found Public No Arg Constructor = false ;  boolean found Injected Constructor = false ;  boolean has Guice Annotation = klass . get Annotations By Type (  Guice . class )  . length > 0 ;  for  (  Constructor<?> c : klass . get Constructors (  )  )  {     if  (  Modifier . is Public ( c . get Modifiers (  )  )  )  {         if  ( c . get Parameter Count (  )  == 0 )  {             found Public No Arg Constructor = true ;          }         if  ( has Guice Annotation &&  ( c . get Annotations By Type ( com . google . inject .  Inject . class )  . length > 0 || c . get Annotations By Type ( javax . inject .  Inject . class )  . length > 0 )  )  {             found Injected Constructor = true ;          }     } } if  ( !found Public No Arg Constructor && !found Injected Constructor )  {     return false ;  } //  Test classes must have at least one public test method  ( or something that generates tests )  boolean has At Least One Test Method = false ;  for  (  Method m : klass . get Methods (  )  )  {     if  (  Modifier . is Public ( m . get Modifiers (  )  )  && m . get Annotation (  Test . class )  != null )  {         has At Least One Test Method = true ;      }     if  (  Modifier . is Public ( m . get Modifiers (  )  )  && m . get Annotation (  Factory . class )  != null )  {         // technically, not *quite* true, but close enough         has At Least One Test Method = true ;      } } return has At Least One Test Method ; }"
1954,"public void scale Size ( float scale X, float scale Y ) { if  ( scale X == 1f && scale Y == 1f )      return ;  for  (  Ranged Numeric Value value : get X Size Values (  )  )  value . scale ( scale X )  ;  for  (  Ranged Numeric Value value : get Y Size Values (  )  )  value . scale ( scale Y )  ; }"
1955,"public com . anychart . standalones .  Data Grid top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
1956,"public com . anychart . core . cartesian . series .  Range Step Area range Step Area (  String data, com . anychart . data .  Text Parsing Settings csv Settings ) { return new com . anychart . core . cartesian . series .  Range Step Area (  String . format (  Locale . US, js Base + "" . range Step Area ( %s, %s ) "", wrap Quotes ( data ) ,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
1957,void on Seek Finished (  ) {}
1958,protected  Category ini Custom Parent Holder (  View parentview ) { return new  Category ( parentview )  ; }
1959,void on Audio Enabled (  Decoder Counters counters ) {}
1960,"public void allow Point Settings (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . allow Point Settings (  )  ; "" )  ; }"
1961,public com . google . protobuf .  Byte String get Source Path Bytes (  ) { java . lang .  Object ref = source Path_ ;  if  ( ref instanceof  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      source Path_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
1962,"public  String get Desc (  ) { return "" The average temperature in 4  Greek islands  ( cubic line chart ) "" ; }"
1963,public final boolean is Stateful (  ) { if  ( m Checked Stateful )  {     return m Stateful ;  } create All Futures (  )  ;  final int count = m Num Children ;  final  Drawable [  ]  drawables = m Drawables ;  boolean is Stateful = false ;  for  ( int i = 0 ;  i < count ;  i++ )  {     if  ( drawables [ i ]  . is Stateful (  )  )  {         is Stateful = true ;          break ;      } } m Stateful = is Stateful ;  m Checked Stateful = true ;  return is Stateful ; }
1964,public  Time Picker Builder set Out Side Color ( @ Color Int int out Side Color ) { m Picker Options . out Side Color = out Side Color ;  return this ; }
1965,"public void on Post (  Object o ) { LOGGER . info ( ""received new object to post: "" + o . get Class (  )  . get Simple Name (  )  )  ;  if  ( !m Initialised )  {     //init events lists implicetely synchronized     m Network Events =  Collections . synchronized List ( new  Array List<> (  )  )  ;      m Generic Events =  Collections . synchronized List ( new  Array List<> (  )  )  ;      m Data Events =  Collections . synchronized List ( new  Array List<> (  )  )  ;      m UI Events =  Collections . synchronized List ( new  Array List<> (  )  )  ;      m Context Events =  Collections . synchronized List ( new  Array List<> (  )  )  ;      //init dead events manager     if  ( m Dead Event Manager == null )  {         m Dead Event Manager = new  Dead Event Manager (  )  ;      } else {         BUS . unregister ( m Dead Event Manager )  ;          UI_BUS . unregister ( m Dead Event Manager )  ;      }     BUS . register ( m Dead Event Manager )  ;      UI_BUS . register ( m Dead Event Manager )  ;      //mark us as initialised     m Initialised = true ;      start Events Consumption (  )  ;  } //check if it's an event we recognise if  ( o != null && o . get Class (  )  . is Annotation Present (  Event . class )  )  {     //put it in the right list and sort the list      Event .  Type t = o . get Class (  )  . get Annotation (  Event . class )  . type (  )  ;      LOGGER . info ( ""object "" + o . get Class (  )  . get Simple Name (  )  + "" is an event of type "" + t )  ;      switch ( t )  {         default:         case GENERIC:             m Generic Events . add ( o )  ;               Collections . sort ( m Generic Events,  Event . COMPARATOR )  ;              break ;          case DATA:             m Data Events . add ( o )  ;               Collections . sort ( m Data Events,  Event . COMPARATOR )  ;              break ;          case NETWORK:             m Network Events . add ( o )  ;               Collections . sort ( m Network Events,  Event . COMPARATOR )  ;              break ;          case UI:             m UI Events . add ( o )  ;               Collections . sort ( m UI Events,  Event . COMPARATOR )  ;              break ;          case CONTEXT:             m Context Events . add ( o )  ;               Collections . sort ( m Context Events,  Event . COMPARATOR )  ;              break ;      } }}"
1966,public  Class Type get Declaring Class (  ) { return null ; }
1967,void clear Changes (  ) { has Changes = false ;  document Changes . clear (  )  ; }
1968,public java . lang .  String get Name (  ) { java . lang .  Object ref = name_ ;  if  ( ref instanceof java . lang .  String )  {     return  ( java . lang .  String )  ref ;  } else {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      name_ = s ;      return s ;  }}
1969,"public com . anychart . core . gantt . elements .  Periods Element height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
1970,"protected static long native Setup ( @ Non Null  File Descriptor fd, int format )  throws IO Exception{  File Output Stream output Stream = fd To Stream . get ( fd )  ;  long potential Key ;  do {     potential Key = random . next Long (  )  ;  } while  ( potential Key == 0 || output Streams . put If Absent ( potential Key, output Stream )  != null )  ;  next Track Indices . put ( potential Key, new  Atomic Integer ( 0 )  )  ;  return potential Key ; }"
1971,public void set Default Value (  String default Value ) { this . default Value = default Value ; }
1972,"private static  Func1< Map< String,  List< Video Info>>,  Observable< List< Video Info>>> _flat Map Video ( final  String type Str ) { return new  Func1< Map< String,  List< Video Info>>,  Observable< List< Video Info>>> (  )  {     @ Override     public  Observable< List< Video Info>> call (  Map< String,  List< Video Info>> news List Map )  {         return  Observable . just ( news List Map . get ( type Str )  )  ;      } } ; }"
1973,public void report Success ( long wait Time ) { m Sum Of Wait Time += wait Time ;  m Successful Requests++ ; }
1974,"public com . anychart . core . stock . scrollerseries .  Range Area right (  String right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", wrap Quotes ( right )  )  )  ;  return this ; }"
1975,"public void add Roots (  Zip File jar Of Roots )  throws IO Exception{ // keep roots for  (  Enumeration<? extends  Zip Entry> entries = jar Of Roots . entries (  )  ;  entries . has More Elements (  )  ;   )  {      Zip Entry entry = entries . next Element (  )  ;       String name = entry . get Name (  )  ;      if  ( name . ends With ( CLASS_EXTENSION )  )  {         if  ( CLASS_TO_CHECK != null && name . contains ( CLASS_TO_CHECK )  )  {             found (  )  ;          }         class Names . add ( name . substring ( 0, name . length (  )  - CLASS_EXTENSION . length (  )  )  )  ;      } } // keep direct references of roots  ( + direct references hierarchy )  for  (  Enumeration<? extends  Zip Entry> entries = jar Of Roots . entries (  )  ;  entries . has More Elements (  )  ;   )  {      Zip Entry entry = entries . next Element (  )  ;       String name = entry . get Name (  )  ;      if  ( name . ends With ( CLASS_EXTENSION )  )  {          Direct Class File class File ;          try {             class File = path . get Class ( name )  ;          } catch  (  File Not Found Exception e )  {             throw new IO Exception ( "" Class "" + name + "" is missing form original class path "" + path, e )  ;          }         add Dependencies ( class File . get Constant Pool (  )  )  ;      } }}"
1976,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_PUBLISHER ; }
1977,"public static  Immutable Long Array of ( long e0, long e1, long e2, long e3, long e4, long e5 ) { return new  Immutable Long Array ( new long [  ]  { e0, e1, e2, e3, e4, e5 } )  ; }"
1978,public void set Serializer Features (  Serializer Feature .  .  .  serializer Features ) { this . serializer Features = serializer Features ; }
1979,"public com . anychart . core . resource .  Activities stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
1980,public synchronized double get Value ( int index ) { return m Value . get ( index )  ; }
1981,public int read32bit ( int offset ) { int v1 = read16bit ( offset )  ;  int v2 = read16bit ( offset + 2 )  ;  return  ( v1 << 16 )  +  ( v2 & 0xffff )  ; }
1982,public void set Change Alpha When Disable ( boolean change Alpha When Disable ) { get Alpha View Helper (  )  . set Change Alpha When Disable ( change Alpha When Disable )  ; }
1983,"public static  Set< String> non Null Set ( @ Non Null  String first Item, @ Nullable  String [  ]  other Items ) { final  Hash Set< String> set = new  Hash Set< String> (  )  ;  set . add ( first Item )  ;  if  ( other Items != null )  {     set . add All ( as List ( other Items )  )  ;  } return set ; }"
1984,"public void set Color ( float r, float g, float b, float a ) { this . color . set ( r, g, b, a )  ; }"
1985,"public  List< Key Path> resolve Key Path (  Key Path key Path ) { if  ( composition Layer == null )  {      Logger . warning ( "" Cannot resolve  Key Path .   Composition is not set yet . "" )  ;      return  Collections . empty List (  )  ;  }  List< Key Path> key Paths = new  Array List<> (  )  ;  composition Layer . resolve Key Path ( key Path, 0, key Paths, new  Key Path (  )  )  ;  return key Paths ; }"
1986,public void set Column Spacing ( int column Spacing ) { m Column Spacing = column Spacing ;  update Board Spaces (  )  ; }
1987,public T normal Text Res ( int normal Text Res ) { if  ( this . normal Text Res != normal Text Res )  {     this . normal Text Res = normal Text Res ;       Boom Button button = button (  )  ;      if  ( button != null )  {         button . normal Text Res = normal Text Res ;          button . update Text (  )  ;      } } return  ( T )  this ; }
1988,public  List< String> get All (  Field Key generic Key )  throws  Key Not Found Exception{  Asf Field Key asf Field Key = tag Field To Asf Field . get ( generic Key )  ;  if  ( asf Field Key == null )  {     throw new  Key Not Found Exception (  )  ;  } return super . get All ( asf Field Key . get Field Name (  )  )  ; }
1989,public T6 get Value6 (  ) { return value6 ; }
1990,"final  Rule Key Builder<RULE_KEY> set Source Path Directly (  Source Path source Path )  throws IO Exception{  Source Path Resolver Adapter resolver = rule Finder . get Source Path Resolver (  )  ;  if  ( source Path instanceof  Build Target Source Path )  {      Path relative Path = resolver . get Relative Path ( source Path )  ;       Optional< Hash Code> precomputed Hash =  (  (  Build Target Source Path )  source Path )  . get Precomputed Hash (  )  ;      if  ( precomputed Hash . is Present (  )  )  {         hasher . put Path ( relative Path, precomputed Hash . get (  )  )  ;          return this ;      }     return set Path ( resolver . get Filesystem ( source Path ) , relative Path )  ;  } else if  ( source Path instanceof  Path Source Path )  {      Path ideally Relative Path = resolver . get Ideally Relative Path ( source Path )  ;      if  ( ideally Relative Path . is Absolute (  )  )  {         return set Path ( resolver . get Absolute Path ( source Path ) , resolver . get Ideally Relative Path ( source Path )  )  ;      } else {         return set Path ( resolver . get Filesystem ( source Path ) , ideally Relative Path )  ;      } } else if  ( source Path instanceof  Archive Member Source Path )  {     return set Archive Member Source Path (  (  Archive Member Source Path )  source Path )  ;  } else {     throw new  Unsupported Operation Exception ( "" Unrecognized  Source Path implementation: "" + source Path . get Class (  )  )  ;  }}"
1991,public  Builder set Scopes (  String .  .  .  scopes ) { if  ( scopes == null )  {     scopes = new  String [ 0 ]  ;  } set Scopes (  Arrays . as List ( scopes )  )  ;  return this ; }
1992,"public final void does Not Contain Key ( @ Nullable  Object key ) { check ( ""key Set (  ) "" )  . that ( actual . key Set (  )  )  . does Not Contain ( key )  ; }"
1993,"public static boolean test Type (  Psi Element element, I Element Type type ) { return element . get Node (  )  != null && element . get Node (  )  . get Element Type (  )  == type ; }"
1994,"public static  String read Tzlookup (  ) {  String Builder string Builder = new  String Builder (  )  ;   Input Stream is = null ;  try {     try {         is =  Shadow Time Zone Finder . class . get Resource As Stream ( TZLOOKUP_PATH )  ;           Buffered Reader reader = new  Buffered Reader ( new  Input Stream Reader ( is, UTF_8 )  )  ;          for  (  String line ;   ( line = reader . read Line (  )  )  != null ;   )  {             string Builder . append ( line )  ;          }     } finally {         if  ( is != null )  {             is . close (  )  ;          }     } } catch  ( IO Exception e )  { // ignore } return string Builder . to String (  )  ; }"
1995,public  String get Service Name (  ) { return service Name ; }
1996,public void set Span Index Cache Enabled ( boolean cache Span Indices ) { m Cache Span Indices = cache Span Indices ; }
1997,"public com . anychart . standalones .  Resource Timeline row Even Fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Even Fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
1998,public  List Assert< Inspectable Component> extracting Sub Components Deeply (  Component Context c ) { return extracting (  Sub Component Deep Extractor . sub Components Deeply ( c )  )  ; }
1999,public  String get Name (  ) { return filename ; }
2000,public boolean remove (  Object o ) { return remove First Occurrence ( o )  ; }
2001,"public int transform (  Ct Class clazz, int pos,  Code Iterator iterator,  Const Pool cp )  throws  Cannot Compile Exception{ int index ;  int c = iterator . byte At ( pos )  ;  if  ( c == NEW )  {     index = iterator . u16bit At ( pos + 1 )  ;      if  ( cp . get Class Info ( index )  . equals ( classname )  )  {         if  ( iterator . byte At ( pos + 3 )  != DUP )              throw new  Cannot Compile Exception ( ""NEW followed by no DUP was found"" )  ;          iterator . write Byte ( NOP, pos )  ;          iterator . write Byte ( NOP, pos + 1 )  ;          iterator . write Byte ( NOP, pos + 2 )  ;          iterator . write Byte ( NOP, pos + 3 )  ;          ++nested ;           Stack Map Table smt =  (  Stack Map Table )  iterator . get (  )  . get Attribute (  Stack Map Table . tag )  ;          if  ( smt != null )              smt . remove New ( pos )  ;           Stack Map sm =  (  Stack Map )  iterator . get (  )  . get Attribute (  Stack Map . tag )  ;          if  ( sm != null )              sm . remove New ( pos )  ;      } } else if  ( c == INVOKESPECIAL )  {     index = iterator . u16bit At ( pos + 1 )  ;      int typedesc = cp . is Constructor ( classname, index )  ;      if  ( typedesc != 0 && nested > 0 )  {         int methodref = compute Methodref ( typedesc, cp )  ;          iterator . write Byte ( INVOKESTATIC, pos )  ;          iterator . write16bit ( methodref, pos + 1 )  ;          --nested ;      } } return pos ; }"
2002,"public  Cache Builder<K, V> refresh After Write ( long duration,  Time Unit unit ) { check Not Null ( unit )  ;  check State ( refresh Nanos == UNSET_INT, ""refresh was already set to %s ns"", refresh Nanos )  ;  check Argument ( duration > 0, ""duration must be positive: %s %s"", duration, unit )  ;  this . refresh Nanos = unit . to Nanos ( duration )  ;  return this ; }"
2003,"protected final void update Added App Key ( final int index ) { final  Node Key node Key =  Mesh Parser Utils . get Node Key ( m Added Net Keys, index )  ;  if  ( node Key != null )  {     node Key . set Updated ( true )  ;  }}"
2004,public  Fluent Iterable<E> last ( int count ) { return new  Lazy Fluent Iterable<> (  )  {     @ Override     public  Iterator<E> iterator (  )  {         return new  Decorating Iterator<> ( iterable . iterator (  )  )  {             private int stop Index ;              private int total Elements Count ;              private  List<E> list ;              private int current Index ;              @ Override             public E compute Next (  )  {                 initialize (  )  ;                  while  ( current Index < stop Index && from Iterator . has Next (  )  )  {                     current Index++ ;                      from Iterator . next (  )  ;                  }                 if  ( current Index >= stop Index && from Iterator . has Next (  )  )  {                     return from Iterator . next (  )  ;                  }                 return null ;              }             private void initialize (  )  {                 if  ( list == null )  {                     list = new  Array List<> (  )  ;                      iterable . for Each ( list::add )  ;                      total Elements Count = list . size (  )  ;                      stop Index = total Elements Count - count ;                  }             }         } ;      } } ; }
2005,"public void concurrent Start Service_has Correct Start Service Count (  )  throws  Interrupted Exception{  Handler Thread background1 Thread = new  Handler Thread ( ""background1"" )  ;  background1 Thread . start (  )  ;   Handler handler1 = new  Handler ( background1 Thread . get Looper (  )  )  ;   Handler Thread background2 Thread = new  Handler Thread ( ""background2"" )  ;  background2 Thread . start (  )  ;   Handler handler2 = new  Handler ( background2 Thread . get Looper (  )  )  ;   Intent intent = new  Intent ( ""do_the_thing"" )  ;  intent . set Class Name ( ""com . blah"", ""com . blah . service"" )  ;   Context context =  Application Provider . get Application Context (  )  ;   Runnable start Services Task =  (  )  -> {     for  ( int i = 0 ;  i < 10000 ;  i++ )  {         context . start Service ( intent )  ;      } } ;   Count Down Latch finished Latch = new  Count Down Latch ( 2 )  ;  handler1 . post ( start Services Task )  ;  handler2 . post ( start Services Task )  ;  handler1 . post ( finished Latch::count Down )  ;  handler2 . post ( finished Latch::count Down )  ;  assert That ( finished Latch . await ( 10, SECONDS )  )  . is True (  )  ;  int intent Count = 0 ;  while  ( true )  {      Intent service Intent = shadow Of (  (  Application )   Application Provider . get Application Context (  )  )  . get Next Started Service (  )  ;      if  ( service Intent == null )  {         break ;      }     intent Count++ ;  } assert That ( intent Count )  . is Equal To ( 20000 )  ; }"
2006,public  String get Emphasis (  ) { return mp3 Frame Header . get Emphasis As String (  )  ; }
2007,public boolean is Recursive (  ) { return recursive ; }
2008,"private static  Audio Capabilities create Default Audio Capabilities (  Codec Capabilities parent,  Media Format media Format ) { return  Reflection Helpers . call Static Method (  Audio Capabilities . class, ""create"",  Class Parameter . from (  Media Format . class, media Format ) ,  Class Parameter . from (  Codec Capabilities . class, parent )  )  ; }"
2009,"public void configure ( long timestamp Millis, long nano Time, long thread User Nano Time, long thread Id,  Build Id build Id ) {  Preconditions . check State ( !is Configured, "" Events can only be configured once . "" )  ;  this . timestamp Millis = timestamp Millis ;  this . nano Time = nano Time ;  this . thread User Nano Time = thread User Nano Time ;  this . thread Id = thread Id ;  this . build Id = build Id ;  is Configured = true ; }"
2010,"public void get Absolute Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Absolute Width (  )  ; "" )  ; }"
2011,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
2012,"public com . anychart . charts .  Venn left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
2013,"public com . anychart . charts .  Sparkline last Fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . last Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
2014,public  String get Name (  ) { return name ; }
2015,public  Track Me get Last Event X (  ) { return m Last Event ; }
2016,"public com . anychart . scales .  Date Time With Calendar start Auto Calc (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . start Auto Calc (  )  ; "" )  ;  return this ; }"
2017,"public com . anychart . core . ui .  Timeline row Selected Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
2018,"private  Immutable Bi Map< Integer,  Integer> find Maximal One To One Mapping (  Immutable Multimap< Integer,  Integer> edges ) { /*    *  Finding this 1:1 mapping is analogous to finding a maximum cardinality bipartite matching    *  ( https://en . wikipedia . org/wiki/ Matching_ ( graph_theory ) # In_unweighted_bipartite_graphs )  .     *  -  The two sets of elements together correspond to the vertices of a graph .     *  -  The many:many mapping corresponds to the edges of that graph .     *  -  The graph is therefore bipartite, with the two sets of elements corresponding to the two    * parts .     *  - A 1:1 mapping corresponds to a matching on that bipartite graph  ( aka an independent edge    * set, i . e .  a subset of the edges with no common vertices )  .     *  -  And the 1:1 mapping which includes the largest possible number of elements corresponds    * to the maximum cardinality matching .     *    *  So we'll apply a standard algorithm for doing maximum cardinality bipartite matching .     */ return  Graph Matching . maximum Cardinality Bipartite Matching ( edges )  ; }"
2019,"public com . anychart . core . cartesian . series .  Width Based y Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2020,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_ORIG_FILENAME ; }
2021,"public void word Wrap (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . word Wrap (  )  ; "" )  ; }"
2022,"public void on Create (  Bundle saved Instance State ) { super . on Create ( saved Instance State )  ;  set Content View ( R . layout . activity_ptr_webview )  ;  m Pull Refresh Web View =  (  Pull To Refresh Web View )  find View By Id ( R . id . pull_refresh_webview )  ;  m Web View = m Pull Refresh Web View . get Refreshable View (  )  ;  m Web View . get Settings (  )  . set Java Script Enabled ( true )  ;  m Web View . set Web View Client ( new  Sample Web View Client (  )  )  ;  m Web View . load Url ( ""http://www . google . com"" )  ; }"
2023,"public com . anychart . core .  Separate Chart padding (  Number value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
2024,public int get Section For Position ( int i ) { if  ( get Cursor (  )  == null )  {     return 0 ;  } return m Alphabet Indexer . get Section For Position ( i )  ; }
2025,public V get View (  ) { return view Ref == null ? null : view Ref . get (  )  ; }
2026,"public com . anychart . core . resource .  Grid odd Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . odd Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
2027,public  Optional< Long> get Long (  String key ) {  Optional< Integer> int Value = get Int ( key )  ;  if  ( int Value . is Available (  )  )  {     return  Optional . of (  ( long )  int Value . get (  )  )  ;  } return  Optional . absent (  )  ; }
2028,"public com . anychart . charts .  Sankey title (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . title ( %s )  ; "", settings )  )  ;  return this ; }"
2029,"public void is Vertical (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . is Vertical (  )  ; "" )  ; }"
2030,public com . facebook . buck . remoteexecution . proto .  Capability Value Or Builder get Task Name Or Builder (  ) { if  ( task Name Builder_ != null )  {     return task Name Builder_ . get Message Or Builder (  )  ;  } else {     return task Name_ == null ? com . facebook . buck . remoteexecution . proto .  Capability Value . get Default Instance (  )  : task Name_ ;  }}
2031,protected E standard Poll (  ) { try {     return remove (  )  ;  } catch  (  No Such Element Exception caught )  {     return null ;  }}
2032,public  Fake Data get Data (  Uri uri ) {  Fake Data data = data Map . get ( uri )  ;  return data != null ? data : default Data ; }
2033,"public final  String get Stdout (  ) {  Preconditions . check State ( this . stdout . is Present (  ) , ""stdout was not set: should Print Stdout (  )  must return false and execute (  )  must "" + ""have been invoked"" )  ;  return this . stdout . get (  )  ; }"
2034,"public com . anychart . charts .  Linear Gauge margin (  String value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
2035,"public static  Cache .  Entry make Random Cache Entry ( byte [  ]  data, boolean is Expired, boolean needs Refresh ) {  Random random = new  Random (  )  ;   Cache .  Entry entry = new  Cache .  Entry (  )  ;  if  ( data != null )  {     entry . data = data ;  } else {     entry . data = new byte [ random . next Int ( 1024 )  ]  ;  } entry . etag =  String . value Of ( random . next Long (  )  )  ;  entry . last Modified = random . next Long (  )  ;  entry . ttl = is Expired ? 0 :  Long . MAX_VALUE ;  entry . soft Ttl = needs Refresh ? 0 :  Long . MAX_VALUE ;  return entry ; }"
2036,public  Matrix4 identity (  ) { // @formatter:off m [ M00 ]  = 1 ;  m [ M10 ]  = 0 ;  m [ M20 ]  = 0 ;  m [ M30 ]  = 0 ;  m [ M01 ]  = 0 ;  m [ M11 ]  = 1 ;  m [ M21 ]  = 0 ;  m [ M31 ]  = 0 ;  m [ M02 ]  = 0 ;  m [ M12 ]  = 0 ;  m [ M22 ]  = 1 ;  m [ M32 ]  = 0 ;  m [ M03 ]  = 0 ;  m [ M13 ]  = 0 ;  m [ M23 ]  = 0 ;  m [ M33 ]  = 1 ;  return this ; // @formatter:on}
2037,"public static  Bitmap do Blur (  Bitmap origin Bitmap, int scale Ratio, int blur Radius ) { //        print ( ""原图：："",origin Bitmap )  ;   Bitmap scaled Bitmap =  Bitmap . create Scaled Bitmap ( origin Bitmap, origin Bitmap . get Width (  )  / scale Ratio, origin Bitmap . get Height (  )  / scale Ratio, false )  ;   Bitmap blur Bitmap = do Blur ( scaled Bitmap, blur Radius, false )  ;  scaled Bitmap . recycle (  )  ;  return blur Bitmap ; }"
2038,"public com . anychart . core . lineargauge . pointers .  Tank empty Hatch Fill ( com . anychart . graphics . vector .  Pattern Fill pattern Fill ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . empty Hatch Fill ( %s )  ; "",  ( pattern Fill != null )  ? pattern Fill . get Js Base (  )  : null )  )  ;  return this ; }"
2039,"public com . anychart . core . ui .  Center center (  ) { return new com . anychart . core . ui .  Center ( js Base + "" . center (  ) "" )  ; }"
2040,"public void get Y Axes Count (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Y Axes Count (  )  ; "" )  ; }"
2041,"public static boolean is Object Method (  Executable Element method ) { //  First check if this method is directly defined on  Object  Element enclosing Element = method . get Enclosing Element (  )  ;  if  ( enclosing Element . get Kind (  )  ==  Element Kind . CLASS &&  Type Name . get ( enclosing Element . as Type (  )  )  . equals (  Type Name . OBJECT )  )  {     return true ;  } if  ( method . get Modifiers (  )  . contains (  Modifier . STATIC )  )  {     return false ;  } switch ( method . get Simple Name (  )  . to String (  )  )  {     case ""equals"":         return  ( method . get Parameters (  )  . size (  )  == 1 )  &&  ( method . get Parameters (  )  . get ( 0 )  . as Type (  )  . to String (  )  . equals ( ""java . lang .  Object"" )  )  ;      case ""hash Code"":     case ""to String"":     case ""clone"":     case ""get Class"":     case ""notify"":     case ""notify All"":     case ""finalize"":         return method . get Parameters (  )  . is Empty (  )  ;      case ""wait"":         if  ( method . get Parameters (  )  . is Empty (  )  )  {             return true ;          } else if  (  ( method . get Parameters (  )  . size (  )  == 1 )  &&  ( method . get Parameters (  )  . get ( 0 )  . as Type (  )  . to String (  )  . equals ( ""long"" )  )  )  {             return true ;          } else if  (  ( method . get Parameters (  )  . size (  )  == 2 )  &&  ( method . get Parameters (  )  . get ( 0 )  . as Type (  )  . to String (  )  . equals ( ""long"" )  )  &&  ( method . get Parameters (  )  . get ( 1 )  . as Type (  )  . to String (  )  . equals ( ""int"" )  )  )  {             return true ;          }         return false ;      default:         return false ;  }}"
2042,public long get Round Trip Time (  ) { return m Round Trip Time ; }
2043,"public com . anychart . core . gantt .  Time Line Header stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
2044,"private  Object js_parse Int (  Object [  ]  args ) {  String s =  Script Runtime . to String ( args, 0 )  ;  int radix =  Script Runtime . to Int32 ( args, 1 )  ;  int len = s . length (  )  ;  if  ( len == 0 )      return  Script Runtime .  Na Nobj ;  boolean negative = false ;  int start = 0 ;  char c ;  do {     c = s . char At ( start )  ;      if  ( ! Character . is Whitespace ( c )  )          break ;      start++ ;  } while  ( start < len )  ;  if  ( c == '+' ||  ( negative =  ( c == '-' )  )  )      start++ ;  final int NO_RADIX = -1 ;  if  ( radix == 0 )  {     radix = NO_RADIX ;  } else if  ( radix < 2 || radix > 36 )  {     return  Script Runtime .  Na Nobj ;  } else if  ( radix == 16 && len - start > 1 && s . char At ( start )  == '0' )  {     c = s . char At ( start + 1 )  ;      if  ( c == 'x' || c == 'X' )          start += 2 ;  } if  ( radix == NO_RADIX )  {     radix = 10 ;      if  ( len - start > 1 && s . char At ( start )  == '0' )  {         c = s . char At ( start + 1 )  ;          if  ( c == 'x' || c == 'X' )  {             radix = 16 ;              start += 2 ;          } else if  ( '0' <= c && c <= '9' )  {             radix = 8 ;              start++ ;          }     } } double d =  Script Runtime . string To Number ( s, start, radix )  ;  return  Script Runtime . wrap Number ( negative ? -d : d )  ; }"
2045,public  Request Builder< Drawable> load ( @ Nullable  Object model ) { return as Drawable (  )  . load ( model )  ; }
2046,public boolean will Recycle (  ) { return m Should Recycle ; }
2047,public void set Fail On Conflict ( boolean fail On Conflict ) { this . fail On Conflict = fail On Conflict ; }
2048,"public  Object add Values (  Context cx, boolean this Is Left,  Object value ) { return  Scriptable . NOT_FOUND ; }"
2049,"public  Optional< String> get Binary Extension (  ) { return delegate . get Value ( cxx Section, BINARY_EXT )  ; }"
2050,"public com . anychart . scales .  Scatter Ticks ticks (  ) { return new com . anychart . scales .  Scatter Ticks ( js Base + "" . ticks (  ) "" )  ; }"
2051,"protected void apply Animations ( final  Animation anim1, final float time1, final  Animation anim2, final float time2, final float weight ) { if  ( anim2 == null || weight == 0 . f )      apply Animation ( anim1, time1 )  ;  else if  ( anim1 == null || weight == 1 . f )      apply Animation ( anim2, time2 )  ;  else if  ( applying )      throw new  Gdx Runtime Exception ( "" Call end (  )  first"" )  ;  else {     begin (  )  ;      apply ( anim1, time1, 1 . f )  ;      apply ( anim2, time2, weight )  ;      end (  )  ;  }}"
2052,public void update Visual Scroll (  ) { visual Amount X = amount X ;  visual Amount Y = amount Y ; }
2053,public void set Size ( int size ) { if  ( size > 0 )  {     this . size = size ;  }}
2054,"public com . anychart . core . annotations .  Trend Channel stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
2055,"public  Text Prop Model View Model_ title ( @ String Res int string Res,  Object .  .  .  format Args ) { on Mutation (  )  ;  assigned Attributes_epoxy Generated Model . set ( 0 )  ;  title_ String Attribute Data . set Value ( string Res, format Args )  ;  return this ; }"
2056,"public  Attributes Node load (  )  throws IO Exception{  Attributes Node r = new  Attributes Node (  )  ;  FS fs = repository . get FS (  )  ;   String path = repository . get Config (  )  . get (  Core Config . KEY )  . get Attributes File (  )  ;  if  ( path != null )  {      File attributes File ;      if  ( path . starts With ( ""~/"" )  )  {         //$NON-NLS-1$         attributes File = fs . resolve ( fs . user Home (  ) , path . substring ( 2 )  )  ;      } else {         attributes File = fs . resolve ( null, path )  ;      }      File Repository .  Attributes Node Provider Impl . load Rules From File ( r, attributes File )  ;  } return r . get Rules (  )  . is Empty (  )  ? null : r ; }"
2057,public static  Collection< List<E>> permutations (  Collection<E> elements ) { return new  Permutation Collection<E> (  Immutable List . copy Of ( elements )  )  ; }
2058,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
2059,"public void done Click Validate And Callback (  ) { if  ( is Selection Too Far In The Future (  )  )  {     if  ( m Error != null )  {         m Error . set Text ( get String ( R . string . max_time_error )  )  ;          m Error . show (  )  ;      } } else if  ( is Selection Too Far In Past (  )  )  {     if  ( m Error != null )  {         m Error . set Text ( get String ( R . string . min_time_error )  )  ;          m Error . show (  )  ;      } } else {     if  ( m Callback != null )  {         m Callback . on Time Set (  Radial Time Picker Dialog Fragment . this, m Time Picker . get Hours (  ) , m Time Picker . get Minutes (  )  )  ;      }     dismiss (  )  ;  }}"
2060,public  Bitmap get Current Screenshot (  ) { return m Screenshoting Frame Layout . get Last Drawn Bitmap (  )  ; }
2061,public boolean is Empty (  )  throws IO Exception{  Optional< Long> size If Known = size If Known (  )  ;  if  ( size If Known . is Present (  )  )  {     return size If Known . get (  )  == 0 L ;  }  Closer closer =  Closer . create (  )  ;  try {      Input Stream in = closer . register ( open Stream (  )  )  ;      return in . read (  )  == -1 ;  } catch  (  Throwable e )  {     throw closer . rethrow ( e )  ;  } finally {     closer . close (  )  ;  }}
2062,"private void _handle Click (  Base View Holder holder,  Video Info item ) { switch ( item . get Download Status (  )  )  {     case  Download Status . NORMAL:     case  Download Status . ERROR:     case  Download Status . STOP:         holder . set Text ( R . id . tv_speed, ""处理中 .  .  . "" )  . set Text Color ( R . id . tv_speed,  Context Compat . get Color ( m Context, R . color . download_normal )  )  ;           Downloader Wrapper . start ( item )  ;          break ;      case  Download Status . DOWNLOADING:         holder . set Text ( R . id . tv_speed, ""即将暂停"" )  . set Text Color ( R . id . tv_speed,  Context Compat . get Color ( m Context, R . color . download_normal )  )  ;           Downloader Wrapper . stop ( item )  ;          break ;      default:         break ;  }}"
2063,"public com . anychart . charts .  Sparkline label (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s )  ; "", settings )  )  ;  return this ; }"
2064,void on Item Visible Changed (  Menu Item Impl item ) { //  Notify of items being changed m Is Visible Items Stale = true ;  on Items Changed ( true )  ; }
2065,"public static  Date Picker Dialog new Instance (  On Date Set Listener call Back, int year, int month Of Year, int day Of Month ) {  Date Picker Dialog ret = new  Date Picker Dialog (  )  ;  ret . initialize ( call Back, year, month Of Year, day Of Month )  ;  return ret ; }"
2066,"protected  String [  ]  execute And Print Test Code (  String .  .  .  cmds )  throws  Exception{  String [  ]  lines = execute ( cmds )  ;   String cmd String = cmd String ( cmds )  ;  if  ( lines . length == 0 )       System . out . println ( ""\t\tassert True ( execute ( "" + cmd String + "" )  . length == 0 )  ; "" )  ;  else {      System . out . println ( ""\t\tassert Array Of Lines Equals ( new  String [  ]  { //"" )  ;       System . out . print ( ""\t\t\t\t\t\t\"""" + escape Java ( lines [ 0 ]  )  )  ;      for  ( int i = 1 ;  i < lines . length ;  i++ )  {          System . out . println ( ""\"", //"" )  ;           System . out . print ( ""\t\t\t\t\t\t\"""" + escape Java ( lines [ i ]  )  )  ;      }      System . out . println ( ""\"" //"" )  ;       System . out . println ( ""\t\t\t\t}, execute ( "" + cmd String + "" )  )  ;  //"" )  ;  } return lines ; }"
2067,public  Constant get ( int n ) { return  (  Constant )  get0 ( n )  ; }
2068,public T4 get Value4 (  ) { return value4 ; }
2069,public void set Tasks (  List< Activity Manager .  Running Task Info> tasks ) { this . tasks . clear (  )  ;  this . tasks . add All ( tasks )  ; }
2070,public  Device Service get Service With UUID (  String service UUID ) { for  (  Device Service service : get Services (  )  )  {     if  ( service . get Service Description (  )  . get UUID (  )  . equals ( service UUID )  )  {         return service ;      } } return null ; }
2071,public E poll (  ) { return poll First (  )  ; }
2072,"public com . anychart . core . stock . scrollerseries .  Jump Line left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
2073,public int get Http_major (  ) { return http_major ; }
2074,"public com . anychart . charts .  Gantt bounds (  String x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
2075,public boolean get Adaptive Power Save Enabled (  ) { return adaptive Power Save Enabled ; }
2076,"public static  Immutable Sorted Set<E> of ( E e1, E e2 ) { throw new  Unsupported Operation Exception (  )  ; }"
2077,"public com . anychart . core . utils .  Chart A11y enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
2078,public  Test Null String Overloads View Model_ title ( @ String Res int string Res ) { on Mutation (  )  ;  title_ String Attribute Data . set Value ( string Res )  ;  return this ; }
2079,"private static void update Sonic Cache Hit Count ( SQ Lite Database db,  String session Id ) {  Session Data session Data = get Session Data ( db, session Id )  ;  if  ( session Data != null )  {     session Data . cache Hit Count += 1 ;      update Session Data ( db, session Id, session Data )  ;  }}"
2080,public  Date get Not Before (  ) { return payload . nbf ; }
2081,"public static  Immutable Sorted Set< Java Library> add Build Config Deps (  Build Target original Build Target,  Project Filesystem project Filesystem,  Package Type package Type,  Enum Set< Exopackage Mode> exopackage Modes,  Build Config Fields build Config Values,  Optional< Source Path> build Config Values File,  Action Graph Builder graph Builder,  Javac javac,  Javac Options javac Options,  Android Packageable Collection packageable Collection ) {  Immutable Sorted Set .  Builder< Java Library> result =  Immutable Sorted Set . natural Order (  )  ;   Build Config Fields build Config Constants =  Build Config Fields . from Fields (  Immutable List . of (  Build Config Fields .  Field . of ( ""boolean"",  Build Configs . DEBUG_CONSTANT,  String . value Of ( package Type !=  Package Type . RELEASE )  ) ,  Build Config Fields .  Field . of ( ""boolean"",  Build Configs . IS_EXO_CONSTANT,  String . value Of ( !exopackage Modes . is Empty (  )  )  ) ,  Build Config Fields .  Field . of ( ""int"",  Build Configs . EXOPACKAGE_FLAGS,  String . value Of (  Exopackage Mode . to Bitmask ( exopackage Modes )  )  )  )  )  ;  for  (  Entry< String,  Build Config Fields> entry : packageable Collection . get Build Configs (  )  . entry Set (  )  )  {     //  Merge the user-defined constants with the APK-specific overrides .       Build Config Fields total Build Config Values =  Build Config Fields . of (  )  . put All ( entry . get Value (  )  )  . put All ( build Config Values )  . put All ( build Config Constants )  ;      //  Each enhanced dep needs a unique build target, so we parameterize the build target by the     //  Java package .       String java Package = entry . get Key (  )  ;       Flavor flavor =  Internal Flavor . of ( ""buildconfig_"" + java Package . replace ( ' . ', '_' )  )  ;       Build Target build Target With Flavors = original Build Target . with Appended Flavors ( flavor )  ;       Build Rule Params build Config Params = new  Build Rule Params ( /* declared Deps */      Suppliers . of Instance (  Immutable Sorted Set . of (  )  ) , /* extra Deps */      Suppliers . of Instance (  Immutable Sorted Set . of (  )  ) ,  Immutable Sorted Set . of (  )  )  ;       Java Library build Config Java Library =  Android Build Config Description . create Build Rule ( build Target With Flavors, project Filesystem, build Config Params, java Package, total Build Config Values, build Config Values File, /* use Constant Expressions */     true, javac, javac Options, graph Builder )  ;      graph Builder . add To Index ( build Config Java Library )  ;       Preconditions . check Not Null ( build Config Java Library . get Source Path To Output (  ) , ""%s must have an output file . "", build Config Java Library )  ;      result . add ( build Config Java Library )  ;  } return result . build (  )  ; }"
2082,public static  Stream<T> stream ( com . google . common . base .  Optional<T> optional ) { return optional . is Present (  )  ?  Stream . of ( optional . get (  )  )  :  Stream . empty (  )  ; }
2083,"public boolean on Start Code ( int start Code Value, int bytes Already Passed ) { if  ( is Filling )  {     length -= bytes Already Passed ;      if  ( sequence Extension Position == 0 && start Code Value == START_EXTENSION )  {         sequence Extension Position = length ;      } else {         is Filling = false ;          return true ;      } } else if  ( start Code Value == START_SEQUENCE_HEADER )  {     is Filling = true ;  } on Data ( START_CODE, 0, START_CODE . length )  ;  return false ; }"
2084,"public void reverse (  ) { for  ( int i = 0, size = m Transition Controls . size (  )  ;  i < size ;  i++ )  {     m Transition Controls . get ( i )  . reverse (  )  ;  }}"
2085,"public void is In (  Iterable<?> iterable ) { if  ( ! Iterables . contains ( iterable, actual )  )  {     fail With Actual ( ""expected any of"", iterable )  ;  }}"
2086,"public  Flux<E> flux (  ) { return  Flux . from ( new  Publisher<E> (  )  {     @ Override     public void subscribe (  Subscriber<? super E> s )  {         s . on Subscribe ( new  Query Subscription<> (  Reactor Result . this, s )  )  ;      } } )  ; }"
2087,"private boolean is RTL Allowed (  Context context ) { return is Pref Set ( context, KEY_FOR_PREFS_ALLOWRTL, true )  ; }"
2088,public void set Full Span ( boolean enabled ) { if  ( item View . get Layout Params (  )  instanceof  Staggered Grid Layout Manager .  Layout Params )  {      (  (  Staggered Grid Layout Manager .  Layout Params )  item View . get Layout Params (  )  )  . set Full Span ( enabled )  ;  }}
2089,public  Apply Command apply (  ) { return new  Apply Command ( repo )  ; }
2090,"void add ( final  Remote Device device ) { if  ( update ( device . get Identity (  )  )  )  {     log . fine ( "" Ignoring addition, device already registered: "" + device )  ;      return ;  }  Resource [  ]  resources = get Resources ( device )  ;  for  (  Resource device Resource : resources )  {     log . fine ( "" Validating remote device resource ;  "" + device Resource )  ;      if  ( registry . get Resource ( device Resource . get Path Query (  )  )  != null )  {         throw new  Registration Exception ( ""URI namespace conflict with already registered resource: "" + device Resource )  ;      } } for  (  Resource validated Resource : resources )  {     registry . add Resource ( validated Resource )  ;      log . fine ( "" Added remote device resource: "" + validated Resource )  ;  } //  Override the device's maximum age if configured  ( systems without multicast support )   Registry Item item = new  Registry Item ( device . get Identity (  )  . get Udn (  ) , device, registry . get Configuration (  )  . get Remote Device Max Age Seconds (  )  != null ? registry . get Configuration (  )  . get Remote Device Max Age Seconds (  )  : device . get Identity (  )  . get Max Age Seconds (  )  )  ;  log . fine ( "" Adding hydrated remote device to registry with "" + item . get Expiration Details (  )  . get Max Age Seconds (  )  + "" seconds expiration: "" + device )  ;  get Device Items (  )  . add ( item )  ;  if  ( log . is Loggable (  Level . FINEST )  )  {      String Builder sb = new  String Builder (  )  ;      sb . append ( ""\n"" )  ;      sb . append ( ""-------------------------- START  Registry  Namespace -----------------------------------\n"" )  ;      for  (  Resource resource : registry . get Resources (  )  )  {         sb . append ( resource )  . append ( ""\n"" )  ;      }     sb . append ( ""-------------------------- END  Registry  Namespace -----------------------------------"" )  ;      log . finest ( sb . to String (  )  )  ;  } //  Only notify the listeners when the device is fully usable log . fine ( "" Completely hydrated remote device graph available, calling listeners: "" + device )  ;  for  ( final  Registry Listener listener : registry . get Listeners (  )  )  {     registry . get Configuration (  )  . get Registry Listener Executor (  )  . execute ( new  Runnable (  )  {         public void run (  )  {             listener . remote Device Added ( registry, device )  ;          }     } )  ;  }}"
2091,"private  Animator create Animation ( final  View view, float start Alpha, float end Alpha, @ Nullable  Transition Values values ) { final float cur Alpha = view . get Alpha (  )  ;  start Alpha = cur Alpha * start Alpha ;  end Alpha = cur Alpha * end Alpha ;  if  ( values != null && values . values . contains Key ( PROPNAME_ALPHA )  )  {     float saved Alpha =  (  Float )  values . values . get ( PROPNAME_ALPHA )  ;      // continue animation from the interrupted state     if  ( saved Alpha != cur Alpha )  {         start Alpha = saved Alpha ;      } } view . set Alpha ( start Alpha )  ;  final  Object Animator anim =  Object Animator . of Float ( view,  View . ALPHA, end Alpha )  ;  final  Fade Animator Listener listener = new  Fade Animator Listener ( view, cur Alpha )  ;  anim . add Listener ( listener )  ;  add Listener ( new  Transition Listener Adapter (  )  {     @ Override     public void on Transition End ( @ Non Null  Transition transition )  {         view . set Alpha ( cur Alpha )  ;          transition . remove Listener ( this )  ;      } } )  ;  return anim ; }"
2092,public void seek To ( int position ) { m Video View . seek To ( position )  ;  m Danmaku Target Position = position ; }
2093,"public com . anychart . charts .  Waterfall data Mode (  String mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . data Mode ( %s )  ; "", wrap Quotes ( mode )  )  )  ;  return this ; }"
2094,"public static  Messenger Thread Params get Messenger Thread Params For Intent (  Intent intent ) {  Set< String> categories = intent . get Categories (  )  ;  if  ( categories == null )  {     return null ;  } if  ( categories . contains ( ORCA_THREAD_CATEGORY_20150314 )  )  {      Bundle app Link Extras =  App Links . get App Link Extras ( intent )  ;       String thread Token = app Link Extras . get String ( EXTRA_THREAD_TOKEN_KEY )  ;       String metadata = app Link Extras . get String ( EXTRA_METADATA )  ;       String participants = app Link Extras . get String ( EXTRA_PARTICIPANTS )  ;      boolean is Reply = app Link Extras . get Boolean ( EXTRA_IS_REPLY )  ;      boolean is Compose = app Link Extras . get Boolean ( EXTRA_IS_COMPOSE )  ;       Messenger Thread Params .  Origin origin =  Messenger Thread Params .  Origin . UNKNOWN ;      if  ( is Reply )  {         origin =  Messenger Thread Params .  Origin . REPLY_FLOW ;      } else if  ( is Compose )  {         origin =  Messenger Thread Params .  Origin . COMPOSE_FLOW ;      }     return new  Messenger Thread Params ( origin, thread Token, metadata, parse Participants ( participants )  )  ;  } else {     return null ;  }}"
2095,"public com . anychart . core . cartesian . series .  Bar3d unselect (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unselect ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ;  return this ; }"
2096,public  Factory set Tag (  Object tag ) {  Assertions . check State ( !is Create Called )  ;  this . tag = tag ;  return this ; }
2097,static  Optional< Annotation Mirror> get Map Key (  Element binding Element ) {  Immutable Set<? extends  Annotation Mirror> map Keys = get Map Keys ( binding Element )  ;  return map Keys . is Empty (  )  ?  Optional . empty (  )  :  Optional . < Annotation Mirror>of ( get Only Element ( map Keys )  )  ; }
2098,public  Source Editor set Markdown ( final boolean markdown ) { this . markdown = markdown ;  return this ; }
2099,void on Configuration Changed (  Configuration new Config ) {}
2100,"protected void retry ( final  Base Download Task task, final  Throwable ex, final int retrying Times, final int so Far Bytes ) {}"
2101,"public void maximum (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . maximum (  )  ; "" )  ; }"
2102,public static boolean has Setup User (  ) { return  Qiscus Core . has Setup User (  )  ; }
2103,"public com . anychart . charts .  Tag Cloud mode (  String mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . mode ( %s )  ; "", wrap Quotes ( mode )  )  )  ;  return this ; }"
2104,"public static int get Action Bar Height (  ) {  Typed Value tv = new  Typed Value (  )  ;  if  (  Utils . get App (  )  . get Theme (  )  . resolve Attribute ( android . R . attr . action Bar Size, tv, true )  )  {     return  Typed Value . complex To Dimension Pixel Size ( tv . data,  Utils . get App (  )  . get Resources (  )  . get Display Metrics (  )  )  ;  } return 0 ; }"
2105,"public com . anychart . charts .  Pie select Marquee Fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
2106,"public com . anychart . core .  State Settings low Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
2107,public  Event Bus Builder strict Method Verification ( boolean strict Method Verification ) { this . strict Method Verification = strict Method Verification ;  return this ; }
2108,public static  Android Manifest Reader for String (  String xml String )  throws IO Exception{ return for Reader ( new  String Reader ( xml String )  )  ; }
2109,private static long to Nanos Saturated ( java . time .  Duration duration ) { // durations longer than approximately +/- 292 years )  .  try {     return duration . to Nanos (  )  ;  } catch  (  Arithmetic Exception too Big )  {     return duration . is Negative (  )  ?  Long . MIN_VALUE :  Long . MAX_VALUE ;  }}
2110,public void set Foreground Between Scan Period ( long p ) { foreground Between Scan Period = p ; }
2111,public void clear Track Selections ( int period Index ) { assert Prepared With Media (  )  ;  for  ( int i = 0 ;  i < renderer Capabilities . length ;  i++ )  {     track Selections By Period And Renderer [ period Index ]  [ i ]  . clear (  )  ;  }}
2112,"public  Builder path Dash Effect (  Path shape, float advance, float phase,  Path Dash Path Effect .  Style style ) { check Not Built (  )  ;  check Effect Count (  )  ;  m Path Effects [ m Num Path Effects++ ]  = new  Path Dash Path Effect ( shape, advance, phase, style )  ;  return this ; }"
2113,"public static  String generate Random Code Verifier (  ) { return generate Random Code Verifier ( new  Secure Random (  ) , DEFAULT_CODE_VERIFIER_ENTROPY )  ; }"
2114,"private void init_card_thumb_resource URL (  ) { // Create a  Card  Card card = new  Card ( get Activity (  )  )  ;  // Create a  Card Header  Card Header header = new  Card Header ( get Activity (  )  )  ;  // Set the header title header . set Title ( get String ( R . string . demo_header_basetitle )  )  ;  card . add Card Header ( header )  ;  // Create thumbnail  Card Thumbnail thumb = new  Card Thumbnail ( get Activity (  )  )  ;  // Set URL resource thumb . set Url Resource ( ""https://lh5 . googleusercontent . com/-N8bz9q4 Kz0 I/AAAAAAAAAAI/AAAAAAAAA As/ Icl2b Q My K7c/s265-c-k-no/photo . jpg"" )  ;  // Error  Resource ID thumb . set Error Resource ( R . drawable . ic_error_loadingorangesmall )  ;  // Add thumbnail to a card card . add Card Thumbnail ( thumb )  ;  // Set card in the card View  Card View Native card View =  (  Card View Native )  get Activity (  )  . find View By Id ( R . id . carddemo_thumb_url )  ;  card View . set Card ( card )  ; }"
2115,public int get Array Type (  ) { return array Type ; }
2116,"public static  List< Full Rule Key> read Rule Keys (  Path log Path )  throws IO Exception, T Exception{  Byte Buffer length Buf =  Byte Buffer . allocate ( 4 )  ;   List< Full Rule Key> ret = new  Array List<> (  )  ;  try  (  File Input Stream log File Stream = new  File Input Stream ( log Path . to Absolute Path (  )  . to String (  )  )  )  {     while  ( log File Stream . available (  )  > 0 )  {         log File Stream . read ( length Buf . array (  )  )  ;          int length = length Buf . get Int (  )  ;          length Buf . rewind (  )  ;          byte [  ]  serialized = new byte [ length ]  ;          log File Stream . read ( serialized )  ;          T Deserializer serializer = new T Deserializer ( new T Compact Protocol .  Factory (  )  )  ;           Full Rule Key rule Key = new  Full Rule Key (  )  ;          serializer . deserialize ( rule Key, serialized )  ;          ret . add ( rule Key )  ;      }     return ret ;  }}"
2117,public boolean is Table Sorted (  ) { return sorted Column Index != -1 ; }
2118,"public  Optional< Build Target> get Boost Test Dep (  Target Configuration target Configuration ) { return delegate . get Build Target ( cxx Section, BOOST_TEST_DEP, target Configuration )  ; }"
2119,"public void position (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . position (  )  ; "" )  ; }"
2120,"public com . anychart . core .  State Settings selected (  ) { return new com . anychart . core .  State Settings ( js Base + "" . selected (  ) "" )  ; }"
2121,"public void begin (  Interpretation Context ec,  String local Name,  Attributes attributes ) { //  Let us forget about previous errors  ( in this object )  in Error = false ;   String error Msg ;   String conversion Word = attributes . get Value (  Action Const . CONVERSION_WORD_ATTRIBUTE )  ;   String converter Class = attributes . get Value (  Action Const . CONVERTER_CLASS_ATTRIBUTE )  ;  if  (  Option Helper . is Empty ( conversion Word )  )  {     in Error = true ;      error Msg = "" No 'conversion Word' attribute in <conversion Rule>"" ;      add Error ( error Msg )  ;      return ;  } if  (  Option Helper . is Empty ( converter Class )  )  {     in Error = true ;      error Msg = "" No 'converter Class' attribute in <conversion Rule>"" ;      ec . add Error ( error Msg )  ;      return ;  } try {      Map< String,  String> rule Registry =  (  Map< String,  String> )  context . get Object (  Core Constants . PATTERN_RULE_REGISTRY )  ;      if  ( rule Registry == null )  {         rule Registry = new  Hash Map< String,  String> (  )  ;          context . put Object (  Core Constants . PATTERN_RULE_REGISTRY, rule Registry )  ;      }     // put the new rule into the rule registry     add Info ( ""registering conversion word "" + conversion Word + "" with class  [ "" + converter Class + "" ] "" )  ;      rule Registry . put ( conversion Word, converter Class )  ;  } catch  (  Exception oops )  {     in Error = true ;      error Msg = "" Could not add conversion rule to  Pattern Layout . "" ;      add Error ( error Msg )  ;  }}"
2122,public void loading (  ) { m Hint View . set Visibility (  View . GONE )  ;  m Progress Bar . set Visibility (  View . VISIBLE )  ;  layout_progress . set Visibility (  View . VISIBLE )  ;  txt_progresstext . set Visibility (  View . VISIBLE )  ; }
2123,public short get Length (  ) { // start with the size of the fixed header short size = 5 * 2 ;  // add the size of each segment header size += entry Count * 2 ;  return size ; }
2124,public boolean is Empty (  ) { return m Devices . is Empty (  )  ; }
2125,public void start And Cancel Previous (  Atomic Reference< Animator> animator Ref ) {  Animator old Animator = animator Ref . get (  )  ;  if  ( old Animator != null )  {     old Animator . cancel (  )  ;  }  Animator new Animator = start (  )  ;  animator Ref . set ( new Animator )  ; }
2126,public void set Result Code Id (  String result Code Id ) { this . result Code Id = result Code Id ; }
2127,"private void find Getter And Setter For Private Field (  Logger logger ) { for  (  Element element :  Synchronization Kt . get Enclosed Elements Thread Safe ( class Element )  )  {     if  ( element . get Kind (  )  ==  Element Kind . METHOD )  {          Executable Element method =  (  Executable Element )  element ;           String method Name = method . get Simple Name (  )  . to String (  )  ;           List< Variable Element> parameters =  Synchronization Kt . get Parameters Thread Safe ( method )  ;          // check if it is a valid getter         if  (  ( method Name . equals (  String . format ( ""get%s"", capitalize First Letter ( get Field Name (  )  )  )  )  || method Name . equals (  String . format ( ""is%s"", capitalize First Letter ( get Field Name (  )  )  )  )  ||  ( method Name . equals ( get Field Name (  )  )  && starts With Is ( get Field Name (  )  )  )  )  && !method . get Modifiers (  )  . contains ( PRIVATE )  && !method . get Modifiers (  )  . contains ( STATIC )  && parameters . is Empty (  )  )  {             set Getter Method Name ( method Name )  ;          }         // check if it is a valid setter         if  (  ( method Name . equals (  String . format ( ""set%s"", capitalize First Letter ( get Field Name (  )  )  )  )  ||  ( starts With Is ( get Field Name (  )  )  && method Name . equals (  String . format ( ""set%s"", get Field Name (  )  . substring ( 2, get Field Name (  )  . length (  )  )  )  )  )  )  && !method . get Modifiers (  )  . contains ( PRIVATE )  && !method . get Modifiers (  )  . contains ( STATIC )  && parameters . size (  )  == 1 )  {             set Setter Method Name ( method Name )  ;          }     } } if  ( get Getter Method Name (  )  == null || get Setter Method Name (  )  == null )  {     //  We disable the ""private"" field setting so that we can still generate     // some code that compiles in an ok manner  ( ie via direct field access )      set Private ( false )  ;      logger . log Error ( ""%s annotations must not be on private fields"" + "" without proper getter and setter methods .   ( class: %s, field: %s ) "",  Epoxy Attribute . class . get Simple Name (  ) , class Element . get Simple Name (  ) , get Field Name (  )  )  ;  }}"
2128,"public void exec SQL (  String sql,  Object [  ]  bind Args ) {}"
2129,"static  Path get Zipaligned Apk Path (  Project Filesystem project Filesystem,  Build Target build Target,  Binary Type binary Type ) { return  Paths . get ( get Unsigned Apk Path ( project Filesystem, build Target, binary Type )  . replace All ( ""\\ . unsigned\\ . apk$"", "" . zipaligned . apk"" )  . replace All ( ""\\ . unsigned\\ . aab$"", "" . zipaligned . aab"" )  )  ; }"
2130,void set Persistent Store Coordinator (  Persistent Store Coordinator coordinator ) { store Coordinator = coordinator ; }
2131,public float [  ]  get Vertices (  ) { return local Vertices ; }
2132,"private void init Segmented Access Acknowledgement Timer ( final int seq Zero, final int ttl, final int src, final int dst, final int seg N ) { if  ( !m Segmented Access Acknowledgement Timer Started )  {     m Segmented Access Acknowledgement Timer Started = true ;       Log . v ( TAG, ""TTL: "" + ttl )  ;      final int duration =  ( BLOCK_ACK_TIMER +  ( 50 * ttl )  )  ;       Log . v ( TAG, "" Duration: "" + duration )  ;      m Duration =  System . current Time Millis (  )  + duration ;      m Handler . post Delayed (  (  )  -> {          Log . v ( TAG, "" Acknowledgement timer expiring"" )  ;          send Block Ack ( seq Zero, ttl, src, dst, seg N )  ;      }, duration )  ;  }}"
2133,"public com . anychart . charts .  Heat Map y Grid (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Grid ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
2134,"public synchronized  Countly init (  Countly Config config ) { if  ( config == null )  {     throw new  Illegal Argument Exception ( "" Can't init SDK with 'null' config"" )  ;  } //enable logging if  ( config . logging Enabled )  {     //enable logging before any potential logging calls     set Logging Enabled ( true )  ;  } L .  Set Listener ( config . provided Log Callback )  ;  L . d ( "" [  Init ]   Initializing  Countly  [ "" + COUNTLY_SDK_NAME + "" ]  SDK version  [ "" + COUNTLY_SDK_VERSION_STRING + "" ] "" )  ;  if  ( config . context == null )  {     if  ( config . application != null )  {         L . d ( "" [  Init ]   No explicit context provided .   Using context from the provided application class"" )  ;          config . context = config . application ;      } else {         throw new  Illegal Argument Exception ( ""valid context is required in  Countly init, but was provided 'null'"" )  ;      } } else {     L . d ( "" [  Init ]   Using explicitly provided context"" )  ;  } if  ( ! Utils Networking . is Valid URL ( config . server URL )  )  {     throw new  Illegal Argument Exception ( ""valid server URL is required"" )  ;  } //enable unhandled crash reporting if  ( config . enable Unhandled Crash Reporting )  {     enable Crash Reporting (  )  ;  } //react to given consent if  ( config . should Require Consent )  {     set Requires Consent ( true )  ;      if  ( config . enabled Feature Names == null )  {         L . i ( "" [  Init ]   Consent has been required but no consent was given during init"" )  ;      } else {         set Consent Internal ( config . enabled Feature Names, true )  ;      } } if  ( config . server URL . char At ( config . server URL . length (  )  - 1 )  == '/' )  {     L . v ( "" [  Init ]   Removing trailing '/' from provided server url"" )  ;      //removing trailing '/' from server url     config . server URL = config . server URL . substring ( 0, config . server URL . length (  )  - 1 )  ;  } if  ( config . app Key == null || config . app Key . length (  )  == 0 )  {     throw new  Illegal Argument Exception ( ""valid app Key is required, but was provided either 'null' or empty  String"" )  ;  } if  ( config . application == null )  {     L . w ( "" [  Init ]   Initialising the SDK without providing the application class is deprecated"" )  ;  } if  ( config . device ID != null && config . device ID . length (  )  == 0 )  {     //device ID is provided but it's a empty string     throw new  Illegal Argument Exception ( ""valid device ID is required, but was provided as empty  String"" )  ;  } if  ( config . id Mode ==  Device Id .  Type . TEMPORARY_ID )  {     throw new  Illegal Argument Exception ( "" Temporary_ID type can't be provided during init"" )  ;  } if  ( config . device ID == null && config . id Mode == null )  {     //device ID was not provided and no preferred mode specified .   Choosing default     config . id Mode =  Device Id .  Type . OPEN_UDID ;  } if  ( config . id Mode ==  Device Id .  Type . DEVELOPER_SUPPLIED && config . device ID == null )  {     throw new  Illegal Argument Exception ( "" Valid device ID has to be provided with the  Developer_ Supplied device ID type"" )  ;  } if  ( config . device ID == null && config . id Mode ==  Device Id .  Type . ADVERTISING_ID && ! Advertising Id Adapter . is Advertising Id Available (  )  )  {     //choosing advertising ID as type, but it's available on this device     L . e ( ""valid device ID is required because  Advertising ID is not available  ( you need to include  Google  Play services 4 . 0+ into your project ) "" )  ;      return this ;  } if  ( event Queue_ != null &&  ( !connection Queue_ . get Server URL (  )  . equals ( config . server URL )  || !connection Queue_ . get App Key (  )  . equals ( config . app Key )  || ! Device Id . device ID Equals Null Safe ( config . device ID, config . id Mode, connection Queue_ . get Device Id (  )  )  )  )  {     //not sure if this needed     L . e ( "" Countly cannot be reinitialized with different values"" )  ;      return this ;  } if  ( L . log Enabled (  )  )  {     L . i ( "" [  Init ]   Checking init parameters"" )  ;      L . i ( "" [  Init ]   Is consent required?  [ "" + requires Consent + "" ] "" )  ;      //  Context class hierarchy     //  Context     //|-  Context Wrapper     //|- -  Application     //|- -  Context Theme Wrapper     //|- - - -  Activity     //|- -  Service     //|- - -  Intent Service      Class context Class = config . context . get Class (  )  ;       Class context Super Class = context Class . get Superclass (  )  ;       String context Text = "" [  Init ]   Provided  Context  [ "" + config . context . get Class (  )  . get Simple Name (  )  + "" ] "" ;      if  ( context Super Class != null )  {         context Text += "", it's superclass:  [ "" + context Super Class . get Simple Name (  )  + "" ] "" ;      }     L . i ( context Text )  ;  } //set internal context, it's allowed to be changed on the second init call context_ = config . context . get Application Context (  )  ;  // so there is nothing to do, because we are already initialized with those values if  ( event Queue_ == null )  {     L . d ( "" [  Init ]   About to init internal systems"" )  ;      config_ = config ;      if  ( config . session Update Timer Delay != null )  {         //if we need to change the timer delay, do that first         L . d ( "" [  Init ]   Setting custom session update timer delay,  [ "" + config . session Update Timer Delay + "" ] "" )  ;          start Timer Service ( timer Service_, timer Future, config . session Update Timer Delay )  ;      }     final  Countly Store countly Store ;      if  ( config . countly Store != null )  {         //we are running a test and using a mock object         countly Store = config . countly Store ;      } else {         countly Store = new  Countly Store ( config . context, L )  ;          config . set Countly Store ( countly Store )  ;      }     //check legacy access methods     if  ( location Fallback != null && config . location County Code == null && config . location City == null && config . location Location == null && config . location Ip Address == null )  {         //if the fallback was set and config did not contain any location, use the fallback info         // { country_code, city, gps Coordinates, ip Address } ;          config . location County Code = location Fallback [ 0 ]  ;          config . location City = location Fallback [ 1 ]  ;          config . location Location = location Fallback [ 2 ]  ;          config . location Ip Address = location Fallback [ 3 ]  ;      }     //initialise modules     module Consent = new  Module Consent ( this, config )  ;      module Device Id = new  Module Device Id ( this, config )  ;      module Crash = new  Module Crash ( this, config )  ;      module Events = new  Module Events ( this, config )  ;      module Views = new  Module Views ( this, config )  ;      module Ratings = new  Module Ratings ( this, config )  ;      module Sessions = new  Module Sessions ( this, config )  ;      module Remote Config = new  Module Remote Config ( this, config )  ;      module APM = new  Module APM ( this, config )  ;      module Location = new  Module Location ( this, config )  ;      module Feedback = new  Module Feedback ( this, config )  ;      modules . clear (  )  ;      modules . add ( module Consent )  ;      modules . add ( module Device Id )  ;      modules . add ( module Crash )  ;      modules . add ( module Events )  ;      modules . add ( module Views )  ;      modules . add ( module Ratings )  ;      modules . add ( module Sessions )  ;      modules . add ( module Remote Config )  ;      modules . add ( module APM )  ;      modules . add ( module Location )  ;      modules . add ( module Feedback )  ;      L . i ( "" [  Init ]   Finished initialising modules"" )  ;      //init other things     L . d ( "" [  Init ]   Currently cached advertising ID  [ "" + countly Store . get Cached Advertising Id (  )  + "" ] "" )  ;       Advertising Id Adapter . cache Advertising ID ( config . context, countly Store )  ;      add Custom Network Request Headers ( config . custom Network Request Headers )  ;      set Http Post Forced ( config . http Post Forced )  ;      enable Parameter Tampering Protection Internal ( config . tampering Protection Salt )  ;      set Push Intent Add Metadata ( config . push Intent Add Metadata )  ;      if  ( config . event Queue Size Threshold != null )  {         set Event Queue Size To Send ( config . event Queue Size Threshold )  ;      }     if  ( config . public Key Pinning Certificates != null )  {         enable Public Key Pinning (  Arrays . as List ( config . public Key Pinning Certificates )  )  ;      }     if  ( config . certificate Pinning Certificates != null )  {         enable Certificate Pinning (  Arrays . as List ( config . certificate Pinning Certificates )  )  ;      }     if  ( config . enable Attribution != null )  {         set Enable Attribution ( config . enable Attribution )  ;      }     //app crawler check     should Ignore Crawlers = config . should Ignore App Crawlers ;      if  ( config . app Crawler Names != null )  {          Collections . add All (  Arrays . as List ( config . app Crawler Names )  )  ;      }     check If Device Is App Crawler (  )  ;      //initialize networking queues     connection Queue_ . L = L ;      connection Queue_ . set Server URL ( config . server URL )  ;      connection Queue_ . set App Key ( config . app Key )  ;      connection Queue_ . set Countly Store ( countly Store )  ;      connection Queue_ . set Device Id ( config . device Id Instance )  ;      connection Queue_ . set Request Header Custom Values ( request Header Custom Values )  ;      connection Queue_ . set Metric Override ( config . metric Override )  ;      connection Queue_ . set Context ( context_ )  ;      event Queue_ = new  Event Queue ( countly Store )  ;      //set global application listeners     if  ( config . application != null )  {         config . application . register Activity Lifecycle Callbacks ( new  Application .  Activity Lifecycle Callbacks (  )  {             @ Override             public void on Activity Created (  Activity activity,  Bundle bundle )  {                 if  ( L . log Enabled (  )  )  {                     L . d ( "" [  Countly ]  on Activity Created, "" + activity . get Class (  )  . get Simple Name (  )  )  ;                  }                 for  (  Module Base module : modules )  {                     module . callback On Activity Created ( activity )  ;                  }             }             @ Override             public void on Activity Started (  Activity activity )  {                 if  ( L . log Enabled (  )  )  {                     L . d ( "" [  Countly ]  on Activity Started, "" + activity . get Class (  )  . get Simple Name (  )  )  ;                  }                 for  (  Module Base module : modules )  {                     module . callback On Activity Started ( activity )  ;                  }             }             @ Override             public void on Activity Resumed (  Activity activity )  {                 if  ( L . log Enabled (  )  )  {                     L . d ( "" [  Countly ]  on Activity Resumed, "" + activity . get Class (  )  . get Simple Name (  )  )  ;                  }                 for  (  Module Base module : modules )  {                     module . callback On Activity Resumed ( activity )  ;                  }             }             @ Override             public void on Activity Paused (  Activity activity )  {                 if  ( L . log Enabled (  )  )  {                     L . d ( "" [  Countly ]  on Activity Paused, "" + activity . get Class (  )  . get Simple Name (  )  )  ;                  }                 for  (  Module Base module : modules )  {                     module . callback On Activity Paused ( activity )  ;                  }             }             @ Override             public void on Activity Stopped (  Activity activity )  {                 if  ( L . log Enabled (  )  )  {                     L . d ( "" [  Countly ]  on Activity Stopped, "" + activity . get Class (  )  . get Simple Name (  )  )  ;                  }                 for  (  Module Base module : modules )  {                     module . callback On Activity Stopped ( activity )  ;                  }             }             @ Override             public void on Activity Save Instance State (  Activity activity,  Bundle bundle )  {                 if  ( L . log Enabled (  )  )  {                     L . d ( "" [  Countly ]  on Activity Save Instance State, "" + activity . get Class (  )  . get Simple Name (  )  )  ;                  }                 for  (  Module Base module : modules )  {                     module . callback On Activity Save Instance State ( activity )  ;                  }             }             @ Override             public void on Activity Destroyed (  Activity activity )  {                 if  ( L . log Enabled (  )  )  {                     L . d ( "" [  Countly ]  on Activity Destroyed, "" + activity . get Class (  )  . get Simple Name (  )  )  ;                  }                 for  (  Module Base module : modules )  {                     module . callback On Activity Destroyed ( activity )  ;                  }             }         } )  ;          for  (  Module Base module : modules )  {             module . init Finished ( config )  ;          }         L . i ( "" [  Init ]   Finished initialising SDK"" )  ;      } } else {     //if this is not the first time we are calling init     L . i ( "" [  Init ]   Getting in the 'else' block"" )  ;      // context is allowed to be changed on the second init call     connection Queue_ . set Context ( context_ )  ;  } return this ; }"
2135,public static  List<T> presized List ( int size ) { if  ( size == 0 )  {     return  Collections . empty List (  )  ;  } return new  Array List<T> ( size )  ; }
2136,"public void cancel Touch Focus (  ) {  Stage stage = get Stage (  )  ;  if  ( stage != null )      stage . cancel Touch Focus Except ( flick Scroll Listener, this )  ; }"
2137,public void set Swipe Action Right ( int swipe Action Right ) { this . swipe Action Right = swipe Action Right ; }
2138,"private void parse Inline Image (  )  throws IO Exception{ // build dictionary until ID, then read image until EI  Hash Map< String, PDF Object> hm = new  Hash Map< String, PDF Object> (  )  ;  while  ( true )  {      Tok t = next Token (  )  ;      if  ( t . type ==  Tok . CMD && t . name . equals ( ""ID"" )  )  {         break ;      }     // it should be a name ;       String name = t . name ;      if  ( !RELEASE )  {         debug ( "" Parse Inline Image, token: "" + name, 1000 )  ;      }     if  ( name . equals ( ""BPC"" )  )  {         name = "" Bits Per Component"" ;      } else if  ( name . equals ( ""CS"" )  )  {         name = "" Color Space"" ;      } else if  ( name . equals ( ""D"" )  )  {         name = "" Decode"" ;      } else if  ( name . equals ( ""DP"" )  )  {         name = "" Decode Parms"" ;      } else if  ( name . equals ( ""F"" )  )  {         name = "" Filter"" ;      } else if  ( name . equals ( ""H"" )  )  {         name = "" Height"" ;      } else if  ( name . equals ( ""IM"" )  )  {         name = "" Image Mask"" ;      } else if  ( name . equals ( ""W"" )  )  {         name = "" Width"" ;      } else if  ( name . equals ( ""I"" )  )  {         name = "" Interpolate"" ;      }      Object vobj = parse Object (  )  ;      hm . put ( name, new PDF Object ( vobj )  )  ;  } if  ( stream [ loc ]  == '\r' )  {     loc++ ;  } if  ( stream [ loc ]  == '\n' || stream [ loc ]  == ' ' )  {     loc++ ;  } PDF Object im Obj =  ( PDF Object )  hm . get ( "" Image Mask"" )  ;  if  ( im Obj != null && im Obj . get Boolean Value (  )  )  {     //  [ PATCHED by michal . busta@gmail . com ]  - default value according to PDF spec .  is  [ 0, 1 ]      // there is no need to swap array - PDF image should handle this values      Double [  ]  decode = { new  Double ( 0 ) , new  Double ( 1 )  } ;      PDF Object decode Obj =  ( PDF Object )  hm . get ( "" Decode"" )  ;      if  ( decode Obj != null )  {         decode [ 0 ]  = new  Double ( decode Obj . get At ( 0 )  . get Double Value (  )  )  ;          decode [ 1 ]  = new  Double ( decode Obj . get At ( 1 )  . get Double Value (  )  )  ;      }     hm . put ( "" Decode"", new PDF Object ( decode )  )  ;  } PDF Object obj = new PDF Object ( null, PDF Object . DICTIONARY, hm )  ;  int dstart = loc ;  // now skip data until a whitespace followed by EI while  ( !PDF File . is White Space ( stream [ loc ]  )  || stream [ loc + 1 ]  != 'E' || stream [ loc + 2 ]  != 'I' )  {     loc++ ;  } // data runs from dstart to loc byte [  ]  data = new byte [ loc - dstart ]  ;   System . arraycopy ( stream, dstart, data, 0, loc - dstart )  ;  obj . set Stream (  Byte Buffer . wrap ( data )  )  ;  loc += 3 ;  do Image ( obj )  ; }"
2139,"Immutable List< Fact> describe As Main Cause (  ) { check State ( first Compare Exception != null )  ;  //  We won't do pairing or diff formatting unless a more meaningful failure was found, and if a // more meaningful failure was found then we shouldn't be using this method: check State ( first Pairing Exception == null )  ;  check State ( first Format Diff Exception == null )  ;  return  Immutable List . of ( simple Fact ( ""one or more exceptions were thrown while comparing "" + argument Label ) , fact ( ""first exception"", first Compare Exception . describe (  )  )  )  ; }"
2140,protected void maybe Build And Set Gesture Detector (  Abstract Drawee Controller controller ) {  Gesture Detector gesture Detector = controller . get Gesture Detector (  )  ;  if  ( gesture Detector == null )  {     gesture Detector =  Gesture Detector . new Instance ( m Context )  ;      controller . set Gesture Detector ( gesture Detector )  ;  }}
2141,"void end Network Request Internal (  String network Trace Key,  String unique Id, int response Code, int request Payload Size, int response Payload Size ) { //end time counting as fast as possible long current Timestamp =  Utils Time . current Timestamp Ms (  )  ;  L . d ( "" [  Module APM ]   Calling 'end Network Request Internal' with key: [ "" + network Trace Key + "" ] "" )  ;  if  ( network Trace Key == null || network Trace Key . is Empty (  )  )  {     L . e ( "" [  Module APM ]   Provided a invalid trace key"" )  ;      return ;  } if  ( unique Id == null || unique Id . is Empty (  )  )  {     L . e ( "" [  Module APM ]   Provided a invalid unique Id"" )  ;      return ;  }  String internal Trace Key = network Trace Key + ""|"" + unique Id ;  if  ( network Traces . contains Key ( internal Trace Key )  )  {      Long start Timestamp = network Traces . remove ( internal Trace Key )  ;      if  ( start Timestamp == null )  {         L . e ( "" [  Module APM ]  end Network Request Internal, retrieved 'start Timestamp' is null"" )  ;      } else {         record Network Request Internal ( network Trace Key, response Code, request Payload Size, response Payload Size, start Timestamp, current Timestamp )  ;      } } else {     L . w ( "" [  Module APM ]  end Network Request Internal, trying to end trace which was not started"" )  ;  }}"
2142,public boolean are Messages Suppressed (  ) { return are Messages Suppressed ; }
2143,"public  Realm Configuration build (  ) { // an asset File is configured if  ( read Only )  {     if  ( initial Data Transaction != null )  {         throw new  Illegal State Exception ( "" This  Realm is marked as read-only .   Read-only  Realms cannot use initial Data (  Realm .  Transaction )  . "" )  ;      }     if  ( asset File Path == null )  {         throw new  Illegal State Exception ( "" Only  Realms provided using 'asset File ( path ) ' can be marked read-only .   No such  Realm was provided . "" )  ;      }     if  ( delete Realm If Migration Needed )  {         throw new  Illegal State Exception ( ""'delete Realm If Migration Needed (  ) ' and read-only  Realms cannot be combined"" )  ;      }     if  ( compact On Launch != null )  {         throw new  Illegal State Exception ( ""'compact On Launch (  ) ' and read-only  Realms cannot be combined"" )  ;      } } if  ( rx Factory == null &&  Util . is Rx Java Available (  )  )  {     rx Factory = new  Realm Observable Factory ( true )  ;  } if  ( flow Factory == null &&  Util . is Coroutines Available (  )  )  {     flow Factory = new  Realm Flow Factory ( true )  ;  } return new  Realm Configuration ( new  File ( directory, file Name ) , asset File Path, key, schema Version, migration, delete Realm If Migration Needed, durability, create Schema Mediator ( modules, debug Schema ) , rx Factory, flow Factory, initial Data Transaction, read Only, compact On Launch, false, max Number Of Active Versions, allow Writes On Ui Thread, allow Queries On Ui Thread )  ; }"
2144,"private static  Pair< Integer,  Track Encryption Box> parse Sample Entry Encryption Data (  Parsable Byte Array parent, int position, int size ) { int child Position = parent . get Position (  )  ;  while  ( child Position - position < size )  {     parent . set Position ( child Position )  ;      int child Atom Size = parent . read Int (  )  ;       Assertions . check Argument ( child Atom Size > 0, ""child Atom Size should be positive"" )  ;      int child Atom Type = parent . read Int (  )  ;      if  ( child Atom Type ==  Atom . TYPE_sinf )  {          Pair< Integer,  Track Encryption Box> result = parse Common Encryption Sinf From Parent ( parent, child Position, child Atom Size )  ;          if  ( result != null )  {             return result ;          }     }     child Position += child Atom Size ;  } return null ; }"
2145,"public com . anychart . charts .  Circular Gauge remove Pointer (  String id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove Pointer ( %s )  ; "", wrap Quotes ( id )  )  )  ;  return this ; }"
2146,public static boolean is Wifi Connected (  Context context ) { if  ( context != null )  {      Connectivity Manager m Connectivity Manager =  (  Connectivity Manager )  context . get System Service (  Context . CONNECTIVITY_SERVICE )  ;       Network Info m Wi Fi Network Info = m Connectivity Manager . get Network Info (  Connectivity Manager . TYPE_WIFI )  ;      if  ( m Wi Fi Network Info != null && m Wi Fi Network Info . is Available (  )  )  {         return m Wi Fi Network Info . is Connected (  )  ;      } } return false ; }
2147,public void cancel ( final int id ) { final  Base Notification Item notification = remove ( id )  ;  if  ( notification == null )  {     return ;  } notification . cancel (  )  ; }
2148,public E pop (  ) { return remove First (  )  ; }
2149,"public com . anychart . core . utils .  Padding padding (  ) { return new com . anychart . core . utils .  Padding ( js Base + "" . padding (  ) "" )  ; }"
2150,public static boolean is Test Class (  Psi Class psi Class ) { return is J Unit3 Test Case Class ( psi Class )  || is Annotated J Unit4 Test Class ( psi Class )  || is J Unit4 Test Class With At Least One Test Method ( psi Class )  || is Test NG Test Class With At Least One Test Method ( psi Class )  ; }
2151,public static T run In Background (  Callable<T> callable ) {  Future<T> future =  Singleton Holder . instance . background Executor Service . submit ( callable )  ;  return  Paused Executor Service . get Future Result With Exception Preserved ( future )  ; }
2152,"public com . anychart . core . cartesian . series .  Base With Markers error (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . error ( %s )  ; "", settings )  )  ;  return this ; }"
2153,"public com . anychart . core .  Visual Base With Bounds max Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
2154,"public static void logi (  String message ) { if  (  Log . is Loggable ( TAG,  Log . INFO )  )  {      Log . i ( TAG, message )  ;  }}"
2155,public boolean equals ( @ Nullable  Object another ) { if  ( this == another )      return true ;  return another instanceof  Hash Code And File Type && equal To (  (  Hash Code And File Type )  another )  ; }
2156,protected  Dfs Repository get Repository (  ) { return repository ; }
2157,public void set Content Type Predicate ( @ Nullable  Predicate< String> content Type Predicate ) { this . content Type Predicate = content Type Predicate ; }
2158,"public com . anychart . charts .  Stock select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
2159,"protected  Array With Duplicate<E> create Array With Duplicate Element (  ) { E [  ]  elements = create Samples Array (  )  ;  E duplicate = elements [  ( elements . length / 2 )  - 1 ]  ;  elements [  ( elements . length / 2 )  + 1 ]  = duplicate ;  return new  Array With Duplicate<E> ( elements, duplicate )  ; }"
2160,public static  User Account find (  String user Id ) { if  ( caching Policy ==  Caching Policy . THROUGH || caching Policy ==  Caching Policy . AROUND )  {     return  Cache Store . read Through ( user Id )  ;  } else if  ( caching Policy ==  Caching Policy . BEHIND )  {     return  Cache Store . read Through With Write Back Policy ( user Id )  ;  } else if  ( caching Policy ==  Caching Policy . ASIDE )  {     return find Aside ( user Id )  ;  } return null ; }
2161,"public com . anychart . charts .  Sparkline label (  String index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , settings )  )  ;  return this ; }"
2162,"public com . anychart . core . stock . scrollerseries .  Candlestick falling Stroke ( com . anychart . graphics . vector .  Stroke value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
2163,public void end (  ) { flush (  )  ;  if  ( own Context )      context . end (  )  ;  camera = null ; }
2164,"public  Mesh Part Builder begin ( int primitive Type ) { if  ( building )      throw new  Gdx Runtime Exception ( "" Call end (  )  after calling begin (  ) "" )  ;  building = true ;  builder . begin ( mesh . get Vertex Attributes (  )  )  ;  builder . part ( id, primitive Type, renderable . mesh Part )  ;  return builder ; }"
2165,public  String get Project Id (  ) { return project Id ; }
2166,public boolean is Enable (  ) { return enable ; }
2167,"public void keep Only Points (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . keep Only Points ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ; }"
2168,"public static  Object remove Listener (  Object bag,  Object listener ) { if  ( listener == null )      throw new  Illegal Argument Exception (  )  ;  if  ( listener instanceof  Object [  ]  )      throw new  Illegal Argument Exception (  )  ;  if  ( bag == listener )  {     bag = null ;  } else if  ( bag instanceof  Object [  ]  )  {      Object [  ]  array =  (  Object [  ]  )  bag ;      int L = array . length ;      // bag has at least 2 elements if it is array     if  ( L < 2 )          throw new  Illegal Argument Exception (  )  ;      if  ( L == 2 )  {         if  ( array [ 1 ]  == listener )  {             bag = array [ 0 ]  ;          } else if  ( array [ 0 ]  == listener )  {             bag = array [ 1 ]  ;          }     } else {         int i = L ;          do {             --i ;              if  ( array [ i ]  == listener )  {                  Object [  ]  tmp = new  Object [ L - 1 ]  ;                   System . arraycopy ( array, 0, tmp, 0, i )  ;                   System . arraycopy ( array, i + 1, tmp, i, L -  ( i + 1 )  )  ;                  bag = tmp ;                  break ;              }         } while  ( i != 0 )  ;      } } return bag ; }"
2169,"public  Media Period Id get Dummy First Media Period Id ( boolean shuffle Mode Enabled,  Timeline .  Window window ) { if  ( timeline . is Empty (  )  )  {     return DUMMY_MEDIA_PERIOD_ID ;  } int first Period Index = timeline . get Window ( timeline . get First Window Index ( shuffle Mode Enabled ) , window )  . first Period Index ;  return new  Media Period Id ( timeline . get Uid Of Period ( first Period Index )  )  ; }"
2170,public  String get Name (  ) { return name ; }
2171,public  Ls Remote Command set Tags ( boolean tags ) { this . tags = tags ;  return this ; }
2172,"public void ellipse ( float x, float y, float width, float height, float rotation, int segments ) { if  ( segments <= 0 )      throw new  Illegal Argument Exception ( ""segments must be > 0 . "" )  ;  check (  Shape Type .  Line,  Shape Type .  Filled, segments * 3 )  ;  float color Bits = color . to Float Bits (  )  ;  float angle = 2 *  Math Utils . PI / segments ;  rotation =  Math Utils . PI * rotation / 180f ;  float sin =  Math Utils . sin ( rotation )  ;  float cos =  Math Utils . cos ( rotation )  ;  float cx = x + width / 2, cy = y + height / 2 ;  float x1 = width * 0 . 5f ;  float y1 = 0 ;  if  ( shape Type ==  Shape Type .  Line )  {     for  ( int i = 0 ;  i < segments ;  i++ )  {         renderer . color ( color Bits )  ;          renderer . vertex ( cx + cos * x1 - sin * y1, cy + sin * x1 + cos * y1, 0 )  ;          x1 =  ( width * 0 . 5f *  Math Utils . cos (  ( i + 1 )  * angle )  )  ;          y1 =  ( height * 0 . 5f *  Math Utils . sin (  ( i + 1 )  * angle )  )  ;          renderer . color ( color Bits )  ;          renderer . vertex ( cx + cos * x1 - sin * y1, cy + sin * x1 + cos * y1, 0 )  ;      } } else {     for  ( int i = 0 ;  i < segments ;  i++ )  {         renderer . color ( color Bits )  ;          renderer . vertex ( cx + cos * x1 - sin * y1, cy + sin * x1 + cos * y1, 0 )  ;          renderer . color ( color Bits )  ;          renderer . vertex ( cx, cy, 0 )  ;          x1 =  ( width * 0 . 5f *  Math Utils . cos (  ( i + 1 )  * angle )  )  ;          y1 =  ( height * 0 . 5f *  Math Utils . sin (  ( i + 1 )  * angle )  )  ;          renderer . color ( color Bits )  ;          renderer . vertex ( cx + cos * x1 - sin * y1, cy + sin * x1 + cos * y1, 0 )  ;      } }}"
2173,public  Drawable get Background (  ) { return m Background ; }
2174,"public static void inject Fields If Necessary (  Project Filesystem filesystem,  Build Target target,  Buildable buildable,  Source Path Rule Finder rule Finder ) { if  ( buildable instanceof  Modern Build Rule )  {      Modern Build Rule<?> rule =  (  Modern Build Rule<?> )  buildable ;      inject Fields ( rule, filesystem, target, rule Finder )  ;  }}"
2175,"public com . anychart . core . cartesian . series .  Range Bar min Point Length (  String length ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Point Length ( %s )  ; "", wrap Quotes ( length )  )  )  ;  return this ; }"
2176,"Fetch V0 Request recv Wants (  Packet Line In pck In )  throws  Pack Protocol Exception, IO Exception{  Fetch V0 Request .  Builder req Builder = new  Fetch V0 Request .  Builder (  )  ;  boolean is First = true ;  boolean filter Received = false ;  for  (  ;   ;   )  {      String line ;      try {         line = pck In . read String (  )  ;      } catch  ( EOF Exception eof )  {         if  ( is First )  {             break ;          }         throw eof ;      }     if  (  Packet Line In . is End ( line )  )  {         break ;      }     if  ( line . starts With ( ""deepen "" )  )  {         //$NON-NLS-1$         int depth =  Integer . parse Int ( line . substring ( 7 )  )  ;          if  ( depth <= 0 )  {             throw new  Pack Protocol Exception (  Message Format . format ( J Git Text . get (  )  . invalid Depth,  Integer . value Of ( depth )  )  )  ;          }         req Builder . set Depth ( depth )  ;          continue ;      }     if  ( line . starts With ( ""shallow "" )  )  {         //$NON-NLS-1$         req Builder . add Client Shallow Commit (  Object Id . from String ( line . substring ( 8 )  )  )  ;          continue ;      }     if  ( transfer Config . is Allow Filter (  )  && line . starts With ( OPTION_FILTER + "" "" )  )  {         //$NON-NLS-1$          String arg = line . substring ( OPTION_FILTER . length (  )  + 1 )  ;          if  ( filter Received )  {             throw new  Pack Protocol Exception ( J Git Text . get (  )  . too Many Filters )  ;          }         filter Received = true ;          req Builder . set Filter Spec (  Filter Spec . from Filter Line ( arg )  )  ;          continue ;      }     if  ( !line . starts With ( ""want "" )  || line . length (  )  < 45 )  {         //$NON-NLS-1$         throw new  Pack Protocol Exception (  Message Format . format ( J Git Text . get (  )  . expected Got, ""want"", //$NON-NLS-1$         line )  )  ;      }     if  ( is First )  {         if  ( line . length (  )  > 45 )  {              First Want first Line =  First Want . from Line ( line )  ;              req Builder . add Client Capabilities ( first Line . get Capabilities (  )  )  ;              req Builder . set Agent ( first Line . get Agent (  )  )  ;              line = first Line . get Line (  )  ;          }     }     req Builder . add Want Id (  Object Id . from String ( line . substring ( 5 )  )  )  ;      is First = false ;  } return req Builder . build (  )  ; }"
2177,"public void get Contact With Most Calls (  ) { try {      String phone Num = // get a stream of call logs .      uqi . get Data (  Call . get Logs (  ) , purpose )  . filter ( // keep the items whose ""timestamp"" field is a time in recent 365 days .       Time Operators . recent ( ""timestamp"", 365 * 24 * 60 * 60 * 1000 L )  )  . group By ( // group by ""contact"" field .      ""contact"" )  . set Group Field ( ""#calls"", // create a new field ""#calls"" as the count of grouped items in each group      Statistic Operators . count (  )  )  . sort By ( // select the item with the max ""#calls"" value .      ""#calls"" )  . reverse (  )  . get First ( // get the value of ""contact"" field     ""contact"" )  ;       System . out . println ( "" The phone number with the most calls: "" + phone Num )  ;  } catch  ( PS Exception e )  {     e . print Stack Trace (  )  ;  }}"
2178,public static  File Store Attributes get File Store Attributes ( @ Non Null  Path dir ) { return  File Store Attributes . get ( dir )  ; }
2179,"public void finish (  )  throws IO Exception{ check Open (  )  ;  if  ( finished )  {     return ;  } if  ( entries . is Empty (  )  )  {     throw new  Zip Exception ( "" No entries"" )  ;  } if  ( current Entry != null )  {     close Entry (  )  ;  } int cdir Size = c Dir . size (  )  ;  //  Write  Central  Dir  End write Long ( c Dir, ENDSIG )  ;  //  Disk  Number write Short ( c Dir, 0 )  ;  //  Start  Disk write Short ( c Dir, 0 )  ;  //  Number of entries write Short ( c Dir, entries . size (  )  )  ;  //  Number of entries write Short ( c Dir, entries . size (  )  )  ;  //  Size of central dir write Long ( c Dir, cdir Size )  ;  //  Offset of central dir write Long ( c Dir, offset + padding )  ;  write Short ( c Dir, comment Bytes . length )  ;  if  ( comment Bytes . length > 0 )  {     c Dir . write ( comment Bytes )  ;  } //  Write the central directory .  c Dir . write To ( out )  ;  c Dir = null ;  finished = true ; }"
2180,public static void main (  String [  ]  args )  throws  Throwable{  Loader cl = new  Loader (  )  ;  cl . run ( args )  ; }
2181,"public void delete Package (  String package Name ) { synchronized  ( lock )  {     deleted Packages . add ( package Name )  ;      package Infos . remove ( package Name )  ;      map For Package ( activity Filters, package Name )  . clear (  )  ;      map For Package ( service Filters, package Name )  . clear (  )  ;      map For Package ( provider Filters, package Name )  . clear (  )  ;      map For Package ( receiver Filters, package Name )  . clear (  )  ;      module Infos . remove ( package Name )  ;  }}"
2182,"public void start ( @ Non Null  Context context, @ Non Null  Fragment fragment ) { fragment . start Activity For Result ( get Intent ( context ) , CROP_IMAGE_ACTIVITY_REQUEST_CODE )  ; }"
2183,public boolean is Visual Pressed (  ) { if  ( pressed )      return true ;  if  ( visual Pressed Time <= 0 )      return false ;  if  ( visual Pressed Time >  Time Utils . millis (  )  )      return true ;  visual Pressed Time = 0 ;  return false ; }
2184,"public synchronized void show Popup Menu ( int react Tag,  Readable Array items,  Callback success,  Callback error ) {  Ui Thread Util . assert On Ui Thread (  )  ;   View anchor = m Tags To Views . get ( react Tag )  ;  if  ( anchor == null )  {     error . invoke ( "" Can't display popup .   Could not find view with tag "" + react Tag )  ;      return ;  } m Popup Menu = new  Popup Menu ( get React Context For View ( react Tag ) , anchor )  ;   Menu menu = m Popup Menu . get Menu (  )  ;  for  ( int i = 0 ;  i < items . size (  )  ;  i++ )  {     menu . add (  Menu . NONE,  Menu . NONE, i, items . get String ( i )  )  ;  }  Popup Menu Callback Handler handler = new  Popup Menu Callback Handler ( success )  ;  m Popup Menu . set On Menu Item Click Listener ( handler )  ;  m Popup Menu . set On Dismiss Listener ( handler )  ;  m Popup Menu . show (  )  ; }"
2185,"public static  Bitmap zoom Bitmap (  Bitmap bitmap, int width, int height ) { int w = bitmap . get Width (  )  ;  int h = bitmap . get Height (  )  ;   Matrix matrix = new  Matrix (  )  ;  float scale Width =  (  ( float )  width / w )  ;  float scale Height =  (  ( float )  height / h )  ;  matrix . post Scale ( scale Width, scale Height )  ;   Bitmap newbmp =  Bitmap . create Bitmap ( bitmap, 0, 0, w, h, matrix, true )  ;  return newbmp ; }"
2186,public  Bubble Chart Data set Has Labels Only For Selected ( boolean has Labels Only For Selected ) { this . has Labels Only For Selected = has Labels Only For Selected ;  if  ( has Labels Only For Selected )  {     this . has Labels = false ;  } return this ; }
2187,public  Int Int Map get Kernings (  ) { return kernings ; }
2188,"public boolean clip Begin ( float x, float y, float width, float height ) { if  ( width <= 0 || height <= 0 )      return false ;   Stage stage = this . stage ;  if  ( stage == null )      return false ;   Rectangle table Bounds =  Rectangle . tmp ;  table Bounds . x = x ;  table Bounds . y = y ;  table Bounds . width = width ;  table Bounds . height = height ;   Rectangle scissor Bounds =  Pools . obtain (  Rectangle . class )  ;  stage . calculate Scissors ( table Bounds, scissor Bounds )  ;  if  (  Scissor Stack . push Scissors ( scissor Bounds )  )      return true ;   Pools . free ( scissor Bounds )  ;  return false ; }"
2189,"public static final int header Start ( byte [  ]  header Name, byte [  ]  b, int ptr ) { //  Start by advancing to just past a LF or buffer start if  ( ptr != 0 )  {     ptr = next LF ( b, ptr - 1 )  ;  } while  ( ptr < b . length -  ( header Name . length + 1 )  )  {     boolean found = true ;      for  ( byte element : header Name )  {         if  ( element != b [ ptr++ ]  )  {             found = false ;              break ;          }     }     if  ( found && b [ ptr++ ]  == ' ' )  {         return ptr ;      }     ptr = next LF ( b, ptr )  ;  } return -1 ; }"
2190,"public com . anychart . charts .  Sparkline left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
2191,public boolean destroy Action Mode If Can (  ) { if  ( m Action Mode != null )  {     m Action Mode . finish (  )  ;      return true ;  } return false ; }
2192,"public com . anychart . core . stock . scrollerseries .  Step Area bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
2193,"public com . anychart . scales .  Linear Color color Scale (  ) { return new com . anychart . scales .  Linear Color ( js Base + "" . color Scale (  ) "" )  ; }"
2194,public synchronized  List< Producer Context Callbacks> set Is Intermediate Result Expected No Callbacks ( boolean is Intermediate Result Expected ) { if  ( is Intermediate Result Expected == m Is Intermediate Result Expected )  {     return null ;  } m Is Intermediate Result Expected = is Intermediate Result Expected ;  return new  Array List<> ( m Callbacks )  ; }
2195,"public boolean handles ( @ Non Null  Class<?> from Class, @ Non Null  Class<?> to Class ) { return this . from Class . is Assignable From ( from Class )  && to Class . is Assignable From ( this . to Class )  ; }"
2196,"public com . anychart . core . annotations .  Fibonacci Fan bounds (  String x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
2197,"public void end Contact (  Contact contact ) { //  If the gumball goes in the pipe, remove it from the scene  (  Case 1/2 )  if  ( contact . get Fixture A (  )  . get Body (  )  . get User Data (  )  != null && ! ( contact . get Fixture A (  )  . get Body (  )  . get User Data (  )  instanceof  Gumball )  &&  ( contact . get Fixture A (  )  . get Body (  )  . get User Data (  )  . equals (  Tilt Game View . PIPE_BOTTOM )  || contact . get Fixture A (  )  . get Body (  )  . get User Data (  )  . equals (  Tilt Game View . PIPE_SIDES )  )  )  {     m World . m Bodies To Be Removed . add ( contact . get Fixture B (  )  . get Body (  )  )  ;      m Sound Pool Id . remove (  (  (  Gumball )  contact . get Fixture B (  )  . get Body (  )  . get User Data (  )  )  . m Sound Pool Id )  ;      on Ball In Pipe (  )  ;  } else if  ( contact . get Fixture B (  )  . get Body (  )  . get User Data (  )  != null && ! ( contact . get Fixture B (  )  . get Body (  )  . get User Data (  )  instanceof  Gumball )  &&  ( //  If the gumball goes in the pipe, remove it from the scene  (  Case 2/2 )  contact . get Fixture A (  )  . get Body (  )  . get User Data (  )  . equals (  Tilt Game View . PIPE_BOTTOM )  || contact . get Fixture A (  )  . get Body (  )  . get User Data (  )  . equals (  Tilt Game View . PIPE_SIDES )  )  )  {     m World . m Bodies To Be Removed . add ( contact . get Fixture A (  )  . get Body (  )  )  ;      m Sound Pool Id . remove (  (  (  Gumball )  contact . get Fixture A (  )  . get Body (  )  . get User Data (  )  )  . m Sound Pool Id )  ;      on Ball In Pipe (  )  ;  } else if  ( contact . get Fixture A (  )  . get Body (  )  . get User Data (  )  != null && ! ( contact . get Fixture A (  )  . get Body (  )  . get User Data (  )  instanceof  Gumball )  && contact . get Fixture A (  )  . get Body (  )  . get User Data (  )  . equals (  Tilt Game View . GAME_FLOOR )  )  {     //  If the gumball goes over the edge, remove it and respawn  (  Case 1/2 )       Gumball gumball =  (  (  Gumball )  contact . get Fixture B (  )  . get Body (  )  . get User Data (  )  )  ;      m World . m Bodies To Be Removed . add ( contact . get Fixture B (  )  . get Body (  )  )  ;      m Sound Pool Id . remove ( gumball . m Sound Pool Id )  ;      if  ( !m Santa Preferences . is Muted (  )  )  {          Sound Pool Utils . play Sound Effect ( m Sound Pool, m Sound Ball Fail )  ;      }     m World . get World (  )  . step ( 1 . 0f / 60 . 0f, 10, 10 )  ;      move Outlet (  ( m Current Gumball . m X Init Pos )  )  ;      m Count Level Ball Respawns++ ;  } else if  ( contact . get Fixture B (  )  . get Body (  )  . get User Data (  )  != null && ! ( contact . get Fixture B (  )  . get Body (  )  . get User Data (  )  instanceof  Gumball )  && contact . get Fixture B (  )  . get Body (  )  . get User Data (  )  . equals (  Tilt Game View . GAME_FLOOR )  )  {     //  If the gumball goes over the edge, remove it and respawn  (  Case 2/2 )       Gumball gumball =  (  (  Gumball )  contact . get Fixture B (  )  . get Body (  )  . get User Data (  )  )  ;      m World . m Bodies To Be Removed . add ( contact . get Fixture A (  )  . get Body (  )  )  ;      m Sound Pool Id . remove ( gumball . m Sound Pool Id )  ;      if  ( !m Santa Preferences . is Muted (  )  )  {          Sound Pool Utils . play Sound Effect ( m Sound Pool, m Sound Ball Fail )  ;      }     m World . get World (  )  . step ( 1 . 0f / 60 . 0f, 10, 10 )  ;      move Outlet (  ( m Current Gumball . m X Init Pos )  )  ;      m Count Level Ball Respawns++ ;  }}"
2198,public static _ Fields find By Name ( java . lang .  String name ) { return by Name . get ( name )  ; }
2199,boolean needs Alloc Arrays (  ) { return table == null ; }
2200,public final  String name (  ) { return new  String ( to Hex Char Array (  )  )  ; }
2201,"Listenable Scheduled Future<?> schedule (  Runnable command,  Duration delay ) { return schedule ( command, to Nanos Saturated ( delay ) ,  Time Unit . NANOSECONDS )  ; }"
2202,"public void baseline Bar Position (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . baseline Bar Position (  )  ; "" )  ; }"
2203,public void set Min Value ( double min ) { m Min Value = min ; }
2204,"public static byte [  ]  to Byte Array (  File file )  throws IO Exception{  File Input Stream in = null ;  try {     in = new  File Input Stream ( file )  ;      return read File ( in, in . get Channel (  )  . size (  )  )  ;  } finally {     if  ( in != null )  {         in . close (  )  ;      } }}"
2205,protected I View Finder create View Finder View (  Context context ) {  View Finder View view Finder View = new  View Finder View ( context )  ;  view Finder View . set Border Color ( m Border Color )  ;  view Finder View . set Laser Color ( m Laser Color )  ;  view Finder View . set Laser Enabled ( m Is Laser Enabled )  ;  view Finder View . set Border Stroke Width ( m Border Width )  ;  view Finder View . set Border Line Length ( m Border Length )  ;  view Finder View . set Mask Color ( m Mask Color )  ;  view Finder View . set Border Corner Rounded ( m Rounded Corner )  ;  view Finder View . set Border Corner Radius ( m Corner Radius )  ;  view Finder View . set Square View Finder ( m Squared Finder )  ;  view Finder View . set View Finder Offset ( m View Finder Offset )  ;  return view Finder View ; }
2206,"public  Test Field Prop Null On Recycle Option View Model_ on Visibility Changed (  On Model Visibility Changed Listener< Test Field Prop Null On Recycle Option View Model_,  Test Field Prop Null On Recycle Option View> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
2207,"public boolean replace File Contents (  String path Relative To Workspace Root,  String target,  String replacement )  throws IO Exception{  String file Contents = get File Contents ( path Relative To Workspace Root )  ;   String new File Contents = file Contents . replace ( target, replacement )  ;  write Contents To Path ( new File Contents, path Relative To Workspace Root )  ;  return !new File Contents . equals ( file Contents )  ; }"
2208,"public void reset Config (  Readable Map config ) { throw new JS Application Caused Native Exception ( "" Animation config for "" + get Class (  )  . get Simple Name (  )  + "" cannot be reset"" )  ; }"
2209,public static _ Fields find By Name ( java . lang .  String name ) { return by Name . get ( name )  ; }
2210,"void log Dismiss (  In App Message message,  In App Messaging Dismiss Type dismiss Type ) { if  ( !is Test Campaign ( message )  )  {     //  If message is not a test message then log campaign metrics     firebase Installations . get Id (  )  . add On Success Listener (  id -> engagement Metrics Logger . log Event ( create Dismiss Entry ( message, id, dismiss Transform . get ( dismiss Type )  )  . to Byte Array (  )  )  )  ;      //  For dismiss log to analytics as well     log Event Async ( message,  Analytics Constants . ANALYTICS_DISMISS_EVENT, false )  ;  } //  No matter what, always trigger developer callbacks developer Listener Manager . message Dismissed ( message )  ; }"
2211,public  Builder add All (  Iterable< Long> values ) { if  ( values instanceof  Collection )  {     return add All (  (  Collection< Long> )  values )  ;  } for  (  Long value : values )  {     add ( value )  ;  } return this ; }
2212,"public  List<? extends  Event> remove All Writes (  ) { return this . persistence Manager . run In Transaction ( new  Callable< List<? extends  Event>> (  )  {     @ Override     public  List<? extends  Event> call (  )  throws  Exception {         persistence Manager . remove All User Writes (  )  ;           List< User Write Record> purged Writes = pending Write Tree . purge All Writes (  )  ;          if  ( purged Writes . is Empty (  )  )  {             return  Collections . empty List (  )  ;          } else {              Immutable Tree< Boolean> affected Tree = new  Immutable Tree< Boolean> ( true )  ;              return apply Operation To Sync Points ( new  Ack User Write (  Path . get Empty Path (  ) , affected Tree, /*revert=*/             true )  )  ;          }     } } )  ; }"
2213,public static int get Track Type ( @ Nullable  String mime Type ) { if  (  Text Utils . is Empty ( mime Type )  )  {     return C . TRACK_TYPE_UNKNOWN ;  } else if  ( is Audio ( mime Type )  )  {     return C . TRACK_TYPE_AUDIO ;  } else if  ( is Video ( mime Type )  )  {     return C . TRACK_TYPE_VIDEO ;  } else if  ( is Text ( mime Type )  || APPLICATION_CEA608 . equals ( mime Type )  || APPLICATION_CEA708 . equals ( mime Type )  || APPLICATION_MP4 CEA608 . equals ( mime Type )  || APPLICATION_SUBRIP . equals ( mime Type )  || APPLICATION_TTML . equals ( mime Type )  || APPLICATION_TX3 G . equals ( mime Type )  || APPLICATION_MP4 VTT . equals ( mime Type )  || APPLICATION_RAWCC . equals ( mime Type )  || APPLICATION_VOBSUB . equals ( mime Type )  || APPLICATION_PGS . equals ( mime Type )  || APPLICATION_DVBSUBS . equals ( mime Type )  )  {     return C . TRACK_TYPE_TEXT ;  } else if  ( APPLICATION_ID3 . equals ( mime Type )  || APPLICATION_EMSG . equals ( mime Type )  || APPLICATION_SCTE35 . equals ( mime Type )  )  {     return C . TRACK_TYPE_METADATA ;  } else if  ( APPLICATION_CAMERA_MOTION . equals ( mime Type )  )  {     return C . TRACK_TYPE_CAMERA_MOTION ;  } else {     return get Track Type For Custom Mime Type ( mime Type )  ;  }}
2214,public void clear Standard Values (  ) { m Standard Values . clear (  )  ;  on Data Changed (  )  ; }
2215,public int get Span Count (  ) {  Recycler View .  Layout Manager layout Manager = get Layout Manager (  )  ;  if  ( layout Manager instanceof  Grid Layout Manager )  {     return  (  (  Grid Layout Manager )  layout Manager )  . get Span Count (  )  ;  } else if  ( layout Manager instanceof  Staggered Grid Layout Manager )  {     return  (  (  Staggered Grid Layout Manager )  layout Manager )  . get Span Count (  )  ;  } return 1 ; }
2216,"public static void install Apk (  Context context,  File file ) {  Intent intent = new  Intent (  )  ;  intent . set Action ( ""android . intent . action . VIEW"" )  ;  intent . add Category ( ""android . intent . category . DEFAULT"" )  ;  intent . set Type ( ""application/vnd . android . package-archive"" )  ;  intent . set Data (  Uri . from File ( file )  )  ;  intent . set Data And Type (  Uri . from File ( file ) , ""application/vnd . android . package-archive"" )  ;  intent . set Flags (  Intent . FLAG_ACTIVITY_NEW_TASK )  ;  context . start Activity ( intent )  ; }"
2217,"public com . anychart . core . lineargauge .  Scale Bar stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
2218,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
2219,"public com . anychart . core . resource .  Grid even Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . even Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
2220,"public static double [  ]  minmax (  List< Double> values ) { if  ( values . size (  )  == 0 )  {     return new double [ 2 ]  ;  } double min = values . get ( 0 )  ;  double max = min ;  int length = values . size (  )  ;  for  ( int i = 1 ;  i < length ;  i++ )  {     double value = values . get ( i )  ;      min =  Math . min ( min, value )  ;      max =  Math . max ( max, value )  ;  } return new double [  ]  { min, max } ; }"
2221,"public  Object call (  Context context,  List args )  throws  Function Call Exception{ if  ( args . size (  )  == 0 )  {     return evaluate ( context . get Node Set (  ) , context . get Navigator (  )  )  ;  } if  ( args . size (  )  == 1 )  {     return evaluate ( args, context . get Navigator (  )  )  ;  } throw new  Function Call Exception ( ""namespace-uri (  )  requires zero or one argument . "" )  ; }"
2222,"public boolean checked Perform Click (  ) { if  ( !real View . is Shown (  )  )  {     throw new  Runtime Exception ( "" View is not visible and cannot be clicked"" )  ;  } if  ( !real View . is Enabled (  )  )  {     throw new  Runtime Exception ( "" View is not enabled and cannot be clicked"" )  ;  } boolean res = real View . perform Click (  )  ;  shadow Main Looper (  )  . idle If Paused (  )  ;  return res ; }"
2223,public  Image Request Builder set Auto Rotate Enabled ( boolean enabled ) { if  ( enabled )  {     return set Rotation Options (  Rotation Options . auto Rotate (  )  )  ;  } else {     return set Rotation Options (  Rotation Options . disable Rotation (  )  )  ;  }}
2224,public void set Smooth Scrolling Enabled ( boolean smooth Scrolling Enabled ) { m Smooth Scrolling Enabled = smooth Scrolling Enabled ; }
2225,"private void set Right Adapter (  ) {  Animation Adapter anim Card Array Adapter = new  Swing Right In Animation Adapter ( m Card Array Adapter )  ;  anim Card Array Adapter . set Abs List View ( m List View )  ;  if  ( m List View != null )  {     m List View . set External Adapter ( anim Card Array Adapter, m Card Array Adapter )  ;  }}"
2226,public final  Object Reachability Checker create Object Reachability Checker (  )  throws IO Exception{ return reader . create Object Reachability Checker ( this )  ; }
2227,"private void record Step Info (  String step Info ) { _log Info . append ( step Info + ""\n"" )  ;  publish Progress ( step Info + ""\n"" )  ; }"
2228,public void add React Instance Event Listener (  React Instance Event Listener listener ) { m React Instance Event Listeners . add ( listener )  ; }
2229,"public com . anychart . core . ui .  Title title (  ) { return new com . anychart . core . ui .  Title ( js Base + "" . title (  ) "" )  ; }"
2230,"public  Trust Source add (  String trusted Pem Encoded C As ) { if  ( trusted Pem Encoded C As == null )  {     throw new  Illegal Argument Exception ( ""PEM-encoded trusted CA  String cannot be null"" )  ;  } X509 Certificate [  ]  trusted Certificates =  Trust Util . read X509 Certificates From Pem ( trusted Pem Encoded C As )  ;  return add ( trusted Certificates )  ; }"
2231,public void enabled (  Decoder Counters decoder Counters ) { if  ( listener != null )  {     handler . post (  (  )  -> listener . on Video Enabled ( decoder Counters )  )  ;  }}
2232,"private void do Shader ( PDF Object shader Obj )  throws IO Exception{// TODO  [ F He ] : shader//        PDF Shader shader = PDF Shader . get Shader ( shader Obj, resources )  ; ////        cmds . add Push (  )  ; ////         Rect F bbox = shader . get B Box (  )  ; //        if  ( bbox != null )  {//            cmds . add Fill Paint ( shader . get Paint (  )  )  ; //             Path tmp = new  Path (  )  ; //            tmp . add Rect ( bbox,  Direction . CW )  ; //            cmds . add Path ( tmp, PDF Shape Cmd . FILL )  ; //        }////        cmds . add Pop (  )  ; }"
2233,"private  Attribute synthetic (  Direct Class File cf, int offset, int length,  Parse Observer observer ) { if  ( length != 0 )  {     return throw Bad Length ( 0 )  ;  } return new  Att Synthetic (  )  ; }"
2234,"public com . anychart . core . cartesian . series .  Bar3d hover (  Number index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hover ( %s )  ; "", index )  )  ;  return this ; }"
2235,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
2236,"public com . anychart . charts .  Stock grouping ( com . anychart . core . stock . grouping .  Level settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . grouping ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
2237,public void copy To (  Byte Buffer b ) { b . put ( to Hex Byte Array (  )  )  ; }
2238,public void reset Select (  ) { m Current Selected Index = NO_POSITION ;  if  ( m Select Animator != null )  {     m Select Animator . cancel (  )  ;      m Select Animator = null ;  }}
2239,"public boolean add All ( int location, @ Suppress Warnings ( "" Nullable Problems"" )  java . util .  Collection<? extends E> collection ) { throw new  Unsupported Operation Exception ( NOT_SUPPORTED_MESSAGE )  ; }"
2240,"public void on Error (  App Call app Call,  Facebook Exception error ) { if  ( app Callback != null )  {     app Callback . on Error ( error )  ;  }}"
2241,"public void start For Result ( I Support Fragment to Fragment, int request Code ) { m Transaction Delegate . dispatch Start Transaction ( m Fragment . get Fragment Manager (  ) , m Support F, to Fragment, request Code, I Support Fragment . STANDARD,  Transaction Delegate . TYPE_ADD_RESULT )  ; }"
2242,public  String get Service Name (  ) { return os Mongo Client . get Service Name (  )  ; }
2243,public  Key Manager Factory Factory Bean get Key Manager Factory (  ) { if  ( key Manager Factory == null )  {     return new  Key Manager Factory Factory Bean (  )  ;  } return key Manager Factory ; }
2244,Dependency Stack get Dependency Stack (  ) { return  Dependency Stack . root (  )  ; }
2245,"public void set Source Image (  Pix pixs ) { native Set Source Image ( m Native, pixs . get Native Pix (  )  )  ; }"
2246,"public static JSON Array get JSON Array ( @ Non Null final  String key, @ Nullable final JSON Array default Value ) { return get JSON Array ( key, default Value, get Default Cache Disk Utils (  )  )  ; }"
2247,"public com . anychart . charts .  Waterfall interactivity ( com . anychart . enums .  Hover Mode settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . interactivity ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
2248,"public com . anychart . core . gantt . elements .  Progress Element normal (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . normal ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2249,"public  Load Builder< Builders .  Any . B> build (  Fragment fragment ) { return new  Ion Request Builder ( new  Context Reference .  Fragment Context Reference ( fragment ) , this )  ; }"
2250,public final  String region String (  ) { return unpack Region (  )  ; }
2251,"public com . anychart . core . utils .  Ordinal Zoom x Zoom (  ) { return new com . anychart . core . utils .  Ordinal Zoom ( js Base + "" . x Zoom (  ) "" )  ; }"
2252,public int get Last Smooth Scroll By Distance (  ) { return last Smooth Scroll By Distance ; }
2253,public  Matrix get Matrix (  ) { return m Matrix ; }
2254,public final  Ordered contains At Least Elements In (  Object [  ]  expected ) { return contains At Least Elements In ( as List ( expected )  )  ; }
2255,public  List< String> get Annotations (  ) { return application Identifiers ; }
2256,"public com . anychart . charts .  Scatter select Marquee Fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
2257,"static long compress (  Project Filesystem project Filesystem,  Collection< Path> paths To Include In Archive,  Path out )  throws IO Exception{ long full Size = 0 L ;  try  (  Output Stream o = new  Buffered Output Stream (  Files . new Output Stream ( out )  )  ;       Output Stream z = new  Zstd Compressor Output Stream ( o )  ;       Tar Archive Output Stream archive = new  Tar Archive Output Stream ( z )  )  {     archive . set Long File Mode (  Tar Archive Output Stream . LONGFILE_POSIX )  ;      for  (  Path path : paths To Include In Archive )  {         boolean is Regular File = !project Filesystem . is Directory ( path )  ;          //  Add a file entry .           Tar Archive Entry e = new  Tar Archive Entry ( path . to String (  )  +  ( is Regular File ? """" : ""/"" )  )  ;          int mode =  ( int )  project Filesystem . get Posix File Mode ( path )  ;          //  If permissions don't allow for owner to r or w, update to u+=rw and g+=r         e . set Mode (  ( mode & 384 )  == 0 ?  ( mode | 416 )  : mode )  ;          e . set Mod Time (  ( long )   Object File Common Modification Date . COMMON_MODIFICATION_TIME_STAMP * 1000 )  ;          if  ( is Regular File )  {             long path Size = project Filesystem . get File Size ( path )  ;              e . set Size ( path Size )  ;              full Size += path Size ;              archive . put Archive Entry ( e )  ;              try  (  Input Stream input = project Filesystem . new File Input Stream ( path )  )  {                  Byte Streams . copy ( input, archive )  ;              }         } else {             archive . put Archive Entry ( e )  ;          }         archive . close Archive Entry (  )  ;      }     archive . finish (  )  ;  } return full Size ; }"
2258,"private  String get File Name From Url (  String image Url ) { //we could generate an unique MD5/SHA-1 here  String hash =  String . value Of ( image Url . hash Code (  )  )  ;  if  ( hash . starts With ( ""-"" )  )  {     hash = hash . substring ( 1 )  ;  } return BASE_IMAGE_NAME_CACHED + hash ; }"
2259,public void set Initiate On Touch ( boolean initiate On Touch ) { m Initiate On Touch = initiate On Touch ; }
2260,"public static  Method find Method (  Object self,  String name,  String desc ) {  Method m = find Method2 ( self . get Class (  ) , name, desc )  ;  if  ( m == null )      error ( self . get Class (  ) , name, desc )  ;  return m ; }"
2261,"public void add Putfield (  Ct Class c,  String name,  String desc ) { add Putfield0 ( c, null, name, desc )  ; }"
2262,public int get Fieldref Name And Type ( int index ) {  Fieldref Info finfo =  (  Fieldref Info )  get Item ( index )  ;  return finfo . name And Type Index ; }
2263,"public void load Error (  Data Spec data Spec,  Uri uri,  Map< String,  List< String>> response Headers, int data Type, long elapsed Realtime Ms, long load Duration Ms, long bytes Loaded, IO Exception error, boolean was Canceled ) { load Error ( data Spec, uri, response Headers, data Type, C . TRACK_TYPE_UNKNOWN, null, C . SELECTION_REASON_UNKNOWN, null, C . TIME_UNSET, C . TIME_UNSET, elapsed Realtime Ms, load Duration Ms, bytes Loaded, error, was Canceled )  ; }"
2264,"public com . anychart . charts .  Stock padding (  String value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
2265,"private static  String capitalize ( @ Nullable  String s ) { if  ( s == null || s . length (  )  == 0 )  {     return """" ;  } char first = s . char At ( 0 )  ;  if  (  Character . is Upper Case ( first )  )  {     return s ;  } else {     return  Character . to Upper Case ( first )  + s . substring ( 1 )  ;  }}"
2266,"public static T replace (  Immutable Map< String,  Macro Replacer<T>> replacers,  String blob, boolean resolve Escaping,  Macro Combiner<T> combiner )  throws  Macro Exception{ //  Iterate over all macros found in the string, expanding each found macro .  int last End = 0 ;   Macro Finder Automaton matcher = new  Macro Finder Automaton ( blob )  ;  while  ( matcher . has Next (  )  )  {      Macro Match Result match Result = matcher . next (  )  ;      //  Add everything from the original string since the last match to this one .      combiner . add String ( blob . substring ( last End, match Result . get Start Index (  )  )  )  ;      //  If the macro is escaped, add the macro text  ( but omit the escaping backslash )      if  ( match Result . is Escaped (  )  )  {         combiner . add String ( blob . substring ( match Result . get Start Index (  )  +  ( resolve Escaping ? 1 : 0 ) , match Result . get End Index (  )  )  )  ;      } else {         //  Call the relevant expander and add the expanded value to the string .           Macro Replacer<T> replacer = replacers . get ( match Result . get Macro Type (  )  )  ;          if  ( replacer == null )  {             throw new  Macro Exception (  String . format ( ""expanding %s: no such macro \""%s\"""", blob . substring ( match Result . get Start Index (  ) , match Result . get End Index (  )  ) , match Result . get Macro Type (  )  )  )  ;          }         try {             combiner . add ( replacer . replace ( match Result )  )  ;          } catch  (  Macro Exception e )  {             throw new  Macro Exception (  String . format ( ""expanding %s: %s"", blob . substring ( match Result . get Start Index (  ) , match Result . get End Index (  )  ) , e . get Message (  )  ) , e )  ;          }     }     last End = match Result . get End Index (  )  ;  } //  Append the remaining part of the original string after the last match .  combiner . add String ( blob . substring ( last End )  )  ;  return combiner . build (  )  ; }"
2267,"public com . anychart . core .  Series Base enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
2268,public boolean on Fling (  ) { return is Exit Detected (  )  ; }
2269,"public final void set Address ( int address ) { if  ( address < 0 )  {     throw new  Illegal Argument Exception ( ""address < 0"" )  ;  } this . address = address ; }"
2270,public void disable Secure Proxy (  ) { http Client . get SSL Socket Middleware (  )  . disable Proxy (  )  ; }
2271,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
2272,public final int get Access Flags (  ) { return access Flags ; }
2273,public synchronized boolean contains ( K key ) { return m Cached Entries . contains ( key )  ; }
2274,"private void write Plurals (  Data Output Stream output Stream )  throws IO Exception{ output Stream . write Int ( plurals . size (  )  )  ;  if  ( plurals . is Empty (  )  )  {     return ;  } int previous Resource Id = plurals . first Key (  )  ;  output Stream . write Int ( previous Resource Id )  ;  try  (  Byte Array Output Stream data Stream = new  Byte Array Output Stream (  )  )  {     for  (  Map .  Entry< Integer,  Enum Map< Gender,  Immutable Map< String,  String>>> entry : plurals . entry Set (  )  )  {         write Short ( output Stream, entry . get Key (  )  - previous Resource Id )  ;           Enum Map< Gender,  Immutable Map< String,  String>> gender Map = entry . get Value (  )  ;          output Stream . write Byte ( gender Map . size (  )  )  ;          for  (  Map .  Entry< Gender,  Immutable Map< String,  String>> gender : gender Map . entry Set (  )  )  {             output Stream . write Byte ( gender . get Key (  )  . ordinal (  )  )  ;               Immutable Map< String,  String> category Map = gender . get Value (  )  ;              output Stream . write Byte ( category Map . size (  )  )  ;              for  (  Map .  Entry< String,  String> cat : category Map . entry Set (  )  )  {                 output Stream . write Byte (  Objects . require Non Null ( PLURAL_CATEGORY_MAP . get ( cat . get Key (  )  )  )  . byte Value (  )  )  ;                  byte [  ]  plural Value = get Unescaped String Bytes ( cat . get Value (  )  )  ;                  write Short ( output Stream, plural Value . length )  ;                  data Stream . write ( plural Value )  ;              }         }         previous Resource Id = entry . get Key (  )  ;      }     output Stream . write ( data Stream . to Byte Array (  )  )  ;  }}"
2275,int joiner With String Delimiter ( int reps ) { int dummy = 0 ;  for  ( int i = 0 ;  i < reps ;  i++ )  {     dummy ^= JOINER_ON_STRING . join ( components )  . length (  )  ;  } return dummy ; }
2276,public  Optional< String> get Min Sdk Version (  ) {  Ordering< String> by Integer Value =  Ordering . natural (  )  . on Result Of (  Integer::value Of )  ;  return get Min Sdk Versions (  )  . stream (  )  . filter (  Ij Module Android Facet::is Integer )  . min ( by Integer Value )  ; }
2277,"private void log (  String message ) { if  ( ENABLE_DEBUG )  {      Log . v ( TAG, message )  ;  }}"
2278,"public com . anychart . core . cartesian . series .  Line3d markers (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2279,public final int get Device Ringer Mode (  ) { int ringer Mode =  Ringer Mode . NORMAL ;   Audio Manager audio Manager =  (  Audio Manager )  context . get System Service (  Context . AUDIO_SERVICE )  ;  if  ( audio Manager != null )  {     switch ( audio Manager . get Ringer Mode (  )  )  {         case RINGER_MODE_NORMAL:             ringer Mode =  Ringer Mode . NORMAL ;              break ;          case RINGER_MODE_SILENT:             ringer Mode =  Ringer Mode . SILENT ;              break ;          case RINGER_MODE_VIBRATE:             ringer Mode =  Ringer Mode . VIBRATE ;              break ;          default:             //do nothing             break ;      } } return ringer Mode ; }
2280,public void set Card List View (  Card List View card List View ) { this . m Card List View = card List View ; }
2281,"public void process (  Bitmap dest Bitmap,  Bitmap source Bitmap ) { internal Copy Bitmap ( dest Bitmap, source Bitmap )  ;  process ( dest Bitmap )  ; }"
2282,public  Path get Path (  ) { return path ; }
2283,"private int read Sdk Int (  ) {  Properties properties = new  Properties (  )  ;  try  (  Input Stream input Stream = jar File . get Input Stream ( jar File . get Jar Entry ( ""build . prop"" )  )  )  {     properties . load ( input Stream )  ;  } catch  ( IO Exception e )  {     throw new  Runtime Exception ( ""failed to read build . prop from "" + path )  ;  } int sdk Int =  Integer . parse Int ( properties . get Property ( ""ro . build . version . sdk"" )  )  ;   String codename = properties . get Property ( ""ro . build . version . codename"" )  ;  if  ( !""REL"" . equals ( codename )  )  {     sdk Int = 10000 ;  } return sdk Int ; }"
2284,"static int decode Digit (  Bit Array row, int [  ]  counters, int row Offset, int [  ]  [  ]  patterns )  throws  Not Found Exception{ record Pattern ( row, row Offset, counters )  ;  // worst variance we'll accept float best Variance = MAX_AVG_VARIANCE ;  int best Match = -1 ;  int max = patterns . length ;  for  ( int i = 0 ;  i < max ;  i++ )  {     int [  ]  pattern = patterns [ i ]  ;      float variance = pattern Match Variance ( counters, pattern, MAX_INDIVIDUAL_VARIANCE )  ;      if  ( variance < best Variance )  {         best Variance = variance ;          best Match = i ;      } } if  ( best Match >= 0 )  {     return best Match ;  } else {     throw  Not Found Exception . get Not Found Instance (  )  ;  }}"
2285,public float get Damping Ratio (  ) { return  ( float )  m Damping Ratio ; }
2286,"public void read Byte Array ( byte [  ]  arr, int offset )  throws  Invalid Data Type Exception{ if  ( offset >= arr . length )  {     throw new  Invalid Data Type Exception ( "" Unable to find null terminated string"" )  ;  } int buffer Size ;  logger . finer ( "" Reading from array starting from offset:"" + offset )  ;  int size ;  // Get the  Specified  Decoder  String char Set Name = get Text Encoding Char Set (  )  ;   Charset Decoder decoder =  Charset . for Name ( char Set Name )  . new Decoder (  )  ;  // We only want to load up to null terminator, data after this is part of different //field and it may not be possible to decode it so do the check before we do //do the decoding,encoding dependent .   Byte Buffer buffer =  Byte Buffer . wrap ( arr, offset, arr . length - offset )  ;  int end Position = 0 ;  // Latin-1 and UTF-8 strings are terminated by a single-byte null, //while UTF-16 and its variants need two bytes for the null terminator .  final boolean null Is One Byte =  ( char Set Name . equals (  Text Encoding . CHARSET_ISO_8859_1 )  || char Set Name . equals (  Text Encoding . CHARSET_UTF_8 )  )  ;  boolean is Null Terminator Found = false ;  while  ( buffer . has Remaining (  )  )  {     byte next Byte = buffer . get (  )  ;      if  ( next Byte == 0x00 )  {         if  ( null Is One Byte )  {             buffer . mark (  )  ;              buffer . reset (  )  ;              end Position = buffer . position (  )  - 1 ;              logger . finest ( "" Null terminator found starting at:"" + end Position )  ;              is Null Terminator Found = true ;              break ;          } else {             //  Looking for two-byte null             if  ( buffer . has Remaining (  )  )  {                 next Byte = buffer . get (  )  ;                  if  ( next Byte == 0x00 )  {                     buffer . mark (  )  ;                      buffer . reset (  )  ;                      end Position = buffer . position (  )  - 2 ;                      logger . finest ( ""UTF16: Null terminator found starting  at:"" + end Position )  ;                      is Null Terminator Found = true ;                      break ;                  } else {                 // Nothing to do, we have checked 2nd value of pair it was not a null terminator                 //so will just start looking again in next invocation of loop                 }             } else {                 buffer . mark (  )  ;                  buffer . reset (  )  ;                  end Position = buffer . position (  )  - 1 ;                  logger . warning ( ""UTF16: Should be two null terminator marks but only found one starting at:"" + end Position )  ;                  is Null Terminator Found = true ;                  break ;              }         }     } else {         // If UTF16, we should only be looking on 2 byte boundaries         if  ( !null Is One Byte )  {             if  ( buffer . has Remaining (  )  )  {                 buffer . get (  )  ;              }         }     } } if  ( !is Null Terminator Found )  {     throw new  Invalid Data Type Exception ( "" Unable to find null terminated string"" )  ;  } logger . finest ( "" End  Position is:"" + end Position + "" Offset:"" + offset )  ;  // Set  Size so offset is ready for next field  ( includes the null terminator )  size = end Position - offset ;  size++ ;  if  ( !null Is One Byte )  {     size++ ;  } set Size ( size )  ;  // Decode buffer if runs into problems should throw exception which we //catch and then set value to empty string .   (  We don't read the null terminator //because we dont want to display this )  buffer Size = end Position - offset ;  logger . finest ( "" Text size is:"" + buffer Size )  ;  if  ( buffer Size == 0 )  {     value = """" ;  } else {     // Decode sliced in Buffer      Byte Buffer in Buffer =  Byte Buffer . wrap ( arr, offset, buffer Size )  . slice (  )  ;       Char Buffer out Buffer =  Char Buffer . allocate ( buffer Size )  ;      decoder . reset (  )  ;       Coder Result coder Result = decoder . decode ( in Buffer, out Buffer, true )  ;      if  ( coder Result . is Error (  )  )  {         logger . warning ( "" Problem decoding text encoded null terminated string:"" + coder Result . to String (  )  )  ;      }     decoder . flush ( out Buffer )  ;      out Buffer . flip (  )  ;      value = out Buffer . to String (  )  ;  } // Set  Size so offset is ready for next field  ( includes the null terminator )  logger . config ( "" Read  Null Terminated String:"" + value + "" size inc terminator:"" + size )  ; }"
2287,public static  Response<T> error (  Volley Error error ) { return new  Response<> ( error )  ; }
2288,"private static  Node get First Child By Name Attr Value (  Node node,  String child Name,  String attr,  String value ) {  Node List child Nodes = node . get Child Nodes (  )  ;  for  ( int i = 0 ;  i < child Nodes . get Length (  )  ;  i++ )  {     if  ( child Nodes . item ( i )  . get Node Name (  )  . equals ( child Name )  )  {          Named Node Map attributes = child Nodes . item ( i )  . get Attributes (  )  ;           Node attribute = attributes . get Named Item ( attr )  ;          if  ( attribute . get Node Value (  )  . equals ( value )  )              return child Nodes . item ( i )  ;      } }  Node new Node = node . get Owner Document (  )  . create Element ( child Name )  ;   Named Node Map attributes = new Node . get Attributes (  )  ;   Attr node Attr = node . get Owner Document (  )  . create Attribute ( attr )  ;  node Attr . set Node Value ( value )  ;  attributes . set Named Item ( node Attr )  ;  if  ( child Nodes . item ( 0 )  != null )  {     return node . insert Before ( new Node, child Nodes . item ( 0 )  )  ;  } else {     return node . append Child ( new Node )  ;  }}"
2289,"public com . anychart . charts .  Pareto y Minor Grid (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Minor Grid ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
2290,public boolean is External Usage (  ) { return m External Usage ; }
2291,"public static  Display Mode [  ]  get Display Modes (  ) {  Lwjgl3 Application . initialize Glfw (  )  ;   Buffer video Modes = GLFW . glfw Get Video Modes ( GLFW . glfw Get Primary Monitor (  )  )  ;   Display Mode [  ]  result = new  Display Mode [ video Modes . limit (  )  ]  ;  for  ( int i = 0 ;  i < result . length ;  i++ )  {     GLFW Vid Mode video Mode = video Modes . get ( i )  ;      result [ i ]  = new  Lwjgl3 Graphics .  Lwjgl3 Display Mode ( GLFW . glfw Get Primary Monitor (  ) , video Mode . width (  ) , video Mode . height (  ) , video Mode . refresh Rate (  ) , video Mode . red Bits (  )  + video Mode . green Bits (  )  + video Mode . blue Bits (  )  )  ;  } return result ; }"
2292,public void toggle (  ) { toggle ( true )  ; }
2293,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_ALBUM ; }
2294,"public  Color mul ( float r, float g, float b, float a ) { this . r *= r ;  this . g *= g ;  this . b *= b ;  this . a *= a ;  return clamp (  )  ; }"
2295,"void execute (  String sql,  Object .  .  .  args ) { //  Note that unlike db . query and friends, exec SQL already takes  Object [  ]  bind Args so there's no // need to go through the bind dance below .  db . exec SQL ( sql, args )  ; }"
2296,public final void initiate Scan (  Collection< String> desired Barcode Formats ) { set Desired Barcode Formats ( desired Barcode Formats )  ;  initiate Scan (  )  ; }
2297,public java . lang .  String get Source Path (  ) { java . lang .  Object ref = source Path_ ;  if  ( ! ( ref instanceof java . lang .  String )  )  {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      source Path_ = s ;      return s ;  } else {     return  ( java . lang .  String )  ref ;  }}
2298,"public boolean copy ( long offset, int cnt )  throws IO Exception{ if  ( cnt == 0 )      return true ;  int p = 0 ;  // while  ( MAX_V2_COPY < cnt )  {     p = encode Copy ( p, offset, MAX_V2_COPY )  ;      offset += MAX_V2_COPY ;      cnt -= MAX_V2_COPY ;      if  ( buf . length < p + MAX_COPY_CMD_SIZE )  {         if  ( limit != 0 && limit < size + p )              return false ;          out . write ( buf, 0, p )  ;          size += p ;          p = 0 ;      } } p = encode Copy ( p, offset, cnt )  ;  if  ( limit != 0 && limit < size + p )      return false ;  out . write ( buf, 0, p )  ;  size += p ;  return true ; }"
2299,Provider<T> get Delegate (  ) { return check Not Null ( delegate )  ; }
2300,public static  Assertion Error expect Failure (  Standard Subject Builder Callback assertion Callback ) {  Expect Failure expect Failure = new  Expect Failure (  )  ;  // safe since this instance doesn't leave this method expect Failure . enter Rule Context (  )  ;  assertion Callback . invoke Assertion ( expect Failure . when Testing (  )  )  ;  return expect Failure . get Failure (  )  ; }
2301,public int get New Line Count (  ) { return new Line Count ; }
2302,public  Issue Filter set Labels (  Collection< Label> labels ) { if  ( labels != null && !labels . is Empty (  )  )  {     if  ( this . labels == null )  {         this . labels = new  Array List<> (  )  ;      } else {         this . labels . clear (  )  ;      }     this . labels . add All ( labels )  ;  } else {     this . labels = null ;  } return this ; }
2303,"public void test Encode (  ) { assert Array Equals (  Rlp Encoder . encode (  Rlp String . create ( ""dog"" )  ) ,  ( new byte [  ]  {  ( byte )  0x83, 'd', 'o', 'g' } )  )  ;  assert Array Equals (  Rlp Encoder . encode ( new  Rlp List (  Rlp String . create ( ""cat"" ) ,  Rlp String . create ( ""dog"" )  )  ) ,  ( new byte [  ]  {  ( byte )  0xc8,  ( byte )  0x83, 'c', 'a', 't',  ( byte )  0x83, 'd', 'o', 'g' } )  )  ;  assert Array Equals (  Rlp Encoder . encode (  Rlp String . create ( """" )  ) ,  ( new byte [  ]  {  ( byte )  0x80 } )  )  ;  assert Array Equals (  Rlp Encoder . encode (  Rlp String . create ( new byte [  ]  {} )  ) ,  ( new byte [  ]  {  ( byte )  0x80 } )  )  ;  assert Array Equals (  Rlp Encoder . encode ( new  Rlp List (  )  ) ,  ( new byte [  ]  {  ( byte )  0xc0 } )  )  ;  assert Array Equals (  Rlp Encoder . encode (  Rlp String . create (  Big Integer . value Of ( 0x0f )  )  ) ,  ( new byte [  ]  {  ( byte )  0x0f } )  )  ;  assert Array Equals (  Rlp Encoder . encode (  Rlp String . create (  Big Integer . value Of ( 0x0400 )  )  ) ,  ( new byte [  ]  {  ( byte )  0x82,  ( byte )  0x04,  ( byte )  0x00 } )  )  ;  assert Array Equals (  Rlp Encoder . encode ( new  Rlp List ( new  Rlp List (  ) , new  Rlp List ( new  Rlp List (  )  ) , new  Rlp List ( new  Rlp List (  ) , new  Rlp List ( new  Rlp List (  )  )  )  )  ) ,  ( new byte [  ]  {  ( byte )  0xc7,  ( byte )  0xc0,  ( byte )  0xc1,  ( byte )  0xc0,  ( byte )  0xc3,  ( byte )  0xc0,  ( byte )  0xc1,  ( byte )  0xc0 } )  )  ;  assert Array Equals (  Rlp Encoder . encode (  Rlp String . create ( "" Lorem ipsum dolor sit amet, consectetur adipisicing elit"" )  ) ,  ( new byte [  ]  {  ( byte )  0xb8,  ( byte )  0x38, 'L', 'o', 'r', 'e', 'm', ' ', 'i', 'p', 's', 'u', 'm', ' ', 'd', 'o', 'l', 'o', 'r', ' ', 's', 'i', 't', ' ', 'a', 'm', 'e', 't', ',', ' ', 'c', 'o', 'n', 's', 'e', 'c', 't', 'e', 't', 'u', 'r', ' ', 'a', 'd', 'i', 'p', 'i', 's', 'i', 'c', 'i', 'n', 'g', ' ', 'e', 'l', 'i', 't' } )  )  ;  assert Array Equals (  Rlp Encoder . encode (  Rlp String . create (  Big Integer . ZERO )  ) ,  ( new byte [  ]  {  ( byte )  0x80 } )  )  ;  // https://github . com/paritytech/parity-common/blob/master/rlp/tests/tests . rs#L237 assert Array Equals (  Rlp Encoder . encode (  Rlp String . create ( new byte [  ]  { 0 } )  ) ,  ( new byte [  ]  {  ( byte )  0x00 } )  )  ;  assert Array Equals (  Rlp Encoder . encode ( new  Rlp List (  Rlp String . create ( ""zw"" ) , new  Rlp List (  Rlp String . create ( 4 )  ) ,  Rlp String . create ( 1 )  )  ) ,  ( new byte [  ]  {  ( byte )  0xc6,  ( byte )  0x82,  ( byte )  0x7a,  ( byte )  0x77,  ( byte )  0xc1,  ( byte )  0x04,  ( byte )  0x01 } )  )  ;  // 55 bytes .   See https://github . com/web3j/web3j/issues/519 byte [  ]  encode Me = new byte [ 55 ]  ;   Arrays . fill ( encode Me,  ( byte )  0 )  ;  byte [  ]  expected Encoding = new byte [ 56 ]  ;  expected Encoding [ 0 ]  =  ( byte )  0xb7 ;   System . arraycopy ( encode Me, 0, expected Encoding, 1, encode Me . length )  ;  assert Array Equals (  Rlp Encoder . encode (  Rlp String . create ( encode Me )  ) ,  ( expected Encoding )  )  ; }"
2304,"private int get EMUI Notification Width (  Context context, int width, int height ) { try {      Context system Ui = context . create Package Context (  Notification Compat . SYSTEM_UI_PKG,  Context . CONTEXT_IGNORE_SECURITY |  Context . CONTEXT_INCLUDE_CODE )  ;      int layout Id = get System Id ( system Ui, ""time_axis"", ""layout"" )  ;      if  ( layout Id != 0 )  {          View Group view Group = create View Group ( system Ui, layout Id )  ;          layout ( view Group, width, height )  ;          int lid = get System Id ( system Ui, ""content_view_group"", ""id"" )  ;          if  ( lid != 0 )  {              View child = view Group . find View By Id ( lid )  ;              return width - child . get Left (  )  - child . get Padding Left (  )  - child . get Padding Right (  )  ;          } else {             int count = view Group . get Child Count (  )  ;              for  ( int i = 0 ;  i < count ;  i++ )  {                  View child = view Group . get Child At ( i )  ;                  if  (  Linear Layout . class . is Instance ( child )  )  {                     //  (  Linear Layout ) child ;                      return width - child . get Left (  )  - child . get Padding Left (  )  - child . get Padding Right (  )  ;                  }             }         }     } } catch  (  Exception e )  { // ignore } return width ; }"
2305,"public com . anychart . core . annotations .  Fibonacci Arc min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
2306,"public void remove Accounts ( final  Context context ) { final  String method Name = "":remove Accounts"" ;  perform Async Call On Bound ( context, new  Callback< Broker Account Service Connection> (  )  {     @ Override     public void on Success (  Broker Account Service Connection result )  {         try {             result . get Broker Account Service Provider (  )  . remove Accounts (  )  ;          } catch  ( final  Remote Exception remote Exception )  {              Logger . e ( TAG + method Name, "" Encounter exception when removing accounts from broker"", remote Exception . get Message (  ) , null, remote Exception )  ;          }     }     @ Override     public void on Error (  Throwable throwable )  {          Logger . e ( TAG + method Name, "" Encounter exception when removing accounts from broker"", throwable . get Message (  ) , null, throwable )  ;      } }, null )  ; }"
2307,public void on Configuration Changed (  Configuration new Config ) {}
2308,"public com . anychart . core . annotations .  Andrews Pitchfork bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
2309,"public void letter Spacing (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . letter Spacing (  )  ; "" )  ; }"
2310,public final void set Color ( int color ) { if  ( this . color != color )  {     this . color = color ;      invalidate (  )  ;  }}
2311,"protected void send Ordered Broadcast As User (  Intent intent,  User Handle user Handle,  String receiver Permission,  Broadcast Receiver result Receiver,  Handler scheduler, int initial Code,  String initial Data,  Bundle initial Extras ) { get Shadow Instrumentation (  )  . send Ordered Broadcast As User ( intent, user Handle, receiver Permission, result Receiver, scheduler, initial Code, initial Data, initial Extras, real Context Impl )  ; }"
2312,public boolean should Prune Unkept Descendants (  Path path ) {  Boolean should Prune = this . prune Forest . leaf Most Value ( path )  ;  return should Prune != null && should Prune ; }
2313,"public void change Priority For Delayed Requests (  ) {  Recording Network Fetcher recording Network Fetcher = new  Recording Network Fetcher (  )  ;   Fake Clock clock = new  Fake Clock (  )  ;  final int delay Time = 100 ;  //  Hi-pri is LIFO,  Max hi-pri: 2, max low-pri: 1  Priority Network Fetcher< Fetch State> fetcher = new  Priority Network Fetcher<> ( recording Network Fetcher, false, 2, 0, true, 2, false, 0, delay Time, false, clock )  ;  // add a hi-pri, it will be fetched immediately .   Priority Fetch State< Fetch State> one = fetch ( fetcher, ""1"", callback, true )  ;  // simulate a network failure, the request should wait in the delayed queue .  get Only Element ( recording Network Fetcher . callbacks . get ( one . delegated State )  )  . on Failure ( new  Exception (  )  )  ;  //  Change priority of 'one' to low-pri  ( while it's waiting in the delayed queue )  .   (  (  Settable Producer Context )  one . get Context (  )  )  . set Priority ( LOW )  ;  // delay + 1 ms clock . increment By ( delay Time + 1 )  ;  // to trigger a dequeue operation  Priority Fetch State< Fetch State> two = fetch ( fetcher, ""2"", callback, true )  ;  assert That ( fetcher . get Delayed Qeueue (  )  )  . is Empty (  )  ;  assert That ( fetcher . get Low Pri Queue (  )  )  . contains Exactly ( one )  ;  assert That ( fetcher . get Hi Pri Queue (  )  )  . is Empty (  )  ;  assert That ( fetcher . get Currently Fetching (  )  )  . contains Exactly ( two )  ; }"
2314,"public boolean transition ( R current,  View Adapter adapter ) { final  View view = adapter . get View (  )  ;  if  ( view != null )  {     animator . animate ( adapter . get View (  )  )  ;  } return false ; }"
2315,"public void bottom (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . bottom (  )  ; "" )  ; }"
2316,"public com . anychart . charts .  Mekko line Marker (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Marker ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
2317,"public  Embedded Sample Stream select Embedded Track ( long position Us, int track Type ) { for  ( int i = 0 ;  i < embedded Sample Queues . length ;  i++ )  {     if  ( embedded Track Types [ i ]  == track Type )  {          Assertions . check State ( !embedded Tracks Selected [ i ]  )  ;          embedded Tracks Selected [ i ]  = true ;          embedded Sample Queues [ i ]  . rewind (  )  ;          embedded Sample Queues [ i ]  . advance To ( position Us, true, true )  ;          return new  Embedded Sample Stream ( this, embedded Sample Queues [ i ] , i )  ;      } } //  Should never happen .  throw new  Illegal State Exception (  )  ; }"
2318,"public com . anychart . core . stock .  Plot default Series Type (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . default Series Type ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
2319,"public static void run ( @ Non Null T [  ]  array, @ Non Null  Action<? super T> action ) { for  ( int i = 0, count = array . length ;  i < count ;  i++ )  {     action . apply ( array [ i ] , i )  ;  }}"
2320,"public  String get Phase Description (  ) { switch ( phase )  {     default:     case NORMAL_OPERATION:         return "" Normal  Operation"" ;      case KEY_DISTRIBUTION:         return "" Key  Distribution"" ;      case USING_NEW_KEYS:         return "" Using  New  Keys"" ;  }}"
2321,"public static char to Uint16 (  Object val ) { double d = to Number ( val )  ;  int i =  ( int )  d ;  if  ( i == d )  {     return  ( char )  i ;  } if  ( d != d || d ==  Double . POSITIVE_INFINITY || d ==  Double . NEGATIVE_INFINITY )  {     return 0 ;  } d =  ( d >= 0 )  ?  Math . floor ( d )  :  Math . ceil ( d )  ;  int int16 = 0x10000 ;  i =  ( int )   Math . IEE Eremainder ( d, int16 )  ;  return  ( char )  i ; }"
2322,public void clear (  ) { if  ( size == 0 )      return ;  final T [  ]  values = this . values ;  final int head = this . head ;  final int tail = this . tail ;  if  ( head < tail )  {     //  Continuous     for  ( int i = head ;  i < tail ;  i++ )  {         values [ i ]  = null ;      } } else {     //  Wrapped     for  ( int i = head ;  i < values . length ;  i++ )  {         values [ i ]  = null ;      }     for  ( int i = 0 ;  i < tail ;  i++ )  {         values [ i ]  = null ;      } } this . head = 0 ;  this . tail = 0 ;  this . size = 0 ; }
2323,public void set On Ripple Animation End Listener (  Keyboard Button Clicked Listener keyboard Button Clicked Listener ) { m Keyboard Button Clicked Listener = keyboard Button Clicked Listener ; }
2324,"public void has Binding With Key (  String qualifier,  String type ) { binding With Key ( qualifier, type )  ; }"
2325,"public com . anychart . charts .  Sunburst select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
2326,public  Builder add ( int value ) { ensure Room For ( 1 )  ;  array [ count ]  = value ;  count += 1 ;  return this ; }
2327,public void set Repeat Count ( int value ) { m Repeat Count = value ; }
2328,public static  Condition false Condition (  ) { return FALSE_CONDICATE ; }
2329,"public void update (  Byte Buffer header Data ) { // Read header data into byte array byte [  ]  b = new byte [ HEADER_LENGTH ]  ;  header Data . get ( b )  ;  // Keep reference to copy of  Raw Data data Buffer =  Byte Buffer . wrap ( b )  ;  // Calculate box size this . length =  Utils . get Int BE ( b, OFFSET_POS, OFFSET_LENGTH - 1 )  ;  // Calculate box id this . id =  Utils . get String ( b, IDENTIFIER_POS, IDENTIFIER_LENGTH, ""ISO-8859-1"" )  ;  logger . finest ( "" Mp4 Box Header id:"" + id + "":length:"" + length )  ;  if  ( id . equals ( ""\0\0\0\0"" )  )  {     throw new  Null Box Id Exception (  Error Message . MP4_UNABLE_TO_FIND_NEXT_ATOM_BECAUSE_IDENTIFIER_IS_INVALID . get Msg ( id )  )  ;  } if  ( length < HEADER_LENGTH )  {     throw new  Invalid Box Header Exception (  Error Message . MP4_UNABLE_TO_FIND_NEXT_ATOM_BECAUSE_IDENTIFIER_IS_INVALID . get Msg ( id, length )  )  ;  }}"
2330,"public void report Request Error ( long now Millis ) { report Request ( now Millis, false )  ; }"
2331,boolean is Beginln (  ) { return bol ; }
2332,public void remove Tree Model Listener (  Tree Model Listener l ) {}
2333,"public com . anychart . core . ui .  Markers Factory markers (  ) { return new com . anychart . core . ui .  Markers Factory ( js Base + "" . markers (  ) "" )  ; }"
2334,"public void update (  ) { LOGGER . info ( "" Update physics component of game"" )  ; }"
2335,"public void contains Any Of ( long first, long second, long .  .  .  rest ) { check (  )  . that ( actual List )  . contains Any Of ( first, second, box ( rest )  )  ; }"
2336,"public com . anychart . charts .  Waterfall x Grid (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Grid ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
2337,"public com . anychart . core . cartesian . series .  Continuous Range Base y Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
2338,"public static  Number Picker Dialog Fragment new Instance ( int reference, int theme Res Id,  Big Decimal min Number,  Big Decimal max Number,  Integer plus Minus Visibility,  Integer decimal Visibility,  String label Text,  Integer current Number Value,  Double current Decimal Value,  Integer current Number Sign ) { final  Number Picker Dialog Fragment frag = new  Number Picker Dialog Fragment (  )  ;   Bundle args = new  Bundle (  )  ;  args . put Int ( REFERENCE_KEY, reference )  ;  args . put Int ( THEME_RES_ID_KEY, theme Res Id )  ;  if  ( min Number != null )  {     args . put Serializable ( MIN_NUMBER_KEY, min Number )  ;  } if  ( max Number != null )  {     args . put Serializable ( MAX_NUMBER_KEY, max Number )  ;  } if  ( plus Minus Visibility != null )  {     args . put Int ( PLUS_MINUS_VISIBILITY_KEY, plus Minus Visibility )  ;  } if  ( decimal Visibility != null )  {     args . put Int ( DECIMAL_VISIBILITY_KEY, decimal Visibility )  ;  } if  ( label Text != null )  {     args . put String ( LABEL_TEXT_KEY, label Text )  ;  } if  ( current Number Value != null )  {     args . put Int ( CURRENT_NUMBER_KEY, current Number Value )  ;  } if  ( current Decimal Value != null )  {     args . put Double ( CURRENT_DECIMAL_KEY, current Decimal Value )  ;  } if  ( current Number Sign != null )  {     args . put Int ( CURRENT_SIGN_KEY, current Number Sign )  ;  } frag . set Arguments ( args )  ;  return frag ; }"
2339,"private  Task<T> wait For Task ( final  Task<T> task )  throws  Exception{ final long start Time =  System . current Time Millis (  )  ;   Thread thread = new  Thread ( new  Runnable (  )  {     @ Override     public void run (  )  {         while  ( !task . is Complete (  )  )  {             if  (  System . current Time Millis (  )  - start Time > TASK_TIMEOUT_MS )  {                 throw new  Runtime Exception ( "" Timed out waiting for task . "" )  ;              }             try {                  Thread . sleep ( 100 )  ;              } catch  (  Interrupted Exception e )  {                 fail ( "" Error waiting for task: "" + e . get Localized Message (  )  )  ;              }         }     } } )  ;  thread . run (  )  ;  thread . join (  )  ;  return task ; }"
2340,"public final  Vec2 mul ( float a ) { return new  Vec2 ( x * a, y * a )  ; }"
2341,"public com . anychart . core . annotations .  Fibonacci Retracement bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
2342,"public com . anychart . charts .  Waterfall padding (  Number value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
2343,"public com . anychart . charts .  Pareto max Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", width )  )  ;  return this ; }"
2344,"private synchronized  Producer< Closeable Reference< Closeable Image>> get Postprocessor Sequence (  Producer< Closeable Reference< Closeable Image>> input Producer ) {  Producer< Closeable Reference< Closeable Image>> result = m Postprocessor Sequences . get ( input Producer )  ;  if  ( result == null )  {      Postprocessor Producer postprocessor Producer = m Producer Factory . new Postprocessor Producer ( input Producer )  ;      result = m Producer Factory . new Postprocessor Bitmap Memory Cache Producer ( postprocessor Producer )  ;      m Postprocessor Sequences . put ( input Producer, result )  ;  } return result ; }"
2345,public boolean is Set ( _ Fields field ) { if  ( field == null )  {     throw new java . lang .  Illegal Argument Exception (  )  ;  } switch ( field )  {     case TYPE:         return is Set Type (  )  ;      case VALUE:         return is Set Value (  )  ;  } throw new java . lang .  Illegal State Exception (  )  ; }
2346,"public static boolean has Permission (  Activity activity,  String [  ]  permissions ) { for  (  String permission : permissions )  {     if  (  Context Compat . check Self Permission ( activity, permission )  !=  Package Manager . PERMISSION_GRANTED )  {         return false ;      } } return true ; }"
2347,public void reset Overlay (  View view ) { clear Overlay ( null )  ;  init Overlay (  )  ; }
2348,public static  Recursive File Matcher of (  Rel Path base Path ) { return new  Recursive File Matcher ( base Path )  ; }
2349,"public com . anychart . core . map . series .  Choropleth z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
2350,"public com . anychart . standalones .  Resource List bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
2351,public final void remove (  Rev Flag Set set ) { flags &= ~set . mask ; }
2352,"public com . anychart . core . stock . indicators . B Bands Width deviation (  Number deviation ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . deviation ( %s )  ; "", deviation )  )  ;  return this ; }"
2353,"private void drain And Update Codec Drm Session (  )  throws  Exo Playback Exception{ if  (  Util . SDK_INT < 23 )  {     //  The codec needs to be re-initialized to switch to the source DRM session .      drain And Reinitialize Codec (  )  ;      return ;  } if  ( codec Received Buffers )  {     codec Drain State = DRAIN_STATE_SIGNAL_END_OF_STREAM ;      codec Drain Action = DRAIN_ACTION_UPDATE_DRM_SESSION ;  } else {     //  Nothing has been queued to the decoder, so we can do the update immediately .      update Drm Session Or Reinitialize Codec V23 (  )  ;  }}"
2354,"public com . anychart . charts .  Mekko left (  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", wrap Quotes ( left )  )  )  ;  return this ; }"
2355,"private void test Manifest Key (  Source Path Rule Finder rule Finder,  Object field Value,  Immutable Map< Path,  Hash Code> hashes Before,  Immutable Map< Path,  Hash Code> hashes After,  Predicate< Source Path> covered Input Paths,  Immutable Set< Source Path> interesting Input Paths, boolean expect Same Keys,  Immutable Set< Source Path> expected Dep File Inputs After,  String failure Message )  throws  Exception{ test Manifest Key ( rule Finder, // same field value before and after field Value, // same field value before and after field Value, hashes Before, hashes After, covered Input Paths, interesting Input Paths, expect Same Keys, expected Dep File Inputs After, failure Message )  ; }"
2356,"public  Metadata Container find Metadata Container ( final  Container Type type ) {  Metadata Container result =  (  Metadata Container )  get First ( type . get Container GUID (  ) ,  Metadata Container . class )  ;  if  ( result == null )  {     result =  (  Metadata Container )  get Extended Header (  )  . get First ( type . get Container GUID (  ) ,  Metadata Container . class )  ;  } return result ; }"
2357,"public void save As Xlsx (  String chart Data Export Mode,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Xlsx ( %s, %s )  ; "", wrap Quotes ( chart Data Export Mode ) , wrap Quotes ( filename )  )  )  ; }"
2358,private  Base Danmaku Parser create Parser (  Input Stream stream ) { if  ( stream == null )  {     return new  Base Danmaku Parser (  )  {         @ Override         protected  Danmakus parse (  )  {             return new  Danmakus (  )  ;          }     } ;  } I Loader loader =  Danmaku Loader Factory . create (  Danmaku Loader Factory . TAG_BILI )  ;  try {     loader . load ( stream )  ;  } catch  (  Illegal Data Exception e )  {     e . print Stack Trace (  )  ;  }  Base Danmaku Parser parser = new  Bili Danmuku Parser (  )  ;  I Data Source<?> data Source = loader . get Data Source (  )  ;  parser . load ( data Source )  ;  return parser ; }
2359,"public void set Group (  String group Type,  Object group Name ) { if  ( !context And Api Key Set ( ""set Group (  ) "" )  ||  Utils . is Empty String ( group Type )  )  {     return ;  } JSON Object group = null ;  try {     group = new JSON Object (  )  . put ( group Type, group Name )  ;  } catch  ( JSON Exception e )  {     logger . e ( TAG, e . to String (  )  )  ;  }  Identify identify = new  Identify (  )  . set User Property ( group Type, group Name )  ;  log Event Async (  Constants . IDENTIFY_EVENT, null, null, identify . user Properties Operations, group, null, get Current Time Millis (  ) , false )  ; }"
2360,"public com . anychart . charts .  Pie select Marquee Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
2361,public  Set< String> get Scope Set (  ) { return  Ascii String List Util . string To Set ( scope )  ; }
2362,public  Audio Stream Chunk get Audio Stream Chunk (  ) {  Audio Stream Chunk result = null ;  final  List< Chunk> stream Chunks = assert Chunk List ( GUID . GUID_STREAM )  ;  for  ( int i = 0 ;  i < stream Chunks . size (  )  && result == null ;  i++ )  {     if  ( stream Chunks . get ( i )  instanceof  Audio Stream Chunk )  {         result =  (  Audio Stream Chunk )  stream Chunks . get ( i )  ;      } } return result ; }
2363,"public com . anychart . charts .  Cartesian x Minor Grid (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Minor Grid ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
2364,"public com . anychart . core . gantt . edit .  Side Control connector Thumb (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . connector Thumb ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2365,public float compute Raw X ( float value X ) { // TODO:  ( content Rect Minus All Margins . width (  )  / current Viewport . width (  )  )  can be recalculated only when viewport // change .  final float pixel Offset =  ( value X - current Viewport . left )  *  ( content Rect Minus All Margins . width (  )  / current Viewport . width (  )  )  ;  return content Rect Minus All Margins . left + pixel Offset ; }
2366,"public com . anychart . core . annotations .  Infinite Line stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
2367,public  React Instance Manager Builder set Use Developer Support ( boolean use Developer Support ) { m Use Developer Support = use Developer Support ;  return this ; }
2368,"public com . anychart . core . stock . scrollerseries .  Stick bounds (  String x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
2369,public void set Descriptor (  String descriptor ) { this . descriptor = descriptor ; }
2370,"public com . anychart . standalones .  Project Timeline palette ( com . anychart . palettes .  Distinct Colors palette Settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "",  ( palette Settings != null )  ? palette Settings . get Js Base (  )  : null )  )  ;  return this ; }"
2371,"public com . anychart . charts .  Venn top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
2372,"public com . anychart . standalones .  Resource List min Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", width )  )  ;  return this ; }"
2373,public  String to String (  ) { return row Map (  )  . to String (  )  ; }
2374,"public com . anychart . core . stock . scrollerseries .  Stick y Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
2375,"public com . anychart . core . axismarkers .  Gantt Range fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
2376,"public  Realm Query<E> less Than (  String field Name, int value ) { realm . check If Valid (  )  ;   Field Descriptor fd = schema . get Field Descriptors ( field Name,  Realm Field Type . INTEGER )  ;  this . query . less Than ( fd . get Column Keys (  ) , fd . get Native Table Pointers (  ) , value )  ;  return this ; }"
2377,public boolean has Changes (  ) { return changed Objects . has Changes (  )  ; }
2378,"Immutable Sorted Set< Injection Site> get Injection Sites (  Declared Type declared Type ) {  Set< Injection Site> injection Sites = new  Hash Set<> (  )  ;   List< Type Element> ancestors = new  Array List<> (  )  ;   Injection Site Visitor injection Site Visitor = new  Injection Site Visitor (  )  ;  for  (  Optional< Declared Type> current Type =  Optional . of ( declared Type )  ;  current Type . is Present (  )  ;  current Type = types . non Object Superclass ( current Type . get (  )  )  )  {      Declared Type type = current Type . get (  )  ;      ancestors . add (  More Elements . as Type ( type . as Element (  )  )  )  ;      for  (  Element enclosed Element : type . as Element (  )  . get Enclosed Elements (  )  )  {         injection Site Visitor . visit ( enclosed Element, type )  . if Present ( injection Sites::add )  ;      } } return  Immutable Sorted Set . copy Of ( // supertypes before subtypes  Comparator . comparing (  (  Injection Site injection Site )  -> ancestors . index Of ( injection Site . element (  )  . get Enclosing Element (  )  )  )  . reversed (  )  . then Comparing (  injection Site -> injection Site . element (  )  . get Kind (  )  )  . then Comparing (  Injection Site::element, DECLARATION_ORDER ) , injection Sites )  ; }"
2379,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
2380,"public static boolean has Always Denied Permission (  Fragment fragment,  String .  .  .  denied Permissions ) { return has Always Denied Permission ( new X Fragment Source ( fragment ) , denied Permissions )  ; }"
2381,"protected void invalid Message (  Remote GENA Subscription remote GENA Subscription,  Unsupported Data Exception ex ) { log . info ( "" Invalid event message received, causing: "" + ex )  ;  if  ( log . is Loggable (  Level . FINE )  )  {     log . fine ( ""------------------------------------------------------------------------------"" )  ;      log . fine ( ex . get Data (  )  != null ? ex . get Data (  )  . to String (  )  : ""null"" )  ;      log . fine ( ""------------------------------------------------------------------------------"" )  ;  }}"
2382,public  String get Jsonp Function (  ) { return this . jsonp Function ; }
2383,"private boolean check Mail Format (  String mail ) {  String str Pattern = ""^ [ a-z A-Z0-9 ]  [ \\w\\ . - ] * [ a-z A-Z0-9 ] @ [ a-z A-Z0-9 ]  [ \\w\\ . - ] *"" + "" [ a-z A-Z0-9 ] \\ .  [ a-z A-Z ]  [ a-z A-Z\\ .  ] * [ a-z A-Z ] $"" ;   Pattern p =  Pattern . compile ( str Pattern )  ;   Matcher m = p . matcher ( mail )  ;  return m . matches (  )  ; }"
2384,public static  Qiscus Account get Qiscus Account (  ) { check User Setup (  )  ;  return local Data Manager . get Account Info (  )  ; }
2385,"public void save As Png (  String width,  Number height,  Number quality,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Png ( %s, %s, %s, %s )  ; "", wrap Quotes ( width ) , height, quality, wrap Quotes ( filename )  )  )  ; }"
2386,"public static _ Fields find By Thrift Id Or Throw ( int field Id ) { _ Fields fields = find By Thrift Id ( field Id )  ;  if  ( fields == null )      throw new java . lang .  Illegal Argument Exception ( "" Field "" + field Id + "" doesn't exist!"" )  ;  return fields ; }"
2387,public void remove All Sub Items (  ) { m Base Sub List Layout . remove All Views (  )  ; }
2388,"public  Tap Target description Text Alpha ( float description Text Alpha ) { if  ( description Text Alpha < 0 || description Text Alpha > 1f )  {     throw new  Illegal Argument Exception ( "" Given an invalid alpha value: "" + description Text Alpha )  ;  } this . description Text Alpha = description Text Alpha ;  return this ; }"
2389,static  Context enter Js Context (  ) { final  Context js Context =  Context . enter (  )  ;  // we need to make sure that exit the context .  try {     js Context . set Language Version (  Context . VERSION_1_8 )  ;      //  We can't let  Rhino to optimize the JS and to use a JIT because it would generate JVM bytecode     // and android runs on DEX bytecode .   Instead we need to go in interpreted mode .      js Context . set Optimization Level ( -1 )  ;  } catch  (  Runtime Exception e )  {     //  Something bad happened to the javascript context but it might still be usable .      //  The first thing to do is to exit the context and then propagate the error .       Context . exit (  )  ;      throw e ;  } return js Context ; }
2390,public boolean has Refs (  )  throws IO Exception{ return !get Refs (  )  . is Empty (  )  ; }
2391,public void start (  ) { m Started = true ;  m Seconds Text Value = -1 ;  long seconds =  Time Unit . MILLISECONDS . to Seconds ( m Ticks Left * m Millis Tick Duration )  ;  if  ( seconds >= 6 )  {     animation Started = false ;      m View Countdown . clear Animation (  )  ;      m View Countdown . set Text Color (  Color . WHITE )  ;      m View Countdown . set Typeface (  Typeface . DEFAULT )  ;  }}
2392,"public com . anychart . core . utils .  Bounds bounds (  ) { return new com . anychart . core . utils .  Bounds ( js Base + "" . bounds (  ) "" )  ; }"
2393,public  Dialog Plus Builder set Background Color Res Id ( int resource Id ) { return set Content Background Resource ( resource Id )  ; }
2394,public  Stream Download Task get Stream ( @ Non Null  Stream Download Task .  Stream Processor processor ) {  Stream Download Task task = new  Stream Download Task ( this )  ;  task . set Stream Processor ( processor )  ;  task . queue (  )  ;  return task ; }
2395,"public com . anychart . charts .  Waterfall x Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2396,"public static  Optional< String> find Ndk Version From Directory (  Path ndk Directory ) {  Path new Ndk = ndk Directory . resolve ( NDK_POST_R11_VERSION_FILENAME )  ;   Path old Ndk = ndk Directory . resolve ( NDK_PRE_R11_VERSION_FILENAME )  ;  boolean new Ndk Path Found =  Files . exists ( new Ndk )  ;  boolean old Ndk Path Found =  Files . exists ( old Ndk )  ;  if  ( new Ndk Path Found && old Ndk Path Found )  {     throw new  Human Readable Exception ( "" Android NDK directory "" + ndk Directory + "" can not "" + ""contain both properties files .   Remove source . properties or RELEASE . TXT . "" )  ;  } else if  ( new Ndk Path Found )  {      Properties source Properties = new  Properties (  )  ;      try  (  File Input Stream file Stream = new  File Input Stream ( new Ndk . to File (  )  )  )  {         source Properties . load ( file Stream )  ;          return  Optional . of Nullable ( source Properties . get Property ( "" Pkg .  Revision"" )  )  ;      } catch  ( IO Exception e )  {         throw new  Human Readable Exception ( "" Failed to read NDK version from "" + new Ndk + "" . "" )  ;      } } else if  ( old Ndk Path Found )  {     try  (  Buffered Reader reader =  Files . new Buffered Reader ( old Ndk,  Charsets . UTF_8 )  )  {         // around since we should consider them equivalent .          return  Optional . of Nullable ( reader . read Line (  )  . split ( ""\\s+"" )  [ 0 ]  . replace ( ""r10e-rc4"", ""r10e"" )  )  ;      } catch  ( IO Exception e )  {         throw new  Human Readable Exception ( "" Failed to read NDK version from "" + old Ndk + "" . "" )  ;      } } else {     throw new  Human Readable Exception ( ndk Directory + "" does not contain a valid properties "" + ""file for  Android NDK . "" )  ;  }}"
2397,"public static  Listenable Future< List<V>> successful As List (  Listenable Future<? extends V> .  .  .  futures ) { return new  List Future<V> (  Immutable List . copy Of ( futures ) , false )  ; }"
2398,"public void add Display Error Listener ( @ Non Null  Firebase In App Messaging Display Error Listener display Error Listener, @ Non Null  Executor executor ) { developer Listener Manager . add Display Error Listener ( display Error Listener, executor )  ; }"
2399,"private int read From Peek Buffer ( byte [  ]  target, int offset, int length ) { if  ( peek Buffer Length == 0 )  {     return 0 ;  } int peek Bytes =  Math . min ( peek Buffer Length, length )  ;   System . arraycopy ( peek Buffer, 0, target, offset, peek Bytes )  ;  update Peek Buffer ( peek Bytes )  ;  return peek Bytes ; }"
2400,"private void write Level Json ( JSON Object json,  Output Stream output Stream )  throws IO Exception{ output Stream . write ( json . to String (  )  . get Bytes (  )  )  ;  output Stream . close (  )  ; }"
2401,void on Rendered First Frame (  ) {}
2402,"public void test Int Value (  ) {  Atomic Double at = new  Atomic Double (  )  ;  assert Equals ( 0, at . int Value (  )  )  ;  for  ( double x : VALUES )  {     at . set ( x )  ;      assert Equals (  ( int )  x, at . int Value (  )  )  ;  }}"
2403,"public static int compute Color ( @ Color Int int from Color, @ Color Int int to Color, float fraction ) { fraction = QMUI Lang Helper . constrain ( fraction, 0f, 1f )  ;  int min Color A =  Color . alpha ( from Color )  ;  int max Color A =  Color . alpha ( to Color )  ;  int result A =  ( int )   (  ( max Color A - min Color A )  * fraction )  + min Color A ;  int min Color R =  Color . red ( from Color )  ;  int max Color R =  Color . red ( to Color )  ;  int result R =  ( int )   (  ( max Color R - min Color R )  * fraction )  + min Color R ;  int min Color G =  Color . green ( from Color )  ;  int max Color G =  Color . green ( to Color )  ;  int result G =  ( int )   (  ( max Color G - min Color G )  * fraction )  + min Color G ;  int min Color B =  Color . blue ( from Color )  ;  int max Color B =  Color . blue ( to Color )  ;  int result B =  ( int )   (  ( max Color B - min Color B )  * fraction )  + min Color B ;  return  Color . argb ( result A, result R, result G, result B )  ; }"
2404,public  Toolbar .  On Menu Item Click Listener get Toolbar Listener (  ) { return m Toolbar Listener ; }
2405,"public synchronized  Integer get (  ) { while  ( source List . is Empty (  )  )  {     try {         LOGGER . info ( ""waiting"" )  ;          wait (  )  ;      } catch  (  Interrupted Exception e )  {         e . print Stack Trace (  )  ;      } } LOGGER . info ( ""getting"" )  ;  return source List . peek (  )  ; }"
2406,public void set Card List View (  Card List View card List View ) { this . m Card List View = card List View ; }
2407,"public com . anychart . core . axismarkers .  Gantt Line value (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . value ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
2408,public static  Atomic Reference Array<E> new Reference Array ( int length ) { return new  Atomic Reference Array<E> ( length )  ; }
2409,"Write Result insert (  Document [  ]  documents ) { not Null ( documents, error Message ( ""documents can not be null"", VE_INSERT_NULL_DOCUMENT_ARRAY )  )  ;  try {     write Lock . lock (  )  ;      return data Service . insert ( documents )  ;  } finally {     write Lock . unlock (  )  ;  }}"
2410,public T get Max Entry Count Set (  ) { if  ( m Data Sets == null || m Data Sets . is Empty (  )  )      return null ;  T max = m Data Sets . get ( 0 )  ;  for  ( T set : m Data Sets )  {     if  ( set . get Entry Count (  )  > max . get Entry Count (  )  )          max = set ;  } return max ; }
2411,"private  Intermediate Stream get Output Stream ( T inject Transform, @ Non Null  Variant Scope scope,  String task Name ) {  File out Root Folder =  File Utils . join ( project . get Build Dir (  ) ,  String Helper . to Strings (  Android Project . FD_INTERMEDIATES, FD_TRANSFORMS, inject Transform . get Name (  ) , scope . get Directory Segments (  )  )  )  ;   Set<? super  Scope> requested Scopes = inject Transform . get Scopes (  )  ;  // create the output return  Intermediate Stream . builder ( project, inject Transform . get Name (  )  )  . add Content Types ( inject Transform . get Output Types (  )  )  . add Scopes ( requested Scopes )  . set Task Name ( task Name )  . set Root Location ( out Root Folder )  . build (  )  ; }"
2412,"public void test Running Test On Class Without Test Methods (  )  throws IO Exception{  Project Workspace workspace =  Test Data Helper . create Project Workspace For Scenario ( this, ""build_then_test"", temporary Folder )  ;  workspace . set Up (  )  ;   Process Result test Result = workspace . run Buck Command ( ""test"", ""//:nontestclass"" )  ;  test Result . assert Success ( "" Passing test should exit with 0 . "" )  ; }"
2413,"public  Write Batch update ( @ Non Null  Document Reference document Ref, @ Non Null  Map< String,  Object> data ) {  Parsed Update Data parsed Data = firestore . get User Data Reader (  )  . parse Update Data ( data )  ;  return update ( document Ref, parsed Data )  ; }"
2414,public int get Screen Round Value (  ) { return screen Round_ ; }
2415,"public final boolean send Empty Message Delayed ( int what, long delay Millis ) { return m Exec . send Empty Message Delayed ( what, delay Millis )  ; }"
2416,"public void clear Imported Packages (  ) { imported Packages = new  Array List (  )  ;  imported Packages . add ( ""java . lang"" )  ; }"
2417,"public static  Path to Windows Path If Needed (  Path path ) { return to Windows Path If Needed ( 'C', path )  ; }"
2418,"public com . anychart . charts .  Gantt row Selected Fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
2419,"public static  Fragment Controller<T> build Fragment (  Class<T> fragment Class,  Intent intent ) { return  Fragment Controller . of (  Reflection Helpers . call Constructor ( fragment Class ) , intent )  ; }"
2420,"public void generate (  )  throws IO Exception{  Type Spec .  Builder generator =  Type Spec . class Builder ( name )  . add Originating Element ( originating Element )  . superclass (  Class Names . TEST_COMPONENT_DATA_SUPPLIER )  . add Modifiers ( PUBLIC, FINAL )  . add Method ( get Method (  )  )  . add Method ( get Test Inject Internal Method (  )  )  ;   Processors . add Generated Annotation ( generator, processing Env,  Class Names . ROOT_PROCESSOR . to String (  )  )  ;   Java File . builder ( name . package Name (  ) , generator . build (  )  )  . build (  )  . write To ( processing Env . get Filer (  )  )  ; }"
2421,"public void measure With Layout Params (  ) { final  Component component = new  Inline Layout Spec (  )  {     @ Override     protected  Component on Create Layout (  Component Context c )  {         return  Simple Mount Spec Tester . create ( c )  . width Percent ( 100 )  . height Px ( 100 )  . build (  )  ;      } } ;  m Litho View = new  Litho View ( get Application Context (  )  )  ;  m Litho View . set Component ( component )  ;  m Litho View . set Layout Params ( new  View Group .  Layout Params ( 0, 200 )  )  ;  m Litho View . measure ( make Measure Spec ( 0, UNSPECIFIED ) , make Measure Spec ( 200, EXACTLY )  )  ;  m Litho View . layout ( 0, 0, m Litho View . get Measured Width (  ) , m Litho View . get Measured Height (  )  )  ;  //  View got measured .  assert That ( m Litho View . get Measured Width (  )  )  . is Equal To ( 0 )  ;  assert That ( m Litho View . get Measured Height (  )  )  . is Equal To ( 200 )  ;  //  Attaching will not mount anything as we have no width .   Shadow View shadow = shadow Of ( m Litho View )  ;  shadow . call On Attached To Window (  )  ;  assert That ( get Internal Mount Items ( m Litho View )  )  . is Equal To ( 0 )  ; }"
2422,"public static  String view To String (  Litho View view, boolean embedded ) {  Debug Component root =  Debug Component . get Root Instance ( view )  ;  if  ( root == null )  {     return """" ;  } final  String Builder sb = new  String Builder (  )  ;  int depth = embedded ? get Litho View Depth In Android ( view )  : 0 ;  sb . append ( ""\n"" )  ;  view To String ( root, sb, embedded, false, depth, 0, 0, null )  ;  return sb . to String (  )  ; }"
2423,"public com . anychart . core . stock . scrollerseries .  Jump Line z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
2424,"public int insert ( byte [  ]  code )  throws  Bad Bytecode{ return insert0 ( current Pos, code, false )  ; }"
2425,"public com . anychart . core .  State Settings falling Hatch Fill (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Hatch Fill ( %s )  ; "", enabled )  )  ;  return this ; }"
2426,public boolean is Set Name (  ) { return this . name != null ; }
2427,"protected  Menu Builder set Header Title Int (  Char Sequence title ) { set Header Internal ( 0, title, 0, null, null )  ;  return this ; }"
2428,"private  View find Focusable View In My Bounds Y ( final boolean top Focus, final int top,  View preferred Focusable ) { /*      *  The fading edge's transparent side should be considered for focus      * since it's mostly visible, so we divide the actual fading edge length      * by 2 .       */ final int fading Edge Length = get Vertical Fading Edge Length (  )  / 2 ;  final int top Without Fading Edge = top + fading Edge Length ;  final int bottom Without Fading Edge = top + get Height (  )  - fading Edge Length ;  if  (  ( preferred Focusable != null )  &&  ( preferred Focusable . get Top (  )  < bottom Without Fading Edge )  &&  ( preferred Focusable . get Bottom (  )  > top Without Fading Edge )  )  {     return preferred Focusable ;  } return find Focusable View In Bounds Y ( top Focus, top Without Fading Edge, bottom Without Fading Edge )  ; }"
2429,"public static  Execution Stack merge Stack (  Execution Stack stack1,  Execution Stack stack2 ) { if  ( stack1 == stack2 )  {     //  Easy out .      return stack1 ;  } int sz = stack1 . size (  )  ;   Execution Stack result = null ;  if  ( stack2 . size (  )  != sz )  {     throw new  Sim Exception ( ""mismatched stack depths"" )  ;  } for  ( int i = 0 ;  i < sz ;  i++ )  {      Type Bearer tb1 = stack1 . peek ( i )  ;       Type Bearer tb2 = stack2 . peek ( i )  ;       Type Bearer result Type = merge Type ( tb1, tb2 )  ;      if  ( result Type != tb1 )  {         /*              *  We only need to do anything when the result differs              * from what is in the first stack, since that's what the              * result gets initialized to .               */         if  ( result == null )  {             result = stack1 . copy (  )  ;          }         try {             if  ( result Type == null )  {                 throw new  Sim Exception ( ""incompatible: "" + tb1 + "", "" + tb2 )  ;              } else {                 result . change ( i, result Type )  ;              }         } catch  (  Sim Exception ex )  {             ex . add Context ( "" .  .  . while merging stack [ "" +  Hex . u2 ( i )  + "" ] "" )  ;              throw ex ;          }     } } if  ( result == null )  {     return stack1 ;  } result . set Immutable (  )  ;  return result ; }"
2430,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
2431,"static  Immutable List< Step> add Postprocess Classes Commands (  Project Filesystem filesystem,  List< String> postprocess Classes Commands,  Path output Directory,  Immutable Sorted Set< Path> declared Classpath Entries,  Optional< String> boot Classpath ) { if  ( postprocess Classes Commands . is Empty (  )  )  {     return  Immutable List . of (  )  ;  }  Immutable List .  Builder< Step> commands = new  Immutable List .  Builder< Step> (  )  ;   Immutable Map .  Builder< String,  String> env Var Builder =  Immutable Map . builder (  )  ;  env Var Builder . put ( ""COMPILATION_CLASSPATH"",  Joiner . on ( ':' )  . join (  Iterables . transform ( declared Classpath Entries, filesystem::resolve )  )  )  ;  if  ( boot Classpath . is Present (  )  )  {     env Var Builder . put ( ""COMPILATION_BOOTCLASSPATH"", boot Classpath . get (  )  )  ;  }  Immutable Map< String,  String> env Vars = env Var Builder . build (  )  ;  for  (  String postprocess Classes Command : postprocess Classes Commands )  {      Bash Step bash Step = new  Bash Step ( filesystem . get Root Path (  ) , postprocess Classes Command + "" "" + output Directory )  {         @ Override         public  Immutable Map< String,  String> get Environment Variables (  Execution Context context )  {             return env Vars ;          }     } ;      commands . add ( bash Step )  ;  } return commands . build (  )  ; }"
2432,public void set Transform ( boolean transform ) { this . transform = transform ; }
2433,"public void begin (  Camera camera ) { if  ( building )      throw new  Gdx Runtime Exception ( "" Call end (  )  after calling begin (  ) "" )  ;  building = true ;  this . camera = camera ;  renderables Pool . flush (  )  ;  renderables . clear (  )  ;  items . clear (  )  ;  mesh Part Pool . flush (  )  ;  mesh Pool . flush (  )  ; }"
2434,"public  List< User Thread Link Meta Value> query Deep (  String where,  String .  .  .  selection Arg ) {  Cursor cursor = db . raw Query ( get Select Deep (  )  + where, selection Arg )  ;  return load Deep All And Close Cursor ( cursor )  ; }"
2435,"private static void write Ints ( byte [  ]  buffer, int .  .  .  values ) { int offset = 0 ;  for  ( int value : values )  {     write Int ( buffer, offset, value )  ;      offset += 4 ;  }}"
2436,"public void max Point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Point Width (  )  ; "" )  ; }"
2437,"public com . anychart . charts .  Waterfall min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
2438,"public  Async Object Size Queue<T> get Object Size (  Iterable<T> object Ids, final boolean report Missing ) { final  Iterator<T> id Itr = object Ids . iterator (  )  ;  return new  Async Object Size Queue<T> (  )  {     private T cur ;      private long sz ;      @ Override     public boolean next (  )  throws  Missing Object Exception, IO Exception {         if  ( id Itr . has Next (  )  )  {             cur = id Itr . next (  )  ;              sz = get Object Size ( cur, OBJ_ANY )  ;              return true ;          }         return false ;      }     @ Override     public T get Current (  )  {         return cur ;      }     @ Override     public  Object Id get Object Id (  )  {         return cur ;      }     @ Override     public long get Size (  )  {         return sz ;      }     @ Override     public boolean cancel ( boolean may Interrupt If Running )  {         return true ;      }     @ Override     public void release (  )  {     //  Since we are sequential by default, we don't     // have any state to clean up if we terminate early .      } } ; }"
2439,"public  Closeable Reference< Bitmap> create Bitmap (  Display Metrics display, int width, int height,  Bitmap .  Config config ) { return create Bitmap ( display, width, height, config, null )  ; }"
2440,"private  Optional< Path> get Output Path For Export File (  Export File Description Arg arg,  Build Target build Target,  Project Filesystem filesystem ) { //  If the mode is REFERENCE we need to return the relative path to the real underlying file if  ( arg . get Mode (  )  . map (  mode -> mode ==  Export File Description .  Mode . REFERENCE )  . or Else ( false )  )  {     return arg . get Src (  )  . map ( adapter::get Relative Path )  ;  } //  Otherwise, we resolve the generated path for the COPY  String name = arg . get Out (  )  . or Else ( build Target . get Short Name And Flavor Postfix (  )  )  ;  return  Optional . of (  Build Target Paths . get Gen Path ( filesystem, build Target, ""%s"" )  . resolve ( name )  )  ; }"
2441,float get Saturation Level (  ) { return saturation Level ; }
2442,"public  View Transition Builder delay Translation X As Fraction Of Width ( @ Non Null final  View target View, final float .  .  .  width Fractions ) { get View Delayed Processor (  )  . add Process ( TRANSLATION_X_AS_FRACTIONS_OF_WIDTH_WITH_VIEW, target View, width Fractions )  ;  return self (  )  ; }"
2443,"public static void acquire Wake Lock Now (  Context context ) { if  ( s Wake Lock == null || !s Wake Lock . is Held (  )  )  {      Power Manager power Manager =  Assertions . assert Not Null (  (  Power Manager )  context . get System Service ( POWER_SERVICE )  )  ;      s Wake Lock = power Manager . new Wake Lock (  Power Manager . PARTIAL_WAKE_LOCK,  Headless Js Task Service . class . get Canonical Name (  )  )  ;      s Wake Lock . set Reference Counted ( false )  ;      s Wake Lock . acquire (  )  ;  }}"
2444,"public synchronized  Countly set Star Rating Dialog Texts (  String star Rating Text Title,  String star Rating Text Message,  String star Rating Text Dismiss ) { if  ( !is Initialized (  )  )  {     L . e ( "" Can't call this function before init has been called"" )  ;      return this ;  } L . d ( "" Setting star rating texts"" )  ;  module Ratings . set Star Rating Init Config ( connection Queue_ . get Countly Store (  ) , -1, star Rating Text Title, star Rating Text Message, star Rating Text Dismiss )  ;  return this ; }"
2445,public void invalidate (  ) { valid = false ; }
2446,public  Class<?> get Required Type (  ) { return this . required Type ; }
2447,public  Porter Duff .  Mode get Secondary Progress Tint Mode (  ) { log Progress Bar Tint Warning (  )  ;  return get Support Secondary Progress Tint Mode (  )  ; }
2448,public long get So Far ( final int id ) { if  (  File Downloader . get Impl (  )  . is Service Connected (  )  )  {     return  File Downloader . get Impl (  )  . get So Far ( id )  ;  } final  Connect Subscriber subscriber = new  Connect Subscriber (  )  {     private long m Value ;      @ Override     public void connected (  )  {         m Value =  File Downloader . get Impl (  )  . get So Far ( id )  ;      }     @ Override     public  Object get Value (  )  {         return m Value ;      } } ;  wait ( subscriber )  ;  return  ( long )  subscriber . get Value (  )  ; }
2449,public void clear List (  ) { swap Data List ( null )  ; }
2450,static boolean is Collected ( E entry ) { return entry . get Value (  )  == null ; }
2451,"public com . anychart . core . stock . scrollerseries . OHLC rising Stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rising Stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2452,public static  Result<T> failure (  ) { return  (  Result<T> )  FAILURE ; }
2453,public  Application Key get App Key (  ) { return m App Key ; }
2454,public static boolean safe (  String pattern ) { for  ( int i = 0 ;  i < pattern . length (  )  ;  i++ )  {     final char c = pattern . char At ( i )  ;      switch ( c )  {         case ' . ':         case '?':         case '*':         case '+':         case '{':         case '}':         case ' ( ':         case ' ) ':         case ' [ ':         case ' ] ':         case '\\':             return false ;      } } return true ; }
2455,"public com . anychart . graphics . math .  Rect clip (  ) { return new com . anychart . graphics . math .  Rect ( js Base + "" . clip (  ) "" )  ; }"
2456,public boolean is Clear (  ) { return m Clear ; }
2457,"public com . anychart . charts .  Sankey padding (  Number value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
2458,"public  Ios Parameters .  Builder set Ipad Fallback Url ( @ Non Null  Uri fallback Url ) { parameters . put Parcelable ( KEY_IPAD_FALLBACK_LINK, fallback Url )  ;  return this ; }"
2459,public long get Processed Bytes (  ) { return processed Bytes ; }
2460,"public com . anychart . core . stock . scrollerseries .  Jump Line bounds (  String x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
2461,protected void set Use Class Name ( boolean use Class Name ) { this . use Class Name = use Class Name ; }
2462,Provision Binding subcomponent Creator Binding (  Immutable Set< Subcomponent Declaration> subcomponent Declarations ) {  Subcomponent Declaration subcomponent Declaration = subcomponent Declarations . iterator (  )  . next (  )  ;  return  Provision Binding . builder (  )  . contribution Type (  Contribution Type . UNIQUE )  . key ( subcomponent Declaration . key (  )  )  . kind ( SUBCOMPONENT_CREATOR )  . build (  )  ; }
2463,"public void add Annotation (  String annotation, double x, double y ) { m Annotations . add ( annotation )  ;  while  ( m String XY . get ( x )  != null )  {     x += get Padding ( x )  ;  } m String XY . put ( x, y )  ; }"
2464,"static void populate Multiset (  Multiset<E> multiset,  Object Input Stream stream )  throws IO Exception,  Class Not Found Exception{ int distinct Elements = stream . read Int (  )  ;  populate Multiset ( multiset, stream, distinct Elements )  ; }"
2465,"public static  Map get All Namespaces ( XML Lib Impl lib,  Xml Cursor cursor ) {  Namespace Helper helper = new  Namespace Helper ( lib )  ;  cursor . push (  )  ;  int depth = 0 ;  while  ( cursor . has Prev Token (  )  )  {     if  ( cursor . is Container (  )  )  {         cursor . push (  )  ;          depth++ ;      }     cursor . to Parent (  )  ;  } for  ( int i = 0 ;  i < depth ;  i++ )  {     cursor . pop (  )  ;      helper . update ( cursor, null )  ;  } cursor . pop (  )  ;  return helper . prefix To URI ; }"
2466,public void accept (  Member Value Visitor visitor ) { visitor . visit Double Member Value ( this )  ; }
2467,"public com . anychart . core . utils .  Quarter stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
2468,public int get Sensor Setting (  ) { return sensor Setting ; }
2469,public void close All Open Positions (  ) { if  ( recycler View == null )  {     return ;  } for  ( int i = opened Positions . size (  )  - 1 ;  i >= 0 ;  i-- )  {     close Open Position ( opened Positions . key At ( i )  )  ;  } // remove all positions in case one was not removed opened Positions . clear (  )  ; }
2470,protected int get Call State (  ) { return call State ; }
2471,"public void write (  String str, int offset, int count ) { synchronized  ( lock )  {     try {         append Locked ( str, offset, count )  ;      } catch  ( IO Exception e )  {     } }}"
2472,"public void test Correlation Id In Request (  )  throws IO Exception{ final  String test Url = ""https://login . microsoftonline . com/test . onmicrosoft . com/oauth2/token"" ;  final UUID test Correlation Id = UUID . random UUID (  )  ;   Logger . d ( TAG, "" Test correlationid:"" + test Correlation Id . to String (  )  )  ;  final  Http URL Connection mocked Connection =  Mockito . mock (  Http URL Connection . class )  ;   Http Url Connection Factory . set Mocked Http Url Connection ( mocked Connection )  ;   Util . prepare Mocked Url Connection ( mocked Connection )  ;  final  List< String> header Values = new  Array List<> (  )  ;  header Values . add ( test Correlation Id . to String (  )  )  ;  final  Map< String,  List< String>> header Fields = new  Hash Map<> (  )  ;  header Fields . put ( AAD . CLIENT_REQUEST_ID, header Values )  ;   Mockito . when ( mocked Connection . get Header Fields (  )  )  . then Return ( header Fields )  ;   Mockito . when ( mocked Connection . get Input Stream (  )  )  . then Return (  Util . create Input Stream ( test Correlation Id . to String (  )  )  )  ;   Mockito . when ( mocked Connection . get Response Code (  )  )  . then Return (  Http URL Connection . HTTP_BAD_REQUEST )  ;  final  Http Web Response test Response = send Correlation Id Request ( test Url, test Correlation Id, false )  ;  assert Equals ( ""400 error code"",  Http URL Connection . HTTP_BAD_REQUEST, test Response . get Status Code (  )  )  ;  final  String response Body = test Response . get Body (  )  ;   Logger . i ( TAG, """", "" Test response:"" + response Body )  ;  assert Not Null ( ""webresponse is not null"", test Response )  ;  assert Equals ( ""same correlationid"", test Correlation Id . to String (  ) , test Response . get Response Headers (  )  . get (  Authentication Constants . AAD . CLIENT_REQUEST_ID )  . get ( 0 )  )  ;  assert True ( ""correlationid in response"", response Body . contains ( test Correlation Id . to String (  )  )  )  ;  // same id for next request final  Http Web Response test Response2 = send Correlation Id Request ( test Url, test Correlation Id, true )  ;  assert Equals ( ""same correlationid"", test Correlation Id . to String (  ) , test Response2 . get Response Headers (  )  . get (  Authentication Constants . AAD . CLIENT_REQUEST_ID )  . get ( 0 )  )  ; }"
2473,"protected void on Message Received (  Context context,  Intent intent ) { show Push Notification ( context, intent )  ; }"
2474,"public com . anychart . palettes .  Markers marker Palette (  ) { return new com . anychart . palettes .  Markers ( js Base + "" . marker Palette (  ) "" )  ; }"
2475,"public  Set< Element> get Nonnull Fields Of Receiver Before (  Tree Path path,  Context context ) {  Nullness Store store = data Flow . result Before Expr ( path, context, nullness Propagation )  ;  if  ( store == null )  {     return  Collections . empty Set (  )  ;  } return get Nonnull Receiver Fields ( store )  ; }"
2476,"protected boolean validate Annotation Syntax (  Set< String> content,  Null Away analysis,  Method Tree tree,  Visitor State state,  Symbol .  Method Symbol method Symbol ) {  String message ;  if  ( content . is Empty (  )  )  {     // we should not allow useless annotations .      message = ""empty @"" + annot Name + "" is the default precondition for every method, please remove it . "" ;      state . report Match ( analysis . get Error Builder (  )  . create Error Description ( new  Error Message (  Error Message .  Message Types . ANNOTATION_VALUE_INVALID, message ) , tree, analysis . build Description ( tree ) , state )  )  ;      return false ;  } else {     for  (  String field Name : content )  {         if  ( field Name . contains ( "" . "" )  )  {             if  ( !field Name . starts With ( THIS_NOTATION )  )  {                 message = ""currently @"" + annot Name + "" supports only class fields of the method receiver: "" + field Name + "" is not supported"" ;                  state . report Match ( analysis . get Error Builder (  )  . create Error Description ( new  Error Message (  Error Message .  Message Types . ANNOTATION_VALUE_INVALID, message ) , tree, analysis . build Description ( tree ) , state )  )  ;                  return false ;              } else {                 field Name = field Name . substring ( field Name . last Index Of ( "" . "" )  + 1 )  ;              }         }          Symbol .  Class Symbol class Symbol = AST Helpers . enclosing Class ( method Symbol )  ;           Variable Element field = get Instance Field Of Class ( class Symbol, field Name )  ;          if  ( field == null )  {             message = "" For @"" + annot Name + "" annotation, cannot find instance field "" + field Name + "" in class "" + class Symbol . get Simple Name (  )  ;              state . report Match ( analysis . get Error Builder (  )  . create Error Description ( new  Error Message (  Error Message .  Message Types . ANNOTATION_VALUE_INVALID, message ) , tree, analysis . build Description ( tree ) , state )  )  ;              return false ;          }     } } return true ; }"
2477,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
2478,"public com . anychart . core . stock . indicators .  Keltner Channels ma Series ( com . anychart . enums .  Stock Series Type type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . ma Series ( %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
2479,"public void add Change Listener (  Realm Change Listener< Realm List<E>> listener ) { check For Add Remove Listener ( listener, true )  ;  os List Operator . get Os List (  )  . add Listener ( this, listener )  ; }"
2480,public  Rop get Opcode (  ) { return null ; }
2481,public  Iterator get Dict Keys (  )  throws IO Exception{ if  ( type == INDIRECT )  {     return dereference (  )  . get Dict Keys (  )  ;  } else if  ( type == DICTIONARY || type == STREAM )  {     return  (  (  Hash Map )  value )  . key Set (  )  . iterator (  )  ;  } // wrong type return new  Array List (  )  . iterator (  )  ; }
2482,"public static int unsigned To Signed ( int unsigned, int size ) { if  (  ( unsigned &  ( 1 << size - 1 )  )  != 0 )  {     unsigned = -1 *  (  ( 1 << size - 1 )  -  ( unsigned &  (  ( 1 << size - 1 )  - 1 )  )  )  ;  } return unsigned ; }"
2483,"public com . anychart . core . grids .  Map Settings draw First Line (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . draw First Line ( %s )  ; "", enabled )  )  ;  return this ; }"
2484,"public com . anychart . standalones .  Data Grid column ( com . anychart . core . ui . datagrid .  Column settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . column ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
2485,"public com . anychart . core . gantt . elements .  Grouping Tasks Element stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
2486,public void reset (  ) { for  ( int i = 0 ;  i < m Input Size ;  i++ )  {     m Input [ i ]  = 0 ;  } m Input Pointer = -1 ;  update Hms (  )  ; }
2487,"public  Metadata Container create Container ( final  Container Type type ) { return create Container ( type, 0,  Big Integer . ZERO )  ; }"
2488,"public boolean on Touch Event (  Motion Event ev ) { view Drag Helper . process Touch Event ( ev )  ;  if  ( is Closed (  )  )  {     return false ;  } boolean is Drag View Hit = is View Hit ( drag View,  ( int )  ev . get X (  ) ,  ( int )  ev . get Y (  )  )  ;  boolean is Second View Hit = is View Hit ( second View,  ( int )  ev . get X (  ) ,  ( int )  ev . get Y (  )  )  ;  if  ( is Maximized (  )  )  {     drag View . dispatch Touch Event ( ev )  ;  } else {     drag View . dispatch Touch Event ( clone Motion Event With Action ( ev,  Motion Event . ACTION_CANCEL )  )  ;  } return is Drag View Hit || is Second View Hit ; }"
2489,public void clear Register Content Provider Exception (  Uri uri ) { register Content Provider Exceptions . remove ( uri )  ; }
2490,public int get Number Of Constants (  ) { return constants . length ; }
2491,"public com . anychart . core . ui .  Crosshair parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
2492,public float read Float (  ) { return  Float . int Bits To Float ( read Int (  )  )  ; }
2493,"public void period (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . period (  )  ; "" )  ; }"
2494,public void set Model Number (  String model Number ) { this . model Number = model Number ; }
2495,"public com . anychart . charts .  Polar a11y (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . a11y ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2496,"public  String to String (  ) { if  ( size (  )  <= 0 )  {     return ""{}"" ;  }  String Builder buffer = new  String Builder ( m Size * 28 )  ;  buffer . append ( '{' )  ;  for  ( int i = 0 ;  i < m Size ;  i++ )  {     if  ( i > 0 )  {         buffer . append ( "", "" )  ;      }     int key = key At ( i )  ;      buffer . append ( key )  ;      buffer . append ( '=' )  ;      boolean value = value At ( i )  ;      buffer . append ( value )  ;  } buffer . append ( '}' )  ;  return buffer . to String (  )  ; }"
2497,public void set Text Format Mode ( int mode ) { this . tm = mode ; }
2498,long get Execution Window Size In Seconds (  ) { // let jobs timeout in a week return  Time Unit . DAYS . to Seconds ( 7 )  ; }
2499,public static boolean is For Dev (  ) { return  Re Plugin Internal . FOR_DEV ; }
2500,"public  Color from Hsv ( float h, float s, float v ) { float x =  ( h / 60f + 6 )  % 6 ;  int i =  ( int )  x ;  float f = x - i ;  float p = v *  ( 1 - s )  ;  float q = v *  ( 1 - s * f )  ;  float t = v *  ( 1 - s *  ( 1 - f )  )  ;  switch ( i )  {     case 0:         r = v ;          g = t ;          b = p ;          break ;      case 1:         r = q ;          g = v ;          b = p ;          break ;      case 2:         r = p ;          g = v ;          b = t ;          break ;      case 3:         r = p ;          g = q ;          b = v ;          break ;      case 4:         r = t ;          g = p ;          b = v ;          break ;      default:         r = v ;          g = p ;          b = q ;  } return clamp (  )  ; }"
2501,"private  React Application Context create React Context (  Java Script Executor js Executor, JS Bundle Loader js Bundle Loader ) { F Log . d (  React Constants . TAG, "" React Instance Manager . create React Context (  ) "" )  ;   React Marker . log Marker ( CREATE_REACT_CONTEXT_START, js Executor . get Name (  )  )  ;  final  React Application Context react Context = new  React Application Context ( m Application Context )  ;   Native Module Call Exception Handler exception Handler = m Native Module Call Exception Handler != null ? m Native Module Call Exception Handler : m Dev Support Manager ;  react Context . set Native Module Call Exception Handler ( exception Handler )  ;   Native Module Registry native Module Registry = process Packages ( react Context, m Packages, false )  ;   Catalyst Instance Impl .  Builder catalyst Instance Builder = new  Catalyst Instance Impl .  Builder (  )  . set React Queue Configuration Spec (  React Queue Configuration Spec . create Default (  )  )  . set JS Executor ( js Executor )  . set Registry ( native Module Registry )  . set JS Bundle Loader ( js Bundle Loader )  . set Native Module Call Exception Handler ( exception Handler )  ;   React Marker . log Marker ( CREATE_CATALYST_INSTANCE_START )  ;  // CREATE_CATALYST_INSTANCE_END is in JSC Executor . cpp  Systrace . begin Section ( TRACE_TAG_REACT_JAVA_BRIDGE, ""create Catalyst Instance"" )  ;  final  Catalyst Instance catalyst Instance ;  try {     catalyst Instance = catalyst Instance Builder . build (  )  ;  } finally {      Systrace . end Section ( TRACE_TAG_REACT_JAVA_BRIDGE )  ;       React Marker . log Marker ( CREATE_CATALYST_INSTANCE_END )  ;  } react Context . initialize With Instance ( catalyst Instance )  ;  if  (  React Feature Flags . use Turbo Modules && m TMM Delegate Builder != null )  {      Turbo Module Manager Delegate tmm Delegate = m TMM Delegate Builder . set Packages ( m Packages )  . set React Application Context ( react Context )  . build (  )  ;       Turbo Module Manager turbo Module Manager = new  Turbo Module Manager ( catalyst Instance . get Runtime Executor (  ) , tmm Delegate, catalyst Instance . get JS Call Invoker Holder (  ) , catalyst Instance . get Native Call Invoker Holder (  )  )  ;      catalyst Instance . set Turbo Module Manager ( turbo Module Manager )  ;       Turbo Module Registry registry =  (  Turbo Module Registry )  turbo Module Manager ;      //  Eagerly initialize  Turbo Modules     for  (  String module Name : registry . get Eager Init Module Names (  )  )  {         registry . get Module ( module Name )  ;      } } if  ( m JSI Module Package != null )  {     catalyst Instance . add JSI Modules ( m JSI Module Package . get JSI Modules ( react Context, catalyst Instance . get Java Script Context Holder (  )  )  )  ;  } if  (  React Feature Flags . eager Initialize Fabric )  {     catalyst Instance . get JSI Module ( JSI Module Type . UI Manager )  ;  } if  ( m Bridge Idle Debug Listener != null )  {     catalyst Instance . add Bridge Idle Debug Listener ( m Bridge Idle Debug Listener )  ;  } if  (  Systrace . is Tracing ( TRACE_TAG_REACT_APPS | TRACE_TAG_REACT_JS_VM_CALLS )  )  {     catalyst Instance . set Global Variable ( ""__RCT Profile Is Profiling"", ""true"" )  ;  } if  (  React Feature Flags . enable Experimental Static View Configs )  {     m Component Name Resolver Manager = new  Component Name Resolver Manager ( catalyst Instance . get Runtime Executor (  ) , new  Component Name Resolver (  )  {         @ Override         public  String [  ]  get Component Names (  )  {             return get View Manager Names (  )  . to Array ( new  String [ 0 ]  )  ;          }     } )  ;      catalyst Instance . set Global Variable ( ""__fb Static View Config"", ""true"" )  ;  }  React Marker . log Marker (  React Marker Constants . PRE_RUN_JS_BUNDLE_START )  ;   Systrace . begin Section ( TRACE_TAG_REACT_JAVA_BRIDGE, ""run JS Bundle"" )  ;  catalyst Instance . run JS Bundle (  )  ;   Systrace . end Section ( TRACE_TAG_REACT_JAVA_BRIDGE )  ;  return react Context ; }"
2502,"public void selection Mode (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . selection Mode (  )  ; "" )  ; }"
2503,"public  Transport Factory new Factory (  String backend Name ) { return new  Transport Factory Impl ( get Supported Encodings ( null ) ,  Transport Context . builder (  )  . set Backend Name ( backend Name )  . build (  ) , this )  ; }"
2504,"public com . anychart . charts .  Venn bottom (  Number bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", bottom )  )  ;  return this ; }"
2505,public int write Annotation Set (  Annotation Set annotation Set ) { int off = data . position (  )  ;  write Int ( annotation Set . annotation Offsets . length )  ;  for  ( int annotation Offset : annotation Set . annotation Offsets )  {     write Int ( annotation Offset )  ;  } return off ; }
2506,"static  Type Spec Data Holder generate Constructor (  Spec Model spec Model ) { final  Method Spec .  Builder constructor Builder =  Method Spec . constructor Builder (  )  . add Statement ( ""super ( $S ) "", spec Model . get Component Name (  )  )  ;  if  ( spec Model . has Injected Dependencies (  )  )  {     final  Method Spec di Constructor = spec Model . get Dependency Injection Helper (  )  . generate Constructor ( spec Model )  ;      constructor Builder . add Annotations ( di Constructor . annotations )  . add Code ( di Constructor . code )  . add Modifiers ( di Constructor . modifiers )  . add Parameters ( di Constructor . parameters )  ;  } else {     constructor Builder . add Modifiers (  Modifier . PRIVATE )  ;  } return  Type Spec Data Holder . new Builder (  )  . add Method ( constructor Builder . build (  )  )  . build (  )  ; }"
2507,"public com . anychart . core . ui .  Timeline baseline Bar Anchor ( com . anychart . enums .  Anchor value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . baseline Bar Anchor ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
2508,"public static  Pair< Integer,  Integer> parse Aac Audio Specific Config (  Parsable Bit Array bit Array, boolean force Read To End )  throws  Parser Exception{ int audio Object Type = get Aac Audio Object Type ( bit Array )  ;  int sample Rate = get Aac Sampling Frequency ( bit Array )  ;  int channel Configuration = bit Array . read Bits ( 4 )  ;  if  ( audio Object Type == AUDIO_OBJECT_TYPE_SBR || audio Object Type == AUDIO_OBJECT_TYPE_PS )  {     //  For an AAC bitstream using spectral band replication  ( SBR )  or parametric stereo  ( PS )  with     // explicit signaling, we return the extension sampling frequency as the sample rate of the     // content ;  this is identical to the sample rate of the decoded output but may differ from     // the sample rate set above .      //  Use the extension Sampling Frequency Index .      sample Rate = get Aac Sampling Frequency ( bit Array )  ;      audio Object Type = get Aac Audio Object Type ( bit Array )  ;      if  ( audio Object Type == AUDIO_OBJECT_TYPE_ER_BSAC )  {         //  Use the extension Channel Configuration .          channel Configuration = bit Array . read Bits ( 4 )  ;      } } if  ( force Read To End )  {     switch ( audio Object Type )  {         case 1:         case 2:         case 3:         case 4:         case 6:         case 7:         case 17:         case 19:         case 20:         case 21:         case 22:         case 23:             parse Ga Specific Config ( bit Array, audio Object Type, channel Configuration )  ;              break ;          default:             throw new  Parser Exception ( "" Unsupported audio object type: "" + audio Object Type )  ;      }     switch ( audio Object Type )  {         case 17:         case 19:         case 20:         case 21:         case 22:         case 23:             int ep Config = bit Array . read Bits ( 2 )  ;              if  ( ep Config == 2 || ep Config == 3 )  {                 throw new  Parser Exception ( "" Unsupported ep Config: "" + ep Config )  ;              }             break ;      } } //  For supported containers, bits_to_decode (  )  is always 0 .  int channel Count = AUDIO_SPECIFIC_CONFIG_CHANNEL_COUNT_TABLE [ channel Configuration ]  ;   Assertions . check Argument ( channel Count != AUDIO_SPECIFIC_CONFIG_CHANNEL_CONFIGURATION_INVALID )  ;  return  Pair . create ( sample Rate, channel Count )  ; }"
2509,"public  String to String (  ) {  String indent = ""        "" ;  return indent + "" format: "" + get Format (  )  + "" length: "" + get Length (  )  + "" language: "" + get Language (  )  + ""\n"" ; }"
2510,"public void fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . fill (  )  ; "" )  ; }"
2511,public void on Restore Instance State (  Parcelable state ) { if  ( is In Edit Mode )      return ;  if  ( ! ( state instanceof  Mosby Saved State )  )  {     delegate Callback . super On Restore Instance State ( state )  ;      return ;  }  Mosby Saved State saved State =  (  Mosby Saved State )  state ;  restore Saved State ( saved State )  ;  delegate Callback . super On Restore Instance State ( saved State . get Super State (  )  )  ; }
2512,public static void initialize (  Context context ) {  Drawee Styleable Callback Impl drawee Styleable Callback = new  Drawee Styleable Callback Impl ( context )  ;   Simple Drawee View . set Drawee Styleable Callback ( drawee Styleable Callback )  ;   Generic Drawee Hierarchy Inflater . set Drawee Styleable Callback ( drawee Styleable Callback )  ; }
2513,"int read In Float Array ( float [  ]  audio Data, int offset In Floats, int size In Floats, boolean is Blocking ) { return size In Floats ; }"
2514,"public void set Toolbar Crop Drawable ( @ Drawable Res int drawable ) { m Option Bundle . put Int ( EXTRA_UCROP_WIDGET_CROP_DRAWABLE, drawable )  ; }"
2515,"public static  Arg from (  Object object ) { if  ( object instanceof  String )  {     return  String Arg . of (  (  String )  object )  ;  } else if  ( object instanceof  Integer )  {     return  String Arg . of ( object . to String (  )  )  ;  } else if  ( object instanceof  Command Line Item )  {     return  String Arg . of (  Command Line Item . expand To Command Line ( object )  )  ;  } else if  ( object instanceof  Artifact )  {      Artifact artifact =  (  Artifact )  object ;      if  ( !artifact . is Bound (  )  )  {         throw new  Illegal Argument Exception (  String . format ( "" Artifact %s was not bound"", artifact )  )  ;      }     return  Source Path Arg . of ( artifact . as Bound (  )  . get Source Path (  )  )  ;  } else {     throw new  Illegal Argument Exception (  String . format ( "" Invalid command line argument %s provided"", object )  )  ;  }}"
2516,"public com . anychart . graphics . vector .  Hatch Fill parent (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . parent (  )  ; "" )  ;  return this ; }"
2517,"public com . anychart . data . treeview .  Data Item remove (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . remove (  )  ; "" )  ;  return this ; }"
2518,"public void compute Axis ( float y Min, float y Max, boolean inverted ) { // zoom / contentrect bounds )  if  ( m View Port Handler . content Height (  )  > 10 && !m View Port Handler . is Fully Zoomed Out X (  )  )  {     MP Point D p1 = m Trans . get Values By Touch Point ( m View Port Handler . content Left (  ) , m View Port Handler . content Top (  )  )  ;      MP Point D p2 = m Trans . get Values By Touch Point ( m View Port Handler . content Right (  ) , m View Port Handler . content Top (  )  )  ;      if  ( !inverted )  {         y Min =  ( float )  p1 . x ;          y Max =  ( float )  p2 . x ;      } else {         y Min =  ( float )  p2 . x ;          y Max =  ( float )  p1 . x ;      }     MP Point D . recycle Instance ( p1 )  ;      MP Point D . recycle Instance ( p2 )  ;  } compute Axis Values ( y Min, y Max )  ; }"
2519,"Unconfigured Build Target parse (  String build Target Name, @ Nullable  Base Name build Target Base Name, boolean allow Wild Cards,  Cell Name Resolver cell Name Resolver ) { if  ( build Target Name . ends With ( BUILD_RULE_SEPARATOR )  && !allow Wild Cards )  {     throw new  Build Target Parse Exception (  String . format ( ""%s cannot end with a colon"", build Target Name )  )  ;  }  Optional< String> given Cell Name =  Optional . empty (  )  ;   String target After Cell = build Target Name ;  if  ( build Target Name . contains ( BUILD_RULE_PREFIX )  && !build Target Name . starts With ( BUILD_RULE_PREFIX )  )  {     int slash Index = build Target Name . index Of ( BUILD_RULE_PREFIX )  ;      // in order to support  Skylark way of referencing repositories but also preserve backwards     // compatibility, the '@' is simply ignored if it's present     int repo Name Start Index =  ( build Target Name . char At ( 0 )  == '@' )  ? 1 : 0 ;      given Cell Name =  Optional . of ( build Target Name . substring ( repo Name Start Index, slash Index )  )  ;      target After Cell = build Target Name . substring ( slash Index )  ;  } if  ( given Cell Name . is Present (  )  && given Cell Name . get (  )  . is Empty (  )  )  {     throw new  Build Target Parse Exception ( "" Cell name must not be empty . "" )  ;  }  List< String> parts = BUILD_RULE_SEPARATOR_SPLITTER . split To List ( target After Cell )  ;  if  ( parts . size (  )  != 2 )  {     throw new  Build Target Parse Exception (  String . format ( ""%s must contain exactly one colon  ( found %d ) "", build Target Name, parts . size (  )  - 1 )  )  ;  } try {      Canonical Cell Name canonical Cell Name = cell Name Resolver . get Name ( given Cell Name )  ;       Base Name base Name ;      if  ( parts . get ( 0 )  . is Empty (  )  )  {         if  ( build Target Base Name == null )  {             throw new  Human Readable Exception ( ""relative path is not allowed"" )  ;          }         base Name = build Target Base Name ;      } else {         try {             base Name =  Base Name . of ( parts . get ( 0 )  )  ;          } catch  (  Exception e )  {             throw new  Human Readable Exception ( ""incorrect base name: "" + parts . get ( 0 )  )  ;          }     }      String short Name = parts . get ( 1 )  ;       Iterable< String> flavor Names = new  Hash Set<> (  )  ;      int hash Index = short Name . index Of ( '#' )  ;      if  ( hash Index != -1 && hash Index < short Name . length (  )  )  {         flavor Names = flavor Parser . parse Flavor String ( short Name . substring ( hash Index + 1 )  )  ;          short Name = short Name . substring ( 0, hash Index )  ;      }     //  Set the cell path correctly .   Because the cell Names comes from the owning cell we can     // be sure that if this doesn't throw an exception the target cell is visible to the     // owning cell .       Unflavored Build Target unflavored Build Target =  Unflavored Build Target . of ( canonical Cell Name, base Name, short Name )  ;       Immutable Sorted Set< Flavor> flavors =  Rich Stream . from ( flavor Names )  . map (  Internal Flavor::of )  . collect (  Immutable Sorted Set . to Immutable Sorted Set (  Flavor Set . FLAVOR_ORDERING )  )  ;      return  Unconfigured Build Target . of ( unflavored Build Target,  Flavor Set . copy Of ( flavors )  )  ;  } catch  (  Human Readable Exception e )  {     throw new  Build Target Parse Exception ( e,  String . format ( "" When parsing %s: %s . "", build Target Name, e . get Human Readable Error Message (  )  )  )  ;  } catch  (  Exception e )  {     throw new  Buck Unchecked Execution Exception ( e, "" When parsing %s . "", build Target Name )  ;  }}"
2520,"public static synchronized void clear Disk Cache (  Context context ) { try {      Agent Web Utils . clear Cache Folder ( new  File ( get Cache Path ( context )  ) , 0 )  ;       String path = get External Cache Path ( context )  ;      if  ( ! Text Utils . is Empty ( path )  )  {          File m File = new  File ( path )  ;           Agent Web Utils . clear Cache Folder ( m File, 0 )  ;      } } catch  (  Throwable throwable )  {     if  (  Log Utils . is Debug (  )  )  {         throwable . print Stack Trace (  )  ;      } }}"
2521,public  Builder set Default Font Path (  String default Font Asset Path ) { this . is Font Set = ! Text Utils . is Empty ( default Font Asset Path )  ;  this . font Asset Path = default Font Asset Path ;  return this ; }
2522,"public com . anychart . graphics . vector .  Unmanaged Layer remove (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . remove (  )  ; "" )  ;  return this ; }"
2523,"public void on Destroy (  ) { if  ( DEBUG )       Log . d ( TAG, "" >  Android Live Wallpaper Service - on Destroy (  )  "" + hash Code (  )  )  ;   Log . i ( TAG, ""service destroyed"" )  ;  // can call engine . on Surface Destroyed, must be before bellow code: super . on Destroy (  )  ;  if  ( app != null )  {     app . on Destroy (  )  ;      app = null ;      view = null ;  }}"
2524,public int get Legend Height (  ) { return m Legend Height ; }
2525,"public com . anychart . scales .  Logarithmic comparison Mode ( com . anychart . enums .  Scale Comparison Mode mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . comparison Mode ( %s )  ; "",  ( mode != null )  ? mode . get Js Base (  )  : null )  )  ;  return this ; }"
2526,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
2527,public  Remote Add Command remote Add (  ) { return new  Remote Add Command ( repo )  ; }
2528,public int get Value (  ) { return value ; }
2529,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
2530,public  Drop In Request mask Security Code ( boolean mask Security Code ) { m Mask Security Code = mask Security Code ;  return this ; }
2531,"public com . anychart . charts .  Gantt min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
2532,"public com . anychart . core .  State Settings hovered (  ) { return new com . anychart . core .  State Settings ( js Base + "" . hovered (  ) "" )  ; }"
2533,"public  Byte Buffer get Raw String ( int i ) { int s = get Start ( i )  ;  int e = get End ( i )  ;  if  ( e > 0 && content [ e - 1 ]  == '\n' )  {     e-- ;  } return  Byte Buffer . wrap ( content, s, e - s )  ; }"
2534,"public void add Dash ( float [  ]  dashary, float phase ) { PDF Change Stroke Cmd sc = new PDF Change Stroke Cmd (  )  ;  sc . set Dash ( dashary, phase )  ;  add Command ( sc )  ; }"
2535,"public static  String format Float Attribute ( double value ) { if  ( value !=  ( int )  value )  {     //$NON-NLS-1$     return  String . format (  (  Locale )  null, ""% . 2f"", value )  ;  } else {     return  Integer . to String (  ( int )  value )  ;  }}"
2536,public byte get Major Version (  ) { return MAJOR_VERSION ; }
2537,"protected synchronized void drop View (  View view ) { if  ( DEBUG_MODE )  {     F Log . d ( TAG, ""drop View [ %d ] "",  ( view != null ? view . get Id (  )  : -1 )  )  ;  }  Ui Thread Util . assert On Ui Thread (  )  ;  if  ( view == null )  {     //  Ignore this drop operation when view is null .      return ;  } if  ( m Tags To View Managers . get ( view . get Id (  )  )  == null )  {     // execution )  .   Ignore this drop operation .      return ;  } if  ( !m Root Tags . get ( view . get Id (  )  )  )  {     //  For non-root views we notify viewmanager with {@link  View Manager#on Drop Instance}     resolve View Manager ( view . get Id (  )  )  . on Drop View Instance ( view )  ;  }  View Manager view Manager = m Tags To View Managers . get ( view . get Id (  )  )  ;  if  ( view instanceof  View Group && view Manager instanceof  View Group Manager )  {      View Group view Group =  (  View Group )  view ;       View Group Manager view Group Manager =  (  View Group Manager )  view Manager ;      for  ( int i = view Group Manager . get Child Count ( view Group )  - 1 ;  i >= 0 ;  i-- )  {          View child = view Group Manager . get Child At ( view Group, i )  ;          if  ( child == null )  {             F Log . e ( TAG, "" Unable to drop null child view"" )  ;          } else if  ( m Tags To Views . get ( child . get Id (  )  )  != null )  {             drop View ( child )  ;          }     }     view Group Manager . remove All Views ( view Group )  ;  } m Tags To Views . remove ( view . get Id (  )  )  ;  m Tags To View Managers . remove ( view . get Id (  )  )  ; }"
2538,public  Builder min Time Between Crashes Ms ( int min Time Between Crashes Ms ) { config . min Time Between Crashes Ms = min Time Between Crashes Ms ;  return this ; }
2539,public boolean is Allow Thin (  ) { return allow Thin ; }
2540,"public com . anychart . core . annotations .  Horizontal Line stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
2541,"public static  View Tree Observer .  On Global Layout Listener attach ( final  Activity activity, I Panel Height Target target,  On Keyboard Showing Listener lis ) { final  View Group content View = activity . find View By Id ( android . R . id . content )  ;  final boolean is Full Screen =  View Util . is Full Screen ( activity )  ;  final boolean is Translucent Status =  View Util . is Translucent Status ( activity )  ;  final boolean is Fit System Windows =  View Util . is Fits System Windows ( activity )  ;  // get the screen height .  final  Display display = activity . get Window Manager (  )  . get Default Display (  )  ;  final int screen Height ;  if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . HONEYCOMB_MR2 )  {     final  Point screen Size = new  Point (  )  ;      display . get Size ( screen Size )  ;      screen Height = screen Size . y ;  } else {     //noinspection deprecation     screen Height = display . get Height (  )  ;  }  View Tree Observer .  On Global Layout Listener global Layout Listener = new  Keyboard Status Listener ( is Full Screen, is Translucent Status, is Fit System Windows, content View, target, lis, screen Height )  ;  content View . get View Tree Observer (  )  . add On Global Layout Listener ( global Layout Listener )  ;  return global Layout Listener ; }"
2542,"public com . anychart . core . lineargauge . pointers .  Thermometer name (  String name ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . name ( %s )  ; "", wrap Quotes ( name )  )  )  ;  return this ; }"
2543,"public boolean on Measure ( int width Measure Spec, int height Measure Spec, int [  ]  measure Output ) { int width =  Measure Spec . get Size ( width Measure Spec )  ;  int height =  Measure Spec . get Size ( height Measure Spec )  ;  if  (  Measure Spec . get Mode ( width Measure Spec )  ==  Measure Spec . EXACTLY &&  Measure Spec . get Mode ( height Measure Spec )  ==  Measure Spec . EXACTLY )  {     //  If the measurements are exact, postpone  Layout State calculation from measure to layout .      //  This is part of the fix for android's double measure bug .   Doing this means that if we get     // remeasured with different exact measurements, we don't compute two layouts .      m Do Measure In Layout = true ;      measure Output [ 0 ]  = width ;      measure Output [ 1 ]  = height ;      return true ;  } if  ( m Render State != null )  {     m Render State . measure ( width Measure Spec, height Measure Spec, measure Output )  ;      m Do Measure In Layout = false ;      return true ;  } return false ; }"
2544,public  Immutable List< Object> collect (  ) {  Immutable List .  Builder< Object> builder =  Immutable List . builder (  )  ;   Dependency Stack next = this ;  while  ( next . parent != null )  {     builder . add ( next . where )  ;      next = next . parent ;  } return builder . build (  )  ; }
2545,"public static  String insert Parameter (  Ct Class type,  String descriptor ) { if  ( descriptor . char At ( 0 )  != ' ( ' )      return descriptor ;  return "" ( "" + of ( type )  + descriptor . substring ( 1 )  ; }"
2546,public int get Reg (  ) { return reg ; }
2547,"public  Range<C> span (  Range<C> other ) { int lower Cmp = lower Bound . compare To ( other . lower Bound )  ;  int upper Cmp = upper Bound . compare To ( other . upper Bound )  ;  if  ( lower Cmp <= 0 && upper Cmp >= 0 )  {     return this ;  } else if  ( lower Cmp >= 0 && upper Cmp <= 0 )  {     return other ;  } else {      Cut<C> new Lower =  ( lower Cmp <= 0 )  ? lower Bound : other . lower Bound ;       Cut<C> new Upper =  ( upper Cmp >= 0 )  ? upper Bound : other . upper Bound ;      return create ( new Lower, new Upper )  ;  }}"
2548,protected void on Drag Start (  ) {}
2549,"public static  Stub And Response Metadata< Stub> wrap Stub To Receive Metadata (  Stub grpc Stub ) {  Atomic Reference< Metadata> initial Metadata = new  Atomic Reference<> (  )  ;   Atomic Reference< Metadata> trailing Metadata = new  Atomic Reference<> (  )  ;   Stub grpc Wrapped Stub =  Metadata Utils . capture Metadata ( grpc Stub, initial Metadata, trailing Metadata )  ;  return new  Stub And Response Metadata Impl<> ( grpc Wrapped Stub, initial Metadata, trailing Metadata )  ; }"
2550,"public com . anychart . core .  Separate Chart bounds (  Number x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
2551,"public com . anychart . core . utils .  Quarter corners (  String top Left,  Number top Right,  String bottom Right,  String bottom Left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . corners ( %s, %s, %s, %s )  ; "", wrap Quotes ( top Left ) , top Right, wrap Quotes ( bottom Right ) , wrap Quotes ( bottom Left )  )  )  ;  return this ; }"
2552,public static P Stream Provider as Last Known (  String level ) { if  (  Globals .  Location Config . use Google Service )      return new  Google Last Location Provider ( level )  ;  else     return new  Last Known Location Provider ( level )  ; }
2553,"public void get Base64 For Tag (  String uri,  Callback success,  Callback error ) { new  Get Base64 Task ( get React Application Context (  ) , uri, success, error )  . execute On Executor (  Async Task . THREAD_POOL_EXECUTOR )  ; }"
2554,"public void enable Simple Swipe Undo (  ) { if  ( m Swipe Undo Adapter == null )  {     throw new  Illegal State Exception ( ""enable Simple Swipe Undo requires a  Swipe Undo Adapter to be set as an adapter"" )  ;  } m Swipe Touch Listener = new  Swipe Undo Touch Listener ( new  Dynamic List View Wrapper ( this ) , m Swipe Undo Adapter . get Undo Callback (  )  )  ;  m Swipe Undo Adapter . set Swipe Undo Touch Listener (  (  Swipe Undo Touch Listener )  m Swipe Touch Listener )  ; }"
2555,public int get Sound ID (  String sound Name ) { return music Map . get ( sound Name )  ; }
2556,"public void put (  Push Certificate cert,  Person Ident ident ) { put ( cert, ident, null )  ; }"
2557,public  Builder set Config ( com . didiglobal . booster . aapt2 . legacy .  Resources Internal Legacy .  Config Description .  Builder builder For Value ) { if  ( config Builder_ == null )  {     config_ = builder For Value . build (  )  ;      on Changed (  )  ;  } else {     config Builder_ . set Message ( builder For Value . build (  )  )  ;  } return this ; }
2558,public void remove Builder ( int index ) { boom Button Builders . remove ( index )  ;  to Layout (  )  ; }
2559,public final  Immutable List<E> to Sorted List (  Comparator<? super E> comparator ) { return  Ordering . from ( comparator )  . immutable Sorted Copy ( get Delegate (  )  )  ; }
2560,public  Int List get Exit Predecessors (  ) { if  ( exit Predecessors == null )  {     calc Predecessors (  )  ;  } return exit Predecessors ; }
2561,"public  List<E> least Of (  Iterator<E> iterator, int k ) { check Not Null ( iterator )  ;  check Nonnegative ( k, ""k"" )  ;  if  ( k == 0 || !iterator . has Next (  )  )  {     return  Collections . empty List (  )  ;  } else if  ( k >=  Integer . MAX_VALUE / 2 )  {     // k is really large ;  just do a straightforward sorted-copy-and-sublist      Array List<E> list =  Lists . new Array List ( iterator )  ;       Collections . sort ( list, this )  ;      if  ( list . size (  )  > k )  {         list . sub List ( k, list . size (  )  )  . clear (  )  ;      }     list . trim To Size (  )  ;      return  Collections . unmodifiable List ( list )  ;  } else {      Top K Selector<E> selector =  Top K Selector . least ( k, this )  ;      selector . offer All ( iterator )  ;      return selector . top K (  )  ;  }}"
2562,public void get Joints (  Array< Joint> joints ) { joints . clear (  )  ;  joints . ensure Capacity ( this . joints . size )  ;  for  (  Iterator< Joint> iter = this . joints . values (  )  ;  iter . has Next (  )  ;   )  {     joints . add ( iter . next (  )  )  ;  }}
2563,"public com . anychart . charts .  Gantt padding (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
2564,public  String get Message (  ) { return this . message ; }
2565,public boolean set Progress ( float progress ) { return super . set Progress ( progress )  ; }
2566,"public com . anychart . charts .  Mekko padding (  String value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
2567,private static boolean has Notch At OPPO (  Context context ) { try {     return context . get Package Manager (  )  . has System Feature ( NOTCH_OPPO )  ;  } catch  (  Exception ignored )  {     return false ;  }}
2568,private void init Card Suggested (  ) {  Suggested Card card = new  Suggested Card ( get Activity (  )  )  ;   Card View card View =  (  Card View )  get Activity (  )  . find View By Id ( R . id . carddemo_suggested )  ;  card View . set Card ( card )  ; }
2569,public T3 get Value3 (  ) { return value3 ; }
2570,"public  Color set ( float r, float g, float b, float a ) { this . r = r ;  this . g = g ;  this . b = b ;  this . a = a ;  return clamp (  )  ; }"
2571,"public  Source Position make Source Posistion ( int offset ) { return new  Source Position ( source File, offset, line Numbers . pc To Line ( offset )  )  ; }"
2572,"private void init Listeners (  Object target ) {  Class target Class = target . get Class (  )  ;  while  ( target Class !=  Object . class )  {     init Listeners ( target Class, target )  ;      target Class = target Class . get Superclass (  )  ;  }}"
2573,"public com . anychart . scales .  Ordinal x Scale (  ) { return new com . anychart . scales .  Ordinal ( js Base + "" . x Scale (  ) "" )  ; }"
2574,boolean is Zero (  ) { return coefficients [ 0 ]  == 0 ; }
2575,"public  Async Operation delete (  Object entity ) { return delete ( entity, 0 )  ; }"
2576,public float get Activation Elevation (  ) { return 0f ; }
2577,"private synchronized  Path read Glyph ( int base, int offset ) {  Fl Point pt = new  Fl Point (  )  ;  // find this entry  Range r = get Index Entry ( base, offset )  ;  // create a path  Path gp = new  Path (  )  ;  // rember the start position  ( for recursive calls due to seac )  int hold = pos ;  // read the glyph itself stackptr = 0 ;  parse Glyph ( r, gp, pt )  ;  // restore the start position pos = hold ;  gp . transform ( at )  ;  return gp ; }"
2578,public synchronized void clear Unused Event Handlers (  ) { final  Iterator< String> iterator = m Event Handlers . key Set (  )  . iterator (  )  ;  while  ( iterator . has Next (  )  )  {     final  Event Handlers Wrapper event Handlers Wrapper = m Event Handlers . get ( iterator . next (  )  )  ;      if  ( event Handlers Wrapper == null || !event Handlers Wrapper . m Used In Current Tree )  {         iterator . remove (  )  ;      } else {         event Handlers Wrapper . m Used In Current Tree = false ;      } }}
2579,"public  Intent Integrator set Barcode Image Enabled ( boolean enabled ) { add Extra (  Intents .  Scan . BARCODE_IMAGE_ENABLED, enabled )  ;  return this ; }"
2580,public void do Configure ( final  List< Sax Event> event List )  throws  Joran Exception{ build Interpreter (  )  ;  // disallow simultaneous configurations of the same context synchronized  ( context . get Configuration Lock (  )  )  {     interpreter . get Event Player (  )  . play ( event List )  ;  }}
2581,private boolean is Buck Special Path (  Path path ) {  Path buck Out = project Filesystem . get Buck Paths (  )  . get Buck Out (  )  ;   Path buck Cache = project Filesystem . get Buck Paths (  )  . get Cache Dir (  )  ;  return path . starts With ( buck Out )  || path . starts With ( buck Cache )  ; }
2582,public boolean set Scroll Focus ( @ Null  Actor actor ) { if  ( scroll Focus == actor )      return true ;   Focus Event event =  Pools . obtain (  Focus Event . class )  ;  event . set Stage ( this )  ;  event . set Type (  Focus Event .  Type . scroll )  ;   Actor old Scroll Focus = scroll Focus ;  if  ( old Scroll Focus != null )  {     event . set Focused ( false )  ;      event . set Related Actor ( actor )  ;      old Scroll Focus . fire ( event )  ;  } boolean success = !event . is Cancelled (  )  ;  if  ( success )  {     scroll Focus = actor ;      if  ( actor != null )  {         event . set Focused ( true )  ;          event . set Related Actor ( old Scroll Focus )  ;          actor . fire ( event )  ;          success = !event . is Cancelled (  )  ;          if  ( !success )              scroll Focus = old Scroll Focus ;      } }  Pools . free ( event )  ;  return success ; }
2583,"public int get Span Group Index ( int adapter Position, int span Count ) { int span = 0 ;  int group = 0 ;  int position Span Size = get Span Size ( adapter Position )  ;  for  ( int i = 0 ;  i < adapter Position ;  i++ )  {     int size = get Span Size ( i )  ;      span += size ;      if  ( span == span Count )  {         span = 0 ;          group++ ;      } else if  ( span > span Count )  {         // did not fit, moving to next row / column         span = size ;          group++ ;      } } if  ( span + position Span Size > span Count )  {     group++ ;  } return group ; }"
2584,public  Node get Complete Write Data (  Path path ) { return this . visible Writes . get Complete Node ( path )  ; }
2585,"Immutable List< String> get Options (  Execution Context context,  Immutable Sorted Set< Path> build Classpath Entries ) {  Immutable List .  Builder< String> builder =  Immutable List . builder (  )  ;  if  ( output Directory != null )  {     builder . add ( DESTINATION_FLAG, filesystem . resolve ( output Directory )  . to String (  )  )  ;  } if  ( !build Classpath Entries . is Empty (  )  )  {     builder . add ( CLASSPATH_FLAG,  Joiner . on (  File . path Separator )  . join ( transform ( build Classpath Entries,  path -> filesystem . resolve ( path )  . to Absolute Path (  )  . to String (  )  )  )  )  ;  } if  ( !extra Arguments . is Empty (  )  )  {     for  (  String extra Argument : extra Arguments )  {         if  ( !extra Argument . is Empty (  )  )  {             builder . add ( extra Argument )  ;          }     } } if  ( context . get Verbosity (  )  . should Use Verbosity Flag If Available (  )  )  {     builder . add ( VERBOSE_FLAG )  ;  } return builder . build (  )  ; }"
2586,public int get Dst (  ) { return m Message . get Dst (  )  ; }
2587,"public void update Root Layout Specs ( final int surface Id, final int width Measure Spec, final int height Measure Spec, final int offset X, final int offset Y ) { if  ( ENABLE_FABRIC_LOGS )  {     F Log . d ( TAG, "" Updating  Root  Layout  Specs for  [ %d ] "", surface Id )  ;  }  Surface Mounting Manager surface Mounting Manager = m Mounting Manager . get Surface Manager ( surface Id )  ;  // TODO T83615646: make this a hard-crash in the future .  if  ( surface Mounting Manager == null )  {      React Soft Exception . log Soft Exception ( TAG, new  Illegal View Operation Exception ( "" Cannot update Root Layout Specs on surface Id that does not exist: "" + surface Id )  )  ;      return ;  }  Themed React Context react Context = surface Mounting Manager . get Context (  )  ;  boolean is RTL = false ;  boolean do Left And Right Swap In RTL = false ;  if  ( react Context != null )  {     is RTL = I18n Util . get Instance (  )  . is RTL ( react Context )  ;      do Left And Right Swap In RTL = I18n Util . get Instance (  )  . do Left And Right Swap In RTL ( react Context )  ;  } m Binding . set Constraints ( surface Id, get Min Size ( width Measure Spec ) , get Max Size ( width Measure Spec ) , get Min Size ( height Measure Spec ) , get Max Size ( height Measure Spec ) , offset X, offset Y, is RTL, do Left And Right Swap In RTL )  ; }"
2588,"private static void select In Place ( int required, double [  ]  array, int from, int to ) { // the lower value, our second one finds the upper value by looking for the next least element .  )  if  ( required == from )  {     int min = from ;      for  ( int index = from + 1 ;  index <= to ;  index++ )  {         if  ( array [ min ]  > array [ index ]  )  {             min = index ;          }     }     if  ( min != from )  {         swap ( array, min, from )  ;      }     return ;  } // required element, as long as it has more than one element .  while  ( to > from )  {     int partition Point = partition ( array, from, to )  ;      if  ( partition Point >= required )  {         to = partition Point - 1 ;      }     if  ( partition Point <= required )  {         from = partition Point + 1 ;      } }}"
2589,public void on Open ( SQ Lite Database db ) {}
2590,"public com . anychart . core . gantt . elements .  Grouping Tasks Element labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2591,private void load Groups1 (  ) { m Groups . post Value ( m Mesh Network . get Groups (  )  )  ; }
2592,"public void test Adaptive Icon_via Parameter (  ) {  Bundle data = new  Bundle (  )  ;  data . put String ( KEY_ICON, ""adaptive_icon"" )  ;  assert True ( new  Display Notification ( context, new  Notification Params ( data ) , executor )  . handle Notification (  )  )  ;   Notification n = get Single Notification (  )  ;  // check that we fallback to the default app icon, and that we don't use R .  assert Not Equals ( R . drawable . adaptive_icon, n . icon )  ; }"
2593,"public  String get Desc (  ) { return "" The monthly sales for the last 2 years  ( horizontal bar chart ) "" ; }"
2594,public final boolean is Successful (  ) { return m Status Code == 0x00 ; }
2595,"private com . google . protobuf .  Single Field Builder V3<com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration, com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Builder, com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration Or Builder> get Config Field Builder (  ) { if  ( config Builder_ == null )  {     config Builder_ = new com . google . protobuf .  Single Field Builder V3<com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration, com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Builder, com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration Or Builder> ( get Config (  ) , get Parent For Children (  ) , is Clean (  )  )  ;      config_ = null ;  } return config Builder_ ; }"
2596,public  Iterable< Geo Json Feature> get Features (  ) { return  (  Iterable< Geo Json Feature> )  super . get Features (  )  ; }
2597,"protected void set Result ( int src Code, int final Code, boolean notify ) {  Sonic Utils . log ( TAG,  Log . INFO, ""session ( "" + s Id + "" )   set Result: src Code="" + src Code + "", final Code="" + final Code + "" . "" )  ;  statistics . original Mode = src Result Code = src Code ;  statistics . final Mode = final Result Code = final Code ;  if  ( !notify )      return ;  if  ( was Notified . get (  )  )  {      Sonic Utils . log ( TAG,  Log . ERROR, ""session ( "" + s Id + "" )   set Result: notify error -> already has notified!"" )  ;  } if  ( null == diff Data Callback )  {      Sonic Utils . log ( TAG,  Log . ERROR, ""session ( "" + s Id + "" )   set Result: notify fail as web Callback is not set, please wait!"" )  ;      return ;  } if  ( this . final Result Code == SONIC_RESULT_CODE_UNKNOWN )  {      Sonic Utils . log ( TAG,  Log . ERROR, ""session ( "" + s Id + "" )   set Result: notify fail final Result Code is not set, please wait!"" )  ;      return ;  } was Notified . compare And Set ( false, true )  ;  final JSON Object json = new JSON Object (  )  ;  try {     if  ( final Result Code == SONIC_RESULT_CODE_DATA_UPDATE )  {         JSON Object pending Object = new JSON Object ( pending Diff Data )  ;          if  ( !pending Object . has ( ""local_refresh_time"" )  )  {              Sonic Utils . log ( TAG,  Log . INFO, ""session ( "" + s Id + "" )  set Result: no any updated data .  "" + pending Diff Data )  ;              pending Diff Data = """" ;              return ;          } else {             long time Delta =  System . current Time Millis (  )  - pending Object . opt Long ( ""local_refresh_time"", 0 )  ;              if  ( time Delta > 30 * 1000 )  {                  Sonic Utils . log ( TAG,  Log . ERROR, ""session ( "" + s Id + "" )  set Result: notify fail as receive js call too late, "" +  ( time Delta / 1000 . 0 )  + "" s . "" )  ;                  pending Diff Data = """" ;                  return ;              } else {                 if  (  Sonic Utils . should Log (  Log . DEBUG )  )  {                      Sonic Utils . log ( TAG,  Log . DEBUG, ""session ( "" + s Id + "" )  set Result: notify receive js call in time: "" +  ( time Delta / 1000 . 0 )  + "" s . "" )  ;                  }                 if  ( time Delta > 0 )                      json . put ( ""local_refresh_time"", time Delta )  ;              }         }         pending Object . remove ( WEB_RESPONSE_LOCAL_REFRESH_TIME )  ;          json . put ( WEB_RESPONSE_DATA, pending Object . to String (  )  )  ;      }     json . put ( WEB_RESPONSE_CODE, final Result Code )  ;      json . put ( WEB_RESPONSE_SRC_CODE, src Result Code )  ;      final JSON Object extra Json = new JSON Object (  )  ;      if  ( server != null )  {         extra Json . put ( get Custom Head Field Etag Key (  ) , server . get Response Header Field ( get Custom Head Field Etag Key (  )  )  )  ;          extra Json . put (  Sonic Session Connection . CUSTOM_HEAD_FILED_TEMPLATE_TAG, server . get Response Header Field (  Sonic Session Connection . CUSTOM_HEAD_FILED_TEMPLATE_TAG )  )  ;          extra Json . put (  Sonic Session Connection . CUSTOM_HEAD_FILED_CACHE_OFFLINE, server . get Response Header Field (  Sonic Session Connection . CUSTOM_HEAD_FILED_CACHE_OFFLINE )  )  ;      }     extra Json . put ( ""is Reload"", client Is Reload )  ;      json . put ( WEB_RESPONSE_EXTRA, extra Json )  ;  } catch  (  Throwable e )  {     e . print Stack Trace (  )  ;       Sonic Utils . log ( TAG,  Log . ERROR, ""session ( "" + s Id + "" )  set Result: notify error -> "" + e . get Message (  )  )  ;  } if  (  Sonic Utils . should Log (  Log . DEBUG )  )  {      String log Str = json . to String (  )  ;      if  ( log Str . length (  )  > 512 )  {         log Str = log Str . substring ( 0, 512 )  ;      }      Sonic Utils . log ( TAG,  Log . DEBUG, ""session ( "" + s Id + "" )  set Result: notify now call js Callback, json Str = "" + log Str )  ;  } pending Diff Data = null ;  long delta = 0 L ;  if  ( client Is Reload . get (  )  )  {     delta =  System . current Time Millis (  )  - statistics . diff Data Callback Time ;      delta = delta >= 2000 ? 0 L : delta ;  } if  ( delta > 0 L )  {     delta = 2000 L - delta ;       Sonic Engine . get Instance (  )  . get Runtime (  )  . post Task To Main Thread ( new  Runnable (  )  {         @ Override         public void run (  )  {             if  ( diff Data Callback != null )  {                 diff Data Callback . callback ( json . to String (  )  )  ;                  statistics . diff Data Callback Time =  System . current Time Millis (  )  ;              }         }     }, delta )  ;  } else {     diff Data Callback . callback ( json . to String (  )  )  ;      statistics . diff Data Callback Time =  System . current Time Millis (  )  ;  }}"
2598,public boolean has Tracking Ref Update (  ) { return tracking Ref Update != null ; }
2599,"public com . anychart . charts .  Scatter container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
2600,public  Builder clear Data (  ) { data_ = get Default Instance (  )  . get Data (  )  ;  on Changed (  )  ;  return this ; }
2601,"protected void on Get Image Error (  String cache Key,  Volley Error error ) { //  Notify the requesters that something failed via a null result .  //  Remove this request from the list of in-flight requests .   Batched Image Request request = m In Flight Requests . remove ( cache Key )  ;  if  ( request != null )  {     //  Set the error for this request     request . set Error ( error )  ;      //  Send the batched response     batch Response ( cache Key, request )  ;  }}"
2602,"public com . anychart . charts .  Cartesian margin (  Number value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
2603,public  String get String Metadata (  String name )  throws IO Exception{ if  ( info != null )  {     final PDF Object meta = info . get Dict Ref ( name )  ;      return meta != null ? meta . get Text String Value (  )  : null ;  } else {     return null ;  }}
2604,"public com . anychart . standalones .  Color Range minor Ticks (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . minor Ticks ( %s )  ; "", settings )  )  ;  return this ; }"
2605,"public  Identify prepend (  String property, boolean value ) { add To User Properties (  Constants . AMP_OP_PREPEND, property, value )  ;  return this ; }"
2606,public  Component Factory<T> get Factory (  ) { return factory ; }
2607,"static  Storage Stats Key create ( UUID storage Uuid,  String package Name,  User Handle user Handle ) { return new  Auto Value_ Shadow Storage Stats Manager_ Storage Stats Key ( storage Uuid, package Name, user Handle )  ; }"
2608,"public com . anychart . core . utils .  Margin margin (  ) { return new com . anychart . core . utils .  Margin ( js Base + "" . margin (  ) "" )  ; }"
2609,"public static  Tap Target for Toolbar Overflow (  Toolbar toolbar,  Char Sequence title, @ Nullable  Char Sequence description ) { return new  Toolbar Tap Target ( toolbar, false, title, description )  ; }"
2610,"public void full Screen (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . full Screen (  )  ; "" )  ; }"
2611,"private void update Seek Floor ( long floor Time Position, long floor Byte Position ) { this . floor Time Position = floor Time Position ;  this . floor Byte Position = floor Byte Position ;  update Next Search Byte Position (  )  ; }"
2612,public  Node get Next Sibling (  ) { return null ; }
2613,"public com . anychart . core . axismarkers .  Current Price Indicator parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
2614,"public static  Rop op If Le (  Type List types ) { return pick If ( types, IF_LEZ_INT, null, IF_LE_INT, null )  ; }"
2615,public  Char Sequence build (  ) { while  ( !stack . is Empty (  )  )  {     pop Span (  )  ;  } // TODO make immutable copy? return builder ; }
2616,"public synchronized void clear (  ) { load Queue . clear (  )  ;  while  ( !update (  )  )  { }  Object Int Map< String> dependency Count = new  Object Int Map< String> (  )  ;  while  ( asset Types . size > 0 )  {     // for each asset, figure out how often it was referenced     dependency Count . clear (  )  ;       Array< String> assets = asset Types . keys (  )  . to Array (  )  ;      for  (  String asset : assets )  {          Array< String> dependencies = asset Dependencies . get ( asset )  ;          if  ( dependencies == null )              continue ;          for  (  String dependency : dependencies )  dependency Count . get And Increment ( dependency, 0, 1 )  ;      }     // only dispose of assets that are root assets  ( not referenced )      for  (  String asset : assets )  if  ( dependency Count . get ( asset, 0 )  == 0 )          unload ( asset )  ;  } this . assets . clear (  )  ;  this . asset Types . clear (  )  ;  this . asset Dependencies . clear (  )  ;  this . loaded = 0 ;  this . to Load = 0 ;  this . peak Tasks = 0 ;  this . load Queue . clear (  )  ;  this . tasks . clear (  )  ; }"
2617,"public com . anychart . core . ui .  Labels Factory min Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . min Labels (  ) "" )  ; }"
2618,"public void right (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . right (  )  ; "" )  ; }"
2619,"public com . anychart . core . annotations .  Fibonacci Timezones top (  Number top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", top )  )  ;  return this ; }"
2620,"public static void report Method Missing Annotation (  Class<?> instance Class,  Method method ) { if  ( reported Methods . add ( method )  )  {     if  ( !should Report ( instance Class )  )  {         return ;      }      Class<?> declaring Class = method . get Declaring Class (  )  ;      LOG . debug ( "" Method %s . %s should be annotated with @ Add To Rule Key or @ Exclude From Rule Key  ( added from instance of %s )  . "", declaring Class . get Name (  ) , method . get Name (  ) , instance Class . get Name (  )  )  ;  }}"
2621,"public void include Point (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . include Point ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ; }"
2622,"protected void check (  ) { switch ( get Kind (  )  )  {     case SINGLE:          Preconditions . check Argument ( !get Local Name And Flavors (  )  . equals ( """" )  )  ;           Preconditions . check Argument ( !get Local Name And Flavors (  )  . starts With ( ""#"" )  )  ;          break ;      case PACKAGE:     case RECURSIVE:          Preconditions . check Argument ( get Local Name And Flavors (  )  . equals ( """" )  )  ;          break ;  }}"
2623,"public static  Map< String,  Psi Element> find Targets In Psi Tree (  Psi File psi File,  String name Prefix ) {  Map< String,  Psi Element> targets By Name = new  Hash Map<> (  )  ;   Psi Tree Util . find Children Of Type ( psi File,  Buck Function Trailer . class )  . for Each (  buck Function Trailer ->  Optional . of Nullable ( buck Function Trailer . get Name (  )  )  . filter (  name -> name . starts With ( name Prefix )  )  . if Present (  name -> targets By Name . put ( name, buck Function Trailer )  )  )  ;  return targets By Name ; }"
2624,"public com . anychart . core . gantt .  Data Grid Button line Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
2625,public T try Parsing Sql ( boolean try Parsing Sql ) { this . try Parsing Sql = try Parsing Sql ;  return  ( T )  this ; }
2626,"public boolean equals Identity ( @ Null  Object obj ) { if  ( obj == this )      return true ;  if  ( ! ( obj instanceof  Long Map )  )      return false ;   Long Map other =  (  Long Map )  obj ;  if  ( other . size != size )      return false ;  if  ( other . has Zero Value != has Zero Value )      return false ;  if  ( has Zero Value && zero Value != other . zero Value )      return false ;  long [  ]  key Table = this . key Table ;  V [  ]  value Table = this . value Table ;  for  ( int i = 0, n = key Table . length ;  i < n ;  i++ )  {     long key = key Table [ i ]  ;      if  ( key != 0 && value Table [ i ]  != other . get ( key,  Object Map . dummy )  )          return false ;  } return true ; }"
2627,public void set Apply Embedded Font Sizes ( boolean apply Embedded Font Sizes ) { if  ( this . apply Embedded Font Sizes == apply Embedded Font Sizes )  {     return ;  } this . apply Embedded Font Sizes = apply Embedded Font Sizes ;  //  Invalidate to trigger drawing .  invalidate (  )  ; }
2628,public  Subtitle View get Subtitle View (  ) { return subtitle View ; }
2629,public void set Delta Cache Size ( long size ) { delta Cache Size = size ; }
2630,"public com . anychart . standalones .  Title font Decoration ( com . anychart . graphics . vector . text .  Decoration value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Decoration ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
2631,"public com . anychart . standalones .  Color Range padding (  Number [  ]  padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "",  Arrays . to String ( padding )  )  )  ;  return this ; }"
2632,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
2633,"private void set Left Adapter (  ) {  Animation Adapter anim Card Array Adapter = new  Swing Left In Animation Adapter ( m Card Array Adapter )  ;  anim Card Array Adapter . set Abs List View ( m List View )  ;  m List View . set External Adapter ( anim Card Array Adapter, m Card Array Adapter )  ; }"
2634,"public static  String lookup Namespace Prefix ( @ Non Null  Node node, @ Non Null  String ns Uri ) {  String default Prefix = ANDROID_URI . equals ( ns Uri )  ? ANDROID_NS_NAME : APP_PREFIX ;  return lookup Namespace Prefix ( node, ns Uri, default Prefix, true )  ; }"
2635,"public  Model No Validation_ on Bind (  On Model Bound Listener< Model No Validation_,  Object> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
2636,"public com . anychart . core . annotations .  Triangle hatch Fill (  String hatch Fill Function ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "", wrap Quotes ( hatch Fill Function )  )  )  ;  return this ; }"
2637,"public void un Pin Web App (  String web App Id,  Response Listener< Object> listener ) {  Util . post Error ( listener,  Service Command Error . not Supported (  )  )  ; }"
2638,"public void height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . height (  )  ; "" )  ; }"
2639,"public void attach Test Specific Fixture Suffixes (  String test Class Name,  String test Name ) { test Class Fixture Suffix =  Optional . of ( FIXTURE_SUFFIX + test Class Name )  ;  test Case Fixture Suffix =  Optional . of ( test Class Fixture Suffix . get (  )  + test Name )  ; }"
2640,"public static void init Global (  Security Controller controller ) { if  ( controller == null )      throw new  Illegal Argument Exception (  )  ;  if  ( global != null )  {     throw new  Security Exception ( "" Cannot overwrite already installed global  Security Controller"" )  ;  } global = controller ; }"
2641,public boolean is Draw Inside Enabled (  ) { return m Draw Inside ; }
2642,public void set On Page Change Listener (  On Page Change Listener listener ) { m On Page Change Listener = listener ; }
2643,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
2644,public final void set Timestamp ( long timestamp ) { this . timestamp = timestamp ; }
2645,"public com . anychart . standalones .  Project Timeline row Odd Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Odd Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
2646,"public  String get Name (  ) { return "" Sales stacked bar chart"" ; }"
2647,"public static void verify Main Thread (  ) { if  (  Looper . my Looper (  )  !=  Looper . get Main Looper (  )  )  {     throw new  Illegal State Exception ( "" Expected to be called on the main thread but was "" +  Thread . current Thread (  )  . get Name (  )  )  ;  }}"
2648,"public  Differ State .  Diff Result print Diff (  Parsed Targets File original File,  Parsed Targets File new File )  throws  Max Differences Exception{  Set< String> targets In Original = original File . targets To Hash . key Set (  )  ;   Set< String> targets In New = new File . targets To Hash . key Set (  )  ;   Set< String> targets Only In Original =  Sets . difference ( targets In Original, targets In New )  ;   Set< String> targets Only In New =  Sets . difference ( targets In New, targets In Original )  ;   Set< String> targets In Both =  Sets . intersection ( targets In Original, targets In New )  ;  print Removed ( original File, targets Only In Original )  ;  print Added ( new File, targets Only In New )  ;  print Changed ( original File, new File, targets In Both )  ;  return differ State . has Changes (  )  ; }"
2649,public int get Size (  ) { if  ( m Pooled Byte Buffer Ref != null && m Pooled Byte Buffer Ref . get (  )  != null )  {     return m Pooled Byte Buffer Ref . get (  )  . size (  )  ;  } return m Stream Size ; }
2650,"public com . anychart . core . gantt . elements .  Connector Element preview Stroke ( com . anychart . graphics . vector .  Stroke value,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . preview Stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
2651,public static  Http Server Text get (  ) { return NLS . get Bundle For (  Http Server Text . class )  ; }
2652,"public com . anychart . charts .  Tree Map full Screen (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . full Screen ( %s )  ; "", enabled )  )  ;  return this ; }"
2653,"public com . anychart . core . cartesian . series .  Area3d width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
2654,public  Http Proxy Cache Server build (  ) {  Config config = build Config (  )  ;  return new  Http Proxy Cache Server ( config )  ; }
2655,"public void font Family (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Family (  )  ; "" )  ; }"
2656,public boolean is Bye Bye Before First Alive (  ) { return bye Bye Before First Alive ; }
2657,"public  List< Thread Meta Value> query Deep (  String where,  String .  .  .  selection Arg ) {  Cursor cursor = db . raw Query ( get Select Deep (  )  + where, selection Arg )  ;  return load Deep All And Close Cursor ( cursor )  ; }"
2658,public  Glide Builder set Array Pool ( @ Nullable  Array Pool array Pool ) { this . array Pool = array Pool ;  return this ; }
2659,"public static  Buffered Image get Scratch Image (  ) {  Graphics2 D g =  (  Graphics2 D )  scratch Image . get Graphics (  )  ;  g . set Composite (  Alpha Composite .  Clear )  ;  g . fill Rect ( 0, 0,  Glyph Page . MAX_GLYPH_SIZE,  Glyph Page . MAX_GLYPH_SIZE )  ;  g . set Composite (  Alpha Composite .  Src Over )  ;  g . set Color ( java . awt .  Color . white )  ;  return scratch Image ; }"
2660,public  Filter Reply get Filter Chain Decision ( E event ) { final  Filter<E> [  ]  filter Arrray = filter List . as Typed Array (  )  ;  final int len = filter Arrray . length ;  for  ( int i = 0 ;  i < len ;  i++ )  {     final  Filter Reply r = filter Arrray [ i ]  . decide ( event )  ;      if  ( r ==  Filter Reply . DENY || r ==  Filter Reply . ACCEPT )  {         return r ;      } } // no decision return  Filter Reply . NEUTRAL ; }
2661,"public static  Cache Double Utils get Instance (  ) { return get Instance (  Cache Memory Utils . get Instance (  ) ,  Cache Disk Utils . get Instance (  )  )  ; }"
2662,public void set Branch (  String branch ) { this . branch = branch ; }
2663,"public com . anychart . charts .  Sunburst bounds (  Number x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
2664,"public void remove Android Event Listener (  Android Event Listener listener ) { synchronized  ( android Event Listeners )  {     android Event Listeners . remove Value ( listener, true )  ;  }}"
2665,"public  Object get Value (  ) { if  ( value ==  Special . NULL_VALUE )      return null ;  else if  ( value ==  Special . VOID_TYPE )      throw new  Interpreter Error ( ""attempt to unwrap void type"" )  ;  else     return value ; }"
2666,public  List< String> get Userinfo Encryption Encoding Values Supported (  ) { return get ( USERINFO_ENCRYPTION_ENC_VALUES_SUPPORTED )  ; }
2667,public  Dash Path Effect get Axis Line Dash Path Effect (  ) { return m Axis Line Dash Path Effect ; }
2668,"private static  Component Tree get Or Create Component Tree (  Component Context c,  Atomic Reference< Component Tree> component Tree Ref ) {  Component Tree component Tree = component Tree Ref . get (  )  ;  if  ( component Tree == null || component Tree . is Released (  )  )  {     component Tree =  Component Tree . create ( c )  . build (  )  ;      component Tree Ref . set ( component Tree )  ;  } return component Tree ; }"
2669,"public void set Ims Registering ( int ims Registration Tech ) { for  (  Map .  Entry< Registration Callback,  Executor> entry : registration Callback Executor Map . entry Set (  )  )  {     entry . get Value (  )  . execute (  (  )  -> entry . get Key (  )  . on Registering ( ims Registration Tech )  )  ;  }}"
2670,"public com . anychart . core . annotations .  Horizontal Line right (  String right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", wrap Quotes ( right )  )  )  ;  return this ; }"
2671,"protected void handle Flow_ Data Update (  String server Rsp ) {  Sonic Utils . log ( TAG,  Log . INFO, ""session ( "" + s Id + "" )  handle Flow_ Data Update: start . "" )  ;  try {      String html String = null ;      if  (  Text Utils . is Empty ( server Rsp )  )  {         server Rsp = server . get Response Data ( true )  ;      } else {         html String = server . get Response Data ( false )  ;      }     if  (  Text Utils . is Empty ( server Rsp )  )  {          Sonic Utils . log ( TAG,  Log . ERROR, ""handle Flow_ Data Update:get Response Data error . "" )  ;          return ;      }     final  String e Tag = server . get Response Header Field ( get Custom Head Field Etag Key (  )  )  ;      final  String template Tag = server . get Response Header Field (  Sonic Session Connection . CUSTOM_HEAD_FILED_TEMPLATE_TAG )  ;       String cache Offline = server . get Response Header Field (  Sonic Session Connection . CUSTOM_HEAD_FILED_CACHE_OFFLINE )  ;      long start Time =  System . current Time Millis (  )  ;      JSON Object server Rsp Json = new JSON Object ( server Rsp )  ;      final JSON Object server Data Json = server Rsp Json . opt JSON Object ( ""data"" )  ;       String html Sha1 = server Rsp Json . opt String ( ""html-sha1"" )  ;      JSON Object diff Data Json =  Sonic Utils . get Diff Data ( id, server Data Json )  ;       Bundle diff Data Bundle = new  Bundle (  )  ;      if  ( null != diff Data Json )  {         diff Data Bundle . put String ( DATA_UPDATE_BUNDLE_PARAMS_DIFF, diff Data Json . to String (  )  )  ;      } else {          Sonic Utils . log ( TAG,  Log . ERROR, ""handle Flow_ Data Update:get Diff Data error . "" )  ;           Sonic Engine . get Instance (  )  . get Runtime (  )  . notify Error ( session Client, src Url,  Sonic Constants . ERROR_CODE_MERGE_DIFF_DATA_FAIL )  ;      }     if  (  Sonic Utils . should Log (  Log . DEBUG )  )  {          Sonic Utils . log ( TAG,  Log . DEBUG, ""handle Flow_ Data Update:get Diff Data cost "" +  (  System . current Time Millis (  )  - start Time )  + "" ms . "" )  ;      }     boolean has Sent Data Update Message = false ;      if  ( was Load Data Invoked . get (  )  )  {         if  (  Sonic Utils . should Log (  Log . INFO )  )  {              Sonic Utils . log ( TAG,  Log . INFO, ""handle Flow_ Data Update:load Data was invoked, quick notify web data update . "" )  ;          }          Message msg = main Handler . obtain Message ( CLIENT_CORE_MSG_DATA_UPDATE )  ;          if  ( !OFFLINE_MODE_STORE . equals ( cache Offline )  )  {             msg . set Data ( diff Data Bundle )  ;          }         main Handler . send Message ( msg )  ;          has Sent Data Update Message = true ;      }     start Time =  System . current Time Millis (  )  ;      if  (  Text Utils . is Empty ( html String )  )  {         html String =  Sonic Utils . build Html ( id, server Data Json, html Sha1, server Rsp . length (  )  )  ;      }     if  (  Sonic Utils . should Log (  Log . DEBUG )  )  {          Sonic Utils . log ( TAG,  Log . DEBUG, ""handle Flow_ Data Update:build Html cost "" +  (  System . current Time Millis (  )  - start Time )  + "" ms . "" )  ;      }     if  (  Text Utils . is Empty ( html String )  )  {          Sonic Engine . get Instance (  )  . get Runtime (  )  . notify Error ( session Client, src Url,  Sonic Constants . ERROR_CODE_BUILD_HTML_ERROR )  ;      }     if  ( !has Sent Data Update Message )  {         main Handler . remove Messages ( CLIENT_CORE_MSG_PRE_LOAD )  ;           Message msg = main Handler . obtain Message ( CLIENT_CORE_MSG_DATA_UPDATE )  ;          msg . obj = html String ;          main Handler . send Message ( msg )  ;      }     for  (  Weak Reference< Sonic Session Callback> ref : session Callback List )  {          Sonic Session Callback callback = ref . get (  )  ;          if  ( callback != null )  {             callback . on Session Data Updated ( server Rsp )  ;          }     }     if  ( null == diff Data Json || null == html String || ! Sonic Utils . need Save Data ( config . SUPPORT_CACHE_CONTROL, cache Offline, server . get Response Header Fields (  )  )  )  {          Sonic Utils . log ( TAG,  Log . INFO, ""session ( "" + s Id + "" )  handle Flow_ Data Update: clean session cache . "" )  ;           Sonic Utils . remove Session Cache ( id )  ;          return ;      }     switch State ( STATE_RUNNING, STATE_READY, true )  ;       Thread . yield (  )  ;      start Time =  System . current Time Millis (  )  ;       Map< String,  List< String>> headers = server . get Response Header Fields (  )  ;      for  (  Weak Reference< Sonic Session Callback> ref : session Callback List )  {          Sonic Session Callback callback = ref . get (  )  ;          if  ( callback != null )  {             callback . on Session Save Cache ( html String, null, server Data Json . to String (  )  )  ;          }     }     if  (  Sonic Utils . save Session Files ( id, html String, null, server Data Json . to String (  ) , headers )  )  {         long html Size = new  File (  Sonic File Utils . get Sonic Html Path ( id )  )  . length (  )  ;           Sonic Utils . save Sonic Data ( id, e Tag, template Tag, html Sha1, html Size, headers )  ;           Sonic Utils . log ( TAG,  Log . INFO, ""session ( "" + s Id + "" )  handle Flow_ Data Update: finish save session cache, cost "" +  (  System . current Time Millis (  )  - start Time )  + "" ms . "" )  ;      } else {          Sonic Utils . log ( TAG,  Log . ERROR, ""session ( "" + s Id + "" )  handle Flow_ Data Update: save session files fail . "" )  ;           Sonic Engine . get Instance (  )  . get Runtime (  )  . notify Error ( session Client, src Url,  Sonic Constants . ERROR_CODE_WRITE_FILE_FAIL )  ;      } } catch  (  Throwable e )  {      Sonic Utils . log ( TAG,  Log . ERROR, ""session ( "" + s Id + "" )  handle Flow_ Data Update error:"" + e . get Message (  )  )  ;  }}"
2672,public  Image View get Image View (  ) { return image ; }
2673,public static boolean is Annotation ( int flags ) { return  ( flags & ACC_ANNOTATION )  != 0 ; }
2674,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
2675,"protected int set Bitmap (  Bitmap full Image,  Rect visible Crop Hint, boolean allow Backup, int which ) { if  ( which ==  Wallpaper Manager . FLAG_LOCK )  {     lock Screen Image = full Image ;      wallpaper Info = null ;      return 1 ;  } else if  ( which ==  Wallpaper Manager . FLAG_SYSTEM )  {     home Screen Image = full Image ;      wallpaper Info = null ;      return 1 ;  } return 0 ; }"
2676,public  Repository get Repository (  ) { return db ; }
2677,"public com . anychart . charts .  Tree Map left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
2678,public void add Change Listener (  Realm Change Listener< Dynamic Realm> listener ) { add Listener ( listener )  ; }
2679,"public boolean can Be Encoded (  ) { for  (  List Iterator< String> li =  (  (  Values )  value )  . get List (  )  . list Iterator (  )  ;  li . has Next (  )  ;   )  {      Text Encoded String Null Terminated next = new  Text Encoded String Null Terminated ( identifier, frame Body, li . next (  )  )  ;      if  ( !next . can Be Encoded (  )  )  {         return false ;      } } return true ; }"
2680,public static boolean is Preprocessable Type (  Cxx Source .  Type source Type ) { return source Type ==  Cxx Source .  Type . C || source Type ==  Cxx Source .  Type . CXX || source Type ==  Cxx Source .  Type . ASSEMBLER_WITH_CPP || source Type ==  Cxx Source .  Type . OBJC || source Type ==  Cxx Source .  Type . OBJCXX || source Type ==  Cxx Source .  Type . CUDA || source Type ==  Cxx Source .  Type . HIP || source Type ==  Cxx Source .  Type . ASM_WITH_CPP || source Type ==  Cxx Source .  Type . PCM ; }
2681,"public  Maps Card set Card Radius ( float radius ) { if  ( radius <= 0 )  {      Log . e ( "" Card Radius"", "" Impossible to set  Card  Radius lower than 0!  Please  Check it"" )  ;  } else {     m Card Radius = radius ;  } return this ; }"
2682,public  Cache Data Source create Cache Data Source (  ) { return online Cache Data Source Factory . create Data Source (  )  ; }
2683,"public void min Bubble Size (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Bubble Size (  )  ; "" )  ; }"
2684,"public int add Float Info ( float f ) { return add Item ( new  Float Info ( f, num Of Items )  )  ; }"
2685,"public void delete Field (  String id ) { super . do Delete Tag Field ( new  Frame And Sub Id ( id, null )  )  ; }"
2686,public int get Max Size Of Instructions (  ) { return this . max Size Of Instructions & 0x FFFF ; }
2687,public  Builder merge Manifold Bucket ( com . facebook . buck . remoteexecution . proto .  Manifold Bucket value ) { if  ( manifold Bucket Builder_ == null )  {     if  ( manifold Bucket_ != null )  {         manifold Bucket_ = com . facebook . buck . remoteexecution . proto .  Manifold Bucket . new Builder ( manifold Bucket_ )  . merge From ( value )  . build Partial (  )  ;      } else {         manifold Bucket_ = value ;      }     on Changed (  )  ;  } else {     manifold Bucket Builder_ . merge From ( value )  ;  } return this ; }
2688,public  Throwable get Nested Exception (  ) { return get Cause (  )  ; }
2689,public static  String encrypt SHA512 To String ( final byte [  ]  data ) { return  Utils Bridge . bytes2 Hex String ( encrypt SHA512 ( data )  )  ; }
2690,"public void text Overflow (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . text Overflow (  )  ; "" )  ; }"
2691,Live Data< Boolean> is Connected To Proxy (  ) { return m Is Connected To Proxy ; }
2692,"public com . anychart . standalones .  Resource Timeline baseline Bar Height (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . baseline Bar Height ( %s )  ; "", value )  )  ;  return this ; }"
2693,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
2694,"public com . anychart . core . ui .  Labels Factory max Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . max Labels (  ) "" )  ; }"
2695,"void test Read And Write (  )  throws  Exception{ var lock = new  Reader Writer Lock (  )  ;  var reader1 = new  Reader ( "" Reader 1"", lock . read Lock (  )  )  ;  var writer1 = new  Writer ( "" Writer 1"", lock . write Lock (  )  )  ;  var execute Service =  Executors . new Fixed Thread Pool ( 2 )  ;  execute Service . submit ( reader1 )  ;  //  Let reader1 execute first  Thread . sleep ( 150 )  ;  execute Service . submit ( writer1 )  ;  execute Service . shutdown (  )  ;  try {     execute Service . await Termination ( 10,  Time Unit . SECONDS )  ;  } catch  (  Interrupted Exception e )  {     LOGGER . error ( "" Error waiting for  Executor Service shutdown"", e )  ;  } assert True ( appender . log Contains ( "" Reader 1 begin"" )  )  ;  assert True ( appender . log Contains ( "" Reader 1 finish"" )  )  ;  assert True ( appender . log Contains ( "" Writer 1 begin"" )  )  ;  assert True ( appender . log Contains ( "" Writer 1 finish"" )  )  ; }"
2696,"public  Upload Task put Bytes ( @ Non Null byte [  ]  bytes ) {  Preconditions . check Argument ( bytes != null, ""bytes cannot be null"" )  ;   Upload Task task = new  Upload Task ( this, null, bytes )  ;  task . queue (  )  ;  return task ; }"
2697,"public com . anychart . core . resource .  Logo right Stroke (  String color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right Stroke ( %s )  ; "", wrap Quotes ( color )  )  )  ;  return this ; }"
2698,public short get Flags (  ) { return this . flags ; }
2699,"public com . anychart . core . gantt .  Data Grid Button font Style ( com . anychart . graphics . vector . text .  Font Style style ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Style ( %s )  ; "",  ( style != null )  ? style . get Js Base (  )  : null )  )  ;  return this ; }"
2700,"public void set Speed ( @ Float Range ( from = 0, from Inclusive = false )  float factor ) { m Speed Factor = factor ;  m Render Thread . m Gif Info Handle . set Speed Factor ( factor )  ; }"
2701,void init (  ) {}
2702,public void set Check Conflicting ( boolean check ) { check Conflicting = check ; }
2703,"public  Query Builder<T> where Or (  Where Condition cond1,  Where Condition cond2,  Where Condition .  .  .  cond More ) { where Collector . add ( or ( cond1, cond2, cond More )  )  ;  return this ; }"
2704,"private static void add Constants (  Hash Set< Constant> result,  Register Spec spec ) { if  ( spec == null )  {     return ;  }  Local Item local = spec . get Local Item (  )  ;   Cst String name = local . get Name (  )  ;   Cst String signature = local . get Signature (  )  ;   Type type = spec . get Type (  )  ;  if  ( type !=  Type . KNOWN_NULL )  {     result . add (  Cst Type . intern ( type )  )  ;  } if  ( name != null )  {     result . add ( name )  ;  } if  ( signature != null )  {     result . add ( signature )  ;  }}"
2705,"public void handle Activity Create (  Activity activity,  Bundle saved Instance State ) { if  ( LOG )  {      Log Debug . d ( PLUGIN_TAG, ""activity create: "" + activity . get Class (  )  . get Name (  )  + "" this="" + activity . hash Code (  )  + "" taskid="" + activity . get Task Id (  )  )  ;  } if  ( activity . get Intent (  )  != null )  {     try {          Intent intent = new  Intent ( activity . get Intent (  )  )  ;          //                 String plugin Name = intent . get String Extra (  Plugin Manager . EXTRA_PLUGIN )  ;          //                 String activity Name = intent . get String Extra (  Plugin Manager . EXTRA_ACTIVITY )  ;          //                int process = intent . get Int Extra (  Plugin Manager . EXTRA_PROCESS,  Plugin Manager . PROCESS_AUTO )  ;          //                 String container = intent . get String Extra (  Plugin Manager . EXTRA_CONTAINER )  ;          //                int counter = intent . get Int Extra (  Plugin Manager . EXTRA_COUNTER, 0 )  ;           Plugin Intent ii = new  Plugin Intent ( intent )  ;           String plugin Name = ii . get Plugin (  )  ;           String activity Name = ii . get Activity (  )  ;          int process = ii . get Process (  )  ;           String container = ii . get Container (  )  ;          int counter = ii . get Counter (  )  ;          if  ( LOG )  {              Log Debug . d ( PLUGIN_TAG, ""activity create: name="" + plugin Name + "" activity="" + activity Name + "" process="" + process + "" container="" + container + "" counter="" + counter )  ;          }         // activity跑飞         if  ( ! Text Utils . equals ( activity Name, activity . get Class (  )  . get Name (  )  )  )  {             // activity=, l=             if  ( LOGR )  {                  Log Release . w ( PLUGIN_TAG, ""a . c . 1: a="" + activity Name + "" l="" + activity . get Class (  )  . get Name (  )  )  ;              }             PMF . forward ( activity, intent )  ;              return ;          }         if  ( LOG )  {              Log Debug . i ( PLUGIN_TAG, ""perfect: container="" + container + "" plugin="" + plugin Name + "" activity="" + activity Name )  ;          }     } catch  (  Throwable e )  {         if  ( LOGR )  {              Log Release . e ( PLUGIN_TAG, ""a . c . 2: exception: "" + e . get Message (  ) , e )  ;          }     } } //  Plugin Containers .  Activity State state = null ;  if  ( activity . get Component Name (  )  != null )  {     state = m Plugin Mgr . m Client . m ACM . lookup By Container ( activity . get Component Name (  )  . get Class Name (  )  )  ;  } if  ( state == null )  {     // PACM: handle Activity Create: can't found PLUGIN activity: loaded=     if  ( LOGR )  {          Log Release . e ( PLUGIN_TAG, ""a . c1: l="" + activity . get Class (  )  . get Name (  )  )  ;      }     return ;  } // 记录坑 m Plugin Mgr . m Client . m ACM . handle Create ( state . plugin, activity, state . container )  ;  // 插件进程信息登记，用于插件进程管理（例如可能用于插件进程分配/回收） try {      Plugin Process Main . get Plugin Host (  )  . reg Activity (  Plugin Manager . s Plugin Process Index, state . plugin, state . container, activity . get Class (  )  . get Name (  )  )  ;  } catch  (  Throwable e )  {     if  ( LOGR )  {          Log Release . e ( PLUGIN_TAG, ""a . c2: "" + e . get Message (  ) , e )  ;      } } // if  ( saved Instance State != null )  {     saved Instance State . set Class Loader ( activity . get Class Loader (  )  )  ;  } //  Intent intent = activity . get Intent (  )  ;  if  ( intent != null )  {     if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, ""set activity intent cl="" + activity . get Class Loader (  )  )  ;      }     intent . set Extras Class Loader ( activity . get Class Loader (  )  )  ;  } // 开始填充一些必要的属性给 Activity对象 //  Added by  Jiongxuan  Zhang  Activity Injector . inject ( activity, state . plugin, state . activity )  ; }"
2706,"public com . anychart . standalones .  Project Timeline line Marker (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Marker ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
2707,public void grant Permissions (  String .  .  .  permission Names ) { get Shadow Instrumentation (  )  . grant Permissions ( permission Names )  ; }
2708,public int get Type (  ) { return COLORSPACE_GRAY ; }
2709,"static boolean modify Target To Add Dependency (  Virtual File buck File,  String target,  String dependency ) { try {      File file = new  File ( buck File . get Path (  )  )  ;       String old Contents =  File Util . load File ( file )  ;       String new Contents = try To Add Deps To Target ( old Contents, dependency, target )  ;      if  ( old Contents . equals ( new Contents )  )  {         return false ;      }     LOG . info ( "" Updating "" + file . get Path (  )  )  ;       File Util . write To File ( file, new Contents )  ;      buck File . refresh ( false, false )  ;      return true ;  } catch  ( IO Exception e )  {     LOG . error ( "" Failed to update "" + buck File . get Path (  )  + "" target "" + target + "" to include "" + dependency, e )  ;      return false ;  }}"
2710,public  Tracking Ref Update get Tracking Ref Update (  String local Name ) { return updates . get ( local Name )  ; }
2711,public void set Line Spacing Multiplier ( float line Spacing Multiplier ) { wv_option1 . set Line Spacing Multiplier ( line Spacing Multiplier )  ;  wv_option2 . set Line Spacing Multiplier ( line Spacing Multiplier )  ;  wv_option3 . set Line Spacing Multiplier ( line Spacing Multiplier )  ; }
2712,public static P Stream Transformation sample By Interval ( long min Interval ) { return new  Sample By Interval Filter ( min Interval )  ; }
2713,"public boolean on Route Node Click ( int i ) { if  ( m Route Line . get All Step (  )  != null && m Route Line . get All Step (  )  . get ( i )  != null )  {      Log . i ( ""baidumapsdk"", "" Transit Route Overlay on Route Node Click"" )  ;  } return false ; }"
2714,private synchronized void recycle (  ) { while  ( !decoders . is Empty (  )  )  {      Bitmap Region Decoder decoder = acquire (  )  ;      decoder . recycle (  )  ;      decoders . remove ( decoder )  ;  }}
2715,"public  Object get Remote Config Value For Key (  String key ) { L . i ( "" [  Countly ]   Calling remote Config Value For Key"" )  ;  if  ( !is Initialized (  )  )  {     L . e ( "" Countly . shared Instance (  )  . init must be called before remote Config Value For Key"" )  ;      return null ;  } return remote Config (  )  . get Value For Key ( key )  ; }"
2716,"public void truncated Rect (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . truncated Rect (  )  ; "" )  ; }"
2717,"public static void read And Close Stream (  Input Stream is ) { final byte [  ]  bytes = new byte [ DEFAULT_BUFFER_SIZE ]  ;  try {     while  ( is . read ( bytes, 0, DEFAULT_BUFFER_SIZE )  != -1 )   ;  } catch  ( IO Exception ignored )  { } finally {     close Silently ( is )  ;  }}"
2718,"public com . anychart . scales .  Geo x Ticks (  String [  ]  settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Ticks ( %s )  ; "", array To String Wrap Quotes ( settings )  )  )  ;  return this ; }"
2719,private  Object write Replace (  )  throws  Object Stream Exception{ return new  Big Decimal ( value )  ; }
2720,"public static boolean is URL Allowlisted ( @ Non Null URI uri, @ Non Null  Context app Context ) {  Resources resources = app Context . get Resources (  )  ;  int resource Id = resources . get Identifier ( ""firebase_performance_whitelisted_domains"", ""array"", app Context . get Package Name (  )  )  ;  if  ( resource Id == 0 )  {     return true ;  }  Android Logger . get Instance (  )  . info ( "" Detected domain allowlist, only allowlisted domains will be measured . "" )  ;  if  ( allowlisted Domains == null )  {     allowlisted Domains = resources . get String Array ( resource Id )  ;  }  String host = uri . get Host (  )  ;  // consider them to be valid .  if  ( host == null )  {     return true ;  } for  (  String allowlisted Domain : allowlisted Domains )  {     if  ( host . contains ( allowlisted Domain )  )  {         return true ;      } } return false ; }"
2721,public void button Click_espresso (  )  throws  Exception{  Espresso Activity activity = activity Rule . get Activity (  )  ;  on View ( with Id ( R . id . button )  )  . check ( matches ( is Completely Displayed (  )  )  )  ;  on View ( with Id ( R . id . button )  )  . perform ( click (  )  )  ;  assert That ( activity . button Clicked )  . is True (  )  ; }
2722,"public  String get Email Address (  ) { int email Begin = user Id . index Of ( '<' )  ;  if  ( email Begin < 0 )  {     return null ;  } int email End = user Id . index Of ( '>', email Begin )  ;  if  ( email End < 0 )  {     return null ;  } return user Id . substring ( email Begin + 1, email End )  ; }"
2723,public void invalidate (  ) { valid = false ; }
2724,"public static  String as String (  Artifact Filesystem filesystem, boolean absolute,  Object object )  throws  Command Line Arg Exception{ if  ( object instanceof  String )  {     return  (  String )  object ;  } else if  ( object instanceof  Integer )  {     return object . to String (  )  ;  } else if  ( object instanceof  Command Line Item )  {     return  Command Line Item . expand To Command Line ( object )  ;  } else if  ( object instanceof  Artifact )  {     return absolute ? filesystem . stringify Absolute (  (  Artifact )  object )  : filesystem . stringify (  (  Artifact )  object )  ;  } else if  ( object instanceof  Output Artifact )  {     return absolute ? filesystem . stringify Absolute (  (  (  Output Artifact )  object )  . get Artifact (  )  )  : filesystem . stringify (  (  (  Output Artifact )  object )  . get Artifact (  )  )  ;  } else {     throw new  Command Line Arg Exception ( object )  ;  }}"
2725,public int get Battery Velocity (  ) { if  ( !power Connected || level == null )  {     return VELOCITY_UNPLUGGED ;  } else if  ( level < 0 . 99 )  {     return VELOCITY_CHARGING ;  } else {     return VELOCITY_FULL ;  }}
2726,"protected void release (  ) { if  ( DEBUG )       Log . i ( TAG, ""release:"" )  ;  super . release (  )  ;  if  ( m Input Surface != null )  {     m Input Surface . release (  )  ;      m Input Surface = null ;  }}"
2727,"public static  String rename (  String desc,  Map< String,  String> map ) { if  ( map == null )      return desc ;   String Buffer newdesc = new  String Buffer (  )  ;  int head = 0 ;  int i = 0 ;  for  (  ;   ;   )  {     int j = desc . index Of ( 'L', i )  ;      if  ( j < 0 )          break ;      int k = desc . index Of ( ' ; ', j )  ;      if  ( k < 0 )          break ;      i = k + 1 ;       String name = desc . substring ( j + 1, k )  ;       String name2 = map . get ( name )  ;      if  ( name2 != null )  {         newdesc . append ( desc . substring ( head, j )  )  ;          newdesc . append ( 'L' )  ;          newdesc . append ( name2 )  ;          newdesc . append ( ' ; ' )  ;          head = i ;      } } if  ( head == 0 )      return desc ;  int len = desc . length (  )  ;  if  ( head < len )      newdesc . append ( desc . substring ( head, len )  )  ;  return newdesc . to String (  )  ; }"
2728,"public  Object navigation (  Context context ) { return navigation ( context, null )  ; }"
2729,public  String get Reason (  ) { return reason ; }
2730,protected boolean is User Unlocking Or Unlocked (  User Handle handle ) { check Permissions (  )  ;   User State state = user Manager State . user State . get ( handle . get Identifier (  )  )  ;  return state ==  User State . STATE_RUNNING_UNLOCKING || state ==  User State . STATE_RUNNING_UNLOCKED ; }
2731,public  Builder code Block Text Size ( @ Px int code Text Size ) { this . code Block Text Size = code Text Size ;  return this ; }
2732,public final void is Greater Than ( int other ) { as Double . is Greater Than ( other )  ; }
2733,"public com . anychart . core .  State Settings low Hatch Fill ( com . anychart . graphics . vector .  Pattern Fill pattern Fill ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Hatch Fill ( %s )  ; "",  ( pattern Fill != null )  ? pattern Fill . get Js Base (  )  : null )  )  ;  return this ; }"
2734,private void init Card May Know (  ) { // Create a  Card  May Know Card card = new  May Know Card ( get Activity (  )  )  ;  card . set Shadow ( false )  ;  // Set card in the card View  Card View Native card View =  (  Card View Native )  get Activity (  )  . find View By Id ( R . id . carddemo_ May Know )  ;  card View . set Card ( card )  ;   May Know Card card2 = new  May Know Card ( get Activity (  )  )  ;  card2 . add Card Header ( null )  ;  card2 . set Shadow ( true )  ;   Card View Native may View2 =  (  Card View Native )  get Activity (  )  . find View By Id ( R . id . carddemo_ May Know2 )  ;  may View2 . set Card ( card2 )  ; }
2735,public  Integer get Value ( E element ) { final int index = m First List . index Of ( element )  ;  if  ( index < 0 )  {     return null ;  } return m Second List . get ( index )  ; }
2736,public static final  Standard Subject Builder assume (  ) { return ASSUME ; }
2737,"public void add Listener (  Bi Consumer< String,  Config Container> listener ) { synchronized  ( listeners )  {     listeners . add ( listener )  ;  }}"
2738,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
2739,"private static  Tile convert Bitmap (  Bitmap bitmap ) { //  Convert it into byte array  ( required for tile creation )   Byte Array Output Stream stream = new  Byte Array Output Stream (  )  ;  bitmap . compress (  Bitmap .  Compress Format . PNG, 100, stream )  ;  byte [  ]  bitmapdata = stream . to Byte Array (  )  ;  return new  Tile ( TILE_DIM, TILE_DIM, bitmapdata )  ; }"
2740,public void add List Parser ( FTP List Parser list Parser ) { synchronized  ( lock )  {     list Parsers . add ( list Parser )  ;  }}
2741,public final CHILD transition ( @ Non Null  View Property Transition .  Animator animator ) { return transition ( new  View Property Animation Factory<> ( animator )  )  ; }
2742,"public com . anychart . core . ui .  Labels Factory max Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . max Labels (  ) "" )  ; }"
2743,public static void on Fork Post (  ) { dex Path Inited . set ( false )  ; }
2744,public  Object delete Module (  String package Name ) { synchronized  ( lock )  {     //  Removes the accompanying package installed with the module     return module Infos . remove ( package Name )  ;  }}
2745,"public com . anychart . core . stock . scrollerseries .  Discrete Base allow Point Settings (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . allow Point Settings ( %s )  ; "", enabled )  )  ;  return this ; }"
2746,"public void put ( @ Non Null final  String key, final  Serializable value, final int save Time ) { m Cache Memory Utils . put ( key, value, save Time )  ;  m Cache Disk Utils . put ( key, value, save Time )  ; }"
2747,"public void test Genrules That Use Worker Macros With Concurrency (  )  throws  Exception{  Project Filesystem filesystem = workspace . get Project File System (  )  ;   Build Target target1 = workspace . new Build Target ( ""//:test4"" )  ;   Build Target target2 = workspace . new Build Target ( ""//:test5"" )  ;  workspace . run Buck Build ( target1 . get Fully Qualified Name (  ) , target2 . get Fully Qualified Name (  )  )  . assert Success (  )  ;   String contents = workspace . get File Contents (  Build Target Paths . get Gen Path ( filesystem, target1, ""%s/output . txt"" )  )  + workspace . get File Contents (  Build Target Paths . get Gen Path ( filesystem, target2, ""%s/output . txt"" )  )  ;   Immutable Set< String> process I Ds =  Immutable Set . copy Of ( contents . trim (  )  . split ( ""\\s+"" )  )  ;  assert That ( process I Ds . size (  ) ,  Matchers . equal To ( 2 )  )  ; }"
2748,private  File Info get Shard File Info (  File file ) {  File Info info =  File Info . from File ( file )  ;  if  ( info == null )  {     // file with incorrect name/extension     return null ;  }  File expected Directory = get Subdirectory ( info . resource Id )  ;  boolean is Correct = expected Directory . equals ( file . get Parent File (  )  )  ;  return is Correct ? info : null ; }
2749,"public static  Optional< Apple Simulator Profile> discover Apple Simulator Profile (  Apple Simulator apple Simulator,  Path iphonesimulator Platform Root )  throws IO Exception{  Path simulator Profile Plist Path = iphonesimulator Platform Root . resolve (  String . format ( "" Developer/ Library/ Core Simulator/ Profiles/ Device Types/%s . simdevicetype/"" + "" Contents/ Resources/profile . plist"", apple Simulator . get Name (  )  )  )  ;  LOG . debug ( "" Parsing simulator profile plist %s"", simulator Profile Plist Path )  ;  try  (  Input Stream input Stream =  Files . new Input Stream ( simulator Profile Plist Path )  )  {     //  This might return  Optional . empty (  )  if the input could not be parsed .      return  Apple Simulator Profile Parsing . parse Profile Plist Stream ( input Stream )  ;  } catch  (  File Not Found Exception |  No Such File Exception e )  {     LOG . warn ( e, "" Could not open simulator profile %s, ignoring"", simulator Profile Plist Path )  ;      return  Optional . empty (  )  ;  }}"
2750,"public void add Edge_nodes Not In Graph (  ) { assume (  )  . that ( graph Is Mutable (  )  )  . is True (  )  ;  network As Mutable Network . add Node ( N1 )  ;  assert True ( network As Mutable Network . add Edge ( N1, N5, E15 )  )  ;  assert True ( network As Mutable Network . add Edge ( N4, N1, E41 )  )  ;  assert True ( network As Mutable Network . add Edge ( N2, N3, E23 )  )  ;  assert That ( network . nodes (  )  )  . contains Exactly ( N1, N5, N4, N2, N3 )  ;  assert That ( network . edges (  )  )  . contains Exactly ( E15, E41, E23 )  ;  assert That ( network . edges Connecting ( N1, N5 )  )  . contains Exactly ( E15 )  ;  assert That ( network . edges Connecting ( N4, N1 )  )  . contains Exactly ( E41 )  ;  assert That ( network . edges Connecting ( N2, N3 )  )  . contains Exactly ( E23 )  ;  //  Direction of the added edge is correctly handled assert That ( network . edges Connecting ( N3, N2 )  )  . is Empty (  )  ; }"
2751,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
2752,public short get Short (  String field Name ) { return  ( short )  get Long ( field Name )  ; }
2753,"public com . anychart . core . stock . scrollerseries .  Spline Area min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
2754,"public com . anychart . charts .  Pie hatch Fill (  String hatch Fill Function ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "", wrap Quotes ( hatch Fill Function )  )  )  ;  return this ; }"
2755,"protected void on Active (  ) { super . on Active (  )  ;  T object = get Value (  )  ;  if  ( object != null &&  Realm Object . is Valid ( object )  )  {      Realm Object . add Change Listener ( object, listener )  ;  }}"
2756,"public com . anychart . charts .  Cartesian x Zoom (  Number settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Zoom ( %s )  ; "", settings )  )  ;  return this ; }"
2757,"public static void check State ( boolean expression, @ Nullable @ Format String  String error Message Template, @ Nullable  Object .  .  .  error Message Args ) { if  ( !expression )  {     throw new  Bad Input Exception (  String . format ( error Message Template, error Message Args )  )  ;  }}"
2758,public boolean is Use Write Replace (  ) { return factory Write Replace ; }
2759,public  Renderable Sorter get Renderable Sorter (  ) { return sorter ; }
2760,public int read Little Endian Int (  ) { return  ( data [ position++ ]  & 0x FF )  |  ( data [ position++ ]  & 0x FF )  << 8 |  ( data [ position++ ]  & 0x FF )  << 16 |  ( data [ position++ ]  & 0x FF )  << 24 ; }
2761,"public void notify Group Item Range Removed ( int group Position Start, int item Count ) { m Wrapper Adapter . notify Group Item Range Removed ( group Position Start, item Count )  ; }"
2762,public static long get Component Applied State Update Count (  ) { return s Component Applied State Update Count . get (  )  ; }
2763,public  Glide Builder set Resize Executor ( @ Nullable  Glide Executor service ) { return set Source Executor ( service )  ; }
2764,public void set Foreground Resource ( int drawable Res Id ) { set Foreground ( get Context (  )  . get Resources (  )  . get Drawable ( drawable Res Id )  )  ; }
2765,"public com . anychart . math .  Rect get Pixel Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . get Pixel Bounds (  ) "" )  ; }"
2766,public static  Rotation Options auto Rotate At Render Time (  ) { return ROTATION_OPTIONS_ROTATE_AT_RENDER_TIME ; }
2767,"public com . anychart . core .  State Settings normal (  ) { return new com . anychart . core .  State Settings ( js Base + "" . normal (  ) "" )  ; }"
2768,"private static int calculate Number Of Rows ( int m, int k, int c ) { int r =  (  ( m + 1 + k )  / c )  + 1 ;  if  ( c * r >=  ( m + 1 + k + c )  )  {     r-- ;  } return r ; }"
2769,public void set Default Image Drawable ( @ Nullable  Drawable default Image Drawable ) { m Default Image Id = 0 ;  m Default Image Bitmap = null ;  m Default Image Drawable = default Image Drawable ; }
2770,"public final void set Data Without Diff ( @ Nullable  List<QMUI Section<H, T>> data, boolean only Mutate State, boolean check Lock ) { m Loading Before Sections . clear (  )  ;  m Loading After Sections . clear (  )  ;  m Current Data . clear (  )  ;  if  ( data != null )  {     m Current Data . add All ( data )  ;  } if  ( check Lock && !m Current Data . is Empty (  )  )  {     lock ( m Current Data . get ( 0 )  )  ;  } // only used to generate index info QMUI Section Diff Callback callback = create Diff Callback ( m Backup Data, m Current Data )  ;  callback . generate Index ( m Remove Section Title If Only One Section )  ;  callback . clone New Index To ( m Section Index, m Item Index )  ;  notify Data Set Changed (  )  ;  m Backup Data . clear (  )  ;  for  ( QMUI Section<H, T> section : m Current Data )  {     m Backup Data . add ( only Mutate State ? section . mutate (  )  : section . clone For Diff (  )  )  ;  }}"
2771,"public void disconnect (  ) { // finalized .   (  This logs a warning on  Android .  )  try {      Buffered Input Stream buffered Input Stream = connection Impl . get Response Stream (  )  ;      if  ( buffered Input Stream != null )  {         buffered Input Stream . close (  )  ;      } } catch  (  Throwable e )  {      Sonic Utils . log ( TAG,  Log . ERROR, ""session ( "" + session . s Id + "" )  server disconnect error:"" + e . get Message (  )  + "" . "" )  ;  } connection Impl . disconnect (  )  ; }"
2772,public final void dispose Body (  ) { buffer = null ; }
2773,"public void id (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . id (  )  ; "" )  ; }"
2774,public  Generic Drawee Hierarchy Builder set Retry Image ( @ Nullable  Drawable retry Drawable ) { m Retry Image = retry Drawable ;  return this ; }
2775,"public  Converter< Response Body, T> response Body Converter (  Type type,  Annotation [  ]  annotations ) { return next Response Body Converter ( null, type, annotations )  ; }"
2776,"public void max Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Width (  )  ; "" )  ; }"
2777,"public void get Range By Value (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Range By Value ( %s )  ; "", value )  )  ; }"
2778,"public void test Array Elements Are Arrays (  ) {  Object [  ]  string Arrays = { new  String [  ]  { ""test1"", ""test2"" }, new  String [  ]  { ""test3"", ""test4"" } } ;  assert Equals ( "" [  [ \""test1\"",\""test2\"" ] , [ \""test3\"",\""test4\"" ]  ] "", new  Gson (  )  . to Json ( string Arrays )  )  ; }"
2779,"public void remove Views In Layout ( int start, int count ) { throw new  Unsupported Operation Exception ( "" Removing  Views manually within  Litho Views is not supported"" )  ; }"
2780,"public com . anychart . core . stock . scrollerseries . OHLC bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
2781,"public  Collection< String> get Conflicting Names (  String name )  throws IO Exception{  Map< String,  Ref> all Refs = get Refs ( ALL )  ;  //  Cannot be nested within an existing reference .  int last Slash = name . last Index Of ( '/' )  ;  while  ( 0 < last Slash )  {      String needle = name . substring ( 0, last Slash )  ;      if  ( all Refs . contains Key ( needle )  )          return  Collections . singleton List ( needle )  ;      last Slash = name . last Index Of ( '/', last Slash - 1 )  ;  }  List< String> conflicting = new  Array List<> (  )  ;  //  Cannot be the container of an existing reference .   String prefix = name + '/' ;  for  (  String existing : all Refs . key Set (  )  )  if  ( existing . starts With ( prefix )  )      conflicting . add ( existing )  ;  return conflicting ; }"
2782,public  Builder clear Job Id (  ) { job Id_ = get Default Instance (  )  . get Job Id (  )  ;  on Changed (  )  ;  return this ; }
2783,protected void pick Single Image (  ) { image Picker = prepare Image Picker (  )  ;  image Picker . pick Image (  )  ;  picker Type =  Picker . PICK_IMAGE_DEVICE ; }
2784,"public void check Illegal Binding (  Binding binding,  Scope scope ) {  Class<?> clazz ;  switch ( binding . get Mode (  )  )  {     case SIMPLE:         clazz = binding . get Key (  )  ;          break ;      case CLASS:         clazz = binding . get Implementation Class (  )  ;          break ;      case PROVIDER_CLASS:         clazz = binding . get Provider Class (  )  ;          break ;      default:         return ;  } for  (  Annotation annotation : clazz . get Annotations (  )  )  {      Class<? extends  Annotation> annotation Type = annotation . annotation Type (  )  ;      if  ( annotation Type . is Annotation Present ( javax . inject .  Scope . class )  )  {         if  ( !scope . is Scope Annotation Supported ( annotation Type )  )  {             throw new  Illegal Binding Exception ( format ( "" Class %s cannot be scoped . "" + ""  It has a scope annotation: %s that is not supported by the current scope: %s"", clazz . get Name (  ) , annotation Type . get Name (  ) , scope . get Name (  )  )  )  ;          }     } }}"
2785,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
2786,public boolean contains Value (  Object value ) { if  ( value == null )      return contains Null Value (  )  ;   Entry [  ]  tab = table ;  for  ( int i = 0 ;  i < tab . length ;  i++ )  for  (  Entry e = tab [ i ]  ;  e != null ;  e = e . next )  if  ( value . equals ( e . value )  )      return true ;  return false ; }
2787,"private  Input Stream get Test Webp Input Stream (  ) { return get Test Image Input Stream ( ""redsquare . webp"" )  ; }"
2788,public  List< Trace> get Current Traces (  ) { return trace Buffer . get Traces (  )  ; }
2789,"public void fill Triangle ( int x1, int y1, int x2, int y2, int x3, int y3 ) { pixmap . fill Triangle ( x1, y1, x2, y2, x3, y3, color )  ; }"
2790,public void set GL Render Mode ( int mode ) { m Mode = mode ;  if  ( m Texture View != null )  {     m Texture View . set GL Render Mode ( mode )  ;  }}
2791,"public void advance (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . advance (  )  ; "" )  ; }"
2792,public void set Mount Content Group (  Output Units Affinity Group< Object> mount Content Group ) { set Mount Content Group Inner ( mount Content Group )  ;  set Value Inner ( get Value (  )  )  ; }
2793,public int hash Code (  ) { return notification Configuration != null ? notification Configuration . hash Code (  )  : 0 ; }
2794,"public com . anychart . standalones .  Project Timeline base Bar Offset (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . base Bar Offset ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
2795,"public static boolean is Scope Intersects ( final  Set< String> scopes, final  Set< String> other Scopes ) { for  ( final  String scope : other Scopes )  {     if  ( scopes . contains ( scope )  )  {         return true ;      } } return false ; }"
2796,"public  Char Sequence convert To String (  Cursor cursor ) { if  ( cursor == null )  {     return null ;  }  String query = get Column String ( cursor,  Search Manager . SUGGEST_COLUMN_QUERY )  ;  if  ( query != null )  {     return query ;  } if  ( m Searchable . should Rewrite Query From Data (  )  )  {      String data = get Column String ( cursor,  Search Manager . SUGGEST_COLUMN_INTENT_DATA )  ;      if  ( data != null )  {         return data ;      } } if  ( m Searchable . should Rewrite Query From Text (  )  )  {      String text1 = get Column String ( cursor,  Search Manager . SUGGEST_COLUMN_TEXT_1 )  ;      if  ( text1 != null )  {         return text1 ;      } } return null ; }"
2797,public static  Same Thread Scheduled Executor Service same Thread Scheduled Executor (  ) { return new  Same Thread Scheduled Executor Service (  )  ; }
2798,public void release (  ) { cancel Pending Adjust Tab Mode (  )  ;  cancel Pending Set Tabs From Pager Adapter (  )  ;  cancel Pending Update Scroll Position (  )  ;  if  ( m Internal On Adapter Change Listener != null )  {     m View Pager . remove On Adapter Change Listener ( m Internal On Adapter Change Listener )  ;      m Internal On Adapter Change Listener = null ;  } if  ( m Internal Data Set Observer != null )  {     m View Pager . get Adapter (  )  . unregister Data Set Observer ( m Internal Data Set Observer )  ;      m Internal Data Set Observer = null ;  } if  ( m Internal On Tab Selected Listener != null )  {     m Tab Layout . remove On Tab Selected Listener ( m Internal On Tab Selected Listener )  ;      m Internal On Tab Selected Listener = null ;  } if  ( m Internal Tab Layout On Page Change Listener != null )  {     m View Pager . remove On Page Change Listener ( m Internal Tab Layout On Page Change Listener )  ;      m Internal Tab Layout On Page Change Listener = null ;  } m User On Tab Selected Listener = null ;  m View Pager = null ;  m Tab Layout = null ; }
2799,"public  Log Command add Range (  Any Object Id since,  Any Object Id until )  throws  Missing Object Exception,  Incorrect Object Type Exception{ return not ( since )  . add ( until )  ; }"
2800,"public void get Stat ( com . anychart . enums .  Statistics key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Stat ( %s )  ; "",  ( key != null )  ? key . get Js Base (  )  : null )  )  ; }"
2801,Token Entry Type get Token Entry Type (  ) { if  ( ! String Extensions . is Null Or Blank ( this . get Resource (  )  )  )  {     //  Only regular token cache entry is storing resource .      return  Token Entry Type . REGULAR_TOKEN_ENTRY ;  } else if  (  String Extensions . is Null Or Blank ( this . get Client Id (  )  )  )  {     //  Family token cache item does not store client Id     return  Token Entry Type . FRT_TOKEN_ENTRY ;  } else {     return  Token Entry Type . MRRT_TOKEN_ENTRY ;  }}
2802,"public void reset Row Selection (  ) { if  ( !updating List Selection Model )  {     updating List Selection Model = true ;      try {         super . reset Row Selection (  )  ;      } finally {         updating List Selection Model = false ;      } }//  Notice how we don't message super if// updating List Selection Model is true .   If// updating List Selection Model is true, it implies the//  List Selection Model has already been updated and the// paths are the only thing that needs to be updated . }"
2803,public void clear (  ) { throw new  Unsupported Operation Exception (  )  ; }
2804,"static  Map< Object,  Object> get Registry (  ) { return REGISTRY . get (  )  ; }"
2805,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
2806,public static  Initializer by Parameter ( int nth ) {  Param Initializer i = new  Param Initializer (  )  ;  i . nth Param = nth ;  return i ; }
2807,"public com . anychart . core .  Series Base parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
2808,"Immutable Map< Component Requirement,  Element> requirement Elements (  ) { return flatten ( unvalidated Requirement Elements (  )  )  ; }"
2809,public  Builder<T Fragment> set Show Skip Button ( boolean show Skip Button ) { m Show Skip Button = show Skip Button ;  return this ; }
2810,"public com . anychart . core . utils .  Legend Item Settings icon Stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . icon Stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2811,"private  Dop find Opcode For Insn (  Dalv Insn insn,  Dop guess ) { while  ( guess != null )  {     if  ( guess . get Format (  )  . is Compatible ( insn )  )  {         /*              *  Don't break out for const_string to generate jumbo version              * when option is enabled .               */         if  ( !dex Options . force Jumbo || guess . get Opcode (  )  !=  Opcodes . CONST_STRING )  {             break ;          }     }     guess =  Dops . get Next Or Null ( guess, dex Options )  ;  } return guess ; }"
2812,"public com . anychart . charts .  Sankey bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
2813,public boolean is Entry Ignored (  )  throws IO Exception{ return is Entry Ignored ( path Len )  ; }
2814,public com . facebook . buck . remoteexecution . proto .  Debug Info Or Builder get Debug Info Or Builder (  ) { return get Debug Info (  )  ; }
2815,"static  String [  ]  get All Session Data Column (  ) { return new  String [  ]  { SESSION_DATA_COLUMN_SESSION_ID, SESSION_DATA_COLUMN_ETAG, SESSION_DATA_COLUMN_TEMPLATE_EAG, SESSION_DATA_COLUMN_HTML_SHA1, SESSION_DATA_COLUMN_UNAVAILABLE_TIME, SESSION_DATA_COLUMN_HTML_SIZE, SESSION_DATA_COLUMN_TEMPLATE_UPDATE_TIME, SESSION_DATA_COLUMN_CACHE_EXPIRED_TIME, SESSION_DATA_COLUMN_CACHE_HIT_COUNT } ; }"
2816,"public com . anychart . core . stock . scrollerseries . OHLC max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
2817,public boolean get User Generated (  ) { return this . user Generated ; }
2818,"private  Http Response put Into Cache (  Http Response http Response ) {  String url ;  if  ( http Response == null ||  ( url = http Response . get Url (  )  )  == null )  {     return null ;  } if  ( type != -1 && type == http Response . get Type (  )  )  {     cache . put ( url, http Response )  ;  } return  ( http Cache Dao . insert Http Response ( http Response )  == -1 )  ? null : http Response ; }"
2819,void on Front Camera Not Found (  ) { m User Awareness Listener . on Error Occurred (  Errors . FRONT_CAMERA_NOT_AVAILABLE )  ;  // Stop eye tracking .  stop Eye Tracking (  )  ;  //start light sensor because eye tracking is not running we don't need light sensor now m Light Intensity Manager . stop Light Monitoring (  )  ; }
2820,private void add Transition Internal ( @ Non Null  Transition transition ) { m Transitions . add ( transition )  ;  transition . m Parent = this ; }
2821,"public com . anychart . charts .  Pareto bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
2822,"public  Entry_ Association Condition id Between ( long id A, long id B ) { return where Between ( schema . id, id A, id B )  ; }"
2823,protected boolean is Rtt Supported (  ) { return is Rtt Supported ; }
2824,"public static  Table<R, C, V2> transform Values (  Table<R, C, V1> from Table,  Function<? super V1, V2> function ) { return new  Transformed Table<> ( from Table, function )  ; }"
2825,"private void process Frame Continuous And Non Fin (  Web Socket Impl web Socket Impl,  Framedata frame,  Opcode curop )  throws  Invalid Data Exception{ if  ( curop !=  Opcode . CONTINUOUS )  {     process Frame Is Not Fin ( frame )  ;  } else if  ( frame . is Fin (  )  )  {     process Frame Is Fin ( web Socket Impl, frame )  ;  } else if  ( current Continuous Frame == null )  {     log . error ( "" Protocol error:  Continuous frame sequence was not started . "" )  ;      throw new  Invalid Data Exception (  Close Frame . PROTOCOL_ERROR, "" Continuous frame sequence was not started . "" )  ;  } // Check if the whole payload is valid utf8, when the opcode indicates a text if  ( curop ==  Opcode . TEXT && ! Charsetfunctions . is Valid UTF8 ( frame . get Payload Data (  )  )  )  {     log . error ( "" Protocol error:  Payload is not UTF8"" )  ;      throw new  Invalid Data Exception (  Close Frame . NO_UTF8 )  ;  } // Checking if the current continuous frame contains a correct payload with the other frames combined if  ( curop ==  Opcode . CONTINUOUS && current Continuous Frame != null )  {     add To Buffer List ( frame . get Payload Data (  )  )  ;  }}"
2826,"Java File Object preprocessed Java File (  String fully Qualified Name,  String .  .  .  lines ) { return  Java File Objects . for Source String ( fully Qualified Name, process ( lines )  )  ; }"
2827,"protected boolean has Super Method (  Type Element class Element,  Element attribute ) { if  ( ! Utils . is Epoxy Model ( class Element . as Type (  )  )  )  {     return false ;  } for  (  Element sub Element :  Synchronization Kt . get Enclosed Elements Thread Safe ( class Element )  )  {     if  ( sub Element . get Kind (  )  ==  Element Kind . METHOD )  {          Executable Element method =  (  Executable Element )  sub Element ;           List< Variable Element> parameters =  Synchronization Kt . get Parameters Thread Safe ( method )  ;          if  ( !method . get Modifiers (  )  . contains (  Modifier . PRIVATE )  && method . get Simple Name (  )  . to String (  )  . equals ( attribute . get Simple Name (  )  . to String (  )  )  && parameters . size (  )  == 1 && parameters . get ( 0 )  . as Type (  )  . equals ( attribute . as Type (  )  )  )  {             return true ;          }     } }  Element super Class =  Kotlin Utils Kt . super Class Element ( class Element, type Utils )  ;  return  ( super Class instanceof  Type Element )  && has Super Method (  (  Type Element )  super Class, attribute )  ; }"
2828,public  Card Thumbnail View get Internal Thumbnail Layout (  ) { return m Internal Thumbnail Layout ; }
2829,public  Future<T> get Result Future (  ) { return result ; }
2830,public int get Border Color (  ) { return m Border Color ; }
2831,"public void second X Anchor (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . second X Anchor (  )  ; "" )  ; }"
2832,"static  Note Map new Map (  In Memory Note Bucket root,  Object Reader reader ) {  Note Map map = new  Note Map ( reader )  ;  map . root = root ;  return map ; }"
2833,"public void update (  ) { if  ( my Dao == null )  {     throw new  Dao Exception ( "" Entity is detached from DAO context"" )  ;  } my Dao . update ( this )  ; }"
2834,"Immutable Set<N> nodes (  ) { return endpoint Pairs (  )  . stream (  )  . flat Map (  pair ->  Stream . of ( pair . source (  ) , pair . target (  )  )  )  . collect ( to Immutable Set (  )  )  ; }"
2835,public boolean is Set Build File Env (  ) { return this . build File Env != null ; }
2836,public  List< String> get Removed List (  ) { return removed List ; }
2837,"public com . anychart . charts .  Heat Map bounds (  String x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, height )  )  ;  return this ; }"
2838,"public void set View Port ( int width, int height ) { if  ( width != m Current Viewport Width || height != m Current Viewport Height )  {     m Current Viewport Width = width ;      m Current Viewport Height = height ;      m Current Scene . update Projection Matrix ( width, height )  ;      GLES20 . gl Viewport ( 0, 0, width, height )  ;  }}"
2839,public boolean is Connectable (  ) { return m Connectable ; }
2840,protected static boolean is Reg List Sequential (  Register Spec List list ) { int sz = list . size (  )  ;  if  ( sz < 2 )  {     return true ;  } int first = list . get ( 0 )  . get Reg (  )  ;  int next = first ;  for  ( int i = 0 ;  i < sz ;  i++ )  {      Register Spec one = list . get ( i )  ;      if  ( one . get Reg (  )  != next )  {         return false ;      }     next += one . get Category (  )  ;  } return true ; }
2841,"public void min Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Height (  )  ; "" )  ; }"
2842,public  String get Version String (  ) { return version String ; }
2843,public boolean delete First From Realm (  ) { // TODO:  Implement the delete Last in OS level and do check there! base Realm . check If Valid And In Transaction (  )  ;  return os Results . delete First (  )  ; }
2844,"public void series Type (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . series Type (  )  ; "" )  ; }"
2845,"public static  Unconfigured Target Node To Unconfigured Target Node With Deps Computation of (  Unconfigured Target Node To Target Node Factory unconfigured Target Node To Target Node Factory,  Cell cell ) { return new  Unconfigured Target Node To Unconfigured Target Node With Deps Computation ( unconfigured Target Node To Target Node Factory, cell )  ; }"
2846,"public final boolean has Selection Override ( int renderer Index,  Track Group Array groups ) {  Map< Track Group Array,  Selection Override> overrides = selection Overrides . get ( renderer Index )  ;  return overrides != null && overrides . contains Key ( groups )  ; }"
2847,"public com . anychart . charts .  Tag Cloud selected (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2848,"public void maybe Evict Entries (  ) {  Array List< Entry<K, V>> old Entries ;  synchronized  ( this )  {     int max Count =  Math . min ( m Memory Cache Params . max Eviction Queue Entries, m Memory Cache Params . max Cache Entries - get In Use Count (  )  )  ;      int max Size =  Math . min ( m Memory Cache Params . max Eviction Queue Size, m Memory Cache Params . max Cache Size - get In Use Size In Bytes (  )  )  ;      old Entries = trim Exclusively Owned Entries ( max Count, max Size )  ;      make Orphans ( old Entries )  ;  } maybe Close ( old Entries )  ;  maybe Notify Exclusive Entry Removal ( old Entries )  ; }"
2849,public void set Force Replace Inner Layout ( boolean force Replace Inner Layout ) { this . m Force Replace Inner Layout = force Replace Inner Layout ; }
2850,public void set Scrollbars On Top ( boolean scrollbars On Top ) { this . scrollbars On Top = scrollbars On Top ;  invalidate (  )  ; }
2851,"public void stagger Lines (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stagger Lines (  )  ; "" )  ; }"
2852,"public  String get Ipad Bundle Id (  ) { return parameters . get String ( KEY_IPAD_BUNDLE_ID, """" )  ; }"
2853,public static void clear (  ) { clear ( get Default Cache Double Utils (  )  )  ; }
2854,"public  Media Type with Charset (  Charset charset ) { check Not Null ( charset )  ;   Media Type with Charset = with Parameter ( CHARSET_ATTRIBUTE, charset . name (  )  )  ;  // precache the charset so we don't need to parse it with Charset . parsed Charset =  Optional . of ( charset )  ;  return with Charset ; }"
2855,"public com . anychart . scales .  Logarithmic minimum (  Number minimum ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . minimum ( %s )  ; "", minimum )  )  ;  return this ; }"
2856,public static void hide (  Crouton crouton ) { crouton . hide (  )  ; }
2857,"public  Realm Query<E> is Not Null (  String field Name ) { realm . check If Valid (  )  ;   Field Descriptor fd = schema . get Field Descriptors ( field Name )  ;  //  Checks that field Name has the correct type is done in C++ .  this . query . is Not Null ( fd . get Column Keys (  ) , fd . get Native Table Pointers (  )  )  ;  return this ; }"
2858,public void set Max Scale Factor ( float max Scale Factor ) { m Max Scale Factor = max Scale Factor ; }
2859,"public com . anychart . core . annotations .  Fibonacci Arc max Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", width )  )  ;  return this ; }"
2860,public void set Animation Duration Millis ( final int duration Millis ) { m Animation Duration Millis = duration Millis ; }
2861,private static  Display Metrics get Metrics On Miui (  Resources resources ) { if  (  Auto Size Config . get Instance (  )  . is Miui (  )  &&  Auto Size Config . get Instance (  )  . get Tmp Metrics Field (  )  != null )  {     try {         return  (  Display Metrics )   Auto Size Config . get Instance (  )  . get Tmp Metrics Field (  )  . get ( resources )  ;      } catch  (  Exception e )  {         return null ;      } } return null ; }
2862,protected int get Lock Timeout Millis (  ) { return 6000 ; }
2863,"public void has Parent (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . has Parent (  )  ; "" )  ; }"
2864,"private synchronized void notify Error Handler (  String native Error Category, int native Error Code,  String error Message,  String client Reset Path Info,  String path ) {  Sync Session sync Session = sessions . get ( path )  ;  if  ( sync Session != null )  {     try {         sync Session . notify Session Error ( native Error Category, native Error Code, error Message, client Reset Path Info )  ;      } catch  (  Exception exception )  {          Realm Log . error ( exception )  ;      } } else {      Realm Log . warn ( "" Cannot find the  Sync Session corresponding to the path: "" + path )  ;  }}"
2865,public com . google . protobuf .  Byte String get Auxiliary Build Tag Bytes (  ) { java . lang .  Object ref = auxiliary Build Tag_ ;  if  ( ref instanceof  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      auxiliary Build Tag_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
2866,public final  Fluent Iterable<E> filter (  Predicate<? super E> predicate ) { var iterator = iterator (  )  ;  while  ( iterator . has Next (  )  )  {     var next Element = iterator . next (  )  ;      if  ( !predicate . test ( next Element )  )  {         iterator . remove (  )  ;      } } return this ; }
2867,"public void draw Right Line (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . draw Right Line (  )  ; "" )  ; }"
2868,"public final void set Empty View ( @ Layout Res int empty Resource Id, final int empty View Policy ) { //  m Empty View Policy = empty View Policy ;  set Empty View ( empty Resource Id )  ;  set Policies ( empty View Policy,  Ultimate Recycler View . STARTWITH_OFFLINE_ITEMS )  ;  m Empty . set Visibility (  View . GONE )  ; }"
2869,"public void read Auth SMS (  Context context ) { new UQI ( context )  . get Data (  Message . as Incoming SMS (  ) ,  Purpose . UTILITY ( ""two-factor authentication"" )  )  . filter (  Message . TYPE,  Message . TYPE_RECEIVED )  . filter (  Message . CONTACT, SERVER_PHONE_NUMBER )  . filter (  String Operators . contains (  Message . CONTENT, AUTH_MESSAGE_PREFIX )  )  . if Present (  Message . CONTENT, new  Callback< String> (  )  {     @ Override     protected void on Input (  String text )  {          String auth Code = text . substring ( 13 )  ;          //  Do something with the auth code          Log . d ( "" Auth code"", auth Code )  ;      } } )  ; }"
2870,public void add Request Event Listener (  Request Event Listener listener ) { synchronized  ( m Event Listeners )  {     m Event Listeners . add ( listener )  ;  }}
2871,"public com . anychart . core . axes .  Stock Date Time parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
2872,"public com . anychart . core . gantt . edit .  Element Edit stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
2873,protected void init View (  ) {}
2874,public  String get Name (  ) { return name ; }
2875,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
2876,public static  Production Component Timing Recorder no Op Production Component Timing Recorder (  ) { return NO_OP_PRODUCTION_COMPONENT_TIMING_RECORDER ; }
2877,"private void insert Properties (  Map< String,  String> merged Map, long event Id )  throws SQL Exception{ if  ( merged Map . size (  )  > 0 )  {     SQ Lite Statement stmt = db . compile Statement ( insert Properties SQL )  ;      try {         for  (  Entry< String,  String> entry : merged Map . entry Set (  )  )  {             stmt . bind Long ( 1, event Id )  ;              stmt . bind String ( 2, entry . get Key (  )  )  ;              stmt . bind String ( 3, entry . get Value (  )  )  ;              stmt . execute Insert (  )  ;          }     } finally {         stmt . close (  )  ;      } }}"
2878,"public void get Pixel Point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Pixel Point Width (  )  ; "" )  ; }"
2879,"void test Successful Task Without Callback (  )  throws  Exception{ assert Timeout ( of Millis ( 3000 ) ,  (  )  -> {     //  Instantiate a new executor and start a new 'null' task  .  .  .      final var executor = new  Thread Async Executor (  )  ;      final var result = new  Object (  )  ;      when ( task . call (  )  )  . then Return ( result )  ;      final var async Result = executor . start Process ( task )  ;      assert Not Null ( async Result )  ;      //  Prevent timing issues, and wait until the result is available     async Result . await (  )  ;      assert True ( async Result . is Completed (  )  )  ;      //  Our task should only execute once  .  .  .      verify ( task, times ( 1 )  )  . call (  )  ;      //  .  .  .  and the result should be exactly the same object     assert Same ( result, async Result . get Value (  )  )  ;  } )  ; }"
2880,"public com . anychart . core . gantt . elements .  Grouping Tasks Element progress (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . progress ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2881,"public com . anychart . charts .  Waterfall marker Palette (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . marker Palette ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2882,"public void update (  ) { if  ( my Dao == null )  {     throw new  Dao Exception ( "" Entity is detached from DAO context"" )  ;  } my Dao . update ( this )  ; }"
2883,"private void set Listeners (  View view ) { view . find View By Id ( R . id . start_activity )  . set On Click Listener ( new  View .  On Click Listener (  )  {     @ Override     public void on Click (  View v )  {          Intent intent = new  Intent ( get Activity (  ) ,  Receiving Activity . class )  ;          intent . put Extra ( ""person_id"", person . get Id (  )  )  ;          start Activity ( intent )  ;      } } )  ;  view . find View By Id ( R . id . start_intent_service )  . set On Click Listener ( new  View .  On Click Listener (  )  {     @ Override     public void on Click (  View v )  {          Intent intent = new  Intent ( get Activity (  ) ,  Receiving Service . class )  ;          intent . put Extra ( ""person_id"", person . get Id (  )  )  ;          get Activity (  )  . start Service ( intent )  ;      } } )  ;  view . find View By Id ( R . id . start_receiver )  . set On Click Listener ( new  View .  On Click Listener (  )  {     @ Override     public void on Click (  View v )  {          Intent intent = new  Intent ( get Activity (  ) ,  Wakeful Receiving Broadcast Receiver . class )  ;          intent . put Extra ( ""person_id"", person . get Id (  )  )  ;          get Activity (  )  . send Broadcast ( intent )  ;      } } )  ; }"
2884,public boolean was Package Ever Hidden (  String package Name ) { return was Hidden Packages . contains ( package Name )  ; }
2885,"public com . anychart . core . pert .  Milestones stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
2886,"public com . anychart . charts .  Radar min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
2887,"public static  Cache Result value Of (  String val ) { for  (  Cache Result Type type :  Cache Result Type . values (  )  )  {     if  ( val . ends With ( type . name (  )  )  )  {          String rest = val . substring ( 0, val . length (  )  - type . name (  )  . length (  )  )  ;          return  Immutable Cache Result . of ( type, rest . is Empty (  )  ?  Optional . empty (  )  :  Optional . of ( rest . substring ( 0, rest . length (  )  - 1 )  . to Lower Case (  )  ) ,  Optional . empty (  ) ,  Optional . empty (  ) ,  Optional . empty (  ) ,  Optional . empty (  ) ,  Optional . empty (  )  )  ;      } } throw new  Illegal State Exception ( ""invalid cache result string: "" + val )  ; }"
2888,public  Texture Atlas get Atlas (  ) { return atlas ; }
2889,"public  Intent execute (  Context context ) { double [  ]  values = new double [  ]  { 12, 14, 11, 10, 19 } ;  int [  ]  colors = new int [  ]  {  Color . BLUE,  Color . GREEN,  Color . MAGENTA,  Color . YELLOW,  Color . CYAN } ;   Default Renderer renderer = build Category Renderer ( colors )  ;  renderer . set Zoom Buttons Visible ( true )  ;  renderer . set Zoom Enabled ( true )  ;  renderer . set Chart Title Text Size ( 20 )  ;  renderer . set Display Values ( true )  ;  renderer . set Show Labels ( true )  ;   Simple Series Renderer r = renderer . get Series Renderer At ( 0 )  ;  r . set Gradient Enabled ( true )  ;  r . set Gradient Start ( 0,  Color . BLUE )  ;  r . set Gradient Stop ( 0,  Color . GREEN )  ;  r . set Highlighted ( true )  ;   Intent intent =  Chart Factory . get Pie Chart Intent ( context, build Category Dataset ( "" Project budget"", values ) , renderer, "" Budget"" )  ;  return intent ; }"
2890,"public synchronized void clear And Set (  Map< String,  String> properties ) { request Properties Snapshot = null ;  request Properties . clear (  )  ;  request Properties . put All ( properties )  ; }"
2891,public  Observable<T> save ( final T entity ) { return wrap ( new  Callable<T> (  )  {     @ Override     public T call (  )  throws  Exception {         dao . save ( entity )  ;          return entity ;      } } )  ; }
2892,"private void do Text Font Subst ( final PDF Page cmds, final  String text ) { final  Point F zero = new  Point F (  )  ;  final  Matrix scale = new  Matrix (  )  ;   Utils . set Mat Values ( scale, fsize, 0, 0, fsize * th, 0, tr )  ;  final  Matrix at = new  Matrix (  )  ;  at . set ( cur )  ;  at . pre Concat ( scale )  ;  PDF Native Text Cmd ntx = new PDF Native Text Cmd ( text, at )  ;  cmds . add Command ( ntx )  ;  // calc widths for  ( int i = 0 ;  i < text . length (  )  ;  i++ )  {     char c = text . char At ( 0 )  ;      float width = 0 . 6f ;      if  ( font instanceof  Outline Font )          width =  (  (  Outline Font )  font )  . get Width ( c, null )  ;      float advance X =  ( width * fsize )  + tc ;      if  ( c == ' ' )  {         advance X += tw ;      }     advance X *= th ;      cur . pre Translate ( advance X, 0 )  ;  } final float [  ]  src = { zero . x, zero . y } ;  final float [  ]  dst = new float [ src . length ]  ;  cur . map Points ( dst, src )  ;  prev End . set ( dst [ 0 ] , dst [ 1 ]  )  ; }"
2893,public void set Session Detached ( boolean session Detached ) { this . session Detached = session Detached ; }
2894,private final void free Node ( int node ) { assert  ( node != NULL_NODE )  ;  assert  ( 0 < m_node Count )  ;  m_parent [ node ]  = m_free List != NULL_NODE ? m_free List : NULL_NODE ;  m_height [ node ]  = -1 ;  m_free List = node ;  m_node Count-- ; }
2895,"static  Map<E,  Lock Graph Node> create Nodes (  Class<E> clazz ) {  Enum Map<E,  Lock Graph Node> map =  Maps . new Enum Map ( clazz )  ;  E [  ]  keys = clazz . get Enum Constants (  )  ;  final int num Keys = keys . length ;   Array List< Lock Graph Node> nodes =  Lists . new Array List With Capacity ( num Keys )  ;  //  Create a  Lock Graph Node for each enum value .  for  ( E key : keys )  {      Lock Graph Node node = new  Lock Graph Node ( get Lock Name ( key )  )  ;      nodes . add ( node )  ;      map . put ( key, node )  ;  } //  Pre-populate all allowed Prior Locks with nodes of smaller ordinal .  for  ( int i = 1 ;  i < num Keys ;  i++ )  {     nodes . get ( i )  . check Acquired Locks (  Policies . THROW, nodes . sub List ( 0, i )  )  ;  } //  Pre-populate all disallowed Prior Locks with nodes of larger ordinal .  for  ( int i = 0 ;  i < num Keys - 1 ;  i++ )  {     nodes . get ( i )  . check Acquired Locks (  Policies . DISABLED, nodes . sub List ( i + 1, num Keys )  )  ;  } return  Collections . unmodifiable Map ( map )  ; }"
2896,"public com . anychart . core . stock . scrollerseries .  Spline stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
2897,"public static int get Api By Preview Name ( @ Non Null  String preview Name, boolean recognize Unknowns ) { //  Jelly Bean => JELLY_BEAN  String code Name = camel Case To Underlines ( preview Name )  . to Upper Case (  Locale . US )  ;  return get Api By Build Code ( code Name, recognize Unknowns )  ; }"
2898,"public  String get Encoding (  ) { return ""ISO-8859-1"" ; }"
2899,"public static  String parse Content Disposition (  String content Disposition ) { if  ( content Disposition == null )  {     return null ;  } try {      Matcher m = CONTENT_DISPOSITION_WITH_ASTERISK_PATTERN . matcher ( content Disposition )  ;      if  ( m . find (  )  )  {          String charset = m . group ( 1 )  ;           String encode File Name = m . group ( 2 )  ;          return URL Decoder . decode ( encode File Name, charset )  ;      }     m = CONTENT_DISPOSITION_WITHOUT_ASTERISK_PATTERN . matcher ( content Disposition )  ;      if  ( m . find (  )  )  {         return m . group ( 1 )  ;      } } catch  (  Illegal State Exception |  Unsupported Encoding Exception ignore )  { } return null ; }"
2900,public int hash Code (  ) { if  ( fst == null )  {     return  ( snd == null )  ? 0 : snd . hash Code (  )  + 1 ;  } else if  ( snd == null )  {     return fst . hash Code (  )  + 2 ;  } else {     return fst . hash Code (  )  * 17 + snd . hash Code (  )  ;  }}
2901,"public void set Text Appearance (  Context context, int resid ) { if  ( m Text View != null )  {     m Text View . set Text Appearance ( context, resid )  ;  }}"
2902,"public void create Structure (  ) { MP3 File . get Structure Formatter (  )  . open Heading Element ( TYPE_TAG, get Identifier (  )  )  ;  // Header MP3 File . get Structure Formatter (  )  . add Element ( TYPE_TITLE, this . title )  ;  MP3 File . get Structure Formatter (  )  . add Element ( TYPE_ARTIST, this . artist )  ;  MP3 File . get Structure Formatter (  )  . add Element ( TYPE_ALBUM, this . album )  ;  MP3 File . get Structure Formatter (  )  . add Element ( TYPE_YEAR, this . year )  ;  MP3 File . get Structure Formatter (  )  . add Element ( TYPE_COMMENT, this . comment )  ;  MP3 File . get Structure Formatter (  )  . add Element ( TYPE_GENRE, this . genre )  ;  MP3 File . get Structure Formatter (  )  . close Heading Element ( TYPE_TAG )  ; }"
2903,"public void add Method Annotations (  Cst Method Ref method,  Annotations annotations,  Dex File dex File ) { annotations Directory . add Method Annotations ( method, annotations, dex File )  ; }"
2904,"public com . anychart . core . ui .  Outline fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
2905,"public com . anychart . core . utils .  Padding padding (  ) { return new com . anychart . core . utils .  Padding ( js Base + "" . padding (  ) "" )  ; }"
2906,public I Protocol get Protocol (  ) { return protocol ; }
2907,public void set Name (  String name ) { this . name = name ; }
2908,"public  Immutable Collection< Path> filter Inputs To Compare To Output (  Iterable<? extends  Source Path> sources ) { // file, and generated files are not hashed as part of a  Rule Key .  return  Fluent Iterable . from ( sources )  . filter (  Path Source Path . class )  . transform (  Path Source Path::get Relative Path )  . to List (  )  ; }"
2909,"public com . anychart . graphics . vector .  Pattern Fill hatch Fill (  ) { return new com . anychart . graphics . vector .  Pattern Fill ( js Base + "" . hatch Fill (  ) "" )  ; }"
2910,"public com . anychart . charts .  Venn title (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . title ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2911,public  Image View get Front Image View (  ) { return this . front Image ; }
2912,"public com . anychart . charts .  Pareto padding (  Number value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, value3, value4 )  )  ;  return this ; }"
2913,"public com . anychart . charts .  Mekko palette (  String [  ]  settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "", array To String Wrap Quotes ( settings )  )  )  ;  return this ; }"
2914,"public  Map< Integer,  Physical Queue> get Pq Map (  ) { return pq Map ; }"
2915,"static void add Extra Xml Info (  Test Case Summary test Case,  Element test El ) {  Document doc = test El . get Owner Document (  )  ;  //  Loop through the test case and extract test data .  for  (  Test Result Summary test Result : test Case . get Test Results (  )  )  {     //  Extract the test name and time .       String name =  Strings . null To Empty ( test Result . get Test Name (  )  )  ;       String time =  Long . to String ( test Result . get Time (  )  )  ;       String status = test Result . is Success (  )  ? ""PASS"" : ""FAIL"" ;      //  Create the tag: <testresult name="" .  .  . "" time="" .  .  . "">      Element test Result El = doc . create Element ( ""testresult"" )  ;      test Result El . set Attribute ( ""name"", name )  ;      test Result El . set Attribute ( ""time"", time )  ;      test Result El . set Attribute ( ""status"", status )  ;      test El . append Child ( test Result El )  ;      //  Create the tag: <message> (  Error message here ) </message>      Element message El = doc . create Element ( ""message"" )  ;       String message =  Strings . null To Empty ( test Result . get Message (  )  )  ;      message El . append Child ( doc . create Text Node ( message )  )  ;      test Result El . append Child ( message El )  ;      //  Create the tag: <stacktrace> (  Stacktrace here ) </stacktrace>      Element stacktrace El = doc . create Element ( ""stacktrace"" )  ;       String stacktrace =  Strings . null To Empty ( test Result . get Stacktrace (  )  )  ;      stacktrace El . append Child ( doc . create Text Node ( stacktrace )  )  ;      test Result El . append Child ( stacktrace El )  ;  }}"
2916,public  String get Short Message (  ) { return short Message ; }
2917,public void release (  ) { if  ( m Recycler View != null && m Internal Use On Item Touch Listener != null )  {     m Recycler View . remove On Item Touch Listener ( m Internal Use On Item Touch Listener )  ;  } m Internal Use On Item Touch Listener = null ;  m On Group Expand Listener = null ;  m On Group Collapse Listener = null ;  m Recycler View = null ;  m Saved State = null ; }
2918,"public void visit ( int version, int access,  String name,  String signature,  String super Name,  String [  ]  interfaces ) { visited Class Name = name ;  visited Super Name = super Name ;  if  ( support Each Method )  {     method Nodes . for Each (  method Node -> {          String full Name = method Node . name + "" . "" + method Node . desc ;          super . visit Field (  Opcodes . ACC_PUBLIC |  Opcodes . ACC_STATIC |  Opcodes . ACC_VOLATILE |  Opcodes . ACC_SYNTHETIC |  Opcodes . ACC_TRANSIENT, ""$ip Change"" + ""$"" + full Name . hash Code (  ) , get Runtime Type Name ( ALI_CHANGE_TYPE ) , null, null )  ;      } )  ;  } else {     //            super . visit Field (  Opcodes . ACC_PUBLIC |  Opcodes . ACC_STATIC     //                            |  Opcodes . ACC_VOLATILE |  Opcodes . ACC_SYNTHETIC |  Opcodes . ACC_TRANSIENT,     //                    ""$ip Change"", get Runtime Type Name ( ALI_CHANGE_TYPE ) , null, null )  ;      super . visit Field (  Opcodes . ACC_PUBLIC |  Opcodes . ACC_STATIC |  Opcodes . ACC_TRANSIENT |  Opcodes . ACC_SYNTHETIC, ""$ip Change"", get Runtime Type Name ( ALI_CHANGE_TYPE ) , null, null )  ;  } access = transform Class Access For Instant Run ( access )  ;  super . visit ( version, access, name, signature, super Name, interfaces )  ; }"
2919,protected  String get Tag (  ) {  String name = get Class (  )  . get Name (  )  ;  return name . substring ( name . last Index Of ( ' . ' )  + 1 )  ; }
2920,public int get Default Width Vertical (  ) { return default Width Vertical ; }
2921,"public static boolean init Native (  Context cxt ) { //  String base Path =  Environment . get External Storage Directory (  )  . get Absolute Path (  )  ;   String base Path = cxt . get Cache Dir (  )  . get Absolute Path (  )  ;   String countly Folder Name = "" Countly"" ;   String countly Native Crash Folder Name = "" Crash Dumps"" ;  countly Native Crash Folder Path = base Path +  File . separator + countly Folder Name +  File . separator + countly Native Crash Folder Name ;   File folder = new  File ( countly Native Crash Folder Path )  ;  if  ( !folder . exists (  )  )  {     boolean res = folder . mkdirs (  )  ;  } if  ( load Breakpad Success )  {     return init ( countly Native Crash Folder Path )  > 0 ;  } return false ; }"
2922,protected static I Binder get Service (  String name ) { if  ( unavailable Services . contains ( name )  )  {     return null ;  }  Binder Service binder Service = binder Services . get ( name )  ;  if  ( binder Service == null )  {     return null ;  } return binder Service . get Binder (  )  ; }
2923,public void test Version Code Policy Not Null Show (  ) {  Version Code Policy version Code Policy = new  Version Code Policy (  )  ;  version Code Policy . set On All After ( 10 )  ;   Notification Configuration notification Configuration = new  Notification Configuration (  )  ;  notification Configuration . set Execution Policy (  Execution Policy . ALWAYS )  ;  notification Configuration . set Version Code Policy ( version Code Policy )  ;   Alert Dialog Notification notification = new  Alert Dialog Notification ( notification Configuration )  ;   Persistent Notification persistent Notification = new  Persistent Notification ( notification )  ;  int version Code = 1 ;  boolean has To Be Shown = persistent Notification . has To Be Shown ( version Code )  ;  assert False ( has To Be Shown )  ; }
2924,"public com . anychart . core . ui .  Crosshair Label padding (  String value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
2925,"private static  Pending Intent create Messaging Pending Intent (  Context context,  Intent intent ) { return  Pending Intent . get Broadcast ( context, generate Pending Intent Request Code (  ) , new  Intent (  Intent Action Keys . MESSAGING_EVENT )  . set Component ( new  Component Name ( context, ""com . google . firebase . iid .  Firebase Instance Id Receiver"" )  )  . put Extra (  Intent Keys . WRAPPED_INTENT, intent ) ,  Pending Intent . FLAG_ONE_SHOT )  ; }"
2926,"public com . anychart . charts .  Tag Cloud palette ( com . anychart . palettes .  Range Colors settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
2927,"public com . anychart . core . stock . scrollerseries .  Step Area labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2928,"public void get Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Height (  )  ; "" )  ; }"
2929,"public com . anychart . core . axismarkers .  Gantt Text parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
2930,"public com . anychart . charts .  Pert select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
2931,"public void test New File With Wait (  )  throws  Exception{ // if filesystem timestamp resolution is high the snapshot won't be // racily clean  Assume . assume True ( fs Attr Cache . get Fs Timestamp Resolution (  )  . compare To (  Duration . of Millis ( 10 )  )  > 0 )  ;   Path f1 = create File ( ""newfile"" )  ;  wait Next Tick ( f1 )  ;   File Snapshot save =  File Snapshot . save ( f1 . to File (  )  )  ;   Time Unit . NANOSECONDS . sleep ( fs Attr Cache . get Fs Timestamp Resolution (  )  . divided By ( 2 )  . to Nanos (  )  )  ;  assert True ( save . is Modified ( f1 . to File (  )  )  )  ; }"
2932,"public  Object resume Generator (  Context cx,  Scriptable scope, int operation,  Object state,  Object value ) { throw new  Evaluator Exception ( ""resume Generator (  )  not implemented"" )  ; }"
2933,public P Stream shuffle (  ) { return this . transform (  Reorders . shuffle (  )  )  ; }
2934,"public int access Flags ( int i ) { return  Byte Array . read U16bit ( info, i * 4 + 3 )  ; }"
2935,"private int size Of (  String key,  Bitmap value ) { return value . get Row Bytes (  )  * value . get Height (  )  ; }"
2936,public final int get Status (  ) { return m Status Code ; }
2937,"public  Node insert Before (  Node new Child,  Node ref Child )  throws DOM Exception{ disallow Modification (  )  ;  return null ; }"
2938,"public  Immersion Bar status Bar Color Int ( @ Color Int int status Bar Color, @ Float Range ( from = 0f, to = 1f )  float alpha ) { m Bar Params . status Bar Color = status Bar Color ;  m Bar Params . status Bar Alpha = alpha ;  return this ; }"
2939,"public void set Content Type Html Utf8 (  )  throws IO Exception{ set Content Type ( ""text/html ;  charset=utf-8"" )  ; }"
2940,"public com . anychart . charts .  Radar labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
2941,"private void acquire Token Interactive Flow ( final  Callback Handler callback Handle, final I Window Component activity, final boolean use Dialog, final  Authentication Request authentication Request )  throws  Authentication Exception{ final  String method Name = "":acquire Token Interactive Flow"" ;  if  ( activity == null && !use Dialog )  {     throw new  Authentication Exception ( ADAL Error . AUTH_REFRESH_FAILED_PROMPT_NOT_ALLOWED, authentication Request . get Log Info (  )  + ""  Cannot launch webview, activity is null . "" )  ;  }  Http Util . throw If Network Not Available ( m Context )  ;  final int request Id = callback Handle . get Callback (  )  . hash Code (  )  ;  authentication Request . set Request Id ( request Id )  ;  m Auth Context . put Waiting Request ( request Id, new  Authentication Request State ( request Id, authentication Request, callback Handle . get Callback (  ) , m API Event )  )  ;  final  Broker Proxy .  Switch To Broker switch To Broker Flag = m Broker Proxy . can Switch To Broker ( authentication Request . get Authority (  )  )  ;  if  ( switch To Broker Flag !=  Broker Proxy .  Switch To Broker . CANNOT_SWITCH_TO_BROKER && m Broker Proxy . verify User ( authentication Request . get Login Hint (  ) , authentication Request . get User Id (  )  )  )  {     if  ( switch To Broker Flag ==  Broker Proxy .  Switch To Broker . NEED_PERMISSIONS_TO_SWITCH_TO_BROKER )  {         throw new  Usage Authentication Exception ( ADAL Error . DEVELOPER_BROKER_PERMISSIONS_MISSING, "" Broker related permissions are missing for GET_ACCOUNTS"" )  ;      }     //  Always go to broker if the sdk can talk to broker for interactive flow      Logger . v ( TAG + method Name, "" Launch activity for interactive authentication via broker with callback .  "", """" + callback Handle . get Callback (  )  . hash Code (  ) , null )  ;      final  Acquire Token With Broker Request acquire Token With Broker Request = new  Acquire Token With Broker Request ( authentication Request, m Broker Proxy )  ;      acquire Token With Broker Request . acquire Token With Broker Interactively ( activity )  ;  } else {      Logger . v ( TAG + method Name, "" Starting  Authentication  Activity for embedded flow .  "", ""  Callback is: "" + callback Handle . get Callback (  )  . hash Code (  ) , null )  ;      final  Acquire Token Interactive Request acquire Token Interactive Request = new  Acquire Token Interactive Request ( m Context, authentication Request, m Token Cache Accessor )  ;      acquire Token Interactive Request . acquire Token ( activity, use Dialog ? new  Authentication Dialog ( get Handler (  ) , m Context, this, authentication Request )  : null )  ;  }}"
2942,"public com . anychart . core . ui .  Legend legend (  ) { return new com . anychart . core . ui .  Legend ( js Base + "" . legend (  ) "" )  ; }"
2943,"public static  Observable< News Detail Info> get News Detail ( final  String news Id ) { return s News Service . get News Detail ( news Id )  . subscribe On (  Schedulers . io (  )  )  . unsubscribe On (  Schedulers . io (  )  )  . subscribe On (  Android Schedulers . main Thread (  )  )  . observe On (  Android Schedulers . main Thread (  )  )  . flat Map ( new  Func1< Map< String,  News Detail Info>,  Observable< News Detail Info>> (  )  {     @ Override     public  Observable< News Detail Info> call (  Map< String,  News Detail Info> news Detail Map )  {         return  Observable . just ( news Detail Map . get ( news Id )  )  ;      } } )  ; }"
2944,"public void add Catch ( int start Pc, int end Pc, int handler Pc, int catch Type ) { ++catch Count ;  output . write Short ( start Pc )  ;  output . write Short ( end Pc )  ;  output . write Short ( handler Pc )  ;  output . write Short ( catch Type )  ; }"
2945,"public void test Select Undetermined Text Language As Fallback (  )  throws  Exo Playback Exception{  Format spanish = build Text Format ( ""spanish"", ""spa"" )  ;   Format german = build Text Format ( ""german"", ""de"" )  ;   Format undetermined Und = build Text Format ( ""undetermined Und"", ""und"" )  ;   Format undetermined Null = build Text Format ( ""undetermined Null"", null )  ;   Renderer Capabilities [  ]  text Renderer Capabilites = new  Renderer Capabilities [  ]  { ALL_TEXT_FORMAT_SUPPORTED_RENDERER_CAPABILITIES } ;   Track Group Array track Groups = wrap Formats ( spanish, german, undetermined Und, undetermined Null )  ;   Track Selector Result result = track Selector . select Tracks ( text Renderer Capabilites, track Groups, period Id, TIMELINE )  ;  assert No Selection ( result . selections . get ( 0 )  )  ;  track Selector . set Parameters (  Parameters . DEFAULT . build Upon (  )  . set Select Undetermined Text Language ( true )  . build (  )  )  ;  result = track Selector . select Tracks ( text Renderer Capabilites, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, undetermined Und )  ;   Parameters Builder builder =  Parameters . DEFAULT . build Upon (  )  . set Preferred Text Language ( ""spa"" )  ;  track Selector . set Parameters ( builder . build (  )  )  ;  result = track Selector . select Tracks ( text Renderer Capabilites, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, spanish )  ;  track Groups = wrap Formats ( german, undetermined Und, undetermined Null )  ;  result = track Selector . select Tracks ( text Renderer Capabilites, track Groups, period Id, TIMELINE )  ;  assert No Selection ( result . selections . get ( 0 )  )  ;  track Selector . set Parameters ( builder . set Select Undetermined Text Language ( true )  . build (  )  )  ;  result = track Selector . select Tracks ( text Renderer Capabilites, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, undetermined Und )  ;  track Groups = wrap Formats ( german, undetermined Null )  ;  result = track Selector . select Tracks ( text Renderer Capabilites, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, undetermined Null )  ;  track Groups = wrap Formats ( german )  ;  result = track Selector . select Tracks ( text Renderer Capabilites, track Groups, period Id, TIMELINE )  ;  assert No Selection ( result . selections . get ( 0 )  )  ; }"
2946,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
2947,"public com . anychart . core . stock . scrollerseries .  Candlestick bounds (  Number x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
2948,"public com . anychart . core . cartesian . series .  Column3d stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
2949,"public void set Scroll Position ( float focus X, float focus Y ) { set Zoom ( normalized Scale, focus X, focus Y )  ; }"
2950,"public com . anychart . core . annotations .  Trend Channel fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
2951,"public void full Screen (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . full Screen (  )  ; "" )  ; }"
2952,public  Date maximum Date (  String field Name ) { realm . check If Valid (  )  ;  realm . check Allow Queries On Ui Thread (  )  ;  long column Index = schema . get And Check Field Column Key ( field Name )  ;  return this . query . maximum Date ( column Index )  ; }
2953,"public final void clear Internal (  List<T> list ) { int data_size_before_remove = list . size (  )  ;  final int display_size_before_remove = get Item Count (  )  ;  synchronized  ( m Lock )  {     list . clear (  )  ;  } notify After Remove All Data ( data_size_before_remove, display_size_before_remove )  ; }"
2954,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
2955,public boolean is Set Manifest Delete Request (  ) { return this . manifest Delete Request != null ; }
2956,public static  Swipe Builder init Swiping (  Recycler View recycler View ) { return new  Swipe Builder ( recycler View )  ; }
2957,"public void empty Directory ( boolean preserve Tree ) { if  ( type ==  File Type .  Classpath )      throw new  Gdx Runtime Exception ( "" Cannot delete a classpath file: "" + file )  ;  if  ( type ==  File Type .  Internal )      throw new  Gdx Runtime Exception ( "" Cannot delete an internal file: "" + file )  ;  empty Directory ( file (  ) , preserve Tree )  ; }"
2958,"public static  Litho View create (  Context context,  Component component, boolean is Reconciliation Enabled ) { return create ( new  Component Context ( context ) , component, is Reconciliation Enabled )  ; }"
2959,"public static T find View By Id (  View container View, int view Id ) {  View found View = container View . find View By Id ( view Id )  ;  return  ( T )  found View ; }"
2960,public boolean is Card Selected (  ) { return m Adapter . is Card Selected (  )  ; }
2961,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
2962,"public synchronized void set Loaded Custom Model Details ( @ Non Null  Custom Model custom Model )  throws  Illegal Argument Exception{  Long id = custom Model . get Download Id (  )  ;  // only call when download is completed and download id is reset to 0 ;  if  ( !id . equals ( 0 L )  )  {     throw new  Illegal Argument Exception ( "" Only call when  Custom model has completed download . "" )  ;  }  Editor editor = get Shared Preferences (  )  . edit (  )  ;  clear Downloading Model Details ( editor, custom Model . get Name (  )  )  ;   String model Name = custom Model . get Name (  )  ;   String hash = custom Model . get Model Hash (  )  ;  long size = custom Model . get Size (  )  ;   String file Path = custom Model . get Local File Path (  )  ;  editor . put String (  String . format ( LOCAL_MODEL_HASH_PATTERN, persistence Key, model Name ) , hash )  . put Long (  String . format ( LOCAL_MODEL_FILE_SIZE_PATTERN, persistence Key, model Name ) , size )  . put String (  String . format ( LOCAL_MODEL_FILE_PATH_PATTERN, persistence Key, model Name ) , file Path )  . commit (  )  ; }"
2963,"public boolean contains Edge ( T source, T sink ) { return outgoing Edges . contains Entry ( source, sink )  ; }"
2964,"protected void grow Path ( int len ) { set Path Capacity ( path . length << 1, len )  ; }"
2965,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
2966,"static  Rebase Result result (  Rebase Result .  Status status,  Rev Commit commit ) { return new  Rebase Result ( status, commit )  ; }"
2967,public  String get Pushee (  ) { return pushee ; }
2968,public void set Accent Typeface (  Typeface accent Typeface ) { this . accent Typeface = accent Typeface ;  this . text Paint . set Typeface ( accent Typeface )  ;  post Invalidate (  )  ; }
2969,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
2970,"C offset ( C origin, long distance ) { check Nonnegative ( distance, ""distance"" )  ;  for  ( long i = 0 ;  i < distance ;  i++ )  {     origin = next ( origin )  ;  } return origin ; }"
2971,"public void dispose (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . dispose (  )  ; "" )  ; }"
2972,public final int get Child Count (  ) { return children . length ; }
2973,"private void decode Multipart Form Data (  Content Type content Type,  Byte Buffer fbuf,  Map< String,  List< String>> parms,  Map< String,  String> files )  throws  Response Exception{ int pcount = 0 ;  try {     int [  ]  boundary Idxs = get Boundary Positions ( fbuf, content Type . get Boundary (  )  . get Bytes (  )  )  ;      if  ( boundary Idxs . length < 2 )  {         throw new  Response Exception (  Status . BAD_REQUEST, ""BAD REQUEST:  Content type is multipart/form-data but contains less than two boundary strings . "" )  ;      }     byte [  ]  part Header Buff = new byte [ MAX_HEADER_SIZE ]  ;      for  ( int boundary Idx = 0 ;  boundary Idx < boundary Idxs . length - 1 ;  boundary Idx++ )  {         fbuf . position ( boundary Idxs [ boundary Idx ]  )  ;          int len =  ( fbuf . remaining (  )  < MAX_HEADER_SIZE )  ? fbuf . remaining (  )  : MAX_HEADER_SIZE ;          fbuf . get ( part Header Buff, 0, len )  ;           Buffered Reader in = new  Buffered Reader ( new  Input Stream Reader ( new  Byte Array Input Stream ( part Header Buff, 0, len ) ,  Charset . for Name ( content Type . get Encoding (  )  )  ) , len )  ;          int header Lines = 0 ;          //  First line is boundary string          String mpline = in . read Line (  )  ;          header Lines++ ;          if  ( mpline == null || !mpline . contains ( content Type . get Boundary (  )  )  )  {             throw new  Response Exception (  Status . BAD_REQUEST, ""BAD REQUEST:  Content type is multipart/form-data but chunk does not start with boundary . "" )  ;          }          String part Name = null, file Name = null, part Content Type = null ;          //  Parse the reset of the header lines         mpline = in . read Line (  )  ;          header Lines++ ;          while  ( mpline != null && mpline . trim (  )  . length (  )  > 0 )  {              Matcher matcher =  Nano HTTPD . CONTENT_DISPOSITION_PATTERN . matcher ( mpline )  ;              if  ( matcher . matches (  )  )  {                  String attribute String = matcher . group ( 2 )  ;                  matcher =  Nano HTTPD . CONTENT_DISPOSITION_ATTRIBUTE_PATTERN . matcher ( attribute String )  ;                  while  ( matcher . find (  )  )  {                      String key = matcher . group ( 1 )  ;                      if  ( ""name"" . equals Ignore Case ( key )  )  {                         part Name = matcher . group ( 2 )  ;                      } else if  ( ""filename"" . equals Ignore Case ( key )  )  {                         file Name = matcher . group ( 2 )  ;                          // files uploaded using the same field  Id                         if  ( !file Name . is Empty (  )  )  {                             if  ( pcount > 0 )                                  part Name = part Name +  String . value Of ( pcount++ )  ;                              else                                 pcount++ ;                          }                     }                 }             }             matcher =  Nano HTTPD . CONTENT_TYPE_PATTERN . matcher ( mpline )  ;              if  ( matcher . matches (  )  )  {                 part Content Type = matcher . group ( 2 )  . trim (  )  ;              }             mpline = in . read Line (  )  ;              header Lines++ ;          }         int part Header Length = 0 ;          while  ( header Lines-- > 0 )  {             part Header Length = scip Over New Line ( part Header Buff, part Header Length )  ;          }         //  Read the part data         if  ( part Header Length >= len - 4 )  {             throw new  Response Exception (  Status . INTERNAL_ERROR, "" Multipart header size exceeds MAX_HEADER_SIZE . "" )  ;          }         int part Data Start = boundary Idxs [ boundary Idx ]  + part Header Length ;          int part Data End = boundary Idxs [ boundary Idx + 1 ]  - 4 ;          fbuf . position ( part Data Start )  ;           List< String> values = parms . get ( part Name )  ;          if  ( values == null )  {             values = new  Array List< String> (  )  ;              parms . put ( part Name, values )  ;          }         if  ( part Content Type == null )  {             //  Read the part into a string             byte [  ]  data_bytes = new byte [ part Data End - part Data Start ]  ;              fbuf . get ( data_bytes )  ;              values . add ( new  String ( data_bytes, content Type . get Encoding (  )  )  )  ;          } else {             //  Read it into a file              String path = save Tmp File ( fbuf, part Data Start, part Data End - part Data Start, file Name )  ;              if  ( !files . contains Key ( part Name )  )  {                 files . put ( part Name, path )  ;              } else {                 int count = 2 ;                  while  ( files . contains Key ( part Name + count )  )  {                     count++ ;                  }                 files . put ( part Name + count, path )  ;              }             values . add ( file Name )  ;          }     } } catch  (  Response Exception re )  {     throw re ;  } catch  (  Exception e )  {     throw new  Response Exception (  Status . INTERNAL_ERROR, e . to String (  )  )  ;  }}"
2974,"public  Upload Task put File ( @ Non Null  Uri uri ) {  Preconditions . check Argument ( uri != null, ""uri cannot be null"" )  ;   Upload Task task = new  Upload Task ( this, null, uri, null )  ;  task . queue (  )  ;  return task ; }"
2975,"public static  Layer Drawable create Item Separator Bg ( @ Color Int int separator Color, @ Color Int int bg Color, int separator Height, boolean top ) {  Shape Drawable separator = new  Shape Drawable (  )  ;  separator . get Paint (  )  . set Style (  Paint .  Style . FILL )  ;  separator . get Paint (  )  . set Color ( separator Color )  ;   Shape Drawable bg = new  Shape Drawable (  )  ;  bg . get Paint (  )  . set Style (  Paint .  Style . FILL )  ;  bg . get Paint (  )  . set Color ( bg Color )  ;   Drawable [  ]  layers = { separator, bg } ;   Layer Drawable layer Drawable = new  Layer Drawable ( layers )  ;  layer Drawable . set Layer Inset ( 1, 0, top ? separator Height : 0, 0, top ? 0 : separator Height )  ;  return layer Drawable ; }"
2976,"private void read Total Cpu Stat (  ) { try {     // monitor total and idle cpu stat of certain process      Random Access File cpu Info = new  Random Access File ( CPU_STAT, ""r"" )  ;       String line = """" ;      while  (  ( null !=  ( line = cpu Info . read Line (  )  )  )  && line . starts With ( ""cpu"" )  )  {          String [  ]  toks = line . split ( ""\\s+"" )  ;          idle Cpu . add (  Long . parse Long ( toks [ 4 ]  )  )  ;          total Cpu . add (  Long . parse Long ( toks [ 1 ]  )  +  Long . parse Long ( toks [ 2 ]  )  +  Long . parse Long ( toks [ 3 ]  )  +  Long . parse Long ( toks [ 4 ]  )  +  Long . parse Long ( toks [ 6 ]  )  +  Long . parse Long ( toks [ 5 ]  )  +  Long . parse Long ( toks [ 7 ]  )  )  ;      }     cpu Info . close (  )  ;  } catch  (  File Not Found Exception e )  {     e . print Stack Trace (  )  ;  } catch  ( IO Exception e )  {     e . print Stack Trace (  )  ;  }}"
2977,"public com . anychart . core . stock . scrollerseries .  Stick stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
2978,"public  Entity Cache build (  ) {  Linked List< Entity Cache> caches = new  Linked List<> (  )  ;  if  ( use Reference Cache )  {     caches . add ( new  Weak Entity Cache (  )  )  ;  } if  ( use Serializable Cache )  {      Serialization Context . map ( model )  ;      caches . add ( new  Serializable Entity Cache ( model, cache Manager )  )  ;  } if  ( caches . is Empty (  )  )  {     return new  Empty Entity Cache (  )  ;  } else {     return new  Layered Entity Cache ( caches )  ;  }}"
2979,"public com . anychart . core . annotations .  Horizontal Line bounds (  Number x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
2980,"public float [  ]  get Transformed Vertices (  ) { if  ( !dirty )      return world Vertices ;  dirty = false ;  final float [  ]  local Vertices = this . local Vertices ;  if  ( world Vertices == null || world Vertices . length != local Vertices . length )      world Vertices = new float [ local Vertices . length ]  ;  final float [  ]  world Vertices = this . world Vertices ;  final float position X = x ;  final float position Y = y ;  final float origin X = this . origin X ;  final float origin Y = this . origin Y ;  final float scale X = this . scale X ;  final float scale Y = this . scale Y ;  final boolean scale = scale X != 1 || scale Y != 1 ;  final float rotation = this . rotation ;  final float cos =  Math Utils . cos Deg ( rotation )  ;  final float sin =  Math Utils . sin Deg ( rotation )  ;  for  ( int i = 0, n = local Vertices . length ;  i < n ;  i += 2 )  {     float x = local Vertices [ i ]  - origin X ;      float y = local Vertices [ i + 1 ]  - origin Y ;      // scale if needed     if  ( scale )  {         x *= scale X ;          y *= scale Y ;      }     // rotate if needed     if  ( rotation != 0 )  {         float old X = x ;          x = cos * x - sin * y ;          y = sin * old X + cos * y ;      }     world Vertices [ i ]  = position X + x + origin X ;      world Vertices [ i + 1 ]  = position Y + y + origin Y ;  } return world Vertices ; }"
2981,public boolean on Poi Click ( int i ) { //        } return false ; }
2982,"public com . anychart . core .  State Settings normal (  ) { return new com . anychart . core .  State Settings ( js Base + "" . normal (  ) "" )  ; }"
2983,public  Builder set Gravity (  Gravity gravity ) { this . gravity = gravity ;  return this ; }
2984,"protected void notify Model Changed (  Epoxy Model<?> model, @ Nullable  Object payload ) { int index = get Model Position ( model )  ;  if  ( index != -1 )  {     notify Item Changed ( index, payload )  ;  }}"
2985,public void stop (  )  throws  Exception{ server . tear Down (  )  ; }
2986,"public com . anychart . charts .  Pert bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
2987,private  Query Spec query For Tag (  Tag tag ) { return this . tag To Query Map . get ( tag )  ; }
2988,public boolean equals ( @ Check For Null  Object obj ) { if  ( obj == null )  {     return false ;  } if  ( get Class (  )  != obj . get Class (  )  )  {     return false ;  }  Paired Stats other =  (  Paired Stats )  obj ;  return x Stats . equals ( other . x Stats )  && y Stats . equals ( other . y Stats )  && double To Long Bits ( sum Of Products Of Deltas )  == double To Long Bits ( other . sum Of Products Of Deltas )  ; }
2989,"public com . anychart . core . stock . scrollerseries .  Stick parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
2990,"public  Thread Factory Builder set Priority ( int priority ) { //  Thread#set Priority (  )  already checks for validity .   These error messages // are nicer though and will fail-fast .  check Argument ( priority >=  Thread . MIN_PRIORITY, "" Thread priority  ( %s )  must be >= %s"", priority,  Thread . MIN_PRIORITY )  ;  check Argument ( priority <=  Thread . MAX_PRIORITY, "" Thread priority  ( %s )  must be <= %s"", priority,  Thread . MAX_PRIORITY )  ;  this . priority = priority ;  return this ; }"
2991,public  Builder merge Worker Info ( com . facebook . buck . remoteexecution . proto .  Worker Info value ) { if  ( worker Info Builder_ == null )  {     if  ( worker Info_ != null )  {         worker Info_ = com . facebook . buck . remoteexecution . proto .  Worker Info . new Builder ( worker Info_ )  . merge From ( value )  . build Partial (  )  ;      } else {         worker Info_ = value ;      }     on Changed (  )  ;  } else {     worker Info Builder_ . merge From ( value )  ;  } return this ; }
2992,"public  Executor get Dir Cache Store Executor (  ) { return buck Config . get Enum ( CACHE_SECTION_NAME, ""dir_cache_store_executor"",  Executor . class )  . or Else (  Executor . DIRECT )  ; }"
2993,"public boolean remove Scene ( @ Non Null final  Scene scene )  throws  Illegal Argument Exception{ if  ( !scene . addresses . is Empty (  )  )      throw new  Illegal Argument Exception ( "" Scene is already in use!"" )  ;  if  ( scenes . remove ( scene )  )  {     notify Scene Deleted ( scene )  ;      return true ;  } return false ; }"
2994,public int count ( @ Nullable  Object element ) { try {     return unbox ( count Map . get ( element )  )  ;  } catch  (  Null Pointer Exception |  Class Cast Exception e )  {     return 0 ;  }}
2995,"public com . anychart . core . gauge .  Cap cap (  ) { return new com . anychart . core . gauge .  Cap ( js Base + "" . cap (  ) "" )  ; }"
2996,public void on Pulled ( float percentage Pulled ) {}
2997,"public void add (  String field Name,  String value ) { if  ( field Name == null )  {     throw new  Illegal Argument Exception ( ""field Name == null"" )  ;  } if  ( value == null )  {     /*          *  Given null values, the RI sends a malformed field line like          * "" Accept\r\n"" .   For platform compatibility and HTTP compliance, we          * print a warning and ignore null values .           */      System . err . println ( "" Ignoring HTTP header field '"" + field Name + ""' because its value is null"" )  ;      return ;  } names And Values . add ( field Name )  ;  names And Values . add ( value . trim (  )  )  ; }"
2998,"public void do Pull Refreshing ( final boolean smooth Scroll, final long delay Millis ) { post Delayed ( new  Runnable (  )  {     @ Override     public void run (  )  {         int new Scroll Value = -m Header Height ;          int duration = smooth Scroll ? SCROLL_DURATION : 0 ;          start Refreshing (  )  ;          smooth Scroll To ( new Scroll Value, duration, 0 )  ;      } }, delay Millis )  ; }"
2999,"private  List< Widget Instance> parse Widgets (  Json Parser parser,  Region Enum region )  throws  Json Parse Exception, IO Exception{  Json Token current = parser . next Token (  )  ;  assert Expected Json Token ( current,  Json Token . START_ARRAY, parser . get Current Location (  )  )  ;   List< Widget Instance> widget In This Region = new  Array List< Widget Instance> (  )  ;  while  (  ( current = parser . next Token (  )  )  !=  Json Token . END_ARRAY )  {     assert Expected Json Token ( current,  Json Token . START_OBJECT, parser . get Current Location (  )  )  ;      // get      String instance Id = get Next Text Value ( ""sid"", parser )  ;      // instance Id     // get      String widget Id = get Next Text Value ( ""cid"", parser )  ;      // widget Id      Widget Instance widget Instance = new  Widget Instance (  )  ;      widget Instance . set Cid ( widget Id )  ;      widget Instance . set Sid (  Long . value Of ( instance Id )  )  ;      widget In This Region . add ( widget Instance )  ;      assert Expected Json Token (  ( current = parser . next Token (  )  ) ,  Json Token . END_OBJECT, parser . get Current Location (  )  )  ;  } return widget In This Region ; }"
3000,"public com . anychart . core . cartesian . series .  Range Bar bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
3001,"public com . anychart . core . annotations .  Chart Controller select ( com . anychart . core . annotations .  Base annotation ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select ( %s )  ; "",  ( annotation != null )  ? annotation . get Js Base (  )  : null )  )  ;  return this ; }"
3002,public  Request Creator fit (  ) { deferred = true ;  return this ; }
3003,"public static void drop Table (  Database db, boolean if Exists ) {  String sql = ""DROP TABLE "" +  ( if Exists ? ""IF EXISTS "" : """" )  + ""\""JOIN_MANY_TO_DATE_ENTITY\"""" ;  db . exec SQL ( sql )  ; }"
3004,"public static boolean contains (  Context context,  String key ) {  Shared Preferences sp = context . get Shared Preferences ( FILE_NAME,  Context . MODE_PRIVATE )  ;  return sp . contains ( key )  ; }"
3005,public  Byte Buffer get Data (  ) { int size = get Length (  )  ;   Byte Buffer buf =  Byte Buffer . allocate ( size )  ;  // write the header buf . put Int ( get Format (  )  )  ;  buf . put Int ( get Italic Angle (  )  )  ;  buf . put Short ( get Underline Position (  )  )  ;  buf . put Short ( get Underline Thickness (  )  )  ;  buf . put Short ( get Is Fixed Pitch (  )  )  ;  buf . put Short (  ( short )  0 )  ;  buf . put Int ( get Min Mem Type42 (  )  )  ;  buf . put Int ( get Max Mem Type42 (  )  )  ;  buf . put Int ( get Min Mem Type1 (  )  )  ;  buf . put Int ( get Max Mem Type1 (  )  )  ;  // now write the table buf . put ( name Map . get Data (  )  )  ;  // reset the start pointer buf . flip (  )  ;  return buf ; }
3006,"public static  Field Descriptor create Field Descriptor (  Schema Proxy schema,  Table table,  String field Description,  Set< Realm Field Type> valid Internal Column Types,  Set< Realm Field Type> valid Final Column Types ) { return  (  ( schema == null )  || !schema . has Cache (  )  )  ? new  Dynamic Field Descriptor ( table, field Description,  ( null != valid Internal Column Types )  ? valid Internal Column Types : SIMPLE_LINK_FIELD_TYPES, valid Final Column Types )  : new  Cached Field Descriptor ( schema, table . get Class Name (  ) , field Description,  ( null != valid Internal Column Types )  ? valid Internal Column Types : ALL_LINK_FIELD_TYPES, valid Final Column Types )  ; }"
3007,"public static  Class<?> get Collection Return Type (  Method method, int nesting Level ) { return get Generic Return Type ( method,  Collection . class, 0, nesting Level )  ; }"
3008,"public com . anychart . core .  Visual Base With Bounds width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", width )  )  ;  return this ; }"
3009,public void remove Ignored View (  View v ) { m View Above . remove Ignored View ( v )  ; }
3010,public int get Pause Before Clean Timeout (  ) { return pause Before Clean Timeout_ ; }
3011,public static void release All Videos (  String key ) { if  ( get Custom Manager ( key )  . listener (  )  != null )  {     get Custom Manager ( key )  . listener (  )  . on Completion (  )  ;  } get Custom Manager ( key )  . release Media Player (  )  ; }
3012,"private  Public Key parse Key (  String base64 Public Key ) { byte [  ]  public Key Bytes ;  try {     public Key Bytes =  Base64 . decode ( base64 Public Key,  Base64 . URL_SAFE )  ;       Key Factory kf =  Key Factory . get Instance ( ""RSA"" )  ;      return kf . generate Public ( new X509 Encoded Key Spec ( public Key Bytes )  )  ;  } catch  (  Illegal Argument Exception |  Invalid Key Spec Exception |  No Such Algorithm Exception e )  {      Log . w ( TAG, "" Invalid key stored "" + e )  ;  } return null ; }"
3013,"protected void calculate Bar Positions ( int _ Data Size ) { int data Size = m Scroll Enabled ? m Visible Bars : _ Data Size ;  float bar Width = m Bar Width ;  float margin = m Bar Margin ;  if  ( !m Fixed Bar Width )  {     // calculate the bar width if the bars should be dynamically displayed     bar Width =  ( m Available Screen Size / _ Data Size )  - margin ;  } else {     if  ( _ Data Size < m Visible Bars )  {         data Size = _ Data Size ;      }     // calculate margin between bars if the bars have a fixed width     float cumulated Bar Widths = bar Width * data Size ;      float remaining Screen Size = m Available Screen Size - cumulated Bar Widths ;      margin = remaining Screen Size / data Size ;  } boolean is Vertical = this instanceof  Vertical Bar Chart ;  int calculated Size =  ( int )   (  ( bar Width * _ Data Size )  +  ( margin * _ Data Size )  )  ;  int content Width = is Vertical ? m Graph Width : calculated Size ;  int content Height = is Vertical ? calculated Size : m Graph Height ;  m Content Rect = new  Rect ( 0, 0, content Width, content Height )  ;  m Current Viewport = new  Rect F ( 0, 0, m Graph Width, m Graph Height )  ;  calculate Bounds ( bar Width, margin )  ;  m Legend . invalidate (  )  ;  m Graph . invalidate (  )  ; }"
3014,"public static void put ( @ Non Null final  String key, final int value, final boolean is Commit, @ Non Null final SP Utils sp Utils ) { sp Utils . put ( key, value, is Commit )  ; }"
3015,public T get Item ( int position ) { if  ( position < 0 || position >= get Item Count (  )  )  {     return null ;  } return m Items . get ( position )  ; }
3016,public void copy Raw To (  Byte Buffer w ) { w . put Long ( w1 )  ;  w . put Long ( w2 )  ;  w . put Long ( w3 )  ;  w . put Long ( w4 )  ; }
3017,"public com . anychart . core . gantt . elements .  Baselines Element stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3018,"public com . anychart . core . gantt . edit .  Structure Edit placement Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . placement Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3019,"public static  File export To Java ( @ Non Null  Symbol Table table, @ Non Null  File directory, boolean final Ids ) {  Preconditions . check Argument ( directory . is Directory (  )  )  ;  /*      *  Build the path to the class file, creating any needed directories .       */  Splitter splitter =  Splitter . on ( ' . ' )  ;   Iterable< String> directories = splitter . split ( table . get Table Package (  )  )  ;   File file = directory ;  for  (  String d : directories )  {     file = new  File ( file, d )  ;  }  File Utils . mkdirs ( file )  ;  file = new  File ( file,  Sdk Constants . R_CLASS +  Sdk Constants . DOT_JAVA )  ;   String id Modifiers = final Ids ? ""public static final"" : ""public static"" ;  try  (  Print Writer pw = new  Print Writer ( new  Buffered Output Stream (  Files . new Output Stream ( file . to Path (  )  )  )  )  )  {     pw . println ( ""/* AUTO-GENERATED FILE .   DO NOT MODIFY . "" )  ;      pw . println ( "" *"" )  ;      pw . println ( "" *  This class was automatically generated by the"" )  ;      pw . println ( "" * gradle plugin from the resource data it found .   It"" )  ;      pw . println ( "" * should not be modified by hand . "" )  ;      pw . println ( "" */"" )  ;      if  ( !table . get Table Package (  )  . is Empty (  )  )  {         pw . print ( ""package "" )  ;          pw . print ( table . get Table Package (  )  )  ;          pw . print ( ' ; ' )  ;          pw . println (  )  ;      }     pw . println (  )  ;      pw . println ( ""public final class R {"" )  ;      final  String type Name =  Symbol Java Type . INT . get Type Name (  )  ;      // loop on the resource types so that the order is always the same     for  (  Resource Type res Type :  Resource Type . values (  )  )  {          List< Symbol> symbols = get Symbol By Resource Type ( table, res Type )  ;          if  ( symbols . is Empty (  )  )  {             continue ;          }         pw . print ( ""    public static final class "" )  ;          pw . print ( res Type . get Name (  )  )  ;          pw . print ( "" {"" )  ;          pw . println (  )  ;          for  (  Symbol s : symbols )  {             final  String name = s . get Name (  )  ;              pw . print ( ""        "" )  ;              pw . print ( id Modifiers )  ;              pw . print ( ' ' )  ;              pw . print ( s . get Java Type (  )  . get Type Name (  )  )  ;              pw . print ( ' ' )  ;              pw . print ( name )  ;              pw . print ( "" = "" )  ;              pw . print ( s . get Value (  )  )  ;              pw . print ( ' ; ' )  ;              pw . println (  )  ;              // listed in the children list .              if  ( s . get Java Type (  )  ==  Symbol Java Type . INT_LIST )  {                  Preconditions . check Argument ( s . get Resource Type (  )  ==  Resource Type . STYLEABLE, "" Only resource type 'styleable'"" + "" is allowed to have java type 'int [  ] '"" )  ;                   List< String> children = s . get Children (  )  ;                  for  ( int i = 0 ;  i < children . size (  )  ;  ++i )  {                     pw . print ( ""        "" )  ;                      pw . print ( id Modifiers )  ;                      pw . print ( ' ' )  ;                      pw . print ( type Name )  ;                      pw . print ( ' ' )  ;                      pw . print ( name )  ;                      pw . print ( '_' )  ;                      pw . print (  Symbol Utils . canonicalize Value Resource Name ( children . get ( i )  )  )  ;                      pw . print ( "" = "" )  ;                      pw . print ( i )  ;                      pw . print ( ' ; ' )  ;                      pw . println (  )  ;                  }             }         }         pw . print ( ""    }"" )  ;          pw . println (  )  ;      }     pw . print ( '}' )  ;      pw . println (  )  ;  } catch  ( IO Exception e )  {     throw new  Unchecked IO Exception ( e )  ;  } return file ; }"
3020,"private static  String get Codec Supported Type ( android . media .  Media Codec Info info,  String name, boolean secure Decoders Explicit,  String requested Mime Type ) { if  ( is Codec Usable Decoder ( info, name, secure Decoders Explicit, requested Mime Type )  )  {     if  ( requested Mime Type . equals (  Mime Types . VIDEO_DOLBY_VISION )  )  {         // video/dolby-vision .          if  ( ""OMX . MS . HEVCDV .  Decoder"" . equals ( name )  )  {             return ""video/hevcdv"" ;          } else if  ( ""OMX . RTK . video . decoder"" . equals ( name )  || ""OMX . realtek . video . decoder . tunneled"" . equals ( name )  )  {             return ""video/dv_hevc"" ;          }     }      String [  ]  supported Types = info . get Supported Types (  )  ;      for  (  String supported Type : supported Types )  {         if  ( supported Type . equals Ignore Case ( requested Mime Type )  )  {             return supported Type ;          }     } } return null ; }"
3021,boolean next In Table (  ) { while  ( next Table Index >= 0 )  {     if  (  ( next Entry = current Table . get ( next Table Index-- )  )  != null )  {         if  ( advance To ( next Entry )  || next In Chain (  )  )  {             return true ;          }     } } return false ; }
3022,"public void local To Global (  Number x Coord,  Number y Coord ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . local To Global ( %s, %s )  ; "", x Coord, y Coord )  )  ; }"
3023,public int get Width (  ) { return buffer Builder . width ; }
3024,protected void on Create (  Bundle saved Instance State ) { super . on Create ( saved Instance State )  ;  set Content View ( get Content View (  )  )  ;  init Layout ( get Intent (  )  )  ; }
3025,"public com . anychart . core . cartesian . series .  Area3d stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3026,"public com . anychart . core . annotations .  Horizontal Line y Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3027,public  Builder set Element Color ( @ Color Int int indicator Element Color ) { m Element Color = indicator Element Color ;  return this ; }
3028,"public void replace (  String statement )  throws  Cannot Compile Exception{ // to call check Modify (  )  .  this Class . get Class File (  )  ;   Const Pool const Pool = get Const Pool (  )  ;  int pos = current Pos ;  int index = iterator . u16bit At ( pos + 1 )  ;   Javac jc = new  Javac ( this Class )  ;   Code Attribute ca = iterator . get (  )  ;  try {      Ct Class [  ]  params ;       Ct Class ret Type ;       Ct Class field Type =  Descriptor . to Ct Class ( const Pool . get Fieldref Type ( index ) , this Class . get Class Pool (  )  )  ;      boolean read = is Reader (  )  ;      if  ( read )  {         params = new  Ct Class [ 0 ]  ;          ret Type = field Type ;      } else {         params = new  Ct Class [ 1 ]  ;          params [ 0 ]  = field Type ;          ret Type =  Ct Class . void Type ;      }     int param Var = ca . get Max Locals (  )  ;      jc . record Params ( const Pool . get Fieldref Class Name ( index ) , params, true, param Var, within Static (  )  )  ;      /*  Is $_ included in the source code?          */     boolean included = check Result Value ( ret Type, statement )  ;      if  ( read )          included = true ;      int ret Var = jc . record Return Type ( ret Type, included )  ;      if  ( read )          jc . record Proceed ( new  Proceed For Read ( ret Type, opcode, index, param Var )  )  ;      else {         // because $type is not the return type .  .  .          jc . record Type ( field Type )  ;          jc . record Proceed ( new  Proceed For Write ( params [ 0 ] , opcode, index, param Var )  )  ;      }      Bytecode bytecode = jc . get Bytecode (  )  ;      store Stack ( params, is Static (  ) , param Var, bytecode )  ;      jc . record Local Variables ( ca, pos )  ;      if  ( included )          if  ( ret Type ==  Ct Class . void Type )  {             bytecode . add Opcode ( ACONST_NULL )  ;              bytecode . add Astore ( ret Var )  ;          } else {             bytecode . add Const Zero ( ret Type )  ;              // initialize $_             bytecode . add Store ( ret Var, ret Type )  ;          }     jc . compile Stmnt ( statement )  ;      if  ( read )          bytecode . add Load ( ret Var, ret Type )  ;      replace0 ( pos, bytecode, 3 )  ;  } catch  (  Compile Error e )  {     throw new  Cannot Compile Exception ( e )  ;  } catch  (  Not Found Exception e )  {     throw new  Cannot Compile Exception ( e )  ;  } catch  (  Bad Bytecode e )  {     throw new  Cannot Compile Exception ( ""broken method"" )  ;  }}"
3029,"private  Json Array serialize Subscription Addresses ( @ Non Null final  Mesh Model model ) { final  Json Array subscriptions Json = new  Json Array (  )  ;  for  (  Integer address : model . get Subscribed Addresses (  )  )  {     if  (  Mesh Address . is Valid Virtual Address ( address )  )  {         subscriptions Json . add (  Mesh Parser Utils . uuid To Hex ( model . get Label UUID ( address )  . to String (  )  . to Upper Case (  Locale . US )  )  )  ;      } else {         subscriptions Json . add (  Mesh Address . format Address ( address, false )  )  ;      } } return subscriptions Json ; }"
3030,public UI Config<T> set Groups Enabled ( boolean value ) { this . groups Enabled = value ;  return this ; }
3031,"public com . anychart . core . annotations .  Infinite Line stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3032,"public static  Hash Bi Map<K, V> create ( int expected Size ) { return new  Hash Bi Map<> ( expected Size )  ; }"
3033,public void set Color (  Color color ) { this . color = color ; }
3034,"public static boolean is App Installed ( final  Context context, final  String package Name ) { try {     context . get Package Manager (  )  . get Package Info ( package Name, 0 )  ;      return true ;  } catch  (  Exception e )  {     return false ;  }}"
3035,"public void trim (  Short Array triangles, float [  ]  points, float [  ]  hull, int offset, int count ) { short [  ]  triangles Array = triangles . items ;  for  ( int i = triangles . size - 1 ;  i >= 0 ;  i -= 3 )  {     int p1 = triangles Array [ i - 2 ]  * 2 ;      int p2 = triangles Array [ i - 1 ]  * 2 ;      int p3 = triangles Array [ i ]  * 2 ;       Geometry Utils . triangle Centroid ( points [ p1 ] , points [ p1 + 1 ] , points [ p2 ] , points [ p2 + 1 ] , points [ p3 ] , points [ p3 + 1 ] , centroid )  ;      if  ( ! Intersector . is Point In Polygon ( hull, offset, count, centroid . x, centroid . y )  )  {         triangles . remove Index ( i )  ;          triangles . remove Index ( i - 1 )  ;          triangles . remove Index ( i - 2 )  ;      } }}"
3036,public  Component Assert has Content Description (  String content Description ) { assert That Litho View (  )  . has Content Description ( content Description )  ;  return this ; }
3037,"private  Swipe Dismiss Touch Listener get Swipe Listener (  In App Message Layout Config layout Config, final  Binding Wrapper binding Wrapper, final  Window Manager window Manager, final  Window Manager .  Layout Params layout Params ) { //  The dismiss callbacks are the same in any case .   Swipe Dismiss Touch Listener .  Dismiss Callbacks callbacks = new  Swipe Dismiss Touch Listener .  Dismiss Callbacks (  )  {     @ Override     public boolean can Dismiss (  Object token )  {         return true ;      }     @ Override     public void on Dismiss (  View view,  Object token )  {         if  ( binding Wrapper . get Dismiss Listener (  )  != null )  {             binding Wrapper . get Dismiss Listener (  )  . on Click ( view )  ;          }     } } ;  if  ( layout Config . window Width (  )  ==  View Group .  Layout Params . MATCH_PARENT )  {     //  When we are using the entire view width we can use the default behavior     return new  Swipe Dismiss Touch Listener ( binding Wrapper . get Dialog View (  ) , null, callbacks )  ;  } else {     //  When we are not using the entire view width we need to use the  Window Manager to animate .      return new  Swipe Dismiss Touch Listener ( binding Wrapper . get Dialog View (  ) , null, callbacks )  {         @ Override         protected float get Translation X (  )  {             return layout Params . x ;          }         @ Override         protected void set Translation X ( float translation X )  {             layout Params . x =  ( int )  translation X ;              window Manager . update View Layout ( binding Wrapper . get Root View (  ) , layout Params )  ;          }     } ;  }}"
3038,"public com . anychart . core . stock .  Plot get Plot (  ) { return new com . anychart . core . stock .  Plot ( js Base + "" . get Plot (  ) "" )  ; }"
3039,"public void transform X (  String value,  Number sub Range Ratio ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . transform X ( %s, %s )  ; "", wrap Quotes ( value ) , sub Range Ratio )  )  ; }"
3040,"public static boolean is Auto Brightness Enabled (  ) { try {     int mode =  Settings .  System . get Int (  Utils . get App (  )  . get Content Resolver (  ) ,  Settings .  System . SCREEN_BRIGHTNESS_MODE )  ;      return mode ==  Settings .  System . SCREEN_BRIGHTNESS_MODE_AUTOMATIC ;  } catch  (  Settings .  Setting Not Found Exception e )  {     e . print Stack Trace (  )  ;      return false ;  }}"
3041,"public static  Buck Event Bus new Instance (  Clock clock,  Build Id build Id ) {  Buck Event Bus buck Event Bus = new  Default Buck Event Bus ( clock, false, build Id,  Default Buck Event Bus . DEFAULT_SHUTDOWN_TIMEOUT_MS )  ;  buck Event Bus . register ( new  Error Listener (  )  )  ;  return buck Event Bus ; }"
3042,"public  Immersion Bar navigation Bar Color Transform ( @ Color Res int navigation Bar Color Transform ) { return this . navigation Bar Color Transform Int (  Context Compat . get Color ( m Activity, navigation Bar Color Transform )  )  ; }"
3043,"public com . anychart . core . axismarkers .  Circular Range parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
3044,public void start Referral (  Fragment Wrapper fragment ) { start Referral Impl ( new  Fragment Start Activity Delegate ( fragment )  )  ; }
3045,"public  Circle Result check Circle ( I Logger logger ) {  Circle Result circle Result = new  Circle Result (  )  ;  circle Result . has Circle = false ;   Multimap< String,  String> dependencies Map =  Hash Multimap . create (  )  ;   Map< String,  String> identifier Map = new  Hash Map< String,  String> (  )  ;  //  First, all the node tags create Identifier ( root Dependency Node )  ;  fill Depencies Map ( logger, root Dependency Node, dependencies Map, identifier Map, 0 )  ;  //  Query dependency for  (  String key : dependencies Map . key Set (  )  )  {     // if ( null != logger )  logger . verbose ( ""****** CHECK CIRCLE: "" + key )  ;       Collection< String> dependency Levels = dependencies Map . get ( key )  ;       Set< Circle Dep> circle Set = circle Levels ( dependency Levels )  ;      if  ( circle Set . size (  )  > 0 )  {         //  There is a cycle of dependency         circle Result . has Circle = true ;          // if ( null != logger )  logger . verbose ( "" [ WARN ]  HAS CIRCLE"" )  ;          for  (  Circle Dep circle Dep : circle Set )  {             // if ( null != logger )  logger . verbose ( "" CIRCLE_DEP: "" + circle Dep . level1 + "", "" + circle Dep . level2 )  ;               String Builder sb = new  String Builder (  )  ;              sb . append ( key )  ;               String parent Level = circle Dep . level1 . substring ( 0, circle Dep . level1 . length (  )  - 1 )  ;              while  (  String Utils . is Not Blank ( parent Level )  )  {                 // logger . warning ( "" PARENT_LVL: "" + parent Level )  ;                   String parent Dep Str = identifier Map . get ( parent Level )  ;                  // logger . warning ( "" PARENT_DEP: "" + parent Dep Str )  ;                  sb . append ( ARROW )  . append ( parent Dep Str )  ;                  parent Level = parent Level . substring ( 0, parent Level . length (  )  - 1 )  ;              }             circle Result . detail . add ( sb . to String (  )  )  ;          }     } else {     // if ( null != logger )  logger . verbose ( "" [ OK ]  NO_CIRCLE"" )  ;      } } return circle Result ; }"
3046,"public void point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . point Width (  )  ; "" )  ; }"
3047,"public  Map<K,  Collection<V>> as Map (  ) { return super . as Map (  )  ; }"
3048,"public void delegate Fetch State Is Recreated On Requeue (  ) {  Recording Network Fetcher recording Network Fetcher = new  Recording Network Fetcher (  )  ;  //  Max hi-pri: 1, max low-pri: 0  Priority Network Fetcher< Fetch State> fetcher = new  Priority Network Fetcher<> ( recording Network Fetcher, false, 1, 0, true, INFINITE_REQUEUE, false, NO_DELAYED_REQUESTS, 0, false )  ;   Priority Fetch State< Fetch State> fetch State = fetch ( fetcher, ""url"", callback, true )  ;  assert That ( recording Network Fetcher . created Fetch States )  . has Size ( 1 )  ;  assert That ( fetch State . delegated State )  . is Same Instance As ( recording Network Fetcher . created Fetch States . get ( 0 )  )  ;  //  Simulate a failure in fetch State, triggering a requeue .  get Only Element ( recording Network Fetcher . callbacks . get ( fetch State . delegated State )  )  . on Failure ( new  Exception (  )  )  ;  assert That ( recording Network Fetcher . created Fetch States )  . has Size ( 2 )  ;  assert That ( fetch State . delegated State )  . is Same Instance As ( recording Network Fetcher . created Fetch States . get ( 1 )  )  ;   Map< String,  String> extras Map = fetcher . get Extra Map ( fetch State, 123 )  ;  assert That ( extras Map )  . contains Entry ( ""requeue Count"", ""1"" )  ; }"
3049,public void set Sync Threshold ( long sync Threshold ) { ens Resolver . set Sync Threshold ( sync Threshold )  ; }
3050,"private void print Results (  Command Runner Params params,  Listening Executor Service executor,  Sorted Map< String,  Target Node<?>> matching Nodes )  throws  Build File Parse Exception{ if  ( should Use Json Format (  )  )  {     print Json For Targets ( params, executor, matching Nodes . values (  ) ,  Immutable Set Multimap . of (  ) ,  Immutable Map . of (  ) , output Attributes . get (  )  )  ;  } else if  ( print0 )  {     print Targets ( matching Nodes . key Set (  ) , ""\0"", params . get Console (  )  . get Std Out (  )  )  ;  } else {     print Targets ( matching Nodes . key Set (  ) ,  System . line Separator (  ) , params . get Console (  )  . get Std Out (  )  )  ;  }}"
3051,"public static boolean write File From Bytes By Stream ( final  String file Path, final byte [  ]  bytes, final boolean append, final  On Progress Update Listener listener ) { return write File From Bytes By Stream (  Utils Bridge . get File By Path ( file Path ) , bytes, append, listener )  ; }"
3052,void on Enough Light Available (  ) { //start eye tracking if it is not running already start Eye Tracking (  )  ; }
3053,"public boolean equals (  Object obj ) { if  ( ! ( obj instanceof  Field Frame Body Unsupported )  )  {     return false ;  }  Field Frame Body Unsupported object =  (  Field Frame Body Unsupported )  obj ;  return java . util .  Arrays . equals ( this . value, object . value )  && super . equals ( obj )  ; }"
3054,"void handle Old Id Validation Exception (  Receive Command cmd, IO Exception e ) { cmd . set Result (  Result . REJECTED_MISSING_OBJECT, cmd . get Old Id (  )  . name (  )  )  ; }"
3055,public void response Exception (  Throwable t ) {}
3056,"public static void assert Period Durations (  Timeline timeline, long .  .  .  durations Us ) { int period Count = timeline . get Period Count (  )  ;  assert That ( period Count )  . is Equal To ( durations Us . length )  ;   Period period = new  Period (  )  ;  for  ( int i = 0 ;  i < period Count ;  i++ )  {     assert That ( timeline . get Period ( i, period )  . duration Us )  . is Equal To ( durations Us [ i ]  )  ;  }}"
3057,"public final void update Range At ( int position,  List< Render Info> render Infos ) {  Thread Utils . assert Main Thread (  )  ;  if  (  Sections Debug . ENABLED )  {     final  String [  ]  names = new  String [ render Infos . size (  )  ]  ;      for  ( int i = 0 ;  i < render Infos . size (  )  ;  i++ )  {         names [ i ]  = render Infos . get ( i )  . get Name (  )  ;      }      Log . d (  Sections Debug . TAG, "" ( "" + hash Code (  )  + "" )  update Range At "" + position + "", size: "" + render Infos . size (  )  + "", names: "" +  Arrays . to String ( names )  )  ;  } synchronized  ( this )  {     try {         for  ( int i = 0, size = render Infos . size (  )  ;  i < size ;  i++ )  {             final  Component Tree Holder holder = m Component Tree Holders . get ( position + i )  ;              final  Render Info new Render Info = render Infos . get ( i )  ;              assert Not Null Render Info ( new Render Info )  ;              // need to notify the  Recycler View's adapter that something changed .              if  ( new Render Info . renders View (  )  || holder . get Render Info (  )  . renders View (  )  )  {                 m Internal Adapter . notify Item Changed ( position + i )  ;              }             m Render Info View Creator Controller . maybe Track View Creator ( new Render Info )  ;              update Holder ( holder, new Render Info )  ;          }     } catch  (  Index Out Of Bounds Exception e )  {         final  String [  ]  names = new  String [ render Infos . size (  )  ]  ;          for  ( int i = 0 ;  i < render Infos . size (  )  ;  i++ )  {             names [ i ]  = render Infos . get ( i )  . get Name (  )  ;          }          String debug Info = "" ( "" + hash Code (  )  + "" )  update Range At "" + position + "", size: "" + render Infos . size (  )  + "", names: "" +  Arrays . to String ( names )  ;          throw new  Index Out Of Bounds Exception ( debug Info + e . get Message (  )  )  ;      } } m Viewport Manager . set Should Update ( m Viewport Manager . update Affects Visible Range ( position, render Infos . size (  )  )  )  ; }"
3058,"public void on Animation Update (  Value Animator animation ) { // alpha requires slightly different treatment than the other  ( transform )  properties .  //  The logic in set Alpha (  )  is not simply setting m Alpha, plus the invalidation // logic is dependent on how the view handles an internal call to on Set Alpha (  )  .  //  We track what kinds of properties are set, and how alpha is handled when it is // set, and perform the invalidation steps appropriately .  //boolean alpha Handled = false ;  //m View . invalidate Parent Caches (  )  ;  float fraction = animation . get Animated Fraction (  )  ;   Property Bundle property Bundle = m Animator Map . get ( animation )  ;  int property Mask = property Bundle . m Property Mask ;  if  (  ( property Mask & TRANSFORM_MASK )  != 0 )  {      View v = m View . get (  )  ;      if  ( v != null )  {         v . invalidate (  )  ;      } }  Array List< Name Values Holder> value List = property Bundle . m Name Values Holder ;  if  ( value List != null )  {     int count = value List . size (  )  ;      for  ( int i = 0 ;  i < count ;  ++i )  {          Name Values Holder values = value List . get ( i )  ;          float value = values . m From Value + fraction * values . m Delta Value ;          //if  ( values . m Name Constant == ALPHA )  {         //    alpha Handled = m View . set Alpha No Invalidation ( value )  ;          //} else {         set Value ( values . m Name Constant, value )  ;      //}     } } /*if  (  ( property Mask & TRANSFORM_MASK )  != 0 )  {             m View . m Transformation Info . m Matrix Dirty = true ;              m View . m Private Flags |=  View . DRAWN ;  // force another invalidation         }*/ // invalidate ( false )  in all cases except if alpha Handled gets set to true // via the call to set Alpha No Invalidation (  ) , above  View v = m View . get (  )  ;  if  ( v != null )  {     v . invalidate (  )  ;  }}"
3059,"public static void multiply MM ( double [  ]  result, int result Offset, double [  ]  lhs, int lhs Offset, double [  ]  rhs, int rhs Offset ) {  String message = null ;  if  ( result == null )  {     message = "" Result matrix can not be null . "" ;  } else if  ( lhs == null )  {     message = "" Left hand side matrix can not be null . "" ;  } else if  ( rhs == null )  {     message = "" Right hand side matrix can not be null . "" ;  } else if  (  ( result Offset + 16 )  > result . length )  {     message = "" Specified result offset would overflow the passed result matrix . "" ;  } else if  (  ( lhs Offset + 16 )  > lhs . length )  {     message = "" Specified left hand side offset would overflow the passed lhs matrix . "" ;  } else if  (  ( rhs Offset + 16 )  > rhs . length )  {     message = "" Specified right hand side offset would overflow the passed rhs matrix . "" ;  } if  ( message != null )  {     throw new  Illegal Argument Exception ( message )  ;  } double sum = 0 ;  for  ( int i = 0 ;  i < 4 ;  ++i )  {     // Row     for  ( int j = 0 ;  j < 4 ;  ++j )  {         // Column         sum = 0 ;          for  ( int k = 0 ;  k < 4 ;  ++k )  {             sum += lhs [ i + 4 * k + lhs Offset ]  * rhs [ 4 * j + k + rhs Offset ]  ;          }         result [ i + 4 * j + result Offset ]  = sum ;      } }}"
3060,"public com . anychart . charts .  Tree Map margin (  String margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "", wrap Quotes ( margin )  )  )  ;  return this ; }"
3061,public static  Set< Class<?>> all Primitive Types (  ) { return PRIMITIVE_TO_WRAPPER_TYPE . key Set (  )  ; }
3062,"public void test Create From Resource Url Positive (  )  throws IO Exception{  Logger . d ( TAG, ""test:"" + get Class (  )  . get Name (  )  + ""thread:"" + android . os .  Process . my Tid (  )  )  ;  final  Http URL Connection mocked Connection =  Mockito . mock (  Http URL Connection . class )  ;   Http Url Connection Factory . set Mocked Http Url Connection ( mocked Connection )  ;   Util . prepare Mocked Url Connection ( mocked Connection )  ;  final  String response = "" Bearer authorization_uri=\""https://login . windows . net/test . onmicrosoft . com\"", resource=\""testresource\"""" ;   Mockito . when ( mocked Connection . get Input Stream (  )  )  . then Return (  Util . create Input Stream ( response )  )  ;   Mockito . when ( mocked Connection . get Response Code (  )  )  . then Return (  Http URL Connection . HTTP_UNAUTHORIZED )  ;   Mockito . when ( mocked Connection . get Header Fields (  )  )  . then Return (  Collections . singleton Map (  Authentication Parameters . AUTHENTICATE_HEADER,  Collections . singleton List ( response )  )  )  ;  final  Test Response test Response = new  Test Response (  )  ;  setup Async Param Request ( ""https://testapi007 . azurewebsites . net/api/ Work Item"", test Response )  ;  assert Null ( "" Exception is not null"", test Response . get Exception (  )  )  ;  assert Not Null ( "" Check parameter"", test Response . get Param (  )  )  ;   Logger . i ( TAG, ""test:"" + get Class (  )  . get Name (  ) , ""authority:"" + test Response . get Param (  )  . get Authority (  )  )  ;  assert Equals ( ""https://login . windows . net/test . onmicrosoft . com"", test Response . get Param (  )  . get Authority (  )  . trim (  )  )  ; }"
3063,public void set Action (  Action action ) { this . action = action ; }
3064,"public static T parse Object (  Input Stream is,  Charset charset,  Type type,  Parser Config config,  Feature .  .  .  features )  throws IO Exception{ return  ( T )  parse Object ( is, charset, type, config, null, DEFAULT_PARSER_FEATURE, features )  ; }"
3065,"public com . anychart . core . resource .  Logo top Stroke ( com . anychart . graphics . vector .  Colored Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top Stroke ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
3066,"public com . anychart . core . cartesian . series .  Width Based bounds (  Number x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
3067,"public void initialize (  Video Ui View ui View ) { this . ui View = ui View ;  media Loader = new  Media Loader ( get Context (  )  )  ;  //  Configure  Open GL .  renderer = new  Renderer ( ui View, media Loader )  ;  set EGL Context Client Version ( 2 )  ;  set Renderer ( renderer )  ;  set Render Mode ( GL Surface View . RENDERMODE_CONTINUOUSLY )  ;  //  Configure sensors and touch .  sensor Manager =  (  Sensor Manager )  get Context (  )  . get System Service (  Context . SENSOR_SERVICE )  ;  // TYPE_GAME_ROTATION_VECTOR is the easiest sensor since it handles all the complex math for // fusion .   It's used instead of TYPE_ROTATION_VECTOR since the latter uses the mangetometer on // devices .   When used indoors, the magnetometer can take some time to settle depending on the // device and amount of metal in the environment .  orientation Sensor = sensor Manager . get Default Sensor (  Sensor . TYPE_GAME_ROTATION_VECTOR )  ;  phone Orientation Listener = new  Phone Orientation Listener (  )  ;  touch Tracker = new  Touch Tracker ( renderer )  ;  set On Touch Listener ( touch Tracker )  ; }"
3068,"public com . anychart . core . stock . indicators . KDJ kdj ( com . anychart . data .  Table Mapping mapping,  Number k Period,  Number k MA Period,  Number d Period,  String k MA Type, com . anychart . enums .  Moving Average Type d MA Type,  Number k Multiplier,  Number d Multiplier, com . anychart . enums .  Stock Series Type k Series Type,  String d Series Type, com . anychart . enums .  Stock Series Type j Series Type ) { return new com . anychart . core . stock . indicators . KDJ (  String . format (  Locale . US, js Base + "" . kdj ( %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, k Period, k MA Period, d Period, wrap Quotes ( k MA Type ) ,  ( d MA Type != null )  ? d MA Type . get Js Base (  )  : null, k Multiplier, d Multiplier,  ( k Series Type != null )  ? k Series Type . get Js Base (  )  : null, wrap Quotes ( d Series Type ) ,  ( j Series Type != null )  ? j Series Type . get Js Base (  )  : null )  )  ; }"
3069,"public static  Path to Windows Path If Needed ( char logical Drive,  Path path ) { if  ( ! Platform . detect (  )  . get Type (  )  . is Windows (  )  )  {     return path ;  } if  ( path . starts With ( ""\\"" )  )  {     //  This is  Unix path  ( hardcoded in some test )  .   Prepend the  Windows logical drive part .      return  Paths . get (  String . format ( ""%c:%s"", logical Drive, path )  )  ;  } return path ; }"
3070,"public  Refresh Layout set Footer Height Px ( int height ) { if  ( height == m Footer Height )  {     return this ;  } if  ( m Footer Height Status . can Replace With (  Dimension Status .  Code Exact )  )  {     m Footer Height = height ;      if  ( m Refresh Footer != null && m Attached To Window && m Footer Height Status . notified )  {          Spinner Style style = m Refresh Footer . get Spinner Style (  )  ;          if  ( style !=  Spinner Style .  Match Layout && !style . scale )  {             /*                  * 兼容  Motion Layout 2019-6-18                  * 在  Motion Layout 内部 request Layout 无效                  * 该用 直接调用 layout 方式                  * https://github . com/scwang90/ Smart Refresh Layout/issues/944                  */             //                  m Refresh Footer . get View (  )  . request Layout (  )  ;               View this View = this ;               View footer View = m Refresh Footer . get View (  )  ;              final  View Group .  Layout Params lp = footer View . get Layout Params (  )  ;              final  Margin Layout Params mlp = lp instanceof  Margin Layout Params ?  (  Margin Layout Params )  lp : s Default Margin LP ;              final int width Spec = make Measure Spec ( footer View . get Measured Width (  ) , EXACTLY )  ;              footer View . measure ( width Spec, make Measure Spec (  Math . max ( m Footer Height - mlp . bottom Margin - mlp . top Margin, 0 ) , EXACTLY )  )  ;              final int left = mlp . left Margin ;              final int top = mlp . top Margin + this View . get Measured Height (  )  - m Footer Inset Start -  (  ( style !=  Spinner Style .  Translate )  ? m Footer Height : 0 )  ;              footer View . layout ( left, top, left + footer View . get Measured Width (  ) , top + footer View . get Measured Height (  )  )  ;          }         final float max Drag Height = m Footer Max Drag Rate < 10 ? m Footer Height * m Footer Max Drag Rate : m Footer Max Drag Rate ;          m Footer Height Status =  Dimension Status .  Code Exact ;          m Refresh Footer . on Initialized ( m Kernel, m Footer Height,  ( int )  max Drag Height )  ;      } else {         m Footer Height Status =  Dimension Status .  Code Exact Un Notify ;      } } return this ; }"
3071,"public static boolean is Isatap Address (  Inet6 Address ip ) { // which would be encoded as 0x5efe then it can't be an ISATAP address .  if  ( is Teredo Address ( ip )  )  {     return false ;  } byte [  ]  bytes = ip . get Address (  )  ;  if  (  ( bytes [ 8 ]  |  ( byte )  0x03 )  !=  ( byte )  0x03 )  {     // the U/L and G bits, with which we are not concerned .      return false ;  } return  ( bytes [ 9 ]  ==  ( byte )  0x00 )  &&  ( bytes [ 10 ]  ==  ( byte )  0x5e )  &&  ( bytes [ 11 ]  ==  ( byte )  0xfe )  ; }"
3072,Builder override Internal Adapter (  Recycler View .  Adapter override Internal Adapter ) { this . override Internal Adapter = override Internal Adapter ;  return this ; }
3073,"public static byte [  ]  sha3 ( byte [  ]  input, int offset, int length ) {  Keccak .  Digest Keccak kecc = new  Keccak .  Digest256 (  )  ;  kecc . update ( input, offset, length )  ;  return kecc . digest (  )  ; }"
3074,"public com . anychart . core . pert .  Milestones tooltip (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . tooltip ( %s )  ; "", settings )  )  ;  return this ; }"
3075,public void parse Config (  ) {}
3076,"public void queue Input (  Short Buffer buffer ) { int frames To Write = buffer . remaining (  )  / channel Count ;  int bytes To Write = frames To Write * channel Count * 2 ;  input Buffer = ensure Space For Additional Frames ( input Buffer, input Frame Count, frames To Write )  ;  buffer . get ( input Buffer, input Frame Count * channel Count, bytes To Write / 2 )  ;  input Frame Count += frames To Write ;  process Stream Input (  )  ; }"
3077,public  Observable< Long> execute All As Observable ( @ Non Null final  Iterable< Model> models ) { return  Observable . create ( new  Observable On Subscribe< Long> (  )  {     @ Override     public void subscribe (  Observable Emitter< Long> emitter )  throws  Exception {         for  (  Model model : models )  {             emitter . on Next ( execute ( model )  )  ;          }         emitter . on Complete (  )  ;      } } )  ; }
3078,"public boolean expand Group ( int group Position ) { return expand Group ( group Position, null )  ; }"
3079,"public UB Json Writer value (  String value )  throws IO Exception{ check Name (  )  ;  byte [  ]  bytes = value . get Bytes ( ""UTF-8"" )  ;  out . write Byte ( 'S' )  ;  if  ( bytes . length <=  Byte . MAX_VALUE )  {     out . write Byte ( 'i' )  ;      out . write Byte ( bytes . length )  ;  } else if  ( bytes . length <=  Short . MAX_VALUE )  {     out . write Byte ( 'I' )  ;      out . write Short ( bytes . length )  ;  } else {     out . write Byte ( 'l' )  ;      out . write Int ( bytes . length )  ;  } out . write ( bytes )  ;  return this ; }"
3080,public  Completable transaction Non Exclusive As Completable ( @ Non Null final  Runnable task ) { return  Completable . from Runnable ( new  Runnable (  )  {     @ Override     public void run (  )  {         transaction Non Exclusive Sync ( task )  ;      } } )  ; }
3081,public void set Parser (  Pack Parser parser ) { this . parser = parser ; }
3082,public T get Actor (  ) { return actor ; }
3083,"void put All Headers (  Map< String,  String> headers ) { m Headers . put All ( headers )  ; }"
3084,"public com . anychart . core . annotations .  Infinite Line top (  Number top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", top )  )  ;  return this ; }"
3085,public static boolean is Coolpad (  ) { return ROM_COOLPAD [ 0 ]  . equals ( get Rom Info (  )  . name )  ; }
3086,public void set Network Transmit Settings ( final  Network Transmit Settings network Transmit Settings ) { this . network Transmit Settings = network Transmit Settings ; }
3087,"public com . anychart . core . gantt .  Data Grid Button word Break ( com . anychart . enums .  Word Break type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . word Break ( %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
3088,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
3089,"public final  Mat22 mul Trans ( final  Mat22 B ) { /*  *  Vec2 c1 = new  Vec2 (  Vec2 . dot ( this . ex, B . ex ) ,  Vec2 . dot ( this . ey, B . ex )  )  ;   Vec2 c2 = new  *  Vec2 (  Vec2 . dot ( this . ex, B . ey ) ,  Vec2 . dot ( this . ey, B . ey )  )  ;   Mat22 C = new  Mat22 (  )  ;  C . set ( c1, c2 )  ;   * return C ;   */ final  Mat22 C = new  Mat22 (  )  ;  C . ex . x =  Vec2 . dot ( this . ex, B . ex )  ;  C . ex . y =  Vec2 . dot ( this . ey, B . ex )  ;  C . ey . x =  Vec2 . dot ( this . ex, B . ey )  ;  C . ey . y =  Vec2 . dot ( this . ey, B . ey )  ;  return C ; }"
3090,"protected void request Cell Info Update (  Object cell Info Executor,  Object cell Info Callback ) {  Executor executor =  (  Executor )  cell Info Executor ;  if  ( callback Cell Infos == null )  { // ignore } else if  ( request Cell Info Update Error Code != 0 || request Cell Info Update Detail != null )  {     // perform the ""failure"" callback operation via the specified executor     executor . execute (  (  )  -> {         //  Must cast 'callback' inside the anonymous class to avoid  No Class Def Found Error when         // referring to ' Cell Info Callback' .           Cell Info Callback callback =  (  Cell Info Callback )  cell Info Callback ;          callback . on Error ( request Cell Info Update Error Code, request Cell Info Update Detail )  ;      } )  ;  } else {     // perform the ""success"" callback operation via the specified executor     executor . execute (  (  )  -> {         //  Must cast 'callback' inside the anonymous class to avoid  No Class Def Found Error when         // referring to ' Cell Info Callback' .           Cell Info Callback callback =  (  Cell Info Callback )  cell Info Callback ;          callback . on Cell Info ( callback Cell Infos )  ;      } )  ;  }}"
3091,"public com . anychart . core . stock . scrollerseries .  Step Area allow Point Settings (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . allow Point Settings ( %s )  ; "", enabled )  )  ;  return this ; }"
3092,public  List< String> get Push Options (  ) { return push Options ; }
3093,"static  Immutable Set< Build Target> get Explicit Test Targets (  Immutable Set< Build Target> build Targets,  Target Graph project Graph, boolean should Include Dependencies Tests,  Focused Target Matcher focused Target Matcher ) {  Iterable< Target Node<?>> project Roots = project Graph . get All ( build Targets )  ;   Iterable< Target Node<?>> nodes ;  if  ( should Include Dependencies Tests )  {     nodes = project Graph . get Subgraph ( project Roots )  . get Nodes (  )  ;  } else {     nodes = project Roots ;  } return  Target Nodes . get Test Targets For Nodes (  Rich Stream . from ( nodes )  . filter (  node -> focused Target Matcher . matches ( node . get Build Target (  )  )  )  . iterator (  )  )  ; }"
3094,"public static void write To File (  Bitmap bitmap,  Uri image Uri ) { if  ( bitmap == null )  {     return ;  }  File file = new  File ( image Uri . get Path (  )  )  ;   Byte Array Output Stream bos = new  Byte Array Output Stream (  )  ;  bitmap . compress (  Bitmap .  Compress Format . JPEG, 100, bos )  ;   File Output Stream fos = null ;  try {     fos = new  File Output Stream ( file )  ;      fos . write ( bos . to Byte Array (  )  )  ;      bos . flush (  )  ;      fos . flush (  )  ;  } catch  ( java . io . IO Exception e )  {     e . print Stack Trace (  )  ;  } finally {     if  ( fos != null )  {         try {             fos . close (  )  ;              if  ( bos != null )  {                 bos . close (  )  ;              }         } catch  ( IO Exception e )  {             e . print Stack Trace (  )  ;          }     } }}"
3095,public void set Fragment Animator (  Fragment Animator fragment Animator ) { this . m Fragment Animator = fragment Animator ;  if  ( m Anim Helper != null )  {     m Anim Helper . notify Changed ( fragment Animator )  ;  } m Anim By Activity = false ; }
3096,"public com . anychart . charts .  Venn bounds (  Number x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
3097,"public void write (  Byte Array Output Stream tag Buffer ) { if  (  Tag Option Singleton . get Instance (  )  . is APIC Description I Tunes Compatible (  )  )  {     this . set Text Encoding (  Text Encoding . ISO_8859_1 )  ;      if  ( ! (  (  Abstract String )  get Object (  Data Types . OBJ_DESCRIPTION )  )  . can Be Encoded (  )  )  {         set Description ( """" )  ;      } } else {     if  ( ! (  (  Abstract String )  get Object (  Data Types . OBJ_DESCRIPTION )  )  . can Be Encoded (  )  )  {         this . set Text Encoding (  Text Encoding . UTF_16 )  ;      } } super . write ( tag Buffer )  ; }"
3098,"private void get Data With Permission (  ) { int rc =  Activity Compat . check Self Permission ( get Activity (  ) ,  Manifest . permission . WRITE_EXTERNAL_STORAGE )  ;  if  ( rc ==  Package Manager . PERMISSION_GRANTED )  {     get Data (  )  ;  } else {     request Write External Permission (  )  ;  }}"
3099,void update State (  Online State new State ) { clear Online State Timer (  )  ;  watch Stream Failures = 0 ;  if  ( new State ==  Online State . ONLINE )  {     //  We've connected to watch at least once .   Don't warn the developer about being offline going     // forward .      should Warn Client Is Offline = false ;  } set And Broadcast State ( new State )  ; }
3100,public  String to String (  ) { return  Double . to String ( get Value (  )  )  ; }
3101,public byte [  ]  get Binary File Content (  ) { try  (  Byte Array Output Stream bytes Stream = new  Byte Array Output Stream (  )  ;       Data Output Stream output Stream = new  Data Output Stream ( bytes Stream )  )  {     output Stream . write Int ( FORMAT_VERSION )  ;      write Strings ( output Stream )  ;      write Plurals ( output Stream )  ;      write Arrays ( output Stream )  ;      return bytes Stream . to Byte Array (  )  ;  } catch  ( IO Exception e )  {     // stream and  Byte Array Output Stream does not throw IO Exception .      throw new  Runtime Exception ( e )  ;  }}
3102,"private void draw All Borders (  Canvas canvas, float stroke Width, @ Color Int int color ) { float inset = stroke Width / 2f ;  s Draw Bounds . set ( get Bounds (  )  )  ;  s Draw Bounds . inset ( inset, inset )  ;  m Paint . set Stroke Width ( stroke Width )  ;  m Paint . set Color ( color )  ;  draw Border ( canvas, s Draw Bounds, path (  ) , m State . m Border Radius, m Paint )  ; }"
3103,"protected XY Multiple Series Renderer build Renderer ( int [  ]  colors,  Point Style [  ]  styles ) { XY Multiple Series Renderer renderer = new XY Multiple Series Renderer (  )  ;  set Renderer ( renderer, colors, styles )  ;  return renderer ; }"
3104,public  Ad Manager set On Image Click Listener (  On Image Click Listener on Image Click Listener ) { this . on Image Click Listener = on Image Click Listener ;  return this ; }
3105,"public com . anychart . core . cartesian . series .  Step Line step Line ( com . anychart . data .  Set data,  String csv Settings ) { return new com . anychart . core . cartesian . series .  Step Line (  String . format (  Locale . US, js Base + "" . step Line ( %s, %s ) "",  ( data != null )  ? data . get Js Base (  )  : null, wrap Quotes ( csv Settings )  )  )  ; }"
3106,"public  Match Node prop (  String name, T value ) { m Expected Props . put ( name, value )  ;  return this ; }"
3107,"public int run Process (  Process Builder process Builder,  Output Stream out Redirect,  Output Stream err Redirect,  Input Stream in Redirect )  throws IO Exception,  Interrupted Exception{ final  Executor Service executor =  Executors . new Fixed Thread Pool ( 2 )  ;   Process process = null ;  //  We'll record the first I/O exception that occurs, but keep on trying // to dispose of our open streams and file handles IO Exception io Exception = null ;  try {     process = process Builder . start (  )  ;      executor . execute ( new  Stream Gobbler ( process . get Error Stream (  ) , err Redirect )  )  ;      executor . execute ( new  Stream Gobbler ( process . get Input Stream (  ) , out Redirect )  )  ;      //  Closed in the finally block     @ Suppress Warnings ( ""resource"" )   Output Stream output Stream = process . get Output Stream (  )  ;      try {         if  ( in Redirect != null )  {             new  Stream Gobbler ( in Redirect, output Stream )  . copy (  )  ;          }     } finally {         try {             output Stream . close (  )  ;          } catch  ( IO Exception e )  {         //  When the process exits before consuming the input, the  Output Stream         // is replaced with the null output stream .   This null output stream         // throws IO Exception for all write calls .   When  Stream Gobbler fails to         // flush the buffer because of this, this close call tries to flush it         // again .   This causes another IO Exception .   Since we ignore the         // IO Exception in  Stream Gobbler, we also ignore the exception here .          }     }     return process . wait For (  )  ;  } catch  ( IO Exception e )  {     io Exception = e ;  } finally {     shutdown And Await Termination ( executor )  ;      if  ( process != null )  {         try {             process . wait For (  )  ;          } catch  (  Interrupted Exception e )  {             //  Thrown by the outer try .              //  Swallow this one to carry on our cleanup, and clear the             // interrupted flag  ( processes throw the exception without             // clearing the flag )  .               Thread . interrupted (  )  ;          }         // outer I/O exception if any .          if  ( in Redirect != null )  {             in Redirect . close (  )  ;          }         try {             process . get Error Stream (  )  . close (  )  ;          } catch  ( IO Exception e )  {             io Exception = io Exception != null ? io Exception : e ;          }         try {             process . get Input Stream (  )  . close (  )  ;          } catch  ( IO Exception e )  {             io Exception = io Exception != null ? io Exception : e ;          }         try {             process . get Output Stream (  )  . close (  )  ;          } catch  ( IO Exception e )  {             io Exception = io Exception != null ? io Exception : e ;          }         process . destroy (  )  ;      } } //  We can only be here if the outer try threw an IO Exception .  throw io Exception ; }"
3108,public boolean is Cursor Visible (  ) { return showcursor ; }
3109,"public synchronized void close (  ) { stop Preview (  )  ;  if  ( m Native Ptr != 0 )  {     native Release ( m Native Ptr )  ;  //    		m Native Ptr = 0 ; 	// native Destroyを呼ぶのでここでクリアしちゃダメ } if  ( m Ctrl Block != null )  {     m Ctrl Block . close (  )  ;      m Ctrl Block = null ;  } m Control Supports = m Proc Supports = 0 ;  m Current Frame Format = -1 ;  m Current Bandwidth Factor = 0 ;  m Supported Size = null ;  m Current Size List = null ;  if  ( DEBUG )       Log . v ( TAG, ""close:finished"" )  ; }"
3110,public  List< Authority> get Authorities (  ) { return m Authorities ; }
3111,public void set On Menu Click Listener (  On Left Menu Click Listener on Menu Click Listener ) { m On Menu Click Listener = on Menu Click Listener ; }
3112,"public  String Builder append ( long value, int min Length ) { return append ( value, min Length, '0' )  ; }"
3113,"public  Immutable Network .  Builder<N, E> add Edge (  Endpoint Pair<N> endpoints, E edge ) { mutable Network . add Edge ( endpoints, edge )  ;  return this ; }"
3114,"public void init (  Project Filesystem project Filesystem,  Sandbox Properties additional Sandbox Properties )  throws IO Exception{ sandbox Profile Path = project Filesystem . resolve ( project Filesystem . create Temp File ( ""sandbox-profile-"", "" . sb"" )  )  ;  create Profile File From Configuration (  Objects . require Non Null ( sandbox Profile Path ) ,  Sandbox Properties . builder (  )  . from ( sandbox Properties )  . from ( additional Sandbox Properties )  . build (  )  )  ; }"
3115,"public void run On Main Thread ( final  Runnable runnable ) { run On Main Thread ( TIMEOUT_MS, runnable )  ; }"
3116,"private void recycle Views From End Expose (  Recycler View .  Recycler recycler, int dt ) { final int child Count = get Child Count (  )  ;  if  ( dt < 0 )  {     if  ( DEBUG )  {          Log . d ( TAG, "" Called recycle from end with a negative value .   This might happen"" + "" during layout changes but may be sign of a bug"" )  ;      }     return ;  } final int limit = m Orientation Helper . get End (  )  - dt ;  if  ( m Should Reverse Layout Expose )  {     for  ( int i = 0 ;  i < child Count ;  i++ )  {          View child = get Child At ( i )  ;          if  ( m Orientation Helper . get Decorated Start ( child )  - recycle Offset < limit )  {             // stop here             recycle Children ( recycler, 0, i )  ;              return ;          }     } } else {     for  ( int i = child Count - 1 ;  i >= 0 ;  i-- )  {          View child = get Child At ( i )  ;          if  ( m Orientation Helper . get Decorated Start ( child )  - recycle Offset < limit )  {             // stop here             recycle Children ( recycler, child Count - 1, i )  ;              return ;          }     } }}"
3117,"public static  Source Position get Position ( @ Non Null  Node node ) { return get Position ( node, -1, -1 )  ; }"
3118,"public void remove Rules ( final  View view ) { assert Not Null ( view, ""view"" )  ;  if  ( m View Rules Map == null )  {     create Rules Safely And Lazily ( false )  ;  } m View Rules Map . remove ( view )  ; }"
3119,public int get Default Width (  ) { return 1000 ; }
3120,"public com . anychart . charts .  Scatter container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
3121,"public  Garbage Collect Command set Aggressive ( boolean aggressive ) { if  ( aggressive )  {      Stored Config repo Config = repo . get Config (  )  ;      pconfig . set Delta Search Window Size ( repo Config . get Int (  Config Constants . CONFIG_GC_SECTION,  Config Constants . CONFIG_KEY_AGGRESSIVE_WINDOW, DEFAULT_GC_AGGRESSIVE_WINDOW )  )  ;      pconfig . set Max Delta Depth ( repo Config . get Int (  Config Constants . CONFIG_GC_SECTION,  Config Constants . CONFIG_KEY_AGGRESSIVE_DEPTH, DEFAULT_GC_AGGRESSIVE_DEPTH )  )  ;      pconfig . set Reuse Objects ( false )  ;  } else     pconfig = new  Pack Config ( repo )  ;  return this ; }"
3122,public long get Expected Size (  ) { return expected Size ; }
3123,"protected boolean is Assignable From (  Class<?> type,  Class<?> [  ]  classes ) { if  ( type == null )      return false ;  //  there are some other abstract/interface types to exclude too: for  (  Class<?> cls : classes )  {     if  ( cls . is Assignable From ( type )  )  {         return false ;      } } return true ; }"
3124,public void set Vertical Alignment (  Legend Vertical Alignment value ) { m Vertical Alignment = value ; }
3125,public float get Min Offset (  ) { return m Min Offset ; }
3126,"public static  Animator create Indeterminate ( @ Non Null  Object target ) { @ Suppress Lint ( "" Object Animator Binding"" )   Object Animator trim Path Start Animator =  Object Animator . of Float ( target, ""trim Path Start"", 0, 0 . 75f )  ;  trim Path Start Animator . set Duration ( 1333 )  ;  trim Path Start Animator . set Interpolator (  Interpolators . TRIM_PATH_START . INSTANCE )  ;  trim Path Start Animator . set Repeat Count (  Value Animator . INFINITE )  ;  @ Suppress Lint ( "" Object Animator Binding"" )   Object Animator trim Path End Animator =  Object Animator . of Float ( target, ""trim Path End"", 0, 0 . 75f )  ;  trim Path End Animator . set Duration ( 1333 )  ;  trim Path End Animator . set Interpolator (  Interpolators . TRIM_PATH_END . INSTANCE )  ;  trim Path End Animator . set Repeat Count (  Value Animator . INFINITE )  ;  @ Suppress Lint ( "" Object Animator Binding"" )   Object Animator trim Path Offset Animator =  Object Animator . of Float ( target, ""trim Path Offset"", 0, 0 . 25f )  ;  trim Path Offset Animator . set Duration ( 1333 )  ;  trim Path Offset Animator . set Interpolator (  Interpolators . LINEAR . INSTANCE )  ;  trim Path Offset Animator . set Repeat Count (  Value Animator . INFINITE )  ;   Animator Set animator Set = new  Animator Set (  )  ;  animator Set . play Together ( trim Path Start Animator, trim Path End Animator, trim Path Offset Animator )  ;  return animator Set ; }"
3127,"public void get Type (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Type (  )  ; "" )  ; }"
3128,"public com . anychart . core . ui .  Separator margin (  String [  ]  space Or Top Or Top And Bottom,  Number right Or Right And Left,  Number bottom,  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( space Or Top Or Top And Bottom ) , right Or Right And Left, bottom, left )  )  ;  return this ; }"
3129,"public  Glyph Layout draw (  Batch batch,  Char Sequence str, float x, float y ) { cache . clear (  )  ;   Glyph Layout layout = cache . add Text ( str, x, y )  ;  cache . draw ( batch )  ;  return layout ; }"
3130,public void reset (  ) { processor Journal . reset (  )  ; }
3131,public  Builder set Show Second (  Boolean is Show Second ) { this . is Show Second = is Show Second ;  return this ; }
3132,public static _ Fields find By Thrift Id ( int field Id ) { switch ( field Id )  {     case // PATH     1:         return PATH ;      default:         return null ;  }}
3133,public static  Table Data Row Background Provider< Object> similar Row Drawable ( final  Drawable drawable ) { return new  Simple Table Data Row Drawable Provider ( drawable )  ; }
3134,"public static  Dominators make (  Ssa Method meth,  Dom Front .  Dom Info [  ]  dom Infos, boolean postdom ) {  Dominators result = new  Dominators ( meth, dom Infos, postdom )  ;  result . run (  )  ;  return result ; }"
3135,"public com . anychart . charts .  Tag Cloud padding (  String value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
3136,public void on Scan Failed ( final int error Code ) {}
3137,"public  Ct Class make Class (  String classname )  throws  Runtime Exception{ return make Class ( classname, null )  ; }"
3138,"public com . anychart . core . stock . indicators . MACD histogram Series (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . histogram Series ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
3139,"public com . anychart . palettes .  Hatch Fills hatch Fill Palette ( com . anychart . graphics . vector . hatchfill .  Hatch Fill Type [  ]  value ) { return new com . anychart . palettes .  Hatch Fills (  String . format (  Locale . US, js Base + "" . hatch Fill Palette ( %s ) "", array To String ( value )  )  )  ; }"
3140,public void stop (  ) { if  ( m Sensor Manager != null )  {     m Sensor Manager . unregister Listener ( this )  ;      m Sensor Manager = null ;  }}
3141,public  String get Start Url (  )  throws  Unsupported Encoding Exception{ return m Oauth . get Code Request Url (  )  ; }
3142,"public void finish Annotating (  ) { //  Close off the final annotation, if any .  end Annotation (  )  ;  //  Remove annotations that refer to unwritten data .  if  ( annotations != null )  {     int asz = annotations . size (  )  ;      while  ( asz > 0 )  {          Annotation last = annotations . get ( asz - 1 )  ;          if  ( last . get Start (  )  > cursor )  {             annotations . remove ( asz - 1 )  ;              asz-- ;          } else if  ( last . get End (  )  > cursor )  {             last . set End ( cursor )  ;              break ;          } else {             break ;          }     } }}"
3143,"public com . anychart . charts .  Pareto hatch Fill Palette ( com . anychart . palettes .  Hatch Fills settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill Palette ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
3144,public  Builder set Worker Size ( com . facebook . buck . remoteexecution . proto .  Worker Requirements .  Worker Size value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } worker Size_ = value . get Number (  )  ;  on Changed (  )  ;  return this ; }
3145,"public com . anychart . core . gauge . pointers .  Knob container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
3146,"public static  Stats of (  Int Stream values ) { return values . collect (  Stats Accumulator::new,  Stats Accumulator::add,  Stats Accumulator::add All )  . snapshot (  )  ; }"
3147,"public com . anychart . core .  Series Base min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
3148,"public com . anychart . palettes .  Markers item At (  Number index, com . anychart . enums .  Marker Type type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . item At ( %s, %s )  ; "", index,  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
3149,"public void set Y Labels Color ( int scale, int color ) { m Y Labels Color [ scale ]  = color ; }"
3150,public static  Rop op Get Static (  Type Bearer type ) { switch ( type . get Basic Type (  )  )  {     case  Type . BT_INT:         return GET_STATIC_INT ;      case  Type . BT_LONG:         return GET_STATIC_LONG ;      case  Type . BT_FLOAT:         return GET_STATIC_FLOAT ;      case  Type . BT_DOUBLE:         return GET_STATIC_DOUBLE ;      case  Type . BT_OBJECT:         return GET_STATIC_OBJECT ;      case  Type . BT_BOOLEAN:         return GET_STATIC_BOOLEAN ;      case  Type . BT_BYTE:         return GET_STATIC_BYTE ;      case  Type . BT_CHAR:         return GET_STATIC_CHAR ;      case  Type . BT_SHORT:         return GET_STATIC_SHORT ;  } return throw Bad Type ( type )  ; }
3151,public  Iterator<E> iterator (  ) { return new  Queue Iterator (  )  ; }
3152,"public com . anychart . core . cartesian . series .  Continuous Range Base high Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . high Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3153,"public void set Pan Enabled ( boolean enabled X, boolean enabled Y ) { m Pan X Enabled = enabled X ;  m Pan Y Enabled = enabled Y ; }"
3154,"public com . anychart . core .  State Settings selected (  ) { return new com . anychart . core .  State Settings ( js Base + "" . selected (  ) "" )  ; }"
3155,"public static int retain System Ui Flag (  Window window, int out, int type ) { int now = window . get Decor View (  )  . get System Ui Visibility (  )  ;  if  (  ( now & type )  == type )  {     out |= type ;  } return out ; }"
3156,"public com . anychart . core . stock . scrollerseries .  Jump Line container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
3157,"public boolean enter Interruptibly ( long time,  Time Unit unit )  throws  Interrupted Exception{ return lock . try Lock ( time, unit )  ; }"
3158,"private void acquire (  )  throws IO Exception{ char [  ]  four = new char [ 4 ]  ;  int i = 0 ;  do {     int b = input Stream . read (  )  ;      if  ( b == -1 )  {         if  ( i != 0 )  {             throw new IO Exception ( "" Bad base64 stream"" )  ;          } else {             buffer = new int [ 0 ]  ;              eof = true ;              return ;          }     }     char c =  ( char )  b ;      if  (  Base64 . chars . index Of ( c )  != -1 || c ==  Base64 . pad )  {         four [ i++ ]  = c ;      } else if  ( c != '\r' && c != '\n' )  {         throw new IO Exception ( "" Bad base64 stream"" )  ;      } } while  ( i < 4 )  ;  boolean padded = false ;  for  ( i = 0 ;  i < 4 ;  i++ )  {     if  ( four [ i ]  !=  Base64 . pad )  {         if  ( padded )  {             throw new IO Exception ( "" Bad base64 stream"" )  ;          }     } else {         if  ( !padded )  {             padded = true ;          }     } } int l ;  if  ( four [ 3 ]  ==  Base64 . pad )  {     if  ( input Stream . read (  )  != -1 )  {         throw new IO Exception ( "" Bad base64 stream"" )  ;      }     eof = true ;      if  ( four [ 2 ]  ==  Base64 . pad )  {         l = 1 ;      } else {         l = 2 ;      } } else {     l = 3 ;  } int aux = 0 ;  for  ( i = 0 ;  i < 4 ;  i++ )  {     if  ( four [ i ]  !=  Base64 . pad )  {         aux = aux |  (  Base64 . chars . index Of ( four [ i ]  )  <<  ( 6 *  ( 3 - i )  )  )  ;      } } buffer = new int [ l ]  ;  for  ( i = 0 ;  i < l ;  i++ )  {     buffer [ i ]  =  ( aux >>>  ( 8 *  ( 2 - i )  )  )  & 0x FF ;  }}"
3159,public void set Windows (  List< Accessibility Window Info> window List ) { windows . clear (  )  ;  if  ( window List != null )  {     windows . add All ( window List )  ;  }}
3160,"public void share With Pinterest (  String link Or Options,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Pinterest ( %s, %s )  ; "", wrap Quotes ( link Or Options ) , wrap Quotes ( description )  )  )  ; }"
3161,"public static  Reflection Param Info<?> of (  Type Coercer Factory type Coercer Factory,  Method setter ) {  Static Info static Info = static Info Cache . compute If Absent ( setter,  Reflection Param Info::compute Setter Info )  ;  try {      Type Coercer<?, ?> type Coercer = type Coercer Factory . type Coercer For Type (  Type Token . of ( static Info . setter Parameter Type )  )  ;      return new  Reflection Param Info<> ( static Info . name, type Coercer, setter, static Info . closest Getter On Abstract Class Or Interface, static Info . concrete Getter, static Info . is Optional )  ;  } catch  (  Exception e )  {     throw new  Buck Unchecked Execution Exception ( e, "" When getting  Param Info for %s . %s . "", setter . get Declaring Class (  )  . get Name (  ) , static Info . name )  ;  }}"
3162,"public com . anychart . graphics . vector .  Pattern Fill rotate By Anchor (  Number degrees,  String anchor ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rotate By Anchor ( %s, %s )  ; "", degrees, wrap Quotes ( anchor )  )  )  ;  return this ; }"
3163,"public com . anychart . core . gantt . elements .  Milestones Element stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3164,"public void on Patch Service Result (  ) { if  ( !is Retry Enable )  {      Tinker Log . w ( TAG, ""on Patch Service Result retry disabled, just return"" )  ;      return ;  } //delete temp patch file if  ( temp Patch File . exists (  )  )  {      Share Patch File Util . safe Delete File ( temp Patch File )  ;  }}"
3165,public void set Smooth Scrollbar Enabled ( boolean enabled ) { is Smooth Scrollbar Enabled = enabled ; }
3166,public  String get Mime Type (  ) { return m Mime Type ; }
3167,"public void inverse Transform (  Number ratio ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . inverse Transform ( %s )  ; "", ratio )  )  ; }"
3168,"public com . anychart . standalones .  Markers Factory anchor ( com . anychart . enums .  Anchor anchor ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . anchor ( %s )  ; "",  ( anchor != null )  ? anchor . get Js Base (  )  : null )  )  ;  return this ; }"
3169,public static int get Display Rotation (  Activity activity ) { switch ( activity . get Window Manager (  )  . get Default Display (  )  . get Rotation (  )  )  {     case  Surface . ROTATION_0:         return 0 ;      case  Surface . ROTATION_90:         return 90 ;      case  Surface . ROTATION_180:         return 180 ;      case  Surface . ROTATION_270:         return 270 ;      default:         return 0 ;  }}
3170,private void ensure Registered Row Types (  ) { for  (  Integer row Type : registered Row View Setters . key Set (  )  )  {     ensure Row Type ( row Type )  ;  }}
3171,"public  Prop Model with Name (  String name ) { return new  Prop Model ( m Param Model, m Is Optional, m Is Common Prop, false, m Is Dynamic, m Res Type, m Var Arg Single Arg Name )  {     @ Override     public  String get Name (  )  {         return name ;      } } ; }"
3172,"public static void log Revenue (  String product Id, int quantity, double price,  String receipt,  String receipt Signature ) { get Instance (  )  . log Revenue ( product Id, quantity, price, receipt, receipt Signature )  ; }"
3173,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings bounds (  String x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, height )  )  ;  return this ; }"
3174,"private static  String get Name (  Annotation [  ]  annotations ) { for  (  Annotation a : annotations )  {     if  ( a instanceof  Rpc Parameter )  {         return  (  (  Rpc Parameter )  a )  . name (  )  ;      } } throw new  Illegal State Exception ( "" No parameter name"" )  ; }"
3175,public int get End (  ) { return end ; }
3176,"private  Dex With Classes create Canary (  Project Filesystem filesystem,  String store Name, int index,  Immutable List .  Builder< Step> steps ) {  String canary Index = dex Store . index ( group Index, index )  ;  if  ( !group Index . is Present (  )  )  {     canary Index =  String . format ( ""%02d"", index )  ;  }  File Like file Like =  Canary Factory . create ( store Name, canary Index )  ;   String canary Dir Name =  String . format ( ""canary_%s_%d"", store Name, index )  ;   Path scratch Directory For Canary Class = canary Directory . resolve ( canary Dir Name )  ;  //  Strip the  . class suffix to get the class name for the  Dex With Classes object .   String relative Path To Class File = file Like . get Relative Path (  )  ;   Preconditions . check State ( relative Path To Class File . ends With ( "" . class"" )  )  ;   String class Name = relative Path To Class File . replace First ( ""\\ . class$"", """" )  ;  //  Write out the  . class file .  steps . add ( new  Abstract Execution Step ( ""write_canary_class"" )  {     @ Override     public  Step Execution Result execute (  Execution Context context )  throws IO Exception {          Path class File = scratch Directory For Canary Class . resolve ( relative Path To Class File )  ;          try  (  Input Stream input Stream = file Like . get Input (  )  )  {             filesystem . create Parent Dirs ( class File )  ;              filesystem . copy To Path ( input Stream, class File )  ;          }         return  Step Execution Results . SUCCESS ;      } } )  ;  return new  Dex With Classes (  )  {     @ Override     public int get Weight Estimate (  )  {         // should be very small, assume the size is zero .          return 0 ;      }     @ Nullable     @ Override     public  Build Target get Source Build Target (  )  {         return null ;      }     @ Override     public  Source Path get Source Path To Dex File (  )  {         return  Path Source Path . of ( filesystem, scratch Directory For Canary Class )  ;      }     @ Override     public  Immutable Set< String> get Class Names (  )  {         return  Immutable Set . of ( class Name )  ;      }     @ Override     public  Sha1 Hash Code get Classes Hash (  )  {         //  The only thing unique to canary classes is the index,         // which is captured by canary Dir Name .           Hasher hasher =  Hashing . sha1 (  )  . new Hasher (  )  ;          hasher . put String ( canary Dir Name,  Charsets . UTF_8 )  ;          return  Sha1 Hash Code . from Hash Code ( hasher . hash (  )  )  ;      } } ; }"
3177,"public static T load (  Data Source data Source,  Parser<? extends T> parser,  Uri uri, int type )  throws IO Exception{  Parsing Loadable<T> loadable = new  Parsing Loadable<> ( data Source, uri, type, parser )  ;  loadable . load (  )  ;  return  Assertions . check Not Null ( loadable . get Result (  )  )  ; }"
3178,public void set Auto ( boolean auto ) { this . automatic = auto ; }
3179,"public com . anychart . standalones .  Title margin (  Number value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
3180,"public void test Traverse Multiple Initial Nodes (  )  throws  Cycle Exception{  Multimap< Node,  Node> graph =  Linked List Multimap . create (  )  ;  graph . put (  Node . A,  Node . B )  ;  graph . put (  Node . B,  Node . C )  ;  graph . put (  Node . B,  Node . D )  ;  graph . put (  Node . B,  Node . E )  ;   Test Dag Depth First Search dfs = new  Test Dag Depth First Search ( graph )  ;  dfs . traverse (  Immutable List . of (  Node . A,  Node . B,  Node . C,  Node . D,  Node . E )  )  ;  assert Equals (  Immutable List . of (  Node . C,  Node . D,  Node . E,  Node . B,  Node . A ) , dfs . explored Nodes )  ; }"
3181,public static  State Container get State Container Debug (  Section section ) { return section . get State Container (  )  ; }
3182,"public void max Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Width (  )  ; "" )  ; }"
3183,"public static void create Table (  Database db, boolean if Not Exists ) {  String constraint = if Not Exists ? ""IF NOT EXISTS "" : """" ;  db . exec SQL ( // ""CREATE TABLE "" + constraint + ""\""KEEP_ENTITY\""  ( "" + // 0: id ""\""_id\"" INTEGER PRIMARY KEY  )  ; "" )  ; }"
3184,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
3185,"public  Callback Prop Model View Model_ on Visibility Changed (  On Model Visibility Changed Listener< Callback Prop Model View Model_,  Callback Prop Model View> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
3186,public  Builder clear Platform Type (  ) { platform Type_ = 0 ;  on Changed (  )  ;  return this ; }
3187,public void task Reset (  Renderer renderer ) { if  ( m Renderers . size (  )  == 0 )  {     task Reset (  )  ;  }}
3188,public void set Time ( float time ) { this . time = time ; }
3189,"public void add Field (  String vorbis Comment Key,  String value )  throws  Key Not Found Exception,  Field Data Invalid Exception{  Tag Field tagfield = create Field ( vorbis Comment Key, value )  ;  add Field ( tagfield )  ; }"
3190,public void set Custom (  Legend Entry [  ]  entries ) { m Entries = entries ;  m Is Legend Custom = true ; }
3191,"public void get Activity Meta Data_config Changes Always Includes Mcc And Mnc (  )  throws  Exception{  Activity activity = setup Activity (  Shadow Package Manager Test .  Activity With Config Changes . class )  ;   Activity Info activity Info = activity . get Package Manager (  )  . get Activity Info ( activity . get Component Name (  ) , 0 )  ;  int config Changes = activity Info . config Changes ;  assert That ( config Changes &  Activity Info . CONFIG_MCC )  . is Equal To (  Activity Info . CONFIG_MCC )  ;  assert That ( config Changes &  Activity Info . CONFIG_MNC )  . is Equal To (  Activity Info . CONFIG_MNC )  ; }"
3192,public static long increment Section State Update Sync Count (  ) { return s Section Triggered Sync State Update Count . add And Get ( 1 )  ; }
3193,"public com . anychart . core . annotations .  Triangle parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
3194,public boolean is Eager In Default App (  ) { return instantiation ==  Instantiation . EAGER_IN_DEFAULT_APP ; }
3195,public void set Value No Copy ( char [  ]  new Value ) { clear (  )  ;  value = new Value ; }
3196,public void set Backlog ( int backlog ) { this . backlog = backlog ; }
3197,"public  Bundle save Instance State (  ) {  Bundle state = null ;  // FIXME: child activities will freeze as part of on Paused .   Do we // need to do this here? final int N = m Activity Array . size (  )  ;  for  ( int i = 0 ;  i < N ;  i++ )  {     final  Local Activity Record r = m Activity Array . get ( i )  ;      if  ( state == null )  {         state = new  Bundle (  )  ;      }     if  (  ( r . instance State != null || r . cur State == RESUMED )  && r . activity != null )  {         //  We need to save the state now, if we don't currently         // already have it or the activity is currently resumed .          final  Bundle child State = new  Bundle (  )  ;          //                r . activity . perform Save Instance State ( child State )  ;          try {              Activity_perform Save Instance State . invoke ( r . activity, child State )  ;          } catch  (  Invocation Target Exception e )  {             throw new  Runtime Exception ( e . get Target Exception (  )  )  ;          }         r . instance State = child State ;      }     if  ( r . instance State != null )  {         state . put Bundle ( r . id, r . instance State )  ;      } } return state ; }"
3198,"public com . anychart . core . stock . scrollerseries .  Stick bounds (  String x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
3199,"public com . anychart . core . ui .  Markers Factory markers (  ) { return new com . anychart . core . ui .  Markers Factory ( js Base + "" . markers (  ) "" )  ; }"
3200,"final void add Builtin Module (  String name,  Class<? extends I Module> modc, I Module module ) {  Hash Map< String, I Module> modules = m Builtin Modules . get ( name )  ;  if  ( modules == null )  {     modules = new  Hash Map< String, I Module> (  )  ;      m Builtin Modules . put ( name, modules )  ;  } modules . put ( modc . get Name (  ) , module )  ; }"
3201,public  Set< Dfs Pack Description> get Source Packs (  ) { return to Prune (  )  ; }
3202,"public void set Content Type Binary (  )  throws IO Exception{ set Content Type ( ""application/octet-stream"" )  ; }"
3203,public boolean is Deleted (  Managed Object object ) { return deleted Objects . contains ( object )  ; }
3204,"public com . anychart . core . resource .  Grid vertical Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . vertical Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3205,"public com . anychart . standalones .  Color Range title (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . title ( %s )  ; "", settings )  )  ;  return this ; }"
3206,public static void unregister (  Key location ) { cache . unregister Repository ( location )  ; }
3207,public void set Font B Box (  Rect F font B Box ) { this . font B Box = font B Box ; }
3208,"public com . anychart . core .  State Settings rising Stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rising Stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3209,"public com . anychart . core . stock . scrollerseries .  Range Step Area low Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3210,"public boolean validate (  String regex,  Char Sequence error Text ) { boolean is Valid = is Valid ( regex )  ;  if  ( !is Valid )  {     set Error ( error Text )  ;  } post Invalidate (  )  ;  return is Valid ; }"
3211,public static  String get Response Timed Out Error Message (  ) { return RESPONSE_TIMED_OUT_ERROR_MESSAGE ; }
3212,"public void offset (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . offset (  )  ; "" )  ; }"
3213,"public static synchronized  List< String> execute ( final  Project project, final  String target, final  Function< List< String>,  Void> fill Text Results ) { return custom Execute For Target Completion ( project, target, fill Text Results )  ; }"
3214,public  Object Id to Object Id (  )  throws  Sha1 Collision Exception{ finish (  )  ;  return h . to Object Id (  )  ; }
3215,"public com . anychart . core . resource .  Conflicts stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3216,"public void dispose (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . dispose (  )  ; "" )  ; }"
3217,public int get Path Length (  ) { return current Head . path Len ; }
3218,"protected void set Child Region ( int region,  Vector3 side_lengths ) { m Transformed Min . set All ( m Min )  ;  m Transformed Max . set All ( m Max )  ;  calculate Points (  )  ;  calculate Child Side Lengths (  )  ;  if  ( m Split )  {     for  ( int i = 0 ;  i < CHILD_COUNT ;  ++i )  {         m Children [ i ]  . set Child Region ( i, m Child Lengths )  ;      } }}"
3219,"public com . anychart . core .  State Settings hovered (  ) { return new com . anychart . core .  State Settings ( js Base + "" . hovered (  ) "" )  ; }"
3220,public  String read First Line (  )  throws IO Exception{  Closer closer =  Closer . create (  )  ;  try {      Buffered Reader reader = closer . register ( open Buffered Stream (  )  )  ;      return reader . read Line (  )  ;  } catch  (  Throwable e )  {     throw closer . rethrow ( e )  ;  } finally {     closer . close (  )  ;  }}
3221,"public com . anychart . core . axes .  Ticks position ( com . anychart . enums .  Side Position position ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . position ( %s )  ; "",  ( position != null )  ? position . get Js Base (  )  : null )  )  ;  return this ; }"
3222,"private void generate Choice Animate ( final  View view, final int position ) {  View Compat . animate ( view )  . translation X ( 0 )  . set Duration ( animation Time )  . set Listener ( new default Animation (  )  {     @ Override     public void on Animation End (  View view )  {         swipe List View . reset Scrolling (  )  ;          reset Cell (  )  ;      } } )  ; }"
3223,public int get End Pc (  ) { return end Pc ; }
3224,"public  Collection< Abstract Dao<?, ?>> get All Daos (  ) { return  Collections . unmodifiable Collection ( entity To Dao . values (  )  )  ; }"
3225,"public com . anychart . core . stock . indicators .  Stochastic d Series (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . d Series ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
3226,public  String get Name (  ) { return this . name ; }
3227,public void show Event Explorer (  Activity activity ) { if  ( this . event Explorer == null )  {     this . event Explorer = new  Event Explorer ( this . instance Name )  ;  } this . event Explorer . show ( activity )  ; }
3228,"public static  Service Finder<S> load (  Class<S> service,  Class Loader loader ) { return new  Service Finder<> ( service, loader )  ; }"
3229,public boolean has Modifier ( int modifier ) { return  ( field . get Modifiers (  )  & modifier )  != 0 ; }
3230,"private boolean continue Read (  Parsable Byte Array source, byte [  ]  target, int target Length ) { int bytes To Read =  Math . min ( source . bytes Left (  ) , target Length - bytes Read )  ;  if  ( bytes To Read <= 0 )  {     return true ;  } else if  ( target == null )  {     source . skip Bytes ( bytes To Read )  ;  } else {     source . read Bytes ( target, bytes Read, bytes To Read )  ;  } bytes Read += bytes To Read ;  return bytes Read == target Length ; }"
3231,public  Request Builder< File> as File (  ) { return as (  File . class )  . apply ( skip Memory Cache Of ( true )  )  ; }
3232,public boolean has No Drag Offset (  ) { return m Trans Offset X <= 0 && m Trans Offset Y <= 0 ; }
3233,"public static  Access Path from Field Element (  Variable Element element ) {  Preconditions . check Argument ( element . get Kind (  )  . is Field (  ) , ""element must be of type: FIELD but received: "" + element . get Kind (  )  )  ;   Root root = new  Root (  )  ;  return new  Access Path ( root,  Collections . singleton List ( new  Access Path Element ( element )  )  )  ; }"
3234,public  Horizontal Group wrap Reverse ( boolean wrap Reverse ) { this . wrap Reverse = wrap Reverse ;  return this ; }
3235,"static  String missing Message (  ) { return ""`pl . droidsonroids . gif:android-gif-drawable:*` "" + ""dependency is missing, please add to your project explicitly if you "" + ""wish to use GIF media-decoder"" ; }"
3236,"protected void split (  ) { // Keep a list of members we have removed  Array List<I Graph Node Member> removed = new  Array List<I Graph Node Member> (  )  ;  for  ( int i = 0 ;  i < m Members . size (  )  ;  ++i )  {     int fits_in_child = -1 ;      I Graph Node Member member = m Members . get ( i )  ;      for  ( int j = 0 ;  j < CHILD_COUNT ;  ++j )  {         if  ( m Children [ j ]  . contains ( member . get Transformed Bounding Volume (  )  )  )  {             // If the member fits in this child, mark that child             if  ( fits_in_child < 0 )  {                 fits_in_child = j ;              } else {                 // It fits in multiple children, leave it in parent                 fits_in_child = -1 ;                  break ;              }         }     }     if  ( fits_in_child >= 0 )  {         // If a single child was marked, add the member to it         m Children [ fits_in_child ]  . add Object ( member )  ;          // Mark the member for removal from parent         removed . add ( member )  ;      } } // Now remove all of the members marked for removal m Members . remove All ( removed )  ;  // Flag that we have split m Split = true ; }"
3237,public void force Finished (  ) { finished = true ; }
3238,"public synchronized void bootstrap Observer (  Trigger Repository Observer observer ) { add Observer ( observer )  ;  for  (  Entry< String,  Trigger> trigger : m Triggers . entries (  )  )  {     observer . on Put ( trigger . get Value (  )  )  ;  }}"
3239,public  Builder set Auxiliary Build Tag ( java . lang .  String value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } auxiliary Build Tag_ = value ;  on Changed (  )  ;  return this ; }
3240,"public com . anychart . charts .  Sunburst padding (  String value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
3241,"public final  String listing String (  Dalv Insn insn, boolean note Indices ) {  String op = insn . get Opcode (  )  . get Name (  )  ;   String arg = insn Arg String ( insn )  ;   String comment = insn Comment String ( insn, note Indices )  ;   String Builder sb = new  String Builder ( 100 )  ;  sb . append ( op )  ;  if  ( arg . length (  )  != 0 )  {     sb . append ( ' ' )  ;      sb . append ( arg )  ;  } if  ( comment . length (  )  != 0 )  {     sb . append ( "" // "" )  ;      sb . append ( comment )  ;  } return sb . to String (  )  ; }"
3242,public java . lang .  String get Hostname (  ) { java . lang .  Object ref = hostname_ ;  if  ( ref instanceof java . lang .  String )  {     return  ( java . lang .  String )  ref ;  } else {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      hostname_ = s ;      return s ;  }}
3243,"public static  String to Time String ( long seconds ) { long hours = seconds / 3600, remainder = seconds % 3600, minutes = remainder / 60, secs = remainder % 60 ;  return  (  ( hours < 10 ? ""0"" : """" )  + hours + "":"" +  ( minutes < 10 ? ""0"" : """" )  + minutes + "":"" +  ( secs < 10 ? ""0"" : """" )  + secs )  ; }"
3244,public void set Ripple Padding ( int ripple Padding ) { this . ripple Padding = ripple Padding ; }
3245,public byte [  ]  decrypt ( byte [  ]  arr B )  throws  Exception{ return decrypt Cipher . do Final ( arr B )  ; }
3246,public void stop Sync (  ) { if  ( replicator != null )  {     replicator . stop (  )  ;      stopped = true ;      sync Service . notify Event (  Event Type . STOPPED )  ;  }}
3247,"private  String encode Resource Name (  Database Id database Id,  Resource Path path ) { return encoded Database Id ( database Id )  . append ( ""documents"" )  . append ( path )  . canonical String (  )  ; }"
3248,"public com . anychart . core .  Separate Chart padding (  Number value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, value3, value4 )  )  ;  return this ; }"
3249,public int [  ]  get Keys (  ) { int [  ]  keys = this . keys ;  int n = key Count ;  int [  ]  result = new int [ n ]  ;  for  ( int i = 0 ;  n != 0 ;  ++i )  {     int entry = keys [ i ]  ;      if  ( entry != EMPTY && entry != DELETED )  {         result [ --n ]  = entry ;      } } return result ; }
3250,public void process (  Domain Event domain Event ) { domain Event . process (  )  ;  processor Journal . write ( domain Event )  ; }
3251,public int get No Of Off Sets (  ) { return no Of Off Sets ; }
3252,protected  String get Message (  ) { return get Arguments (  )  . get String ( ARG_MESSAGE )  ; }
3253,"public synchronized  Countly set Location (  String country_code,  String city,  String gps Coordinates,  String ip Address ) { L . d ( "" Setting location parameters, cc [ "" + country_code + "" ]  cy [ "" + city + "" ]  gps [ "" + gps Coordinates + "" ]  ip [ "" + ip Address + "" ] "" )  ;  if  ( !is Initialized (  )  )  {     L . w ( "" The use of 'set Location' before init is deprecated, use  Countly Config instead of this"" )  ;      return this ;  } if  ( is Initialized (  )  )  {     location (  )  . set Location ( country_code, city, gps Coordinates, ip Address )  ;  } else {     //use fallback     location Fallback = new  String [  ]  { country_code, city, gps Coordinates, ip Address } ;  } return this ; }"
3254,public  Controller Listener<? super INFO> get Controller Listener (  ) { return m Controller Listener ; }
3255,public short get Advance Width Max (  ) { return this . advance Width Max ; }
3256,"private static  String do_eval (  Context cx,  Stack Frame frame,  String expr ) {  String result String ;   Debugger saved_debugger = cx . get Debugger (  )  ;   Object saved_data = cx . get Debugger Context Data (  )  ;  int saved_level = cx . get Optimization Level (  )  ;  cx . set Debugger ( null, null )  ;  cx . set Optimization Level ( -1 )  ;  cx . set Generating Debug ( false )  ;  try {      Callable script =  (  Callable )  cx . compile String ( expr, """", 0, null )  ;       Object result = script . call ( cx, frame . scope, frame . this Obj,  Script Runtime . empty Args )  ;      if  ( result ==  Undefined . instance )  {         result String = """" ;      } else {         result String =  Script Runtime . to String ( result )  ;      } } catch  (  Exception exc )  {     result String = exc . get Message (  )  ;  } finally {     cx . set Generating Debug ( true )  ;      cx . set Optimization Level ( saved_level )  ;      cx . set Debugger ( saved_debugger, saved_data )  ;  } if  ( result String == null )  {     result String = ""null"" ;  } return result String ; }"
3257,public  External Input Control get External Input Control (  ) { return get Capability (  External Input Control . class )  ; }
3258,"void register ( final  Class<? extends  Annotation> .  .  .  rule Annotations ) { for  (  Class<? extends  Annotation> rule Annotation : rule Annotations )  {     assert Is Valid Rule Annotation ( rule Annotation )  ;      final  Validate Using validate Using = rule Annotation . get Annotation (  Validate Using . class )  ;      final  Class<?> rule Data Type =  Reflector . get Rule Data Type ( validate Using )  ;       Hash Map< Class<?>,  View Data Adapter> view Data Adapter Map = STOCK_ADAPTERS . get (  Text View . class )  ;      if  ( view Data Adapter Map != null )  {          View Data Adapter data Adapter = view Data Adapter Map . get ( rule Data Type )  ;          if  ( data Adapter != null )  {             register (  Text View . class, rule Data Type, data Adapter, rule Annotation )  ;          } else {              String message =  String . format ( "" Unable to find a matching adapter for `%s`, that returns a `%s` . "", rule Annotation . get Name (  ) , rule Data Type . get Name (  )  )  ;              throw new  Saripaar Violation Exception ( message )  ;          }     } }}"
3259,"public static  Matcher< View> litho View ( final  Matcher<? extends  Litho View> sub Matcher ) { return new  Base Matcher< View> (  )  {     @ Override     public boolean matches (  Object item )  {         return item instanceof  Litho View && sub Matcher . matches (  (  Litho View )  item )  ;      }     @ Override     public void describe To (  Description description )  {         description . append Text ( "" Expected to be a  Litho View matching: "" )  ;          sub Matcher . describe To ( description )  ;      } } ; }"
3260,public void set Paint Filter Bitmap ( boolean paint Filter Bitmap ) { if  ( m Paint Filter Bitmap != paint Filter Bitmap )  {     m Paint Filter Bitmap = paint Filter Bitmap ;      invalidate Self (  )  ;  }}
3261,"public void set ( final  Object tag, final  Mesh mesh, int offset, int count ) { if  (  ( count <= 0 )  ||  (  ( count % 3 )  != 0 )  )      throw new com . badlogic . gdx . utils .  Gdx Runtime Exception ( "" Mesh must be indexed and triangulated"" )  ;   Vertex Attribute pos Attr = mesh . get Vertex Attribute (  Usage .  Position )  ;  if  ( pos Attr == null )      throw new com . badlogic . gdx . utils .  Gdx Runtime Exception ( "" Mesh doesn't have a position attribute"" )  ;  set ( tag, mesh . get Vertices Buffer (  ) , mesh . get Vertex Size (  ) , mesh . get Num Vertices (  ) , pos Attr . offset, mesh . get Indices Buffer (  ) , offset, count )  ; }"
3262,public  List< String> get Declined Scopes (  ) { return m Declined Scopes ; }
3263,"public com . anychart . charts .  Cartesian y Grid (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Grid ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
3264,"public static void start Sync Server (  )  throws  Exception{  Request request = new  Request .  Builder (  )  . url ( START_SERVER )  . build (  )  ;   Response response = client . new Call ( request )  . execute (  )  ;  if  ( !response . is Successful (  )  )      throw new IO Exception ( "" Unexpected code "" + response )  ; }"
3265,"public static synchronized  Immutable Set< Build Target> filter All Targets In Project (  Parser parser,  Parsing Context parsing Context )  throws  Build File Parse Exception, IO Exception,  Interrupted Exception{ return  Fluent Iterable . from ( parser . build Target Graph With Top Level Configuration Targets ( parsing Context,  Immutable List . of (  Target Node Predicate Spec . of (  Build File Spec . from Recursive Path (  Cell Relative Path . of ( parsing Context . get Cell (  )  . get Canonical Name (  ) ,  Forward Relative Path . of ( """" )  )  )  )  ) ,  Optional . empty (  )  )  . get Target Graph (  )  . get Nodes (  )  )  . transform (  Target Node::get Build Target )  . to Set (  )  ; }"
3266,"private long compute Age ( long now Millis ) { long apparent Received Age = served Date != null ?  Math . max ( 0, received Response Millis - served Date . get Time (  )  )  : 0 ;  long received Age = age Seconds != -1 ?  Math . max ( apparent Received Age,  Time Unit . SECONDS . to Millis ( age Seconds )  )  : apparent Received Age ;  long response Duration = received Response Millis - sent Request Millis ;  long resident Duration = now Millis - received Response Millis ;  return received Age + response Duration + resident Duration ; }"
3267,"public static void build (  Mesh Part Builder builder, float width, float height, float inner Width, float inner Height, int divisions,  Vector3 center,  Vector3 normal ) { build ( builder, width, height, inner Width, inner Height, divisions, center . x, center . y, center . z, normal . x, normal . y, normal . z, 0f, 360f )  ; }"
3268,"public boolean save Bind Id (  Object entity ) { check Table Exist ( entity . get Class (  )  )  ;   List< Key Value> entity Kv List =  Sql Builder . get Save Key Value List By Entity ( entity )  ;  if  ( entity Kv List != null && entity Kv List . size (  )  > 0 )  {      Table Info tf =  Table Info . get ( entity . get Class (  )  )  ;       Content Values cv = new  Content Values (  )  ;      insert Content Values ( entity Kv List, cv )  ;       Long id = db . insert ( tf . get Table Name (  ) , null, cv )  ;      if  ( id == -1 )          return false ;      tf . get Id (  )  . set Value ( entity, id )  ;      return true ;  } return false ; }"
3269,"public void save As Svg (  String paper Size,  Boolean landscape,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Svg ( %s, %s, %s )  ; "", wrap Quotes ( paper Size ) , landscape, wrap Quotes ( filename )  )  )  ; }"
3270,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
3271,"private  Pattern make Std Err Pattern (  String pattern ) { return  Pattern . compile ( "" . *^"" + pattern + "" . *$ . *"",  Pattern . MULTILINE |  Pattern . DOTALL )  ; }"
3272,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
3273,"public static void set Status Bar Dark Icon (  Window window, boolean dark ) { if  (  Build . VERSION . SDK_INT <  Build . VERSION_CODES . M )  {     change Meizu Flag ( window . get Attributes (  ) , ""MEIZU_FLAG_DARK_STATUS_BAR_ICON"", dark )  ;  } else {      View decor View = window . get Decor View (  )  ;      set Status Bar Dark Icon ( decor View, dark )  ;      set Status Bar Color ( window, 0 )  ;  }}"
3274,"public void contains None In (  Iterable<? extends E> excluded ) {  Collection<A> actual = iterable To Collection ( get Cast Actual (  )  )  ;   List Multimap<E, A> present =  Linked List Multimap . create (  )  ;   Correspondence .  Exception Store exceptions =  Correspondence .  Exception Store . for Iterable (  )  ;  for  ( E excluded Item :  Sets . new Linked Hash Set ( excluded )  )  {     for  ( A actual Item : actual )  {         if  ( correspondence . safe Compare ( actual Item, excluded Item, exceptions )  )  {             present . put ( excluded Item, actual Item )  ;          }     } } //  Fail if we found any matches .  if  ( !present . is Empty (  )  )  {      Immutable List .  Builder< Fact> facts =  Immutable List . builder (  )  ;      facts . add ( fact ( ""expected not to contain any of"", annotate Empty Strings ( excluded )  )  )  ;      facts . add All ( correspondence . describe For Iterable (  )  )  ;      for  ( E excluded Item : present . key Set (  )  )  {          List<A> actual Items = present . get ( excluded Item )  ;          facts . add ( fact ( ""but contained"", annotate Empty Strings ( actual Items )  )  )  ;          facts . add ( fact ( ""corresponding to"", excluded Item )  )  ;          facts . add ( simple Fact ( ""---"" )  )  ;      }     facts . add ( subject . full Contents (  )  )  ;      facts . add All ( exceptions . describe As Additional Info (  )  )  ;      subject . fail Without Actual ( facts . build (  )  )  ;      return ;  } //  Found no match, but we still need to fail if we hit an exception along the way .  if  ( exceptions . has Compare Exception (  )  )  {     subject . fail Without Actual (  Immutable List . < Fact>builder (  )  . add All ( exceptions . describe As Main Cause (  )  )  . add ( fact ( ""expected not to contain any of"", annotate Empty Strings ( excluded )  )  )  . add All ( correspondence . describe For Iterable (  )  )  . add ( simple Fact ( ""found no matches  ( but failing because of exception ) "" )  )  . add ( subject . full Contents (  )  )  . build (  )  )  ;  }}"
3275,public int get Interface Methodref Class ( int index ) {  Memberref Info minfo =  (  Memberref Info )  get Item ( index )  ;  return minfo . class Index ; }
3276,"public static void create ( @ Non Null final  Context context, @ Non Null final  File config File, @ Non Null final  Application Created Listener listener ) { validate Non Null Argument ( context, NONNULL_CONSTANTS . CONTEXT )  ;  validate Non Null Argument ( listener, NONNULL_CONSTANTS . LISTENER )  ;  run On Background ( new  Runnable (  )  {     @ Override     public void run (  )  {         create ( initialize Configuration ( context, config File ) , // client id         null, // authority         null, // redirect uri         null, listener )  ;      } } )  ; }"
3277,public static void reset (  ) { dispatcher . remove All Matchable Calls (  )  ;  dispatcher . clear Historical Requests (  )  ; }
3278,public void test Concrete Class Instantiation (  ) {  Unsafe Allocator unsafe Allocator =  Unsafe Allocator . create (  )  ;  try {     unsafe Allocator . new Instance (  Concrete Class . class )  ;  } catch  (  Exception e )  {     fail (  )  ;  }}
3279,public boolean is Filtered (  ) { return this . filtered ; }
3280,"public static byte [  ]  encrypt Hmac SHA384 ( final byte [  ]  data, final byte [  ]  key ) { return hmac Template ( data, key, "" Hmac SHA384"" )  ; }"
3281,"Set<NODE_TYPE> resolve Target Variable (  String name ) { throw new  Illegal Argument Exception (  String . format ( ""unexpected target variable \""%s\"""", name )  )  ; }"
3282,"public static void put Char Byte Buffer (  Byte Buffer dest, int position,  Byte Buffer char Byte Buffer ) { dest . position ( position )  ;  dest . put ( char Byte Buffer )  ;  // NULL terminating character dest . put (  ( byte )  0x0 )  ; }"
3283,"public  Set< String> run (  Collection< String> include,  Collection< String> exclude, boolean exclude Directories )  throws IO Exception{  Immutable Set< String> include Paths = resolve Paths Matching Glob Patterns ( include, base Path, exclude Directories )  ;   Immutable Set< String> exclude Paths = resolve Paths Matching Glob Patterns ( exclude, base Path, exclude Directories )  ;  return  Sets . difference ( include Paths, exclude Paths )  ; }"
3284,public boolean not Empty (  ) { return size > 0 ; }
3285,"private int [  ]  transform Catch Handlers (  Index Map index Map,  Code .  Catch Handler [  ]  catch Handlers ) { int base Offset = code Out . get Position (  )  ;  code Out . write Uleb128 ( catch Handlers . length )  ;  int [  ]  offsets = new int [ catch Handlers . length ]  ;  for  ( int i = 0 ;  i < catch Handlers . length ;  i++ )  {     offsets [ i ]  = code Out . get Position (  )  - base Offset ;      transform Encoded Catch Handler ( catch Handlers [ i ] , index Map )  ;  } return offsets ; }"
3286,public  Defined Id Group Chat Builder with Name (  String name ) { this . name = name ;  return this ; }
3287,"public  Object invoke (  Rpc Receiver Manager manager, final JSON Array parameters )  throws  Throwable{ //  Issue track call first in case of failure .   Analytics . track ( ""api"", get Name (  )  )  ;  final  Type [  ]  parameter Types = get Generic Parameter Types (  )  ;  final  Object [  ]  args = new  Object [ parameter Types . length ]  ;  final  Annotation [  ]  [  ]  annotations = get Parameter Annotations (  )  ;  if  ( parameters . length (  )  > args . length )  {     throw new  Rpc Error ( "" Too many parameters specified . "" )  ;  } for  ( int i = 0 ;  i < args . length ;  i++ )  {     final  Type parameter Type = parameter Types [ i ]  ;      if  ( i < parameters . length (  )  )  {         args [ i ]  = convert Parameter ( parameters, i, parameter Type )  ;      } else if  (  Method Descriptor . has Default Value ( annotations [ i ]  )  )  {         args [ i ]  =  Method Descriptor . get Default Value ( parameter Type, annotations [ i ]  )  ;      } else {         throw new  Rpc Error ( "" Argument "" +  ( i + 1 )  + "" is not present"" )  ;      } }  Object result = null ;  try {     result = manager . invoke ( m Class, m Method, args )  ;  } catch  (  Throwable t )  {     throw t . get Cause (  )  ;  } return result ; }"
3288,public void close (  ) { native Destroy Builder ( builder Ptr )  ; }
3289,"public boolean auto Load More Animation Only (  ) { return auto Load More ( 0, m Rebound Duration,  ( m Footer Max Drag Rate + m Footer Trigger Rate )  / 2, true )  ; }"
3290,public  Ct Class [  ]  get Exception Types (  )  throws  Not Found Exception{  String [  ]  exceptions ;   Exceptions Attribute ea = method Info . get Exceptions Attribute (  )  ;  if  ( ea == null )      exceptions = null ;  else     exceptions = ea . get Exceptions (  )  ;  return declaring Class . get Class Pool (  )  . get ( exceptions )  ; }
3291,"public void set Result (  Result s,  String m ) { status = s ;  message = m ; }"
3292,void set Transport Callbacks ( final  Internal Transport Callbacks callbacks ) { this . m Internal Transport Callbacks = callbacks ; }
3293,"public static boolean has Cycle (  Graph<N> graph ) { int num Edges = graph . edges (  )  . size (  )  ;  if  ( num Edges == 0 )  {     //  An edge-free graph is acyclic by definition .      return false ;  } if  ( !graph . is Directed (  )  && num Edges >= graph . nodes (  )  . size (  )  )  {     //  Optimization for the undirected case: at least one cycle must exist .      return true ;  }  Map< Object,  Node Visit State> visited Nodes =  Maps . new Hash Map With Expected Size ( graph . nodes (  )  . size (  )  )  ;  for  ( N node : graph . nodes (  )  )  {     if  ( subgraph Has Cycle ( graph, visited Nodes, node, null )  )  {         return true ;      } } return false ; }"
3294,"public com . anychart . charts .  Sankey animation (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . animation ( %s )  ; "", settings )  )  ;  return this ; }"
3295,"public static  Url Template compile (  String template ) { //  These arrays are sizes assuming each of the four possible identifiers will be present at // most once in the template, which seems like a reasonable assumption .   String [  ]  url Pieces = new  String [ 5 ]  ;  int [  ]  identifiers = new int [ 4 ]  ;   String [  ]  identifier Format Tags = new  String [ 4 ]  ;  int identifier Count = parse Template ( template, url Pieces, identifiers, identifier Format Tags )  ;  return new  Url Template ( url Pieces, identifiers, identifier Format Tags, identifier Count )  ; }"
3296,public void set Fast Json Config (  Fast Json Config fast Json Config ) { this . fast Json Config = fast Json Config ; }
3297,"public void start Circle Anim ( final int anim Type, final  Relative Layout anim Container ) { double radius =  Math . sqrt (  Display Util . screenhight Px *  Display Util . screenhight Px +  Display Util . screen Width Px *  Display Util . screen Width Px )  ;  double height Y = - Math . sin (  Math . to Radians ( anim Type )  )  * radius ;  double width X =  Math . cos (  Math . to Radians ( anim Type )  )  * radius ;   Spring tran Spring = spring System . create Spring (  )  ;   Spring tran Spring1 = spring System . create Spring (  )  ;  tran Spring . add Listener ( new  Simple Spring Listener (  )  {     @ Override     public void on Spring Activate (  Spring spring )  {         anim Container . set Visibility (  View . VISIBLE )  ;      }     @ Override     public void on Spring Update (  Spring spring )  {         anim Container . set Translation X (  ( float )  spring . get Current Value (  )  )  ;      } } )  ;  tran Spring1 . add Listener ( new  Simple Spring Listener (  )  {     @ Override     public void on Spring Activate (  Spring spring )  {         anim Container . set Visibility (  View . VISIBLE )  ;      }     @ Override     public void on Spring Update (  Spring spring )  {         anim Container . set Translation Y (  ( float )  spring . get Current Value (  )  )  ;      } } )  ;  tran Spring . set Spring Config ( spring Config )  ;  tran Spring1 . set Spring Config ( spring Config )  ;  tran Spring . set Current Value ( width X )  ;  tran Spring . set End Value ( 0 )  ;  tran Spring1 . set Current Value ( height Y )  ;  tran Spring1 . set End Value ( 0 )  ; }"
3298,"public void throw Exception If Needed (  ) { if  ( result Received && error Code != null )  {     //  Core report errors with int64, so we need to add some extra checks     // to make sure the value is within a range of known errors we can map to,     // which are all inside  Integer range     long long Error Code = error Code ;       Error Code mapped Error =  Error Code . from Native Error ( error Category,  ( int )  long Error Code )  ;      if  ( long Error Code >=  Integer . MIN_VALUE && long Error Code <=  Integer . MAX_VALUE && mapped Error !=  Error Code . UNKNOWN )  {         throw new  App Exception ( mapped Error, error Message )  ;      } else {         throw new  App Exception ( mapped Error,  String . format (  Locale . US, "" Internal error  ( %d ) : %s"", error Code, error Message )  )  ;      } }}"
3299,public  Builder clear Trace Id (  ) { trace Id_ = get Default Instance (  )  . get Trace Id (  )  ;  on Changed (  )  ;  return this ; }
3300,"public void get Data Value (  String name ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Data Value ( %s )  ; "", wrap Quotes ( name )  )  )  ; }"
3301,public boolean is Large (  ) { try {     get Cached Bytes (  )  ;      return false ;  } catch  (  Large Object Exception too Big )  {     return true ;  }}
3302,"public static  Double evaluate (  Object obj )  throws  Function Call Exception{ if  ( obj instanceof  List )  {     return new  Double (  (  (  List )  obj )  . size (  )  )  ;  } throw new  Function Call Exception ( ""count (  )  function can only be used for node-sets"" )  ; }"
3303,public boolean is Device Idle Required (  ) { return is Device Idle Required ; }
3304,"public com . anychart . charts .  Venn margin (  Number value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
3305,"public com . anychart . core . stock . scrollerseries .  Stick bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
3306,private void save Previous Image Values (  ) { if  ( matrix != null && view Height != 0 && view Width != 0 )  {     matrix . get Values ( m )  ;      prev Matrix . set Values ( m )  ;      prev Match View Height = match View Height ;      prev Match View Width = match View Width ;      prev View Height = view Height ;      prev View Width = view Width ;  }}
3307,public static boolean is Number (  String str ) { if  ( is Empty ( str )  )  {     return false ;  } for  ( int i = 0 ;  i < str . length (  )  ;  i++ )  {     if  ( str . char At ( i )  > '9' || str . char At ( i )  < '0' )  {         return false ;      } } return true ; }
3308,public void set Channel Count ( final long channels ) { this . channel Count = channels ; }
3309,"protected int key For Code ( int key Code, int location ) { switch ( key Code )  {     case  Key Codes . KEY_ALT:         return location == LOCATION_RIGHT ?  Keys . ALT_RIGHT :  Keys . ALT_LEFT ;      case  Key Codes . KEY_BACKSPACE:         return  Keys . BACKSPACE ;      case  Key Codes . KEY_CTRL:         return location == LOCATION_RIGHT ?  Keys . CONTROL_RIGHT :  Keys . CONTROL_LEFT ;      case  Key Codes . KEY_DELETE:         return  Keys . FORWARD_DEL ;      case  Key Codes . KEY_DOWN:         return  Keys . DOWN ;      case  Key Codes . KEY_END:         return  Keys . END ;      case  Key Codes . KEY_ENTER:         return location == LOCATION_NUMPAD ?  Keys . NUMPAD_ENTER :  Keys . ENTER ;      case  Key Codes . KEY_ESCAPE:         return  Keys . ESCAPE ;      case  Key Codes . KEY_HOME:         return  Keys . HOME ;      case  Key Codes . KEY_LEFT:         return  Keys . LEFT ;      case  Key Codes . KEY_PAGEDOWN:         return  Keys . PAGE_DOWN ;      case  Key Codes . KEY_PAGEUP:         return  Keys . PAGE_UP ;      case  Key Codes . KEY_RIGHT:         return  Keys . RIGHT ;      case  Key Codes . KEY_SHIFT:         return location == LOCATION_RIGHT ?  Keys . SHIFT_RIGHT :  Keys . SHIFT_LEFT ;      case  Key Codes . KEY_TAB:         return  Keys . TAB ;      case  Key Codes . KEY_UP:         return  Keys . UP ;      case KEY_PAUSE:         return  Keys . PAUSE ;      case KEY_CAPS_LOCK:         return  Keys . CAPS_LOCK ;      case KEY_SPACE:         return  Keys . SPACE ;      case KEY_INSERT:         return  Keys . INSERT ;      case KEY_0:         return  Keys . NUM_0 ;      case KEY_1:         return  Keys . NUM_1 ;      case KEY_2:         return  Keys . NUM_2 ;      case KEY_3:         return  Keys . NUM_3 ;      case KEY_4:         return  Keys . NUM_4 ;      case KEY_5:         return  Keys . NUM_5 ;      case KEY_6:         return  Keys . NUM_6 ;      case KEY_7:         return  Keys . NUM_7 ;      case KEY_8:         return  Keys . NUM_8 ;      case KEY_9:         return  Keys . NUM_9 ;      case KEY_A:         return  Keys . A ;      case KEY_B:         return  Keys . B ;      case KEY_C:         return  Keys . C ;      case KEY_D:         return  Keys . D ;      case KEY_E:         return  Keys . E ;      case KEY_F:         return  Keys . F ;      case KEY_G:         return  Keys . G ;      case KEY_H:         return  Keys . H ;      case KEY_I:         return  Keys . I ;      case KEY_J:         return  Keys . J ;      case KEY_K:         return  Keys . K ;      case KEY_L:         return  Keys . L ;      case KEY_M:         return  Keys . M ;      case KEY_N:         return  Keys . N ;      case KEY_O:         return  Keys . O ;      case KEY_P:         return  Keys . P ;      case KEY_Q:         return  Keys . Q ;      case KEY_R:         return  Keys . R ;      case KEY_S:         return  Keys . S ;      case KEY_T:         return  Keys . T ;      case KEY_U:         return  Keys . U ;      case KEY_V:         return  Keys . V ;      case KEY_W:         return  Keys . W ;      case KEY_X:         return  Keys . X ;      case KEY_Y:         return  Keys . Y ;      case KEY_Z:         return  Keys . Z ;      case KEY_LEFT_WINDOW_KEY:         // FIXME         return  Keys . UNKNOWN ;      case KEY_RIGHT_WINDOW_KEY:         // FIXME         return  Keys . UNKNOWN ;      // case KEY_SELECT_KEY: return  Keys . SELECT_KEY ;      case KEY_NUMPAD0:         return  Keys . NUMPAD_0 ;      case KEY_NUMPAD1:         return  Keys . NUMPAD_1 ;      case KEY_NUMPAD2:         return  Keys . NUMPAD_2 ;      case KEY_NUMPAD3:         return  Keys . NUMPAD_3 ;      case KEY_NUMPAD4:         return  Keys . NUMPAD_4 ;      case KEY_NUMPAD5:         return  Keys . NUMPAD_5 ;      case KEY_NUMPAD6:         return  Keys . NUMPAD_6 ;      case KEY_NUMPAD7:         return  Keys . NUMPAD_7 ;      case KEY_NUMPAD8:         return  Keys . NUMPAD_8 ;      case KEY_NUMPAD9:         return  Keys . NUMPAD_9 ;      case KEY_MULTIPLY:         return  Keys . NUMPAD_MULTIPLY ;      case KEY_ADD:         return  Keys . NUMPAD_ADD ;      case KEY_SUBTRACT:         return  Keys . NUMPAD_SUBTRACT ;      case KEY_DECIMAL_POINT_KEY:         return  Keys . NUMPAD_DOT ;      case KEY_DIVIDE:         return  Keys . NUMPAD_DIVIDE ;      case KEY_F1:         return  Keys . F1 ;      case KEY_F2:         return  Keys . F2 ;      case KEY_F3:         return  Keys . F3 ;      case KEY_F4:         return  Keys . F4 ;      case KEY_F5:         return  Keys . F5 ;      case KEY_F6:         return  Keys . F6 ;      case KEY_F7:         return  Keys . F7 ;      case KEY_F8:         return  Keys . F8 ;      case KEY_F9:         return  Keys . F9 ;      case KEY_F10:         return  Keys . F10 ;      case KEY_F11:         return  Keys . F11 ;      case KEY_F12:         return  Keys . F12 ;      case KEY_F13:         return  Keys . F13 ;      case KEY_F14:         return  Keys . F14 ;      case KEY_F15:         return  Keys . F15 ;      case KEY_F16:         return  Keys . F16 ;      case KEY_F17:         return  Keys . F17 ;      case KEY_F18:         return  Keys . F18 ;      case KEY_F19:         return  Keys . F19 ;      case KEY_F20:         return  Keys . F20 ;      case KEY_F21:         return  Keys . F21 ;      case KEY_F22:         return  Keys . F22 ;      case KEY_F23:         return  Keys . F23 ;      case KEY_F24:         return  Keys . F24 ;      case KEY_NUM_LOCK:         return  Keys . NUM_LOCK ;      case KEY_SCROLL_LOCK:         return  Keys . SCROLL_LOCK ;      case KEY_AUDIO_VOLUME_DOWN:     case KEY_AUDIO_VOLUME_DOWN_FIREFOX:         return  Keys . VOLUME_DOWN ;      case KEY_AUDIO_VOLUME_UP:     case KEY_AUDIO_VOLUME_UP_FIREFOX:         return  Keys . VOLUME_UP ;      case KEY_MEDIA_TRACK_NEXT:         return  Keys . MEDIA_NEXT ;      case KEY_MEDIA_TRACK_PREVIOUS:         return  Keys . MEDIA_PREVIOUS ;      case KEY_MEDIA_STOP:         return  Keys . MEDIA_STOP ;      case KEY_MEDIA_PLAY_PAUSE:         return  Keys . MEDIA_PLAY_PAUSE ;      case  Key Codes . KEY_PRINT_SCREEN:         return  Keys . PRINT_SCREEN ;      case KEY_SEMICOLON:         return  Keys . SEMICOLON ;      case KEY_EQUALS:         return  Keys . EQUALS ;      case KEY_COMMA:         return  Keys . COMMA ;      case KEY_DASH:         return  Keys . MINUS ;      case KEY_PERIOD:         return  Keys . PERIOD ;      case KEY_FORWARD_SLASH:         return  Keys . SLASH ;      case KEY_GRAVE_ACCENT:         // FIXME         return  Keys . UNKNOWN ;      case KEY_OPEN_BRACKET:         return  Keys . LEFT_BRACKET ;      case KEY_BACKSLASH:         return  Keys . BACKSLASH ;      case KEY_CLOSE_BRACKET:         return  Keys . RIGHT_BRACKET ;      case KEY_SINGLE_QUOTE:         return  Keys . APOSTROPHE ;      default:         return  Keys . UNKNOWN ;  }}"
3310,"public void exclude Point (  Number indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . exclude Point ( %s )  ; "", indexes )  )  ; }"
3311,public  Card Element UI get Card Element UI To Click (  ) { return card Element UI To Click ; }
3312,"protected  Authentication Callback successful Interactive Callback ( final  Count Down Latch latch ) { return new  Authentication Callback (  )  {     @ Override     public void on Success ( I Authentication Result authentication Result )  {          Assert . assert False (  String Util . is Empty ( authentication Result . get Access Token (  )  )  )  ;          m Account = authentication Result . get Account (  )  ;          latch . count Down (  )  ;      }     @ Override     public void on Error (  Msal Exception exception )  {          Assert . fail ( exception . get Message (  )  )  ;          latch . count Down (  )  ;      }     @ Override     public void on Cancel (  )  {          Assert . fail ( "" User cancelled flow"" )  ;          latch . count Down (  )  ;      } } ; }"
3313,"public  Entity Model build (  ) { return new  Immutable Entity Model ( name, types )  ; }"
3314,"public static void animate Expanding ( final  View expanding Layout, final  Card View Wrapper card View, final  Recycler View recycler View ) { /*  Update the layout so the extra content becomes visible . */ expanding Layout . set Visibility (  View . VISIBLE )  ;   View parent =  (  View )  expanding Layout . get Parent (  )  ;  final int width Spec =  View .  Measure Spec . make Measure Spec ( parent . get Measured Width (  )  - parent . get Padding Left (  )  - parent . get Padding Right (  ) ,  View .  Measure Spec . AT_MOST )  ;  final int height Spec =  View .  Measure Spec . make Measure Spec ( 0,  View .  Measure Spec . UNSPECIFIED )  ;  expanding Layout . measure ( width Spec, height Spec )  ;   Value Animator animator = create Height Animator ( expanding Layout, 0, expanding Layout . get Measured Height (  )  )  ;  animator . add Update Listener ( new  Value Animator .  Animator Update Listener (  )  {     final int list View Height = recycler View . get Height (  )  ;      final int list View Bottom Padding = recycler View . get Padding Bottom (  )  ;      final  View v = find Direct Child ( expanding Layout, recycler View )  ;      @ Override     public void on Animation Update ( final  Value Animator value Animator )  {         if  ( recycler View . get Layout Manager (  )  . can Scroll Vertically (  )  )  {             final int bottom = v . get Bottom (  )  ;              if  ( bottom > list View Height )  {                 final int top = v . get Top (  )  ;                  if  ( top > 0 )  {                     //recycler View . scroll By ( 0, Math . min ( bottom - list View Height + list View Bottom Padding, top )  )  ;                      recycler View . smooth Scroll By ( 0,  Math . min ( bottom - list View Height + list View Bottom Padding + 4, top )  )  ;                  }             }         }     } } )  ;  animator . add Listener ( new  Animator Listener Adapter (  )  {     @ Override     public void on Animation End (  Animator animation )  {         super . on Animation End ( animation )  ;          //card . set Expanded ( true )  ;          card View . set Expanded ( true )  ;          notify Adapter ( recycler View, recycler View . get Layout Manager (  )  . get Position (  (  View )  card View )  )  ;           Card card = card View . get Card (  )  ;          if  ( card . get On Expand Animator End Listener (  )  != null )              card . get On Expand Animator End Listener (  )  . on Expand End ( card )  ;      } } )  ;  animator . start (  )  ; }"
3315,public void set Self Update Scroll ( boolean value ) { m Self Update Scroll = value ; }
3316,"public  Socket create Socket (  Inet Address host, int port )  throws IO Exception{ return ssl Socket Factory . create Socket ( host, port )  ; }"
3317,"public static final byte [  ]  apply ( final byte [  ]  base, final byte [  ]  delta, byte [  ]  result ) { int delta Ptr = 0 ;  //  Length of the base object  ( a variable length int )  .  // int base Len = 0 ;  int c, shift = 0 ;  do {     c = delta [ delta Ptr++ ]  & 0xff ;      base Len |=  ( c & 0x7f )  << shift ;      shift += 7 ;  } while  (  ( c & 0x80 )  != 0 )  ;  if  ( base . length != base Len )      throw new  Illegal Argument Exception ( J Git Text . get (  )  . base Length Incorrect )  ;  //  Length of the resulting object  ( a variable length int )  .  // int res Len = 0 ;  shift = 0 ;  do {     c = delta [ delta Ptr++ ]  & 0xff ;      res Len |=  ( c & 0x7f )  << shift ;      shift += 7 ;  } while  (  ( c & 0x80 )  != 0 )  ;  if  ( result == null )      result = new byte [ res Len ]  ;  else if  ( result . length != res Len )      throw new  Illegal Argument Exception ( J Git Text . get (  )  . result Length Incorrect )  ;  int result Ptr = 0 ;  while  ( delta Ptr < delta . length )  {     final int cmd = delta [ delta Ptr++ ]  & 0xff ;      if  (  ( cmd & 0x80 )  != 0 )  {         //  Determine the segment of the base which should         // be copied into the output .   The segment is given         // as an offset and a length .          //         int copy Offset = 0 ;          if  (  ( cmd & 0x01 )  != 0 )              copy Offset = delta [ delta Ptr++ ]  & 0xff ;          if  (  ( cmd & 0x02 )  != 0 )              copy Offset |=  ( delta [ delta Ptr++ ]  & 0xff )  << 8 ;          if  (  ( cmd & 0x04 )  != 0 )              copy Offset |=  ( delta [ delta Ptr++ ]  & 0xff )  << 16 ;          if  (  ( cmd & 0x08 )  != 0 )              copy Offset |=  ( delta [ delta Ptr++ ]  & 0xff )  << 24 ;          int copy Size = 0 ;          if  (  ( cmd & 0x10 )  != 0 )              copy Size = delta [ delta Ptr++ ]  & 0xff ;          if  (  ( cmd & 0x20 )  != 0 )              copy Size |=  ( delta [ delta Ptr++ ]  & 0xff )  << 8 ;          if  (  ( cmd & 0x40 )  != 0 )              copy Size |=  ( delta [ delta Ptr++ ]  & 0xff )  << 16 ;          if  ( copy Size == 0 )              copy Size = 0x10000 ;           System . arraycopy ( base, copy Offset, result, result Ptr, copy Size )  ;          result Ptr += copy Size ;      } else if  ( cmd != 0 )  {         //  Anything else the data is literal within the delta         // itself .          //          System . arraycopy ( delta, delta Ptr, result, result Ptr, cmd )  ;          delta Ptr += cmd ;          result Ptr += cmd ;      } else {         //         throw new  Illegal Argument Exception ( J Git Text . get (  )  . unsupported Command0 )  ;      } } return result ; }"
3318,public static float [  ]  convert Doubles To Floats ( double [  ]  input ) { if  ( input == null )      return null ;  float [  ]  output = new float [ input . length ]  ;  for  ( int i = 0 ;  i < input . length ;  ++i )  {     output [ i ]  =  ( float )  input [ i ]  ;  } return output ; }
3319,private static int unbox ( @ Nullable  Integer i ) { return  ( i == null )  ? 0 : i ; }
3320,"public com . anychart . core . stock . scrollerseries .  Range Step Area high Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . high Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3321,"private  View find Focusable View In My Bounds X ( final boolean left Focus, final int left,  View preferred Focusable ) { /*      *  The fading edge's transparent side should be considered for focus      * since it's mostly visible, so we divide the actual fading edge length      * by 2 .       */ final int fading Edge Length = get Horizontal Fading Edge Length (  )  / 2 ;  final int left Without Fading Edge = left + fading Edge Length ;  final int right Without Fading Edge = left + get Width (  )  - fading Edge Length ;  if  (  ( preferred Focusable != null )  &&  ( preferred Focusable . get Left (  )  < right Without Fading Edge )  &&  ( preferred Focusable . get Right (  )  > left Without Fading Edge )  )  {     return preferred Focusable ;  } return find Focusable View In Bounds X ( left Focus, left Without Fading Edge, right Without Fading Edge )  ; }"
3322,"public com . anychart . core .  Visual Base With Bounds parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
3323,"public void fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . fill (  )  ; "" )  ; }"
3324,"private boolean equals ( int reg,  Type Bearer type,  Local Item local ) { return  ( this . reg == reg )  && this . type . equals ( type )  &&  (  ( this . local == local )  ||  (  ( this . local != null )  && this . local . equals ( local )  )  )  ; }"
3325,"protected  Uri get Output Uri (  ) {  Uri output Uri = m Options . output Uri ;  if  ( output Uri == null || output Uri . equals (  Uri . EMPTY )  )  {     try {          String ext = m Options . output Compress Format ==  Bitmap .  Compress Format . JPEG ? "" . jpg"" : m Options . output Compress Format ==  Bitmap .  Compress Format . PNG ? "" . png"" : "" . webp"" ;          output Uri =  Uri . from File (  File . create Temp File ( ""cropped"", ext, get Cache Dir (  )  )  )  ;      } catch  ( IO Exception e )  {         throw new  Runtime Exception ( "" Failed to create temp file for output image"", e )  ;      } } return output Uri ; }"
3326,"public  Equals Tester test Equals (  ) {  Relationship Tester< Object> delegate = new  Relationship Tester<> (  Equivalence . equals (  ) , "" Object#equals"", "" Object#hash Code"", item Reporter )  ;  for  (  List< Object> group : equality Groups )  {     delegate . add Related Group ( group )  ;  } for  ( int run = 0 ;  run < REPETITIONS ;  run++ )  {     test Items (  )  ;      delegate . test (  )  ;  } return this ; }"
3327,public  Camera get Camera (  ) { return camera ; }
3328,public void set Evaluator (  Type Evaluator evaluator ) { m Evaluator = evaluator ; }
3329,public boolean seek (  Byte Buffer byte Buffer ) { return false ; }
3330,"public  Builder<E> add Copies ( E element, int occurrences ) { contents . add ( check Not Null ( element ) , occurrences )  ;  return this ; }"
3331,"public boolean is In Disk Cache Sync ( final  Uri uri ) { return is In Disk Cache Sync ( uri,  Image Request .  Cache Choice . SMALL )  || is In Disk Cache Sync ( uri,  Image Request .  Cache Choice . DEFAULT )  ; }"
3332,"public void repaint ( final int left, final int top, final int right, final int bottom ) { m Handler . post ( new  Runnable (  )  {     public void run (  )  {         invalidate ( left, top, right, bottom )  ;      } } )  ; }"
3333,"public  Flowable< Delete Result> as Rx Flowable ( @ Non Null  Backpressure Strategy backpressure Strategy ) { return  Rx Java Utils . create Flowable ( stor IOSQ Lite, this, backpressure Strategy )  ; }"
3334,public int get Buffer Handle (  ) { return buffer Handle ; }
3335,"public com . anychart . core . cartesian . series .  Range Bar height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
3336,final boolean check Action Provider Override Visibility (  ) { if  ( m Last Request Visible )  {      Action Provider provider = get Support Action Provider (  )  ;      if  ( provider != null && provider . overrides Item Visibility (  )  && !provider . is Visible (  )  )  {         wrapped Set Visible ( false )  ;          return true ;      } } return false ; }
3337,public boolean is Vibrating (  ) { return vibrating ; }
3338,"protected void set State And Ui ( int state ) { m Current State = state ;  if  (  ( state == CURRENT_STATE_NORMAL && is Current Media Listener (  )  )  || state == CURRENT_STATE_AUTO_COMPLETE || state == CURRENT_STATE_ERROR )  {     m Had Prepared = false ;  } switch ( m Current State )  {     case CURRENT_STATE_NORMAL:         if  ( is Current Media Listener (  )  )  {              Debuger . printf Log ( GSY Video Control View . this . hash Code (  )  + ""------------------------------ dismiss CURRENT_STATE_NORMAL"" )  ;              cancel Progress Timer (  )  ;              get GSY Video Manager (  )  . release Media Player (  )  ;              release Pause Cover (  )  ;              m Buffer Point = 0 ;              m Save Change View T Ime = 0 ;              if  ( m Audio Manager != null )  {                 m Audio Manager . abandon Audio Focus ( on Audio Focus Change Listener )  ;              }         }         release Net Work State (  )  ;          break ;      case CURRENT_STATE_PREPAREING:         reset Progress And Time (  )  ;          break ;      case CURRENT_STATE_PLAYING:         if  ( is Current Media Listener (  )  )  {              Debuger . printf Log ( GSY Video Control View . this . hash Code (  )  + ""------------------------------ CURRENT_STATE_PLAYING"" )  ;              start Progress Timer (  )  ;          }         break ;      case CURRENT_STATE_PAUSE:          Debuger . printf Log ( GSY Video Control View . this . hash Code (  )  + ""------------------------------ CURRENT_STATE_PAUSE"" )  ;          start Progress Timer (  )  ;          break ;      case CURRENT_STATE_ERROR:         if  ( is Current Media Listener (  )  )  {             get GSY Video Manager (  )  . release Media Player (  )  ;          }         break ;      case CURRENT_STATE_AUTO_COMPLETE:          Debuger . printf Log ( GSY Video Control View . this . hash Code (  )  + ""------------------------------ dismiss CURRENT_STATE_AUTO_COMPLETE"" )  ;          cancel Progress Timer (  )  ;          if  ( m Progress Bar != null )  {             m Progress Bar . set Progress ( 100 )  ;          }         if  ( m Current Time Text View != null && m Total Time Text View != null )  {             m Current Time Text View . set Text ( m Total Time Text View . get Text (  )  )  ;          }         if  ( m Bottom Progress Bar != null )  {             m Bottom Progress Bar . set Progress ( 100 )  ;          }         break ;  } resolve UI State ( state )  ;  if  ( m Gsy State Ui Listener != null )  {     m Gsy State Ui Listener . on State Changed ( state )  ;  }}"
3339,"public void insert Range ( int index, int count ) { if  ( index > size )      throw new  Index Out Of Bounds Exception ( ""index can't be > size: "" + index + "" > "" + size )  ;  int size Needed = size + count ;  if  ( size Needed > items . length )      items = resize (  Math . max (  Math . max ( 8, size Needed ) ,  ( int )   ( size * 1 . 75f )  )  )  ;   System . arraycopy ( items, index, items, index + count, size - index )  ;  size = size Needed ; }"
3340,"public int compare To (  Content Coding Type other ) { int comp = this . type . compare To Ignore Case ( other . type )  ;  if  ( comp != 0 )  {     return comp ;  } comp = this . parameters . size (  )  - other . parameters . size (  )  ;  if  ( comp != 0 )  {     return comp ;  }  Tree Set< String> this Attributes = new  Tree Set< String> (  String . CASE_INSENSITIVE_ORDER )  ;  this Attributes . add All ( this . parameters . key Set (  )  )  ;   Tree Set< String> other Attributes = new  Tree Set< String> (  String . CASE_INSENSITIVE_ORDER )  ;  other Attributes . add All ( other . parameters . key Set (  )  )  ;   Iterator< String> this Attributes Iterator = this Attributes . iterator (  )  ;   Iterator< String> other Attributes Iterator = other Attributes . iterator (  )  ;  while  ( this Attributes Iterator . has Next (  )  )  {      String this Attribute = this Attributes Iterator . next (  )  ;       String other Attribute = other Attributes Iterator . next (  )  ;      comp = this Attribute . compare To Ignore Case ( other Attribute )  ;      if  ( comp != 0 )  {         return comp ;      }      String this Value = this . parameters . get ( this Attribute )  ;       String other Value = other . parameters . get ( other Attribute )  ;      if  ( other Value == null )  {         other Value = """" ;      }     comp = this Value . compare To ( other Value )  ;      if  ( comp != 0 )  {         return comp ;      } } return 0 ; }"
3341,"private void set Test Device Status ( boolean is Enabled ) { is Test Device = is Enabled ;  //  Update  Shared Preferences, so that we preserve state across app restarts shared Preferences Utils . set Boolean Preference ( TEST_DEVICE_PREFERENCES, is Enabled )  ; }"
3342,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
3343,"public void add Ascii Glyphs (  ) { add Glyphs ( 32, 255 )  ; }"
3344,"public com . anychart . standalones .  Resource Timeline row Fill ( com . anychart . graphics . vector .  Gradient Key value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Fill ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
3345,"public com . anychart . core . resource .  Grid enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
3346,"private static  String get Simple Type Name (  Type Reference typ ) { final  Map< String,  String> map Full Type Name =  Immutable Map . < String,  String>builder (  )  . put ( ""B"", ""byte"" )  . put ( ""C"", ""char"" )  . put ( ""D"", ""double"" )  . put ( ""F"", ""float"" )  . put ( ""I"", ""int"" )  . put ( ""J"", ""long"" )  . put ( ""S"", ""short"" )  . put ( ""Z"", ""boolean"" )  . build (  )  ;  if  ( typ . is Array Type (  )  )      return "" Array"" ;   String typ Name = typ . get Name (  )  . to String (  )  ;  if  ( typ Name . starts With ( ""L"" )  )  {     // handle generics     typ Name = typ Name . split ( ""<"" )  [ 0 ]  . substring ( 1 )  ;      // get unqualified name     typ Name = typ Name . substring ( typ Name . last Index Of ( '/' )  + 1 )  ;      // handle inner classes     typ Name = typ Name . substring ( typ Name . last Index Of ( '$' )  + 1 )  ;  } else {     typ Name = map Full Type Name . get ( typ Name )  ;  } return typ Name ; }"
3347,public  Mount Item get Mount Item At ( int index ) { return m Mount Items . value At ( index )  ; }
3348,"public com . anychart . core . pert .  Milestones hovered (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hovered ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3349,"public static  Wildcard Type supertype Of (  Type bound ) {  Type [  ]  lower Bounds ;  if  ( bound instanceof  Wildcard Type )  {     lower Bounds =  (  (  Wildcard Type )  bound )  . get Lower Bounds (  )  ;  } else {     lower Bounds = new  Type [  ]  { bound } ;  } return new  Wildcard Type Impl ( new  Type [  ]  {  Object . class }, lower Bounds )  ; }"
3350,"public com . anychart . charts .  Tree Map margin (  Number value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
3351,"public com . anychart . core .  State Settings dummy Stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . dummy Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3352,"public  Model With Super_ on Unbind (  On Model Unbound Listener< Model With Super_,  Object> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
3353,public  String get Path (  ) { return path ; }
3354,"public static boolean set Screen Dormant Time (  Context context, int millis ) { return  Settings .  System . put Int ( context . get Content Resolver (  ) ,  Settings .  System . SCREEN_OFF_TIMEOUT, millis )  ; }"
3355,"public com . anychart . core . gantt .  Time Line Header padding (  Number value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
3356,public void on Item Click (  View view ) {}
3357,"protected void finalize (  ) { //  Close off any log file writers that may still be hanging about .   List< String> all Keys =  Lists . new Array List ( command Id To Log File Handler Writer . key Set (  )  )  ;  for  (  String command Id : all Keys )  {     remove Reference Counted Writer ( command Id )  ;  } //  Close off any console writers that may still be hanging about .  for  (  Console Handler State .  Writer writer : command Id To Console Handler Writer . values (  )  )  {     try {         writer . close (  )  ;      } catch  ( IO Exception e )  {         //  Keep going through all the writers even if one fails .          LOG . error ( e, "" Failed to cleanly close (  )  and  Output Stream Writer . "" )  ;      } }}"
3358,public void close Open Position ( final int position ) { if  ( recycler View == null )  {     return ;  }  Recycler View .  View Holder holder = recycler View . find View Holder For Adapter Position ( position )  ;  if  ( holder instanceof  Swipe Open View Holder )  {     // check that the view holder is attached to a parent     if  (  (  (  Swipe Open View Holder )  holder )  . get View Holder (  )  . item View . get Parent (  )  != null )  {         // end any current animations for the view holder         end Recover Animation (  (  Swipe Open View Holder )  holder )  ;          close Open Holder (  (  Swipe Open View Holder )  holder )  ;          recycler View . invalidate (  )  ;      } } // remove the position if we have not already opened Positions . remove ( position )  ; }
3359,void clear Refreshable Views (  ) { m Refreshable Views . clear (  )  ; }
3360,List< Intent> get All Started Services (  ) {  Array List< Intent> started Services Intents = new  Array List<> (  )  ;  for  (  Intent .  Filter Comparison filter Comparison : started Services )  {     started Services Intents . add ( filter Comparison . get Intent (  )  )  ;  } return started Services Intents ; }
3361,"public static  Access Path get Access Path For Node With Map Get (  Node node, @ Nullable  Types types ) { if  ( node instanceof  Local Variable Node )  {     return from Local (  (  Local Variable Node )  node )  ;  } else if  ( node instanceof  Field Access Node )  {     return from Field Access (  (  Field Access Node )  node )  ;  } else if  ( node instanceof  Method Invocation Node )  {     return from Method Call (  (  Method Invocation Node )  node, types )  ;  } else {     return null ;  }}"
3362,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
3363,"public com . anychart . core . stock . scrollerseries . OHLC container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
3364,"public com . anychart . charts .  Cartesian3d selected (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3365,"public XY Entry<K, V> get By Index ( int index ) { K key = index List . get ( index )  ;  return new XY Entry<K, V> ( key, this . get ( key )  )  ; }"
3366,"private static int get Default Size Non Greedy ( int size, int measure Spec ) { int result = size ;  int spec Mode =  Measure Spec . get Mode ( measure Spec )  ;  int spec Size =  Measure Spec . get Size ( measure Spec )  ;  switch ( spec Mode )  {     case  Measure Spec . UNSPECIFIED:         result = size ;          break ;      case  Measure Spec . AT_MOST:         result =  Math . min ( size, spec Size )  ;          break ;      case  Measure Spec . EXACTLY:         result = spec Size ;          break ;  } return result ; }"
3367,"public void start ( @ Non Null  Database db, @ Non Null  List<? extends  Migration Schema> schemas ) { manual Step Migration . start ( db, schemas )  ;  schema Diff Migration . start ( db, schemas )  ; }"
3368,"private void rc4shuffle ( byte [  ]  shuffle, byte [  ]  key,  Cipher rc4 )  throws  General Security Exception{ final byte [  ]  shuffle Key = new byte [ key . length ]  ;  for  ( int i = 1 ;  i <= 19 ;  ++i )  {     for  ( int j = 0 ;  j < shuffle Key . length ;  ++j )  {         shuffle Key [ j ]  =  ( byte )   ( key [ j ]  ^ i )  ;      }     init Encryption ( rc4, create RC4 Key ( shuffle Key )  )  ;      crypt In Place ( rc4, shuffle )  ;  }}"
3369,protected final void check In Bounds (  ) { if  ( current Index < from Index || current Index > to Index )  {     throw new  No Such Element Exception (  )  ;  }}
3370,"public com . anychart . core . gantt . elements .  Tasks Element fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
3371,"private synchronized void legacy Init Buckets (  Sparse Int Array in Use Counts ) {  Preconditions . check Not Null ( in Use Counts )  ;  // clear out all the buckets m Buckets . clear (  )  ;  // create the new buckets final  Sparse Int Array bucket Sizes = m Pool Params . bucket Sizes ;  if  ( bucket Sizes != null )  {     for  ( int i = 0 ;  i < bucket Sizes . size (  )  ;  ++i )  {         final int bucket Size = bucket Sizes . key At ( i )  ;          final int max Length = bucket Sizes . value At ( i )  ;          int bucket In Use Count = in Use Counts . get ( bucket Size, 0 )  ;          m Buckets . put ( bucket Size, new  Bucket<V> ( get Size In Bytes ( bucket Size ) , max Length, bucket In Use Count, m Pool Params . fix Buckets Reinitialization )  )  ;      }     m Allow New Buckets = false ;  } else {     m Allow New Buckets = true ;  }}"
3372,public void resume Animation (  ) { if  ( is Shown (  )  )  {     lottie Drawable . resume Animation (  )  ;      enable Or Disable Hardware Layer (  )  ;  } else {     play Animation When Shown = false ;      was Animating When Not Shown = true ;  }}
3373,"public com . anychart . charts .  Sankey select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3374,public  String get Remote (  ) { return remote ; }
3375,"public void get Absolute Y (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Absolute Y (  )  ; "" )  ; }"
3376,"public void test Select Tracks With Disabled Renderer (  )  throws  Exo Playback Exception{ track Selector . set Parameters (  Parameters . DEFAULT . build Upon (  )  . set Renderer Disabled ( 1, true )  )  ;   Track Selector Result result = track Selector . select Tracks ( RENDERER_CAPABILITIES, TRACK_GROUPS, period Id, TIMELINE )  ;  assert Selections ( result, new  Track Selection [  ]  { TRACK_SELECTIONS [ 0 ] , null } )  ;  assert That ( new  Renderer Configuration [  ]  { DEFAULT, null } )  . is Equal To ( result . renderer Configurations )  ; }"
3377,"public void on Consume Dead Event (  Dead Event de ) { LOGGER . warn ( ""received  Dead Event of type "" + de . event . get Class (  )  . get Simple Name (  )  )  ; }"
3378,"public long get Delay To Next Task (  Time Unit unit ) { if  ( !has Next Scheduled Task (  )  )  {     throw new  Illegal State Exception ( "" No scheduled tasks found . "" )  ;  }  Delayed Future<?> future = scheduled Queue . peek (  )  ;  return future . get Delay ( unit )  ; }"
3379,"Object get Property Value (  String prop Name,  Interpreter interp )  throws  Util Eval Error{  String accessor Name =  Reflect . accessor Name ( ""get"", prop Name )  ;   Class [  ]  class Array = new  Class [ 0 ]  ;   Bsh Method m = get Method ( accessor Name, class Array )  ;  try {     if  ( m != null )          return m . invoke (  (  Object [  ]  )  null, interp )  ;      accessor Name =  Reflect . accessor Name ( ""is"", prop Name )  ;      m = get Method ( accessor Name, class Array )  ;      if  ( m != null )          return m . invoke (  (  Object [  ]  )  null, interp )  ;      return  Primitive . VOID ;  } catch  (  Eval Error ee )  {     throw new  Util Eval Error ( ""' This' property accessor threw exception: "" + ee . get Message (  )  )  ;  }}"
3380,"public  String request String Prompt (  String instructions,  String hint ) {  String value = null ;  try {     value =  (  String )  this . request Prompt ( instructions, hint,  String . class )  ;  } catch  (  Exception e )  { } return value ; }"
3381,"public static void init ( final  On Crash Listener on Crash Listener ) { init ( """", on Crash Listener )  ; }"
3382,"public void drag (  Input Event event, float x, float y, int pointer ) {}"
3383,"public static final boolean start Activity For Result (  Activity activity,  Intent intent, int request Code,  Bundle options ) { return s PL Proxy . start Activity For Result ( activity, intent, request Code, options )  ; }"
3384,public void on View Attached To Window ( @ Non Null T view ) {}
3385,"private static void inject Task Description (  Activity activity,  Activity Info ai ) { //  Android 4 . x及以下暂不支持 if  (  Build . VERSION . SDK_INT <  Build . VERSION_CODES . LOLLIPOP )  {     return ;  } if  ( activity == null || ai == null )  {     return ;  } if  ( LOG )  {      Log Debug . d ( TAG, ""activity = "" + activity )  ;       Log Debug . d ( TAG, ""ai = "" + ai )  ;  } // 获取 activity label  String label = get Label ( activity, ai )  ;  // 如果获取 label 失败（可能性极小），则不修改  Task Description if  (  Text Utils . is Empty ( label )  )  {     return ;  } // 获取 ICON  Bitmap bitmap = get Icon ( activity, ai )  ;  // FIXME color的透明度需要在 Theme中的color Primary中获取，先不实现  Activity Manager .  Task Description td ;  if  ( bitmap != null )  {     td = new  Activity Manager .  Task Description ( label, bitmap )  ;  } else {     td = new  Activity Manager .  Task Description ( label )  ;  } if  ( LOG )  {      Log Debug . d ( TAG, ""td = "" + td )  ;  } activity . set Task Description ( td )  ; }"
3386,"int invalidate Nodes In Path (  Abs Path path, boolean invalidate Build Targets ) { try  (  Auto Closeable Lock write Lock = caches Lock . write Lock (  )  )  {     int invalidated Raw Nodes = 0 ;       Build File Manifest build File Manifest = all Build File Manifests . get If Present ( path )  ;      if  ( build File Manifest != null )  {          Immutable Map< String,  Immutable Map< String,  Object>> raw Nodes = build File Manifest . get Targets (  )  ;          //  Increment the counter         invalidated Raw Nodes = raw Nodes . size (  )  ;          for  (  Map< String,  Object> raw Node : raw Nodes . values (  )  )  {              Unflavored Build Target target =  Unflavored Build Target Factory . create From Raw Node ( cell Root . get Path (  ) , cell Canonical Name, raw Node, path . get Path (  )  )  ;              LOG . debug ( "" Invalidating target for path %s: %s"", path, target )  ;              for  (  Cache<?, ?> cache : typed Node Caches (  )  )  {                 cache . invalidate For ( target )  ;              }             if  ( invalidate Build Targets )  {                 all Raw Node Targets . remove ( target )  ;              }         }     }     return invalidated Raw Nodes ;  }}"
3387,"public com . anychart . core . ui .  Paginator parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
3388,"public static I18 N Bundle create Bundle (  File Handle base File Handle,  Locale locale,  String encoding ) { return create Bundle Impl ( base File Handle, locale, encoding )  ; }"
3389,public  Type get Type (  ) { return m Type ; }
3390,public int get Catch Handler Index (  ) { return catch Handler Index ; }
3391,"public com . anychart . charts .  Sunburst select Marquee Fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
3392,"protected  Category Series build Category Dataset (  String title, double [  ]  values ) {  Category Series series = new  Category Series ( title )  ;  int k = 0 ;  for  ( double value : values )  {     series . add ( "" Project "" + ++k, value )  ;  } return series ; }"
3393,"public void add Object (  Rev Object object )  throws  Incorrect Object Type Exception{ if  ( !exclude ( object )  )      add Object ( object, 0 )  ; }"
3394,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
3395,"public com . anychart . core .  Series Base container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
3396,"void skip To Next Page (  Extractor Input input )  throws IO Exception,  Interrupted Exception{ if  ( !skip To Next Page ( input, end Position )  )  {     //  Not found until eof .      throw new EOF Exception (  )  ;  }}"
3397,"public void set Image URI (  Uri uri, @ Nullable  Object caller Context ) {  Drawee Controller controller = m Controller Builder . set Caller Context ( caller Context )  . set Uri ( uri )  . set Old Controller ( get Controller (  )  )  . build (  )  ;  set Controller ( controller )  ; }"
3398,protected int compute Vertical Scroll Range (  ) { int count = get Child Count (  )  ;  return count == 0 ? get Height (  )  :  ( get Child At ( 0 )  )  . get Bottom (  )  ; }
3399,"protected void draw Points (  Canvas canvas,  Paint paint,  List< Float> points List, XY Series Renderer series Renderer, float y Axis Value, int series Index, int start Index ) { if  ( is Render Points ( series Renderer )  )  {      Scatter Chart points Chart = get Points Chart (  )  ;      if  ( points Chart != null )  {         int length =  ( int )  m Path Measure . get Length (  )  ;          int points Length = points List . size (  )  ;          float [  ]  coords = new float [ 2 ]  ;          for  ( int i = 0 ;  i < length ;  i++ )  {             m Path Measure . get Pos Tan ( i, coords, null )  ;              double prev Diff =  Double . MAX_VALUE ;              boolean ok = true ;              for  ( int j = 0 ;  j < points Length && ok ;  j += 2 )  {                 double diff =  Math . abs ( points List . get ( j )  - coords [ 0 ]  )  ;                  if  ( diff < 1 )  {                     points List . set ( j + 1, coords [ 1 ]  )  ;                      prev Diff = diff ;                  }                 ok = prev Diff > diff ;              }         }         points Chart . draw Series ( canvas, paint, points List, series Renderer, y Axis Value, series Index, start Index )  ;      } }}"
3400,"public  Item2 new Item2 From Cursor ( @ Non Null  Cursor cursor ) { return  Item2_ Schema . INSTANCE . new Model From Cursor ( connection, cursor, 0 )  ; }"
3401,public  Anim Dialog Utils set Dialog Closeable ( boolean dialog Closeable ) { is Dialog Closeable = dialog Closeable ;  return this ; }
3402,public void set Advance Width Max ( short advance Width Max ) { this . advance Width Max = advance Width Max ; }
3403,public final  String join ( @ Nullable  Object [  ]  parts ) { return join (  Arrays . as List ( parts )  )  ; }
3404,public void commit (  )  throws  Cannot Write Exception{  Audio File IO . write ( this )  ; }
3405,"private byte [  ]  calculuate O Value ( byte [  ]  owner Password, byte [  ]  user Password, int key Bit Length, int revision )  throws  General Security Exception{ //  Steps 1-4 final byte [  ]  rc4 Key Bytes = get Initial Owner Password Key Bytes ( owner Password, key Bit Length, revision )  ;  final  Cipher rc4 = create RC4 Cipher (  )  ;  init Encryption ( rc4, create RC4 Key ( rc4 Key Bytes )  )  ;  //  Step 5:  Pad or truncate the user password string as described in step // 1 of  Algorithm 3 . 2 .  //  Step 6:  Encrypt the result of step 5, using an RC4 encryption // function with the encryption key obtained in step 4 .  byte [  ]  pwvalue = crypt ( rc4, pad Password ( user Password )  )  ;  // 4 and performing an XOR  ( exclusive or )  operation between if  ( revision >= 3 )  {     rc4shuffle ( pwvalue, rc4 Key Bytes, rc4 )  ;  } assert pwvalue . length == 32 ;  return pwvalue ; }"
3406,Builder set Deepen Since ( int value ) { deepen Since = value ;  return this ; }
3407,"public  Abstract Epoxy Model With View_ on Unbind (  On Model Unbound Listener< Abstract Epoxy Model With View_,  View> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
3408,"private static  Rop pick Binary Op (  Type List types,  Rop int1,  Rop long1,  Rop float1,  Rop double1,  Rop int2,  Rop long2,  Rop float2,  Rop double2 ) { int bt1 = types . get Type ( 0 )  . get Basic Frame Type (  )  ;   Rop result = null ;  switch ( types . size (  )  )  {     case 1:         {             switch ( bt1 )  {                 case  Type . BT_INT:                     return int1 ;                  case  Type . BT_LONG:                     return long1 ;                  case  Type . BT_FLOAT:                     result = float1 ;                      break ;                  case  Type . BT_DOUBLE:                     result = double1 ;                      break ;              }             break ;          }     case 2:         {             switch ( bt1 )  {                 case  Type . BT_INT:                     return int2 ;                  case  Type . BT_LONG:                     return long2 ;                  case  Type . BT_FLOAT:                     result = float2 ;                      break ;                  case  Type . BT_DOUBLE:                     result = double2 ;                      break ;              }             break ;          } } if  ( result == null )  {     return throw Bad Types ( types )  ;  } return result ; }"
3409,"public void set Toolbar Color ( @ Color Int int color ) { m Option Bundle . put Int ( EXTRA_TOOL_BAR_COLOR, color )  ; }"
3410,"public void draw Left Line (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . draw Left Line (  )  ; "" )  ; }"
3411,"public boolean refines (  Selectable other ) {  Preconditions . check State ( other instanceof  Config Setting Selectable )  ;   Config Setting Selectable other Selectable =  (  Config Setting Selectable )  other ;  if  ( values . equals ( other Selectable . values )  )  {     return refines ( constraint Values, other Selectable . constraint Values )  ;  } else if  ( constraint Values . equals ( other Selectable . constraint Values )  )  {     return refines ( values . entry Set (  ) , other Selectable . values . entry Set (  )  )  ;  } else {     return refines ( values . entry Set (  ) , other Selectable . values . entry Set (  )  )  && refines ( constraint Values, other Selectable . constraint Values )  ;  }}"
3412,"public  View Holder on Create View Holder ( final  View Group parent, final int layout Resource Id ) { return new  Recycler View .  View Holder (  Layout Inflater . from ( parent . get Context (  )  )  . inflate ( layout Resource Id, parent, false )  )  { } ; }"
3413,"protected  Process Result internal Run Hook If Present (  Repository repository, final  String hook Name,  String [  ]  args,  Output Stream out Redirect,  Output Stream err Redirect,  String stdin Args )  throws J Git Internal Exception{  File hook File = find Hook ( repository, hook Name )  ;  if  ( hook File == null || hook Name == null )  {     return new  Process Result (  Status . NOT_PRESENT )  ;  }  File run Directory = get Run Directory ( repository, hook Name )  ;  if  ( run Directory == null )  {     return new  Process Result (  Status . NOT_PRESENT )  ;  }  String cmd = hook File . get Absolute Path (  )  ;   Process Builder hook Process = run In Shell ( shell Quote ( cmd ) , args )  ;  hook Process . directory ( run Directory . get Absolute File (  )  )  ;   Map< String,  String> environment = hook Process . environment (  )  ;  environment . put (  Constants . GIT_DIR_KEY, repository . get Directory (  )  . get Absolute Path (  )  )  ;  if  ( !repository . is Bare (  )  )  {     environment . put (  Constants . GIT_WORK_TREE_KEY, repository . get Work Tree (  )  . get Absolute Path (  )  )  ;  } try {     return new  Process Result ( run Process ( hook Process, out Redirect, err Redirect, stdin Args ) ,  Status . OK )  ;  } catch  ( IO Exception e )  {     throw new J Git Internal Exception (  Message Format . format ( J Git Text . get (  )  . exception Caught During Execution Of Hook, hook Name ) , e )  ;  } catch  (  Interrupted Exception e )  {     throw new J Git Internal Exception (  Message Format . format ( J Git Text . get (  )  . exception Hook Execution Interrupted, hook Name ) , e )  ;  }}"
3414,public void set Reparent With Overlay ( boolean reparent With Overlay ) { m Use Overlay = reparent With Overlay ; }
3415,"private static  Bitmap get Icon (  Activity activity,  Activity Info ai ) {  Drawable icon Drawable ;   Resources res = activity . get Resources (  )  ;  // 获取  Activity icon icon Drawable = get Icon By Id ( res, ai . icon )  ;  // 获取插件  Application  Icon if  ( icon Drawable == null )  {     icon Drawable = get Icon By Id ( res, ai . application Info . icon )  ;  } // 获取  App (  Host )   Icon if  ( icon Drawable == null )  {      Context app Context =  Re Plugin Internal . get App Context (  )  ;       Resources app Resource = app Context . get Resources (  )  ;       Application Info app Info = app Context . get Application Info (  )  ;      icon Drawable = get Icon By Id ( app Resource, app Info . icon )  ;  }  Bitmap bitmap = null ;  if  ( icon Drawable instanceof  Bitmap Drawable )  {     bitmap =  (  (  Bitmap Drawable )  icon Drawable )  . get Bitmap (  )  ;  } if  ( LOG )  {      Log Debug . d ( TAG, ""bitmap = "" + bitmap )  ;  } return bitmap ; }"
3416,"public void to Html Table (  String title,  Boolean as String ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Html Table ( %s, %s )  ; "", wrap Quotes ( title ) , as String )  )  ; }"
3417,"public com . anychart . core . resource .  Grid even Holiday Fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . even Holiday Fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
3418,"public int decode ( boolean descending, byte [  ]  buffer, int offset ) { int buffer Pos = offset ;  int b = buffer [ buffer Pos++ ]  & 0x FF ;  //  Determine if the leading byte is negative, and if so, invert it .  boolean invert Encoding =  ( b & 0x80 )  == 0 ;  int inverter = invert Encoding ? 0x FF : 0 ;  b ^= inverter ;  //  Determine if the result is negative .  boolean negative = invert Encoding ^ descending ;  //  Determine if the exponent is negative too, don't invert again though because this could // mangle any significand bits in the leading byte .  boolean exponent Negative =  ( b & 0x40 )  == 0 ;  int exponent Inverter = exponent Negative ? 0x FF : 0 ;  int exponent ;  long significand = 0 L ;  //  The position in the significand to write the next bit int write Bit =  Index Number Encoder . SIGNIFICAND_BITS ;  int marker = decode Marker ( b ^ exponent Inverter )  ;  switch ( marker )  {     case -4:         // st00001 C => exponent 0         if  ( exponent Negative )  {             throw new  Illegal Argument Exception ( "" Invalid encoded number: exponent negative zero is invalid"" )  ;          }         exponent = 0 ;          break ;      //  Falls through     case -3:     //  Falls through     case -2:     case -1:         // st0001m C => exponent 1         // st001mm C => exponent 2         // st01mmm C => exponent 3         //         //  All these cases have a fixed exponent value and pack significand bits into the leading         // byte .          exponent =  Index Number Encoder . EXP1_END + marker ;          write Bit -= exponent ;          //  The number of bits of significand is equal to the exponent .   The significand bits are also         // shifted one left to make room for the continuation bit .          int significand Start = exponent + 1 ;          int significand Mask = ~ ( -1 << significand Start )  & 0x7 E ;          significand |=  (  ( long )   ( b & significand Mask )  )  <<  ( write Bit - 1 )  ;          break ;      case 1:         // st10 eeee mmmm mmm C         //  Exponent is stored in the low-order 4 bits, with bias         exponent =  ( b ^ exponent Inverter )  & 0x0 F ;          exponent +=  Index Number Encoder . EXP1_END ;          b =  ( buffer [ buffer Pos++ ]  & 0x FF )  ^ inverter ;          write Bit -= 7 ;          significand |= decode Trailing Significand Byte ( b, write Bit )  ;          break ;      case 2:         // st11 0eee eeee mmmm mmmm mmm C         // 7 bit exponent .  bits 6-4 come from the leading byte         exponent =  (  ( b ^ exponent Inverter )  & 0x07 )  << 4 ;          // bits 3-0 come from the next byte, then undo bias         b =  ( buffer [ buffer Pos++ ]  & 0x FF )  ^ inverter ;          exponent |=  ( b ^ exponent Inverter )  >>> 4 ;          exponent +=  Index Number Encoder . EXP2_END ;          // 4 bits of significand in the low-order four bits of the second byte         write Bit -= 4 ;          significand |=  (  ( long )  b & 0x0 F )  << write Bit ;          //  And a forced third byte with continuation bit         b =  ( buffer [ buffer Pos++ ]  & 0x FF )  ^ inverter ;          write Bit -= 7 ;          significand |= decode Trailing Significand Byte ( b, write Bit )  ;          break ;      case 3:         // st11 10ee eeee eeee mmmm mmm C         // 10 bit exponent .   Bits 9-8 come from the leading byte         exponent =  (  ( b ^ exponent Inverter )  & 0x03 )  << 8 ;          // bits 7-0 come from the next byte, then undo bias         b =  ( buffer [ buffer Pos++ ]  & 0x FF )  ^ inverter ;          exponent |= b ^ exponent Inverter ;          exponent +=  Index Number Encoder . EXP3_END ;          //  And a forced third byte with continuation bit         b =  ( buffer [ buffer Pos++ ]  & 0x FF )  ^ inverter ;          write Bit -= 7 ;          significand |= decode Trailing Significand Byte ( b, write Bit )  ;          break ;      case 6:         //  Special cases where exponent is infinite         if  ( invert Encoding )  {             if  ( exponent Negative )  {                 // zero: negative number, negative infinite exponent                 //  Not generated by the encoder and converted to positive 0 shortly .                  record Number ( negative,  Index Number Encoder . NEGATIVE_INFINITE_EXPONENT, 0 )  ;              } else {                 //  Need another byte to distinguish  Na N from - Infinity                 //  These special values are defined in terms of the complemented bytes so don't invert                 // to make the comparisons                 b =  ( buffer [ buffer Pos++ ]  & 0x FF )  ;                  if  ( b == 0x80 )  {                     // - Infinity                     record Number ( negative,  Index Number Encoder . POSITIVE_INFINITE_EXPONENT, 0 )  ;                  } else if  ( b == 0x60 )  {                     //  Na N                     record Number ( negative,  Index Number Encoder . POSITIVE_INFINITE_EXPONENT, 1 )  ;                  } else {                     throw new  Illegal Argument Exception ( "" Invalid encoded byte array"" )  ;                  }             }         } else {             if  ( exponent Negative )  {                 // zero: positive number, negative infinite exponent                 record Number ( negative,  Index Number Encoder . NEGATIVE_INFINITE_EXPONENT, 0 )  ;              } else {                 //  Positive infinity                 record Number ( negative,  Index Number Encoder . POSITIVE_INFINITE_EXPONENT, 0 )  ;              }         }         return buffer Pos - offset ;      default:         //   * cases 4 and 5 are reserved for expansion  ( possibly to quad precision )          throw new  Illegal Argument Exception ( "" Invalid encoded byte array"" )  ;  } while  (  ( b & 1 )  != 0 )  {     //  Continuation bit present ;  examine the next byte     b =  ( buffer [ buffer Pos++ ]  & 0x FF )  ^ inverter ;      write Bit -= 7 ;      if  ( write Bit >= 0 )  {         significand |= decode Trailing Significand Byte ( b, write Bit )  ;      } else {         significand |=  (  ( long )   ( b & 0x FE )  )  >>> - ( write Bit - 1 )  ;          write Bit = 0 ;          // high order of an encoded significand byte .          if  (  ( b & 1 )  != 0 )  {             throw new  Illegal Argument Exception ( "" Invalid encoded byte array: overlong sequence"" )  ;          }     } } if  ( exponent Negative )  {     exponent = -exponent ;  } record Number ( negative, exponent, significand )  ;  return buffer Pos - offset ; }"
3419,protected int skip Source ( long position Us ) { return stream . skip Data ( position Us - stream Offset Us )  ; }
3420,"public synchronized long register ( T o ) { check Not Null ( o )  ;   Long native Id = native Obj To Id Map . inverse (  )  . get ( o )  ;  if  ( native Id != null )  {     if  ( debug )  {          Debug Info debug Info = id To Debug Info Map . get ( native Id )  ;          if  ( debug Info != null )  {              System . out . printf ( "" Native Obj Registry %s: register %d -> %s already registered:%n"", name, native Id, o )  ;              debug Info . registration Trace . print Stack Trace (  System . out )  ;          }     }     throw new  Illegal State Exception ( "" Object was previously registered with id "" + native Id )  ;  } native Id = next Id ;  if  ( debug )  {      System . out . printf ( "" Native Obj Registry %s: register %d -> %s%n"", name, native Id, o )  ;      id To Debug Info Map . put ( native Id, new  Debug Info ( new  Trace ( o )  )  )  ;  } native Obj To Id Map . put ( native Id, o )  ;  next Id++ ;  return native Id ; }"
3421,public void set Cache Dir (  File cache Dir ) { this . m Cache Dir = cache Dir ; }
3422,public static  Immutable List< Tone> get Played Tones (  ) { return  Immutable List . copy Of ( played Tones )  ; }
3423,"public  String provide Path (  ) { return ""/blockcanary/"" ; }"
3424,"public com . anychart . graphics . vector .  Unmanaged Layer append Transformation Matrix (  Number m00,  Number m10,  Number m01,  Number m11,  Number m02,  Number m12 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . append Transformation Matrix ( %s, %s, %s, %s, %s, %s )  ; "", m00, m10, m01, m11, m02, m12 )  )  ;  return this ; }"
3425,"private void expand If Necessary ( int data Length )  throws IO Exception{ int element Length =  Element . HEADER_LENGTH + data Length ;  int remaining Bytes = remaining Bytes (  )  ;  if  ( remaining Bytes >= element Length )  {     return ;  } //  Expand .  int previous Length = file Length ;  int new Length ;  //  Double the length until we can fit the new data .  do {     remaining Bytes += previous Length ;      new Length = previous Length << 1 ;      previous Length = new Length ;  } while  ( remaining Bytes < element Length )  ;  set Length ( new Length )  ;  //  Calculate the position of the tail end of the data in the ring buffer int end Of Last Element = wrap Position ( last . position +  Element . HEADER_LENGTH + last . length )  ;  //  If the buffer is split, we need to make it contiguous if  ( end Of Last Element < first . position )  {      File Channel channel = raf . get Channel (  )  ;      // destination position     channel . position ( file Length )  ;      int count = end Of Last Element -  Element . HEADER_LENGTH ;      if  ( channel . transfer To ( HEADER_LENGTH, count, channel )  != count )  {         throw new  Assertion Error ( "" Copied insufficient number of bytes!"" )  ;      } } //  Commit the expansion .  if  ( last . position < first . position )  {     int new Last Position = file Length + last . position - HEADER_LENGTH ;      write Header ( new Length, element Count, first . position, new Last Position )  ;      last = new  Element ( new Last Position, last . length )  ;  } else {     write Header ( new Length, element Count, first . position, last . position )  ;  } file Length = new Length ; }"
3426,"public com . anychart . charts .  Pert bounds (  String x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
3427,"protected boolean standard Contains Value ( @ Nullable  Object value ) { return  Maps . contains Value Impl ( this, value )  ; }"
3428,"public com . anychart . charts .  Venn animation (  Boolean enabled,  Number duration ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . animation ( %s, %s )  ; "", enabled, duration )  )  ;  return this ; }"
3429,"public static void restart (  Activity activity ) { restart ( activity, true )  ; }"
3430,"public void node Changed (  Tree Node node ) { if  ( listener List != null && node != null )  {      Tree Node parent = node . get Parent (  )  ;      if  ( parent != null )  {         int an Index = parent . get Index ( node )  ;          if  ( an Index != -1 )  {             int [  ]  c Indexs = new int [ 1 ]  ;              c Indexs [ 0 ]  = an Index ;              nodes Changed ( parent, c Indexs )  ;          }     } else if  ( node == get Root (  )  )  {         nodes Changed ( node, null )  ;      } }}"
3431,"public void height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . height (  )  ; "" )  ; }"
3432,"static void report Public Address (  )  throws  Exception{ logger . info ( "" Public address: "" + public Address (  )  )  ; }"
3433,"public com . anychart . core . stock . series .  Base max Labels (  String settings ) { return new com . anychart . core . stock . series .  Base (  String . format (  Locale . US, js Base + "" . max Labels ( %s ) "", wrap Quotes ( settings )  )  )  ; }"
3434,"public static  File get Photo Cache Dir ( @ Non Null  Context context, @ Non Null  String cache Name ) {  File cache Dir = context . get Cache Dir (  )  ;  if  ( cache Dir != null )  {      File result = new  File ( cache Dir, cache Name )  ;      if  ( result . is Directory (  )  || result . mkdirs (  )  )  {         return result ;      }     //  File wasn't able to create a directory, or the result exists but not a directory     return null ;  } if  (  Log . is Loggable ( TAG,  Log . ERROR )  )  {      Log . e ( TAG, ""default disk cache dir is null"" )  ;  } return null ; }"
3435,"public void authentication Fails (  ) { if  ( pending Callback == null )  {     throw new  Illegal State Exception ( "" No active fingerprint authentication request . "" )  ;  } pending Callback . on Authentication Failed (  )  ; }"
3436,public void set Son List (  List< Fast Json Son Test VO> son List ) { this . son List = son List ; }
3437,final int get Connection State (  ) { return connection State ; }
3438,"public static void trace (  String message,  Object .  .  .  args ) { trace ( null, message, args )  ; }"
3439,public void submit (  Intent data ) { if  ( picker Type ==  Picker . PICK_IMAGE_CAMERA )  {     handle Camera Data ( data )  ;  } else if  ( picker Type ==  Picker . PICK_IMAGE_DEVICE )  {     handle Gallery Data ( data )  ;  }}
3440,"public static  Submodule Walk for Index (  Repository repository )  throws IO Exception{ //  The caller closes it @ Suppress Warnings ( ""resource"" )   Submodule Walk generator = new  Submodule Walk ( repository )  ;  try {      Dir Cache index = repository . read Dir Cache (  )  ;      generator . set Tree ( new  Dir Cache Iterator ( index )  )  ;  } catch  ( IO Exception e )  {     generator . close (  )  ;      throw e ;  } return generator ; }"
3441,"public com . anychart . core . axismarkers .  Line line Marker (  Number index ) { return new com . anychart . core . axismarkers .  Line (  String . format (  Locale . US, js Base + "" . line Marker ( %s ) "", index )  )  ; }"
3442,public synchronized int get Saturation (  ) { return get Saturation ( native Get Saturation ( m Native Ptr )  )  ; }
3443,public final void is Positive Infinity (  ) { is Equal To (  Float . POSITIVE_INFINITY )  ; }
3444,public boolean get Is Disabled (  ) { return is Disabled ; }
3445,"private static  Supplier< Optional< Path>> create Apple Developer Directory Supplier (  Process Executor process Executor ) { return  More Suppliers . memoize (  (  )  -> {      Process Executor Params process Executor Params =  Process Executor Params . builder (  )  . set Command (  Immutable List . of ( ""xcode-select"", ""--print-path"" )  )  . build (  )  ;      //  Must specify that stdout is expected or else output may be wrapped in  Ansi escape     // chars .       Set< Option> options =  Enum Set . of (  Option . EXPECTING_STD_OUT )  ;       Result result ;      try {         result = process Executor . launch And Execute ( process Executor Params, options, /* stdin */          Optional . empty (  ) , /* time Out Ms */          Optional . empty (  ) , /* time Out Handler */          Optional . empty (  )  )  ;      } catch  (  Interrupted Exception | IO Exception e )  {         LOG . warn ( "" Could not execute xcode-select, continuing without developer dir . "" )  ;          return  Optional . empty (  )  ;      }     if  ( result . get Exit Code (  )  != 0 )  {         throw new  Runtime Exception ( result . get Message For Unexpected Result ( ""xcode-select --print-path"" )  )  ;      }     return  Optional . of ( normalize Path (  Paths . get ( result . get Stdout (  )  . get (  )  . trim (  )  )  )  )  ;  } )  ; }"
3446,"public static void build (  Mesh Part Builder builder, float radius, int divisions, final  Vector3 center, final  Vector3 normal, float angle From, float angle To ) { build ( builder, radius, divisions, center . x, center . y, center . z, normal . x, normal . y, normal . z, angle From, angle To )  ; }"
3447,"public static float px2sp (  Context context, float px Value ) { final float font Scale = context . get Resources (  )  . get Display Metrics (  )  . scaled Density ;  return  ( px Value / font Scale + 0 . 5f )  ; }"
3448,"public void test Acquire Token Silent Sync With Assertion Positive (  )  throws IO Exception,  Authentication Exception,  Interrupted Exception{ final  File Mock Context mock Context = new  File Mock Context ( get Instrumentation (  )  . get Context (  )  )  ;  final I Token Cache Store mock Cache = new  Default Token Cache Store ( get Instrumentation (  )  . get Context (  )  )  ;  final  Authentication Context context = get Authentication Context ( mock Context, VALID_AUTHORITY, false, mock Cache )  ;  final  Mock Activity test Activity = new  Mock Activity (  )  ;  final  Count Down Latch signal = new  Count Down Latch ( 1 )  ;  test Activity . m Signal = signal ;  final  String response = ""{\""id_token\"":\"""" + TEST_IDTOKEN + ""\"",\""access_token\"":\"" Token For Saml Assertion Test\"","" + ""\""token_type\"":\"" Bearer\"","" + ""\""expires_in\"":\""3600\"","" + ""\""expires_on\"":\""1368768616\"","" + ""\""refresh_token\"":\""refresh112\"","" + ""\""scope\"":\""*\"", "" + ""\""client_info\"":\"""" +  Util . TEST_CLIENT_INFO + ""\"""" + ""}"" ;  final  Http URL Connection mocked Connection =  Mockito . mock (  Http URL Connection . class )  ;   Http Url Connection Factory . set Mocked Http Url Connection ( mocked Connection )  ;   Util . prepare Mocked Url Connection ( mocked Connection )  ;   Mockito . when ( mocked Connection . get Output Stream (  )  )  . then Return (  Mockito . mock (  Output Stream . class )  )  ;   Mockito . when ( mocked Connection . get Input Stream (  )  )  . then Return (  Util . create Input Stream ( response )  )  ;   Mockito . when ( mocked Connection . get Response Code (  )  )  . then Return (  Http URL Connection . HTTP_OK )  ;  //  Call acquire token silent using assertion which will try to fetch refresh token  Authentication Result result = context . acquire Token Silent Sync With Assertion ( ""sample assertion"", com . microsoft . aad . adal .  Authentication Constants . O Auth2 . MSID_OAUTH2_SAML11_BEARER_VALUE, ""resource"", ""client Id"", TEST_IDTOKEN_USERID )  ;  //  Check if the access token is present in the result and if its stored in the cache assert Equals ( "" Token is same as passed in response"", "" Token For Saml Assertion Test"", result . get Access Token (  )  )  ;  assert Not Null ( "" Cache is NOT empty for passed userid for regular token"", mock Cache . get Item (  Cache Key . create Cache Key For RT Entry ( VALID_AUTHORITY, ""resource"", ""client Id"", TEST_IDTOKEN_USERID )  )  )  ;  clear Cache ( context )  ; }"
3449,public void test_ Double Nan Infinite (  )  throws  Exception{ // 正无穷大 assert Null (  Type Utils . cast To Big Decimal ( 1 . 0d / 0 . 0d )  )  ;  // 负无穷大 assert Null (  Type Utils . cast To Big Decimal ( -1 . 0d / 0 . 0d )  )  ;  //  Na N assert Null (  Type Utils . cast To Big Decimal ( 0 . 0d / 0 . 0d )  )  ; }
3450,"public void test Compare Entries Offsets With Get Offsets (  ) { int i = 0 ;  for  (  Mutable Entry me : small Idx )  {     assert Equals ( small Idx . get Offset ( i++ ) , me . get Offset (  )  )  ;  } int j = 0 ;  for  (  Mutable Entry me : dense Idx )  {     assert Equals ( dense Idx . get Offset ( j++ ) , me . get Offset (  )  )  ;  }}"
3451,"public com . anychart . charts .  Tree Map hovered (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hovered ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3452,private void handle Tail Recursion (  ) { while  ( next Function !=  Next Function . DONE )  {     switch ( next Function )  {         case LIVE_IN_AT_STATEMENT:             next Function =  Next Function . DONE ;              live In At Statement (  )  ;              break ;          case LIVE_OUT_AT_STATEMENT:             next Function =  Next Function . DONE ;              live Out At Statement (  )  ;              break ;          case LIVE_OUT_AT_BLOCK:             next Function =  Next Function . DONE ;              live Out At Block (  )  ;              break ;          default:     } }}
3453,"public void shutdown (  ) { if  ( program != 0 )  {     GLES20 . gl Delete Program ( program )  ;      GLES20 . gl Delete Textures ( 1, new int [  ]  { texture Id }, 0 )  ;  } if  ( display Surface Texture != null )  {     display Surface Texture . release (  )  ;  } if  ( display Surface != null )  {     display Surface . release (  )  ;  }}"
3454,"private static  String get Jar File Prefix ( @ Non Null  File input File ) { // get the filename  String name = input File . get Name (  )  ;  // remove the extension int pos = name . last Index Of ( ' . ' )  ;  if  ( pos != -1 )  {     name = name . substring ( 0, pos )  ;  } // add a hash of the original file path .   String input = input File . get Absolute Path (  )  ;   Hash Function hash Function =  Hashing . sha1 (  )  ;   Hash Code hash Code = hash Function . hash String ( input,  Charsets . UTF_16 LE )  ;  return name + ""-"" + hash Code . to String (  )  ; }"
3455,public void restart (  ) { executor . set Core Pool Size ( 1 )  ; }
3456,"public com . anychart . core . map . series .  Choropleth bottom (  Number bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", bottom )  )  ;  return this ; }"
3457,public  Builder set Circle Inner Indicator Size ( float size ) { this . circle Inner Indicator Size = size ;  return this ; }
3458,"private static void parse Wday (  String str, int [  ]  byday, int [  ]  byday Num, int index ) { int wday Str Start = str . length (  )  - 2 ;   String wday Str ;  if  ( wday Str Start > 0 )  {     /* number is included ;  parse it out and advance to weekday */      String num Part = str . substring ( 0, wday Str Start )  ;      int num = parse Int Range ( num Part, -53, 53, false )  ;      byday Num [ index ]  = num ;      wday Str = str . substring ( wday Str Start )  ;  } else {     /* just the weekday string */     wday Str = str ;  }  Integer wday = s Parse Weekday Map . get ( wday Str )  ;  if  ( wday == null )  {     throw new  Invalid Format Exception ( "" Invalid BYDAY value: "" + str )  ;  } byday [ index ]  = wday ; }"
3459,public T8 get Value8 (  ) { return value8 ; }
3460,public  Observable< Result> delete Comment (  String comment Id ) { return  Observable . create ( new  Observable .  On Subscribe< Result> (  )  {     @ Override     public void call (  Subscriber<? super  Result> subscriber )  {          Result result = new  Result (  )  ;          subscriber . on Next ( result )  ;          subscriber . on Completed (  )  ;           Log Utils . logd ( result . to String (  )  )  ;      } } )  . compose (  Rx Schedulers . < Result>io_main (  )  )  ; }
3461,"public void set Values (  Map< String,  Object> values ) { for  (  String property Name : values . key Set (  )  )  {      Object value = values . get ( property Name )  ;      //TODO: this will trigger multiple notifications ;  instead, consolidate the notifications to one     set Value ( property Name, value )  ;  }}"
3462,public void set Load Events Handler (  Load Events Handler load Events Handler ) { m Load Events Handler = load Events Handler ; }
3463,"public T find Actor (  String name ) {  Array< Actor> children = this . children ;  for  ( int i = 0, n = children . size ;  i < n ;  i++ )  if  ( name . equals ( children . get ( i )  . get Name (  )  )  )      return  ( T )  children . get ( i )  ;  for  ( int i = 0, n = children . size ;  i < n ;  i++ )  {      Actor child = children . get ( i )  ;      if  ( child instanceof  Group )  {          Actor actor =  (  (  Group )  child )  . find Actor ( name )  ;          if  ( actor != null )              return  ( T )  actor ;      } } return null ; }"
3464,public  String get Remote Host (  ) { return remote Host ; }
3465,"public void fitting Mode (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . fitting Mode (  )  ; "" )  ; }"
3466,"public com . anychart . core . series .  Rendering Settings rendering (  ) { return new com . anychart . core . series .  Rendering Settings ( js Base + "" . rendering (  ) "" )  ; }"
3467,"public static  Pre Commit Hook pre Commit (  Repository repo,  Print Stream output Stream,  Print Stream error Stream ) { return new  Pre Commit Hook ( repo, output Stream, error Stream )  ; }"
3468,"public void test Builder_brute Force (  ) { for  ( int i = 0 ;  i < reduce Iterations If Gwt ( 100 )  ;  i++ )  {      Immutable Long Array .  Builder builder =  Immutable Long Array . builder ( RANDOM . next Int ( 20 )  )  ;       Atomic Long counter = new  Atomic Long ( 0 )  ;      while  ( counter . get (  )  < 1000 )  {          Builder Op op =  Builder Op . random Op (  )  ;          op . do It ( builder, counter )  ;      }      Immutable Long Array iia = builder . build (  )  ;      for  ( int j = 0 ;  j < iia . length (  )  ;  j++ )  {         assert That ( iia . get ( j )  )  . is Equal To (  ( long )  j )  ;      } }}"
3469,"public void availabilities (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . availabilities (  )  ; "" )  ; }"
3470,"public com . anychart . core .  State Settings normal (  ) { return new com . anychart . core .  State Settings ( js Base + "" . normal (  ) "" )  ; }"
3471,"public void allow Range Change (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . allow Range Change (  )  ; "" )  ; }"
3472,"public void set Compound Drawables With Intrinsic Bounds (  ) { if  ( skip Next Apply (  )  )      return ;  reset Tint Resource ( 0, 0, 0, 0 )  ;  set Skip Next Apply ( false )  ; }"
3473,public  Task< Void> enable Network (  ) { ensure Client Configured (  )  ;  return client . enable Network (  )  ; }
3474,public static  String escape Xml10 ( final  String input ) { return ESCAPE_XML10 . translate ( input )  ; }
3475,public  List< Segment> get Segments (  ) { return segments ; }
3476,"public com . anychart . standalones .  Project Timeline row Selected Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
3477,public static  Image Source for Uri ( @ Nullable  String uri String ) { if  ( uri String == null )  {     return empty Source (  )  ;  } return get (  )  . single Uri (  Uri . parse ( uri String )  )  ; }
3478,"public  Builder directory (  File directory ) { //noinspection  Constant Conditions if  ( directory == null )  {     throw new  Illegal Argument Exception ( "" Non-null 'dir' required . "" )  ;  } if  ( directory . is File (  )  )  {     throw new  Illegal Argument Exception ( ""'dir' is a file, not a directory: "" + directory . get Absolute Path (  )  + "" . "" )  ;  } if  ( !directory . exists (  )  && !directory . mkdirs (  )  )  {     throw new  Illegal Argument Exception ( "" Could not create the specified directory: "" + directory . get Absolute Path (  )  + "" . "" )  ;  } if  ( !directory . can Write (  )  )  {     throw new  Illegal Argument Exception ( "" Realm directory is not writable: "" + directory . get Absolute Path (  )  + "" . "" )  ;  } this . directory = directory ;  return this ; }"
3479,"public static void set Spans ( @ Non Null  Spannable Builder builder, @ Nullable  Object spans, int start, int end ) { if  ( spans != null )  {     // but execution is stopped )      if  ( !is Position Valid ( builder . length (  ) , start, end )  )  {         return ;      }     // @since 3 . 0 . 1 we introduce another method that recursively applies spans     // allowing array of arrays  ( and more )      set Spans Internal ( builder, spans, start, end )  ;  }}"
3480,public  Text View get Title Text View (  ) { return m Title Text View ; }
3481,public final long get Timestamp (  ) { return timestamp ; }
3482,public void set Thorough Array ( boolean thorough Array ) { is Thorough Array = thorough Array ; }
3483,public  Builder sub Normal Text Color Res ( int sub Normal Text Color Res ) { if  ( this . sub Normal Text Color Res != sub Normal Text Color Res )  {     this . sub Normal Text Color Res = sub Normal Text Color Res ;       Boom Button button = button (  )  ;      if  ( button != null )  {         button . sub Normal Text Color Res = sub Normal Text Color Res ;          button . update Sub Text (  )  ;      } } return this ; }
3484,"private static void debug Verify0 (  Local List locals ) { int sz = locals . size (  )  ;   Entry [  ]  active = new  Entry [ 65536 ]  ;  for  ( int i = 0 ;  i < sz ;  i++ )  {      Entry e = locals . get ( i )  ;      int reg = e . get Register (  )  ;      if  ( e . is Start (  )  )  {          Entry already = active [ reg ]  ;          if  (  ( already != null )  && e . matches ( already )  )  {             throw new  Runtime Exception ( ""redundant start at "" +  Integer . to Hex String ( e . get Address (  )  )  + "": got "" + e + "" ;  had "" + already )  ;          }         active [ reg ]  = e ;      } else {         if  ( active [ reg ]  == null )  {             throw new  Runtime Exception ( ""redundant end at "" +  Integer . to Hex String ( e . get Address (  )  )  )  ;          }         int addr = e . get Address (  )  ;          boolean found Start = false ;          for  ( int j = i + 1 ;  j < sz ;  j++ )  {              Entry test = locals . get ( j )  ;              if  ( test . get Address (  )  != addr )  {                 break ;              }             if  ( test . get Register Spec (  )  . get Reg (  )  == reg )  {                 if  ( test . is Start (  )  )  {                     if  ( e . get Disposition (  )  !=  Disposition . END_REPLACED )  {                         throw new  Runtime Exception ( ""improperly marked end at "" +  Integer . to Hex String ( addr )  )  ;                      }                     found Start = true ;                  } else {                     throw new  Runtime Exception ( ""redundant end at "" +  Integer . to Hex String ( addr )  )  ;                  }             }         }         if  ( !found Start &&  ( e . get Disposition (  )  ==  Disposition . END_REPLACED )  )  {             throw new  Runtime Exception ( ""improper end replacement claim at "" +  Integer . to Hex String ( addr )  )  ;          }         active [ reg ]  = null ;      } }}"
3485,"public void save As Json (  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Json ( %s )  ; "", wrap Quotes ( filename )  )  )  ; }"
3486,"private void render (  ) {  Resources resources = get Resources (  )  ;  //  Get the current spring value .  double value = m Spring . get Current Value (  )  ;  //  Map the spring to the feedback bar position so that its hidden off screen and bounces in on tap .  float bar Position =  ( float )   Spring Util . map Value From Range To Range ( value, 0, 1, m Feedback Bar . get Height (  ) , 0 )  ;  m Feedback Bar . set Translation Y ( bar Position )  ;  //  Map the spring to the selected photo scale as it moves into and out of the grid .  float selected Photo Scale =  ( float )   Spring Util . map Value From Range To Range ( value, 0, 1, 0 . 33, 1 )  ;  //  Clamp the value so we don't go below 0 .  selected Photo Scale =  Math . max ( selected Photo Scale, 0 )  ;  m Selected Photo . set Scale X ( selected Photo Scale )  ;  m Selected Photo . set Scale Y ( selected Photo Scale )  ;  //  Map the spring to the selected photo translation from its position in the grid float selected Photo Translate X =  ( float )   Spring Util . map Value From Range To Range ( value, 0, 1,  Util . dp To Px ( -106 . 667f, resources ) , 0 )  ;  float selected Photo Translate Y =  ( float )   Spring Util . map Value From Range To Range ( value, 0, 1,  Util . dp To Px ( 46 . 667f, resources ) , 0 )  ;  m Selected Photo . set Translation X ( selected Photo Translate X )  ;  m Selected Photo . set Translation Y ( selected Photo Translate Y )  ;  //  Map the spring to the photo grid alpha as it fades to black when the photo is selected .  float grid Alpha =  ( float )   Spring Util . map Value From Range To Range ( value, 0, 1, 1, 0 )  ;  m Photo Grid . set Alpha ( grid Alpha )  ;  //  Map the spring to the photo grid scale so that it scales down slightly as the selected photo // zooms in .  float grid Scale =  ( float )   Spring Util . map Value From Range To Range ( value, 0, 1, 1, 0 . 95 )  ;  //  Clamp the value so we don't go below 0 .  grid Scale =  Math . max ( grid Scale, 0 )  ;  m Photo Grid . set Scale X ( grid Scale )  ;  m Photo Grid . set Scale Y ( grid Scale )  ; }"
3487,"public com . anychart . core . ui .  Crosshair Label padding (  Number value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
3488,public  Show Note Command set Notes Ref (  String notes Ref ) { check Callable (  )  ;  this . notes Ref = notes Ref ;  return this ; }
3489,public  Raw Config get For Cell (  Cell Name cell Name ) {  Raw Config config =  Optional . of Nullable ( get Values (  )  . get ( cell Name )  )  . or Else (  Raw Config . of (  )  )  ;   Raw Config star Config =  Optional . of Nullable ( get Values (  )  . get (  Cell Name . ALL_CELLS_SPECIAL_NAME )  )  . or Else (  Raw Config . of (  )  )  ;  return  Raw Config . builder (  )  . put All ( star Config )  . put All ( config )  . build (  )  ; }
3490,"public  To String Helper add (  String name, double value ) { return add Unconditional Holder ( name,  String . value Of ( value )  )  ; }"
3491,"public com . anychart . core . ui .  Crosshair Label container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
3492,"public static void apply Pressed Bg Alpha (  View view, float alpha ) { apply Pressed Bg Style ( view, PRESSED_BG_ALPHA_STYLE, alpha )  ; }"
3493,public void release (  ) { if  ( vector Pool . size (  )  < MAX_POOL_SIZE )  {     vector Pool . push ( this )  ;  }}
3494,"public static  Exception Handler Registry< Exit Code> create (  Exception Handler<? extends  Throwable,  Exit Code> .  .  .  exception Handlers ) {  Linked Hash Map< Class<? extends  Throwable>,  Exception Handler<? extends  Throwable,  Exit Code>> current Handlers = new  Linked Hash Map<> ( default Handlers )  ;  for  ( int i = 0 ;  i < exception Handlers . length ;  i++ )  {     if  ( current Handlers . replace ( exception Handlers [ i ]  . get Exception Type (  ) , exception Handlers [ i ]  )  == null )  {         current Handlers . put ( exception Handlers [ i ]  . get Exception Type (  ) , exception Handlers [ i ]  )  ;      } } return new  Exception Handler Registry<> (  Immutable List . copy Of ( current Handlers . values (  )  ) , new  Exception Handler< Throwable,  Exit Code> (  Throwable . class )  {     @ Override     public  Exit Code handle Exception (  Throwable t )  {         return  Exit Code . FATAL_GENERIC ;      } } )  ; }"
3495,private static  Resource Data query Resource Data (  Cursor cursor ) {  Resource Data resource Data = new  Resource Data (  )  ;  resource Data . resource Id = cursor . get String ( cursor . get Column Index ( RESOURCE_DATA_COLUMN_RESOURCE_ID )  )  ;  resource Data . resource Sha1 = cursor . get String ( cursor . get Column Index ( RESOURCE_DATA_COLUMN_RESOURCE_SHA1 )  )  ;  resource Data . resource Size = cursor . get Long ( cursor . get Column Index ( RESOURCE_DATA_COLUMN_RESOURCE_SIZE )  )  ;  resource Data . last Update Time = cursor . get Long ( cursor . get Column Index ( RESOURCE_DATA_COLUMN_LAST_UPDATE_TIME )  )  ;  resource Data . expired Time = cursor . get Long ( cursor . get Column Index ( RESOURCE_DATA_COLUMN_CACHE_EXPIRED_TIME )  )  ;  return resource Data ; }
3496,"public static  Immutable Range Map<K, V> of (  Range<K> range, V value ) { return new  Immutable Range Map<> (  Immutable List . of ( range ) ,  Immutable List . of ( value )  )  ; }"
3497,public  Drawable Transition Options cross Fade ( @ Non Null  Drawable Cross Fade Factory drawable Cross Fade Factory ) { return transition ( drawable Cross Fade Factory )  ; }
3498,"public static void write Right Zero Extended Value (  Byte Output out, int type, long value ) { //  Figure out how many bits are needed to represent the value .  int required Bits = 64 -  Long . number Of Trailing Zeros ( value )  ;  if  ( required Bits == 0 )  {     required Bits = 1 ;  } //  Round up the required Bits to a number of bytes .  int required Bytes =  ( required Bits + 0x07 )  >> 3 ;  //  Scootch the first bits to be written down to the low-order bits .  value >>= 64 -  ( required Bytes * 8 )  ;  /*      *  Write the header byte, which includes the type and      * required Bytes - 1 .       */ out . write Byte ( type |  (  ( required Bytes - 1 )  << 5 )  )  ;  //  Write the value, per se .  while  ( required Bytes > 0 )  {     out . write Byte (  ( byte )  value )  ;      value >>= 8 ;      required Bytes-- ;  }}"
3499,"private  Annotations List parse Annotations List (  Annotation Visibility visibility )  throws IO Exception{ int count = input . read Unsigned Byte (  )  ;  if  ( observer != null )  {     parsed ( 1, ""num_parameters: "" +  Hex . u1 ( count )  )  ;  }  Annotations List outer List = new  Annotations List ( count )  ;  for  ( int i = 0 ;  i < count ;  i++ )  {     if  ( observer != null )  {         parsed ( 0, ""parameter_annotations [ "" + i + "" ] :"" )  ;          change Indent ( 1 )  ;      }      Annotations annotations = parse Annotations ( visibility )  ;      outer List . set ( i, annotations )  ;      if  ( observer != null )  {         observer . change Indent ( -1 )  ;      } } outer List . set Immutable (  )  ;  return outer List ; }"
3500,protected final boolean is Reliable Write In Progress (  ) { return request Handler . is Reliable Write In Progress (  )  ; }
3501,"public com . anychart . core . cartesian . series .  Range Area range Area (  String [  ]  data, com . anychart . enums .  Text Parsing Mode csv Settings ) { return new com . anychart . core . cartesian . series .  Range Area (  String . format (  Locale . US, js Base + "" . range Area ( %s, %s ) "", array To String Wrap Quotes ( data ) ,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
3502,"public com . anychart . core . stock . scrollerseries .  Step Line min Labels (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Labels ( %s )  ; "", settings )  )  ;  return this ; }"
3503,public void set Push Certificate (  Push Certificate cert ) { push Cert = cert ; }
3504,"public synchronized void claim Interface ( final  Usb Interface intf ) { claim Interface ( intf, true )  ; }"
3505,public T unable Text Color ( int unable Text Color ) { if  ( this . unable Text Color != unable Text Color )  {     this . unable Text Color = unable Text Color ;       Boom Button button = button (  )  ;      if  ( button != null )  {         button . unable Text Color = unable Text Color ;          button . update Text (  )  ;      } } return  ( T )  this ; }
3506,"public void test Serialize Valid (  )  throws  Authentication Exception{ final  File Mock Context mock Context = new  File Mock Context ( get Instrumentation (  )  . get Context (  )  )  ;  final  Default Token Cache Store mock Cache = new  Default Token Cache Store ( mock Context )  ;  add FRT Cache Item ( mock Cache )  ;  final  Authentication Context context = get Authentication Context ( mock Context, TEST_AUTHORITY, false, mock Cache )  ;  final  String result = context . serialize ( TEST_IDTOKEN_USERID )  ;  assert Not Null ( result )  ; }"
3507,"public com . anychart . core . stock . scrollerseries .  Range Area max Point Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Point Width ( %s )  ; "", width )  )  ;  return this ; }"
3508,"public com . anychart . core . stock . scrollerseries .  Jump Line color Scale ( com . anychart . scales .  Linear Color settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
3509,public boolean is Set ( _ Fields field ) { if  ( field == null )  {     throw new java . lang .  Illegal Argument Exception (  )  ;  } switch ( field )  {     case MANIFEST_KEY:         return is Set Manifest Key (  )  ;  } throw new java . lang .  Illegal State Exception (  )  ; }
3510,"void test Steal (  ) { this . method . steal (  )  ;  assert True ( appender . log Contains ( this . expected Target Result )  )  ;  assert True ( appender . log Contains ( this . expected Confuse Method )  )  ;  assert True ( appender . log Contains ( this . expected Steal Method )  )  ;  assert Equals ( 3, appender . get Log Size (  )  )  ; }"
3511,"public void measure Layout ( int tag, int ancestor Tag,  Callback error Callback,  Callback success Callback ) { if  ( !m View Operations Enabled )  {     return ;  } try {     measure Layout ( tag, ancestor Tag, m Measure Buffer )  ;      float relative X =  Pixel Util . to DIP From Pixel ( m Measure Buffer [ 0 ]  )  ;      float relative Y =  Pixel Util . to DIP From Pixel ( m Measure Buffer [ 1 ]  )  ;      float width =  Pixel Util . to DIP From Pixel ( m Measure Buffer [ 2 ]  )  ;      float height =  Pixel Util . to DIP From Pixel ( m Measure Buffer [ 3 ]  )  ;      success Callback . invoke ( relative X, relative Y, width, height )  ;  } catch  (  Illegal View Operation Exception e )  {     error Callback . invoke ( e . get Message (  )  )  ;  }}"
3512,public  Uri get Uri (  ) { return  Firebase Dynamic Links Impl . create Dynamic Link ( builder Parameters )  ; }
3513,"static  String build Audit Dependencies Query Expression (  List< String> arguments, boolean is Transitive, boolean include Tests, boolean json Output ) {  String Builder query Builder = new  String Builder ( ""buck query "" )  ;  query Builder . append ( ""\"""" )  . append ( get Audit Dependencies Query Format ( is Transitive, include Tests )  )  . append ( ""\"" "" )  ;  query Builder . append ( get Escaped Arguments List As String ( arguments )  )  ;  if  ( json Output )  {     query Builder . append ( get Json Output Param Declaration (  )  )  ;  } return query Builder . to String (  )  ; }"
3514,"public static X Module Resources create Instance (  String path, X Resources orig Res ) { if  ( path == null )      throw new  Illegal Argument Exception ( ""path must not be null"" )  ;   Asset Manager assets = new  Asset Manager (  )  ;  assets . add Asset Path ( path )  ;  X Module Resources res ;  if  ( orig Res != null )      res = new X Module Resources ( assets, orig Res . get Display Metrics (  ) , orig Res . get Configuration (  )  )  ;  else     res = new X Module Resources ( assets, null, null )  ;   Android App Helper . add Active Resource ( path, res )  ;  return res ; }"
3515,"public com . anychart . core .  State Settings empty Hatch Fill ( com . anychart . graphics . vector .  Hatch Fill settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . empty Hatch Fill ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
3516,"public com . anychart . core . ui .  Scroll Bar slider Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . slider Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
3517,"public  View get View ( int position,  View convert View,  View Group parent ) { try {     return super . get View ( position, convert View, parent )  ;  } catch  (  Runtime Exception e )  {      Log . w ( LOG_TAG, "" Search suggestions cursor threw exception . "", e )  ;      //  Put exception string in item title      View v = new View ( m Context, m Cursor, parent )  ;      if  ( v != null )  {          Child View Cache views =  (  Child View Cache )  v . get Tag (  )  ;           Text View tv = views . m Text1 ;          tv . set Text ( e . to String (  )  )  ;      }     return v ;  }}"
3518,public static  Lfs Factory get Instance (  ) { return instance ; }
3519,"public com . anychart . core . utils .  Margin set (  Number value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
3520,"public static  Method find Method Exact (  Class<?> clazz,  String method Name,  Class<?> .  .  .  parameter Types ) {  String Builder sb = new  String Builder ( clazz . get Name (  )  )  ;  sb . append ( '#' )  ;  sb . append ( method Name )  ;  sb . append ( get Parameters String ( parameter Types )  )  ;  sb . append ( ""#exact"" )  ;   String full Method Name = sb . to String (  )  ;  if  ( method Cache . contains Key ( full Method Name )  )  {      Method method = method Cache . get ( full Method Name )  ;      if  ( method == null )          throw new  No Such Method Error ( full Method Name )  ;      return method ;  } try {      Method method = clazz . get Declared Method ( method Name, parameter Types )  ;      method . set Accessible ( true )  ;      method Cache . put ( full Method Name, method )  ;      return method ;  } catch  (  No Such Method Exception e )  {     method Cache . put ( full Method Name, null )  ;      throw new  No Such Method Error ( full Method Name )  ;  }}"
3521,public  File Download Queue Set set Directory (  String directory ) { this . directory = directory ;  return this ; }
3522,"public com . anychart . charts .  Waterfall height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
3523,"public void v Line (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . v Line (  )  ; "" )  ; }"
3524,"public int find Key ( float value, float epsilon, int not Found ) { if  ( has Zero Value &&  Math . abs ( zero Value - value )  <= epsilon )      return 0 ;  int [  ]  key Table = this . key Table ;  float [  ]  value Table = this . value Table ;  for  ( int i = value Table . length - 1 ;  i >= 0 ;  i-- )  if  ( key Table [ i ]  != 0 &&  Math . abs ( value Table [ i ]  - value )  <= epsilon )      return key Table [ i ]  ;  return not Found ; }"
3525,public boolean get Scale Down Inside Borders (  ) { return m Scale Down Inside Borders ; }
3526,"public void write (  Random Access File file )  throws IO Exception{  String str ;  int offset ;  byte [  ]  buffer ;  ID3v1 Tag id3v1tag ;  id3v1tag = null ;  delete ( file )  ;  file . seek ( file . length (  )  )  ;  buffer = new byte [ lyric . length (  )  + 11 + 9 ]  ;  str = ""LYRICSBEGIN"" ;  for  ( int i = 0 ;  i < str . length (  )  ;  i++ )  {     buffer [ i ]  =  ( byte )  str . char At ( i )  ;  } offset = str . length (  )  ;  str = ID3 Tags . truncate ( lyric, 5100 )  ;  for  ( int i = 0 ;  i < str . length (  )  ;  i++ )  {     buffer [ i + offset ]  =  ( byte )  str . char At ( i )  ;  } offset += str . length (  )  ;  str = ""LYRICSEND"" ;  for  ( int i = 0 ;  i < str . length (  )  ;  i++ )  {     buffer [ i + offset ]  =  ( byte )  str . char At ( i )  ;  } offset += str . length (  )  ;  file . write ( buffer, 0, offset )  ;  if  ( id3v1tag != null )  {     id3v1tag . write ( file )  ;  }}"
3527,"public com . anychart . core . stock . indicators . MACD macd ( com . anychart . data .  Table Mapping mapping,  Number fast Period,  Number slow Period,  Number signal Period, com . anychart . enums .  Stock Series Type macd Series Type, com . anychart . enums .  Stock Series Type signal Series Type,  String histogram Series Type ) { return new com . anychart . core . stock . indicators . MACD (  String . format (  Locale . US, js Base + "" . macd ( %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, fast Period, slow Period, signal Period,  ( macd Series Type != null )  ? macd Series Type . get Js Base (  )  : null,  ( signal Series Type != null )  ? signal Series Type . get Js Base (  )  : null, wrap Quotes ( histogram Series Type )  )  )  ; }"
3528,public void set Method (  String method ) { this . method = method ; }
3529,public  Issue Filter set Sort Type (  String sort Type ) { this . sort Type = sort Type ;  return this ; }
3530,public boolean has Overlapping Rendering (  ) { return m Needs Offscreen Alpha Compositing ; }
3531,"public static int get Status Bar Height (  ) {  Resources resources =  Utils . get App (  )  . get Resources (  )  ;  int resource Id = resources . get Identifier ( ""status_bar_height"", ""dimen"", ""android"" )  ;  return resources . get Dimension Pixel Size ( resource Id )  ; }"
3532,"public boolean send Leader Message ( int current Id, int leader Id ) { var leader Message = new  Message (  Message Type . LEADER,  String . value Of ( leader Id )  )  ;  instance Map . key Set (  )  . stream (  )  . filter (  (  i )  -> i != current Id )  . for Each (  (  i )  -> instance Map . get ( i )  . on Message ( leader Message )  )  ;  return false ; }"
3533,public long get Delta Search Memory Limit (  ) { return delta Search Memory Limit ; }
3534,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
3535,"public void test Private Gist (  ) {  Gist gist =  Gist Uri Matcher . get Gist (  Uri . parse ( ""https://gist . github . com/abcd1234abcd1234abcd"" )  )  ;  assert Not Null ( gist )  ;  assert Equals ( ""abcd1234abcd1234abcd"", gist . id (  )  )  ; }"
3536,"private void subscribe View State Consumer Actually ( @ Non Null final V view ) { if  ( view == null )  {     throw new  Null Pointer Exception ( "" View is null"" )  ;  } if  ( view State Consumer == null )  {     throw new  Null Pointer Exception (  View State Consumer . class . get Simple Name (  )  + "" is null .   This is a  Mosby internal bug .   Please file an issue at https://github . com/sockeqwe/mosby/issues"" )  ;  } view Relay Consumer Disposable = view State Behavior Subject . subscribe ( new  Consumer<VS> (  )  {     @ Override     public void accept ( VS vs )  throws  Exception {         view State Consumer . accept ( view, vs )  ;      } } )  ; }"
3537,"void copy (  Ct Behavior src, boolean is Cons,  Class Map map )  throws  Cannot Compile Exception{  Ct Class declaring = declaring Class ;   Method Info src Info = src . method Info ;   Ct Class src Class = src . get Declaring Class (  )  ;   Const Pool cp = declaring . get Class File2 (  )  . get Const Pool (  )  ;  map = new  Class Map ( map )  ;  map . put ( src Class . get Name (  ) , declaring . get Name (  )  )  ;  try {     boolean patch = false ;       Ct Class src Super = src Class . get Superclass (  )  ;       Ct Class dest Super = declaring . get Superclass (  )  ;       String dest Super Name = null ;      if  ( src Super != null && dest Super != null )  {          String src Super Name = src Super . get Name (  )  ;          dest Super Name = dest Super . get Name (  )  ;          if  ( !src Super Name . equals ( dest Super Name )  )              if  ( src Super Name . equals (  Ct Class . java Lang Object )  )                  patch = true ;              else                 map . put If None ( src Super Name, dest Super Name )  ;      }     // a stack map table is copied from src Info .      method Info = new  Method Info ( cp, src Info . get Name (  ) , src Info, map )  ;      if  ( is Cons && patch )          method Info . set Superclass ( dest Super Name )  ;  } catch  (  Not Found Exception e )  {     throw new  Cannot Compile Exception ( e )  ;  } catch  (  Bad Bytecode e )  {     throw new  Cannot Compile Exception ( e )  ;  }}"
3538,public void set Foreground FPS ( int fps ) { view Controller . set Preferred Frames Per Second ( fps )  ; }
3539,"private int find Any Fitting Range (  Normal Ssa Insn insn, int range Length, int [  ]  categories For Index,  Bit Set out Moves Required ) {  Alignment alignment =  Alignment . UNSPECIFIED ;  if  (  Dex Options . ALIGN_64 BIT_REGS_SUPPORT )  {     int reg Number = 0 ;      int p64bits Aligned = 0 ;      int p64bits Not Aligned = 0 ;      for  ( int category : categories For Index )  {         if  ( category == 2 )  {             if  ( is Even ( reg Number )  )  {                 p64bits Aligned++ ;              } else {                 p64bits Not Aligned++ ;              }             reg Number += 2 ;          } else {             reg Number += 1 ;          }     }     if  ( p64bits Not Aligned > p64bits Aligned )  {         if  ( is Even ( param Range End )  )  {             alignment =  Alignment . ODD ;          } else {             alignment =  Alignment . EVEN ;          }     } else if  ( p64bits Aligned > 0 )  {         if  ( is Even ( param Range End )  )  {             alignment =  Alignment . EVEN ;          } else {             alignment =  Alignment . ODD ;          }     } } int range Start = param Range End ;  while  ( true )  {     range Start = find Next Unreserved Rop Reg ( range Start, range Length, alignment )  ;      int fit Width = fit Plan For Range ( range Start, insn, categories For Index, out Moves Required )  ;      if  ( fit Width >= 0 )  {         break ;      }     range Start++ ;      out Moves Required . clear (  )  ;  } return range Start ; }"
3540,public void set Window Id ( int id ) { window Id = id ; }
3541,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
3542,public static  Throwable get Error ( @ Non Null  Intent result ) { return  (  Throwable )  result . get Serializable Extra ( EXTRA_ERROR )  ; }
3543,public com . google . protobuf .  Byte String get Source Path Bytes (  ) { java . lang .  Object ref = source Path_ ;  if  ( ref instanceof java . lang .  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      source Path_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
3544,"public static  Object new Instance (  Class c, int size ) { return java . lang . reflect .  Array . new Instance ( c, size )  ; }"
3545,public void set On Menu Item Click Listener (  On Menu Item Click Listener listener ) { this . m Action Menu Item Listener = listener ; //todo reset menu view listener}
3546,"public QMUI Dialog create ( @ Style Res int style ) { m Dialog = new QMUI Dialog ( m Context, style )  ;   Context dialog Context = m Dialog . get Context (  )  ;  m Dialog View = on Create Dialog View ( dialog Context )  ;  m Root View = new QMUI Dialog Root Layout ( dialog Context, m Dialog View, on Create Dialog Layout Params (  )  )  ;  m Root View . set Check Keyboard Overlay ( m Check Keyboard Overlay )  ;  m Root View . set Overlay Occur In Measure Callback ( new QMUI Dialog Root Layout .  Overlay Occur In Measure Callback (  )  {     @ Override     public void call (  )  {         on Overlay Occurred In Measure (  )  ;      } } )  ;  m Root View . set Max Percent ( m Max Percent )  ;  config Root Layout ( m Root View )  ;  m Dialog View = m Root View . get Dialog View (  )  ;  m Dialog View . set On Decoration Listener ( m On Decoration Listener )  ;  // title  View title View = on Create Title ( m Dialog, m Dialog View, dialog Context )  ;   View operator Layout = on Create Operator Layout ( m Dialog, m Dialog View, dialog Context )  ;   View content Layout = on Create Content ( m Dialog, m Dialog View, dialog Context )  ;  check And Set Id ( title View, R . id . qmui_dialog_title_id )  ;  check And Set Id ( operator Layout, R . id . qmui_dialog_operator_layout_id )  ;  check And Set Id ( content Layout, R . id . qmui_dialog_content_id )  ;  // chain if  ( title View != null )  {      Constraint Layout .  Layout Params lp = on Create Title Layout Params ( dialog Context )  ;      if  ( content Layout != null )  {         lp . bottom To Top = content Layout . get Id (  )  ;      } else if  ( operator Layout != null )  {         lp . bottom To Top = operator Layout . get Id (  )  ;      } else {         lp . bottom To Bottom =  Constraint Layout .  Layout Params . PARENT_ID ;      }     m Dialog View . add View ( title View, lp )  ;  } if  ( content Layout != null )  {      Constraint Layout .  Layout Params lp = on Create Content Layout Params ( dialog Context )  ;      if  ( title View != null )  {         lp . top To Bottom = title View . get Id (  )  ;      } else {         lp . top To Top =  Constraint Layout .  Layout Params . PARENT_ID ;      }     if  ( operator Layout != null )  {         lp . bottom To Top = operator Layout . get Id (  )  ;      } else {         lp . bottom To Bottom =  Constraint Layout .  Layout Params . PARENT_ID ;      }     m Dialog View . add View ( content Layout, lp )  ;  } if  ( operator Layout != null )  {      Constraint Layout .  Layout Params lp = on Create Operator Layout Layout Params ( dialog Context )  ;      if  ( content Layout != null )  {         lp . top To Bottom = content Layout . get Id (  )  ;      } else if  ( title View != null )  {         lp . top To Bottom = title View . get Id (  )  ;      } else {         lp . top To Top =  Constraint Layout .  Layout Params . PARENT_ID ;      }     m Dialog View . add View ( operator Layout, lp )  ;  } m Dialog . add Content View ( m Root View, new  View Group .  Layout Params (  View Group .  Layout Params . WRAP_CONTENT,  View Group .  Layout Params . WRAP_CONTENT )  )  ;  m Dialog . set Cancelable ( m Cancelable )  ;  m Dialog . set Canceled On Touch Outside ( m Canceled On Touch Outside )  ;  m Dialog . set Skin Manager ( m Skin Manager )  ;  on After Create ( m Dialog, m Root View, dialog Context )  ;  return m Dialog ; }"
3547,"public  Node get Node ( final  String id, boolean recursive, boolean ignore Case ) { return  Node . get Node ( nodes, id, recursive, ignore Case )  ; }"
3548,"public void test Canceled Future Throws Cancellation (  )  throws  Exception{ assert False ( future . is Done (  )  )  ;  assert False ( future . is Cancelled (  )  )  ;  final  Count Down Latch success Latch = new  Count Down Latch ( 1 )  ;  //  Run cancellation in a separate thread as an extra thread-safety test .  new  Thread ( new  Runnable (  )  {     @ Override     public void run (  )  {         try {             future . get (  )  ;          } catch  (  Cancellation Exception expected )  {             success Latch . count Down (  )  ;          } catch  (  Exception ignored )  {         //  All other errors are ignored, we expect a cancellation .          }     } } )  . start (  )  ;  assert False ( future . is Done (  )  )  ;  assert False ( future . is Cancelled (  )  )  ;  future . cancel ( true )  ;  assert True ( future . is Done (  )  )  ;  assert True ( future . is Cancelled (  )  )  ;  assert True ( success Latch . await ( 200,  Time Unit . MILLISECONDS )  )  ;  latch . count Down (  )  ; }"
3549,public  Date Picker Builder set Style Res Id ( int style Res Id ) { this . style Res Id = style Res Id ;  return this ; }
3550,public void clear (  ) { caches . clear (  )  ;   (  (  Buffer )  mesh . get Vertices Buffer (  )  )  . clear (  )  . flip (  )  ; }
3551,"public com . anychart . core . utils .  Quarter bounds (  String x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
3552,public  Compression Type get Compression Type (  ) { return m Compression Type ; }
3553,public void set Vr Icon Click Listener (  On Click Listener listener ) {  Image Button vr Icon =  (  Image Button )  find View By Id ( R . id . enter_exit_vr )  ;  vr Icon . set On Click Listener ( listener )  ; }
3554,"public com . anychart . core . resource .  Conflicts fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
3555,protected void clear Caches (  ) { absolute Non Classes = new  Hashtable (  )  ;  absolute Class Cache = new  Hashtable (  )  ;  resolved Object Methods = new  Hashtable (  )  ;  resolved Static Methods = new  Hashtable (  )  ; }
3556,"public void render ( final  Iterable<T> renderable Providers, final  Environment environment ) { for  ( final  Renderable Provider renderable Provider : renderable Providers )  render ( renderable Provider, environment )  ; }"
3557,public boolean is Cast Session Available (  ) { return remote Media Client != null ; }
3558,"private void digest To (  Message Digest md5, byte [  ]  hash )  throws  General Security Exception{ md5 . digest ( hash, 0, hash . length )  ; }"
3559,"public  String encode Key (  Document Key key ) { return encode Resource Name ( database Id, key . get Path (  )  )  ; }"
3560,"public  String join (  Iterator<? extends  Entry<?, ?>> entries ) { return append To ( new  String Builder (  ) , entries )  . to String (  )  ; }"
3561,public void inflate Menu ( @ Menu Res int res Id ) { m Navigation View . inflate Menu ( res Id )  ; }
3562,"public int compute And Set Background Alpha ( int current Offset, int alpha Begin Offset, int alpha Target Offset ) { double alpha =  ( float )   ( current Offset - alpha Begin Offset )  /  ( alpha Target Offset - alpha Begin Offset )  ;  // from 0 to 1 alpha =  Math . max ( 0,  Math . min ( alpha, 1 )  )  ;  int alpha Int =  ( int )   ( alpha * 255 )  ;  set Background Alpha ( alpha Int )  ;  return alpha Int ; }"
3563,"public boolean  All Leaves ( bt Dbvt Node node ) { if  ( node . isleaf (  )  )  {     on Object Visible ( node . get Data As Proxy Client Object (  )  )  ;  } else {     long node Pointer = node . get C Pointer (  )  ;      bt Dbvt Node child ;      if  (  ( child = bt Dbvt Node . internal Temp ( node Pointer, false )  . get Child ( 0 )  )  . get C Pointer (  )  != 0 )           All Leaves ( child )  ;      if  (  ( child = bt Dbvt Node . internal Temp ( node Pointer, false )  . get Child ( 1 )  )  . get C Pointer (  )  != 0 )           All Leaves ( child )  ;  } return true ; }"
3564,"public com . anychart . core . ui .  Paginator text Settings (  String name,  Number settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Settings ( %s, %s )  ; "", wrap Quotes ( name ) , settings )  )  ;  return this ; }"
3565,"public void data Separator (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . data Separator (  )  ; "" )  ; }"
3566,public  Completable add Product (  Product product ) {  List< Product> updated Shopping Cart = new  Array List<> (  )  ;  updated Shopping Cart . add All ( items In Shopping Cart . get Value (  )  )  ;  updated Shopping Cart . add ( product )  ;  items In Shopping Cart . on Next ( updated Shopping Cart )  ;  return  Completable . complete (  )  ; }
3567,"public void put (  String key,  Integer value ) { m Values . put ( key, value )  ; }"
3568,"public GSY Base Video Player start Window Fullscreen ( final  Context context, final boolean action Bar, final boolean status Bar ) { m System Ui Visibility =  (  (  Activity )  context )  . get Window (  )  . get Decor View (  )  . get System Ui Visibility (  )  ;  hide Support Action Bar ( context, action Bar, status Bar )  ;  if  ( m Hide Key )  {     hide Nav Key ( context )  ;  } this . m Action Bar = action Bar ;  this . m Status Bar = status Bar ;  m List Item Rect = new int [ 2 ]  ;  m List Item Size = new int [ 2 ]  ;  final  View Group vp = get View Group (  )  ;  remove Video ( vp, get Full Id (  )  )  ;  //处理暂停的逻辑 pause Full Cover Logic (  )  ;  if  ( m Texture View Container . get Child Count (  )  > 0 )  {     m Texture View Container . remove All Views (  )  ;  } save Location Status ( context, status Bar, action Bar )  ;  //切换时关闭非全屏定时器 cancel Progress Timer (  )  ;  boolean had New Constructor = true ;  try {     GSY Base Video Player . this . get Class (  )  . get Constructor (  Context . class,  Boolean . class )  ;  } catch  (  Exception e )  {     had New Constructor = false ;  } try {     //通过被重载的不同构造器来选择      Constructor<GSY Base Video Player> constructor ;      final GSY Base Video Player gsy Video Player ;      if  ( !had New Constructor )  {         constructor =  (  Constructor<GSY Base Video Player> )  GSY Base Video Player . this . get Class (  )  . get Constructor (  Context . class )  ;          gsy Video Player = constructor . new Instance ( m Context )  ;      } else {         constructor =  (  Constructor<GSY Base Video Player> )  GSY Base Video Player . this . get Class (  )  . get Constructor (  Context . class,  Boolean . class )  ;          gsy Video Player = constructor . new Instance ( m Context, true )  ;      }     gsy Video Player . set Id ( get Full Id (  )  )  ;      gsy Video Player . set If Current Is Fullscreen ( true )  ;      gsy Video Player . set Video All Call Back ( m Video All Call Back )  ;      clone Params ( this, gsy Video Player )  ;      if  ( gsy Video Player . get Fullscreen Button (  )  != null )  {         gsy Video Player . get Fullscreen Button (  )  . set Image Resource ( get Shrink Image Res (  )  )  ;          gsy Video Player . get Fullscreen Button (  )  . set On Click Listener ( new  On Click Listener (  )  {             @ Override             public void on Click (  View v )  {                 if  ( m Back From Full Screen Listener == null )  {                     clear Fullscreen Layout (  )  ;                  } else {                     m Back From Full Screen Listener . on Click ( v )  ;                  }             }         } )  ;      }     if  ( gsy Video Player . get Back Button (  )  != null )  {         gsy Video Player . get Back Button (  )  . set Visibility ( VISIBLE )  ;          gsy Video Player . get Back Button (  )  . set On Click Listener ( new  On Click Listener (  )  {             @ Override             public void on Click (  View v )  {                 if  ( m Back From Full Screen Listener == null )  {                     clear Fullscreen Layout (  )  ;                  } else {                     m Back From Full Screen Listener . on Click ( v )  ;                  }             }         } )  ;      }     final  Layout Params lp Parent = new  Layout Params (  View Group .  Layout Params . MATCH_PARENT,  View Group .  Layout Params . MATCH_PARENT )  ;      final  Frame Layout frame Layout = new  Frame Layout ( context )  ;      frame Layout . set Background Color (  Color . BLACK )  ;      if  ( m Show Full Animation )  {         m Full Anim End = false ;           Layout Params lp = new  Layout Params ( get Width (  ) , get Height (  )  )  ;          lp . set Margins ( m List Item Rect [ 0 ] , m List Item Rect [ 1 ] , 0, 0 )  ;          frame Layout . add View ( gsy Video Player, lp )  ;          vp . add View ( frame Layout, lp Parent )  ;          m Inner Handler . post Delayed ( new  Runnable (  )  {             @ Override             public void run (  )  {                  Transition Manager . begin Delayed Transition ( vp )  ;                  resolve Full Video Show ( context, gsy Video Player, frame Layout )  ;                  m Full Anim End = true ;              }         }, 300 )  ;      } else {          Layout Params lp = new  Layout Params ( get Width (  ) , get Height (  )  )  ;          frame Layout . add View ( gsy Video Player, lp )  ;          vp . add View ( frame Layout, lp Parent )  ;          gsy Video Player . set Visibility ( INVISIBLE )  ;          frame Layout . set Visibility ( INVISIBLE )  ;          resolve Full Video Show ( context, gsy Video Player, frame Layout )  ;      }     gsy Video Player . add Texture View (  )  ;      gsy Video Player . start Progress Timer (  )  ;      get GSY Video Manager (  )  . set Last Listener ( this )  ;      get GSY Video Manager (  )  . set Listener ( gsy Video Player )  ;      checkout State (  )  ;      return gsy Video Player ;  } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  } return null ; }"
3569,"public void add Region (  Region region ) { if  ( !regions . contains ( region )  )  {     if  ( service Connected )  {         try {             beacon Manager . start Monitoring Beacons In Region ( region )  ;          } catch  (  Remote Exception e )  {              Log Manager . e ( e, TAG, "" Can't add bootstrap region"" )  ;          }     } else {          Log Manager . w ( TAG, "" Adding a region: service not yet  Connected"" )  ;      }     regions . add ( region )  ;  }}"
3570,"public static  Pool<T> thread Safe ( int size, @ Non Null  Factory<T> factory ) { return build ( new  Synchronized Pool<T> ( size ) , factory )  ; }"
3571,public  String get Path String (  ) { return path Of ( current Head )  ; }
3572,public void dispose (  ) { //  Close the server socket  ( if open )  .  if  ( server Socket != null )  {     try {         server Socket . close (  )  ;      } catch  ( IO Exception e )  {          ;      } }}
3573,"public  Base Adapter Helper set Background Color ( int view Id, int color ) {  View view = retrieve View ( view Id )  ;  view . set Background Color ( color )  ;  return this ; }"
3574,"public com . anychart . charts .  Tag Cloud bounds (  String x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
3575,public  List< Location Listener> get Request Location Update Listeners (  ) { return new  Array List<> ( get Location Update Listeners (  )  )  ; }
3576,"public  Model create Sphere ( float width, float height, float depth, int divisions U, int divisions V, final  Material material, final long attributes, float angle U From, float angle U To, float angle V From, float angle V To ) { return create Sphere ( width, height, depth, divisions U, divisions V, GL20 . GL_TRIANGLES, material, attributes, angle U From, angle U To, angle V From, angle V To )  ; }"
3577,"static  Path get Proguard Text Files Path (  Project Filesystem project Filesystem,  Build Target build Target ) { return  Build Target Paths . get Gen Path ( project Filesystem, build Target, ""%s/proguard"" )  ; }"
3578,public void set Tty Supported ( boolean is Supported ) { tty Supported = is Supported ; }
3579,"static  Referenced Files get Canonical Files Under Project Root (  Abs Path project Root,  Iterable< String> non Canonical File Paths )  throws IO Exception{ // to Real Path (  )  is used throughout to resolve symlinks or else the  Path . starts With (  )  check will // not be reliable .   Immutable Set .  Builder< Rel Path> project Files =  Immutable Set . builder (  )  ;   Immutable Set .  Builder< Abs Path> non Project Files =  Immutable Set . builder (  )  ;   Abs Path normalized Root = project Root . to Real Path (  )  ;  for  (  String file Path : non Canonical File Paths )  {      Path canonical Full Path =  Paths . get ( file Path )  ;      if  ( !canonical Full Path . is Absolute (  )  )  {         canonical Full Path = project Root . resolve ( canonical Full Path )  . get Path (  )  ;      }     if  ( !canonical Full Path . to File (  )  . exists (  )  )  {         non Project Files . add (  Abs Path . of ( canonical Full Path )  )  ;          continue ;      }     canonical Full Path = canonical Full Path . to Real Path (  )  ;      //  Ignore files that aren't under project root .      if  ( canonical Full Path . starts With ( normalized Root . get Path (  )  )  )  {          Path relative Path = canonical Full Path . subpath ( normalized Root . get Path (  )  . get Name Count (  ) , canonical Full Path . get Name Count (  )  )  ;          project Files . add (  Rel Path . of ( relative Path )  )  ;      } else {         non Project Files . add (  Abs Path . of ( canonical Full Path )  )  ;      } } return new  Referenced Files ( project Files . build (  ) , non Project Files . build (  )  )  ; }"
3580,"public com . anychart . core . utils .  Legend Item Settings icon Marker Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . icon Marker Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
3581,public void set Enabled ( boolean enabled ) { if  ( m Enabled == enabled )  {     return ;  } m Enabled = enabled ;  if  ( !m Enabled )  {     handle Action Up Or Cancel (  )  ;  }}
3582,"public void save As Pdf (  Number paper Size Or Width Or Options,  Boolean landscape,  Number x,  Number y,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Pdf ( %s, %s, %s, %s, %s )  ; "", paper Size Or Width Or Options, landscape, x, y, wrap Quotes ( filename )  )  )  ; }"
3583,"public static boolean register Global Binder (  String name, I Binder binder ) { return  Qihoo Service Manager . add Service (  Re Plugin Internal . get App Context (  ) , name, binder )  ; }"
3584,public  String protocol (  ) { return protocol ; }
3585,public int get Width (  ) { return native Get Width ( m Native Box )  ; }
3586,"public static  String decompile (  String source, int flags,  Uint Map properties ) { int length = source . length (  )  ;  if  ( length == 0 )  {     return """" ;  } int indent = properties . get Int ( INITIAL_INDENT_PROP, 0 )  ;  if  ( indent < 0 )      throw new  Illegal Argument Exception (  )  ;  int indent Gap = properties . get Int ( INDENT_GAP_PROP, 4 )  ;  if  ( indent Gap < 0 )      throw new  Illegal Argument Exception (  )  ;  int case Gap = properties . get Int ( CASE_GAP_PROP, 2 )  ;  if  ( case Gap < 0 )      throw new  Illegal Argument Exception (  )  ;   String Buffer result = new  String Buffer (  )  ;  boolean just Function Body =  ( 0 !=  ( flags &  Decompiler . ONLY_BODY_FLAG )  )  ;  boolean to Source =  ( 0 !=  ( flags &  Decompiler . TO_SOURCE_FLAG )  )  ;  // as TYPE number char if  ( print Source )  {      System . err . println ( ""length:"" + length )  ;      for  ( int i = 0 ;  i < length ;  ++i )  {         //  Note that token To Name will fail unless  Context . print Trees         // is true .           String tokenname = null ;          if  (  Token . print Names )  {             tokenname =  Token . name ( source . char At ( i )  )  ;          }         if  ( tokenname == null )  {             tokenname = ""---"" ;          }          String pad = tokenname . length (  )  > 7 ? ""\t"" : ""\t\t"" ;           System . err . println ( tokenname + pad +  ( int )  source . char At ( i )  + ""\t'"" +  Script Runtime . escape String ( source . substring ( i, i + 1 )  )  + ""'"" )  ;      }      System . err . println (  )  ;  } int brace Nesting = 0 ;  boolean after First EOL = false ;  int i = 0 ;  int top Function Type ;  if  ( source . char At ( i )  ==  Token . SCRIPT )  {     ++i ;      top Function Type = -1 ;  } else {     top Function Type = source . char At ( i + 1 )  ;  } if  ( !to Source )  {     // add an initial newline to exactly match js .      result . append ( '\n' )  ;      for  ( int j = 0 ;  j < indent ;  j++ )  result . append ( ' ' )  ;  } else {     if  ( top Function Type ==  Function Node . FUNCTION_EXPRESSION )  {         result . append ( ' ( ' )  ;      } } while  ( i < length )  {     switch ( source . char At ( i )  )  {         case  Token . GET:         case  Token . SET:             result . append ( source . char At ( i )  ==  Token . GET ? ""get "" : ""set "" )  ;              ++i ;              i = print Source String ( source, i + 1, false, result )  ;              //  Now increment one more to get past the FUNCTION token             ++i ;              break ;          case  Token . NAME:         case // re-wrapped in '/'s in parser .  .  .           Token . REGEXP:             i = print Source String ( source, i + 1, false, result )  ;              continue ;          case  Token . STRING:             i = print Source String ( source, i + 1, true, result )  ;              continue ;          case  Token . NUMBER:             i = print Source Number ( source, i + 1, result )  ;              continue ;          case  Token . TRUE:             result . append ( ""true"" )  ;              break ;          case  Token . FALSE:             result . append ( ""false"" )  ;              break ;          case  Token . NULL:             result . append ( ""null"" )  ;              break ;          case  Token . THIS:             result . append ( ""this"" )  ;              break ;          case  Token . FUNCTION:             // skip function type             ++i ;              result . append ( ""function "" )  ;              break ;          case FUNCTION_END:             //  Do nothing             break ;          case  Token . COMMA:             result . append ( "", "" )  ;              break ;          case  Token . LC:             ++brace Nesting ;              if  (  Token . EOL == get Next ( source, length, i )  )                  indent += indent Gap ;              result . append ( '{' )  ;              break ;          case  Token . RC:             {                 --brace Nesting ;                  /* don't print the closing RC if it closes the              * toplevel function and we're called from              * decompile Function Body .               */                 if  ( just Function Body && brace Nesting == 0 )                      break ;                  result . append ( '}' )  ;                  switch ( get Next ( source, length, i )  )  {                     case  Token . EOL:                     case FUNCTION_END:                         indent -= indent Gap ;                          break ;                      case  Token . WHILE:                     case  Token . ELSE:                         indent -= indent Gap ;                          result . append ( ' ' )  ;                          break ;                  }                 break ;              }         case  Token . LP:             result . append ( ' ( ' )  ;              break ;          case  Token . RP:             result . append ( ' ) ' )  ;              if  (  Token . LC == get Next ( source, length, i )  )                  result . append ( ' ' )  ;              break ;          case  Token . LB:             result . append ( ' [ ' )  ;              break ;          case  Token . RB:             result . append ( ' ] ' )  ;              break ;          case  Token . EOL:             {                 if  ( to Source )                      break ;                  boolean new Line = true ;                  if  ( !after First EOL )  {                     after First EOL = true ;                      if  ( just Function Body )  {                         /* throw away just added 'function name (  .  .  .  )  {'                      * and restore the original indent                      */                         result . set Length ( 0 )  ;                          indent -= indent Gap ;                          new Line = false ;                      }                 }                 if  ( new Line )  {                     result . append ( '\n' )  ;                  }                 /* add indent if any tokens remain,              * less setback if next token is              * a label, case or default .               */                 if  ( i + 1 < length )  {                     int less = 0 ;                      int next Token = source . char At ( i + 1 )  ;                      if  ( next Token ==  Token . CASE || next Token ==  Token . DEFAULT )  {                         less = indent Gap - case Gap ;                      } else if  ( next Token ==  Token . RC )  {                         less = indent Gap ;                      } else /* elaborate check against label .  .  .  skip past a                  * following inlined NAME and look for a COLON .                   */                     if  ( next Token ==  Token . NAME )  {                         int after Name = get Source String End ( source, i + 2 )  ;                          if  ( source . char At ( after Name )  ==  Token . COLON )                              less = indent Gap ;                      }                     for  (  ;  less < indent ;  less++ )  result . append ( ' ' )  ;                  }                 break ;              }         case  Token . DOT:             result . append ( ' . ' )  ;              break ;          case  Token . NEW:             result . append ( ""new "" )  ;              break ;          case  Token . DELPROP:             result . append ( ""delete "" )  ;              break ;          case  Token . IF:             result . append ( ""if "" )  ;              break ;          case  Token . ELSE:             result . append ( ""else "" )  ;              break ;          case  Token . FOR:             result . append ( ""for "" )  ;              break ;          case  Token . IN:             result . append ( "" in "" )  ;              break ;          case  Token . WITH:             result . append ( ""with "" )  ;              break ;          case  Token . WHILE:             result . append ( ""while "" )  ;              break ;          case  Token . DO:             result . append ( ""do "" )  ;              break ;          case  Token . TRY:             result . append ( ""try "" )  ;              break ;          case  Token . CATCH:             result . append ( ""catch "" )  ;              break ;          case  Token . FINALLY:             result . append ( ""finally "" )  ;              break ;          case  Token . THROW:             result . append ( ""throw "" )  ;              break ;          case  Token . SWITCH:             result . append ( ""switch "" )  ;              break ;          case  Token . BREAK:             result . append ( ""break"" )  ;              if  (  Token . NAME == get Next ( source, length, i )  )                  result . append ( ' ' )  ;              break ;          case  Token . CONTINUE:             result . append ( ""continue"" )  ;              if  (  Token . NAME == get Next ( source, length, i )  )                  result . append ( ' ' )  ;              break ;          case  Token . CASE:             result . append ( ""case "" )  ;              break ;          case  Token . DEFAULT:             result . append ( ""default"" )  ;              break ;          case  Token . RETURN:             result . append ( ""return"" )  ;              if  (  Token . SEMI != get Next ( source, length, i )  )                  result . append ( ' ' )  ;              break ;          case  Token . VAR:             result . append ( ""var "" )  ;              break ;          case  Token . LET:             result . append ( ""let "" )  ;              break ;          case  Token . SEMI:             result . append ( ' ; ' )  ;              if  (  Token . EOL != get Next ( source, length, i )  )  {                 // separators in FOR                 result . append ( ' ' )  ;              }             break ;          case  Token . ASSIGN:             result . append ( "" = "" )  ;              break ;          case  Token . ASSIGN_ADD:             result . append ( "" += "" )  ;              break ;          case  Token . ASSIGN_SUB:             result . append ( "" -= "" )  ;              break ;          case  Token . ASSIGN_MUL:             result . append ( "" *= "" )  ;              break ;          case  Token . ASSIGN_DIV:             result . append ( "" /= "" )  ;              break ;          case  Token . ASSIGN_MOD:             result . append ( "" %= "" )  ;              break ;          case  Token . ASSIGN_BITOR:             result . append ( "" |= "" )  ;              break ;          case  Token . ASSIGN_BITXOR:             result . append ( "" ^= "" )  ;              break ;          case  Token . ASSIGN_BITAND:             result . append ( "" &= "" )  ;              break ;          case  Token . ASSIGN_LSH:             result . append ( "" <<= "" )  ;              break ;          case  Token . ASSIGN_RSH:             result . append ( "" >>= "" )  ;              break ;          case  Token . ASSIGN_URSH:             result . append ( "" >>>= "" )  ;              break ;          case  Token . HOOK:             result . append ( "" ? "" )  ;              break ;          case  Token . OBJECTLIT:             // pun OBJECTLIT to mean colon in objlit property             // initialization .              //  This needs to be distinct from COLON in the general case             // to distinguish from the colon in a ternary .  .  .  which needs             // different spacing .              result . append ( ':' )  ;              break ;          case  Token . COLON:             if  (  Token . EOL == get Next ( source, length, i )  )                  // it's the end of a label                 result . append ( ':' )  ;              else                 // it's the middle part of a ternary                 result . append ( "" : "" )  ;              break ;          case  Token . OR:             result . append ( "" || "" )  ;              break ;          case  Token . AND:             result . append ( "" && "" )  ;              break ;          case  Token . BITOR:             result . append ( "" | "" )  ;              break ;          case  Token . BITXOR:             result . append ( "" ^ "" )  ;              break ;          case  Token . BITAND:             result . append ( "" & "" )  ;              break ;          case  Token . SHEQ:             result . append ( "" === "" )  ;              break ;          case  Token . SHNE:             result . append ( "" !== "" )  ;              break ;          case  Token . EQ:             result . append ( "" == "" )  ;              break ;          case  Token . NE:             result . append ( "" != "" )  ;              break ;          case  Token . LE:             result . append ( "" <= "" )  ;              break ;          case  Token . LT:             result . append ( "" < "" )  ;              break ;          case  Token . GE:             result . append ( "" >= "" )  ;              break ;          case  Token . GT:             result . append ( "" > "" )  ;              break ;          case  Token . INSTANCEOF:             result . append ( "" instanceof "" )  ;              break ;          case  Token . LSH:             result . append ( "" << "" )  ;              break ;          case  Token . RSH:             result . append ( "" >> "" )  ;              break ;          case  Token . URSH:             result . append ( "" >>> "" )  ;              break ;          case  Token . TYPEOF:             result . append ( ""typeof "" )  ;              break ;          case  Token . VOID:             result . append ( ""void "" )  ;              break ;          case  Token . CONST:             result . append ( ""const "" )  ;              break ;          case  Token . YIELD:             result . append ( ""yield "" )  ;              break ;          case  Token . NOT:             result . append ( '!' )  ;              break ;          case  Token . BITNOT:             result . append ( '~' )  ;              break ;          case  Token . POS:             result . append ( '+' )  ;              break ;          case  Token . NEG:             result . append ( '-' )  ;              break ;          case  Token . INC:             result . append ( ""++"" )  ;              break ;          case  Token . DEC:             result . append ( ""--"" )  ;              break ;          case  Token . ADD:             result . append ( "" + "" )  ;              break ;          case  Token . SUB:             result . append ( "" - "" )  ;              break ;          case  Token . MUL:             result . append ( "" * "" )  ;              break ;          case  Token . DIV:             result . append ( "" / "" )  ;              break ;          case  Token . MOD:             result . append ( "" % "" )  ;              break ;          case  Token . COLONCOLON:             result . append ( ""::"" )  ;              break ;          case  Token . DOTDOT:             result . append ( "" .  . "" )  ;              break ;          case  Token . DOTQUERY:             result . append ( "" .  ( "" )  ;              break ;          case  Token . XMLATTR:             result . append ( '@' )  ;              break ;          default:             //  If we don't know how to decompile it, raise an exception .              throw new  Runtime Exception ( "" Token: "" +  Token . name ( source . char At ( i )  )  )  ;      }     ++i ;  } if  ( !to Source )  {     // add that trailing newline if it's an outermost function .      if  ( !just Function Body )          result . append ( '\n' )  ;  } else {     if  ( top Function Type ==  Function Node . FUNCTION_EXPRESSION )  {         result . append ( ' ) ' )  ;      } } return result . to String (  )  ; }"
3587,"Type resolve Internal (  Type Variable<?> var,  Type Table for Dependants ) {  Type type = map . get ( new  Type Variable Key ( var )  )  ;  if  ( type == null )  {      Type [  ]  bounds = var . get Bounds (  )  ;      if  ( bounds . length == 0 )  {         return var ;      }      Type [  ]  resolved Bounds = new  Type Resolver ( for Dependants )  . resolve Types ( bounds )  ;      /*      *  We'd like to simply create our own  Type Variable with the newly resolved bounds .   There's      * just one problem:  Starting with JDK 7u51, the JDK  Type Variable's equals (  )  method doesn't      * recognize instances of our  Type Variable implementation .   This is a problem because users      * compare  Type Variables from the JDK against  Type Variables returned by  Type Resolver .   To      * work with all JDK versions,  Type Resolver must return the appropriate  Type Variable      * implementation in each of the three possible cases:      *      * 1 .   Prior to JDK 7u51, the JDK  Type Variable implementation interoperates with ours .       *  Therefore, we can always create our own  Type Variable .       *      * 2 .   Starting with JDK 7u51, the JDK  Type Variable implementations does not interoperate      * with ours .   Therefore, we have to be careful about whether we create our own  Type Variable:      *      * 2a .   If the resolved types are identical to the original types, then we can return the      * original, identical JDK  Type Variable .   By doing so, we sidestep the problem entirely .       *      * 2b .   If the resolved types are different from the original types, things are trickier .   The      * only way to get a  Type Variable instance for the resolved types is to create our own .   The      * created  Type Variable will not interoperate with any JDK  Type Variable .   But this is OK:  We      * don't _want_ our new  Type Variable to be equal to the JDK  Type Variable because it has      * _different bounds_ than the JDK  Type Variable .   And it wouldn't make sense for our new      *  Type Variable to be equal to any _other_ JDK  Type Variable, either, because any other JDK      *  Type Variable must have a different declaration or name .   The only  Type Variable that our      * new  Type Variable _will_ be equal to is an equivalent  Type Variable that was also created      * by us .   And that equality is guaranteed to hold because it doesn't involve the JDK      *  Type Variable implementation at all .       */     if  (  Types .  Native Type Variable Equals . NATIVE_TYPE_VARIABLE_ONLY &&  Arrays . equals ( bounds, resolved Bounds )  )  {         return var ;      }     return  Types . new Artificial Type Variable ( var . get Generic Declaration (  ) , var . get Name (  ) , resolved Bounds )  ;  } // in case the type is yet another type variable .  return new  Type Resolver ( for Dependants )  . resolve Type ( type )  ; }"
3588,public int get Best Scan End Offset (  ) { return m Best Scan End Offset ; }
3589,public final int get Begin B (  ) { return begin B ; }
3590,"public com . anychart . charts .  Tag Cloud credits (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . credits ( %s )  ; "", value )  )  ;  return this ; }"
3591,Dagger Module Method Subject with Additional Sources (  Java File Object .  .  .  sources ) { this . additional Sources =  Immutable List . copy Of ( sources )  ;  return this ; }
3592,"protected void fill Unconfigured (  Cell Name Resolver cell Name Resolver,  Project Filesystem filesystem,  Forward Relative Path path Relative To Project Root,  Immutable Collection .  Builder<U> builder,  Object object )  throws  Coerce Failed Exception{ if  ( object instanceof  Collection )  {      Iterable<?> iterable =  (  Iterable<?> )  object ;      for  (  Object element : iterable )  {         // if any element failed, the entire collection fails         U coerced Element = element Type Coercer . coerce To Unconfigured ( cell Name Resolver, filesystem, path Relative To Project Root, element )  ;          builder . add ( coerced Element )  ;      } } else {     throw  Coerce Failed Exception . simple ( object, get Output Type (  )  . get Type (  )  )  ;  }}"
3593,"public void send Generic On Off Get (  ) { if  ( !check Connectivity ( m Container )  )      return ;  final  Element element = m View Model . get Selected Element (  )  . get Value (  )  ;  if  ( element != null )  {     final  Mesh Model model = m View Model . get Selected Model (  )  . get Value (  )  ;      if  ( model != null )  {         if  ( !model . get Bound App Key Indexes (  )  . is Empty (  )  )  {             final int app Key Index = model . get Bound App Key Indexes (  )  . get ( 0 )  ;              final  Application Key app Key = m View Model . get Network Live Data (  )  . get Mesh Network (  )  . get App Key ( app Key Index )  ;              final int address = element . get Element Address (  )  ;               Log . v ( TAG, "" Sending message to element's unicast address: "" +  Mesh Address . format Address ( address, true )  )  ;              final  Generic On Off Get generic On Off Set = new  Generic On Off Get ( app Key )  ;              send Message ( address, generic On Off Set )  ;          } else {             m View Model . display Snack Bar ( this, m Container, get String ( R . string . error_no_app_keys_bound ) ,  Snackbar . LENGTH_LONG )  ;          }     } }}"
3594,"public com . anychart . charts .  Tree Map padding (  String value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
3595,"public  Matrix4 left Multiply ( @ Non Null  Matrix4 matrix ) {  System . arraycopy ( m, 0, m Tmp, 0, 16 )  ;   Matrix . multiply MM ( m, 0, matrix . get Double Values (  ) , 0, m Tmp, 0 )  ;  return this ; }"
3596,"public static boolean is Prime ( long n ) { if  ( n < 2 )  {     check Non Negative ( ""n"", n )  ;      return false ;  } if  ( n < 66 )  {     //  Encode all primes less than 66 into mask without 0 and 1 .      long mask =  ( 1 L <<  ( 2 - 2 )  )  |  ( 1 L <<  ( 3 - 2 )  )  |  ( 1 L <<  ( 5 - 2 )  )  |  ( 1 L <<  ( 7 - 2 )  )  |  ( 1 L <<  ( 11 - 2 )  )  |  ( 1 L <<  ( 13 - 2 )  )  |  ( 1 L <<  ( 17 - 2 )  )  |  ( 1 L <<  ( 19 - 2 )  )  |  ( 1 L <<  ( 23 - 2 )  )  |  ( 1 L <<  ( 29 - 2 )  )  |  ( 1 L <<  ( 31 - 2 )  )  |  ( 1 L <<  ( 37 - 2 )  )  |  ( 1 L <<  ( 41 - 2 )  )  |  ( 1 L <<  ( 43 - 2 )  )  |  ( 1 L <<  ( 47 - 2 )  )  |  ( 1 L <<  ( 53 - 2 )  )  |  ( 1 L <<  ( 59 - 2 )  )  |  ( 1 L <<  ( 61 - 2 )  )  ;      //  Look up n within the mask .      return  (  ( mask >>  (  ( int )  n - 2 )  )  & 1 )  != 0 ;  } if  (  ( SIEVE_30 &  ( 1 <<  ( n % 30 )  )  )  != 0 )  {     return false ;  } if  ( n % 7 == 0 || n % 11 == 0 || n % 13 == 0 )  {     return false ;  } if  ( n < 17 * 17 )  {     return true ;  } for  ( long [  ]  base Set : miller Rabin Base Sets )  {     if  ( n <= base Set [ 0 ]  )  {         for  ( int i = 1 ;  i < base Set . length ;  i++ )  {             if  ( ! Miller Rabin Tester . test ( base Set [ i ] , n )  )  {                 return false ;              }         }         return true ;      } } throw new  Assertion Error (  )  ; }"
3597,"public static  Big Integer signed Message Hash To Key ( byte [  ]  message Hash,  Signature Data signature Data )  throws  Signature Exception{ byte [  ]  r = signature Data . get R (  )  ;  byte [  ]  s = signature Data . get S (  )  ;  verify Precondition ( r != null && r . length == 32, ""r must be 32 bytes"" )  ;  verify Precondition ( s != null && s . length == 32, ""s must be 32 bytes"" )  ;  int header = signature Data . get V (  )  [ 0 ]  & 0x FF ;  //                  0x1 D = second key with even y, 0x1 E = second key with odd y if  ( header < 27 || header > 34 )  {     throw new  Signature Exception ( "" Header byte out of range: "" + header )  ;  } ECDSA Signature sig = new ECDSA Signature ( new  Big Integer ( 1, signature Data . get R (  )  ) , new  Big Integer ( 1, signature Data . get S (  )  )  )  ;  int rec Id = header - 27 ;   Big Integer key = recover From Signature ( rec Id, sig, message Hash )  ;  if  ( key == null )  {     throw new  Signature Exception ( "" Could not recover public key from signature"" )  ;  } return key ; }"
3598,"private void visit Component (  Legacy Binding Graph graph,  Component Node parent Component ) { binding Graph Path . add Last ( graph )  ;   Component Path graph Path =  Component Path . create ( binding Graph Path . stream (  )  . map (  Legacy Binding Graph::component Descriptor )  . map (  Component Descriptor::type Element )  . collect ( to Immutable List (  )  )  )  ;  component Paths . add Last ( graph Path )  ;   Component Node current Component =  Component Node Impl . create ( component Path (  ) , graph . component Descriptor (  )  )  ;  network . add Node ( current Component )  ;  for  (  Component Method Descriptor entry Point Method : graph . component Descriptor (  )  . entry Point Methods (  )  )  {     visit Entry Point ( current Component, entry Point Method . dependency Request (  )  . get (  )  )  ;  } for  (  Resolved Bindings resolved Bindings : graph . resolved Bindings (  )  )  {     for  (  Binding Node binding : binding Nodes ( resolved Bindings )  )  {         if  ( bindings . add ( binding )  )  {             network . add Node ( binding )  ;              for  (  Dependency Request dependency Request : binding . dependencies (  )  )  {                 add Dependency Edges ( binding, dependency Request )  ;              }         }         if  ( binding . kind (  )  . equals ( SUBCOMPONENT_CREATOR )  && binding . component Path (  )  . equals ( current Component . component Path (  )  )  )  {             network . add Edge ( binding, subcomponent Node ( binding . key (  )  . type (  ) , graph ) , new  Subcomponent Creator Binding Edge Impl ( resolved Bindings . subcomponent Declarations (  )  )  )  ;          }     } } if  ( binding Graph Path . size (  )  > 1 )  {      Legacy Binding Graph parent =  Iterators . get ( binding Graph Path . descending Iterator (  ) , 1 )  ;      parent . component Descriptor (  )  . get Factory Method For Child Component ( graph . component Descriptor (  )  )  . if Present (  child Factory Method -> visit Subcomponent Factory Method ( parent Component, current Component, child Factory Method . method Element (  )  )  )  ;  } for  (  Legacy Binding Graph child : graph . subgraphs (  )  )  {     visit Component ( child, current Component )  ;  } verify ( binding Graph Path . remove Last (  )  . equals ( graph )  )  ;  verify ( component Paths . remove Last (  )  . equals ( graph Path )  )  ; }"
3599,"private static void set Image SD Card Cache (  ) { if  ( image SD Card Cache == null )  {     return ;  }  On Image SD Callback Listener image Call Back = new  On Image SD Callback Listener (  )  {     private static final long serial Version UID = 1 L ;      @ Override     public void on Get Success (  String image Url,  String image Path,  View view, boolean is In Cache )  {         if  ( view != null && view instanceof  Image View )  {              Image View image View =  (  Image View )  view ;              // if oom please use  Bitmap Factory . decode File ( image Path, option )               Bitmap bm =  Bitmap Factory . decode File ( image Path )  ;              if  ( bm != null )  {                 image View . set Image Bitmap ( bm )  ;                  // first time show with animation                 if  ( !is In Cache )  {                     image View . start Animation ( get In Alpha Animation ( 2000 )  )  ;                  }             }         } else {              Log . e ( TAG, "" View is not instance of  Image View, you need to set On Image SD Callback Listener (  )  by your self"" )  ;          }     }     @ Override     public void on Pre Get (  String image Url,  View view )  {     }     @ Override     public void on Get Not In Cache (  String image Url,  View view )  {     }     @ Override     public void on Get Failed (  String image Url,  String image Path,  View view,  Failed Reason failed Reason )  {     } } ;  image SD Card Cache . set On Image SD Callback Listener ( image Call Back )  ;  image SD Card Cache . set Cache Full Remove Type ( new  Remove Type Last Used Time First< String> (  )  )  ;  image SD Card Cache . set File Name Rule ( new  File Name Rule Image Url (  )  )  ;  image SD Card Cache . set Http Read Time Out ( 10000 )  ;  image SD Card Cache . set Valid Time ( -1 )  ; }"
3600,private void _set Tab Layout Can Click ( boolean can Click ) {  Linear Layout tab Strip =  (  Linear Layout )  m Tab Layout . get Child At ( 0 )  ;  for  ( int i = 0 ;  i < tab Strip . get Child Count (  )  ;  i++ )  {      View tab View = tab Strip . get Child At ( i )  ;      if  ( tab View != null )  {         tab View . set Clickable ( can Click )  ;      } }}
3601,"public com . anychart . core . stock . series .  Base series (  ) { return new com . anychart . core . stock . series .  Base ( js Base + "" . series (  ) "" )  ; }"
3602,"public void save As Xlsx ( com . anychart . enums .  Chart Data Export Mode chart Data Export Mode,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Xlsx ( %s, %s )  ; "",  ( chart Data Export Mode != null )  ? chart Data Export Mode . get Js Base (  )  : null, wrap Quotes ( filename )  )  )  ; }"
3603,public  Set< Object Id> get Additional Haves (  ) { return get Additional Haves ( null )  ; }
3604,"public void line Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . line Height (  )  ; "" )  ; }"
3605,"public  Package File Manifest put Computed Node If Not Present (  Cell cell,  Abs Path package File,  Package File Manifest manifest, boolean target Is Configuration,  Buck Event Bus event Bus )  throws  Build Target Exception{  Immutable Set .  Builder< Abs Path> package Dependents =  Immutable Set . builder (  )  ;  add All Includes ( package Dependents, manifest . get Includes (  ) , cell )  ;  return get Or Create Cell State ( cell )  . put Package File Manifest If Not Present ( package File, manifest, package Dependents . build (  ) , manifest . get Env (  )  . or Else (  Immutable Map . of (  )  )  )  ; }"
3606,"private static  Object [  ]  parse Font Style (  Context context,  Attribute Set attrs, int def Style Attr ) { final  Typed Array a = context . obtain Styled Attributes ( attrs, R . styleable .  Text Appearance, def Style Attr, 0 )  ;  final  Object [  ]  result = parse Font Style ( a )  ;  a . recycle (  )  ;  return result ; }"
3607,protected void recreate Views (  ) {  View Group container View =  (  View Group )  get Activity (  )  . find View By Id ( R . id . form_elements_container )  ;  form Controller . recreate Views ( container View )  ; }
3608,public void set Voice Mail Number (  String voice Mail Number ) { this . voice Mail Number = voice Mail Number ; }
3609,"protected void draw Label (  Canvas c, float x, float y,  String label ) { c . draw Text ( label, x, y, m Legend Label Paint )  ; }"
3610,"public int binary Search (  List<? extends T> sorted List, @ Nullable T key ) { return  Collections . binary Search ( sorted List, key, this )  ; }"
3611,public void set Display Chart Values ( boolean display ) { m Display Chart Values = display ; }
3612,"public void configure Next Layout Animation (  Readable Map config,  Callback success,  Callback error ) { m UI Implementation . configure Next Layout Animation ( config, success )  ; }"
3613,"public static void verify ( boolean expression,  String error Message Template, long p1, char p2 ) { if  ( !expression )  {     throw new  Verify Exception ( lenient Format ( error Message Template, p1, p2 )  )  ;  }}"
3614,"public static  Memory Cache create Memory Cache (  Context context, int memory Cache Size ) { if  ( memory Cache Size == 0 )  {      Activity Manager am =  (  Activity Manager )  context . get System Service (  Context . ACTIVITY_SERVICE )  ;      int memory Class = am . get Memory Class (  )  ;      if  ( has Honeycomb (  )  && is Large Heap ( context )  )  {         memory Class = get Large Memory Class ( am )  ;      }     memory Cache Size = 1024 * 1024 * memory Class / 8 ;  } return new  Lru Memory Cache ( memory Cache Size )  ; }"
3615,protected void set Push Options (  List< String> options ) { push Options = options ; }
3616,"public void set Float Values ( float .  .  .  values ) { if  ( values == null || values . length == 0 )  {     return ;  } if  ( m Values == null || m Values . length == 0 )  {     set Values ( new  Property Values Holder [  ]  {  Property Values Holder . of Float ( """", values )  } )  ;  } else {      Property Values Holder values Holder = m Values [ 0 ]  ;      values Holder . set Float Values ( values )  ;  } //  New property/values/target should cause re-initialization prior to starting m Initialized = false ; }"
3617,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
3618,public synchronized T check Out (  ) { if  ( available . is Empty (  )  )  {     available . add ( create (  )  )  ;  } var instance = available . iterator (  )  . next (  )  ;  available . remove ( instance )  ;  in Use . add ( instance )  ;  return instance ; }
3619,public void stop Collecting (  ) { if  ( cpu Metric Collector Job == null )  {     return ;  } cpu Metric Collector Job . cancel ( false )  ;  cpu Metric Collector Job = null ;  cpu Metric Collection Rate Ms = UNSET_CPU_METRIC_COLLECTION_RATE ; }
3620,public int get Height (  ) { if  ( m Rotation Angle % 180 != 0 || m Exif Orientation ==  Exif Interface . ORIENTATION_TRANSPOSE || m Exif Orientation ==  Exif Interface . ORIENTATION_TRANSVERSE )  {     return get Bitmap Width ( m Bitmap )  ;  } return get Bitmap Height ( m Bitmap )  ; }
3621,public boolean is Finishing (  ) { return is Finishing ; }
3622,public void set Depart Type (  String depart Type ) { this . depart Type = depart Type ; }
3623,"public  End To End Environment add Local Config Set (  Map< String,  Map< String,  String>> local Config Set ) { local Config Sets . add ( local Config Set )  ;  return this ; }"
3624,"private  Bitmap on Take Photo Result (  ) {  Uri taken Photo Uri = this . uri Paths . get Photo File Uri (  Action Picture Object . photo Name Auxiliar,  Action Picture Object . photo Name Auxiliar, action Picture Object . get Activity (  )  )  ;  // by this point we have the camera photo on disk if  ( taken Photo Uri != null )  {      Bitmap taken Image =  Bitmap Factory . decode File ( taken Photo Uri . get Path (  )  )  ;      taken Image =  Picture Utils . resize Photo ( taken Image, action Picture Object . get Resize Photo (  ) , true )  ;      return taken Image ;  } else {     return null ;  }}"
3625,public void member Value Pair (  String member Name )  throws IO Exception{ member Value Pair ( pool . add Utf8 Info ( member Name )  )  ; }
3626,"public  Optional< Immutable Set< String>> run (  Collection< String> include,  Collection< String> exclude,  Enum Set< Option> options )  throws IO Exception,  Interrupted Exception,  Watchman Query Failed Exception{  Immutable Map< String, ?> watchman Query = create Watchman Query ( include, exclude, options )  ;   Optional<? extends  Map< String, ?>> result = watchman Client . query With Timeout ( TIMEOUT_NANOS, ""query"", watchman Watch Root, watchman Query )  ;  if  ( !result . is Present (  )  )  {     return  Optional . empty (  )  ;  } @ Nullable  Object error = result . get (  )  . get ( ""error"" )  ;  if  ( error != null )  {     throw new  Watchman Query Failed Exception ( error . to String (  )  )  ;  } @ Suppress Warnings ( ""unchecked"" )   List< String> files =  (  List< String> )  result . get (  )  . get ( ""files"" )  ;  return  Optional . of (  Immutable Set . copy Of ( files )  )  ; }"
3627,"public void into Map With Component (  ) {  Java File Object module =  Java File Objects . for Source Lines ( ""test .  Test Module"", ""package test ; "", """", ""import dagger .  Binds Optional Of ; "", ""import dagger .  Module ; "", ""import dagger . multibindings .  Into Map ; "", """", ""@ Module"", ""interface  Test Module {"", ""  @ Binds Optional Of @ Into Map  Object object (  )  ; "", ""}"" )  ;   Java File Object component =  Java File Objects . for Source Lines ( ""test .  Test Component"", ""package test ; "", """", ""import dagger .  Component ; "", """", ""@ Component ( modules =  Test Module . class ) "", ""interface  Test Component {}"" )  ;   Compilation compilation = dagger Compiler (  )  . compile ( module, component )  ;  assert That ( compilation )  . failed (  )  ;  assert That ( compilation )  . had Error Containing ( ""cannot have multibinding annotations"" )  . in File ( module )  . on Line Containing ( ""object (  )  ; "" )  ; }"
3628,"protected int calculate Modulus (  String code, boolean includes Check Digit )  throws  Check Digit Exception{ int total = 0 ;  for  ( int i = 0 ;  i < code . length (  )  ;  i++ )  {     int lth = code . length (  )  +  ( includes Check Digit ? 0 : 1 )  ;      int left Pos = i + 1 ;      int right Pos = lth - i ;      int char Value = to Int ( code . char At ( i ) , left Pos, right Pos )  ;      total += weighted Value ( char Value, left Pos, right Pos )  ;  } if  ( total == 0 )  {     throw new  Check Digit Exception ( "" Invalid code, sum is zero"" )  ;  } return total % modulus ; }"
3629,public  File [  ]  get Test List (  ) { return get List Of Files ( TEST_PATH )  ; }
3630,"public static  Hls Media Chunk create Instance (  Hls Extractor Factory extractor Factory,  Data Source data Source,  Format format, long start Of Playlist In Period Us,  Hls Media Playlist media Playlist, int segment Index In Playlist,  Uri playlist Url, @ Nullable  List< Format> muxed Caption Formats, int track Selection Reason, @ Nullable  Object track Selection Data, boolean is Master Timestamp Source,  Timestamp Adjuster Provider timestamp Adjuster Provider, @ Nullable  Hls Media Chunk previous Chunk, @ Nullable byte [  ]  media Segment Key, @ Nullable byte [  ]  init Segment Key ) { //  Media segment .   Hls Media Playlist .  Segment media Segment = media Playlist . segments . get ( segment Index In Playlist )  ;   Data Spec data Spec = new  Data Spec (  Uri Util . resolve To Uri ( media Playlist . base Uri, media Segment . url ) , media Segment . byterange Offset, media Segment . byterange Length, /* key= */ null )  ;  boolean media Segment Encrypted = media Segment Key != null ;  byte [  ]  media Segment Iv = media Segment Encrypted ? get Encryption Iv Array ( media Segment . encryption IV )  : null ;   Data Source media Data Source = build Data Source ( data Source, media Segment Key, media Segment Iv )  ;  //  Init segment .   Hls Media Playlist .  Segment init Segment = media Segment . initialization Segment ;   Data Spec init Data Spec = null ;  boolean init Segment Encrypted = false ;   Data Source init Data Source = null ;  if  ( init Segment != null )  {     init Segment Encrypted = init Segment Key != null ;      byte [  ]  init Segment Iv = init Segment Encrypted ? get Encryption Iv Array ( init Segment . encryption IV )  : null ;       Uri init Segment Uri =  Uri Util . resolve To Uri ( media Playlist . base Uri, init Segment . url )  ;      init Data Spec = new  Data Spec ( init Segment Uri, init Segment . byterange Offset, init Segment . byterange Length, /* key= */     null )  ;      init Data Source = build Data Source ( data Source, init Segment Key, init Segment Iv )  ;  } long segment Start Time In Period Us = start Of Playlist In Period Us + media Segment . relative Start Time Us ;  long segment End Time In Period Us = segment Start Time In Period Us + media Segment . duration Us ;  int discontinuity Sequence Number = media Playlist . discontinuity Sequence + media Segment . relative Discontinuity Sequence ;   Extractor previous Extractor = null ;   Id3 Decoder id3 Decoder ;   Parsable Byte Array scratch Id3 Data ;  boolean should Splice In ;  if  ( previous Chunk != null )  {     id3 Decoder = previous Chunk . id3 Decoder ;      scratch Id3 Data = previous Chunk . scratch Id3 Data ;      should Splice In = !playlist Url . equals ( previous Chunk . playlist Url )  || !previous Chunk . load Completed ;      previous Extractor = previous Chunk . is Extractor Reusable && previous Chunk . discontinuity Sequence Number == discontinuity Sequence Number && !should Splice In ? previous Chunk . extractor : null ;  } else {     id3 Decoder = new  Id3 Decoder (  )  ;      scratch Id3 Data = new  Parsable Byte Array (  Id3 Decoder . ID3_HEADER_LENGTH )  ;      should Splice In = false ;  } return new  Hls Media Chunk ( extractor Factory, media Data Source, data Spec, format, media Segment Encrypted, init Data Source, init Data Spec, init Segment Encrypted, playlist Url, muxed Caption Formats, track Selection Reason, track Selection Data, segment Start Time In Period Us, segment End Time In Period Us, /* chunk Media Sequence= */ media Playlist . media Sequence + segment Index In Playlist, discontinuity Sequence Number, media Segment . has Gap Tag, is Master Timestamp Source, /* timestamp Adjuster= */ timestamp Adjuster Provider . get Adjuster ( discontinuity Sequence Number ) , media Segment . drm Init Data, previous Extractor, id3 Decoder, scratch Id3 Data, should Splice In )  ; }"
3631,"public int count Meta Blocks (  File f )  throws  Cannot Read Exception, IO Exception{  Random Access File raf = new  Random Access File ( f, ""r"" )  ;   Flac Stream Reader flac Stream = new  Flac Stream Reader ( raf )  ;  flac Stream . find Stream (  )  ;  boolean is Last Block = false ;  int count = 0 ;  while  ( !is Last Block )  {      Metadata Block Header mbh =  Metadata Block Header . read Header ( raf )  ;      logger . config ( "" Found block:"" + mbh . get Block Type (  )  )  ;      raf . seek ( raf . get File Pointer (  )  + mbh . get Data Length (  )  )  ;      is Last Block = mbh . is Last Block (  )  ;      // Free memory     mbh = null ;      count++ ;  } raf . close (  )  ;  return count ; }"
3632,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
3633,public boolean get Symrefs (  ) { return symrefs ; }
3634,"void change Drag View View Alpha (  ) { if  ( enable Horizontal Alpha Effect )  {     float alpha = 1 - get Horizontal Drag Offset (  )  ;      if  ( alpha == 0 )  {         alpha = 1 ;      }      View Helper . set Alpha ( drag View, alpha )  ;  }}"
3635,"public com . anychart . core . stock .  Plot y Axis (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Axis ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
3636,"private static  Iterable< Arg> get Static Link Args (  Build Target target,  Immutable List< Source Path> libs,  Immutable List< String> args ) {  Immutable List .  Builder< Arg> builder =  Immutable List . builder (  )  ;  for  (  String arg : args )  {      Optional< Pair< String,  String>> lib Ref = get Lib Ref (  Immutable Set . of ( LIB_MACRO ) , arg )  ;      if  ( lib Ref . is Present (  )  )  {         int index ;          try {             index =  Integer . parse Int ( lib Ref . get (  )  . get Second (  )  )  ;          } catch  (  Number Format Exception e )  {             throw new  Human Readable Exception ( ""%s: "", target )  ;          }         if  ( index < 0 || index >= libs . size (  )  )  {             throw new  Human Readable Exception ( ""%s: "", target )  ;          }         builder . add (  Source Path Arg . of ( libs . get ( index )  )  )  ;      } else {         builder . add (  String Arg . of ( arg )  )  ;      } } return builder . build (  )  ; }"
3637,"public final  String Builder append To (  String Builder builder, @ Nullable  Object [  ]  parts ) { return append To ( builder,  Arrays . as List ( parts )  )  ; }"
3638,"public com . anychart . core . stock . scrollerseries .  Spline bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
3639,"public  Texture Region [  ]  [  ]  split ( int tile Width, int tile Height ) { int x = get Region X (  )  ;  int y = get Region Y (  )  ;  int width = region Width ;  int height = region Height ;  int rows = height / tile Height ;  int cols = width / tile Width ;  int start X = x ;   Texture Region [  ]  [  ]  tiles = new  Texture Region [ rows ]  [ cols ]  ;  for  ( int row = 0 ;  row < rows ;  row++, y += tile Height )  {     x = start X ;      for  ( int col = 0 ;  col < cols ;  col++, x += tile Width )  {         tiles [ row ]  [ col ]  = new  Texture Region ( texture, x, y, tile Width, tile Height )  ;      } } return tiles ; }"
3640,"public com . anychart . core . resource .  Activities fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
3641,public int [  ]  get Hardware Assist Manufacturers (  ) { return m Hardware Assist Manufacturers ; }
3642,public boolean is Test Complete (  ) { synchronized  ( lock )  {     return signal Test Completed . get Count (  )  <= 0 || test Completed But Not Fully Torn Down ;  }}
3643,"public com . anychart . charts .  Circular Gauge select Marquee Stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3644,"public com . anychart . charts .  Sparkline first Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . first Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
3645,public final  View get Content View (  ) { return content View != null ? content View : item View ; }
3646,"public static  Cxx Preprocessor Input get Cxx Preprocessor Input (  Build Target build Target,  Action Graph Builder graph Builder, boolean has Header Symlink Tree,  Cxx Platform platform,  Header Visibility header Visibility,  Include Type include Type,  Multimap< Cxx Source .  Type,  String> exported Preprocessor Flags,  Iterable< Framework Path> frameworks ) {  Cxx Preprocessor Input .  Builder builder =  Cxx Preprocessor Input . builder (  )  ;  if  ( has Header Symlink Tree )  {     add Header Symlink Tree ( builder, build Target, graph Builder, platform, header Visibility, include Type )  ;  } return builder . put All Preprocessor Flags (  Immutable List Multimap . copy Of (  Multimaps . transform Values ( exported Preprocessor Flags,  String Arg::of )  )  )  . add All Frameworks ( frameworks )  . build (  )  ; }"
3647,public void add Change Listener (  Realm Change Listener< Realm> listener ) { add Listener ( listener )  ; }
3648,"public void read Loop (  Read Callback read Callback )  throws IO Exception{  Frame frame = new  Frame (  )  ;  do {     frame . read From ( m Buffered Input )  ;      m Current Payload . write ( frame . payload Data, 0,  ( int )  frame . payload Len )  ;      if  ( frame . fin )  {         byte [  ]  complete Payload = m Current Payload . to Byte Array (  )  ;          read Callback . on Complete Frame ( frame . opcode, complete Payload, complete Payload . length )  ;          m Current Payload . reset (  )  ;      } } while  ( frame . opcode !=  Frame . OPCODE_CONNECTION_CLOSE )  ; }"
3649,"public synchronized  Countly Config set Metric Override (  Map< String,  String> provided Metric Override ) { metric Override = provided Metric Override ;  return this ; }"
3650,public void change Result Reg ( int reg ) { if  ( result != null )  {     result = result . with Reg ( reg )  ;  }}
3651,public void invalidate All (  Iterable<?> keys ) { for  (  Object key : keys )  {     invalidate ( key )  ;  }}
3652,"public com . anychart . core .  Separate Chart animation (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . animation ( %s )  ; "", settings )  )  ;  return this ; }"
3653,public  Stream Download Task get Stream (  ) {  Stream Download Task task = new  Stream Download Task ( this )  ;  task . queue (  )  ;  return task ; }
3654,"public com . anychart . charts .  Heat Map parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
3655,"public void task Shot Pic ( GSY Video Shot Listener gsy Video Shot Listener, boolean high ) { if  ( get Current Player (  )  . get Render Proxy (  )  != null )  {     get Current Player (  )  . get Render Proxy (  )  . task Shot Pic ( gsy Video Shot Listener, high )  ;  }}"
3656,"public static  Bitmap rotate (  Bitmap bmp, int degrees, boolean reflex ) { if  ( bmp == null )      throw new  Null Pointer Exception (  )  ;  //getting scales of the image   int width = bmp . get Width (  )  ;  int height = bmp . get Height (  )  ;  // Creating a  Matrix and rotating it to specified degrees     Matrix matrix = new  Matrix (  )  ;  matrix . post Rotate ( degrees )  ;  if  ( reflex )      matrix . post Scale ( -1, 1 )  ;  // Getting the rotated  Bitmap    Bitmap rotated Bmp =  Bitmap . create Bitmap ( bmp, 0, 0, width, height, matrix, true )  ;   Byte Array Output Stream stream = new  Byte Array Output Stream (  )  ;  rotated Bmp . compress (  Bitmap .  Compress Format . JPEG, 100, stream )  ;  return rotated Bmp ; }"
3657,"private void write Value ( int unpadded Size Bytes,  Object o ) { //  Create the item with its final, aligned byte size .  write Item ( new  Fake Encoded Item ( align To Int ( unpadded Size Bytes ) , o )  )  ; }"
3658,public boolean has Collision (  ) { return found Collision ; }
3659,"public com . anychart . data .  Set insert (  String row,  Number index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . insert ( %s, %s )  ; "", wrap Quotes ( row ) , index )  )  ;  return this ; }"
3660,"private void set View Tree Observer (  ) { final  View Tree Observer swipe Refresh Layout VTO = irc . get View Tree Observer (  )  ;  swipe Refresh Layout VTO . add On Global Layout Listener ( new  View Tree Observer .  On Global Layout Listener (  )  {     @ Override     public void on Global Layout (  )  {          Rect r = new  Rect (  )  ;          irc . get Window Visible Display Frame ( r )  ;          //状态栏高度         int status Bar H = get Status Bar Height (  )  ;          int screen H = irc . get Root View (  )  . get Height (  )  ;          if  ( r . top != status Bar H )  {             //在这个demo中r . top代表的是状态栏高度，在沉浸式状态栏时r . top＝0，通过get Status Bar Height获取状态栏高度             r . top = status Bar H ;          }         int keyboard H = screen H -  ( r . bottom - r . top )  ;           Log Utils . logd ( ""screen H＝ "" + screen H + "" &keyboard H = "" + keyboard H + "" &r . bottom="" + r . bottom + "" &top="" + r . top + "" &status Bar H="" + status Bar H )  ;          if  ( keyboard H == m Current Keyboard H )  {             //有变化时才处理，否则会陷入死循环             return ;          }         m Current Keyboard H = keyboard H ;          //应用屏幕的高度         m Screen Height = screen H ;          m Edit Text Body Height = edit Text Body Ll . get Height (  )  ;          //偏移listview         if  ( irc != null && m Comment Config != null )  {             int index = m Comment Config . circle Position + irc . get Header Container (  )  . get Child Count (  )  + 1 ;              linear Layout Manager . scroll To Position With Offset ( index, get Listview Offset ( m Comment Config )  )  ;          }     } } )  ; }"
3661,"public com . anychart . charts .  Cartesian line Marker (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Marker ( %s )  ; "", settings )  )  ;  return this ; }"
3662,"public static void enable (  ) { if  ( lock . compare And Set ( false, true )  )  {      Rx Java Plugins . set On Flowable Assembly ( new  Function< Flowable,  Flowable> (  )  {         @ Override         public  Flowable apply (  Flowable f )  throws  Exception {             if  ( f instanceof  Callable )  {                 if  ( f instanceof  Scalar Callable )  {                     return new  Flowable On Assembly Scalar Callable ( f )  ;                  }                 return new  Flowable On Assembly Callable ( f )  ;              }             return new  Flowable On Assembly ( f )  ;          }     } )  ;       Rx Java Plugins . set On Connectable Flowable Assembly ( new  Function< Connectable Flowable,  Connectable Flowable> (  )  {         @ Override         public  Connectable Flowable apply (  Connectable Flowable f )  throws  Exception {             return new  Flowable On Assembly Connectable ( f )  ;          }     } )  ;       Rx Java Plugins . set On Observable Assembly ( new  Function< Observable,  Observable> (  )  {         @ Override         public  Observable apply (  Observable f )  throws  Exception {             if  ( f instanceof  Callable )  {                 if  ( f instanceof  Scalar Callable )  {                     return new  Observable On Assembly Scalar Callable ( f )  ;                  }                 return new  Observable On Assembly Callable ( f )  ;              }             return new  Observable On Assembly ( f )  ;          }     } )  ;       Rx Java Plugins . set On Connectable Observable Assembly ( new  Function< Connectable Observable,  Connectable Observable> (  )  {         @ Override         public  Connectable Observable apply (  Connectable Observable f )  throws  Exception {             return new  Observable On Assembly Connectable ( f )  ;          }     } )  ;       Rx Java Plugins . set On Single Assembly ( new  Function< Single,  Single> (  )  {         @ Override         public  Single apply (  Single f )  throws  Exception {             if  ( f instanceof  Callable )  {                 if  ( f instanceof  Scalar Callable )  {                     return new  Single On Assembly Scalar Callable ( f )  ;                  }                 return new  Single On Assembly Callable ( f )  ;              }             return new  Single On Assembly ( f )  ;          }     } )  ;       Rx Java Plugins . set On Completable Assembly ( new  Function< Completable,  Completable> (  )  {         @ Override         public  Completable apply (  Completable f )  throws  Exception {             if  ( f instanceof  Callable )  {                 if  ( f instanceof  Scalar Callable )  {                     return new  Completable On Assembly Scalar Callable ( f )  ;                  }                 return new  Completable On Assembly Callable ( f )  ;              }             return new  Completable On Assembly ( f )  ;          }     } )  ;       Rx Java Plugins . set On Maybe Assembly ( new  Function< Maybe,  Maybe> (  )  {         @ Override         public  Maybe apply (  Maybe f )  throws  Exception {             if  ( f instanceof  Callable )  {                 if  ( f instanceof  Scalar Callable )  {                     return new  Maybe On Assembly Scalar Callable ( f )  ;                  }                 return new  Maybe On Assembly Callable ( f )  ;              }             return new  Maybe On Assembly ( f )  ;          }     } )  ;       Rx Java Plugins . set On Parallel Assembly ( new  Function< Parallel Flowable,  Parallel Flowable> (  )  {         @ Override         public  Parallel Flowable apply (  Parallel Flowable t )  throws  Exception {             return new  Parallel Flowable On Assembly ( t )  ;          }     } )  ;      lock . set ( false )  ;  }}"
3663,"public void add Host Key ( @ Non Null  Key Pair key, boolean in Front ) { if  ( in Front )  {     host Keys . add ( 0, key )  ;  } else {     host Keys . add ( key )  ;  }}"
3664,"public static  String get Distance Of Time In Words (  Date date, boolean be Concise ) {  String ago = ""ago"" ;   String  From Now = ""from now"" ;   String  Just Now = "" Just now"" ;   String  Less Than = "" Less than"" ;   String  About = "" About"" ;   String  Over = "" Over"" ;   String  Almost = "" Almost"" ;   String  Seconds = be Concise ? ""secs"" : ""seconds"" ;   String  Minute = be Concise ? ""min"" : ""minute"" ;   String  Minutes = be Concise ? ""mins"" : ""minutes"" ;   String  Hour = be Concise ? ""hr"" : ""hour"" ;   String  Hours = be Concise ? ""hrs"" : ""hours"" ;   String  Day = ""day"" ;   String  Days = ""days"" ;   String  Month = ""month"" ;   String  Months = ""months"" ;   String  Year = ""year"" ;   String  Years = ""years"" ;  long since = date . get Time (  )  -  ( new  Date (  )  )  . get Time (  )  ;   String direction = since <= 0 ? ago :  From Now ;  int seconds =  ( int )   (  Math . abs ( since )  / 1000 )  ;  int minutes =  Math . round ( seconds / SECONDS_PER_MINUTE )  ;  int hours =  Math . round ( seconds / SECONDS_PER_HOUR )  ;  int days =  Math . round ( seconds / SECONDS_PER_DAY )  ;  int months =  Math . round ( seconds / SECONDS_PER_MONTH )  ;  int years =  Math . round ( seconds / SECONDS_PER_YEAR )  ;  int offset =  ( int )   Math . round (  Math . floor ( years / 4 . 0 )  * 1440 . 0 )  ;  int remainder =  ( minutes - offset )  % 525600 ;  int number ;   String measure ;   String modifier = """" ;  if  ( minutes <= 1 )  {     measure =  Seconds ;      if  ( seconds <= 4 )  {         number = 5 ;          modifier = be Concise ?  Just Now :  Less Than ;      } else if  ( seconds <= 9 )  {         number = 10 ;          modifier = be Concise ?  Just Now :  Less Than ;      } else if  ( seconds <= 19 )  {         number = 20 ;          modifier = be Concise ?  Just Now :  Less Than ;      } else if  ( seconds <= 39 )  {         number = 30 ;          modifier = be Concise ?  Just Now :  About ;      } else if  ( seconds <= 49 )  {         number = 1 ;          measure =  Minute ;          modifier = be Concise ?  Just Now :  Less Than ;      } else if  ( seconds <= 59 )  {         number = 1 ;          measure =  Minute ;          modifier = be Concise ?  Just Now :  Less Than ;      } else {         number = 1 ;          measure =  Minute ;          modifier = be Concise ?  Just Now :  About ;      } } else if  ( minutes <= 44 )  {     number = minutes ;      measure =  Minutes ;  } else if  ( minutes <= 89 )  {     number = 1 ;      measure =  Hour ;      modifier = be Concise ? modifier :  About ;       ;  } else if  ( minutes <= 1439 )  {     number = hours ;      measure =  Hours ;      modifier = be Concise ? modifier :  About ;       ;  } else if  ( minutes <= 2529 )  {     number = 1 ;      measure =  Day ;  } else if  ( minutes <= 43199 )  {     number = days ;      measure =  Days ;  } else if  ( minutes <= 86399 )  {     number = 1 ;      measure =  Month ;      modifier = be Concise ? modifier :  About ;  } else if  ( minutes <= 525599 )  {     number = months ;      measure =  Months ;  } else {     number = years ;      measure = number == 1 ?  Year :  Years ;      if  ( remainder < 131400 )  {         modifier = be Concise ? modifier :  About ;           ;      } else if  ( remainder < 394200 )  {         modifier =  Over ;      } else {         ++number ;          measure =  Years ;          modifier =  Almost ;      } } if  ( modifier . equals Ignore Case (  Just Now )  )  {     return modifier ;  } else {     if  ( modifier . length (  )  > 0 )  {         modifier += "" "" ;      }     return modifier + number + "" "" + measure + "" "" + direction ;  }}"
3665,"public boolean on Create Action Mode (  Action Mode mode,  Menu menu ) { return m Helper . on Create Action Mode ( mode, menu )  ; }"
3666,public com . didiglobal . booster . aapt2 . legacy .  Resources Internal Legacy .  Config Description .  Builder get Config Builder (  ) { on Changed (  )  ;  return get Config Field Builder (  )  . get Builder (  )  ; }
3667,"public static  Pack Index read (  Input Stream fd )  throws IO Exception,  Corrupt Object Exception{ final byte [  ]  hdr = new byte [ 8 ]  ;  IO . read Fully ( fd, hdr, 0, hdr . length )  ;  if  ( is TOC ( hdr )  )  {     final int v = NB . decode Int32 ( hdr, 4 )  ;      switch ( v )  {         case 2:             return new  Pack Index V2 ( fd )  ;          default:             throw new  Unsupported Pack Index Version Exception ( v )  ;      } } return new  Pack Index V1 ( fd, hdr )  ; }"
3668,"public final short get B Nibble (  ) { int b = get B (  )  ;  if  (  ( b & ~0xf )  != 0 )  {     throw new  Dex Exception ( "" Register B out of range: "" +  Hex . u8 ( b )  )  ;  } return  ( short )  b ; }"
3669,"public com . anychart . core . gauge . pointers .  Knob parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
3670,"public com . anychart . charts .  Sparkline labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3671,"protected void on Stop (  ) { super . on Stop (  )  ;  LOG . d ( TAG, "" Stopped the activity . "" )  ;  if  ( this . app View == null )  {     return ;  } this . app View . handle Stop (  )  ; }"
3672,"public static int array Size ( final int expected, final float f ) { final long s =  Math . max ( 2, next Power Of Two (  ( long )   Math . ceil ( expected / f )  )  )  ;  if  ( s >  ( 1 << 30 )  )      throw new  Illegal Argument Exception ( "" Too large  ( "" + expected + "" expected elements with load factor "" + f + "" ) "" )  ;  return  ( int )  s ; }"
3673,public boolean is Initiate On Touch Enabled (  ) { return m Initiate On Touch ; }
3674,public boolean filter Non Concern Stack (  ) { return false ; }
3675,protected void start (  ) {}
3676,public  Bounding Box calculate Bounding Box ( final  Bounding Box out ) { out . inf (  )  ;  return extend Bounding Box ( out )  ; }
3677,public static  String get Name (  Bcfg Section section ) { return get Value ( section . get Section Header (  )  . get Section Name (  )  )  ; }
3678,public  String get Clean Filter Command (  )  throws IO Exception{ if  ( clean Filter Command Holder == null )  {      String cmd = null ;      if  ( state . walk != null )  {         cmd = state . walk . get Filter Command (  Constants . ATTR_FILTER_TYPE_CLEAN )  ;      }     clean Filter Command Holder = new  Holder<> ( cmd )  ;  } return clean Filter Command Holder . get (  )  ; }
3679,public boolean has Records ( short platform ID ) { for  (  Iterator i = records . key Set (  )  . iterator (  )  ;  i . has Next (  )  ;   )  {      Name Record rec =  (  Name Record )  i . next (  )  ;      if  ( rec . platform ID == platform ID )  {         return true ;      } } return false ; }
3680,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
3681,"public static void over Scroll By ( final  Pull To Refresh Base<?> view, final int delta X, final int scroll X, final int delta Y, final int scroll Y, final int scroll Range, final boolean is Touch Event ) { over Scroll By ( view, delta X, scroll X, delta Y, scroll Y, scroll Range, 0, DEFAULT_OVERSCROLL_SCALE, is Touch Event )  ; }"
3682,public final void is Greater Than ( int other ) { is Greater Than (  ( long )  other )  ; }
3683,"public static int compare ( byte a, byte b ) { return to Int ( a )  - to Int ( b )  ; }"
3684,public void notify Data Set Changed ( final boolean force ) { if  ( force || ! ( m Decorated Base Adapter instanceof  Array Adapter<?> )  )  {     // leads to an infinite loop when trying because  Array Adapter triggers notify Data Set Changed itself     // TODO: investigate     m Decorated Base Adapter . notify Data Set Changed (  )  ;  }}
3685,"private void assert Paths Equal (  Path template Subdirectory,  Path destination Subdirectory,  Function< String,  String> normalize Observed Content )  throws IO Exception{  Simple File Visitor< Path> copy Dir Visitor = new  Simple File Visitor< Path> (  )  {     @ Override     public  File Visit Result visit File (  Path file,  Basic File Attributes attrs )  throws IO Exception {          String file Name = file . get File Name (  )  . to String (  )  ;          if  ( file Name . ends With ( EXPECTED_SUFFIX )  && !file Name . ends With ( SKIP_SUFFIX )  )  {             //  Get  File for the file that should be written, but without the "" . expected"" suffix .               Path generated File With Suffix = destination Subdirectory . resolve ( template Subdirectory . relativize ( file )  )  ;               Path directory = generated File With Suffix . get Parent (  )  ;               Path observed File = directory . resolve (  More Paths . get Name Without Extension ( file )  )  ;              assert Files Equal ( file, observed File, normalize Observed Content )  ;          }         return  File Visit Result . CONTINUE ;      } } ;   Files . walk File Tree ( template Subdirectory, copy Dir Visitor )  ; }"
3686,"public  Single< Optional<T>> as Rx Single (  ) { return  Rx Java Utils . create Single Optional ( stor IOSQ Lite, this )  ; }"
3687,"public void set ( int n, int start Pc, int end Pc, int handler Pc,  Cst Type exception Class ) { set0 ( n, new  Item ( start Pc, end Pc, handler Pc, exception Class )  )  ; }"
3688,"public  Observable< List< Feed Item>> load Next Page (  ) { return grouped Loader . get Grouped Next Page (  )  . delay ( 2,  Time Unit . SECONDS )  ; }"
3689,public synchronized boolean contains (  Predicate<K> predicate ) { return !m Cached Entries . get Matching Entries ( predicate )  . is Empty (  )  ; }
3690,"public static byte [  ]  compress To Jpeg (  Pix pixs ) { return compress To Jpeg ( pixs, DEFAULT_QUALITY, DEFAULT_PROGRESSIVE )  ; }"
3691,"public void resizable Deque Test (  ) { final  Long Queue q = new  Long Queue ( 8 )  ;  assert True ( "" New deque is not empty!"", q . size == 0 )  ;  for  ( int i = 0 ;  i < 100 ;  i++ )  {     for  ( int j = 0 ;  j < i ;  j++ )  {         try {             q . add First ( j )  ;          } catch  (  Illegal State Exception e )  {             fail ( "" Failed to add element "" + j + ""  ( "" + i + "" ) "" )  ;          }         final long peeked = q . first (  )  ;          assert True ( ""peek shows "" + peeked + "", should be "" + j + ""  ( "" + i + "" ) "", peeked == j )  ;          final int size = q . size ;          assert True ( "" Size should be "" +  ( j + 1 )  + "" but is "" + size + ""  ( "" + i + "" ) "", size == j + 1 )  ;      }     if  ( i != 0 )  {         final long peek = q . last (  )  ;          assert True ( "" Last thing is not zero but "" + peek + ""  ( "" + i + "" ) "", peek == 0 )  ;      }     for  ( int j = 0 ;  j < i ;  j++ )  {         final long pop = q . remove Last (  )  ;          assert True ( "" Popped should be "" + j + "" but is "" + pop + ""  ( "" + i + "" ) "", pop == j )  ;          final int size = q . size ;          assert True ( "" Size should be "" +  ( i - 1 - j )  + "" but is "" + size + ""  ( "" + i + "" ) "", size == i - 1 - j )  ;      }     assert True ( "" Not empty after cycle "" + i, q . size == 0 )  ;  } for  ( int i = 0 ;  i < 56 ;  i++ )  {     q . add First ( 42 )  ;  } q . clear (  )  ;  assert True ( "" Clear did not clear properly"", q . size == 0 )  ; }"
3692,"public boolean detach ( T entity ) { if  ( identity Scope != null )  {     K key = get Key Verified ( entity )  ;      return identity Scope . detach ( key, entity )  ;  } else {     return false ;  }}"
3693,"public com . anychart . core . cartesian . series .  Column3d y Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
3694,"public void replace New (  Ct Class new Class,  Ct Class called Class,  String called Method ) { transformers = new  Transform New ( transformers, new Class . get Name (  ) , called Class . get Name (  ) , called Method )  ; }"
3695,"public static void generate Return Code (  String return Type,  Code Visitor cv ) { if  ( return Type . equals ( ""V"" )  )  {     cv . visit Insn ( POP )  ;      cv . visit Insn ( RETURN )  ;  } else if  ( is Primitive ( return Type )  )  {     int opcode = IRETURN ;       String type ;       String meth ;      if  ( return Type . equals ( ""B"" )  )  {         type = ""java/lang/ Byte"" ;          meth = ""byte Value"" ;      } else if  ( return Type . equals ( ""I"" )  )  {         type = ""java/lang/ Integer"" ;          meth = ""int Value"" ;      } else if  ( return Type . equals ( ""Z"" )  )  {         type = ""java/lang/ Boolean"" ;          meth = ""boolean Value"" ;      } else if  ( return Type . equals ( ""D"" )  )  {         opcode = DRETURN ;          type = ""java/lang/ Double"" ;          meth = ""double Value"" ;      } else if  ( return Type . equals ( ""F"" )  )  {         opcode = FRETURN ;          type = ""java/lang/ Float"" ;          meth = ""float Value"" ;      } else if  ( return Type . equals ( ""J"" )  )  {         opcode = LRETURN ;          type = ""java/lang/ Long"" ;          meth = ""long Value"" ;      } else if  ( return Type . equals ( ""C"" )  )  {         type = ""java/lang/ Character"" ;          meth = ""char Value"" ;      } else /*if  ( return Type . equals ( ""S"" )   ) */     {         type = ""java/lang/ Short"" ;          meth = ""short Value"" ;      }      String desc = return Type ;      // type is correct here     cv . visit Type Insn ( CHECKCAST, type )  ;      cv . visit Method Insn ( INVOKEVIRTUAL, type, meth, "" (  ) "" + desc )  ;      cv . visit Insn ( opcode )  ;  } else {     cv . visit Type Insn ( CHECKCAST, descriptor To Class Name ( return Type )  )  ;      cv . visit Insn ( ARETURN )  ;  }}"
3696,public static  Buck Cache Request Type find By Value ( int value ) { switch ( value )  {     case 0:         return UNKNOWN ;      case 100:         return FETCH ;      case 101:         return STORE ;      case 102:         return MULTI_FETCH ;      case 105:         return DELETE_REQUEST ;      case 107:         return CONTAINS ;      case 108:         return MANIFEST_APPEND ;      case 109:         return MANIFEST_FETCH ;      case 110:         return MANIFEST_DELETE ;      case 111:         return MANIFEST_SET ;      default:         return null ;  }}
3697,"public  Todo create Todo ( @ Non Null  Model Factory< Todo> factory ) { return connection . create Model (  Todo_ Schema . INSTANCE, factory )  ; }"
3698,"public void h Align (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . h Align (  )  ; "" )  ; }"
3699,protected void check Key Type (  Type Mirror key Type ) {  Optional< Type Mirror> type To Check = unwrap Listenable Future ( key Type )  ;  if  ( type To Check . is Present (  )  )  {     super . check Key Type ( type To Check . get (  )  )  ;  }}
3700,"public com . anychart . standalones .  Labels Factory padding (  String padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "", wrap Quotes ( padding )  )  )  ;  return this ; }"
3701,public void set Auto Init Enabled ( boolean enable ) { iid . set Fcm Auto Init Enabled ( enable )  ; }
3702,public  String get Object Id (  ) { return this . object Id ; }
3703,public  Media Period Info get Loading Media Period (  ) { return media Period Info Queue . is Empty (  )  ? null : media Period Info Queue . get ( media Period Info Queue . size (  )  - 1 )  ; }
3704,public boolean compute Zoom (  ) { if  ( m Finished )  {     return false ;  } long t RTC =  System Clock . elapsed Realtime (  )  - m Start RTC ;  if  ( t RTC >= m Animation Duration Millis )  {     m Finished = true ;      m Current Zoom = m End Zoom ;      return false ;  } float t = t RTC * 1f / m Animation Duration Millis ;  m Current Zoom = m End Zoom * m Interpolator . get Interpolation ( t )  ;  return true ; }
3705,"public void get Accounts ( @ Non Null final  Load Accounts Callback callback ) { get Accounts Internal ( callback,  Public Api Id . MULTIPLE_ACCOUNT_PCA_GET_ACCOUNTS_WITH_CALLBACK )  ; }"
3706,"public com . anychart . core . ui . scroller .  Thumbs thumbs (  ) { return new com . anychart . core . ui . scroller .  Thumbs ( js Base + "" . thumbs (  ) "" )  ; }"
3707,private void update Node Key Status ( @ Non Null final  Mesh Key mesh Key ) { for  (  Provisioner provisioner : provisioners )  {     for  (  Provisioned Mesh Node node : nodes )  {         if  ( node . get Uuid (  )  . equals Ignore Case ( provisioner . get Provisioner Uuid (  )  )  )  {             if  ( mesh Key instanceof  Network Key )  {                 for  (  Node Key key : node . get Added Net Keys (  )  )  {                     if  ( key . get Index (  )  == mesh Key . get Key Index (  )  )  {                         key . set Updated ( true )  ;                      }                 }             } else {                 for  (  Node Key key : node . get Added App Keys (  )  )  {                     if  ( key . get Index (  )  == mesh Key . get Key Index (  )  )  {                         key . set Updated ( true )  ;                      }                 }             }         }     } }}
3708,"private  List< Provisioner> deserialize Provisioners ( @ Non Null final  Json Deserialization Context context, @ Non Null final  Json Array json, @ Non Null final  String mesh Uuid ) {  List< Provisioner> provisioners = new  Array List<> (  )  ;  final  Json Array json Provisioners = json . get As Json Array (  )  ;  for  ( int i = 0 ;  i < json Provisioners . size (  )  ;  i++ )  {     final  Json Object json Provisioner = json Provisioners . get ( i )  . get As Json Object (  )  ;      final  String name = json Provisioner . get ( ""provisioner Name"" )  . get As String (  )  ;      final  String uuid = json Provisioner . get ( ""UUID"" )  . get As String (  )  . to Upper Case (  )  ;      final  String provisioner Uuid = format Uuid ( uuid )  ;      if  ( provisioner Uuid == null )          throw new  Illegal Argument Exception ( "" Invalid  Mesh  Provisioning/ Configuration "" + "" Database, invalid provisioner uuid . "" )  ;      final  List< Allocated Unicast Range> unicast Ranges = deserialize Allocated Unicast Range ( context, json Provisioner )  ;       List< Allocated Group Range> group Ranges = new  Array List<> (  )  ;      if  ( json Provisioner . has ( ""allocated Group Range"" )  )  {         if  ( !json Provisioner . get ( ""allocated Group Range"" )  . is Json Null (  )  )  {             group Ranges = deserialize Allocated Group Range ( context, json Provisioner )  ;          }     }      List< Allocated Scene Range> scene Ranges = new  Array List<> (  )  ;      if  ( json Provisioner . has ( ""allocated Scene Range"" )  )  {         if  ( !json Provisioner . get ( ""allocated Scene Range"" )  . is Json Null (  )  )  {             scene Ranges = deserialize Allocated Scene Range ( context, json Provisioner )  ;          }     }     final  Provisioner provisioner = new  Provisioner ( provisioner Uuid, unicast Ranges, group Ranges, scene Ranges, mesh Uuid )  ;      provisioner . set Provisioner Name ( name )  ;      provisioners . add ( provisioner )  ;  } return provisioners ; }"
3709,"public com . anychart . charts .  Sunburst hatch Fill ( com . anychart . graphics . vector .  Pattern Fill pattern Hatch Fill ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "",  ( pattern Hatch Fill != null )  ? pattern Hatch Fill . get Js Base (  )  : null )  )  ;  return this ; }"
3710,"public void test1 (  )  throws  Exception{ mock Mvc . perform (  ( post ( ""/fastjsonview/test1"" )  . character Encoding ( ""UTF-8"" )  . content Type (  Media Type . APPLICATION_JSON )  )  )  . and Expect ( status (  )  . is Ok (  )  )  . and Do ( print (  )  )  . and Expect ( content (  )  . string ( ""{\""id\"":100,\""name\"":\""测试\""}"" )  )  ; }"
3711,private void set Id If None Exists (  View view ) { if  ( view . get Id (  )  ==  View . NO_ID )  {     view . set Id ( R . id . view_model_state_saving_id )  ;  }}
3712,"void add Top Level (  String key, J Frame frame ) { if  ( frame != this )  {     toplevels . put ( key, frame )  ;  }}"
3713,public static _ Fields find By Thrift Id ( int field Id ) { switch ( field Id )  {     case // FASTEST_CACHE_HIT_STORE     1:         return FASTEST_CACHE_HIT_STORE ;      case // FASTEST_CACHE_HIT_STORE_ID     2:         return FASTEST_CACHE_HIT_STORE_ID ;      default:         return null ;  }}
3714,"private void resize Buffer (  ) { if  ( buffer == null )  {     buffer = new byte [ DEFAULT_BUFFER_SIZE ]  ;      pos = 0 ;      read Pos = 0 ;  } else {     byte [  ]  b = new byte [ buffer . length * DEFAULT_BUFFER_RESIZE_FACTOR ]  ;       System . arraycopy ( buffer, 0, b, 0, buffer . length )  ;      buffer = b ;  }}"
3715,public  Builder set Config ( com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Builder builder For Value ) { if  ( config Builder_ == null )  {     config_ = builder For Value . build (  )  ;      on Changed (  )  ;  } else {     config Builder_ . set Message ( builder For Value . build (  )  )  ;  } return this ; }
3716,public  Request Creator center Inside (  ) { data . center Inside (  )  ;  return this ; }
3717,"public com . anychart . charts .  Tag Cloud top (  Number top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", top )  )  ;  return this ; }"
3718,public  Activity Info [  ]  get Activities (  ) { return m Activities . values (  )  . to Array ( new  Activity Info [ 0 ]  )  ; }
3719,"public  Test Field Prop Generate String Overloads Option View Model_ value Quantity Res ( @ Plurals Res int plural Res, int quantity,  Object .  .  .  format Args ) { on Mutation (  )  ;  assigned Attributes_epoxy Generated Model . set ( 0 )  ;  value_ String Attribute Data . set Value ( plural Res, quantity, format Args )  ;  return this ; }"
3720,"public com . anychart . core .  Separate Chart get Chart (  ) { return new com . anychart . core .  Separate Chart ( js Base + "" . get Chart (  ) "" )  ; }"
3721,"public com . anychart . charts .  Pie select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3722,protected  String get Super Name (  )  throws  Compile Error{ return  Member Resolver . java To Jvm Name (  Member Resolver . get Superclass ( this Class )  . get Name (  )  )  ; }
3723,"public com . anychart . core . stock . scrollerseries .  Range Spline Area hatch Fill ( com . anychart . graphics . vector . hatchfill .  Hatch Fill Type type,  String color,  Number thickness,  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s, %s, %s, %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null, wrap Quotes ( color ) , thickness, size )  )  ;  return this ; }"
3724,public  Tag get Tag Or Create Default (  ) {  Tag tag = get Tag (  )  ;  if  ( tag == null )  {     return create Default Tag (  )  ;  } return tag ; }
3725,"private void adjust And Map Source Range Range (  Normal Ssa Insn insn ) { int new Reg Start = find Range And Adjust ( insn )  ;   Register Spec List sources = insn . get Sources (  )  ;  int sz Sources = sources . size (  )  ;  int next Rop Reg = new Reg Start ;  for  ( int i = 0 ;  i < sz Sources ;  i++ )  {      Register Spec source = sources . get ( i )  ;      int source Reg = source . get Reg (  )  ;      int category = source . get Category (  )  ;      int cur Rop Reg = next Rop Reg ;      next Rop Reg += category ;      if  ( ssa Regs Mapped . get ( source Reg )  )  {         continue ;      }      Local Item local Item = get Local Item For Reg ( source Reg )  ;      add Mapping ( source, cur Rop Reg )  ;      if  ( local Item != null )  {         mark Reserved ( cur Rop Reg, category )  ;           Array List< Register Spec> similar Registers = local Variables . get ( local Item )  ;          int sz Similar = similar Registers . size (  )  ;          /*              *  Try to map all SSA registers also associated with              * this local .               */         for  ( int j = 0 ;  j < sz Similar ;  j++ )  {              Register Spec similar Spec = similar Registers . get ( j )  ;              int similar Reg = similar Spec . get Reg (  )  ;              //  Don't map anything that's also a source .              if  ( -1 != sources . index Of Register ( similar Reg )  )  {                 continue ;              }             //  Registers left unmapped will get handled later .              try Map Reg ( similar Spec, cur Rop Reg, category )  ;          }     } }}"
3726,"public  Section add Item View ( QMUI Common List Item View item View,  On Click Listener on Click Listener ) { return add Item View ( item View, on Click Listener, null )  ; }"
3727,public  Matrix get Transform Matrix (  ) { return transform ; }
3728,public static  Hash Multiset<E> create (  ) { return new  Hash Multiset<E> (  )  ; }
3729,"private  Attribute source File (  Direct Class File cf, int offset, int length,  Parse Observer observer ) { if  ( length != 2 )  {     throw Bad Length ( 2 )  ;  }  Byte Array bytes = cf . get Bytes (  )  ;   Constant Pool pool = cf . get Constant Pool (  )  ;  int idx = bytes . get Unsigned Short ( offset )  ;   Cst String cst =  (  Cst String )  pool . get ( idx )  ;   Attribute result = new  Att Source File ( cst )  ;  if  ( observer != null )  {     observer . parsed ( bytes, offset, 2, ""source: "" + cst )  ;  } return result ; }"
3730,"public  Loading Cache< Path,  Build File Manifest Cache> get Build File Manifest Caches (  ) { return build File Manifest Cache Per Root ; }"
3731,"public  Array List< String> get Cpu List (  ) {  Array List< String> cpu List = new  Array List< String> (  )  ;  try {     //  Get directory containing CPU info      File dir = new  File ( CPU_DIR_PATH )  ;      //  Filter to only list the devices we care about      File [  ]  files = dir . list Files ( new  Cpu Filter (  )  )  ;      for  ( int i = 0 ;  i < files . length ;  i++ )  {         cpu List . add ( files [ i ]  . get Name (  )  )  ;      }     return cpu List ;  } catch  (  Exception e )  {     e . print Stack Trace (  )  ;      cpu List . add ( ""cpu0"" )  ;      return cpu List ;  }}"
3732,"public boolean contains (  Vector2 point ) { return contains ( point . x, point . y )  ; }"
3733,"public static boolean is Plugin Running (  String plugin Name )  throws  Remote Exception{ if  ( s Running List . is Running ( plugin Name )  )  {     // 当前进程就已经运行了，直接返回     return true ;  } if  ( s Remote == null )  {     // 常驻已挂掉，可以认为先返回 False     if  (  Log Release . LOGR )  {          Log Release . e ( PLUGIN_TAG, ""pmp . ipr: s=null"" )  ;      }     return false ;  } // 去常驻进程查其它进程是否运行 return s Remote . is Plugin Running ( plugin Name, null )  ; }"
3734,"public com . anychart . core . gantt . elements .  Grouping Tasks Element fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
3735,public void set Upload Pack Error Handler (  Upload Pack Error Handler h ) { assert Not Initialized (  )  ;  this . upload Pack Error Handler = h ; }
3736,public void destroy (  ) { destroyed = true ;  if  ( bound )  {     context . unbind Service ( service Connection )  ;      bound = false ;      connected = false ;      on Service Disconnected (  )  ;  }}
3737,"public void test Multi Thread Deserialization (  )  throws  Interrupted Exception{ final  Count Down Latch start Latch = new  Count Down Latch ( 1 )  ;  final  Count Down Latch finished Latch = new  Count Down Latch ( 10 )  ;  final  Atomic Boolean failed = new  Atomic Boolean ( false )  ;   Executor Service executor =  Executors . new Fixed Thread Pool ( 10 )  ;  for  ( int task Count = 0 ;  task Count < 10 ;  task Count++ )  {     executor . execute ( new  Runnable (  )  {         public void run (  )  {             try {                 start Latch . await (  )  ;                  for  ( int i = 0 ;  i < 10 ;  i++ )  {                     gson . from Json ( ""{'a':'hello','b':'world','i':1}"",  My Object . class )  ;                  }             } catch  (  Throwable t )  {                 failed . set ( true )  ;              } finally {                 finished Latch . count Down (  )  ;              }         }     } )  ;  } start Latch . count Down (  )  ;  finished Latch . await (  )  ;  assert False ( failed . get (  )  )  ; }"
3738,"public com . anychart . core . lineargauge . pointers .  Tank hover (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . hover (  )  ; "" )  ;  return this ; }"
3739,"public  List< Usb Device> get Device List ( final  List< Device Filter> filters )  throws  Illegal State Exception{ if  ( destroyed )      throw new  Illegal State Exception ( ""already destroyed"" )  ;  final  Hash Map< String,  Usb Device> device List = m Usb Manager . get Device List (  )  ;  final  List< Usb Device> result = new  Array List< Usb Device> (  )  ;  if  ( device List != null )  {     if  (  ( filters == null )  || filters . is Empty (  )  )  {         result . add All ( device List . values (  )  )  ;      } else {         for  ( final  Usb Device device : device List . values (  )  )  {             for  ( final  Device Filter filter : filters )  {                 if  (  ( filter != null )  && filter . matches ( device )  )  {                     // when filter matches                     if  ( !filter . is Exclude )  {                         result . add ( device )  ;                      }                     break ;                  }             }         }     } } return result ; }"
3740,"private void fits Windows Above LOLLIPOP (  ) { update Bar Config (  )  ;  if  ( check Fits System Windows ( m Decor View . find View By Id ( android . R . id . content )  )  )  {     set Padding ( 0, 0, 0, 0 )  ;      return ;  } int top = 0 ;  if  ( m Bar Params . fits && m Fits Status Bar Type == FLAG_FITS_SYSTEM_WINDOWS )  {     top = m Bar Config . get Status Bar Height (  )  ;  } if  ( m Bar Params . is Support Action Bar )  {     top = m Bar Config . get Status Bar Height (  )  + m Action Bar Height ;  } set Padding ( 0, top, 0, 0 )  ; }"
3741,"public com . anychart . core . axismarkers .  Current Price Indicator falling Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3742,public static  Predicate<T> is Null (  ) { return  Object Predicate . IS_NULL . with Narrowed Type (  )  ; }
3743,public long get Last Modified Time (  ) { return last Modified Instant . to Epoch Milli (  )  ; }
3744,public  Animation Builder with Interruptible ( boolean interruptible ) { this . interruptible = interruptible ;  return this ; }
3745,public void set Last Non Configuration Instance (  Object last Non Configuration Instance ) { this . last Non Configuration Instance = last Non Configuration Instance ; }
3746,static  Uri get External Surround Sound Global Setting Uri (  ) { return device May Set External Surround Sound Global Setting (  )  ?  Global . get Uri For ( EXTERNAL_SURROUND_SOUND_KEY )  : null ; }
3747,"public  Model create Cone ( float width, float height, float depth, int divisions, int primitive Type, final  Material material, final long attributes, float angle From, float angle To ) { begin (  )  ;  part ( ""cone"", primitive Type, attributes, material )  . cone ( width, height, depth, divisions, angle From, angle To )  ;  return end (  )  ; }"
3748,"public void destroy Fixture (  Fixture fixture ) { this . world . destroy Fixture ( this, fixture )  ;  fixture . set User Data ( null )  ;  this . world . fixtures . remove ( fixture . addr )  ;  this . fixtures . remove Value ( fixture, true )  ;  this . world . free Fixtures . free ( fixture )  ; }"
3749,"protected void render (  ) { group Strategy . before Groups (  )  ;  for  (  Sorted Int List .  Node< Array< Decal>> group : group List )  {     group Strategy . before Group ( group . index, group . value )  ;       Shader Program shader = group Strategy . get Group Shader ( group . index )  ;      render ( shader, group . value )  ;      group Strategy . after Group ( group . index )  ;  } group Strategy . after Groups (  )  ; }"
3750,"public com . anychart . core .  State Settings whisker Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . whisker Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3751,"public com . anychart . core . ui .  Outline fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
3752,"private  Host Config Entry Resolver get Host Config Entry Resolver ( @ Non Null  File home Dir, @ Non Null  File ssh Dir ) { return default Host Config Entry Resolver . compute If Absent ( new  Tuple ( new  Object [  ]  { home Dir, ssh Dir } ) ,  t -> new J Git Ssh Config ( create Ssh Config Store ( home Dir, get Ssh Config ( ssh Dir ) , get Local User Name (  )  )  )  )  ; }"
3753,"public  Builder set Redirect Uri ( @ Non Null  Uri redirect Uri ) { m Redirect Uri = check Not Null ( redirect Uri, ""redirect URI cannot be null or empty"" )  ;  return this ; }"
3754,"public final  String get App Version Code (  ) {  String result = null ;  try {     result =  String . value Of ( context . get Package Manager (  )  . get Package Info ( context . get Package Name (  ) , 0 )  . version Code )  ;  } catch  (  Package Manager .  Name Not Found Exception e )  {     if  (  Easy Device Info . debuggable )  {          Log . e (  Easy Device Info . name Of Lib, NAME_NOT_FOUND_EXCEPTION, e )  ;      } } return  Check Validity Util . check Valid Data ( result )  ; }"
3755,"public com . anychart . core . utils .  Quarter left (  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", wrap Quotes ( left )  )  )  ;  return this ; }"
3756,"public void set Anticipate In Animation Time ( @ Int Range ( from = 0 )  long time ) { if  ( DEBUG )       Log . d ( TAG, "" Setting anticipate In Animation Time="" + time )  ;  this . anticipate In Animation Time = time ; }"
3757,"public void reset ( boolean reset Upstream Format ) { metadata Queue . reset ( reset Upstream Format )  ;  clear Allocation Nodes ( first Allocation Node )  ;  first Allocation Node = new  Allocation Node ( 0, allocation Length )  ;  read Allocation Node = first Allocation Node ;  write Allocation Node = first Allocation Node ;  total Bytes Written = 0 ;  allocator . trim (  )  ; }"
3758,public void test Write Pack2 Size Deltas Vs No Deltas (  )  throws  Exception{ config . set Reuse Deltas ( false )  ;  config . set Delta Compress ( false )  ;  test Write Pack2 (  )  ;  final long size Pack2 No Deltas = os . size (  )  ;  tear Down (  )  ;  set Up (  )  ;  test Write Pack2 Deltas Reuse Refs (  )  ;  final long size Pack2 Deltas Refs = os . size (  )  ;  assert True ( size Pack2 No Deltas > size Pack2 Deltas Refs )  ; }
3759,"public void add Pointer (  String [  ]  var_args ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . add Pointer ( %s )  ; "", array To String Wrap Quotes ( var_args )  )  )  ; }"
3760,"public  Immutable Value Graph .  Builder<N, V> put Edge Value (  Endpoint Pair<N> endpoints, V value ) { mutable Value Graph . put Edge Value ( endpoints, value )  ;  return this ; }"
3761,"public com . anychart . charts .  Cartesian3d normal (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . normal ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3762,"public com . anychart . charts .  Mekko legend (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . legend ( %s )  ; "", settings )  )  ;  return this ; }"
3763,"public void test Skip Data Then Read Data Return Data From Skipped Position (  ) { long presentation Time Us1 = 1000000 ;  long presentation Time Us2 = 2000000 ;   Event Message event Message1 = new Event Message With Id ( 1 )  ;   Event Message event Message2 = new Event Message With Id ( 2 )  ;   Event Stream event Stream = new  Event Stream ( SCHEME_ID, VALUE, TIME_SCALE, new long [  ]  { presentation Time Us1, presentation Time Us2 }, new  Event Message [  ]  { event Message1, event Message2 } )  ;   Event Sample Stream sample Stream = new  Event Sample Stream ( event Stream, FORMAT, false )  ;  // first read - read format read Data ( sample Stream )  ;  int skipped = sample Stream . skip Data ( presentation Time Us2 )  ;  int result = read Data ( sample Stream )  ;  assert That ( skipped )  . is Equal To ( 1 )  ;  assert That ( result )  . is Equal To ( C . RESULT_BUFFER_READ )  ;  assert That ( input Buffer . data . array (  )  )  . is Equal To ( get Encoded Message ( event Message2 )  )  ; }"
3764,public  Horizontal Group align ( int align ) { this . align = align ;  return this ; }
3765,"public void test Undamped Spring (  ) { final  Spruce Spring Animation anim = new  Spruce Spring Animation ( m View1,  Spruce Dynamics . Y )  ;  anim . set Spring ( new  Spring Force ( 10 )  . set Damping Ratio ( 0 )  )  ;   Instrumentation Registry . get Instrumentation (  )  . run On Main Sync (  (  )  -> {     //  Expect exception for ending an undamped spring .      try {         anim . skip To End (  )  ;          fail ( "" No exception is thrown when calling skip To End (  )  on an undamped spring"" )  ;      } catch  (  Unsupported Operation Exception ignored )  {     } } )  ; }"
3766,"private static  Optional< Path> parse Buck App Path (  Optional< Path> path ) { if  ( !path . is Present (  )  )  {     return  Optional . empty (  )  ;  }  String string Path = path . get (  )  . to String (  )  . split ( "" . app"" )  [ 0 ]  ;  return  Optional . of (  Paths . get ( string Path . concat ( "" . app"" )  )  )  ; }"
3767,public void set Memory Info (  Activity Manager .  Memory Info memory Info ) { this . memory Info = memory Info ; }
3768,public int get Magic Number (  ) { return this . magic Number ; }
3769,public T remove ( final int id ) { final T n = get ( id )  ;  if  ( n != null )  {     notification Array . remove ( id )  ;      return n ;  } return null ; }
3770,"public final boolean post At Time (  Runnable r,  Object token, long uptime Millis ) { return m Exec . post At Time ( wrap Runnable ( r ) , token, uptime Millis )  ; }"
3771,private static  Track Bundle get Next Fragment Run (  Sparse Array< Track Bundle> track Bundles ) {  Track Bundle next Track Bundle = null ;  long next Track Run Offset =  Long . MAX_VALUE ;  int track Bundles Size = track Bundles . size (  )  ;  for  ( int i = 0 ;  i < track Bundles Size ;  i++ )  {      Track Bundle track Bundle = track Bundles . value At ( i )  ;      if  ( track Bundle . current Track Run Index == track Bundle . fragment . trun Count )  {     //  This track fragment contains no more runs in the next mdat box .      } else {         long trun Offset = track Bundle . fragment . trun Data Position [ track Bundle . current Track Run Index ]  ;          if  ( trun Offset < next Track Run Offset )  {             next Track Bundle = track Bundle ;              next Track Run Offset = trun Offset ;          }     } } return next Track Bundle ; }
3772,"public void start Angle (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . start Angle (  )  ; "" )  ; }"
3773,int get Top (  ) { return get Bounds (  )  . top ; }
3774,"public void min Point Length (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Point Length (  )  ; "" )  ; }"
3775,"protected boolean is Enable Translation Content ( boolean enable, @ Nullable  Refresh Component internal ) { /*      * 2019-12-25 修复 2 . 0 版本之后无默认  Header  Footer 导致的纯滚动模式无效 添加 @ Nullable      */ return enable || m Enable Pure Scroll Mode || internal == null || internal . get Spinner Style (  )  ==  Spinner Style .  Fixed Behind ; }"
3776,"public static boolean put Float (  Context context,  String key, float value ) {  Shared Preferences settings = context . get Shared Preferences ( PREFERENCE_NAME,  Context . MODE_PRIVATE )  ;   Shared Preferences .  Editor editor = settings . edit (  )  ;  editor . put Float ( key, value )  ;  return editor . commit (  )  ; }"
3777,"public boolean is Writeable (  Class<?> type,  Type generic Type,  Annotation [  ]  annotations,  Media Type media Type ) { if  ( !has Matching Media Type ( media Type )  )  {     return false ;  } if  ( !is Assignable From ( type, DEFAULT_UNWRITABLES )  )      return false ;  return is Valid Type ( type, annotations )  ; }"
3778,void eval (  ) { long count = pop Long (  )  ;  // ????  Object obj = stack . remove First (  )  ;  stack . add First ( obj )  ;  stack . add First ( obj )  ; }
3779,"public com . anychart . core . stock . scrollerseries .  Hilo bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
3780,public int get Tx Power (  ) { return m Tx Power ; }
3781,"private void finish Kb Mode ( boolean update Displays ) { m In Kb Mode = false ;  if  ( !m Typed Times . is Empty (  )  )  {     int [  ]  values = get Entered Time ( null )  ;      m Time Picker . set Time ( values [ 0 ] , values [ 1 ]  )  ;      if  ( !m Is24 Hour Mode )  {         m Time Picker . set Am Or Pm ( values [ 2 ]  )  ;      }     m Typed Times . clear (  )  ;  } if  ( update Displays )  {     update Display ( false )  ;      m Time Picker . try Setting Input Enabled ( true )  ;  }}"
3782,"public static void publish Install Async ( final  Context context, final  String application Id ) { // grab the application context ahead of time, since we will return to the caller // immediately .  final  Context application Context = context . get Application Context (  )  ;   Facebook Sdk . get Executor (  )  . execute ( new  Runnable (  )  {     @ Override     public void run (  )  {          Facebook Sdk . publish Install And Wait For Response ( application Context, application Id )  ;      } } )  ;  if  (  Feature Manager . is Enabled (  Feature Manager .  Feature .  On Device Event Processing )  &&  On Device Processing Manager . is On Device Processing Enabled (  )  )  {      On Device Processing Manager . send Install Event Async ( application Id, ATTRIBUTION_PREFERENCES )  ;  }}"
3783,"public com . anychart . charts .  Polar bounds (  Number x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, height )  )  ;  return this ; }"
3784,"public static I Binder get Service (  Context context,  String service Name ) { if  ( DEBUG )  {      Log . d ( TAG, "" [ get Service ]  begin = "" +  System Clock . elapsed Realtime (  )  )  ;  } I Binder service = null ;  /**      * 先考虑本地缓存      */  Soft Reference<I Binder> ref = s Cache . get ( service Name )  ;  if  ( ref != null )  {     service = ref . get (  )  ;      if  ( service != null )  {         if  ( service . is Binder Alive (  )  && service . ping Binder (  )  )  {             if  ( DEBUG )  {                  Log . d ( TAG, "" [ get Service ]   Found service from cache: "" + service Name )  ;                   Log . d ( TAG, "" [ get Service ]  end = "" +  System Clock . elapsed Realtime (  )  )  ;              }             return service ;          } else {             s Cache . remove ( service Name )  ;          }     } } I Service Channel service Channel = get Server Channel ( context )  ;  if  ( service Channel == null )  {     return null ;  } try {     service = service Channel . get Service ( service Name )  ;      if  ( service != null )  {         if  ( DEBUG )  {              Log . d ( TAG, "" [ get Service ]   Found service from remote service channel: "" + service Name )  ;          }         service =  Service Wrapper . factory ( context, service Name, service )  ;          s Cache . put ( service Name, new  Soft Reference<I Binder> ( service )  )  ;      } } catch  (  Remote Exception e )  {     if  ( DEBUG )  {          Log . e ( TAG, "" [ get Service ]   Error when getting service from service channel .  .  . "", e )  ;      } } if  ( DEBUG )  {      Log . d ( TAG, "" [ get Service ]  end = "" +  System Clock . elapsed Realtime (  )  )  ;  } return service ; }"
3785,public final void await Running (  Duration timeout )  throws  Timeout Exception{  Service . super . await Running ( timeout )  ; }
3786,public boolean in Group (  String group ) { return groups . contains ( group )  ; }
3787,"public boolean update Is Optional ( @ Non Null final  Bootstrap bootstrap ) { final  Optional Update optional Update = bootstrap . get Optional Update (  )  ;  return optional Update != null && !history Checker . contains ( optional Update )  && version Checker . show Optional Update ( optional Update, app Version Details )  ; }"
3788,public void show Menu (  ) { m Delegate . show Menu (  )  ; }
3789,"int read In Short Array ( short [  ]  audio Data, int offset In Shorts, int size In Shorts, boolean is Blocking ) { return size In Shorts ; }"
3790,public  Http Request get Original Request (  ) { return original Request ; }
3791,"public static  Crouton make Text (  Activity activity,  Char Sequence text,  Style style,  View Group view Group ) { return new  Crouton ( activity, text, style, view Group )  ; }"
3792,"public com . anychart . scales .  Base scale (  ) { return new com . anychart . scales .  Base ( js Base + "" . scale (  ) "" )  ; }"
3793,"public void verbose (  String format,  Object .  .  .  args ) { verbose ( null, format, args )  ; }"
3794,"public void max Font Size (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Font Size (  )  ; "" )  ; }"
3795,"protected void init (  Attribute Set attrs, int def Style ) { // Init attrs init Attrs ( attrs, def Style )  ; }"
3796,public float get Card Gap (  ) { return m Card Gap ; }
3797,"public com . anychart . charts .  Linear Gauge margin (  String value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
3798,public  String get Descriptor (  ) { return descriptor ; }
3799,"private  Contribution Binding create Delegate Binding (  Delegate Declaration delegate Declaration ) {  Key delegate Key = delegate Declaration . delegate Request (  )  . key (  )  ;  if  ( cycle Stack . contains ( delegate Key )  )  {     return binding Factory . unresolved Delegate Binding ( delegate Declaration )  ;  }  Resolved Bindings resolved Delegate ;  try {     cycle Stack . push ( delegate Key )  ;      resolved Delegate = look Up Bindings ( delegate Key )  ;  } finally {     cycle Stack . pop (  )  ;  } if  ( resolved Delegate . contribution Bindings (  )  . is Empty (  )  )  {     // binding declarations     return binding Factory . unresolved Delegate Binding ( delegate Declaration )  ;  } //  It doesn't matter which of these is selected, since they will later on produce a // duplicate binding error .   Contribution Binding explicit Delegate = resolved Delegate . contribution Bindings (  )  . iterator (  )  . next (  )  ;  return binding Factory . delegate Binding ( delegate Declaration, explicit Delegate )  ; }"
3800,"public  Equals Builder append ( char [  ]  lhs, char [  ]  rhs ) { if  ( is Equals == false )  {     return this ;  } if  ( lhs == rhs )  {     return this ;  } if  ( lhs == null || rhs == null )  {     this . set Equals ( false )  ;      return this ;  } if  ( lhs . length != rhs . length )  {     this . set Equals ( false )  ;      return this ;  } for  ( int i = 0 ;  i < lhs . length && is Equals ;  ++i )  {     append ( lhs [ i ] , rhs [ i ]  )  ;  } return this ; }"
3801,"public void accept (  Modem Visitor modem Visitor ) { if  ( modem Visitor instanceof  Zoom Visitor )  {      (  (  Zoom Visitor )  modem Visitor )  . visit ( this )  ;  } else {     LOGGER . info ( "" Only  Zoom Visitor is allowed to visit  Zoom modem"" )  ;  }}"
3802,"public  String get Codec Description (  ) { final  String Builder result = new  String Builder (  Long . to Hex String ( get Compression Format (  )  )  )  ;   String further Desc = ""  (  Unknown ) "" ;  for  ( final  String [  ]  a CODEC_DESCRIPTIONS : CODEC_DESCRIPTIONS )  {     if  ( a CODEC_DESCRIPTIONS [ 0 ]  . equals Ignore Case ( result . to String (  )  )  )  {         further Desc = a CODEC_DESCRIPTIONS [ 1 ]  ;          break ;      } } if  ( result . length (  )  % 2 == 0 )  {     result . insert ( 0, ""0x"" )  ;  } else {     result . insert ( 0, ""0x0"" )  ;  } result . append ( further Desc )  ;  return result . to String (  )  ; }"
3803,public  This get This (  Interpreter declaring Interpreter ) { return get Non Block Parent (  )  . get This ( declaring Interpreter )  ; }
3804,public  Leaf Atom get Leaf Atom Of Type ( int type ) { int children Size = leaf Children . size (  )  ;  for  ( int i = 0 ;  i < children Size ;  i++ )  {      Leaf Atom atom = leaf Children . get ( i )  ;      if  ( atom . type == type )  {         return atom ;      } } return null ; }
3805,"public com . anychart . core . annotations .  Fibonacci Timezones second X Anchor (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . second X Anchor ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
3806,"public static  Mutable Graph<N> copy Of (  Graph<N> graph ) {  Mutable Graph<N> copy =  Graph Builder . from ( graph )  . expected Node Count ( graph . nodes (  )  . size (  )  )  . build (  )  ;  for  ( N node : graph . nodes (  )  )  {     copy . add Node ( node )  ;  } for  (  Endpoint Pair<N> edge : graph . edges (  )  )  {     copy . put Edge ( edge . node U (  ) , edge . node V (  )  )  ;  } return copy ; }"
3807,"public static  Composed Computation Identifier< Result Type> of (  Class Based Computation Identifier<?> origin Identifier,  Class< Result Type> target Class ) { return  (  Composed Computation Identifier< Result Type> )  INTERNER . intern ( new  Composed Computation Identifier<> ( origin Identifier, target Class )  )  ; }"
3808,"public com . anychart . core . resource .  Activities fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
3809,public void apply State (  ) { if  ( m Locked View != null )  {     if  ( is Locked (  )  )  {         m Locked View . set Visibility (  View . VISIBLE )  ;      } else {         m Locked View . set Visibility (  View . GONE )  ;      } }}
3810,public  Output Stream get Raw Stream (  ) { return buf ; }
3811,"public static  String extract Target Name (  String target ) { return target . substring ( target . last Index Of ( "":"" )  + 1 )  ; }"
3812,"public  Test After Bind Props View Model_ on Bind (  On Model Bound Listener< Test After Bind Props View Model_,  Test After Bind Props View> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
3813,public  Bundle get Next Add Account Options (  ) { if  ( add Account Options List . is Empty (  )  )  {     return null ;  } else {     return add Account Options List . remove ( 0 )  ;  }}
3814,public boolean get Name Only (  ) { return ! ( matcher instanceof  Path Matcher )  ; }
3815,public int get Line Number (  ) { return line Number (  )  ; }
3816,public void set Use Empty View ( boolean use Empty View ) { this . use Empty View = use Empty View ; }
3817,"public static  Typeface capture It2 (  Context context ) { return  Font Source Processor . process ( R . raw . capture_it_2, context )  ; }"
3818,"public boolean perform Accessibility Action ( int action,  Bundle arguments ) { if  ( action !=  Accessibility Node Info . ACTION_SCROLL_FORWARD && action !=  Accessibility Node Info . ACTION_SCROLL_BACKWARD )  {     return super . perform Accessibility Action ( action, arguments )  ;  } //  Figure out what month is showing .  int first Visible Position = get First Visible Position (  )  ;  int month = first Visible Position % 12 ;  int year = first Visible Position / 12 + m Controller . get Min Year (  )  ;   Calendar Day day = new  Calendar Day ( year, month, 1 )  ;  //  Scroll either forward or backward one month .  if  ( action ==  Accessibility Node Info . ACTION_SCROLL_FORWARD )  {     day . month++ ;      if  ( day . month == 12 )  {         day . month = 0 ;          day . year++ ;      } } else if  ( action ==  Accessibility Node Info . ACTION_SCROLL_BACKWARD )  {      View first Visible View = get Child At ( 0 )  ;      // to the first day of first visible month .      if  ( first Visible View != null && first Visible View . get Top (  )  >= -1 )  {         //  There's an off-by-one somewhere, so the top of the first visible item will         // actually be -1 when it's at the exact top .          day . month-- ;          if  ( day . month == -1 )  {             day . month = 11 ;              day . year-- ;          }     } } //  Go to that month .   Date Time Picker Utils . try Accessibility Announce ( this, get Month And Year String ( day )  )  ;  go To ( day, true, false, true )  ;  m Performing Scroll = true ;  return true ; }"
3819,protected void free ( byte [  ]  value ) {  Preconditions . check Not Null ( value )  ; // do nothing .   Let the GC take care of this}
3820,"public com . anychart . charts .  Tag Cloud padding (  String value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
3821,"public  Map< String,  String> _get Replace Application Attribute (  ) {  Map< String,  String> replace Attr Map = new  Hash Map< String,  String> (  )  ;  // Let's start by determining if there is a replace property if  ( application Properties . contains Key ( ""tools:replace"" )  )  {      String replace Attrs = application Properties . get ( ""tools:replace"" )  ;       String [  ]  attrs =  String Utils . split ( replace Attrs, "","" )  ;      if  ( null != attrs && attrs . length > 0 )  {         for  (  String attr : attrs )  {              String value = application Properties . get ( attr )  ;              if  ( null == value )  {                 value = application Properties . get ( ""android:"" + attr )  ;              }             if  ( null != value )  {                 replace Attr Map . put ( attr, value )  ;              }         }     } } return replace Attr Map ; }"
3822,"public com . anychart . core . cartesian . series .  Bar3d x Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
3823,public int get Element Address (  ) { return element Address ; }
3824,"private static final boolean get Attribute Boolean ( final  Context context, final  Xml Pull Parser parser, final  String namespace, final  String name, final boolean default Value ) { boolean result = default Value ;  try {      String v = parser . get Attribute Value ( namespace, name )  ;      if  ( ""TRUE"" . equals Ignore Case ( v )  )  {         result = true ;      } else if  ( ""FALSE"" . equals Ignore Case ( v )  )  {         result = false ;      } else if  ( ! Text Utils . is Empty ( v )  && v . starts With ( ""@"" )  )  {         final  String r = v . substring ( 1 )  ;          final int res Id = context . get Resources (  )  . get Identifier ( r, null, context . get Package Name (  )  )  ;          if  ( res Id > 0 )  {             result = context . get Resources (  )  . get Boolean ( res Id )  ;          }     } else {         int radix = 10 ;          if  ( v != null && v . length (  )  > 2 && v . char At ( 0 )  == '0' &&  ( v . char At ( 1 )  == 'x' || v . char At ( 1 )  == 'X' )  )  {             // allow hex values starting with 0x or 0 X             radix = 16 ;              v = v . substring ( 2 )  ;          }         final int val =  Integer . parse Int ( v, radix )  ;          result = val != 0 ;      } } catch  ( final  Not Found Exception e )  {     result = default Value ;  } catch  ( final  Number Format Exception e )  {     result = default Value ;  } catch  ( final  Null Pointer Exception e )  {     result = default Value ;  } return result ; }"
3825,"public  Color lerp ( final  Color target, final float t ) { this . r += t *  ( target . r - this . r )  ;  this . g += t *  ( target . g - this . g )  ;  this . b += t *  ( target . b - this . b )  ;  this . a += t *  ( target . a - this . a )  ;  return clamp (  )  ; }"
3826,public float get Y Labels Angle (  ) { return m Y Labels Angle ; }
3827,"public void add Tree Model Listener (  Tree Model Listener l ) { listener List . add (  Tree Model Listener . class, l )  ; }"
3828,"private static  Iterable< String> expand File (  String arg,  Immutable Map< Cell Name,  Abs Path> cell Mapping ) {  Buck Cell Arg argfile =  Buck Cell Arg . of ( arg )  ;   String [  ]  parts = argfile . get Arg (  )  . split ( ""#"", 2 )  ;   String unresolved Args Path = parts [ 0 ]  ;   Abs Path project Root ;  //  Try to resolve the name to a path if present if  ( argfile . get Cell Name (  )  . is Present (  )  )  {     project Root = cell Mapping . get (  Cell Name . of ( argfile . get Cell Name (  )  . get (  )  )  )  ;      if  ( project Root == null )  {          String cell Name = argfile . get Cell Name (  )  . get (  )  ;          throw new  Human Readable Exception (  String . format ( "" The cell '%s' was not found .   Did you mean '%s/%s'?"", cell Name, cell Name, unresolved Args Path )  )  ;      } } else {     project Root = cell Mapping . get (  Cell Name . ROOT_CELL_NAME )  ;  }  Objects . require Non Null ( project Root, "" Project root not resolved"" )  ;   Abs Path args Path = project Root . resolve (  Paths . get ( unresolved Args Path )  )  ;  if  ( ! Files . exists ( args Path . get Path (  )  )  )  {     throw new  Human Readable Exception ( "" The file "" + unresolved Args Path + "" can't be found .   Please make sure the path exists relative to the "" + ""project root . "" )  ;  }  Optional< String> flavors = parts . length == 2 ?  Optional . of ( parts [ 1 ]  )  :  Optional . empty (  )  ;  try {     return get Args From Path ( args Path, flavors )  ;  } catch  ( IO Exception e )  {     throw new  Human Readable Exception ( e, "" Could not read options from "" + arg )  ;  }}"
3829,"public com . anychart . core . annotations .  Infinite Line width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
3830,"public void test Remove Root View (  ) { final  React Root View root View = m React Native Rule . get View (  )  ;  assert That ( root View . get Child Count (  )  )  . is Equal To ( 1 )  ;   Instrumentation instrumentation =  Instrumentation Registry . get Instrumentation (  )  ;  instrumentation . run On Main Sync ( new  Runnable (  )  {     @ Override     public void run (  )  {          View Group parent =  (  View Group )  root View . get Parent (  )  ;          parent . remove View ( root View )  ;          // removing from parent should not remove child views, child views should be removed as         // an effect of native call to UI Manager . remove Root View         assert That ( root View . get Child Count (  )  )  . is Equal To ( 1 )  ;      } } )  ;  instrumentation . wait For Idle Sync (  )  ;  m React Native Rule . wait For Idle Sync (  )  ;  assert That ( m Recording Module . get Calls (  )  . size (  )  )  . is Equal To ( 0 )  . overriding Error Message ( ""root component should not be automatically unmounted"" )  ;  assert That ( root View . get Child Count (  )  )  . is Equal To ( 1 )  ;  instrumentation . run On Main Sync ( new  Runnable (  )  {     @ Override     public void run (  )  {         root View . unmount React Application (  )  ;      } } )  ;  m React Native Rule . wait For Idle Sync (  )  ;  assert That ( m Recording Module . get Calls (  )  . size (  )  )  . is Equal To ( 1 )  ;  assert That ( m Recording Module . get Calls (  )  . get ( 0 )  )  . is Equal To ( "" Root Component Will Unmount"" )  ;  assert That ( root View . get Child Count (  )  )  . is Equal To ( 0 )  ; }"
3831,"public void is Empty (  ) { if  ( actual == null )  {     fail With Actual ( simple Fact ( ""expected empty optional"" )  )  ;  } else if  ( actual . is Present (  )  )  {     fail Without Actual ( simple Fact ( ""expected to be empty"" ) , fact ( ""but was present with value"", actual . get As Long (  )  )  )  ;  }}"
3832,"public void draw Rosetta Code Line ( int x1, int y1, int x2, int y2 ) { pixmap . set Color (  Color . GREEN )  ;  int d = 0 ;  int dx =  Math . abs ( x2 - x1 )  ;  int dy =  Math . abs ( y2 - y1 )  ;  // slope scaling factors to int dx2 = 2 * dx ;  // avoid floating point int dy2 = 2 * dy ;  // increment direction int ix = x1 < x2 ? 1 : -1 ;  int iy = y1 < y2 ? 1 : -1 ;  int x = x1 ;  int y = y1 ;  if  ( dx >= dy )  {     while  ( true )  {         pixmap . draw Pixel ( x, y )  ;          if  ( x == x2 )              break ;          x += ix ;          d += dy2 ;          if  ( d > dx )  {             y += iy ;              d -= dx2 ;          }     } } else {     while  ( true )  {         pixmap . draw Pixel ( x, y )  ;          if  ( y == y2 )              break ;          y += iy ;          d += dx2 ;          if  ( d > dy )  {             x += ix ;              d -= dy2 ;          }     } }}"
3833,public void init (  ) {}
3834,"private void layout With Gravity Center Horizontal ( int parent Width ) { int next Child Index = 0 ;  int next Child Position X ;  int next Child Position Y = get Padding Top (  )  ;  int line Height = 0 ;  int layout Child Count = 0 ;  int layout Child Each Line = 0 ;  // 遍历每一行 for  ( int i = 0 ;  i < m Item Number In Each Line . length ;  i++ )  {     // 如果这一行已经没item了，则退出循环     if  ( m Item Number In Each Line [ i ]  == 0 )  {         break ;      }     // 遍历该行内的元素，布局每个元素     // 子  View 的最小 x 值     next Child Position X =  ( parent Width - get Padding Left (  )  - get Padding Right (  )  - m Width Sum In Each Line [ i ]  )  / 2 + get Padding Left (  )  ;      while  ( layout Child Each Line < m Item Number In Each Line [ i ]  )  {         final  View child View = get Child At ( next Child Index )  ;          if  ( child View . get Visibility (  )  == GONE )  {             next Child Index++ ;              continue ;          }         final int childw = child View . get Measured Width (  )  ;          final int childh = child View . get Measured Height (  )  ;          child View . layout ( next Child Position X, next Child Position Y, next Child Position X + childw, next Child Position Y + childh )  ;          line Height =  Math . max ( line Height, childh )  ;          next Child Position X += childw + m Child Horizontal Spacing ;          layout Child Count++ ;          layout Child Each Line++ ;          next Child Index++ ;          if  ( layout Child Count == measured Child Count )  {             break ;          }     }     if  ( layout Child Count == measured Child Count )  {         break ;      }     // 一行结束了，整理一下，准备下一行     next Child Position Y +=  ( line Height + m Child Vertical Spacing )  ;      line Height = 0 ;      layout Child Each Line = 0 ;  } int child Count = get Child Count (  )  ;  for  ( int i = next Child Index ;  i < child Count ;  i++ )  {     final  View child View = get Child At ( i )  ;      if  ( child View . get Visibility (  )  ==  View . GONE )  {         continue ;      }     child View . layout ( 0, 0, 0, 0 )  ;  }}"
3835,public boolean is Reuse Delta Commits (  ) { return reuse Delta Commits ; }
3836,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
3837,"public  Rev Commit try Fast Forward (  Rev Commit new Commit )  throws IO Exception,  Git API Exception{  Ref head = get Head (  )  ;   Object Id head Id = head . get Object Id (  )  ;  if  ( head Id == null )      throw new  Ref Not Found Exception (  Message Format . format ( J Git Text . get (  )  . ref Not Resolved,  Constants . HEAD )  )  ;   Rev Commit head Commit = walk . lookup Commit ( head Id )  ;  if  ( walk . is Merged Into ( new Commit, head Commit )  )      return new Commit ;   String head Name = get Head Name ( head )  ;  return try Fast Forward ( head Name, head Commit, new Commit )  ; }"
3838,public  Scheduled Queue get Scheduled Queue (  ) { return scheduled Queue ; }
3839,"private void set Bottom Adapter (  ) {  Animation Adapter anim Card Array Adapter = new  Swing Bottom In Animation Adapter ( m Card Array Adapter )  ;  anim Card Array Adapter . set Abs List View ( m List View )  ;  m List View . set External Adapter ( anim Card Array Adapter, m Card Array Adapter )  ; }"
3840,public void validate (  ) { validate Structure ( m_root )  ;  validate Metrics ( m_root )  ;  int free Count = 0 ;   Dynamic Tree Node free Node = m_free List != NULL_NODE ? m_nodes [ m_free List ]  : null ;  while  ( free Node != null )  {     assert  ( 0 <= free Node . id && free Node . id < m_node Capacity )  ;      assert  ( free Node == m_nodes [ free Node . id ]  )  ;      free Node = free Node . parent ;      ++free Count ;  } assert  ( get Height (  )  == compute Height (  )  )  ;  assert  ( m_node Count + free Count == m_node Capacity )  ; }
3841,public  Builder optional Parameters (  Immutable List< Method Param Model> optional Parameters ) { this . optional Parameters = optional Parameters ;  return this ; }
3842,"public com . anychart . standalones .  Project Timeline row Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
3843,"public void get Stat ( com . anychart . enums .  Statistics key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Stat ( %s )  ; "",  ( key != null )  ? key . get Js Base (  )  : null )  )  ; }"
3844,"public com . anychart . charts .  Heat Map x Scroller (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scroller ( %s )  ; "", settings )  )  ;  return this ; }"
3845,"public  Immersion Bar flyme OS Status Bar Font Color ( @ Color Res int flyme OS Status Bar Font Color ) { m Bar Params . flyme OS Status Bar Font Color =  Context Compat . get Color ( m Activity, flyme OS Status Bar Font Color )  ;  m Bar Params . flyme OS Status Bar Font Temp Color = m Bar Params . flyme OS Status Bar Font Color ;  return this ; }"
3846,"public void reset (  ) { //  Will clear distinct_ids, super Properties, notifications, experiments, // and waiting  People  Analytics properties .   Will have no effect // on messages already queued to send with  Analytics Messages .  m Persistent Identity . clear Preferences (  )  ;  get Analytics Messages (  )  . clear Anonymous Updates Message ( new  Analytics Messages .  Mixpanel Description ( m Token )  )  ;  identify ( get Distinct Id (  ) , false )  ;  m Connect Integrations . reset (  )  ;  m Updates From Mixpanel . store Variants ( new JSON Array (  )  )  ;  m Updates From Mixpanel . apply Persisted Updates (  )  ;  flush (  )  ; }"
3847,public long get Reachability Check Duration (  ) { return statistics . reachability Check Duration ; }
3848,"Client Call< Req T,  Resp T> run Bidi Streaming Rpc (  Method Descriptor< Req T,  Resp T> method,  Incoming Stream Observer< Resp T> observer ) {  Client Call< Req T,  Resp T> [  ]  call =  (  Client Call< Req T,  Resp T> [  ]  )  new  Client Call [  ]  { null } ;   Task< Client Call< Req T,  Resp T>> client Call = call Provider . create Client Call ( method )  ;  client Call . add On Complete Listener ( async Queue . get Executor (  ) ,  result -> {     call [ 0 ]  = result . get Result (  )  ;      call [ 0 ]  . start ( new  Client Call .  Listener< Resp T> (  )  {         @ Override         public void on Headers (  Metadata headers )  {             try {                 observer . on Headers ( headers )  ;              } catch  (  Throwable t )  {                 async Queue . panic ( t )  ;              }         }         @ Override         public void on Message (  Resp T message )  {             try {                 observer . on Next ( message )  ;                  call [ 0 ]  . request ( 1 )  ;              } catch  (  Throwable t )  {                 async Queue . panic ( t )  ;              }         }         @ Override         public void on Close (  Status status,  Metadata trailers )  {             try {                 observer . on Close ( status )  ;              } catch  (  Throwable t )  {                 async Queue . panic ( t )  ;              }         }         @ Override         public void on Ready (  )  {         }     }, request Headers (  )  )  ;      observer . on Open (  )  ;      call [ 0 ]  . request ( 1 )  ;  } )  ;  return new  Forwarding Client Call< Req T,  Resp T> (  )  {     @ Override     protected  Client Call< Req T,  Resp T> delegate (  )  {         hard Assert ( call [ 0 ]  != null, "" Client Call used before on Open (  )  callback"" )  ;          return call [ 0 ]  ;      }     @ Override     public void half Close (  )  {         // calls `disable Network (  ) ` immediately after client startup .          if  ( call [ 0 ]  == null )  {             client Call . add On Success Listener ( async Queue . get Executor (  ) ,  Client Call::half Close )  ;          } else {             super . half Close (  )  ;          }     } } ; }"
3849,"public void replace Existing Non Root View ( int old Tag, int new Tag ) { if  ( m Shadow Node Registry . is Root Node ( old Tag )  || m Shadow Node Registry . is Root Node ( new Tag )  )  {     throw new  Illegal View Operation Exception ( "" Trying to add or replace a root tag!"" )  ;  }  React Shadow Node old Node = m Shadow Node Registry . get Node ( old Tag )  ;  if  ( old Node == null )  {     throw new  Illegal View Operation Exception ( "" Trying to replace unknown view tag: "" + old Tag )  ;  }  React Shadow Node parent = old Node . get Parent (  )  ;  if  ( parent == null )  {     throw new  Illegal View Operation Exception ( "" Node is not attached to a parent: "" + old Tag )  ;  } int old Index = parent . index Of ( old Node )  ;  if  ( old Index < 0 )  {     throw new  Illegal State Exception ( "" Didn't find child tag in parent"" )  ;  }  Writable Array tags To Add =  Arguments . create Array (  )  ;  tags To Add . push Int ( new Tag )  ;   Writable Array add At Indices =  Arguments . create Array (  )  ;  add At Indices . push Int ( old Index )  ;   Writable Array indices To Remove =  Arguments . create Array (  )  ;  indices To Remove . push Int ( old Index )  ;  manage Children ( parent . get React Tag (  ) , null, null, tags To Add, add At Indices, indices To Remove )  ; }"
3850,"public void min Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Fill (  )  ; "" )  ; }"
3851,"protected final void set Added App Key Index ( final int index ) { if  ( ! Mesh Parser Utils . is Node Key Exists ( m Added App Keys, index )  )  {     this . m Added App Keys . add ( new  Node Key ( index )  )  ;  }}"
3852,"public com . anychart . core . ui .  Label label (  Number index ) { return new com . anychart . core . ui .  Label (  String . format (  Locale . US, js Base + "" . label ( %s ) "", index )  )  ; }"
3853,"final  Access Message create Mesh Message ( final int src, final int dst, @ Nullable final  Integer ttl, final byte [  ]  key, final int akf, final int aid, final int aszmic, final int access Op Code, final byte [  ]  access Message Parameters ) { final  Provisioned Mesh Node node = m Upper Transport Layer Callbacks . get Node ( src )  ;  final int sequence Number = node . increment Sequence Number (  )  ;  final byte [  ]  sequence Num =  Mesh Parser Utils . get Sequence Number Bytes ( sequence Number )  ;   Log . v ( TAG, "" Src address: "" +  Mesh Address . format Address ( src, false )  )  ;   Log . v ( TAG, "" Dst address: "" +  Mesh Address . format Address ( dst, false )  )  ;   Log . v ( TAG, "" Key: "" +  Mesh Parser Utils . bytes To Hex ( key, false )  )  ;   Log . v ( TAG, ""akf: "" + akf )  ;   Log . v ( TAG, ""aid: "" + aid )  ;   Log . v ( TAG, ""aszmic: "" + aszmic )  ;   Log . v ( TAG, "" Sequence number: "" + sequence Number )  ;   Log . v ( TAG, "" Access message opcode: "" +  Integer . to Hex String ( access Op Code )  )  ;   Log . v ( TAG, "" Access message parameters: "" +  Mesh Parser Utils . bytes To Hex ( access Message Parameters, false )  )  ;  final  Access Message message = new  Access Message (  )  ;  message . set Src ( src )  ;  message . set Dst ( dst )  ;  message . set Ttl ( ttl == null ? node . get Ttl (  )  : ttl )  ;  message . set Iv Index ( m Upper Transport Layer Callbacks . get Iv Index (  )  )  ;  message . set Sequence Number ( sequence Num )  ;  message . set Device Key ( key )  ;  message . set Akf ( akf )  ;  message . set Aid ( aid )  ;  message . set Aszmic ( aszmic )  ;  message . set Op Code ( access Op Code )  ;  message . set Parameters ( access Message Parameters )  ;  message . set Pdu Type (  Mesh Manager Api . PDU_TYPE_NETWORK )  ;  super . create Mesh Message ( message )  ;  return message ; }"
3854,public  Hash Code Builder append Super ( int super Hash Code ) { i Total = i Total * i Constant + super Hash Code ;  return this ; }
3855,"public static  File get Cache File (  File cache Dir, int id, long position, long timestamp ) { return new  File ( cache Dir, id + "" . "" + position + "" . "" + timestamp + SUFFIX )  ; }"
3856,"public void unselect (  Number [  ]  index Or Indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unselect ( %s )  ; "",  Arrays . to String ( index Or Indexes )  )  )  ; }"
3857,"public void add ( int priority ) { synchronized  ( lock )  {     queue . add ( priority )  ;      highest Priority =  Math . max ( highest Priority, priority )  ;  }}"
3858,"private void check And Handle First Visible Cell Change (  ) { if  ( m Hover Drawable == null || m Adapter == null || m Current First Visible Item >= m Previous First Visible Item )  {     return ;  } int position = get Position For Id ( m Mobile Item Id )  ;  if  ( position ==  Adapter View . INVALID_POSITION )  {     return ;  } long switch Item Id = position - 1 - m Wrapper . get Header Views Count (  )  >= 0 ? m Adapter . get Item Id ( position - 1 - m Wrapper . get Header Views Count (  )  )  : INVALID_ID ;   View switch View = get View For Id ( switch Item Id )  ;  if  ( switch View != null )  {     switch Views ( switch View, switch Item Id, -switch View . get Height (  )  )  ;  }}"
3859,"public com . anychart . standalones .  Data Grid max Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", width )  )  ;  return this ; }"
3860,"public void set Config Settings Without Waiting On Disk Write (  Firebase Remote Config Settings settings ) { synchronized  ( frc Info Lock )  {     frc Metadata . edit (  )  . put Long ( FETCH_TIMEOUT_IN_SECONDS_KEY, settings . get Fetch Timeout In Seconds (  )  )  . put Long ( MINIMUM_FETCH_INTERVAL_IN_SECONDS_KEY, settings . get Minimum Fetch Interval In Seconds (  )  )  . apply (  )  ;  }}"
3861,public  Buck Cell with Build File Name (  String build File Name ) {  Buck Cell copy = copy (  )  ;  copy . set Build File Name ( build File Name )  ;  return copy ; }
3862,"public com . anychart . charts .  Waterfall labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
3863,"public com . anychart . core .  State Settings normal (  ) { return new com . anychart . core .  State Settings ( js Base + "" . normal (  ) "" )  ; }"
3864,"public boolean boolean Value Of (  Object node )  throws  Jaxen Exception{  Context context = get Context ( node )  ;   List result = select Nodes For Context ( context )  ;  if  ( result == null )      return false ;  return  Boolean Function . evaluate ( result, context . get Navigator (  )  )  . boolean Value (  )  ; }"
3865,public  On Click Card Header Other Button Listener get Other Button Click Listener (  ) { return m Other Button Click Listener ; }
3866,"public void test Create With Initial Text (  ) { activity Test Rule . launch Activity ( new  Intent (  )  . put Extra ( EXTRA_TEXT, ""gist content"" )  )  ;  on View ( with Id ( id . create_gist )  )  . check (  View Assertions . matches ( is Enabled (  )  )  )  ;  on View ( with Id ( id . et_gist_content )  )  . check (  View Assertions . matches ( with Text ( ""gist content"" )  )  )  ; }"
3867,public static void internal Initialize Background Thread Scheduler (  ) { background Scheduler =  Robo Settings . is Use Global Scheduler (  )  ?  Runtime Environment . get Master Scheduler (  )  : new  Scheduler (  )  ; }
3868,"public void x Point Position (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . x Point Position (  )  ; "" )  ; }"
3869,"public  Vector2 get Linear Velocity (  ) { jni Get Linear Velocity ( addr, tmp )  ;  linear Velocity . x = tmp [ 0 ]  ;  linear Velocity . y = tmp [ 1 ]  ;  return linear Velocity ; }"
3870,public void set Circle Hole Color ( int color ) { m Circle Hole Color = color ; }
3871,"public static  Typed Value get Value (  String attribute,  String value, boolean require Unit ) { if  ( parse Float Attribute ( attribute, value, m Value, require Unit )  )  {     return m Value ;  } return null ; }"
3872,"synchronized void acquire (  ) { if  ( is Recycled )  {     throw new  Illegal State Exception ( "" Cannot acquire a recycled resource"" )  ;  } ++acquired ; }"
3873,public byte get Revision (  ) { return REVISION ; }
3874,public int get Times Rebooted (  ) { return reboot Reasons . size (  )  ; }
3875,public synchronized void unbind Custom Tabs Service (  ) { if  ( null != m Custom Tabs Service Connection && m Custom Tabs Service Connection . get Custom Tabs Service Is Bound (  )  )  {     m Parent Activity . unbind Service ( m Custom Tabs Service Connection )  ;      m Custom Tabs Service Connection . unbind Custom Tabs Service (  )  ;  }}
3876,public void set Signal Strength (  Signal Strength signal Strength ) { this . signal Strength = signal Strength ;  for  (  Phone State Listener listener : get Listeners For Flags (  Phone State Listener . LISTEN_SIGNAL_STRENGTHS )  )  {     listener . on Signal Strengths Changed ( signal Strength )  ;  }}
3877,public int get Progress Bar Id (  ) { return progress Bar Id ; }
3878,"public com . anychart . core . annotations .  Fibonacci Retracement width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
3879,public boolean remove On Tutorial Page Change Listener ( @ Non Null  On Tutorial Page Change Listener listener ) { return m Tutorial . remove On Tutorial Page Change Listener ( listener )  ; }
3880,"public static void is True ( final boolean expression, final  String message, final  Object .  .  .  values ) { if  ( expression == false )  {     throw new  Illegal Argument Exception (  String . format ( message, values )  )  ;  }}"
3881,"public com . anychart . core .  Series Base bounds (  String x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
3882,private void disconnect All (  ) {  Terminal Bridge [  ]  bridges Array = null ;  if  ( bridges . size (  )  > 0 )  {     bridges Array = bridges . to Array ( new  Terminal Bridge [ bridges . size (  )  ]  )  ;  } if  ( bridges Array != null )  {     // disconnect and dispose of any existing bridges     for  (  Terminal Bridge bridge : bridges Array )  {         bridge . dispatch Disconnect ( true )  ;      } }}
3883,"public void remove Element ( int index ) { int last = size - 1 ;  //  Swap for  (  Channel stride Array : arrays )  {     stride Array . swap ( index, last )  ;  } size = last ; }"
3884,"public static  Pack Bitmap Index read (  Input Stream fd,  Pack Index pack Index,  Pack Reverse Index reverse Index )  throws IO Exception{ return new  Pack Bitmap Index V1 ( fd, pack Index, reverse Index )  ; }"
3885,"public void test Title Resource (  ) {  Bundle data = new  Bundle (  )  ;  data . remove ( KEY_TITLE )  ;  data . put String ( KEY_TITLE + TEXT_RESOURCE_SUFFIX, ""gcm_no_args"" )  ;  assert True ( new  Display Notification ( context, new  Notification Params ( data ) , executor )  . handle Notification (  )  )  ;   Notification n = get Single Notification (  )  ;  assert Equals ( string Resource ( R . string . gcm_no_args ) , shadow Of ( n )  . get Content Title (  )  . to String (  )  )  ; }"
3886,"public static synchronized void sdk Initialize (  Context application Context, int callback Request Code Offset, final  Initialize Callback callback ) { if  ( sdk Initialized . get (  )  && callback Request Code Offset !=  Facebook Sdk . callback Request Code Offset )  {     throw new  Facebook Exception ( CALLBACK_OFFSET_CHANGED_AFTER_INIT )  ;  } if  ( callback Request Code Offset < 0 )  {     throw new  Facebook Exception ( CALLBACK_OFFSET_NEGATIVE )  ;  }  Facebook Sdk . callback Request Code Offset = callback Request Code Offset ;  sdk Initialize ( application Context, callback )  ; }"
3887,public static  Writer as Writer (  Appendable target ) { if  ( target instanceof  Writer )  {     return  (  Writer )  target ;  } return new  Appendable Writer ( target )  ; }
3888,public void set Placeholder Image ( int resource Id ) { set Placeholder Image ( m Resources . get Drawable ( resource Id )  )  ; }
3889,"public static int compare ( int [  ]  a, int [  ]  b ) { for  ( int i = 0 ;  i < a . length && i < b . length ;  i++ )  {     int cmp = a [ i ]  - b [ i ]  ;      if  ( cmp != 0 )          return cmp ;  } return a . length - b . length ; }"
3890,public static  View get Parent View Holder Item View ( @ Nullable  View view ) {  Recycler View rv = get Parent Recycler View ( view )  ;  if  ( rv == null )  {     return null ;  } return rv . find Containing Item View ( view )  ; }
3891,"public static final UVC Camera Handler create Handler ( final  Activity parent, final  Camera View Interface camera View, final int encoder Type, final int width, final int height, final int format ) { return create Handler ( parent, camera View, encoder Type, width, height, format, UVC Camera . DEFAULT_BANDWIDTH )  ; }"
3892,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
3893,public void set Pattern (  List< Pattern Item> pattern ) { m Polyline Options . pattern ( pattern )  ;  style Changed (  )  ; }
3894,"private  Method Spec bind Subcomponent Factory (  Class Name unscoped Component Factory ) { return  Method Spec . method Builder ( UPPER_CAMEL . to ( LOWER_CAMEL, grpc Service Model . service Definition Type Factory Name . simple Name (  )  )  )  . add Annotation (  Dagger . binds (  )  )  . add Modifiers ( ABSTRACT )  . returns ( grpc Service Model . service Definition Type Factory Name )  . add Parameter ( unscoped Component Factory, ""factory"" )  . build (  )  ; }"
3895,public int get Expiration Buffer (  ) { return com . microsoft . identity . common . adal . internal .  Authentication Settings . INSTANCE . get Expiration Buffer (  )  ; }
3896,public int get Max Connections (  ) { return max Connections ; }
3897,"public static void logw (  String message ) {  Log . w ( TAG, message )  ; }"
3898,"void test Null Task With Null Callback (  )  throws  Exception{ assert Timeout ( of Millis ( 3000 ) ,  (  )  -> {     //  Instantiate a new executor and start a new 'null' task  .  .  .      final var executor = new  Thread Async Executor (  )  ;      final var async Result = executor . start Process ( null, null )  ;      assert Not Null ( async Result, "" The  Async Result should not be 'null', even though the task and callback were 'null' . "" )  ;      //  Prevent timing issues, and wait until the result is available     async Result . await (  )  ;      assert True ( async Result . is Completed (  )  )  ;      try {         async Result . get Value (  )  ;          fail ( "" Expected  Execution Exception with NPE as cause"" )  ;      } catch  ( final  Execution Exception e )  {         assert Not Null ( e . get Message (  )  )  ;          assert Not Null ( e . get Cause (  )  )  ;          assert Equals (  Null Pointer Exception . class, e . get Cause (  )  . get Class (  )  )  ;      } } )  ; }"
3899,"private  Authentication Result try MRRT (  )  throws  Authentication Exception{ final  String method Name = "":try MRRT"" ;  //  Try to get it from cache try {     m Mrrt Token Cache Item = m Token Cache Accessor . get MRRT Item ( m Auth Request . get Client Id (  ) , m Auth Request . get User From Request (  )  )  ;  } catch  ( final  Malformed URL Exception ex )  {     throw new  Authentication Exception ( ADAL Error . DEVELOPER_AUTHORITY_IS_NOT_VALID_URL, ex . get Message (  ) , ex )  ;  } // MRRT does not exist, try with FRT .  if  ( m Mrrt Token Cache Item == null )  {      Logger . v ( TAG + method Name, ""MRRT token does not exist, try with FRT"" )  ;      return try FRT (  Authentication Constants . MS_FAMILY_ID, null )  ;  } //  If MRRT is also a FRT, we try FRT first .   if  ( m Mrrt Token Cache Item . is Family Token (  )  )  {      Logger . v ( TAG + method Name, ""MRRT item exists but it's also a FRT, try with FRT . "" )  ;      return try FRT ( m Mrrt Token Cache Item . get Family Client Id (  ) , null )  ;  }  Authentication Result mrrt Result = use MRRT (  )  ;  if  ( is Token Request Failed ( mrrt Result )  )  {     //  If MRRT fails, we still want to retry on FRT in case there is one there .       // MRRT may not be marked as FRT, hard-code it as ""1"" in this case .       final  String family Client Id =  String Extensions . is Null Or Blank ( m Mrrt Token Cache Item . get Family Client Id (  )  )  ?  Authentication Constants . MS_FAMILY_ID : m Mrrt Token Cache Item . get Family Client Id (  )  ;      //  Pass the failed MRRT result to try FRT, if FRT does not exist, return the MRRT result .       mrrt Result = try FRT ( family Client Id, mrrt Result )  ;  } if  (  String Extensions . is Null Or Blank ( m Auth Request . get User From Request (  )  )  && m Token Cache Accessor . is Multiple MRR Ts Matching Given App ( m Auth Request . get Client Id (  )  )  )  {     throw new  Authentication Exception ( ADAL Error . AUTH_FAILED_USER_MISMATCH, "" No  User provided and multiple MRR Ts exist for the given client id"" )  ;  } return mrrt Result ; }"
3900,public  String get Geometry Type (  ) { return GEOMETRY_TYPE ; }
3901,public boolean is Show X Labels (  ) { return m Show X Labels ; }
3902,public boolean is Ref Log Including Result (  ) { return ref Log Include Result ; }
3903,"public com . anychart . core . utils .  Animation animation (  ) { return new com . anychart . core . utils .  Animation ( js Base + "" . animation (  ) "" )  ; }"
3904,public static void set Global Exception Handler ( @ Non Null  Exception Handler global Exception Handler ) {  Epoxy Controller . global Exception Handler = global Exception Handler ; }
3905,"public  List< Event> events List (  ) { final  String [  ]  array = events (  )  ;  final  List< Event> events = new  Array List<> ( array . length )  ;  for  (  String s : array )  {     try {         final  Event event =  Event . from JSON ( new JSON Object ( s )  )  ;          if  ( event != null )  {             events . add ( event )  ;          }     } catch  ( JSON Exception ignored )  {     // should not happen since JSON Object is being constructed from previously stringified JSON Object     // events -> json objects -> json strings -> storage -> json strings -> here     } } // order the events from least to most recent  Collections . sort ( events, new  Comparator< Event> (  )  {     @ Override     public int compare ( final  Event e1, final  Event e2 )  {         return  ( int )   ( e1 . timestamp - e2 . timestamp )  ;      } } )  ;  return events ; }"
3906,"protected static  Nullness Store get Env Nullness Store For Class (  Class Tree class Tree,  Context context ) {  Nullness Store env Store =  Nullness Store . empty (  )  ;   Class Tree enclosing Local Or Anonymous = find Enclosing Local Or Anonymous Class ( class Tree, context )  ;  if  ( enclosing Local Or Anonymous != null )  {      Enclosing Environment Nullness environment Nullness =  Enclosing Environment Nullness . instance ( context )  ;      env Store =  Objects . require Non Null ( environment Nullness . get Environment Mapping ( enclosing Local Or Anonymous )  )  ;  } return env Store ; }"
3907,"private void validate Test Method Args (  Framework Method test Method,  List< Throwable> errors ) {  Class<?> [  ]  param Types = test Method . get Method (  )  . get Parameter Types (  )  ;  if  ( param Types . length != 2 || ! End To End Test Descriptor . class . is Assignable From ( param Types [ 0 ]  )  || ! End To End Workspace . class . is Assignable From ( param Types [ 1 ]  )  )  {     errors . add ( new  Annotation Format Error ( "" Methods marked by @ Test in the  End To End Runner must support taking an "" + "" End To End Test Descriptor and  Process Result .   Example:\n"" + ""@ Test\n"" + ""public void should Run (  End To End Test Descriptor test,  End To End Workspace workspace )  {\n\n}"" )  )  ;  }}"
3908,"public static int read Signed Leb128 (  Byte Input in ) { int result = 0 ;  int cur ;  int count = 0 ;  int sign Bits = -1 ;  do {     cur = in . read Byte (  )  & 0xff ;      result |=  ( cur & 0x7f )  <<  ( count * 7 )  ;      sign Bits <<= 7 ;      count++ ;  } while  (  (  ( cur & 0x80 )  == 0x80 )  && count < 5 )  ;  if  (  ( cur & 0x80 )  == 0x80 )  {     throw new  Dex Exception ( ""invalid LEB128 sequence"" )  ;  } //  Sign extend if appropriate if  (  (  ( sign Bits >> 1 )  & result )  != 0 )  {     result |= sign Bits ;  } return result ; }"
3909,public void unlock (  )  throws IO Exception{  File Utils . delete ( keep File )  ; }
3910,"public boolean get Require Target Platform (  ) { // * we will remove this option  ( inlining it as true or false )  return get Delegate (  )  . get Boolean Value ( ""parser"", ""require_target_platform"", false )  ; }"
3911,public  Handler get Handler (  ) { return handler ; }
3912,"public synchronized void finish (  ) { //	 System . out . println ( "" Page finished!"" )  ;  finished = true ;  notify All (  )  ;  // notify any outstanding images update Images (  )  ; }"
3913,"public  Postcard with Char Array ( @ Nullable  String key, @ Nullable char [  ]  value ) { m Bundle . put Char Array ( key, value )  ;  return this ; }"
3914,public  String get Texture Name (  ) { return m Texture Name ; }
3915,public boolean is Set Delete Response (  ) { return this . delete Response != null ; }
3916,"private void fits Windows KITKAT (  ) { if  ( check Fits System Windows ( m Decor View . find View By Id ( android . R . id . content )  )  )  {     set Padding ( 0, 0, 0, 0 )  ;      return ;  } int top = 0, right = 0, bottom = 0 ;  if  ( m Bar Params . fits && m Fits Status Bar Type == FLAG_FITS_SYSTEM_WINDOWS )  {     top = m Bar Config . get Status Bar Height (  )  ;  } if  ( m Bar Params . is Support Action Bar )  {     top = m Bar Config . get Status Bar Height (  )  + m Action Bar Height ;  } if  ( m Bar Config . has Navigation Bar (  )  && m Bar Params . navigation Bar Enable && m Bar Params . navigation Bar With Kitkat Enable )  {     if  ( !m Bar Params . full Screen )  {         if  ( m Bar Config . is Navigation At Bottom (  )  )  {             bottom = m Bar Config . get Navigation Bar Height (  )  ;          } else {             right = m Bar Config . get Navigation Bar Width (  )  ;          }     }     if  ( m Bar Params . hide Navigation Bar )  {         if  ( m Bar Config . is Navigation At Bottom (  )  )  {             bottom = 0 ;          } else {             right = 0 ;          }     } else {         if  ( !m Bar Config . is Navigation At Bottom (  )  )  {             right = m Bar Config . get Navigation Bar Width (  )  ;          }     } } set Padding ( 0, top, right, bottom )  ; }"
3917,"public void put ( int key, int value ) { if  ( key < 0 )       Kit . code Bug (  )  ;  int index = ensure Index ( key, true )  ;  if  ( ivalues Shift == 0 )  {     int N = 1 << power ;      // keys . length can be N * 2 after clear which set ivalues Shift to 0     if  ( keys . length != N * 2 )  {         int [  ]  tmp = new int [ N * 2 ]  ;           System . arraycopy ( keys, 0, tmp, 0, N )  ;          keys = tmp ;      }     ivalues Shift = N ;  } keys [ ivalues Shift + index ]  = value ; }"
3918,"public long get Size (  Object t,  Class<?> type,  Type generic Type,  Annotation [  ]  annotations,  Media Type media Type ) { return -1 ; }"
3919,"public com . anychart . standalones .  Resource Timeline row Fill ( com . anychart . graphics . vector .  Fill value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Fill ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
3920,public boolean is View Created (  ) { return view != null ; }
3921,"public void start Activity ( @ Rpc Parameter ( name = ""action"" )   String action, @ Rpc Parameter ( name = ""uri"" )  @ Rpc Optional  String uri, @ Rpc Parameter ( name = ""type"", description = ""MIME type/subtype of the URI"" )  @ Rpc Optional  String type, @ Rpc Parameter ( name = ""extras"", description = ""a  Map of extras to add to the  Intent"" )  @ Rpc Optional JSON Object extras, @ Rpc Parameter ( name = ""wait"", description = ""block until the user exits the started activity"" )  @ Rpc Optional  Boolean wait, @ Rpc Parameter ( name = ""packagename"", description = ""name of package .   If used, requires classname to be useful"" )  @ Rpc Optional  String packagename, @ Rpc Parameter ( name = ""classname"", description = ""name of class .   If used, requires packagename to be useful"" )  @ Rpc Optional  String classname )  throws  Exception{ final  Intent intent = build Intent ( action, uri, type, extras, packagename, classname, null )  ;  do Start Activity ( intent, wait )  ; }"
3922,public boolean is Gesture In Progress (  ) { return m Detector . is Gesture In Progress (  )  ; }
3923,public void set Data Attribution (  String attribution ) { m Data Attribution = attribution ; }
3924,"protected static void write (  Annotated Output out, short c0, short c1, short c2 ) { out . write Short ( c0 )  ;  out . write Short ( c1 )  ;  out . write Short ( c2 )  ; }"
3925,public void compute Reachability (  ) { for  (  Ssa Basic Block block : blocks )  {     block . set Reachable ( 0 )  ;  }  Array List< Ssa Basic Block> block List = new  Array List< Ssa Basic Block> (  )  ;  block List . add ( this . get Entry Block (  )  )  ;  while  ( !block List . is Empty (  )  )  {      Ssa Basic Block block = block List . remove ( 0 )  ;      if  ( block . is Reachable (  )  )          continue ;      block . set Reachable ( 1 )  ;       Bit Set succs = block . get Successors (  )  ;      for  ( int i = succs . next Set Bit ( 0 )  ;  i >= 0 ;  i = succs . next Set Bit ( i + 1 )  )  {         block List . add ( blocks . get ( i )  )  ;      } }}
3926,public void set Payordbuyercnt30 ( long payordbuyercnt30 ) { this . payordbuyercnt30 = payordbuyercnt30 ; }
3927,public void set Default Fragment Background ( @ Drawable Res int background Res ) { m Delegate . set Default Fragment Background ( background Res )  ; }
3928,String get Default Value (  ) { return m Default Value ; }
3929,"public  String [  ]  help (  )  throws  Illegal State Exception, IO Exception, FTP Illegal Reply Exception, FTP Exception{ synchronized  ( lock )  {     //  Is this client connected?     if  ( !connected )  {         throw new  Illegal State Exception ( "" Client not connected"" )  ;      }     //  Is this client authenticated?     if  ( !authenticated )  {         throw new  Illegal State Exception ( "" Client not authenticated"" )  ;      }     //  Sends the HELP command .      communication . send FTP Command ( ""HELP"" )  ;      FTP Reply r = communication . read FTP Reply (  )  ;      touch Auto Noop Timer (  )  ;      if  ( !r . is Success Code (  )  )  {         throw new FTP Exception ( r )  ;      }     return r . get Messages (  )  ;  }}"
3930,"private  Compilation Test Helper make Test Helper With Args (  List< String> args ) { return  Compilation Test Helper . new Instance (  Null Away . class, get Class (  )  )  . set Args ( args )  ; }"
3931,"public  Generated Model Suffix View Suffix_ on Unbind (  On Model Unbound Listener< Generated Model Suffix View Suffix_,  Generated Model Suffix View> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
3932,"public void hide (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . hide (  )  ; "" )  ; }"
3933,"public  Realm Result Task< Result T> find One And Delete ( final  Bson filter, final  Class< Result T> result Class ) { return new  Realm Result Task Impl<> ( thread Pool Executor, new  Realm Result Task Impl .  Executor< Result T> (  )  {     @ Nullable     @ Override     public  Result T run (  )  {         return os Mongo Collection . find One And Delete ( filter, result Class )  ;      } } )  ; }"
3934,"private void close Animate (  View view, int position ) { if  ( opened . get ( position )  )  {     generate Reveal Animate ( view, true, false, position )  ;  }}"
3935,"public  Postcard with Char ( @ Nullable  String key, char value ) { m Bundle . put Char ( key, value )  ;  return this ; }"
3936,void name Space Changed (  ) { if  ( name Source Listeners == null )      return ;  for  ( int i = 0 ;  i < name Source Listeners . size (  )  ;  i++ )   (  (  Name Source .  Listener )   ( name Source Listeners . get ( i )  )  )  . name Source Changed ( this )  ; }
3937,"protected  Http Route determine Route (  Http Host target,  Http Request request,  Http Context context )  throws  Http Exception{ if  ( target == null )  {     target =  (  Http Host )  request . get Params (  )  . get Parameter (  Client P Names . DEFAULT_HOST )  ;  } if  ( target == null )  {     throw new  Illegal State Exception ( "" Target host must not be null, or set in parameters . "" )  ;  } return this . route Planner . determine Route ( target, request, context )  ; }"
3938,"public static boolean vivo Navigation Gesture Enabled (  Context context ) { int val =  Settings .  Secure . get Int ( context . get Content Resolver (  ) , VIVO_NAVIGATION_GESTURE, 0 )  ;  return val != 0 ; }"
3939,"private void add Icon To Markers (  String icon Url,  Hash Map< Kml Placemark,  Object> placemarks ) { for  (  Feature placemark : placemarks . key Set (  )  )  {      Kml Style url Style = get Styles Renderer (  )  . get ( placemark . get Id (  )  )  ;       Kml Style inline Style =  (  (  Kml Placemark )  placemark )  . get Inline Style (  )  ;       Geometry geometry = placemark . get Geometry (  )  ;       Object object = placemarks . get ( placemark )  ;      add Icon To Geometry ( icon Url, url Style, inline Style, geometry, object )  ;  }}"
3940,public boolean equals (  Object obj ) { if  ( ! ( obj instanceof  Frame Body Unsupported )  )  {     return false ;  }  Frame Body Unsupported object =  (  Frame Body Unsupported )  obj ;  return this . identifier . equals ( object . identifier )  && super . equals ( obj )  ; }
3941,public  String [  ]  granted Permissions (  ) {  List< String> list = new  Array List (  )  ;  for  ( int i = 0 ;  i < m Perms . size (  )  ;  i++ )  {     if  ( m Perms . get ( m User Permission . get ( i )  )  ==  Package Manager . PERMISSION_GRANTED )          list . add ( m User Permission . get ( i )  )  ;  } return list . to Array ( new  String [ list . size (  )  ]  )  ; }
3942,public static  Optional< Framework Type> for Request Kind (  Request Kind request Kind ) { switch ( request Kind )  {     case PROVIDER:         return  Optional . of (  Framework Type . PROVIDER )  ;      default:         return  Optional . empty (  )  ;  }}
3943,public  Configuration proxy (  Proxy proxy ) { this . proxy = proxy ;  return this ; }
3944,public boolean on Back Pressed (  ) { return code Fragment != null && code Fragment . on Back Pressed (  )  ; }
3945,public boolean has Config (  ) { return config_ != null ; }
3946,public  Nitrite Mapper get Nitrite Mapper (  ) { return nitrite Context . get Nitrite Mapper (  )  ; }
3947,public  Media Player get Media Player (  ) { return this ; }
3948,public  Matrix get Transform (  Matrix transform ) { if  ( transform == null )  {     transform = new  Matrix (  )  ;  } transform . set ( m Transform )  ;  return transform ; }
3949,public void set Thread (  Thread thread ) { synchronized  ( this )  {     this . thread = thread ;      thread Id = thread == null ? null : thread . get Id (  )  ;      thread__resolved Key = thread Id ;  }}
3950,"public static  Char Buffer wrap ( char [  ]  array, int start, int len ) { int length = array . length ;  if  (  ( start < 0 )  ||  ( len < 0 )  ||  ( long )  start +  ( long )  len > length )  {     throw new  Index Out Of Bounds Exception (  )  ;  }  Char Buffer buf =  Buffer Factory . new Char Buffer ( array )  ;  buf . position = start ;  buf . limit = start + len ;  return buf ; }"
3951,public void set Amplitude Ratio ( float amplitude Ratio ) { if  ( this . amplitude Ratio != amplitude Ratio )  {     this . amplitude Ratio = amplitude Ratio ;      invalidate (  )  ;  }}
3952,"public static void add Optional Features (  Image Request Builder image Request Builder,  Config config ) { if  ( config . use Postprocessor )  {     final  Postprocessor postprocessor ;      switch ( config . postprocessor Type )  {         case ""use_slow_postprocessor"":             postprocessor =  Delay Postprocessor . get Medium Postprocessor (  )  ;              break ;          case ""use_fast_postprocessor"":             postprocessor =  Delay Postprocessor . get Fast Postprocessor (  )  ;              break ;          default:             postprocessor =  Delay Postprocessor . get Medium Postprocessor (  )  ;      }     image Request Builder . set Postprocessor ( postprocessor )  ;  } if  ( config . rotate Using Meta Data )  {     image Request Builder . set Rotation Options (  Rotation Options . auto Rotate At Render Time (  )  )  ;  } else {     image Request Builder . set Rotation Options (  Rotation Options . force Rotation ( config . forced Rotation Angle )  )  ;  }}"
3953,"public static void remove ( @ Non Null final  Fragment remove ) { operate No Anim ( TYPE_REMOVE_FRAGMENT, remove . get Fragment Manager (  ) , null, remove )  ; }"
3954,"public com . anychart . core . annotations .  Horizontal Line value Anchor (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . value Anchor ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
3955,"public void remove View At ( int index ) { throw new  Unsupported Operation Exception ( "" Removing  Views manually within  Litho Views is not supported"" )  ; }"
3956,public T get Chunk Source (  ) { return chunk Source ; }
3957,"public void add Root (  String name,  File root ) { if  (  Text Utils . is Empty ( name )  )  {     throw new  Illegal Argument Exception ( "" Name must not be empty"" )  ;  } try {     //  Resolve to canonical path to keep path checking fast     root = root . get Canonical File (  )  ;  } catch  ( IO Exception e )  {     throw new  Illegal Argument Exception ( "" Failed to resolve canonical path for "" + root, e )  ;  } m Roots . put ( name, root )  ; }"
3958,"public static boolean is Id Card Number (  String str ) { // 15位或18数字, 14数字加x ( X ) 字符或17数字加x ( X ) 字符才是合法的 return is Regex Match ( str, REGEX_ID_CARD )  ; }"
3959,"public static void attach Base Context (  Application app,  Re Plugin Config config ) { if  ( s Attached )  {     if  (  Log Debug . LOG )  {          Log Debug . d ( TAG, ""attach Base Context:  Already called"" )  ;      }     return ;  }  Re Plugin Internal . init ( app )  ;  s Config = config ;  s Config . init Defaults ( app )  ;  IPC . init ( app )  ;  // 只有开启“详细日志”才会输出，防止“消耗性能” if  ( LOG &&  Re Plugin . get Config (  )  . is Print Detail Log (  )  )  {      Log Debug . print Memory Status (  Log Debug . TAG, ""act=, init, flag=,  Start, pn=, framework, func=, attach Base Context, lib=,  Re Plugin"" )  ;  } // 初始化 Host Config Helper（通过反射 Host Config来实现） // NOTE 一定要在IPC类初始化之后才使用  Host Config Helper . init (  )  ;  // FIXME 此处需要优化掉  App Var . s App Context = app ;  //  Plugin  Status  Controller  Plugin Status Controller . set App Context ( app )  ;  PMF . init ( app )  ;  PMF . call Attach (  )  ;  s Attached = true ; }"
3960,public float get Float Value (  )  throws IO Exception{ if  ( type == INDIRECT )  {     return dereference (  )  . get Float Value (  )  ;  } else if  ( type == NUMBER )  {     return  (  (  Double )  value )  . float Value (  )  ;  } // wrong type return 0 ; }
3961,"protected void draw Label (  Canvas canvas,  String label Text,  Default Renderer renderer,  List< Rect F> prev Labels Bounds, int center X, int center Y, float short Radius, float long Radius, float current Angle, float angle, int left, int right, int color,  Paint paint, boolean line, boolean display ) { if  ( renderer . is Show Labels (  )  || display )  {     paint . set Color ( color )  ;      double r Angle =  Math . to Radians ( 90 -  ( current Angle + angle / 2 )  )  ;      double sin Value =  Math . sin ( r Angle )  ;      double cos Value =  Math . cos ( r Angle )  ;      int x1 =  Math . round ( center X +  ( float )   ( short Radius * sin Value )  )  ;      int y1 =  Math . round ( center Y +  ( float )   ( short Radius * cos Value )  )  ;      int x2 =  Math . round ( center X +  ( float )   ( long Radius * sin Value )  )  ;      int y2 =  Math . round ( center Y +  ( float )   ( long Radius * cos Value )  )  ;      float size = renderer . get Labels Text Size (  )  ;      float extra =  Math . max ( size / 2, 10 )  ;      paint . set Text Align (  Align . LEFT )  ;      if  ( x1 > x2 )  {         extra = -extra ;          paint . set Text Align (  Align . RIGHT )  ;      }     float x Label = x2 + extra ;      float y Label = y2 ;      float width = right - x Label ;      if  ( x1 > x2 )  {         width = x Label - left ;      }     label Text = get Fit Text ( label Text, width, paint )  ;      float width Label = paint . measure Text ( label Text )  ;      boolean ok Bounds = false ;      while  ( !ok Bounds && line )  {         boolean intersects = false ;          int length = prev Labels Bounds . size (  )  ;          for  ( int j = 0 ;  j < length && !intersects ;  j++ )  {              Rect F prev Label Bounds = prev Labels Bounds . get ( j )  ;              if  ( prev Label Bounds . intersects ( x Label, y Label, x Label + width Label, y Label + size )  )  {                 intersects = true ;                  y Label =  Math . max ( y Label, prev Label Bounds . bottom )  ;              }         }         ok Bounds = !intersects ;      }     if  ( line )  {         y2 =  ( int )   ( y Label - size / 2 )  ;          canvas . draw Line ( x1, y1, x2, y2, paint )  ;          canvas . draw Line ( x2, y2, x2 + extra, y2, paint )  ;      } else {         paint . set Text Align (  Align . CENTER )  ;      }     canvas . draw Text ( label Text, x Label, y Label, paint )  ;      if  ( line )  {         prev Labels Bounds . add ( new  Rect F ( x Label, y Label, x Label + width Label, y Label + size )  )  ;      } }}"
3962,"public  Map< String,  List> parse (  String [  ]  sentences,  String [  ]  tasks,  String [  ]  skip Tasks )  throws IO Exception{ //noinspection unchecked return mapper . read Value ( post ( ""/parse"", new  Sentence Input ( sentences, tasks, skip Tasks, language )  ) ,  Map . class )  ; }"
3963,public  Out Of Memory Error get Out Of Memory Error (  ) {  Assertions . check State ( type == TYPE_OUT_OF_MEMORY )  ;  return  (  Out Of Memory Error )   Assertions . check Not Null ( cause )  ; }
3964,"public com . anychart . standalones .  Labels Factory v Align (  String align ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . v Align ( %s )  ; "", wrap Quotes ( align )  )  )  ;  return this ; }"
3965,public void notify Touch Mode (  ) { // only tell the scroll listener about some things we want it to know switch ( m Touch Mode )  {     case TOUCH_MODE_SCROLLING:         report Scroll State Change (  On Scroll Listener . SCROLL_STATE_TOUCH_SCROLL )  ;          break ;      case TOUCH_MODE_FLINGING:         report Scroll State Change (  On Scroll Listener . SCROLL_STATE_FLING )  ;          break ;      case TOUCH_MODE_IDLE:         report Scroll State Change (  On Scroll Listener . SCROLL_STATE_IDLE )  ;          break ;  }}
3966,public SSL Socket Factory get Socket Factory (  ) { return socket Factory ; }
3967,"public com . anychart . charts .  Pert select Marquee Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3968,public  String variable Name ( int i ) { return get Const Pool (  )  . get Utf8 Info ( name Index ( i )  )  ; }
3969,public URL get Resource (  String path ) { URL url = null ;  if  ( external Class Loader != null )  {     // classloader wants no leading slash     url = external Class Loader . get Resource ( path . substring ( 1 )  )  ;  } if  ( url == null )      url =  Interpreter . class . get Resource ( path )  ;  return url ; }
3970,public void set Padding Advance Y ( int padding Advance Y ) { this . padding Advance Y = padding Advance Y ; }
3971,public int get Second Index (  ) { return second Index ; }
3972,"public static void copy ( URL from,  Output Stream to )  throws IO Exception{ as Byte Source ( from )  . copy To ( to )  ; }"
3973,"public com . anychart . core . cartesian . series .  Column3d id (  String id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . id ( %s )  ; "", wrap Quotes ( id )  )  )  ;  return this ; }"
3974,"public void on Draw (  Canvas canvas,  Rect scale Rect,  Rect show Rect,  Table Data<T> table Data,  Table Config config ) { set Data ( scale Rect, show Rect, table Data, config )  ;  canvas . save (  )  ;  canvas . clip Rect ( this . show Rect )  ;  draw Column Title ( canvas, config )  ;  draw Count ( canvas )  ;  draw Content ( canvas )  ;  operation . draw ( canvas, show Rect, config )  ;  if  ( draw Over != null )      draw Over . draw ( canvas, scale Rect, show Rect, config )  ;  canvas . restore (  )  ;  if  ( is Click Point && click Column Info != null )  {     on Column Click Listener . on Click ( click Column Info )  ;  } if  ( tip Column != null )  {     draw Tip ( canvas, tip Point . x, tip Point . y, tip Column, tip Position )  ;  }}"
3975,public void set Position ( int position ) { assert That ( 0 <= position && position <= data . length )  . is True (  )  ;  read Position = position ;  peek Position = position ; }
3976,"protected void post Callback ( int callback Type,  Runnable action,  Object token ) { post Callback Delayed ( callback Type, action, token, post Callback Delay Millis )  ; }"
3977,"public void row Even Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . row Even Fill (  )  ; "" )  ; }"
3978,"public com . anychart . charts .  Cartesian3d max Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
3979,"public com . anychart . core . resource .  Grid odd Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . odd Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
3980,"public com . anychart . core . stock . scrollerseries .  Step Line stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3981,"public com . anychart . charts .  Pie stroke ( com . anychart . graphics . vector .  Stroke value,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
3982,"private static boolean _check File Is Exists (  File Info file Info,  Download Listener listener ) {  File file = new  File ( get Download Dir (  ) , file Info . get Name (  )  )  ;  if  ( file . exists (  )  )  {     // 已经存在则删除重下     file . delete (  )  ;      if  (  File DAO Impl . get Instance (  )  . is Exists ( file Info . get Url (  )  )  )  {         // 删除数据库中的记录          File DAO Impl . get Instance (  )  . delete ( file Info . get Url (  )  )  ;      }     return false ;  } // 线程池中是否存在相应任务  Download Task runnable =  Download Thread Pool . get Instance (  )  . get Runnable ( file Info . get Url (  )  )  ;  if  ( runnable != null )  {     if  ( runnable . is Running (  )  )  {          Toast . make Text ( s Context, ""正在下载 .  .  . "",  Toast . LENGTH_SHORT )  . show (  )  ;      } else {          Log . w ( "" File Downloader"", "" Download Thread Pool"" )  ;           Download Thread Pool . get Instance (  )  . execute ( runnable )  ;      }     return true ;  } return false ; }"
3983,public boolean is Fair (  ) { return fair ; }
3984,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
3985,"public com . anychart . graphics . vector .  Pattern Fill hatch Fill (  ) { return new com . anychart . graphics . vector .  Pattern Fill ( js Base + "" . hatch Fill (  ) "" )  ; }"
3986,public static  Fluent Iterable<E> from (  Iterable<E> iterable ) { return new  Lazy Fluent Iterable<> ( iterable )  ; }
3987,"public static R get Static Field (  Class<?> clazz,  String field Name ) { try {     return get Static Field ( clazz . get Declared Field ( field Name )  )  ;  } catch  (  Exception e )  {     throw new  Runtime Exception ( e )  ;  }}"
3988,public float get Curr Velocity (  ) { return m Mode == FLING_MODE ? m Curr Velocity : m Velocity - m Deceleration * time Passed (  )  / 2000 . 0f ; }
3989,public boolean remove Span (  Cache Span span ) { if  ( cached Spans . remove ( span )  )  {     span . file . delete (  )  ;      return true ;  } return false ; }
3990,public static  Drawee Controller mock Controller (  ) {  Drawee Controller controller = mock (  Abstract Drawee Controller . class )  ;  stub Get And Set Hierarchy ( controller )  ;  stub Get And Set Content Description ( controller )  ;  return controller ; }
3991,"public com . anychart . core . ui .  Labels Factory labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . labels (  ) "" )  ; }"
3992,"private static  String method Name (  Executable Element method ) { switch ( method . get Kind (  )  )  {     case CONSTRUCTOR:         return ""new Instance"" ;      case METHOD:          String method Name = method . get Simple Name (  )  . to String (  )  ;          return BANNED_PROXY_NAMES . contains ( method Name )  ? ""proxy"" + LOWER_CAMEL . to ( UPPER_CAMEL, method Name )  : method Name ;      default:         throw new  Assertion Error ( method )  ;  }}"
3993,public void add On State Change Listener ( @ Non Null  On State Change Listener listener ) { state Listeners . add ( listener )  ; }
3994,public float get Damping Ratio (  ) { return jni Get Damping Ratio ( addr )  ; }
3995,"protected void draw Crop Grid ( @ Non Null  Canvas canvas ) { if  ( m Show Crop Grid )  {     if  ( m Grid Points == null && !m Crop View Rect . is Empty (  )  )  {         m Grid Points = new float [  ( m Crop Grid Row Count )  * 4 +  ( m Crop Grid Column Count )  * 4 ]  ;          int index = 0 ;          for  ( int i = 0 ;  i < m Crop Grid Row Count ;  i++ )  {             m Grid Points [ index++ ]  = m Crop View Rect . left ;              m Grid Points [ index++ ]  =  ( m Crop View Rect . height (  )  *  (  (  ( float )  i + 1 . 0f )  /  ( float )   ( m Crop Grid Row Count + 1 )  )  )  + m Crop View Rect . top ;              m Grid Points [ index++ ]  = m Crop View Rect . right ;              m Grid Points [ index++ ]  =  ( m Crop View Rect . height (  )  *  (  (  ( float )  i + 1 . 0f )  /  ( float )   ( m Crop Grid Row Count + 1 )  )  )  + m Crop View Rect . top ;          }         for  ( int i = 0 ;  i < m Crop Grid Column Count ;  i++ )  {             m Grid Points [ index++ ]  =  ( m Crop View Rect . width (  )  *  (  (  ( float )  i + 1 . 0f )  /  ( float )   ( m Crop Grid Column Count + 1 )  )  )  + m Crop View Rect . left ;              m Grid Points [ index++ ]  = m Crop View Rect . top ;              m Grid Points [ index++ ]  =  ( m Crop View Rect . width (  )  *  (  (  ( float )  i + 1 . 0f )  /  ( float )   ( m Crop Grid Column Count + 1 )  )  )  + m Crop View Rect . left ;              m Grid Points [ index++ ]  = m Crop View Rect . bottom ;          }     }     if  ( m Grid Points != null )  {         canvas . draw Lines ( m Grid Points, m Crop Grid Paint )  ;      } } if  ( m Show Crop Frame )  {     canvas . draw Rect ( m Crop View Rect, m Crop Frame Paint )  ;  } if  ( m Freestyle Crop Mode != FREESTYLE_CROP_MODE_DISABLE )  {     canvas . save (  )  ;      m Temp Rect . set ( m Crop View Rect )  ;      m Temp Rect . inset ( m Crop Rect Corner Touch Area Line Length, -m Crop Rect Corner Touch Area Line Length )  ;      canvas . clip Rect ( m Temp Rect,  Region .  Op . DIFFERENCE )  ;      m Temp Rect . set ( m Crop View Rect )  ;      m Temp Rect . inset ( -m Crop Rect Corner Touch Area Line Length, m Crop Rect Corner Touch Area Line Length )  ;      canvas . clip Rect ( m Temp Rect,  Region .  Op . DIFFERENCE )  ;      canvas . draw Rect ( m Crop View Rect, m Crop Frame Corners Paint )  ;      canvas . restore (  )  ;  }}"
3996,"protected void init (  Context context,  Attribute Set attrs, int def Style ) { // Init attrs init Attrs ( context, attrs, def Style )  ; }"
3997,private void init (  ) {/*inject*/}
3998,public static  String visualize (  Canvas canvas ) {  Shadow Canvas shadow Canvas =  Shadow . extract ( canvas )  ;  return shadow Canvas . get Description (  )  ; }
3999,public synchronized  True Time with Customized Cache (  Cache Interface cache Interface ) { DISK_CACHE_CLIENT . enable Cache Interface ( cache Interface )  ;  return INSTANCE ; }
4000,"public com . anychart . core . stock . scrollerseries .  Stick labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4001,"static  Constant Loader<K, V> constant Loader ( @ Nullable V constant ) { return new  Constant Loader<> ( constant )  ; }"
4002,public  Builder set Rationale ( @ Nullable  String rationale ) { m Rationale = rationale ;  return this ; }
4003,"public com . anychart . core . cartesian . series .  Bar3d unselect (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . unselect (  )  ; "" )  ;  return this ; }"
4004,"public com . anychart . scales .  Base scale (  ) { return new com . anychart . scales .  Base ( js Base + "" . scale (  ) "" )  ; }"
4005,"public com . anychart . core . ui .  Paginator padding (  String [  ]  space Or Top Or Top And Bottom,  Number right Or Right And Left,  String bottom,  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( space Or Top Or Top And Bottom ) , right Or Right And Left, wrap Quotes ( bottom ) , left )  )  ;  return this ; }"
4006,"public static KJDB create (  Context context,  String target Directory,  String db Name, boolean is Debug ) {  Dao Config config = new  Dao Config (  )  ;  config . set Context ( context )  ;  config . set Target Directory ( target Directory )  ;  config . set Db Name ( db Name )  ;  config . set Debug ( is Debug )  ;  return create ( config )  ; }"
4007,"public  Fluent Future<V> finish To Future (  ) { if  ( compare And Update State ( OPEN, WILL_CLOSE )  )  {     logger . log ( FINER, ""will close {0}"", this )  ;      future . add Listener ( new  Runnable (  )  {         @ Override         public void run (  )  {             check And Update State ( WILL_CLOSE, CLOSING )  ;              close (  )  ;              check And Update State ( CLOSING, CLOSED )  ;          }     }, direct Executor (  )  )  ;  } else {     switch ( state . get (  )  )  {         case SUBSUMED:             throw new  Illegal State Exception ( "" Cannot call finish To Future (  )  after deriving another step"" )  ;          case WILL_CREATE_VALUE_AND_CLOSER:             throw new  Illegal State Exception ( "" Cannot call finish To Future (  )  after calling finish To Value And Closer (  ) "" )  ;          case WILL_CLOSE:         case CLOSING:         case CLOSED:             throw new  Illegal State Exception ( "" Cannot call finish To Future (  )  twice"" )  ;          case OPEN:             throw new  Assertion Error (  )  ;      } } return future ; }"
4008,"public void set Transform Matrix (  Matrix4 transform ) {  Matrix4 real Matrix = super . get Transform Matrix (  )  ;  if  ( check Equal ( real Matrix, transform )  )  {     adjust Needed = false ;  } else {     if  ( is Drawing (  )  )  {         virtual Matrix . set As Affine ( transform )  ;          adjust Needed = true ;          if  ( have Identity Real Matrix )  {             adjust Affine . set ( transform )  ;          } else {             tmp Affine . set ( transform )  ;              adjust Affine . set ( real Matrix )  . inv (  )  . mul ( tmp Affine )  ;          }     } else {         real Matrix . set As Affine ( transform )  ;          have Identity Real Matrix = check Idt ( real Matrix )  ;      } }}"
4009,"public  Versioned Target Graph Cache .  Versioned Target Graph Cache Result get Versioned Target Graph (  Deps Aware Executor<? super  Compute Result, ?> deps Aware Executor,  Type Coercer Factory type Coercer Factory,  Unconfigured Build Target View Factory unconfigured Build Target Factory,  Target Graph Creation Result target Graph Creation Result,  Immutable Map< String,  Version Universe> version Universes,  Cells cells )  throws  Version Exception,  Interrupted Exception,  Timeout Exception{ return cache . to Versioned Target Graph ( deps Aware Executor, version Universes, type Coercer Factory, unconfigured Build Target Factory, target Graph Creation Result, stats Tracker, cells )  ; }"
4010,"Alert Dialog show Dialog (  Dialog Interface .  On Click Listener positive Listener,  Dialog Interface .  On Click Listener negative Listener ) {  Alert Dialog .  Builder builder ;  if  ( m Theme Res Id != -1 )  {     builder = new  Alert Dialog .  Builder ( m Context, m Theme Res Id )  ;  } else {     builder = new  Alert Dialog .  Builder ( m Context )  ;  } return builder . set Cancelable ( false )  . set Title ( m Title )  . set Message ( m Rationale )  . set Positive Button ( m Positive Button Text, positive Listener )  . set Negative Button ( m Negative Button Text, negative Listener )  . show (  )  ; }"
4011,"public static  Intent Result parse Activity Result ( int request Code, int result Code,  Intent intent ) { if  ( request Code == REQUEST_CODE )  {     return parse Activity Result ( result Code, intent )  ;  } return null ; }"
4012,"public com . anychart . core .  State Settings selected (  ) { return new com . anychart . core .  State Settings ( js Base + "" . selected (  ) "" )  ; }"
4013,"static  Upload Data Supplier of (  String name,  Digest digest,  Throwing Supplier< Input Stream, IO Exception> stream ) { return new  Upload Data Supplier (  )  {     @ Override     public  Input Stream get (  )  throws IO Exception {         return stream . get (  )  ;      }     @ Override     public  Digest get Digest (  )  {         return digest ;      }     @ Override     public  String describe (  )  {         return name ;      } } ; }"
4014,public void set Highlighted Days (  Ummalqura Calendar [  ]  highlighted Days ) { for  (  Ummalqura Calendar highlighted Day : highlighted Days )  trim To Midnight ( highlighted Day )  ;  this . highlighted Days . add All (  Arrays . as List ( highlighted Days )  )  ;  if  ( m Day Picker View != null )      m Day Picker View . on Change (  )  ; }
4015,public  Multi Checkable Dialog Builder set Checked Items ( int [  ]  checked Indexes ) { m Checked Items . clear (  )  ;  if  ( checked Indexes != null && checked Indexes . length > 0 )  {     for  ( int checked Index : checked Indexes )  {         m Checked Items . set ( checked Index )  ;      } } return this ; }
4016,"public int start (  ) { not Met Requirements = requirements . get Not Met Requirements ( context )  ;   Intent Filter filter = new  Intent Filter (  )  ;  if  ( requirements . is Network Required (  )  )  {     if  (  Util . SDK_INT >= 23 )  {         register Network Callback V23 (  )  ;      } else {         filter . add Action (  Connectivity Manager . CONNECTIVITY_ACTION )  ;      } } if  ( requirements . is Charging Required (  )  )  {     filter . add Action (  Intent . ACTION_POWER_CONNECTED )  ;      filter . add Action (  Intent . ACTION_POWER_DISCONNECTED )  ;  } if  ( requirements . is Idle Required (  )  )  {     if  (  Util . SDK_INT >= 23 )  {         filter . add Action (  Power Manager . ACTION_DEVICE_IDLE_MODE_CHANGED )  ;      } else {         filter . add Action (  Intent . ACTION_SCREEN_ON )  ;          filter . add Action (  Intent . ACTION_SCREEN_OFF )  ;      } } receiver = new  Device Status Change Receiver (  )  ;  context . register Receiver ( receiver, filter, null, handler )  ;  return not Met Requirements ; }"
4017,"private  Bitmap to Conform Bitmap (  Bitmap background,  Bitmap foreground ) { if  ( background == null || foreground == null )  {     return null ;  } int bg Width = background . get Width (  )  ;  int bg Height = background . get Height (  )  ;   Bitmap bitmap =  Bitmap . create Bitmap ( bg Width, bg Height,  Bitmap .  Config . ARGB_8888 )  ;   Canvas cv = new  Canvas ( bitmap )  ;  cv . draw Bitmap ( background, 0, 0, null )  ;  cv . draw Bitmap ( foreground, 0, 0, null )  ;  // 保存 cv . save (  Canvas . ALL_SAVE_FLAG )  ;  // 存储 cv . restore (  )  ;  return bitmap ; }"
4018,"public static int index Of ( char [  ]  array, char [  ]  target ) { check Not Null ( array, ""array"" )  ;  check Not Null ( target, ""target"" )  ;  if  ( target . length == 0 )  {     return 0 ;  } outer: for  ( int i = 0 ;  i < array . length - target . length + 1 ;  i++ )  {     for  ( int j = 0 ;  j < target . length ;  j++ )  {         if  ( array [ i + j ]  != target [ j ]  )  {             continue outer ;          }     }     return i ;  } return -1 ; }"
4019,"public com . anychart . core . ui .  Scroll Bar slider Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . slider Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4020,"public static T max ( @ Nullable T a, @ Nullable T b,  Comparator<T> comparator ) { return  ( comparator . compare ( a, b )  >= 0 )  ? a : b ; }"
4021,"public void set Boolean Preference (  String preference, boolean value ) {  Application application =  (  Application )  firebase App . get Application Context (  )  ;   Shared Preferences .  Editor preferences Editor = application . get Shared Preferences ( PREFERENCES_PACKAGE_NAME,  Context . MODE_PRIVATE )  . edit (  )  ;  preferences Editor . put Boolean ( preference, value )  ;  preferences Editor . apply (  )  ; }"
4022,public int get Count (  ) { return m Result List . size (  )  ; }
4023,"public static long get Base Size ( byte [  ]  delta ) { int p = 0 ;  long base Len = 0 ;  int c, shift = 0 ;  do {     c = delta [ p++ ]  & 0xff ;      base Len |=  (  ( long )   ( c & 0x7f )  )  << shift ;      shift += 7 ;  } while  (  ( c & 0x80 )  != 0 )  ;  return base Len ; }"
4024,protected boolean requires Repository (  ) { return true ; }
4025,private synchronized  Producer< Closeable Reference< Closeable Image>> get Qualified Resource Fetch Sequence (  ) { if  ( m Qualified Resource Fetch Sequence == null )  {      Qualified Resource Fetch Producer qualified Resource Fetch Producer = m Producer Factory . new Qualified Resource Fetch Producer (  )  ;      m Qualified Resource Fetch Sequence = new Bitmap Cache Get To Local Transform Sequence ( qualified Resource Fetch Producer )  ;  } return m Qualified Resource Fetch Sequence ; }
4026,"public  Builder rx Factory ( @ Nonnull  Rx Observable Factory factory ) { if  ( factory == null )  {     throw new  Illegal Argument Exception ( "" The provided  Rx  Observable factory must not be null . "" )  ;  } rx Factory = factory ;  return this ; }"
4027,"public void change Buffer Data (  Buffer Info buffer Info,  Buffer new Data, int index, int size ) { this . change Buffer Data ( buffer Info, new Data, index, size, false )  ; }"
4028,public java . lang .  String get Rule Name (  ) { java . lang .  Object ref = rule Name_ ;  if  ( ref instanceof java . lang .  String )  {     return  ( java . lang .  String )  ref ;  } else {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      rule Name_ = s ;      return s ;  }}
4029,"public static T read (  String json,  String path,  Type clazz ) { return read ( json, path, clazz, null )  ; }"
4030,public boolean has Parent (  ) { return parent != null ; }
4031,"public byte [  ]  get Raw Content Data Only (  )  throws  Unsupported Encoding Exception{ logger . fine ( "" Getting  Raw data for:"" + get Id (  )  )  ;  try {     // Create  Data  Box      Byte Array Output Stream baos = new  Byte Array Output Stream (  )  ;      byte [  ]  data = get Data Bytes (  )  ;      baos . write (  Utils . get Size BE Int32 (  Mp4 Data Box . DATA_HEADER_LENGTH + data . length )  )  ;      baos . write (  Utils . get Default Bytes (  Mp4 Data Box . IDENTIFIER, ""ISO-8859-1"" )  )  ;      baos . write ( new byte [  ]  { 0 } )  ;      baos . write ( new byte [  ]  { 0, 0,  ( byte )  get Field Type (  )  . get File Class Id (  )  } )  ;      baos . write ( new byte [  ]  { 0, 0, 0, 0 } )  ;      baos . write ( data )  ;      return baos . to Byte Array (  )  ;  } catch  ( IO Exception ioe )  {     // This should never happen as were not actually writing to/from a file     throw new  Runtime Exception ( ioe )  ;  }}"
4032,public int pos (  ) { return reader Pos + buf Pos ; }
4033,public float get Aspect Ratio (  ) { return  ( height == 0 )  ?  Float .  Na N : width / height ; }
4034,public void set Id3v1 Save Genre ( boolean id3v1 Save Genre ) { this . id3v1 Save Genre = id3v1 Save Genre ; }
4035,"public com . anychart . charts .  Mekko bounds (  String x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
4036,"public com . anychart . charts .  Waterfall y Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
4037,"public com . anychart . core . stock . scrollerseries .  Stick stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4038,public  Glide Request< Transcode Type> optional Circle Crop (  ) { return  (  Glide Request< Transcode Type> )  super . optional Circle Crop (  )  ; }
4039,public  Refresh Layout set Rebound Duration ( int duration ) { this . m Rebound Duration = duration ;  return this ; }
4040,public  List< String> get Push Options (  ) { return push Options ; }
4041,"public void set Vector Drawable ( @ Drawable Res int res Id ) { @ Suppress Warnings ( "" Resource Type"" )   Xml Resource Parser xpp = get Context (  )  . get Resources (  )  . get Xml ( res Id )  ;  vector = new  Vector (  )  ;  try {      Xml Parser . parse Vector ( vector, xpp, get Context (  )  )  ;      rich Path Drawable = new  Rich Path Drawable ( vector, get Scale Type (  )  )  ;      set Image Drawable ( rich Path Drawable )  ;  } catch  ( IO Exception e )  {     e . print Stack Trace (  )  ;  } catch  (  Xml Pull Parser Exception e )  {     e . print Stack Trace (  )  ;  }}"
4042,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
4043,"public void recycle (  View convert View, int position ) { touch Listener . reload Choice State In View ( convert View . find View By Id ( swipe Front View ) , position )  ;  touch Listener . reload Swipe State In View ( convert View . find View By Id ( swipe Front View ) , position )  ;  // cleaned .  for  ( int j = 0 ;  j <  (  (  View Group )  convert View )  . get Child Count (  )  ;  ++j )  {      View next Child =  (  (  View Group )  convert View )  . get Child At ( j )  ;      next Child . set Pressed ( false )  ;  }}"
4044,"public int wait For Process (  Launched Process process )  throws  Interrupted Exception, IO Exception{ long infinite Wait = 0 ;  int exit Code = wait For Process ( process, infinite Wait,  Time Unit . SECONDS )  ;  if  ( exit Code ==  Integer . MIN_VALUE )  {     //  Specifying 0 for timeout guarantees that the wait will not time out .   This way we know that     // an exit code equal to  Integer . MIN_VALUE must mean that the process failed to start .       Preconditions . check Argument ( process instanceof  Launched Process Impl )  ;       Launched Process Impl process Impl =  (  Launched Process Impl )  process ;      throw new IO Exception (  String . format ( "" Failed to start process %s"", process Impl . params . get Command (  )  )  )  ;  } return exit Code ; }"
4045,"protected void on Attached To Window (  ) { super . on Attached To Window (  )  ;  m Attached To Window = true ;  final  View this View = this ;  if  ( !this View . is In Edit Mode (  )  )  {     if  ( m Refresh Header == null )  {         if  ( s Header Creator != null )  {              Refresh Header header = s Header Creator . create Refresh Header ( this View . get Context (  ) , this )  ;              //noinspection  Constant Conditions             if  ( header == null )  {                 throw new  Runtime Exception ( "" Default Refresh Header Creator can not return null"" )  ;              }             set Refresh Header ( header )  ;          }     }     if  ( m Refresh Footer == null )  {         if  ( s Footer Creator != null )  {              Refresh Footer footer = s Footer Creator . create Refresh Footer ( this View . get Context (  ) , this )  ;              //noinspection  Constant Conditions             if  ( footer == null )  {                 throw new  Runtime Exception ( "" Default Refresh Footer Creator can not return null"" )  ;              }             set Refresh Footer ( footer )  ;          }     } else {         m Enable Load More = m Enable Load More || !m Manual Load More ;      }     if  ( m Refresh Content == null )  {         for  ( int i = 0, len = get Child Count (  )  ;  i < len ;  i++ )  {              View view = get Child At ( i )  ;              if  (  ( m Refresh Header == null || view != m Refresh Header . get View (  )  )  &&  ( m Refresh Footer == null || view != m Refresh Footer . get View (  )  )  )  {                 m Refresh Content = new  Refresh Content Wrapper ( view )  ;              }         }     }     if  ( m Refresh Content == null )  {         final int padding =  Smart Util . dp2px ( 20 )  ;          final  Text View error View = new  Text View ( this View . get Context (  )  )  ;          error View . set Text Color ( 0xffff6600 )  ;          error View . set Gravity (  Gravity . CENTER )  ;          error View . set Text Size ( 20 )  ;          error View . set Text ( R . string . srl_content_empty )  ;          super . add View ( error View, 0, new  Layout Params ( MATCH_PARENT, MATCH_PARENT )  )  ;          m Refresh Content = new  Refresh Content Wrapper ( error View )  ;          m Refresh Content . get View (  )  . set Padding ( padding, padding, padding, padding )  ;      }      View fixed Header View = this View . find View By Id ( m Fixed Header View Id )  ;       View fixed Footer View = this View . find View By Id ( m Fixed Footer View Id )  ;      m Refresh Content . set Scroll Boundary Decider ( m Scroll Boundary Decider )  ;      m Refresh Content . set Enable Load More When Content Not Full ( m Enable Load More When Content Not Full )  ;      m Refresh Content . set Up Component ( m Kernel, fixed Header View, fixed Footer View )  ;      if  ( m Spinner != 0 )  {         notify State Changed (  Refresh State .  None )  ;          m Refresh Content . move Spinner ( m Spinner = 0, m Header Translation View Id, m Footer Translation View Id )  ;      } } if  ( m Primary Colors != null )  {     if  ( m Refresh Header != null )  {         m Refresh Header . set Primary Colors ( m Primary Colors )  ;      }     if  ( m Refresh Footer != null )  {         m Refresh Footer . set Primary Colors ( m Primary Colors )  ;      } } //重新排序 if  ( m Refresh Content != null )  {     super . bring Child To Front ( m Refresh Content . get View (  )  )  ;  } if  ( m Refresh Header != null && m Refresh Header . get Spinner Style (  )  . front )  {     super . bring Child To Front ( m Refresh Header . get View (  )  )  ;  } if  ( m Refresh Footer != null && m Refresh Footer . get Spinner Style (  )  . front )  {     super . bring Child To Front ( m Refresh Footer . get View (  )  )  ;  }}"
4046,public boolean is Writable (  ) { return writable ; }
4047,"public  Vector3 un Project ( double x, double y, double z ) { final double [  ]  in = new double [ 4 ] , out = new double [ 4 ]  ;   Matrix4 projection Matrix = get Current Camera (  )  . get Projection Matrix (  )  . clone (  )  ;   Matrix4 MVP Matrix = projection Matrix . multiply ( get Current Camera (  )  . get View Matrix (  )  )  ;  MVP Matrix . inverse (  )  ;  in [ 0 ]  = x ;  in [ 1 ]  = y ;  in [ 2 ]  = z ;  in [ 3 ]  = 1 ;   Matrix . multiply MV ( out, 0, MVP Matrix . get Double Values (  ) , 0, in, 0 )  ;  if  ( out [ 3 ]  == 0 )      return null ;  out [ 3 ]  = 1 / out [ 3 ]  ;  return new  Vector3 ( out [ 0 ]  * out [ 3 ] , out [ 1 ]  * out [ 3 ] , out [ 2 ]  * out [ 3 ]  )  ; }"
4048,public static int set Package ( int mod ) { return  ( mod & ~ ( PROTECTED | PUBLIC | PRIVATE )  )  ; }
4049,public  Yoga Direction recursively Resolve Layout Direction (  ) {  Yoga Node yoga Node = m Yoga Node ;  while  ( yoga Node != null && yoga Node . get Layout Direction (  )  ==  Yoga Direction . INHERIT )  {     yoga Node = yoga Node . get Owner (  )  ;  } return yoga Node == null ?  Yoga Direction . INHERIT : yoga Node . get Layout Direction (  )  ; }
4050,"public void info (  String msg,  Object arg0,  Object arg1 ) {//  Ignore  ( not relevant to test failures ) }"
4051,"public  Test String Overloads View Model_ on Unbind (  On Model Unbound Listener< Test String Overloads View Model_,  Test String Overloads View> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
4052,"public void add To Collector (  Android Packageable Collector collector ) { collector . add Build Config ( get Build Target (  ) , android Build Config . get Java Package (  ) , android Build Config . get Build Config Fields (  )  )  ; }"
4053,"private void log Children (  ) {  Log . d ( TAG, ""internal representation of views on the screen"" )  ;  for  ( int i = 0 ;  i < get Child Count (  )  ;  i++ )  {      View child = get Child At ( i )  ;       Log . d ( TAG, ""item "" + get Position ( child )  + "", coord:"" + m Orientation Helper . get Decorated Start ( child )  )  ;  }  Log . d ( TAG, ""=============="" )  ; }"
4054,"private void no More Load ( int new Items Size ) { log . i ( ""no More Load!"" )  ;  int position To Notify = get Global Position Of ( m Progress Item )  ;  if  ( position To Notify >= 0 )  {     notify Item Changed ( position To Notify,  Payload . NO_MORE_LOAD )  ;  } if  ( m Endless Scroll Listener != null )  {     m Endless Scroll Listener . no More Load ( new Items Size )  ;  }}"
4055,"public static final UVC Camera Handler create Handler ( final  Activity parent, final  Camera View Interface camera View, final int width, final int height, final float bandwidth Factor ) { return create Handler ( parent, camera View, 1, width, height, UVC Camera . FRAME_FORMAT_MJPEG, bandwidth Factor )  ; }"
4056,public void set Discovery Session To Publish (  Publish Discovery Session publish Discovery Session ) { this . discovery Session To Publish = publish Discovery Session ; }
4057,"public void scale ( float scale X, float scale Y, float scale Z ) { this . transform . scale ( scale X, scale Y, scale Z )  ;  this . transform . get Scale ( scale )  ; }"
4058,"public int get Byte ( int off ) { check Offsets ( off, off + 1 )  ;  return get Byte0 ( off )  ; }"
4059,"public void perform End Session Request ( @ Non Null  End Session Request request, @ Non Null  Pending Intent completed Intent, @ Nullable  Pending Intent canceled Intent, @ Non Null  Custom Tabs Intent custom Tabs Intent ) { perform Auth Management Request ( request, completed Intent, canceled Intent, custom Tabs Intent )  ; }"
4060,"private  Type Name get Javadoc Safe Name (  Element element ) {  Types type Utils = processing Env . get Type Utils (  )  ;   Type Mirror type = element . as Type (  )  ;  if  ( type Utils . as Element ( type )  == null )  {     //  If there is no  Element, it's a primitive and can't have additional types, so we're done .      return  Class Name . get ( element . as Type (  )  )  ;  }  Name simple Name = type Utils . as Element ( type )  . get Simple Name (  )  ;  return  Class Name . best Guess ( simple Name . to String (  )  )  ; }"
4061,public T get (  )  throws  Failed Result Exception{ if  ( value != null )  {     return value ;  } throw new  Failed Result Exception ( failure )  ; }
4062,public void set Target (  Object target ) { for  (  Node node : m Nodes )  {      Animator animation = node . animation ;      if  ( animation instanceof  Animator Set )  {          (  (  Animator Set )  animation )  . set Target ( target )  ;      } else if  ( animation instanceof  Object Animator )  {          (  (  Object Animator )  animation )  . set Target ( target )  ;      } }}
4063,"public  Auto Layout Model View Model_ on Bind (  On Model Bound Listener< Auto Layout Model View Model_,  Auto Layout Model View> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
4064,public static  String get Value (  Bcfg Section Name section Name ) { return get Fragments ( section Name )  . stream (  )  . map (  Psi Element::get Text )  . collect (  Collectors . joining (  )  )  ; }
4065,public static  Instruction Codec get Format ( int opcode ) { return get ( opcode )  . get Format (  )  ; }
4066,"private static boolean is Directory (  Secure Directory Stream< Path> dir,  Path name,  Link Option .  .  .  options )  throws IO Exception{ return dir . get File Attribute View ( name,  Basic File Attribute View . class, options )  . read Attributes (  )  . is Directory (  )  ; }"
4067,"public void offset (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . offset (  )  ; "" )  ; }"
4068,"public static boolean is Simple Chinese (  String str ) { return is Regex Match ( str, REGEX_SIMPLE_CHINESE )  ; }"
4069,public static  Drawable Transition Options with Cross Fade (  ) { return new  Drawable Transition Options (  )  . cross Fade (  )  ; }
4070,"public com . anychart . core . cartesian . series .  Base With Markers hover (  Number index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hover ( %s )  ; "", index )  )  ;  return this ; }"
4071,public void on Back Key Pressed (  ) { if  ( m View Play Again Main . get Visibility (  )  ==  View . VISIBLE )  {     return To Back Class (  )  ;  } else {     if  ( m View Pause Button . get Visibility (  )  !=  View . GONE )  {         // check if already handled         pause Game (  )  ;      } else {         //  Exit and return to previous  Activity .          return To Back Class (  )  ;      } }}
4072,"public  Luminance Source rotate Counter Clockwise45 (  ) { throw new  Unsupported Operation Exception ( "" This luminance source does not support rotation by 45 degrees . "" )  ; }"
4073,public float get Cuff Pressure (  ) { return cuff Pressure ; }
4074,"public boolean [  ]  ensure Capacity ( int additional Capacity ) { if  ( additional Capacity < 0 )      throw new  Illegal Argument Exception ( ""additional Capacity must be >= 0: "" + additional Capacity )  ;  int size Needed = size + additional Capacity ;  if  ( size Needed > items . length )      resize (  Math . max (  Math . max ( 8, size Needed ) ,  ( int )   ( size * 1 . 75f )  )  )  ;  return items ; }"
4075,"public void target Needs Redraw (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . target Needs Redraw (  )  ; "" )  ; }"
4076,"public boolean checkout (  )  throws IO Exception{ try {     return do Checkout (  )  ;  } catch  (  Canceled Exception ce )  {     // AP Is     throw new IO Exception ( ce )  ;  } finally {     try {         dc . unlock (  )  ;      } finally {         if  ( performing Checkout )  {              Set< String> touched = new  Hash Set<> ( conflicts )  ;              touched . add All ( get Updated (  )  . key Set (  )  )  ;              touched . add All ( kept )  ;               Working Tree Modified Event event = new  Working Tree Modified Event ( touched, get Removed (  )  )  ;              if  ( !event . is Empty (  )  )  {                 repo . fire Event ( event )  ;              }         }     } }}"
4077,"public com . anychart . core . cartesian . series .  Continuous Range Base is Vertical (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . is Vertical ( %s )  ; "", enabled )  )  ;  return this ; }"
4078,public  Class<?> get Map Key Type (  ) { return get Map Key Type Descriptor (  )  . get Type (  )  ; }
4079,"public void draw Decor R (  Canvas canvas,  Rect rect,  Paint paint ) {}"
4080,public boolean is Connected (  Range<C> other ) { return lower Bound . compare To ( other . upper Bound )  <= 0 && other . lower Bound . compare To ( upper Bound )  <= 0 ; }
4081,"public com . anychart . core . resource .  Activities hatch Fill ( com . anychart . graphics . vector .  Hatch Fill settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
4082,"public com . anychart . core . axismarkers .  Current Price Indicator rising Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rising Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4083,"public com . anychart . charts .  Pareto bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
4084,"public void left (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . left (  )  ; "" )  ; }"
4085,public  Drawable get Content Scrim (  ) { return m Content Scrim ; }
4086,"public com . anychart . core . annotations .  Horizontal Line bounds (  Number x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
4087,"public  Reflection To String Builder reflection Append Array (  Object array ) { this . get Style (  )  . reflection Append Array Detail ( this . get String Buffer (  ) , null, array )  ;  return this ; }"
4088,"public static void add User To Free Group ( final  User user )  throws  Illegal Argument Exception{ if  ( paid Group . contains ( user )  )  {     throw new  Illegal Argument Exception ( "" User all ready member of paid group . "" )  ;  } else {     if  ( !free Group . contains ( user )  )  {         free Group . add ( user )  ;      } }}"
4089,public  Repo Command set Progress Monitor (  Progress Monitor monitor ) { this . monitor = monitor ;  return this ; }
4090,"public final void set Image Asset (  String asset Name,  Image View State state ) { reset ( true )  ;  restore State ( state )  ;   Bitmap Init Task task = new  Bitmap Init Task ( this, get Context (  ) , asset Name, true )  ;  task . execute (  )  ;  invalidate (  )  ; }"
4091,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
4092,String get Trigger Event Name (  ) { return trigger Event Name ; }
4093,"private  Point F v Translate For S Center ( float s Center X, float s Center Y, float scale ) { int vx Center = get Padding Left (  )  +  ( get Width (  )  - get Padding Right (  )  - get Padding Left (  )  )  / 2 ;  int vy Center = get Padding Top (  )  +  ( get Height (  )  - get Padding Bottom (  )  - get Padding Top (  )  )  / 2 ;  if  ( sat Temp == null )  {     sat Temp = new  Scale And Translate ( 0, new  Point F ( 0, 0 )  )  ;  } sat Temp . scale = scale ;  sat Temp . v Translate . set ( vx Center -  ( s Center X * scale ) , vy Center -  ( s Center Y * scale )  )  ;  fit To Bounds ( true, sat Temp )  ;  return sat Temp . v Translate ; }"
4094,"public com . anychart . core . stock . scrollerseries .  Range Step Area parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
4095,"public static void sort Descending ( int [  ]  array ) { check Not Null ( array )  ;  sort Descending ( array, 0, array . length )  ; }"
4096,"public void decode (  ) { try {     decode0 (  )  ;  } catch  (  Exception ex )  {     throw  Exception With Context . with Context ( ex, "" .  .  . while decoding debug info"" )  ;  }}"
4097,"public  Servlet Binder serve (  String path ) { if  ( path . starts With ( ""*"" )  )      return register ( new  Suffix Pipeline .  Binder ( path . substring ( 1 )  )  )  ;  throw new  Illegal Argument Exception (  Message Format . format (  Http Server Text . get (  )  . path Not Supported, path )  )  ; }"
4098,public  Builder set Hdr ( com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Hdr value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } hdr_ = value . get Number (  )  ;  on Changed (  )  ;  return this ; }
4099,"private void animate View Alpha ( final  View Group view Group, int index ) { if  ( view Group == null )  {     return ;  }  Value Animator animation = m Sub Items Shown ?  Value Animator . of Float ( 0f, 1f )  :  Value Animator . of Float ( 1f, 0f )  ;  animation . set Duration ( m Sub Items Shown ? m Animation Duration * 2 : m Animation Duration )  ;  int delay = index * m Animation Duration / m Sub Item Count ;  animation . set Start Delay ( m Sub Items Shown ? delay / 2 : 0 )  ;  animation . add Update Listener ( new  Value Animator .  Animator Update Listener (  )  {     @ Override     public void on Animation Update (  Value Animator animation )  {         float val =  ( float )  animation . get Animated Value (  )  ;          view Group . set Alpha ( val )  ;      } } )  ;  animation . start (  )  ; }"
4100,"private void change Slider ( int slider, boolean increase, int jump ) { // They differ a bit, especially in a sign flip on the vertical axis .  if  ( m Method == METHOD_HS_V_PALETTE )  {     //slider *must* equal 1     m HSV [ 2 ]  +=  ( increase ? jump : -jump )  / 256 . 0f ;      m HSV [ 2 ]  = pin To Unit ( m HSV [ 2 ]  )  ;      update All From HSV (  )  ;      m Coord [ 2 ]  = PALETTE_DIM -  ( int )   ( m HSV [ 2 ]  * PALETTE_DIM )  ;      m Swatch New . set Color (  Color . HSV To Color ( m HSV )  )  ;      set Oval Val Dimmer (  )  ;      invalidate (  )  ;  }}"
4101,protected void on Resource Loading ( @ Nullable  Drawable placeholder ) {//  Default empty . }
4102,"public void fling Captured View ( int min Left, int min Top, int max Left, int max Top ) { if  ( !m Release In Progress )  {     throw new  Illegal State Exception ( "" Cannot fling Captured View outside of a call to "" + "" Callback#on View Released"" )  ;  } m Scroller . fling ( m Captured View . get Left (  ) , m Captured View . get Top (  ) ,  ( int )   Velocity Tracker Compat . get X Velocity ( m Velocity Tracker, m Active Pointer Id ) ,  ( int )   Velocity Tracker Compat . get Y Velocity ( m Velocity Tracker, m Active Pointer Id ) , min Left, max Left, min Top, max Top )  ;  set Drag State ( STATE_SETTLING )  ; }"
4103,public static  Data high Alert (  ) { return new  Data ( HIGH_ALERT )  ; }
4104,"public void test Rev Walk Carry Uninteresting_ Wrong Clock (  )  throws  Exception{ final  Rev Commit a = commit (  )  ;  final  Rev Commit b = commit ( a )  ;  final  Rev Commit c = commit ( a )  ;  final  Rev Commit d = commit ( c )  ;  final  Rev Commit e = commit ( -1, b, d )  ;  mark Start ( d )  ;  mark Uninteresting ( e )  ;  assert Null ( "" Found an unexpected commit"", rw . next (  )  )  ; }"
4105,public  Revert Command set Progress Monitor (  Progress Monitor monitor ) { if  ( monitor == null )  {     monitor =  Null Progress Monitor . INSTANCE ;  } this . monitor = monitor ;  return this ; }
4106,"private  Declared Type injector Factory Of (  Type Mirror implementation Type ) { return types . get Declared Type ( factory Element (  ) , implementation Type )  ; }"
4107,public void set Visible ( boolean visible ) { this . visible = visible ; }
4108,"public void facebook (  String caption Or Options,  String link,  String name,  String description,  String width,  String height,  String app Id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . facebook ( %s, %s, %s, %s, %s, %s, %s )  ; "", wrap Quotes ( caption Or Options ) , wrap Quotes ( link ) , wrap Quotes ( name ) , wrap Quotes ( description ) , wrap Quotes ( width ) , wrap Quotes ( height ) , wrap Quotes ( app Id )  )  )  ; }"
4109,boolean get Use Suggested Address For Data Connections (  ) { return use Suggested Address For Data Connections ; }
4110,"public short [  ]  get Amplitude (  ) { if  ( recorder != null )  {     short [  ]  buffer = new short [ 8192 ]  ;      int read Bytes = 0 ;      while  ( read Bytes < 8192 )  {         read Bytes += recorder . read ( buffer, read Bytes, 8192 - read Bytes )  ;      }     short [  ]  copy To Return =  Arrays . copy Of ( buffer, 512 )  ;       Arrays . sort ( buffer )  ;       Log . e ( "" Audio Codec"", "" Recorder has read: "" + read Bytes + "" the maximum is: "" + buffer [ min Size - 1 ]  )  ;      return copy To Return ;  } return null ; }"
4111,"void update Remote Config Values ( final  String [  ]  keys Only, final  String [  ]  keys Except, final  Connection Queue connection Queue_, final boolean request Should Be Delayed, final  Remote Config Callback callback ) { L . d ( "" [  Module Remote Config ]   Updating remote config values, request Should Be Delayed: [ "" + request Should Be Delayed + "" ] "" )  ;   String keys Include = null ;   String keys Exclude = null ;  if  ( keys Only != null && keys Only . length > 0 )  {     //include list takes precedence     //if there is at least one item, use it     JSON Array include Array = new JSON Array (  )  ;      for  (  String key : keys Only )  {         include Array . put ( key )  ;      }     keys Include = include Array . to String (  )  ;  } else if  ( keys Except != null && keys Except . length > 0 )  {     //include list was not used, use the exclude list     JSON Array exclude Array = new JSON Array (  )  ;      for  (  String key : keys Except )  {         exclude Array . put ( key )  ;      }     keys Exclude = exclude Array . to String (  )  ;  } if  ( connection Queue_ . get Device Id (  )  . get Id (  )  == null )  {     //device ID is null, abort     L . d ( "" [  Module Remote Config ]   Remote Config value update was aborted, device ID is null"" )  ;      if  ( callback != null )  {         callback . callback ( "" Can't complete call, device ID is null"" )  ;      }     return ;  } if  ( connection Queue_ . get Device Id (  )  . temporary Id Mode Enabled (  )  || connection Queue_ . queue Contains Temporary Id Items (  )  )  {     //temporary id mode enabled, abort     L . d ( "" [  Module Remote Config ]   Remote Config value update was aborted, temporary device ID mode is set"" )  ;      if  ( callback != null )  {         callback . callback ( "" Can't complete call, temporary device ID is set"" )  ;      }     return ;  }  String request Data = connection Queue_ . prepare Remote Config Request ( keys Include, keys Exclude )  ;  L . d ( "" [  Module Remote Config ]   Remote Config request Data: [ "" + request Data + "" ] "" )  ;   Connection Processor cp = connection Queue_ . create Connection Processor (  )  ;   ( new  Immediate Request Maker (  )  )  . execute ( request Data, ""/o/sdk"", cp, request Should Be Delayed, new  Immediate Request Maker .  Internal Feedback Rating Callback (  )  {     @ Override     public void callback ( JSON Object check Response )  {         L . d ( "" [  Module Remote Config ]   Processing remote config received response, received response is null: [ "" +  ( check Response == null )  + "" ] "" )  ;          if  ( check Response == null )  {             if  ( callback != null )  {                 callback . callback ( "" Encountered problem while trying to reach the server, possibly no internet connection"" )  ;              }             return ;          }         //merge the new values into the current ones          Remote Config Value Store rcvs = load Config (  )  ;          if  ( keys Except == null && keys Only == null )  {             //in case of full updates, clear old values             rcvs . values = new JSON Object (  )  ;          }         rcvs . merge Values ( check Response )  ;           Countly . shared Instance (  )  . L . d ( "" [  Module Remote Config ]   Finished remote config processing, starting saving"" )  ;          save Config ( rcvs )  ;           Countly . shared Instance (  )  . L . d ( "" [  Module Remote Config ]   Finished remote config saving"" )  ;          if  ( callback != null )  {             callback . callback ( null )  ;          }     } }, _cly . L )  ; }"
4112,"public void in Marquee (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . in Marquee (  )  ; "" )  ; }"
4113,"public com . anychart . core . gantt . elements .  Timeline Element fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
4114,"void set Previous Session Id ( long timestamp ) { previous Session Id = timestamp ;  db Helper . insert Or Replace Key Long Value ( PREVIOUS_SESSION_ID_KEY, timestamp )  ; }"
4115,static  Source Position get Node Position ( @ Non Null  Node xml ) { return  Position Xml Parser . get Position ( xml )  ; }
4116,public UI Config<T> set Customize Group Image Enabled ( boolean value ) { this . customize Group Image Enabled = value ;  return this ; }
4117,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
4118,"public com . anychart . core . annotations .  Triangle fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
4119,"public com . anychart . charts .  Circular Gauge margin (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
4120,public  Repository get Repository (  ) { return repository ; }
4121,public  String get Ip Address (  ) { return ip Address ; }
4122,public float float Value (  ) { return  ( float )  get (  )  ; }
4123,public void set Alignment ( int alignment ) { this . text H Align = alignment ; }
4124,public  Collection<? extends  Advanced Host Resolver> get Resolvers (  ) { return  Immutable List . copy Of ( resolvers )  ; }
4125,public int size (  ) { return values . size ; }
4126,"public  Local Container Entity Manager Factory Bean entity Manager Factory (  ) { var entity Manager = new  Local Container Entity Manager Factory Bean (  )  ;  entity Manager . set Data Source ( data Source (  )  )  ;  entity Manager . set Packages To Scan ( ""com . iluwatar"" )  ;  entity Manager . set Persistence Provider ( new  Hibernate Persistence Provider (  )  )  ;  entity Manager . set Jpa Properties ( jpa Properties (  )  )  ;  return entity Manager ; }"
4127,"public static T get Parcelable ( @ Non Null final  String key, @ Non Null final  Parcelable .  Creator<T> creator ) { return get Parcelable ( key, creator, get Default Cache Double Utils (  )  )  ; }"
4128,"public void test Order (  ) { final  String [  ]  uuids = new  String [ 100 ]  ;  CLSUUID uuid = null ;  //  Put 100 CLSUUID string values into an array .  for  ( int i = 0 ;  i < 100 ;  i++ )  {     uuid = new CLSUUID ( id Manager )  ;      uuids [ i ]  = uuid . to String (  )  ;  } //  Assert that the other 99 CLSUUI Ds don't match the current index in the loop .  for  ( int i = 0 ;  i < uuids . length ;  i++ )  {     final  String uuid At Index = uuids [ i ]  ;      for  ( int j = 0 ;  j < uuids . length ;  j++ )  {         if  ( i != j )  {             assert False ( "" We shouldn't have the same uuid at another index . "", uuid At Index . equals ( uuids [ j ]  )  )  ;          }     } }}"
4129,"public com . anychart . core . cartesian . series .  Continuous Range Base bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
4130,"public com . anychart . core . gantt . elements .  Baselines Element above (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . above ( %s )  ; "", enabled )  )  ;  return this ; }"
4131,public  Animation Handler get Animation Handler (  ) { if  ( m Animation Handler == null )  {     m Animation Handler =  Animation Handler . get Instance (  )  ;  } return m Animation Handler ; }
4132,public static  Uri get Uri For Resource Id ( int resource Id ) { return new  Uri .  Builder (  )  . scheme ( LOCAL_RESOURCE_SCHEME )  . path (  String . value Of ( resource Id )  )  . build (  )  ; }
4133,"private static  Immutable Bundle extract Metadata (  Context app Context ) {  Bundle bundle = null ;  try {      Application Info ai = app Context . get Package Manager (  )  . get Application Info ( app Context . get Package Name (  ) ,  Package Manager . GET_META_DATA )  ;      bundle = ai . meta Data ;  } catch  (  Name Not Found Exception |  Null Pointer Exception e )  {      Log . d (  Constants . ENABLE_DISABLE, "" No perf enable meta data found "" + e . get Message (  )  )  ;  } return bundle != null ? new  Immutable Bundle ( bundle )  : new  Immutable Bundle (  )  ; }"
4134,public int get Length (  ) { return 32 ; }
4135,"public static final  Graphical View get Combined XY Chart View (  Context context, XY Multiple Series Dataset dataset, XY Multiple Series Renderer renderer, XY Combined Chart Def [  ]  types ) { check Parameters ( dataset, renderer )  ;   Combined XY Chart chart = new  Combined XY Chart ( dataset, renderer, types )  ;  return new  Graphical View ( context, chart )  ; }"
4136,public  Refresh Layout set Enable Over Scroll Drag ( boolean enabled ) { this . m Enable Over Scroll Drag = enabled ;  return this ; }
4137,public void push ( E e ) { add First ( e )  ; }
4138,public void surface Destroyed (  Surface Texture texture ) { //  Surface will be destroyed when we return gl Thread . surface Destroyed (  )  ; }
4139,long get Total Byte Count (  ) { return m Total Byte Count ; }
4140,"public void to Json (  Boolean stringify ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Json ( %s )  ; "", stringify )  )  ; }"
4141,public  String json Serialize String (  ) { return json Serialize (  )  . to String (  )  ; }
4142,"public static  Hash Bi Map<K, V> create (  ) { return create ( 16 )  ; }"
4143,"public  Fluent Iterable<T> map (  Function<? super E, T> function ) { return new  Lazy Fluent Iterable<> (  )  {     @ Override     public  Iterator<T> iterator (  )  {         return new  Decorating Iterator<> ( null )  {             final  Iterator<E> old Type Iterator = iterable . iterator (  )  ;              @ Override             public T compute Next (  )  {                 if  ( old Type Iterator . has Next (  )  )  {                     E candidate = old Type Iterator . next (  )  ;                      return function . apply ( candidate )  ;                  } else {                     return null ;                  }             }         } ;      } } ; }"
4144,public boolean is Loose (  ) { return loose ; }
4145,public int read (  )  throws IO Exception{ int b = in . read (  )  ;  if  ( b != -1 )  {     hasher . put Byte (  ( byte )  b )  ;  } return b ; }
4146,"public void minimum (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . minimum (  )  ; "" )  ; }"
4147,public  Context get Application Context (  ) { return context ; }
4148,"public T from (  Asset Manager asset Manager,  String asset Name ) { m Input Source = new  Input Source .  Asset Source ( asset Manager, asset Name )  ;  return self (  )  ; }"
4149,"protected void set Result (  Register Spec result ) { if  ( result == null )  {     throw new  Null Pointer Exception ( ""result == null"" )  ;  } this . result = result ; }"
4150,"public static boolean write File From IS ( final  String file Path, final  Input Stream is, final boolean append, final  On Progress Update Listener listener ) { return write File From IS (  Utils Bridge . get File By Path ( file Path ) , is, append, listener )  ; }"
4151,"public static  Rop op If Ge (  Type List types ) { return pick If ( types, IF_GEZ_INT, null, IF_GE_INT, null )  ; }"
4152,private boolean contains Null Value (  ) {  Entry [  ]  tab = table ;  for  ( int i = 0 ;  i < tab . length ;  i++ )  for  (  Entry e = tab [ i ]  ;  e != null ;  e = e . next )  if  ( e . value == null )      return true ;  return false ; }
4153,public static int to Int ( byte value ) { return value & UNSIGNED_MASK ; }
4154,"public com . anychart . charts .  Pareto id (  String id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . id ( %s )  ; "", wrap Quotes ( id )  )  )  ;  return this ; }"
4155,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
4156,"public com . anychart . charts .  Linear Gauge bounds (  Number x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
4157,"public static  Bsh Class Path get Boot Class Path (  )  throws  Class Path Exception{ if  ( boot Class Path == null )  {     try {         // String rtjar =  System . get Property ( ""java . home"" ) +""/lib/rt . jar"" ;           String rtjar = get RT Jar Path (  )  ;          URL url = new  File ( rtjar )  . to URL (  )  ;          boot Class Path = new  Bsh Class Path ( "" Boot  Class  Path"", new URL [  ]  { url } )  ;      } catch  (  Malformed URL Exception e )  {         throw new  Class Path Exception ( "" can't find boot jar: "" + e )  ;      } } return boot Class Path ; }"
4158,"public  Bitmap seek To Position And Get ( @ Int Range ( from = 0, to =  Integer . MAX_VALUE )  final int position ) { if  ( position < 0 )  {     throw new  Illegal Argument Exception ( "" Position is not positive"" )  ;  } final  Bitmap bitmap ;  synchronized  ( m Native Info Handle )  {     m Native Info Handle . seek To Time ( position, m Buffer )  ;      bitmap = get Current Frame (  )  ;  } m Invalidation Handler . send Empty Message At Time ( MSG_TYPE_INVALIDATION, 0 )  ;  return bitmap ; }"
4159,"public static long get Zip Eocd Central Directory Offset (  Byte Buffer zip End Of Central Directory ) { assert Byte Order Little Endian ( zip End Of Central Directory )  ;  return get Unsigned Int32 ( zip End Of Central Directory, zip End Of Central Directory . position (  )  + ZIP_EOCD_CENTRAL_DIR_OFFSET_FIELD_OFFSET )  ; }"
4160,"private boolean feed Input Buffer (  )  throws  Exo Playback Exception{ if  ( codec == null || codec Drain State == DRAIN_STATE_WAIT_END_OF_STREAM || input Stream Ended )  {     return false ;  } if  ( input Index < 0 )  {     input Index = codec . dequeue Input Buffer ( 0 )  ;      if  ( input Index < 0 )  {         return false ;      }     buffer . data = get Input Buffer ( input Index )  ;      buffer . clear (  )  ;  } if  ( codec Drain State == DRAIN_STATE_SIGNAL_END_OF_STREAM )  {     // that it outputs any remaining buffers before we release it .      if  ( codec Needs Eos Propagation )  {     //  Do nothing .      } else {         codec Received Eos = true ;          codec . queue Input Buffer ( input Index, 0, 0, 0,  Media Codec . BUFFER_FLAG_END_OF_STREAM )  ;          reset Input Buffer (  )  ;      }     codec Drain State = DRAIN_STATE_WAIT_END_OF_STREAM ;      return false ;  } if  ( codec Needs Adaptation Workaround Buffer )  {     codec Needs Adaptation Workaround Buffer = false ;      buffer . data . put ( ADAPTATION_WORKAROUND_BUFFER )  ;      codec . queue Input Buffer ( input Index, 0, ADAPTATION_WORKAROUND_BUFFER . length, 0, 0 )  ;      reset Input Buffer (  )  ;      codec Received Buffers = true ;      return true ;  } int result ;  int adaptive Reconfiguration Bytes = 0 ;  if  ( waiting For Keys )  {     //  We've already read an encrypted sample into buffer, and are waiting for keys .      result = C . RESULT_BUFFER_READ ;  } else {     // at the start of the buffer that also contains the first frame in the new format .      if  ( codec Reconfiguration State == RECONFIGURATION_STATE_WRITE_PENDING )  {         for  ( int i = 0 ;  i < codec Format . initialization Data . size (  )  ;  i++ )  {             byte [  ]  data = codec Format . initialization Data . get ( i )  ;              buffer . data . put ( data )  ;          }         codec Reconfiguration State = RECONFIGURATION_STATE_QUEUE_PENDING ;      }     adaptive Reconfiguration Bytes = buffer . data . position (  )  ;      result = read Source ( format Holder, buffer, false )  ;  } if  ( has Read Stream To End (  )  )  {     //  Notify output queue of the last buffer's timestamp .      last Buffer In Stream Presentation Time Us = largest Queued Presentation Time Us ;  } if  ( result == C . RESULT_NOTHING_READ )  {     return false ;  } if  ( result == C . RESULT_FORMAT_READ )  {     if  ( codec Reconfiguration State == RECONFIGURATION_STATE_QUEUE_PENDING )  {         //  We received two formats in a row .   Clear the current buffer of any reconfiguration data         // associated with the first format .          buffer . clear (  )  ;          codec Reconfiguration State = RECONFIGURATION_STATE_WRITE_PENDING ;      }     on Input Format Changed ( format Holder . format )  ;      return true ;  } //  We've read a buffer .  if  ( buffer . is End Of Stream (  )  )  {     if  ( codec Reconfiguration State == RECONFIGURATION_STATE_QUEUE_PENDING )  {         //  We received a new format immediately before the end of the stream .   We need to clear         // the corresponding reconfiguration data from the current buffer, but re-write it into         // a subsequent buffer if there are any  ( e . g .  if the user seeks backwards )  .          buffer . clear (  )  ;          codec Reconfiguration State = RECONFIGURATION_STATE_WRITE_PENDING ;      }     input Stream Ended = true ;      if  ( !codec Received Buffers )  {         process End Of Stream (  )  ;          return false ;      }     try {         if  ( codec Needs Eos Propagation )  {         //  Do nothing .          } else {             codec Received Eos = true ;              codec . queue Input Buffer ( input Index, 0, 0, 0,  Media Codec . BUFFER_FLAG_END_OF_STREAM )  ;              reset Input Buffer (  )  ;          }     } catch  (  Crypto Exception e )  {         throw  Exo Playback Exception . create For Renderer ( e, get Index (  )  )  ;      }     return false ;  } if  ( waiting For First Sync Sample && !buffer . is Key Frame (  )  )  {     buffer . clear (  )  ;      if  ( codec Reconfiguration State == RECONFIGURATION_STATE_QUEUE_PENDING )  {         //  The buffer we just cleared contained reconfiguration data .   We need to re-write this         // data into a subsequent buffer  ( if there is one )  .          codec Reconfiguration State = RECONFIGURATION_STATE_WRITE_PENDING ;      }     return true ;  } waiting For First Sync Sample = false ;  boolean buffer Encrypted = buffer . is Encrypted (  )  ;  waiting For Keys = should Wait For Keys ( buffer Encrypted )  ;  if  ( waiting For Keys )  {     return false ;  } if  ( codec Needs Discard To Sps Workaround && !buffer Encrypted )  {      Nal Unit Util . discard To Sps ( buffer . data )  ;      if  ( buffer . data . position (  )  == 0 )  {         return true ;      }     codec Needs Discard To Sps Workaround = false ;  } try {     long presentation Time Us = buffer . time Us ;      if  ( buffer . is Decode Only (  )  )  {         decode Only Presentation Timestamps . add ( presentation Time Us )  ;      }     if  ( waiting For First Sample In Format )  {         format Queue . add ( presentation Time Us, input Format )  ;          waiting For First Sample In Format = false ;      }     largest Queued Presentation Time Us =  Math . max ( largest Queued Presentation Time Us, presentation Time Us )  ;      buffer . flip (  )  ;      on Queue Input Buffer ( buffer )  ;      if  ( buffer Encrypted )  {          Media Codec .  Crypto Info crypto Info = get Framework Crypto Info ( buffer, adaptive Reconfiguration Bytes )  ;          codec . queue Secure Input Buffer ( input Index, 0, crypto Info, presentation Time Us, 0 )  ;      } else {         codec . queue Input Buffer ( input Index, 0, buffer . data . limit (  ) , presentation Time Us, 0 )  ;      }     reset Input Buffer (  )  ;      codec Received Buffers = true ;      codec Reconfiguration State = RECONFIGURATION_STATE_NONE ;      decoder Counters . input Buffer Count++ ;  } catch  (  Crypto Exception e )  {     throw  Exo Playback Exception . create For Renderer ( e, get Index (  )  )  ;  } return true ; }"
4161,"public byte [  ]  sign ( byte [  ]  message )  throws  Secure Message Wrap Exception{ if  ( null == private Key )  {     throw new  Null Argument Exception ( "" Private key was not provided"" )  ;  } if  ( null == message )  {     throw new  Null Argument Exception ( "" No message was provided"" )  ;  } byte [  ]  signed Message = process ( this . private Key . to Byte Array (  ) , null, message, SECURE_MESSAGE_SIGN )  ;  if  ( null == signed Message )  {     throw new  Secure Message Wrap Exception (  )  ;  } return signed Message ; }"
4162,"public static boolean is Silently Ignored (  Path path ) {  String file Name = path . get File Name (  )  . to String (  )  ;  return "" . gitkeep"" . equals Ignore Case ( file Name )  || "" . svn"" . equals Ignore Case ( file Name )  || "" . git"" . equals Ignore Case ( file Name )  || "" . ds_store"" . equals Ignore Case ( file Name )  ||  More Strings . ends With Ignore Case ( file Name, "" . scc"" )  || ""cvs"" . equals Ignore Case ( file Name )  || ""thumbs . db"" . equals Ignore Case ( file Name )  || ""picasa . ini"" . equals Ignore Case ( file Name )  || file Name . ends With ( ""~"" )  ; }"
4163,public static  Listening Scheduled Executor Service no Op Scheduled Executor (  ) { return new  No Op Scheduled Executor Service (  )  ; }
4164,"public static  Immersion Bar with ( @ Non Null  Fragment fragment, boolean is Only ) { return get Retriever (  )  . get ( fragment, is Only )  ; }"
4165,public synchronized  Throwable get Cause (  ) { if  ( cause == this )  {     return null ;  } return cause ; }
4166,"private  String serialize Triggers To String (  Multimap< String,  Trigger> triggers ) { try {     final  Byte Array Output Stream output Stream = new  Byte Array Output Stream (  )  ;      final  Object Output Stream object Output Stream = new  Object Output Stream ( output Stream )  ;      object Output Stream . write Object ( triggers )  ;      return new  String (  Base64 Codec . encode Base64 ( output Stream . to Byte Array (  )  )  )  ;  } catch  ( IO Exception e )  {      Log . e ( e )  ;      return null ;  }}"
4167,public void set Highlight Strength ( float _highlight Strength ) { m Highlight Strength = _highlight Strength ;  for  (  Pie Model model : m Pie Data )  {     highlight Slice ( model )  ;  } invalidate Global (  )  ; }
4168,"public com . anychart . core . ui .  Legend Item disable Pointer Events (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . disable Pointer Events ( %s )  ; "", enabled )  )  ;  return this ; }"
4169,synchronized boolean add Topic Operation (  Topic Operation topic Operation ) { return topic Operations Queue . add ( topic Operation . serialize (  )  )  ; }
4170,"public void set Idle Connection Timeout ( int idle Connection Timeout,  Time Unit time Unit ) { long timeout =  Time Unit . SECONDS . convert ( idle Connection Timeout, time Unit )  ;  if  ( timeout == 0 && idle Connection Timeout > 0 )  {     this . idle Connection Timeout Sec = 1 ;  } else {     this . idle Connection Timeout Sec =  ( int )  timeout ;  } if  ( is Started (  )  )  {     proxy Server . set Idle Connection Timeout ( idle Connection Timeout Sec )  ;  }}"
4171,public void delete Reference (  ) { if  ( decrease Ref Count (  )  == 0 )  {     T deleted ;      synchronized  ( this )  {         deleted = m Value ;          m Value = null ;      }     if  ( deleted != null )  {         m Resource Releaser . release ( deleted )  ;          remove Live Reference ( deleted )  ;      } }}
4172,public static  Glide Options disk Cache Strategy Of ( @ Non Null  Disk Cache Strategy strategy ) { return new  Glide Options (  )  . disk Cache Strategy ( strategy )  ; }
4173,"protected  Optional< Immutable List< Macro Expander<? extends  Macro, ?>>> get Macro Handler ( @ Suppress Warnings ( ""unused"" )   Build Target build Target, @ Suppress Warnings ( ""unused"" )   Project Filesystem filesystem, @ Suppress Warnings ( ""unused"" )   Build Rule Resolver resolver,  Target Graph target Graph, @ Suppress Warnings ( ""unused"" )  T args ) { return  Optional . of (  Immutable List . of ( new  Classpath Macro Expander (  ) , new  Classpath Abi Macro Expander (  ) , new  Executable Macro Expander<> (  Executable Macro . class ) , new  Executable Macro Expander<> (  Executable Target Macro . class ) , new  Worker Macro Expander (  ) ,  Location Macro Expander . INSTANCE, new  Maven Coordinates Macro Expander (  ) , new  Query Targets Macro Expander ( target Graph ) , new  Query Outputs Macro Expander ( target Graph ) , new  Query Paths Macro Expander ( target Graph ) , new  Query Targets And Outputs Macro Expander ( target Graph )  )  )  ; }"
4174,"public void write Contents To Path (  String contents,  Artifact artifact )  throws IO Exception{  Preconditions . check State ( !artifact . is Source (  ) , "" Write destination should be a  Build  Artifact"" )  ;   Path path = resolve To Path ( artifact )  ;  filesystem . create Parent Dirs ( path )  ;  filesystem . write Contents To Path ( contents, path )  ; }"
4175,"public com . anychart . charts .  Cartesian3d label (  String index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , wrap Quotes ( settings )  )  )  ;  return this ; }"
4176,"public final  Short Buffer put ( short [  ]  src ) { return put ( src, 0, src . length )  ; }"
4177,"public void put Next Entry (  Tinker Zip Entry ze )  throws IO Exception{ if  ( current Entry != null )  {     close Entry (  )  ;  } //  Did this  Zip Entry specify a method, or should we use the default? int method = ze . get Method (  )  ;  if  ( method == -1 )  {     method = default Compression Method ;  } //  If the method is STORED, check that the  Zip Entry was configured appropriately .  if  ( method == STORED )  {     if  ( ze . get Compressed Size (  )  == -1 )  {         ze . set Compressed Size ( ze . get Size (  )  )  ;      } else if  ( ze . get Size (  )  == -1 )  {         ze . set Size ( ze . get Compressed Size (  )  )  ;      }     if  ( ze . get Crc (  )  == -1 )  {         throw new  Zip Exception ( ""STORED entry missing CRC"" )  ;      }     if  ( ze . get Size (  )  == -1 )  {         throw new  Zip Exception ( ""STORED entry missing size"" )  ;      }     if  ( ze . size != ze . compressed Size )  {         throw new  Zip Exception ( ""STORED entry size/compressed size mismatch"" )  ;      } } check Open (  )  ;  // check And Set Zip64 Requirements ( ze )  ;  //zhangshaowen edit here, we just want the same time and mod Date ze . comment = null ;  ze . extra = null ;  ze . time = TIME_CONST ;  ze . mod Date = MOD_DATE_CONST ;  name Bytes = ze . name . get Bytes (  Standard Charsets . UTF_8 )  ;  check Size Is Within Short ( "" Name"", name Bytes )  ;  entry Comment Bytes = BYTE ;  if  ( ze . comment != null )  {     entry Comment Bytes = ze . comment . get Bytes (  Standard Charsets . UTF_8 )  ;      //  The comment is not written out until the entry is finished, but it is validated here     // to fail-fast .      check Size Is Within Short ( "" Comment"", entry Comment Bytes )  ;  } // def . set Level ( compression Level )  ;  ze . set Method ( method )  ;  current Entry = ze ;  current Entry . local Header Rel Offset = offset ;  entries . add ( current Entry . name )  ;  //  Local file header .  // http://www . pkware . com/documents/casestudies/APPNOTE . TXT int flags =  ( method == STORED )  ? 0 :  Tinker Zip File . GPBF_DATA_DESCRIPTOR_FLAG ;  //  Java always outputs UTF-8 filenames .   (  Before  Java 7, the RI didn't set this flag and used // modified UTF-8 .   From  Java 7, when using UTF_8 it sets this flag and uses normal UTF-8 .  )  flags |=  Tinker Zip File . GPBF_UTF8_FLAG ;  //  Entry header write Long As Uint32 ( out, LOCSIG )  ;  //  Minimum version needed to extract .  write Int As Uint16 ( out, ZIP_VERSION_2_0 )  ;  write Int As Uint16 ( out, flags )  ;  write Int As Uint16 ( out, method )  ;  // zhangshaowen edit here, we just want the same time and mod Date // if  ( current Entry . get Time (  )  == -1 )  { //     current Entry . set Time (  System . current Time Millis (  )  )  ;  // } write Int As Uint16 ( out, current Entry . time )  ;  write Int As Uint16 ( out, current Entry . mod Date )  ;  if  ( method == STORED )  {     write Long As Uint32 ( out, current Entry . crc )  ;      /*if  ( current Entry Needs Zip64 )  {             // NOTE:  According to the spec, we're allowed to use these fields under zip64             // as long as the sizes are <= 4 G  ( and omit writing the zip64 extended information header )  .              //             //  For simplicity, we write the zip64 extended info here even if we only need it             // in the central directory  ( i . e, the case where we're turning on zip64 because the             // offset to this entries LFH is > 0x FFFFFFFF )  .              out . write ( ZIP64_PLACEHOLDER_BYTES )  ;   // compressed size             out . write ( ZIP64_PLACEHOLDER_BYTES )  ;   // uncompressed size         } else {             write Long As Uint32 ( out, current Entry . size )  ;              write Long As Uint32 ( out, current Entry . size )  ;          }*/     write Long As Uint32 ( out, current Entry . size )  ;      write Long As Uint32 ( out, current Entry . size )  ;  } else {     write Long As Uint32 ( out, 0 )  ;      write Long As Uint32 ( out, 0 )  ;      write Long As Uint32 ( out, 0 )  ;  } write Int As Uint16 ( out, name Bytes . length )  ;  /*if  ( current Entry Needs Zip64 )  {          Zip64 . insert Zip64 Extended Info To Extras ( current Entry )  ;      }*/ if  ( current Entry . extra != null )  {     write Int As Uint16 ( out, current Entry . extra . length )  ;  } else {     write Int As Uint16 ( out, 0 )  ;  } out . write ( name Bytes )  ;  if  ( current Entry . extra != null )  {     out . write ( current Entry . extra )  ;  }}"
4178,public boolean is Use Custom Inner Value (  ) { return m Use Custom Inner Value ; }
4179,public static void call On Cancellation Requested ( @ Nullable  List< Producer Context Callbacks> callbacks ) { if  ( callbacks == null )  {     return ;  } for  (  Producer Context Callbacks callback : callbacks )  {     callback . on Cancellation Requested (  )  ;  }}
4180,"public DL Plugin Package load Apk (  String dex Path ) { // by host .  return load Apk ( dex Path, true )  ; }"
4181,"public  Closeable Reference< Bitmap> decode JPEG From Encoded Image With Color Space ( final  Encoded Image encoded Image,  Bitmap .  Config bitmap Config, @ Nullable  Rect region To Decode, int length, @ Nullable final  Color Space color Space ) {  Bitmap Factory .  Options options = get Bitmap Factory Options ( encoded Image . get Sample Size (  ) , bitmap Config )  ;  if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . O )  {      Oreo Utils . set Color Space ( options, color Space )  ;  } final  Closeable Reference< Pooled Byte Buffer> bytes Ref = encoded Image . get Byte Buffer Ref (  )  ;   Preconditions . check Not Null ( bytes Ref )  ;  try {      Bitmap bitmap = decode JPEG Byte Array As Purgeable ( bytes Ref, length, options )  ;      return pin Bitmap ( bitmap )  ;  } finally {      Closeable Reference . close Safely ( bytes Ref )  ;  }}"
4182,public static  Executor new Sequential Executor (  Executor delegate ) { return new  Sequential Executor ( delegate )  ; }
4183,"public void close Connection (  Terminal Bridge bridge, boolean kill Process ) { if  ( kill Process )  {     bridges . remove ( bridge )  ;      m Host Bridge Map . remove ( bridge . get Id (  )  )  ;      if  ( m Service . get Process ( bridge . get Id (  )  )  . is Alive (  )  )  {          Intent intent = new  Intent ( m Service, m Service . get Class (  )  )  ;          intent . set Action (  Constants . ACTION_KILL_PROCESS )  ;          intent . put Extra (  Constants . EXTRA_PROXY_PORT, bridge . get Id (  )  )  ;          m Service . start Service ( intent )  ;      } } if  ( m Disconnect Handler != null )  {      Message . obtain ( m Disconnect Handler, -1, bridge )  . send To Target (  )  ;  }}"
4184,"public void test No Attributes (  )  throws  Exception{ write Trash File ( ""l0 . txt"", """" )  ;  write Trash File ( ""level1/l1 . txt"", """" )  ;  write Trash File ( ""level1/level2/l2 . txt"", """" )  ;  //  Adds file to index git . add (  )  . add Filepattern ( "" . "" )  . call (  )  ;  try  (  Tree Walk walk = begin Walk (  )  )  {     assert Iteration ( walk, F, ""l0 . txt"" )  ;      assert Iteration ( walk, D, ""level1"" )  ;      assert Iteration ( walk, F, ""level1/l1 . txt"" )  ;      assert Iteration ( walk, D, ""level1/level2"" )  ;      assert Iteration ( walk, F, ""level1/level2/l2 . txt"" )  ;      assert False ( "" Not all files tested"", walk . next (  )  )  ;  }}"
4185,public static  Jackson Converter Factory create (  ) { return create ( new  Object Mapper (  )  )  ; }
4186,public static  Abs Path normalize (  Abs Path path ) { return  Abs Path . of ( normalize ( path . get Path (  )  )  )  ; }
4187,"public  Task< Void> update Children ( @ Non Null  Map< String,  Object> update ) { return update Children Internal ( update, null )  ; }"
4188,"public void on Scan Result ( final int callback Type, @ Non Null final  Scan Result result ) {}"
4189,Sync Configuration .  Builder session Stop Policy (  Os Realm Config .  Sync Session Stop Policy policy ) { session Stop Policy = policy ;  return this ; }
4190,"public com . anychart . core . resource .  Activities stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4191,"public com . anychart . charts .  Waterfall padding (  Number value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
4192,protected void widget Click (  View v ) {}
4193,"public com . anychart . core . ui .  Callout padding (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
4194,"public  Banner set Indicator (  Indicator indicator, boolean attach To Banner ) { remove Indicator (  )  ;  indicator . get Indicator Config (  )  . set Attach To Banner ( attach To Banner )  ;  this . m Indicator = indicator ;  init Indicator (  )  ;  return this ; }"
4195,"public  Drawable new Drawable (  String name,  Color tint ) { return new Drawable ( get Drawable ( name ) , tint )  ; }"
4196,public  Complete Builder null Column Hack ( @ Nullable  String null Column Hack ) { this . null Column Hack = null Column Hack ;  return this ; }
4197,"private static void validate Initialized (  ) { if  ( !is Initialized . get (  )  )  {     throw new  Facebook Sdk Not Initialized Exception ( "" The  User Setting Manager has not been initialized successfully"" )  ;  }}"
4198,public  String get First (  Mp4 Field Key mp4 Key )  throws  Key Not Found Exception{ if  ( mp4 Key == null )  {     throw new  Key Not Found Exception (  )  ;  } return super . get First ( mp4 Key . get Field Name (  )  )  ; }
4199,public void rollover (  ) { lock . lock (  )  ;  try {     //  Note:  This method needs to be synchronized because it needs exclusive     // access while it closes and then re-opens the target file .      //     // make sure to close the hereto active log file!  Renaming under windows     // does not work for open files .      this . close Output Stream (  )  ;      attempt Rollover (  )  ;      attempt Open File (  )  ;  } finally {     lock . unlock (  )  ;  }}
4200,public boolean is Metering Enabled (  ) { return metering Enabled ; }
4201,"public void set Double (  String field Name, double value ) { check Non Empty Field Name ( field Name )  ;  base Realm . check If Valid And In Transaction (  )  ;  field Name = map Field Name To Internal Name ( field Name )  ;  check Type ( field Name,  Realm Field Type . DOUBLE )  ;  os Results . set Double ( field Name, value )  ; }"
4202,"private void init Axis (  Axis axis, int position ) { if  ( null == axis )  {     return ;  } init Axis Attributes ( axis, position )  ;  init Axis Margin ( axis, position )  ;  init Axis Measurements ( axis, position )  ; }"
4203,public int get Keys Hidden Value (  ) { return keys Hidden_ ; }
4204,"public void font Weight (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Weight (  )  ; "" )  ; }"
4205,private void cancel Listener (  ) { if  ( m Activity != null )  {     if  ( m Fits Keyboard != null )  {         m Fits Keyboard . cancel (  )  ;          m Fits Keyboard = null ;      }     EMUI3 Navigation Bar Observer . get Instance (  )  . remove On Navigation Bar Listener ( this )  ;       Navigation Bar Observer . get Instance (  )  . remove On Navigation Bar Listener ( m Bar Params . on Navigation Bar Listener )  ;  }}
4206,"void mark Idle (  ) { // which case the previous idle timeout still applies )  .  if  ( this . is Open (  )  && idle Timer == null )  {     idle Timer = worker Queue . enqueue After Delay ( this . idle Timer Id, IDLE_TIMEOUT_MS, idle Timeout Runnable )  ;  }}"
4207,"public  Comment Preview Pager Adapter set Current Item ( int position ) { if  ( position == 1 && html Fragment != null )  {     html Fragment . set Text ( get Comment Text (  ) , repo )  ;  } return this ; }"
4208,public  Vector3 multiply ( @ Non Null  Vector3 v ) { x *= v . x ;  y *= v . y ;  z *= v . z ;  return this ; }
4209,public void skip Bits ( int num Bits ) { int num Bytes = num Bits / 8 ;  byte Offset += num Bytes ;  bit Offset += num Bits -  ( num Bytes * 8 )  ;  if  ( bit Offset > 7 )  {     byte Offset++ ;      bit Offset -= 8 ;  } assert Valid Offset (  )  ; }
4210,"public com . anychart . charts .  Sunburst normal (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . normal ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4211,public static  Float Buffer new Float Buffer ( int capacity ) { return new  Read Write Float Array Buffer ( capacity )  ; }
4212,public  Repo Command set URI (  String uri ) { this . base Uri = uri ;  return this ; }
4213,public  String [  ]  get Supported Cipher Suites (  ) { return ssl Socket Factory . get Default Cipher Suites (  )  ; }
4214,"void handle EOD (  Encoder Context context,  String Builder buffer ) { int unwritten =  ( buffer . length (  )  / 3 )  * 2 ;  int rest = buffer . length (  )  % 3 ;  int cur Codeword Count = context . get Codeword Count (  )  + unwritten ;  context . update Symbol Info ( cur Codeword Count )  ;  int available = context . get Symbol Info (  )  . get Data Capacity (  )  - cur Codeword Count ;  if  ( rest == 2 )  {     // Shift 1     buffer . append ( '\0' )  ;      while  ( buffer . length (  )  >= 3 )  {         write Next Triplet ( context, buffer )  ;      }     if  ( context . has More Characters (  )  )  {         context . write Codeword (  High Level Encoder . C40_UNLATCH )  ;      } } else if  ( available == 1 && rest == 1 )  {     while  ( buffer . length (  )  >= 3 )  {         write Next Triplet ( context, buffer )  ;      }     if  ( context . has More Characters (  )  )  {         context . write Codeword (  High Level Encoder . C40_UNLATCH )  ;      }     // else no unlatch     context . pos-- ;  } else if  ( rest == 0 )  {     while  ( buffer . length (  )  >= 3 )  {         write Next Triplet ( context, buffer )  ;      }     if  ( available > 0 || context . has More Characters (  )  )  {         context . write Codeword (  High Level Encoder . C40_UNLATCH )  ;      } } else {     throw new  Illegal State Exception ( "" Unexpected case .   Please report!"" )  ;  } context . signal Encoder Change (  High Level Encoder . ASCII_ENCODATION )  ; }"
4215,"public static void detach (  Activity activity,  View Tree Observer .  On Global Layout Listener l ) {  View Group content View = activity . find View By Id ( android . R . id . content )  ;  if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . JELLY_BEAN )  {     content View . get View Tree Observer (  )  . remove On Global Layout Listener ( l )  ;  } else {     //noinspection deprecation     content View . get View Tree Observer (  )  . remove Global On Layout Listener ( l )  ;  }}"
4216,"public static  String join (  String separator, float .  .  .  array ) { check Not Null ( separator )  ;  if  ( array . length == 0 )  {     return """" ;  } //  For pre-sizing a builder, just get the right order of magnitude  String Builder builder = new  String Builder ( array . length * 12 )  ;  builder . append ( array [ 0 ]  )  ;  for  ( int i = 1 ;  i < array . length ;  i++ )  {     builder . append ( separator )  . append ( array [ i ]  )  ;  } return builder . to String (  )  ; }"
4217,"public com . anychart . core .  State Settings negative Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . negative Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4218,private static int get Source Uri Type ( final  Uri uri ) { if  ( uri == null )  {     return SOURCE_TYPE_UNKNOWN ;  } if  (  Uri Util . is Network Uri ( uri )  )  {     return SOURCE_TYPE_NETWORK ;  } else if  (  Uri Util . is Local File Uri ( uri )  )  {     if  (  Media Utils . is Video (  Media Utils . extract Mime ( uri . get Path (  )  )  )  )  {         return SOURCE_TYPE_LOCAL_VIDEO_FILE ;      } else {         return SOURCE_TYPE_LOCAL_IMAGE_FILE ;      } } else if  (  Uri Util . is Local Content Uri ( uri )  )  {     return SOURCE_TYPE_LOCAL_CONTENT ;  } else if  (  Uri Util . is Local Asset Uri ( uri )  )  {     return SOURCE_TYPE_LOCAL_ASSET ;  } else if  (  Uri Util . is Local Resource Uri ( uri )  )  {     return SOURCE_TYPE_LOCAL_RESOURCE ;  } else if  (  Uri Util . is Data Uri ( uri )  )  {     return SOURCE_TYPE_DATA ;  } else if  (  Uri Util . is Qualified Resource Uri ( uri )  )  {     return SOURCE_TYPE_QUALIFIED_RESOURCE ;  } else {     return SOURCE_TYPE_UNKNOWN ;  }}
4219,public boolean has Navigtion Bar (  ) { return m Has Navigation Bar ; }
4220,"public E get ( long key, E value If Key Not Found ) { int i = binary Search ( m Keys, 0, m Size, key )  ;  if  ( i < 0 || m Values [ i ]  == DELETED )  {     return value If Key Not Found ;  } else {     return  ( E )  m Values [ i ]  ;  }}"
4221,"public  View Tree Assert does Not Have Visible Text (  ) { final  Immutable List< View> path = get Path To Visible Matching Text ( "" . +"" )  ;   Java6 Assertions . assert That ( path )  . overriding Error Message ( "" Found text \""%s\"" in view hierarchy for path: %s"", get Text Proof ( path ) , make String ( path )  )  . is Null (  )  ;  return this ; }"
4222,"public com . anychart . standalones .  Data Grid max Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
4223,public boolean remove ( final  Cache Key key ) {  Preconditions . check Not Null ( key )  ;  final  Encoded Image encoded Image ;  synchronized  ( this )  {     encoded Image = m Map . remove ( key )  ;  } if  ( encoded Image == null )  {     return false ;  } try {     return encoded Image . is Valid (  )  ;  } finally {     encoded Image . close (  )  ;  }}
4224,public  Build Target get Build Target (  ) { return build Target ; }
4225,Immutable Set< Artifact> get Outputs (  ) { return registry . get Outputs (  )  ; }
4226,"public static  Immutable List< Integer> write String Table From Strings (  Iterable< String> strings,  Output Stream output )  throws IO Exception{ return write String Table (  Rich Stream . from ( strings )  . map (  s -> new  Entry ( s . get Bytes (  Charsets . UTF_8 )  )  )  . to Immutable List (  ) , output )  ; }"
4227,"public  Complete Builder with Query ( @ Non Null  Query query ) { check Not Null ( query, "" Please specify query"" )  ;  return new  Complete Builder ( stor IOSQ Lite, query )  ; }"
4228,"private static void view To String (  Debug Component component,  String Builder sb, boolean embedded, boolean with Props, int depth, int left Offset, int top Offset, @ Nullable  Debug Component Description Helper .  Extra Description extra Description ) { write Indent By Depth ( sb, depth )  ;   Debug Component Description Helper . add View Description ( component, sb, left Offset, top Offset, embedded, with Props, extra Description )  ;  sb . append ( ""\n"" )  ;  final  Rect bounds = component . get Bounds In Litho View (  )  ;  for  (  Debug Component child : component . get Child Components (  )  )  {     view To String ( child, sb, embedded, with Props, depth + 1, bounds . left, bounds . top, extra Description )  ;  }}"
4229,void load Network Information ( @ Non Null final  Mesh Network mesh Network ) { this . mesh Network = mesh Network ;  post Value ( this )  ; }
4230,"public boolean get Boolean Manifest Value (  String preference, boolean default Value ) {  Application application =  (  Application )  firebase App . get Application Context (  )  ;  //  Check if there's metadata in the manifest setting the auto-init state .  try {      Package Manager package Manager = application . get Package Manager (  )  ;      if  ( package Manager != null )  {          Application Info application Info = package Manager . get Application Info ( application . get Package Name (  ) ,  Package Manager . GET_META_DATA )  ;          if  ( application Info != null && application Info . meta Data != null && application Info . meta Data . contains Key ( preference )  )  {             return application Info . meta Data . get Boolean ( preference )  ;          }     } } catch  (  Package Manager .  Name Not Found Exception e )  { //  This shouldn't happen since it's this app's package .   However, if it does, we want to fall // through to the default, and avoid throwing an exception } //  Return the default return default Value ; }"
4231,public int get App Key Index (  ) { return app Key Index ; }
4232,"private static long get Buck PID (  ) {  String pid =  Management Factory . get Runtime MX Bean (  )  . get Name (  )  ;  return  ( pid != null && pid . matches ( ""^\\d+@ . *$"" )  )  ?  Long . parse Long ( pid . split ( ""@"" )  [ 0 ]  )  : 0 L ; }"
4233,"public  Media Period Info copy With Start Position Us ( long start Position Us ) { return start Position Us == this . start Position Us ? this : new  Media Period Info ( id, start Position Us, content Position Us, end Position Us, duration Us, is Last In Timeline Period, is Final )  ; }"
4234,protected long edge Count (  ) { return delegate (  )  . edges (  )  . size (  )  ; }
4235,"public com . anychart . core . stock .  Plot y Grid (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Grid ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
4236,public boolean was Deleted ( @ Non Null T object ) { final  Delete Result result = results . get ( object )  ;  return result != null && result . number Of Rows Deleted (  )  > 0 ; }
4237,"void mark Internal Classes (  ) { for  ( int i = m Class Defs . length - 1 ;  i >= 0 ;  i-- )  {     m Type Ids [ m Class Defs [ i ]  . class Idx ]  . internal = true ;  } for  ( int i = 0 ;  i < m Type Ids . length ;  i++ )  {      String class Name = m Strings [ m Type Ids [ i ]  . descriptor Idx ]  ;      if  ( class Name . length (  )  == 1 )  {         // primitive class         m Type Ids [ i ]  . internal = true ;      } else if  ( class Name . char At ( 0 )  == ' [ ' )  {         m Type Ids [ i ]  . internal = true ;      } // System . out . println ( i + "" "" + //     ( m Type Ids [ i ]  . internal ? ""INTERNAL"" : ""external"" )  + "" - "" + //    m Strings [ m Type Ids [ i ]  . descriptor Idx ]  )  ;  }}"
4238,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
4239,"public static  List< Method> get Inverse Same After Serializing Methods (  ) { return  Collections . singleton List ( get Method ( ""test Inverse Serialization"" )  )  ; }"
4240,Array List< Value Node> get All Nodes (  ) { return m All Nodes ; }
4241,"public static boolean has Annotation (  Annotation Mirror mirror,  Class Name class Name ) { return has Annotation ( mirror . get Annotation Type (  )  . as Element (  ) , class Name )  ; }"
4242,"static void check Tolerance ( float tolerance ) { check Argument ( ! Float . is Na N ( tolerance ) , ""tolerance cannot be  Na N"" )  ;  check Argument ( tolerance >= 0 . 0f, ""tolerance  ( %s )  cannot be negative"", tolerance )  ;  check Argument ( float To Int Bits ( tolerance )  != NEG_ZERO_BITS, ""tolerance  ( %s )  cannot be negative"", tolerance )  ;  check Argument ( tolerance !=  Float . POSITIVE_INFINITY, ""tolerance cannot be POSITIVE_INFINITY"" )  ; }"
4243,"public com . anychart . core . stock .  Plot y Scale ( com . anychart . scales .  Scatter Base settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
4244,"void destroy (  Set< Object> destroyed ) { for  (  Filter ref : filters )  destroy Filter ( ref, destroyed )  ;  destroy Servlet ( servlet, destroyed )  ; }"
4245,"public byte [  ]  unwrap ( byte [  ]  message )  throws  Secure Message Wrap Exception{ return unwrap ( message, this . peer Public Key )  ; }"
4246,"public static  String decode (  Byte Input in, char [  ]  out )  throws UTF Data Format Exception{ int s = 0 ;  while  ( true )  {     char a =  ( char )   ( in . read Byte (  )  & 0xff )  ;      if  ( a == 0 )  {         return new  String ( out, 0, s )  ;      }     out [ s ]  = a ;      if  ( a < '' )  {         s++ ;      } else if  (  ( a & 0xe0 )  == 0xc0 )  {         int b = in . read Byte (  )  & 0xff ;          if  (  ( b & 0x C0 )  != 0x80 )  {             throw new UTF Data Format Exception ( ""bad second byte"" )  ;          }         out [ s++ ]  =  ( char )   (  (  ( a & 0x1 F )  << 6 )  |  ( b & 0x3 F )  )  ;      } else if  (  ( a & 0xf0 )  == 0xe0 )  {         int b = in . read Byte (  )  & 0xff ;          int c = in . read Byte (  )  & 0xff ;          if  (  (  ( b & 0x C0 )  != 0x80 )  ||  (  ( c & 0x C0 )  != 0x80 )  )  {             throw new UTF Data Format Exception ( ""bad second or third byte"" )  ;          }         out [ s++ ]  =  ( char )   (  (  ( a & 0x0 F )  << 12 )  |  (  ( b & 0x3 F )  << 6 )  |  ( c & 0x3 F )  )  ;      } else {         throw new UTF Data Format Exception ( ""bad byte"" )  ;      } }}"
4247,public boolean is Compression (  ) { return compression ; }
4248,"public com . anychart . core . annotations .  Triangle triangle (  String settings ) { return new com . anychart . core . annotations .  Triangle (  String . format (  Locale . US, js Base + "" . triangle ( %s ) "", wrap Quotes ( settings )  )  )  ; }"
4249,String get Subject (  ) { return m Subject ; }
4250,public  Optional< Buck Target Pattern> resolve (  String other ) { return parse ( other )  . map ( this::resolve )  ; }
4251,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
4252,"public com . anychart . core . axes .  Map Ticks parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
4253,"public static  String ge File From Raw (  Context context, int res Id ) { if  ( context == null )  {     return null ;  }  String Builder s = new  String Builder (  )  ;  try {      Input Stream Reader in = new  Input Stream Reader ( context . get Resources (  )  . open Raw Resource ( res Id )  )  ;       Buffered Reader br = new  Buffered Reader ( in )  ;       String line ;      while  (  ( line = br . read Line (  )  )  != null )  {         s . append ( line )  ;      }     return s . to String (  )  ;  } catch  ( IO Exception e )  {     e . print Stack Trace (  )  ;      return null ;  }}"
4254,public void set Stroke Color ( int color ) { m Paint Inactive . set Color ( color )  ;  invalidate (  )  ; }
4255,"public com . anychart . core . stock . scrollerseries .  Base low Fill ( com . anychart . graphics . vector .  Gradient Key color ) { return new com . anychart . core . stock . scrollerseries .  Base (  String . format (  Locale . US, js Base + "" . low Fill ( %s ) "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ; }"
4256,public final  String get Family Client Id (  ) { return m Family Client Id ; }
4257,"public com . anychart . core . resource .  Conflicts fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
4258,public  Class Path append Class Path (  String pathname )  throws  Not Found Exception{ return source . append Class Path ( pathname )  ; }
4259,"private static synchronized  String format And Parse (  Simple Date Format format Date,  Simple Date Format parse Date,  String text ) { try {      Date date = parse Date . parse ( text )  ;       String result = format Date . format ( date )  ;      return result ;  } catch  (  Parse Exception e )  {     logger . warning ( "" Unable to parse:"" + text )  ;  } return """" ; }"
4260,public void deregister Device (  ) { os Push . deregister Device (  )  ; }
4261,"public final void write Header (  Object To Pack otp, long raw Length )  throws IO Exception{  Object To Pack b = otp . get Delta Base (  )  ;  if  ( b != null &&  ( b . is Written (  )  & ofs Delta )  )  {     //  Non-short-circuit logic is intentional     int n = object Header ( raw Length, OBJ_OFS_DELTA, header Buffer )  ;      n = ofs Delta ( count - b . get Offset (  ) , header Buffer, n )  ;      write ( header Buffer, 0, n )  ;  } else if  ( otp . is Delta Representation (  )  )  {     int n = object Header ( raw Length, OBJ_REF_DELTA, header Buffer )  ;      otp . get Delta Base Id (  )  . copy Raw To ( header Buffer, n )  ;      write ( header Buffer, 0, n + 20 )  ;  } else {     int n = object Header ( raw Length, otp . get Type (  ) , header Buffer )  ;      write ( header Buffer, 0, n )  ;  }}"
4262,"private void log State Updates From Create Layout (  ) { if  ( ++m State Updates From Create Layout Count == STATE_UPDATES_IN_LOOP_THRESHOLD )  {      Components Reporter . emit Message (  Components Reporter .  Log Level . FATAL, STATE_UPDATES_IN_LOOP_EXCEED_THRESHOLD, "" State  Updates when create layout in progress exceeds threshold"" )  ;  }}"
4263,protected  Executor Service get Blocking Executor (  ) { return m Blocking Executor ; }
4264,protected  Subscription Info get Active Subscription Info ( int sub Id ) { if  ( subscription List == null )  {     return null ;  } for  (  Subscription Info info : subscription List )  {     if  ( info . get Subscription Id (  )  == sub Id )  {         return info ;      } } return null ; }
4265,"public com . anychart . scales .  Geo extend Data Range (  Number x,  Number y,  String var_args ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . extend Data Range ( %s, %s, %s )  ; "", x, y, wrap Quotes ( var_args )  )  )  ;  return this ; }"
4266,public int index Of Value ( float value ) { for  ( int i = 0 ;  i < m Size ;  i++ )  if  ( m Values [ i ]  == value )      return i ;  return -1 ; }
4267,"public void test Wilcard Non Ascii Subject Alt (  )  throws  Exception{ // CN=* . foo . com, subject Alt=* . bar . com, subject Alt=* . &#x82b1 ; &#x5b50 ;  . co . jp //  ( * . hanako . co . jp in kanji )  SSL Session session = session ( """" + ""-----BEGIN CERTIFICATE-----\n"" + ""MII Ec DCCA1ig Aw IB Ag IJA Iz+EYMBU6a WMA0 GC Sq GS Ib3 DQEBBQUAMI Gi M Qsw CQYD\n"" + ""VQQG Ew JDQTELM Ak GA1 UECBMC Qk Mx Ej AQ Bg NVB Ac TCV Zhbm Nvd X Zlcj EWMBQGA1 UE\n"" + "" Ch M Nd3d3 Lm N1 Y2 Jj Lm Nvb TEUMBIGA1 UE Cx QLY29tb W9uc19zc2wx HT Ab Bg NVBAMU\n"" + ""FG Rlb W9fa W50 ZX Jt ZW Rp YX Rl X2 Nh MS Uw Iw YJ Ko Z Ihvc NA Qk B Fh Zqd Wxpd X Nk YX Zp\n"" + ""ZXNAZ21ha Wwu Y29t MB4 XDTA2 MT Ix MTE2 M Tcz M Vo XDTI4 MT Ew NTE2 M Tcz M Vowga Yx\n"" + "" Cz AJ Bg NVBAYT Al VTMR Ew Dw YDVQQI Ewh NYXJ5b G Fu ZDEUMBIGA1 UE Bx ML Rm9y ZXN0\n"" + ""I Ehpb Gwx Fz AV Bg NVB Ao T Dmh0d H Bjb21wb25lbn Rz M Row GAYDVQQL Ex F0 ZXN0 IG Nl\n"" + ""cn Rp Zmlj YX Rlcz ESMBAGA1 UE Ax QJ Ki5mb28u Y29t MS Uw Iw YJ Ko Z Ihvc NA Qk B Fh Zq\n"" + ""d Wxpd X Nk YX Zp ZXNAZ21ha Wwu Y29t MIIB Ij AN Bgkqhki G9w0 BAQEFAAOCAQ8 AMIIB\n"" + "" Cg KCAQE Ay G Ovlo I+j Kn RHW Kuh YB+c TI Ew Zhag KJ0f3r IY8 W Nguj B7 Plpgpj Ug4p N\n"" + ""j YG Vi Gjg7zhfbjh Ctl NG Xy R Bti3 Gca Hi BIIP5ny C Nn+ Ay8t SW Go5v5 Zc8 B Qcw Hf0\n"" + ""ZHLN6s D9m2u V Sp/6 Uqj S5 Zyhz F5 Fzvv Uo3xw8fecdn St X Qf Hhk Bn Lp Tj HE5t7iu1\n"" + ""J Vj Tu E0pc Bvah2d Wq D Nxi IO Qt Xy KW8 Sag1 Yxaunx Q Gq R Nyk S Fi E Jindx OS An Ax K6\n"" + ""q/w Gqc Z3zv FB Tc V Vkji1u2 QH4r OMP3 P Px AI Mk B8 O Nkd H Tco1 Dmb E6 Bf DH Ar Dq U Yx\n"" + ""q J Ul P Gl Mqr Kb3f C Fi T3e Xehw R7nlz QIDAQA Bo4 Gi MI Gf M Ak GA1 Ud Ew QCMA Aw LAYJ\n"" + ""YIZIA Yb4 Qg ENBB8 WHU9w ZW5 TU0wg R2 Vu ZX Jhd G Vk IE Nlcn Rp Zmlj YX Rl MB0 GA1 Ud\n"" + "" Dg QWBB Sf F He/ Pzq2yji C Qkg WL Nr Qy16 H2 D Af Bg NVHSMEGDA Wg BR7mtq Pk Jl O Ut Ks\n"" + ""27 MD Usq Hpg0+DT Ak Bg NVHREEHT Abggkq Lm Jhci5jb22 C Diou6 Iqx5a2 Q Lm Nv Lmpw\n"" + ""MA0 GC Sq GS Ib3 DQEBBQUAA4 IBAQ Bob WC+D5/lx6 Yh X64 Cw Z26 X Ljxa E0 S415ajb Bq\n"" + ""DK7lz+ Rg7z OE3 Gs TA Mi+ld U Ynhyz0w Di XB8 Uw K Xl0 SD To B2 Z4 G Ogq Qj Aqo Mmr P0u\n"" + ""WB6 Y6dpkfd1q DR Uz I120z P Yg Sds Xj HW9q2 H77i V238hq IU7q Cv Ez+lfqq WEY504z\n"" + ""h Y Nlknb Un R525 Itos E Vw XFBJ Tk Z3 Yw8gg02c19yi8 T Ah5 Li3 Ad8 X Qmm SJMWBV4 XK\n"" + ""q Fr0 AIZK Blg6 NZZ Ff/0d P9zc Khz Sri W27b Y0 Xfz A6 G Si RD Xr Djg Xq6ba RT6 Ywg Ig\n"" + ""pg Js Db Jt Zf Hn V1nd3 M6z Ot Q Pm1 TI Qp Nm MM Md/D Pr Gc U Qer D3\n"" + ""-----END CERTIFICATE-----\n"" )  ;  X509 Certificate peer Certificate =  (  ( X509 Certificate )  session . get Peer Certificates (  )  [ 0 ]  )  ;  if  (  Platform .  Companion . is Android (  )  || platform . is Conscrypt (  )  )  {     assert That ( certificate SA Ns ( peer Certificate )  )  . contains Exactly ( ""* . bar . com"" )  ;  } else {     assert That ( certificate SA Ns ( peer Certificate )  )  . contains Exactly ( ""* . bar . com"", ""* . ������ . co . jp"" )  ;  } // try the foo . com variations assert That ( verifier . verify ( ""foo . com"", session )  )  . is False (  )  ;  assert That ( verifier . verify ( ""www . foo . com"", session )  )  . is False (  )  ;  assert That ( verifier . verify ( ""花子 . foo . com"", session )  )  . is False (  )  ;  assert That ( verifier . verify ( ""a . b . foo . com"", session )  )  . is False (  )  ;  // these checks test alternative subjects .   The test data contains an // alternative subject starting with a japanese kanji character .   This is // not supported by  Android because the underlying implementation from // harmony follows the definition from rfc 1034 page 10 for alternative // subject names .   This causes the code to drop all alternative subjects .  assert That ( verifier . verify ( ""bar . com"", session )  )  . is False (  )  ;  assert That ( verifier . verify ( ""www . bar . com"", session )  )  . is True (  )  ;  assert That ( verifier . verify ( ""花子 . bar . com"", session )  )  . is False (  )  ;  assert That ( verifier . verify ( ""a . b . bar . com"", session )  )  . is False (  )  ; }"
4268,public final  String get Package Name (  ) { return  Check Validity Util . check Valid Data ( context . get Package Name (  )  )  ; }
4269,public final byte [  ]  get Raw Buffer (  ) { return buffer ; }
4270,public  Object get Object (  ) { return object ; }
4271,public boolean check Error (  ) { flush (  )  ;  synchronized  ( lock )  {     return m Io Error ;  }}
4272,"public com . anychart . charts .  Sparkline padding (  Number value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, value3, value4 )  )  ;  return this ; }"
4273,protected final int get At (  ) { return at ; }
4274,public  Checkout Command set Create Branch ( boolean create Branch ) { check Callable (  )  ;  this . create Branch = create Branch ;  return this ; }
4275,public void bind (  List< Confetto> confetti ) { this . confetti = confetti ; }
4276,public  Byte Buffer get Head (  ) { return head ; }
4277,public static  Image Decode Options defaults (  ) { return DEFAULTS ; }
4278,"public com . anychart . graphics . vector .  Hatch Fill remove Child ( com . anychart . graphics . vector .  Element element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove Child ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
4279,"public boolean set Up (  List< Switch Video Model> url, boolean cache With Play,  String title ) { m Url List = url ;  return set Up ( url . get ( m Source Position )  . get Url (  ) , cache With Play, title )  ; }"
4280,"public com . anychart . charts .  Gantt select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4281,"public static  Animation Backend wrap Animation Backend With Inactivity Check ( final  Context context, final  Animation Backend animation Backend ) {  Animation Backend Delegate With Inactivity Check .  Inactivity Listener inactivity Listener = new  Animation Backend Delegate With Inactivity Check .  Inactivity Listener (  )  {     @ Override     public void on Inactive (  )  {         //  Forward the inactive callback to the backend if needed         if  ( animation Backend instanceof  Animation Backend Delegate With Inactivity Check .  Inactivity Listener )  {              (  (  Animation Backend Delegate With Inactivity Check .  Inactivity Listener )  animation Backend )  . on Inactive (  )  ;          }          Toast . make Text ( context, "" Animation backend inactive . "",  Toast . LENGTH_SHORT )  . show (  )  ;      } } ;  return create For Backend ( animation Backend, inactivity Listener,  Realtime Since Boot Clock . get (  ) ,  Ui Thread Immediate Executor Service . get Instance (  )  )  ; }"
4282,"public static  Receive Command to Command (  Ref old Ref,  Ref new Ref ) {  Object Id old Id = to Id ( old Ref )  ;   Object Id new Id = to Id ( new Ref )  ;   String name = old Ref != null ? old Ref . get Name (  )  : new Ref . get Name (  )  ;  if  ( old Ref != null && old Ref . is Symbolic (  )  )  {     if  ( new Ref != null )  {         if  ( new Ref . is Symbolic (  )  )  {             return  Receive Command . link ( old Ref . get Target (  )  . get Name (  ) , new Ref . get Target (  )  . get Name (  ) , name )  ;          }         //  Ref Directory Update         return  Receive Command . unlink ( old Ref . get Target (  )  . get Name (  ) , new Id, name )  ;      }     return  Receive Command . unlink ( old Ref . get Target (  )  . get Name (  ) ,  Object Id . zero Id (  ) , name )  ;  } if  ( new Ref != null && new Ref . is Symbolic (  )  )  {     if  ( old Ref != null )  {         if  ( old Ref . is Symbolic (  )  )  {             return  Receive Command . link ( old Ref . get Target (  )  . get Name (  ) , new Ref . get Target (  )  . get Name (  ) , name )  ;          }         return  Receive Command . link ( old Id, new Ref . get Target (  )  . get Name (  ) , name )  ;      }     return  Receive Command . link (  Object Id . zero Id (  ) , new Ref . get Target (  )  . get Name (  ) , name )  ;  } return new  Receive Command ( old Id, new Id, name )  ; }"
4283,public  Context get Context (  ) { return glide Context . get Base Context (  )  ; }
4284,"public com . anychart . core . axes .  Map Ticks stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4285,public boolean is Fast Scroll Always Visible (  ) { if  (  Build . VERSION . SDK_INT <  Build . VERSION_CODES . HONEYCOMB )  {     return false ;  } return m List . is Fast Scroll Always Visible (  )  ; }
4286,"public static byte [  ]  to JSON Bytes (  Object object,  Serialize Config config,  Serialize Filter [  ]  filters,  String date Format, int default Features,  Serializer Feature .  .  .  features ) { return to JSON Bytes ( IO Utils . UTF8, object, config, filters, date Format, default Features, features )  ; }"
4287,"public void test Missing Server File (  ) { URL server Url =  Remote Notifications Test . class . get Resource ( ""/not-existing . json"" )  ;   Remote Notifications remote Notifications = new  Remote Notifications (  Runtime Environment . application . get Application Context (  ) , server Url )  ;  remote Notifications . update Notifications From Server (  Update Policy . NOW )  ; }"
4288,"public  Token Request create Token Exchange Request (  ) { return create Token Exchange Request (  Collections . < String,  String>empty Map (  )  )  ; }"
4289,"public void configure ( int max Size, float purge Factor ) { lock . lock (  )  ;  try {     check Purge Factor ( purge Factor )  ;      this . maximum Size = max Size ;      this . purge Size = purge Size ( max Size, purge Factor )  ;      if  ( map . size (  )  >= maximum Size )  {         purge (  )  ;      } } finally {     lock . unlock (  )  ;  }}"
4290,public int add Utf8 Info (  String utf8 ) { output . write (  Utf8 Info . tag )  ;  output . write UTF ( utf8 )  ;  return num++ ; }
4291,public  App Updater Utils with Listener (  App Updater Listener app Updater Listener ) { this . app Updater Listener = app Updater Listener ;  return this ; }
4292,"public static  Ct Method copy (  Ct Method src,  Ct Class declaring,  Class Map map )  throws  Cannot Compile Exception{ return new  Ct Method ( src, declaring, map )  ; }"
4293,public void start ( I Support Fragment to Fragment ) { m Delegate . start ( to Fragment )  ; }
4294,"public  Data Source< Closeable Reference< Closeable Image>> fetch Decoded Image (  Image Request image Request,  Object caller Context,  Image Request .  Request Level lowest Permitted Request Level On Submit ) { return fetch Decoded Image ( image Request, caller Context, lowest Permitted Request Level On Submit, null )  ; }"
4295,"public void add ( long delay, T value ) {  Node<T> new Node = new  Node<T> ( value, delay )  ;   Node<T> prev = null ;   Node<T> next = head ;  while  ( next != null && next . delay <= new Node . delay )  {     new Node . delay -= next . delay ;      prev = next ;      next = next . next ;  } if  ( prev == null )  {     head = new Node ;  } else {     prev . next = new Node ;  } if  ( next != null )  {     next . delay -= new Node . delay ;      new Node . next = next ;  } size++ ; }"
4296,"public static  Runtime Type Adapter Factory<T> of (  Class<T> base Type ) { return new  Runtime Type Adapter Factory<T> ( base Type, ""type"" )  ; }"
4297,public void set Top View Height ( float top Fragment Height ) { transformer . set View Height (  ( int )  top Fragment Height )  ; }
4298,public int remaining (  ) { return data . remaining (  )  ; }
4299,public void set Render Mode (  Render Mode render Mode ) { this . render Mode = render Mode ;  enable Or Disable Hardware Layer (  )  ; }
4300,"public static boolean is Info Refs (  Http Servlet Request req ) { return req . get Request URI (  )  . ends With ( INFO_REFS_PATH )  && VALID_SERVICES . contains ( req . get Parameter ( ""service"" )  )  ; }"
4301,public boolean is Enabled (  ) { return src != UNASSIGNED_ADDRESS && dst != UNASSIGNED_ADDRESS ; }
4302,"public com . anychart . charts .  Tag Cloud to Angle (  Number angle ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Angle ( %s )  ; "", angle )  )  ;  return this ; }"
4303,"public void set Frequency ( float hz ) { jni Set Frequency ( addr, hz )  ; }"
4304,public  Scheduled Thread Pool Executor get Executor (  ) { return m Executor ; }
4305,"public T circle Crop (  ) { return transform (  Downsample Strategy . CENTER_INSIDE, new  Circle Crop (  )  )  ; }"
4306,"Key for Delegate Binding (  Delegate Declaration delegate Declaration,  Class<?> framework Type ) { return delegate Declaration . contribution Type (  )  . equals (  Contribution Type . MAP )  ? wrap Map Value ( delegate Declaration . key (  ) , framework Type )  : delegate Declaration . key (  )  ; }"
4307,"public static  String validate Metric Name ( @ Nullable  String str ) { if  ( str == null )  {     return "" Metric name must not be null"" ;  } else if  ( str . length (  )  >  Constants . MAX_COUNTER_ID_LENGTH )  {     return  String . format (  Locale . US, "" Metric name must not exceed %d characters"",  Constants . MAX_COUNTER_ID_LENGTH )  ;  } else if  ( str . starts With ( ""_"" )  )  {      Constants .  Counter Names [  ]  valid Counter Names =  Constants .  Counter Names . values (  )  ;      for  (  Constants .  Counter Names counter Name : valid Counter Names )  {         if  ( counter Name . to String (  )  . equals ( str )  )  {             return null ;          }     }     return "" Metric name must not start with '_'"" ;  } return null ; }"
4308,"public E await Valid ( @ Non Null final  Class<E> response Class )  throws  Request Failed Exception,  Invalid Data Exception,  Device Disconnected Exception,  Bluetooth Disabled Exception,  Invalid Request Exception,  Interrupted Exception{ final E response = await ( response Class )  ;  if  ( response != null && !response . is Valid (  )  )  {     throw new  Invalid Data Exception ( response )  ;  } return response ; }"
4309,"public static boolean add List Not Null Value (  List<V> source List, V value ) { return  ( source List != null && value != null )  ? source List . add ( value )  : false ; }"
4310,"private static  Remote Execution Metadata parse From Metadata (  Metadata grpc Metadata ) { if  ( grpc Metadata . contains Key ( REMOTE_EXECUTION_METADATA_KEY )  )  {     byte [  ]  serialised Metadata = grpc Metadata . get ( REMOTE_EXECUTION_METADATA_KEY )  ;      if  ( serialised Metadata != null )  {         try {             return  Remote Execution Metadata . parse From ( serialised Metadata )  ;          } catch  (  Invalid Protocol Buffer Exception e )  {             LOG . error ( "" Failed to parse  [ %d bytes ]  for the  Remote Execution Metadata . "", serialised Metadata . length )  ;          }     } } return  Remote Execution Metadata . get Default Instance (  )  ; }"
4311,public void add Instanceof (  String classname ) { add Opcode ( INSTANCEOF )  ;  add Index ( const Pool . add Class Info ( classname )  )  ; }
4312,"public static  String get String ( @ Non Null final  String key ) { return get String ( key, get Default SP Utils (  )  )  ; }"
4313,public void set Parent Scope (  Scriptable m ) { parent = m ; }
4314,public  Icon Drawable alpha ( int alpha ) { set Alpha ( alpha )  ;  invalidate Self (  )  ;  return this ; }
4315,public void set Protocol (  String protocol ) { this . protocol = protocol ; }
4316,"public boolean set Up (  String url, boolean cache With Play,  String title ) { return set Up ( url, cache With Play,  (  (  File )  null ) , title )  ; }"
4317,public int get Max Mem Type1 (  ) { return this . max Mem Type1 ; }
4318,"private void take Styles (  Attribute Set attrs ) { final  Typed Array a = get Context (  )  . obtain Styled Attributes ( attrs, R . styleable .  Material Calendar View, 0, 0 )  ;  final int white =  Context Compat . get Color ( get Context (  ) , android . R . color . white )  ;  final int black =  Context Compat . get Color ( get Context (  ) , android . R . color . black )  ;  final int day Disable Background =  Context Compat . get Color ( get Context (  ) , R . color . day_disabled_background_color )  ;  final int day Disable Text Color =  Context Compat . get Color ( get Context (  ) , R . color . day_disabled_text_color )  ;  final int day Selected Background =  Context Compat . get Color ( get Context (  ) , R . color . selected_day_background )  ;  final int day Current =  Context Compat . get Color ( get Context (  ) , R . color . current_day_of_month )  ;  final int end Color =  Context Compat . get Color ( get Context (  ) , R . color . weekend_color )  ;  try {     button Background Color = a . get Color ( R . styleable .  Material Calendar View_calendar Button Background Color, black )  ;      calendar Background Color = a . get Color ( R . styleable .  Material Calendar View_calendar Background Color, white )  ;      title Background Color = a . get Color ( R . styleable .  Material Calendar View_calendar Title Background Color, white )  ;      title Text Color = a . get Color ( R . styleable .  Material Calendar View_calendar Title Text Color, white )  ;      week Background Color = a . get Color ( R . styleable .  Material Calendar View_calendar Week Background Color, white )  ;      day Of Week Text Color = a . get Color ( R . styleable .  Material Calendar View_calendar Day Of Week Text Color, day Disable Text Color )  ;      day Of Month Text Color = a . get Color ( R . styleable .  Material Calendar View_calendar Day Of Month Text Color, black )  ;      disabled Day Background Color = a . get Color ( R . styleable .  Material Calendar View_calendar Disabled Day Background Color, day Disable Background )  ;      disabled Day Text Color = a . get Color ( R . styleable .  Material Calendar View_calendar Disabled Day Text Color, day Disable Text Color )  ;      selected Day Background Color = a . get Color ( R . styleable .  Material Calendar View_calendar Selected Day Background Color, day Selected Background )  ;      selected Day Text Color = a . get Color ( R . styleable .  Material Calendar View_calendar Selected Day Text Color, white )  ;      current Day Background Color = a . get Color ( R . styleable .  Material Calendar View_calendar Current Day Background Color, day Current )  ;      current Day Text Color = a . get Color ( R . styleable .  Material Calendar View_calendar Current Day Text Color, day Current )  ;      weekend Text Color = a . get Color ( R . styleable .  Material Calendar View_calendar Weekend Text Color, end Color )  ;      weekend Days = a . get Integer ( R . styleable .  Material Calendar View_calendar Weekend Days, 0 )  ;      is Overflow Date Visible = a . get Boolean ( R . styleable .  Material Calendar View_calendar Is Overflow Dates Visible, true )  ;      is Multi Select Day Enabled = a . get Boolean ( R . styleable .  Material Calendar View_calendar Is Multi Select Day Enabled, false )  ;      back Button Drawable = a . get Resource Id ( R . styleable .  Material Calendar View_calendar Back Button Drawable, R . drawable . ic_keyboard_arrow_left_black_24dp )  ;      next Button Drawable = a . get Resource Id ( R . styleable .  Material Calendar View_calendar Back Button Drawable, R . drawable . ic_keyboard_arrow_right_black_24dp )  ;  } finally {     if  ( null != a )  {         a . recycle (  )  ;      } }}"
4319,"public void fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . fill (  )  ; "" )  ; }"
4320,"private static  Timeline get Clipped Timeline (  Timeline timeline, long start Us, long end Us )  throws IO Exception{  Fake Media Source fake Media Source = new  Fake Media Source ( timeline, /* manifest= */ null )  ;   Clipping Media Source media Source = new  Clipping Media Source ( fake Media Source, start Us, end Us )  ;  return get Clipped Timelines ( fake Media Source, media Source )  [ 0 ]  ; }"
4321,public boolean has Base (  ) { return  ( stage Mask & 1 )  != 0 ; }
4322,public void should Return Empty List If Null Window Data Provided (  ) { shadow . set Windows ( null )  ;  assert That ( service . get Windows (  )  )  . is Empty (  )  ; }
4323,Layout State get Layout State (  ) { return m Layout State Ref ; }
4324,public static  Firebase Installations get Instance (  ) {  Firebase App default Firebase App =  Firebase App . get Instance (  )  ;  return get Instance ( default Firebase App )  ; }
4325,"public static byte [  ]  encrypt SHA384 ( final byte [  ]  data ) { return hash Template ( data, ""SHA-384"" )  ; }"
4326,"public  Confetti Manager set Initial Rotation ( int initial Rotation, int initial Rotation Deviation ) { this . initial Rotation = initial Rotation ;  this . initial Rotation Deviation = initial Rotation Deviation ;  return this ; }"
4327,"public void put ( @ Non Null final  String key, final  String value, final int save Time ) { m Cache Memory Utils . put ( key, value, save Time )  ;  m Cache Disk Utils . put ( key, value, save Time )  ; }"
4328,public com . google . protobuf .  Byte String get Group Id Bytes (  ) { java . lang .  Object ref = group Id_ ;  if  ( ref instanceof  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      group Id_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
4329,"public com . anychart . core . annotations .  Fibonacci Fan width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
4330,"public com . anychart . core . resource . resourcelist .  Tags Settings margin (  Number value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
4331,"public void get Selected Points (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Selected Points (  )  ; "" )  ; }"
4332,"public  Hashtable< String,  Shader Var> get Consts (  ) { return m Constants ; }"
4333,"public void position (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . position (  )  ; "" )  ; }"
4334,public byte get Raw Public Key Type (  ) { return raw Public Key Type ; }
4335,public final int compare To (  Offsetted Item other ) { if  ( this == other )  {     return 0 ;  }  Item Type this Type = item Type (  )  ;   Item Type other Type = other . item Type (  )  ;  if  ( this Type != other Type )  {     return this Type . compare To ( other Type )  ;  } return compare To0 ( other )  ; }
4336,"public long read Unsigned Varint (  Extractor Input input, boolean allow End Of Input, boolean remove Length Mask, int maximum Allowed Length )  throws IO Exception,  Interrupted Exception{ if  ( state == STATE_BEGIN_READING )  {     //  Read the first byte to establish the length .      if  ( !input . read Fully ( scratch, 0, 1, allow End Of Input )  )  {         return C . RESULT_END_OF_INPUT ;      }     int first Byte = scratch [ 0 ]  & 0x FF ;      length = parse Unsigned Varint Length ( first Byte )  ;      if  ( length == C . LENGTH_UNSET )  {         throw new  Illegal State Exception ( "" No valid varint length mask found"" )  ;      }     state = STATE_READ_CONTENTS ;  } if  ( length > maximum Allowed Length )  {     state = STATE_BEGIN_READING ;      return C . RESULT_MAX_LENGTH_EXCEEDED ;  } if  ( length != 1 )  {     //  Read the remaining bytes .      input . read Fully ( scratch, 1, length - 1 )  ;  } state = STATE_BEGIN_READING ;  return assemble Varint ( scratch, length, remove Length Mask )  ; }"
4337,"public void set GUID Value ( final GUID value ) { this . container Type . assert Constraints ( this . name, value . get Bytes (  ) , TYPE_GUID, this . stream Number, this . language Index )  ;  this . content = value . get Bytes (  )  ;  this . descriptor Type = TYPE_GUID ; }"
4338,"private boolean visit Static Field Access ( int opcode,  String owner,  String name,  String desc,  Access Right access Right ) { if  ( access Right !=  Access Right . PUBLIC )  {     switch ( opcode )  {         case  Opcodes . GETSTATIC:             if  ( DEBUG )  {                  System . out . println ( "" Get static field "" + name )  ;              }             // nothing of interest is on the stack .              visit Ldc Insn (  Type . get Type ( ""L"" + owner + "" ; "" )  )  ;              push ( name )  ;              //  Stack : <target_class>             //         <field_name>             invoke Static ( ALI_RUNTIME_TYPE,  Method . get Method ( "" Object get Static Private Field (  Class,  String ) "" )  )  ;              //  Stack : <field_value>              Byte Code Utils . unbox ( this,  Type . get Type ( desc )  )  ;              return true ;          case  Opcodes . PUTSTATIC:             if  ( DEBUG )  {                  System . out . println ( "" Set static field "" + name )  ;              }             // the new field value is on top of the stack .              // box it into an  Object .              box (  Type . get Type ( desc )  )  ;              visit Ldc Insn (  Type . get Type ( ""L"" + owner + "" ; "" )  )  ;              push ( name )  ;              //  Stack :  <boxed_field_value>             //          <target_class>             //          <field_name>             invoke Static ( ALI_RUNTIME_TYPE,  Method . get Method ( ""void set Static Private Field (  Object,  Class,  String ) "" )  )  ;              return true ;          default:             throw new  Runtime Exception ( "" Visit Static Field Access called with wrong opcode "" + opcode )  ;      } } return false ; }"
4339,public void set On Share Target Selected Listener (  On Share Target Selected Listener listener ) { m On Share Target Selected Listener = listener ;  set Activity Chooser Policy If Needed (  )  ; }
4340,public boolean is Subscribed To (  String event Name ) { return subscribed Events . contains ( event Name )  ; }
4341,"public  List< String> _get Remove Application Attribute (  ) {  List< String> remove Attr List = new  Array List< String> (  )  ;  // Let's start by determining if there is a replace property if  ( application Properties . contains Key ( ""tools:remove"" )  )  {      String replace Attrs = application Properties . get ( ""tools:remove"" )  ;       String [  ]  attrs =  String Utils . split ( replace Attrs, "","" )  ;      if  ( null != attrs && attrs . length > 0 )  {         for  (  String attr : attrs )  {             remove Attr List . add ( attr )  ;          }     } } return remove Attr List ; }"
4342,public  Message Holder on New Message Holder (  Message message ) { I Message Handler handler = handler For Message ( message )  ;  if  ( handler != null )  {     return handler . on New Message Holder ( message )  ;  } return null ; }
4343,"public static  String dump Context Tree ( @ Nullable  Component Context component Context ) { if  ( component Context == null )  {     return "" Component Context is null"" ;  } //  Getting the base of the tree  Component Tree component Tree = component Context . get Component Tree (  )  ;   Debug Component root Component =  Debug Component . get Root Instance ( component Tree )  ;  if  ( root Component == null )  {     return null ;  }  String Builder sb = new  String Builder (  )  ;  log Component ( root Component, 0, sb )  ;  return sb . to String (  )  ; }"
4344,public long get Id (  ) { return id ; }
4345,"public com . anychart . charts .  Venn palette (  String [  ]  settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "", array To String Wrap Quotes ( settings )  )  )  ;  return this ; }"
4346,"public void set Previous Account Name (  Account account,  String previous Name ) { previous Names . put ( account, previous Name )  ; }"
4347,"public static void put ( @ Non Null final  String key, @ Nullable final byte [  ]  value ) { put ( key, value, get Default Cache Disk Utils (  )  )  ; }"
4348,public  Abstract ID3v2 Frame get First Field (  String identifier ) {  Object object = get Frame ( identifier )  ;  if  ( object == null )  {     return null ;  } if  ( object instanceof  List )  {     return  (  (  List< Abstract ID3v2 Frame> )  object )  . get ( 0 )  ;  } else {     return  (  Abstract ID3v2 Frame )  object ;  }}
4349,public void set Typeface ( final int typeface ) { this . typeface = typeface ; }
4350,"public boolean pack (  Progress Monitor pm )  throws IO Exception{ if  ( pm == null )      pm =  Null Progress Monitor . INSTANCE ;  if  ( pack Config . get Index Version (  )  != 2 )      throw new  Illegal State Exception ( J Git Text . get (  )  . support Only Pack Index Version2 )  ;  start Time Millis =  System Reader . get Instance (  )  . get Current Time (  )  ;  ctx = objdb . new Reader (  )  ;  try {     refdb . refresh (  )  ;      objdb . clear Cache (  )  ;      refs Before = get All Refs (  )  ;      read Packs Before (  )  ;      read Reftables Before (  )  ;       Set< Object Id> all Heads = new  Hash Set<> (  )  ;      all Heads And Tags = new  Hash Set<> (  )  ;      all Tags = new  Hash Set<> (  )  ;      non Heads = new  Hash Set<> (  )  ;      tag Targets = new  Hash Set<> (  )  ;      for  (  Ref ref : refs Before )  {         if  ( ref . is Symbolic (  )  || ref . get Object Id (  )  == null )  {             continue ;          }         if  ( is Head ( ref )  )  {             all Heads . add ( ref . get Object Id (  )  )  ;          } else if  ( is Tag ( ref )  )  {             all Tags . add ( ref . get Object Id (  )  )  ;          } else {             non Heads . add ( ref . get Object Id (  )  )  ;          }         if  ( ref . get Peeled Object Id (  )  != null )  {             tag Targets . add ( ref . get Peeled Object Id (  )  )  ;          }     }     //  Don't exclude tags that are also branch tips .      all Tags . remove All ( all Heads )  ;      all Heads And Tags . add All ( all Heads )  ;      all Heads And Tags . add All ( all Tags )  ;      //  Hoist all branch tips and tags earlier in the pack file     tag Targets . add All ( all Heads And Tags )  ;      //  Combine the GC_REST objects into the GC pack if requested     if  ( pack Config . get Single Pack (  )  )  {         all Heads And Tags . add All ( non Heads )  ;          non Heads . clear (  )  ;      }     boolean rollback = true ;      try {         pack Heads ( pm )  ;          pack Rest ( pm )  ;          pack Garbage ( pm )  ;          objdb . commit Pack ( new Pack Desc, to Prune (  )  )  ;          rollback = false ;          return true ;      } finally {         if  ( rollback )              objdb . rollback Pack ( new Pack Desc )  ;      } } finally {     ctx . close (  )  ;  }}"
4351,public void on UI Refresh Complete (  Ptr Frame Layout frame ) { m Drawable . stop (  )  ; }
4352,public static boolean is Spec Name ( @ Nullable  String cls Name ) { return cls Name != null && cls Name . ends With ( SPEC_SUFFIX )  ; }
4353,"public com . anychart . charts .  Sunburst padding (  String padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "", wrap Quotes ( padding )  )  )  ;  return this ; }"
4354,public int get Best Scan Number (  ) { return m Best Scan Number ; }
4355,public void update (  ) { __throw If Detached (  )  ;  my Dao . update ( this )  ; }
4356,public  Object get Source (  ) { return source ; }
4357,"public com . anychart . core . cartesian . series .  Bar3d max Labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4358,"public void scroll To ( int x, int y ) { if  ( DEBUG_MODE )  {     F Log . i ( TAG, ""scroll To [ %d ]  x %d y %d"", get Id (  ) , x, y )  ;  } super . scroll To ( x, y )  ;  update State On Scroll ( x, y )  ;  set Pending Content Offsets ( x, y )  ; }"
4359,"public com . anychart . core .  State Settings low Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4360,public long get Minimum Fetch Interval In Seconds (  ) { return minimum Fetch Interval ; }
4361,"public void set Flipped Horizontally ( boolean flip Horizontally ) { if  ( m Flip Horizontally != flip Horizontally )  {     m Flip Horizontally = flip Horizontally ;      apply Image Matrix ( get Width (  ) , get Height (  ) , true, false )  ;  }}"
4362,"public void set Profile Connection State ( int profile, int state ) { profile Connection State Data . put ( profile, state )  ; }"
4363,"public com . anychart . core . stock . scrollerseries .  Spline top (  Number top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", top )  )  ;  return this ; }"
4364,"public  String to String (  ) { if  ( size (  )  <= 0 )  {     return ""{}"" ;  }  String Builder buffer = new  String Builder ( m Size * 28 )  ;  buffer . append ( '{' )  ;  for  ( int i = 0 ;  i < m Size ;  i++ )  {     if  ( i > 0 )  {         buffer . append ( "", "" )  ;      }     int key = key At ( i )  ;      buffer . append ( key )  ;      buffer . append ( '=' )  ;       Object value = value At ( i )  ;      if  ( value != this )  {         buffer . append ( value )  ;      } else {         buffer . append ( "" ( this  Map ) "" )  ;      } } buffer . append ( '}' )  ;  return buffer . to String (  )  ; }"
4365,protected void position Changed (  ) {}
4366,public void set Is Timestamp Master ( boolean is Timestamp Master ) { this . is Timestamp Master = is Timestamp Master ; }
4367,"private static  String create Due Time ( final int seconds ) { return  String . format (  Locale . get Default (  ) , ""_$%010d$_"",  System . current Time Millis (  )  / 1000 + seconds )  ; }"
4368,private  Row View Holder<CVH> get Tagged Row View Holder (  View row View ) { return  (  Row View Holder<CVH> )  row View . get Tag (  )  ; }
4369,"public boolean get Enabled (  ) { return get Delegate (  )  . get Value ( BUILDFILE_SECTION_NAME, ""enabled"" )  . map (  Boolean::parse Boolean )  . or Else ( false )  ; }"
4370,"public void test Add Two Equal Objects At Once With Null (  ) { try {     equals Tester . add Equality Group ( reference, equal Object1, null )  ;      fail ( "" Should fail on null equal object"" )  ;  } catch  (  Null Pointer Exception e )  { }}"
4371,"private int expand ( int position, boolean expand All, boolean init, boolean notify Parent ) { T item = get Item ( position )  ;  if  ( !is Expandable ( item )  )  {     return 0 ;  } I Expandable expandable =  ( I Expandable )  item ;  if  ( !has Sub Items ( expandable )  )  {     //  Clear the expanded flag     expandable . set Expanded ( false )  ;      log . w ( "" No sub Items to  Expand on position %s expanded %s"", position, expandable . is Expanded (  )  )  ;      return 0 ;  } if  ( !init && !expand All )  {     log . v ( "" Request to  Expand on position=%s expanded=%s any Parent Selected=%s"", position, expandable . is Expanded (  ) , parent Selected )  ;  } int sub Items Count = 0 ;  if  ( init || !expandable . is Expanded (  )  &&  ( !parent Selected || expandable . get Expansion Level (  )  <= m Selected Level )  )  {     //  Fetch again the new position after collapsing all!!     if  ( collapse On Expand && !expand All && collapse All ( m Min Collapsible Level )  > 0 )  {         position = get Global Position Of ( item )  ;      }     //  Every time an expansion is requested, sub Items must be taken from the     // original  Object and without the sub Items marked hidden  ( removed )       List<T> sub Items = get Expandable List ( expandable, true )  ;      m Items . add All ( position + 1, sub Items )  ;      sub Items Count = sub Items . size (  )  ;      //  Save expanded state     expandable . set Expanded ( true )  ;      // children as possible     if  ( !init && scroll On Expand && !expand All )  {         auto Scroll With Delay ( position, sub Items Count )  ;      }     //  Expand!     if  ( notify Parent )  {         notify Item Changed ( position,  Payload . EXPANDED )  ;      }     notify Item Range Inserted ( position + 1, sub Items Count )  ;      //  Show also the headers of the sub Items     if  ( !init && headers Shown )  {         int count = 0 ;          for  ( T sub Item : sub Items )  {             if  ( show Header Of ( position +  ( ++count ) , sub Item, false )  )  {                 count++ ;              }         }     }     //  Expandable as a  Scrollable  Header/ Footer     if  ( !expand SHF ( m Scrollable Headers, expandable )  )  {         expand SHF ( m Scrollable Footers, expandable )  ;      }     log . v ( ""%s %s sub Items on position=%s"",  ( init ? "" Initially expanded"" : "" Expanded"" ) , sub Items Count, position )  ;  } return sub Items Count ; }"
4372,public  Requirements get Requirements (  ) { return requirements ; }
4373,"public  Linear Layout inflate View (  Context context ) {  Layout Inflater layout Inflater =  Layout Inflater . from ( context )  ;  root Linear Layout =  (  Linear Layout )  layout Inflater . inflate ( R . layout . feedback_display_layout, this, true )  ;  return root Linear Layout ; }"
4374,"public static  List< Recorded Request> take ( int from Index Inclusive, int to Index Exclusive ) { return dispatcher . get Request History (  )  . sub List ( from Index Inclusive, to Index Exclusive )  ; }"
4375,public void set On Color Changed Listener (  On Color Changed Listener listener ) { m Listener = listener ; }
4376,public  List< Integer> get Key Indexes (  ) { return m Key Indexes ; }
4377,"public static float convert Pixels To Dp ( float px,  Context context ) {  Resources resources = context . get Resources (  )  ;   Display Metrics metrics = resources . get Display Metrics (  )  ;  float dp = px /  (  ( float )  metrics . density Dpi /  Display Metrics . DENSITY_DEFAULT )  ;  return dp ; }"
4378,public  Hash Code Builder append ( long [  ]  array ) { if  ( array == null )  {     i Total = i Total * i Constant ;  } else {     for  ( long element : array )  {         append ( element )  ;      } } return this ; }
4379,"public com . anychart . standalones .  Color Range stroke ( com . anychart . graphics . vector .  Stroke value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4380,"public static boolean validate Iv Index Input ( final  Context context, final  String input )  throws  Illegal Argument Exception{ if  (  Text Utils . is Empty ( input )  )  {     throw new  Illegal Argument Exception ( context . get String ( R . string . error_empty_iv_index )  )  ;  } final int iv Index ;  try {     iv Index =  Integer . parse Int ( input, 16 )  ;  } catch  (  Number Format Exception ex )  {     throw new  Illegal Argument Exception ( context . get String ( R . string . error_invalid_iv_index )  )  ;  } if  ( !is Valid Iv Index ( iv Index )  )  {     throw new  Illegal Argument Exception ( context . get String ( R . string . error_invalid_iv_index )  )  ;  } return true ; }"
4381,void stop Stage (  ) { set End Time Of Last Stage ( clock . get Time (  )  )  ; }
4382,"public com . anychart . core .  Separate Chart select Marquee Fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
4383,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
4384,public  String get Field Name (  ) { return field Name ; }
4385,"public int get Publish Period (  ) { return  Publication Settings . get Publish Period ( publication Resolution, publication Steps )  ; }"
4386,"public void put (  String key,  Double value ) { m Values . put ( key, value )  ; }"
4387,public  Vertical Group reverse (  ) { this . reverse = true ;  return this ; }
4388,"public  Fragment .  Saved State save Fragment Instance State (  Fragment fragment ) { throw new  Unsupported Operation Exception ( ""STUB!"" )  ; }"
4389,"public static  String compute Replacement (  Char Escaper escaper, char c ) { return string Or Null ( escaper . escape ( c )  )  ; }"
4390,"public void test Xml Dom Parses Line Numbers Correctly (  )  throws IO Exception, SAX Exception{  Document dom =  Xml Dom Parser With Line Numbers . parse (  Files . new Input Stream ( workspace . resolve (  Paths . get ( ""sample . xml"" )  )  )  )  ;   Document Location document Location =  (  Document Location )  dom . get Document Element (  )  . get First Child (  )  . get Next Sibling (  )  . get User Data (  Positional Xml Handler . LOCATION_USER_DATA_KEY )  ;  assert Equals (  Document Location . of ( 10, 43 ) , document Location )  ; }"
4391,"public com . anychart . core . venn .  Intersections stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4392,"public com . anychart . core . polar . series .  Continuous Base color Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4393,public void deny Permissions (  String .  .  .  permission Names ) { get Shadow Instrumentation (  )  . deny Permissions ( permission Names )  ; }
4394,protected E standard Poll First (  ) { return  Iterators . poll Next ( iterator (  )  )  ; }
4395,"public static void fixing Public Attrs In Provider Attributes (  File file ) { boolean saved = false ;  if  ( file . exists (  )  )  {     try {          Document doc = load Document ( file )  ;          X Path x Path = X Path Factory . new Instance (  )  . new X Path (  )  ;          X Path Expression expression = x Path . compile ( ""/manifest/application/provider"" )  ;           Object result = expression . evaluate ( doc, X Path Constants . NODESET )  ;           Node List nodes =  (  Node List )  result ;          for  ( int i = 0 ;  i < nodes . get Length (  )  ;  i++ )  {              Node node = nodes . item ( i )  ;               Named Node Map attrs = node . get Attributes (  )  ;              if  ( attrs != null )  {                  Node provider = attrs . get Named Item ( ""android:authorities"" )  ;                  if  ( provider != null )  {                     saved = is Saved ( file, saved, provider )  ;                  }             }         }         // android:scheme         x Path = X Path Factory . new Instance (  )  . new X Path (  )  ;          expression = x Path . compile ( ""/manifest/application/activity/intent-filter/data"" )  ;          result = expression . evaluate ( doc, X Path Constants . NODESET )  ;          nodes =  (  Node List )  result ;          for  ( int i = 0 ;  i < nodes . get Length (  )  ;  i++ )  {              Node node = nodes . item ( i )  ;               Named Node Map attrs = node . get Attributes (  )  ;              if  ( attrs != null )  {                  Node provider = attrs . get Named Item ( ""android:scheme"" )  ;                  if  ( provider != null )  {                     saved = is Saved ( file, saved, provider )  ;                  }             }         }         if  ( saved )  {             save Document ( file, doc )  ;          }     } catch  ( SAX Exception |  Parser Configuration Exception | IO Exception | X Path Expression Exception |  Transformer Exception ignored )  {     } }}"
4396,public static  Billing Status check Subscription Supported (  Context context ) { if  ( subscription Status ==  Billing Status . UNKNOWN )  {      Billing Service . check Subscription Supported ( context )  ;  } else {     boolean supported = subscription Status ==  Billing Status . SUPPORTED ;      on Subscription Checked ( supported )  ;  } return subscription Status ; }
4397,public boolean is Data Collection Default Enabled (  ) { check Not Deleted (  )  ;  return data Collection Config Storage . get (  )  . is Enabled (  )  ; }
4398,public void set Show Grid ( boolean show Grid ) { set Show Grid X ( show Grid )  ;  set Show Grid Y ( show Grid )  ; }
4399,"public void test Write Pack2 Deltas CRC32 Copy (  )  throws IO Exception{ final  File pack Dir = db . get Object Database (  )  . get Pack Directory (  )  ;  final  Pack File crc32 Pack = new  Pack File ( pack Dir, ""pack-34be9032ac282b11fa9babdc2b2a93ca996c9c2f . pack"" )  ;  final  Pack File crc32 Idx = new  Pack File ( pack Dir, ""pack-34be9032ac282b11fa9babdc2b2a93ca996c9c2f . idx"" )  ;  copy File ( J Git Test Util . get Test Resource File ( ""pack-34be9032ac282b11fa9babdc2b2a93ca996c9c2f . idx V2"" ) , crc32 Idx )  ;  db . open Pack ( crc32 Pack )  ;  write Verify Pack2 ( true )  ; }"
4400,"public void set Extra (  String key,  Object value ) { content . put ( key, value )  ; }"
4401,public  Network Manager . I Network Manager Builder get ( @ Non Null  Header headers ) { return new  Network Manager .  Builder (  )  . set Base Url ( base Url )  . set Context ( context )  . set Method (  Request .  Method . GET )  . set Headers ( headers . get Headers (  )  )  ; }
4402,public  Matrix4 rotate ( @ Non Null  Quaternion quat ) { if  ( m Matrix == null )  {     m Matrix = quat . to Rotation Matrix (  )  ;  } else {     quat . to Rotation Matrix ( m Matrix )  ;  } return multiply ( m Matrix )  ; }
4403,"public void check Merge Conflicting Trees Without Index (  Merge Strategy strategy )  throws  Exception{  Git git =  Git . wrap ( db )  ;  write Trash File ( ""d/1"", ""orig"" )  ;  git . add (  )  . add Filepattern ( ""d/1"" )  . call (  )  ;   Rev Commit first = git . commit (  )  . set Message ( ""added d/1"" )  . call (  )  ;  write Trash File ( ""d/1"", ""master"" )  ;   Rev Commit master Commit = git . commit (  )  . set All ( true )  . set Message ( ""modified d/1 on master"" )  . call (  )  ;  git . checkout (  )  . set Create Branch ( true )  . set Start Point ( first )  . set Name ( ""side"" )  . call (  )  ;  write Trash File ( ""d/1"", ""side"" )  ;  git . commit (  )  . set All ( true )  . set Message ( ""modified d/1 on side"" )  . call (  )  ;  git . rm (  )  . add Filepattern ( ""d/1"" )  . call (  )  ;  git . rm (  )  . add Filepattern ( ""d"" )  . call (  )  ;   Merge Result merge Res = git . merge (  )  . set Strategy ( strategy )  . include ( master Commit )  . call (  )  ;  assert Equals (  Merge Status . CONFLICTING, merge Res . get Merge Status (  )  )  ;  assert Equals ( "" [ d/1, mode:100644, stage:1, content:orig ]  [ d/1, mode:100644, stage:2, content:side ]  [ d/1, mode:100644, stage:3, content:master ] "", index State ( CONTENT )  )  ; }"
4404,public  Optional< String> get Cell Name (  ) { return  Optional . of Nullable ( cell Name )  ; }
4405,public boolean is Auto Torch Enabled (  ) { return auto Torch Enabled ; }
4406,"public void set Dip Position ( int x, int y ) { s_position . x =  Display Utils . dip2px ( x )  ;  s_position . y =  Display Utils . dip2px ( y )  ; }"
4407,"private  File file (  String word )  throws  Parse Exception{  String file Name = replace System Properties ( word )  ;   File file = new  File ( file Name )  ;  //  Try to get an absolute file .  if  ( !file . is Absolute (  )  )  {     file = new  File ( reader . get Base Dir (  ) , file Name )  ;  } return file ; }"
4408,public boolean is Fully Buffered (  ) { return prepared &&  ( !has Enabled Tracks || media Period . get Buffered Position Us (  )  == C . TIME_END_OF_SOURCE )  ; }
4409,public static boolean is Package ( int mod ) { return  ( mod &  ( PUBLIC | PRIVATE | PROTECTED )  )  == 0 ; }
4410,public void apply To (  Vector2 point ) { float x = point . x ;  float y = point . y ;  point . x = m00 * x + m01 * y + m02 ;  point . y = m10 * x + m11 * y + m12 ; }
4411,"public static  Big Integer factorial ( int n ) { check Non Negative ( ""n"", n )  ;  //  If the factorial is small enough, just use  Long Math to do it .  if  ( n <  Long Math . factorials . length )  {     return  Big Integer . value Of (  Long Math . factorials [ n ]  )  ;  } //  Pre-allocate space for our list of intermediate  Big Integers .  int approx Size =  Int Math . divide ( n *  Int Math . log2 ( n, CEILING ) ,  Long . SIZE, CEILING )  ;   Array List< Big Integer> bignums = new  Array List<> ( approx Size )  ;  //  Start from the pre-computed maximum long factorial .  int starting Number =  Long Math . factorials . length ;  long product =  Long Math . factorials [ starting Number - 1 ]  ;  //  Strip off 2s from this value .  int shift =  Long . number Of Trailing Zeros ( product )  ;  product >>= shift ;  //  Use floor ( log2 ( num )  )  + 1 to prevent overflow of multiplication .  int product Bits =  Long Math . log2 ( product, FLOOR )  + 1 ;  int bits =  Long Math . log2 ( starting Number, FLOOR )  + 1 ;  //  Check for the next power of two boundary, to save us a CLZ operation .  int next Power Of Two = 1 <<  ( bits - 1 )  ;  //  Iteratively multiply the longs as big as they can go .  for  ( long num = starting Number ;  num <= n ;  num++ )  {     //  Check to see if the floor ( log2 ( num )  )  + 1 has changed .      if  (  ( num & next Power Of Two )  != 0 )  {         next Power Of Two <<= 1 ;          bits++ ;      }     //  Get rid of the 2s in num .      int tz =  Long . number Of Trailing Zeros ( num )  ;      long normalized Num = num >> tz ;      shift += tz ;      //  Adjust floor ( log2 ( num )  )  + 1 .      int normalized Bits = bits - tz ;      //  If it won't fit in a long, then we store off the intermediate product .      if  ( normalized Bits + product Bits >=  Long . SIZE )  {         bignums . add (  Big Integer . value Of ( product )  )  ;          product = 1 ;          product Bits = 0 ;      }     product *= normalized Num ;      product Bits =  Long Math . log2 ( product, FLOOR )  + 1 ;  } //  Check for leftovers .  if  ( product > 1 )  {     bignums . add (  Big Integer . value Of ( product )  )  ;  } //  Efficiently multiply all the intermediate products together .  return list Product ( bignums )  . shift Left ( shift )  ; }"
4412,"public com . anychart . core . utils .  Interactivity interactivity (  ) { return new com . anychart . core . utils .  Interactivity ( js Base + "" . interactivity (  ) "" )  ; }"
4413,public  Uri get Media Url (  ) { return media Url ; }
4414,"public com . anychart . core . ui .  Scroll Bar bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
4415,public float get Last Measured Width (  ) { return m Last Measured Width ; }
4416,public void add Data Set ( T d ) { if  ( d == null )      return ;  calc Min Max ( d )  ;  m Data Sets . add ( d )  ; }
4417,public static final  Context query Plugin Context (  String name ) { return s Plugin Manager . query Plugin Context ( name )  ; }
4418,"public  List< Relation Source2> query Deep (  String where,  String .  .  .  selection Arg ) {  Cursor cursor = db . raw Query ( get Select Deep (  )  + where, selection Arg )  ;  return load Deep All And Close Cursor ( cursor )  ; }"
4419,"public long get Time Us At Position ( long position ) { return get Time Us At Position ( position, first Frame Byte Position, bitrate )  ; }"
4420,"public com . anychart . core . polar . series .  Range Column fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
4421,"private void transform Annotation Set Ref List (  Index Map index Map,  Dex .  Section ref List In ) { contents Out . annotation Set Ref Lists . size++ ;  annotation Set Ref List Out . assert Four Byte Aligned (  )  ;  index Map . put Annotation Set Ref List Offset ( ref List In . get Position (  ) , annotation Set Ref List Out . get Position (  )  )  ;  int parameter Count = ref List In . read Int (  )  ;  annotation Set Ref List Out . write Int ( parameter Count )  ;  for  ( int p = 0 ;  p < parameter Count ;  p++ )  {     annotation Set Ref List Out . write Int ( index Map . adjust Annotation Set ( ref List In . read Int (  )  )  )  ;  }}"
4422,public void set Device Auth Target User Id ( @ Nullable  String target User Id ) { this . device Auth Target User Id = target User Id ; }
4423,public boolean contains Value (  Object value ) {  Set values = total Value Set (  )  ;  return values . contains ( value )  ; }
4424,"public final  Fluent Iterable<E> append (  Iterable<? extends E> other ) { return  Fluent Iterable . concat ( get Delegate (  ) , other )  ; }"
4425,"public static  Compact Linked Hash Set<E> create ( E .  .  .  elements ) {  Compact Linked Hash Set<E> set = create With Expected Size ( elements . length )  ;   Collections . add All ( set, elements )  ;  return set ; }"
4426,public final int get Company Identifier (  ) { return m Company Identifier ; }
4427,public boolean has Glyph ( char ch ) { if  ( missing Glyph != null )      return true ;  return get Glyph ( ch )  != null ; }
4428,"public void test Continue Loading Only Not Allow End Of Source Loader To Load (  ) {  Fake Sequenceable Loader loader1 = new  Fake Sequenceable Loader ( /* buffered Position Us */ 1000, /* next Load Position Us */ C . TIME_END_OF_SOURCE )  ;   Fake Sequenceable Loader loader2 = new  Fake Sequenceable Loader ( /* buffered Position Us */ 1001, /* next Load Position Us */ C . TIME_END_OF_SOURCE )  ;   Composite Sequenceable Loader composite Sequenceable Loader = new  Composite Sequenceable Loader ( new  Sequenceable Loader [  ]  { loader1, loader2 } )  ;  composite Sequenceable Loader . continue Loading ( 3000 )  ;  assert That ( loader1 . num Invocations )  . is Equal To ( 0 )  ;  assert That ( loader2 . num Invocations )  . is Equal To ( 0 )  ; }"
4429,"public static  String get Name (  ) {  Gather Stack Trace stack ;  try {     throw new  Gather Stack Trace (  )  ;  } catch  (  Gather Stack Trace wanted )  {     stack = wanted ;  } try {     for  (  Stack Trace Element stack Trace : stack . get Stack Trace (  )  )  {          String class Name = stack Trace . get Class Name (  )  ;           String method Name = stack Trace . get Method Name (  )  ;           Method method ;          try {             method = //              Class . for Name ( class Name )  . get Method ( method Name,  (  Class [  ]  )  null )  ;          } catch  (  No Such Method Exception e )  {             // could have arguments, not handled             continue ;          }          Test annotation = method . get Annotation (  Test . class )  ;          if  ( annotation != null )              return method Name ;      } } catch  (  Class Not Found Exception should Never Occur )  { //  Fall through and crash .  } throw new  Assertion Error ( "" Cannot determine name of current test"" )  ; }"
4430,public void undo Last Spell (  ) { if  ( !undo Stack . is Empty (  )  )  {     var previous Spell = undo Stack . poll Last (  )  ;      redo Stack . offer Last ( previous Spell )  ;      previous Spell . run (  )  ;  }}
4431,"public boolean dispatch Trackball Event (  Motion Event event ) { float x = event . get X (  )  ;  float y = event . get Y (  )  ;  //A longer event history implies faster trackball movement .  // Use it to infer a larger jump and therefore faster palette/slider adjustment .  int jump = event . get History Size (  )  + 1 ;  switch ( event . get Action (  )  )  {     case  Motion Event . ACTION_DOWN:         {         }         break ;      case  Motion Event . ACTION_MOVE:         {             //depending on whether you use 1 D or 2 D controllers             switch ( m Method )  {                 case METHOD_HS_V_PALETTE:                     if  ( m Focused Control == 0 )  {                         change HS Palette ( x, y, jump )  ;                      } else if  ( m Focused Control == 1 )  {                         if  ( y < 0 )                              change Slider ( m Focused Control, true, jump )  ;                          else if  ( y > 0 )                              change Slider ( m Focused Control, false, jump )  ;                      }                     break ;              }         }         break ;      case  Motion Event . ACTION_UP:         {         }         break ;  } return true ; }"
4432,public  Share To Messenger Params build (  ) { return new  Share To Messenger Params ( this )  ; }
4433,protected static void on Subscription Checked ( boolean supported ) { subscription Status = supported ?  Billing Status . SUPPORTED :  Billing Status . UNSUPPORTED ;  if  ( subscription Status ==  Billing Status . SUPPORTED )  {     //  Save us the     // billing check     billing Status =  Billing Status . SUPPORTED ;  } for  ( I Billing Observer o : observers )  {     o . on Subscription Checked ( supported )  ;  }}
4434,"protected boolean set Cookies From Headers (  Map< String,  List< String>> headers, boolean execute In New Thread ) { if  ( null != headers )  {     final  List< String> cookies = headers . get (  Sonic Session Connection . HTTP_HEAD_FILED_SET_COOKIE . to Lower Case (  )  )  ;      if  ( null != cookies && 0 != cookies . size (  )  )  {         if  ( !execute In New Thread )  {             return  Sonic Engine . get Instance (  )  . get Runtime (  )  . set Cookie ( get Current Url (  ) , cookies )  ;          } else {              Sonic Utils . log ( TAG,  Log . INFO, ""set Cookies From Headers asynchronous in new thread . "" )  ;               Sonic Engine . get Instance (  )  . get Runtime (  )  . post Task To Thread ( new  Runnable (  )  {                 @ Override                 public void run (  )  {                      Sonic Engine . get Instance (  )  . get Runtime (  )  . set Cookie ( get Current Url (  ) , cookies )  ;                  }             }, 0 L )  ;          }         return true ;      } } return false ; }"
4435,public synchronized  Class Source get Class Source (  String class Name ) { //  Before triggering classpath mapping  ( initialization )  check for // explicitly set class sources  ( e . g .  generated classes )  .    These would // take priority over any found in the classpath anyway .   Class Source cs =  (  Class Source )  class Source . get ( class Name )  ;  if  ( cs != null )      return cs ;  // trigger possible mapping insure Initialized (  )  ;  cs =  (  Class Source )  class Source . get ( class Name )  ;  if  ( cs == null && comp Paths != null )      for  ( int i = 0 ;  i < comp Paths . size (  )  && cs == null ;  i++ )  cs =  (  (  Bsh Class Path )  comp Paths . get ( i )  )  . get Class Source ( class Name )  ;  return cs ; }
4436,"public final void remove Item At Async ( int position ) { assert Single Thread For Change Set (  )  ;  if  (  Sections Debug . ENABLED )  {      Log . d (  Sections Debug . TAG, "" ( "" + hash Code (  )  + "" )  remove Item At Async "" + position )  ;  } final  Async Remove Operation async Remove Operation = new  Async Remove Operation ( position )  ;  synchronized  ( this )  {     m Has Async Operations = true ;      m Async Component Tree Holders . remove ( position )  ;      add To Current Batch ( async Remove Operation )  ;  }}"
4437,public  Builder set Name ( java . lang .  String value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } name_ = value ;  on Changed (  )  ;  return this ; }
4438,public boolean is Open Parenthesis (  String open ) { return parenthesis Map . contains Key ( open )  ; }
4439,"public com . anychart . charts .  Sankey select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4440,public void show Loading ( boolean show ) { if  ( show )  {     is Loading = true ;      wrapper Adapter . state Changed (  Paginate Status . LOADING )  ;  } else {     is Loading = false ;  }}
4441,"public com . anychart . core . axismarkers .  Gantt Text padding (  Number value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
4442,"public  Clone Command set Git Dir (  File git Dir ) { validate Dirs ( directory, git Dir, bare )  ;  this . git Dir = git Dir ;  return this ; }"
4443,public void set Draw Listener ( @ Nullable  Draw Listener draw Listener ) { m Draw Listener = draw Listener ; }
4444,public static  Issue to Issue ( final  Pull Request pull Request ) { if  ( pull Request == null )  {     return null ;  } return  Issue . builder (  )  . assignee ( pull Request . assignee (  )  )  . body ( pull Request . body (  )  )  . body Html ( pull Request . body Html (  )  )  . closed At ( pull Request . closed At (  )  )  . comments ( pull Request . comments (  )  )  . created At ( pull Request . created At (  )  )  . html Url ( pull Request . html Url (  )  )  . number ( pull Request . number (  )  )  . milestone ( pull Request . milestone (  )  )  . id ( pull Request . id (  )  )  . pull Request ( pull Request )  . state ( pull Request . state (  )  )  . title ( pull Request . title (  )  )  . updated At ( pull Request . updated At (  )  )  . url ( pull Request . url (  )  )  . user ( pull Request . user (  )  )  . build (  )  ; }
4445,public static  Screen Round value Of ( int value ) { return for Number ( value )  ; }
4446,"public com . anychart . charts .  Circular Gauge axis (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . axis ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4447,"public boolean seek (  Byte Buffer byte Buffer ) { byte [  ]  buffer = new byte [ FIELD_TAGID_LENGTH ]  ;  // read the TAG value byte Buffer . get ( buffer, 0, FIELD_TAGID_LENGTH )  ;  return  (  Arrays . equals ( buffer, TAG_ID )  )  ; }"
4448,public void disable Debug (  ) {}
4449,"public static  String local String (  Register Spec spec ) { return spec . reg String (  )  + ' ' + spec . get Local Item (  )  . to String (  )  + "": "" + spec . get Type Bearer (  )  . to Human (  )  ; }"
4450,public void add Method (  Ct Method m )  throws  Cannot Compile Exception{ check Modify (  )  ; }
4451,"private void on Playlist Updated (  Uri url,  Hls Media Playlist new Snapshot ) { if  ( url . equals ( primary Media Playlist Url )  )  {     if  ( primary Media Playlist Snapshot == null )  {         //  This is the first primary url snapshot .          is Live = !new Snapshot . has End Tag ;          initial Start Time Us = new Snapshot . start Time Us ;      }     primary Media Playlist Snapshot = new Snapshot ;      primary Playlist Listener . on Primary Playlist Refreshed ( new Snapshot )  ;  } int listeners Size = listeners . size (  )  ;  for  ( int i = 0 ;  i < listeners Size ;  i++ )  {     listeners . get ( i )  . on Playlist Changed (  )  ;  }}"
4452,"public void save Frame ( final  File file, final boolean high, final GSY Video Shot Save Listener gsy Video Shot Save Listener ) { GSY Video Shot Listener gsy Video Shot Listener = new GSY Video Shot Listener (  )  {     @ Override     public void get Bitmap (  Bitmap bitmap )  {         if  ( bitmap == null )  {             gsy Video Shot Save Listener . result ( false, file )  ;          } else {              File Utils . save Bitmap ( bitmap, file )  ;              gsy Video Shot Save Listener . result ( true, file )  ;          }     } } ;  set GSY Video Shot Listener ( gsy Video Shot Listener, high )  ;  take Shot Pic (  )  ; }"
4453,public  Sparse Array< Card Section> get Card Sections (  ) { return m Card Sections ; }
4454,"protected  Object Mapper create Object Mapper (  ) {  Object Mapper object Mapper = new  Object Mapper (  )  ;  object Mapper . set Visibility ( object Mapper . get Serialization Config (  )  . get Default Visibility Checker (  )  . with Field Visibility (  Json Auto Detect .  Visibility . ANY )  . with Getter Visibility (  Json Auto Detect .  Visibility . NONE )  . with Is Getter Visibility (  Json Auto Detect .  Visibility . NONE )  )  ;  object Mapper . configure (  Json Parser .  Feature . ALLOW_UNQUOTED_FIELD_NAMES, true )  ;  object Mapper . configure (  Json Parser .  Feature . ALLOW_SINGLE_QUOTES, true )  ;  object Mapper . configure (  Json Parser .  Feature . ALLOW_COMMENTS, true )  ;  object Mapper . configure (  Deserialization Feature . FAIL_ON_UNKNOWN_PROPERTIES, false )  ;  object Mapper . register Module ( new  Nitrite Id Module (  )  )  ;  object Mapper . find And Register Modules (  )  ;  return object Mapper ; }"
4455,"public com . anychart . core . utils .  Margin margin (  ) { return new com . anychart . core . utils .  Margin ( js Base + "" . margin (  ) "" )  ; }"
4456,"public  Char Buffer append (  Char Sequence csq, int start, int end ) { if  ( csq == null )  {     //$NON-NLS-1$     csq = ""null"" ;  }  Char Sequence cs = csq . sub Sequence ( start, end )  ;  if  ( cs . length (  )  > 0 )  {     return put ( cs . to String (  )  )  ;  } return this ; }"
4457,public int get Border Color (  ) { return m Border Color ; }
4458,public com . facebook . buck . remoteexecution . proto .  Creator Info get Creator Info (  ) { if  ( creator Info Builder_ == null )  {     return creator Info_ == null ? com . facebook . buck . remoteexecution . proto .  Creator Info . get Default Instance (  )  : creator Info_ ;  } else {     return creator Info Builder_ . get Message (  )  ;  }}
4459,"public com . anychart . graphics . vector .  Pattern Fill hatch Fill (  ) { return new com . anychart . graphics . vector .  Pattern Fill ( js Base + "" . hatch Fill (  ) "" )  ; }"
4460,"public static void main (  String [  ]  args ) { //  Defaults int port = 8080 ;  // bind to all interfaces by default  String host = null ;   List< File> root Dirs = new  Array List< File> (  )  ;  boolean quiet = false ;   String cors = null ;   Map< String,  String> options = new  Hash Map< String,  String> (  )  ;  //  Parse command-line, with short and long versions of the options .  for  ( int i = 0 ;  i < args . length ;  ++i )  {     if  ( ""-h"" . equals Ignore Case ( args [ i ]  )  || ""--host"" . equals Ignore Case ( args [ i ]  )  )  {         host = args [ i + 1 ]  ;      } else if  ( ""-p"" . equals Ignore Case ( args [ i ]  )  || ""--port"" . equals Ignore Case ( args [ i ]  )  )  {         port =  Integer . parse Int ( args [ i + 1 ]  )  ;      } else if  ( ""-q"" . equals Ignore Case ( args [ i ]  )  || ""--quiet"" . equals Ignore Case ( args [ i ]  )  )  {         quiet = true ;      } else if  ( ""-d"" . equals Ignore Case ( args [ i ]  )  || ""--dir"" . equals Ignore Case ( args [ i ]  )  )  {         root Dirs . add ( new  File ( args [ i + 1 ]  )  . get Absolute File (  )  )  ;      } else if  ( args [ i ]  . starts With ( ""--cors"" )  )  {         cors = ""*"" ;          int equal Idx = args [ i ]  . index Of ( '=' )  ;          if  ( equal Idx > 0 )  {             cors = args [ i ]  . substring ( equal Idx + 1 )  ;          }     } else if  ( ""--licence"" . equals Ignore Case ( args [ i ]  )  )  {          System . out . println (  Simple Web Server . LICENCE + ""\n"" )  ;      } else if  ( args [ i ]  . starts With ( ""-X:"" )  )  {         int dot = args [ i ]  . index Of ( '=' )  ;          if  ( dot > 0 )  {              String name = args [ i ]  . substring ( 0, dot )  ;               String value = args [ i ]  . substring ( dot + 1, args [ i ]  . length (  )  )  ;              options . put ( name, value )  ;          }     } } if  ( root Dirs . is Empty (  )  )  {     root Dirs . add ( new  File ( "" . "" )  . get Absolute File (  )  )  ;  } options . put ( ""host"", host )  ;  options . put ( ""port"", """" + port )  ;  options . put ( ""quiet"",  String . value Of ( quiet )  )  ;   String Builder sb = new  String Builder (  )  ;  for  (  File dir : root Dirs )  {     if  ( sb . length (  )  > 0 )  {         sb . append ( "":"" )  ;      }     try {         sb . append ( dir . get Canonical Path (  )  )  ;      } catch  ( IO Exception ignored )  {     } } options . put ( ""home"", sb . to String (  )  )  ;   Service Loader< Web Server Plugin Info> service Loader =  Service Loader . load (  Web Server Plugin Info . class )  ;  for  (  Web Server Plugin Info info : service Loader )  {      String [  ]  mime Types = info . get Mime Types (  )  ;      for  (  String mime : mime Types )  {          String [  ]  index Files = info . get Index Files For Mime Type ( mime )  ;          if  ( !quiet )  {              System . out . print ( ""#  Found plugin for  Mime type: \"""" + mime + ""\"""" )  ;              if  ( index Files != null )  {                  System . out . print ( ""  ( serving index files: "" )  ;                  for  (  String index File : index Files )  {                      System . out . print ( index File + "" "" )  ;                  }             }              System . out . println ( "" )  . "" )  ;          }         register Plugin For Mime Type ( index Files, mime, info . get Web Server Plugin ( mime ) , options )  ;      } }  Server Runner . execute Instance ( new  Simple Web Server ( host, port, root Dirs, quiet, cors )  )  ; }"
4461,public float get Angular Velocity (  ) { return jni Get Angular Velocity ( addr )  ; }
4462,public  Media Control get Media Control (  ) { return this ; }
4463,public long get Compression Format (  ) { return this . compression Format ; }
4464,public int get Family Vertical Margin (  ) { return  ( m Parent != null ? m Parent . get Family Vertical Margin (  )  : 0 )  + get Vertical Margin (  )  ; }
4465,"public int get Type (  ) { if  (  Runtime Environment . get Api Level (  )  >= R )  {     throw new  Unsupported Operation Exception ( ""unsupported on  Android R"" )  ;  } return get Field Reflectively ( ""m Type"",  Integer . class )  ; }"
4466,public static  Artwork create Artwork From Metadata Block Data Picture (  Metadata Block Data Picture cover Art ) { return  Android Artwork . create Artwork From Metadata Block Data Picture ( cover Art )  ; }
4467,"void create Awb Packages (  )  throws  Execution Exception,  Interrupted Exception{  Waitable Executor worker Executor =  Waitable Executor . use Global Shared Thread Pool (  )  ;   Atlas Dependency Tree atlas Dependency Tree =  Atlas Build Context . android Dependency Trees . get ( get Variant Name (  )  )  ;  if  ( null == atlas Dependency Tree )  {     return ;  }  Executor Services Helper executor Services Helper = new  Executor Services Helper ( task Name, get Logger (  ) , 0 )  ;  for  ( final  Awb Bundle awb Bundle : atlas Dependency Tree . get Awb Bundles (  )  )  {     if  ( !app Variant Context . get Atlas Extension (  )  . get T Build Config (  )  . get Data Binding Bundles (  )  . contains ( awb Bundle . get Package Name (  )  )  )  {         continue ;      }     if  ( !awb Bundle . is Data Bind Enabled (  )  || awb Bundle . is M Bundle )  {         continue ;      }     worker Executor . execute ( new  Callable (  )  {         @ Override         public  Object call (  )  {             try {                  File data Binding Clazz Folder = app Variant Output Context . get Variant Context (  )  . get J Awbava Output Dir ( awb Bundle )  ;                   String package Name = awb Bundle . get Package Name (  )  ;                   String app Name = awb Bundle . get Package Name (  )  + "" . _bundleapp_"" ;                  // Remove classes that already exist                  File data Mapper Clazz = new  File ( data Binding Clazz Folder, ""android/databinding/ Data Binder Mapper . class"" )  ;                  if  ( !data Mapper Clazz . exists (  )  )  {                     throw new  Gradle Exception ( ""missing datamapper class"" )  ;                  }                  File data Bind Component Clazz = new  File ( data Binding Clazz Folder, ""android/databinding/ Data Binding Component . class"" )  ;                  if  ( !data Bind Component Clazz . exists (  )  )  {                     throw new  Gradle Exception ( ""missing data Bind Component . class"" )  ;                  }                  File data Bind Dynamic Utils Clazz = new  File ( data Binding Clazz Folder, ""android/databinding/ Dynamic Util . class"" )  ;                  if  ( !data Bind Dynamic Utils Clazz . exists (  )  )  {                     throw new  Gradle Exception ( ""missing data Bind Dynamic Utils . class"" )  ;                  }                  Class Name Renamer . rewrite Data Binder Mapper ( data Binding Clazz Folder, ""android/databinding/ Data Binder Mapper"", package Name . replace ( "" . "", ""/"" )  + ""/ Data Binder Mapper"", data Mapper Clazz )  ;                   Class Name Renamer . rewrite Data Binder Mapper ( data Binding Clazz Folder, ""android/databinding/ Data Binding Component"", package Name . replace ( "" . "", ""/"" )  + ""/ Data Binding Component"", data Bind Component Clazz )  ;                   Class Name Renamer . rewrite Data Binder Mapper ( data Binding Clazz Folder, ""android/databinding/data Bind Dynamic Utils"", package Name . replace ( "" . "", ""/"" )  + ""/data Bind Dynamic Utils"", data Bind Dynamic Utils Clazz )  ;                   File Utils . delete Directory ( new  File ( data Binding Clazz Folder, ""android/databinding"" )  )  ;                  // File Utils . delete Directory ( new  File ( data Binding Clazz Folder, package Name . replace ( "" . "", ""/"" )  +                 // ""/_bundleapp_""  )  )  ;                   File app Dir = new  File ( data Binding Clazz Folder, app Name . replace ( "" . "", ""/"" )  )  ;                  if  ( app Dir . exists (  )  )  {                      File [  ]  files = app Dir . list Files ( new  File Filter (  )  {                         @ Override                         public boolean accept (  File pathname )  {                             return pathname . is File (  )  && !pathname . is Directory (  )  ;                          }                     } )  ;                      for  (  File tmp : files )  {                          File Utils . force Delete ( tmp )  ;                      }                 }                 //rename  Data Bind Utils                  Awb Transform awb Transform = app Variant Output Context . get Awb Transform Map (  )  . get ( awb Bundle . get Name (  )  )  ;                   List< File> files = awb Transform . get Input Libraries (  )  ;                   Map< String,  String> replace Map = new  Hash Map<> (  )  ;                  replace Map . put ( ""android/databinding/ Data Binding Util"", ""android/databinding/ Atlas Data Binding Util"" )  ;                   List< File> new Librarys = new  Array List<> (  )  ;                  for  (  File input Jar : files )  {                      File output Jar = new  File ( app Variant Context . get Awb Library Dir For Data Binding ( awb Bundle ) ,  File Name Utils . get Unique Jar Name ( input Jar )  + "" . jar"" )  ;                      output Jar . delete (  )  ;                      output Jar . get Parent File (  )  . mkdirs (  )  ;                      output Jar . create New File (  )  ;                      new  Clazz Replacer ( input Jar, output Jar, replace Map )  . execute (  )  ;                      new Librarys . add ( output Jar )  ;                      awb Transform . get File Transform (  )  . put ( input Jar, output Jar )  ;                  }                 awb Transform . set Input Libraries ( new Librarys )  ;              } catch  (  Throwable e )  {                 e . print Stack Trace (  )  ;                  throw new  Gradle Exception ( ""databinding awb failed"", e )  ;              }             return null ;          }     } )  ;  } worker Executor . wait For Tasks With Quick Fail ( true )  ; }"
4468,private void report Error (  Callback callback ) { if  ( callback != null )  {     callback . on Error (  )  ;  }}
4469,private int get Byte0 ( int off ) { return bytes [ start + off ]  ; }
4470,"public com . anychart . core .  State Settings normal (  ) { return new com . anychart . core .  State Settings ( js Base + "" . normal (  ) "" )  ; }"
4471,public  Realm get Realm (  ) { synchronized  ( lock )  {     while  ( background Handler == null )  {         try {             lock . wait ( WAIT_TIMEOUT_MS )  ;          } catch  (  Interrupted Exception ignore )  {             break ;          }     }     return realm ;  }}
4472,boolean run Test Separately (  ) { return false ; }
4473,"public static void register Listener (  Object Context for Context,  Object Context Listener listener ) { if  ( !all Contexts Listeners . contains ( listener )  )  {      Set< Object Context Listener> listeners = get Listeners For Context ( for Context )  ;      listeners . add ( listener )  ;  }}"
4474,"public  Single< Issue Filter> remove Issue Filter (  Issue Filter filter ) { db Cache . database . get Issue_filter Queries (  )  . remove Issue Filter ( filter . get Id (  )  )  ;  for  (  Label label : filter . get Labels (  )  )  {     db Cache . database . get Issue_filter Queries (  )  . remove Issue Filter Label ( filter . get Id (  ) , filter . get Repository (  )  . id (  ) , label . name (  )  )  ;  } return  Single . just ( filter )  ; }"
4475,"boolean valid (  ) { // selected Edges is empty, so we use that state as a marker of the final invalid cursor .  return !selected Edges . is Empty (  )  ; }"
4476,public static  String get Resolution Failed Error Message (  String host And Port ) { return RESOLUTION_FAILED_ERROR_MESSAGE + host And Port ; }
4477,public static  Screen Round for Number ( int value ) { switch ( value )  {     case 0:         return SCREEN_ROUND_UNSET ;      case 1:         return SCREEN_ROUND_ROUND ;      case 2:         return SCREEN_ROUND_NOTROUND ;      default:         return null ;  }}
4478,"private void add Container Group Icons To Markers (  String icon Url,  Iterable< Kml Container> kml Containers ) { for  (  Kml Container container : kml Containers )  {     add Icon To Markers ( icon Url, container . get Placemarks Hash Map (  )  )  ;      if  ( container . has Containers (  )  )  {         add Container Group Icons To Markers ( icon Url, container . get Containers (  )  )  ;      } }}"
4479,"public static  Hms Picker Dialog Fragment new Instance ( int reference, int theme Res Id,  Integer plus Minus Visibility ) { final  Hms Picker Dialog Fragment frag = new  Hms Picker Dialog Fragment (  )  ;   Bundle args = new  Bundle (  )  ;  args . put Int ( REFERENCE_KEY, reference )  ;  args . put Int ( THEME_RES_ID_KEY, theme Res Id )  ;  if  ( plus Minus Visibility != null )  {     args . put Int ( PLUS_MINUS_VISIBILITY_KEY, plus Minus Visibility )  ;  } frag . set Arguments ( args )  ;  return frag ; }"
4480,protected  Object get Uicc Slots Info (  ) { return uicc Slot Infos ; }
4481,public void set Width ( float w ) { this . w = w ; }
4482,public  Builder set Task Name ( com . facebook . buck . remoteexecution . proto .  Capability Value .  Builder builder For Value ) { if  ( task Name Builder_ == null )  {     task Name_ = builder For Value . build (  )  ;      on Changed (  )  ;  } else {     task Name Builder_ . set Message ( builder For Value . build (  )  )  ;  } return this ; }
4483,"private  Point F transform Coord Touch To Bitmap ( float x, float y, boolean clip To Bitmap ) { matrix . get Values ( m )  ;  float orig W = get Drawable (  )  . get Intrinsic Width (  )  ;  float orig H = get Drawable (  )  . get Intrinsic Height (  )  ;  float trans X = m [  Matrix . MTRANS_X ]  ;  float trans Y = m [  Matrix . MTRANS_Y ]  ;  float final X =  (  ( x - trans X )  * orig W )  / get Image Width (  )  ;  float final Y =  (  ( y - trans Y )  * orig H )  / get Image Height (  )  ;  if  ( clip To Bitmap )  {     final X =  Math . min (  Math . max ( final X, 0 ) , orig W )  ;      final Y =  Math . min (  Math . max ( final Y, 0 ) , orig H )  ;  } return new  Point F ( final X, final Y )  ; }"
4484,public int compare To (  Register Spec other ) { if  ( this . reg < other . reg )  {     return -1 ;  } else if  ( this . reg > other . reg )  {     return 1 ;  } int compare = type . get Type (  )  . compare To ( other . type . get Type (  )  )  ;  if  ( compare != 0 )  {     return compare ;  } if  ( this . local == null )  {     return  ( other . local == null )  ? 0 : -1 ;  } else if  ( other . local == null )  {     return 1 ;  } return this . local . compare To ( other . local )  ; }
4485,"public static  Hash Function hmac Sha512 (  Key key ) { return new  Mac Hash Function ( "" Hmac SHA512"", key, hmac To String ( ""hmac Sha512"", key )  )  ; }"
4486,public float get Trans X (  ) { return m Trans X ; }
4487,private void update Adapter (  Array List< Card> cards ) { m Card Array Adapter . add All ( cards )  ;  m Card Array Adapter . notify Data Set Changed (  )  ; }
4488,"public final  String get String Supported32bit ABIS (  ) {  String result = null ;  if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . LOLLIPOP )  {      String [  ]  supported ABIS =  Build . SUPPORTED_32_BIT_ABIS ;       String Builder supported ABI String = new  String Builder (  )  ;      if  ( supported ABIS . length > 0 )  {         for  (  String abis : supported ABIS )  {             supported ABI String . append ( abis )  . append ( ""_"" )  ;          }         supported ABI String . delete Char At ( supported ABI String . last Index Of ( ""_"" )  )  ;      } else {         supported ABI String . append ( """" )  ;      }     result = supported ABI String . to String (  )  ;  } return  Check Validity Util . check Valid Data (  Check Validity Util . handle Illegal Character In Result ( result )  )  ; }"
4489,"public void share With Linked In (  String caption Or Options,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Linked In ( %s, %s )  ; "", wrap Quotes ( caption Or Options ) , wrap Quotes ( description )  )  )  ; }"
4490,"public final void connect ( @ Non Null final  Context context, @ Non Null final  Extended Bluetooth Device device, final boolean connect To Network ) { m Nrf Mesh Repository . connect ( context, device, connect To Network )  ; }"
4491,public  Issue Filter set Milestone (  Milestone milestone ) { this . milestone = milestone ;  return this ; }
4492,"public static  Type intern (  String descriptor ) {  Type result = intern Table . get ( descriptor )  ;  if  ( result != null )  {     return result ;  } char first Char ;  try {     first Char = descriptor . char At ( 0 )  ;  } catch  (  Index Out Of Bounds Exception ex )  {     //  Translate the exception .      throw new  Illegal Argument Exception ( ""descriptor is empty"" )  ;  } catch  (  Null Pointer Exception ex )  {     //  Elucidate the exception .      throw new  Null Pointer Exception ( ""descriptor == null"" )  ;  } if  ( first Char == ' [ ' )  {     /*          *  Recursively strip away array markers to get at the underlying          * type, and build back on to form the result .           */     result = intern ( descriptor . substring ( 1 )  )  ;      return result . get Array Type (  )  ;  } /*      *  If the first character isn't ' [ ' and it wasn't found in the      * intern cache, then it had better be the descriptor for a class .       */ int length = descriptor . length (  )  ;  if  (  ( first Char != 'L' )  ||  ( descriptor . char At ( length - 1 )  != ' ; ' )  )  {     throw new  Illegal Argument Exception ( ""bad descriptor: "" + descriptor )  ;  } /*      *  Validate the characters of the class name itself .   Note that      * vmspec-2 does not have a coherent definition for valid      * internal-form class names, and the definition here is fairly      * liberal: A name is considered valid as long as it doesn't      * contain any of ' [ ' ' ; ' ' . ' ' ( ' ' ) ', and it has no more than one      * '/' in a row, and no '/' at either end .       */ //  Skip the final ' ; ' .  int limit =  ( length - 1 )  ;  for  ( int i = 1 ;  i < limit ;  i++ )  {     char c = descriptor . char At ( i )  ;      switch ( c )  {         case ' [ ':         case ' ; ':         case ' . ':         case ' ( ':         case ' ) ':             {                 throw new  Illegal Argument Exception ( ""bad descriptor: "" + descriptor )  ;              }         case '/':             {                 if  (  ( i == 1 )  ||  ( i ==  ( length - 1 )  )  ||  ( descriptor . char At ( i - 1 )  == '/' )  )  {                     throw new  Illegal Argument Exception ( ""bad descriptor: "" + descriptor )  ;                  }                 break ;              }     } } result = new  Type ( descriptor, BT_OBJECT )  ;  return put Intern ( result )  ; }"
4493,"public static  Cxx Tool Flags concat (  Cxx Tool Flags .  .  .  parts ) {  Immutable List .  Builder< Arg> platform Flags =  Immutable List . builder (  )  ;   Immutable List .  Builder< Arg> rule Flags =  Immutable List . builder (  )  ;  for  (  Cxx Tool Flags part : parts )  {     platform Flags = platform Flags . add All ( part . get Platform Flags (  )  )  ;      rule Flags = rule Flags . add All ( part . get Rule Flags (  )  )  ;  } return  Immutable Iterable Cxx Tool Flags . of ( platform Flags . build (  ) , rule Flags . build (  )  )  ; }"
4494,"public void init (  ) { // Init the  Card Header m Card Header = init Card Header (  )  ;  if  ( m Card Header != null )      add Card Header ( m Card Header )  ;  // Init the  Card init Card (  )  ;  // Init the children  List< List Object> m Children = init Children (  )  ;  if  ( m Children == null )      m Children = new  Array List< List Object> (  )  ;  m Linear List Adapter = new  Linear List Adapter ( super . get Context (  ) , m Children )  ;  // Retrieve the layout Id use by children m Child Layout Id = get Child Layout Id (  )  ; }"
4495,"public  Rect scale Preview (  Size preview Size ) { return preview Scaling Strategy . scale Preview ( preview Size, viewfinder Size )  ; }"
4496,"public long [  ]  get Keys (  ) { int length = m Keys . length ;  long [  ]  result = new long [ length ]  ;   System . arraycopy ( m Keys, 0, result, 0, length )  ;  return result ; }"
4497,"public  Gson Builder add Deserialization Exclusion Strategy (  Exclusion Strategy strategy ) { excluder = excluder . with Exclusion Strategy ( strategy, false, true )  ;  return this ; }"
4498,"public  Realm Query<E> in (  String field Name, @ Nullable  String [  ]  values ) { return in ( field Name, values,  Case . SENSITIVE )  ; }"
4499,"public  Vector2 project (  Vector2 world Coords ) { tmp . set ( world Coords . x, world Coords . y, 1 )  ;  camera . project ( tmp, screen X, screen Y, screen Width, screen Height )  ;  world Coords . set ( tmp . x, tmp . y )  ;  return world Coords ; }"
4500,"public void get User From Firebase (  String name ) { //  You could also use  Keys .  Email or  Keys .  Phone  Disposable d =  Chat SDK . search (  )  . users For Index ( name, 1,  Keys .  Name )  . subscribe (  user -> { },  throwable -> { } )  ; }"
4501,"public void set Decor L (  List< String> date ) { set Decor ( date, DECOR_CACHE_L )  ; }"
4502,"public com . anychart . standalones .  Resource List overlay (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . overlay ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4503,public  Clone Command set Mirror ( boolean mirror ) { this . mirror = mirror ;  return this ; }
4504,"public com . anychart . core . ui .  Scroll Bar max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
4505,"Rich Stream<T> concat (  Stream<? extends T> other ) { return new  Rich Stream Impl<> (  Stream . concat ( this, other )  )  ; }"
4506,"public void update ( float delta Ms ) { if  ( paused )  {     return ;  } float delta Frames =  ( delta Ms / 1000 . 0f )  * fps ;  // of floating point precision issues below .  while  ( delta Frames > 0 )  {     //  First, try accumulating the remaining delta Frames and see if we make it to the next     // frame .      float new Frame Index = frame Index + delta Frames ;      if  (  ( int )  new Frame Index ==  ( int )  frame Index )  {         //  Didn't make it to the next frame .   Done accumulating .          frame Index = new Frame Index ;          delta Frames = 0 ;      } else {         //  Move forward to next frame, notify listeners, then keep accumlating .          float old Frame Index = frame Index ;          // ignores num Frames, will handle it below .          frame Index = 1 +  ( int )  frame Index ;          delta Frames -= frame Index - old Frame Index ;          if  ( frame Index < num Frames )  {             send On Frame Notification (  ( int )  frame Index )  ;          } else {             if  ( loop )  {                 frame Index = 0 ;                  send On Loop Notification (  )  ;                  send On Frame Notification (  ( int )  frame Index )  ;              } else {                 frame Index = num Frames - 1 ;                  send On Finish Notification (  )  ;                  //  In this branch, there are no further on Frame notifications .                  //  No more changes to frame Index, done accumulating .                  delta Frames = 0 ;              }         }     } }}"
4507,"public com . anychart . core . stock . scrollerseries .  Range Spline Area min Labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4508,"public void test Force Prompt Flag Old Broker (  )  throws  Operation Canceled Exception, IO Exception,  Authenticator Exception,  Name Not Found Exception,  Authentication Exception{ final  Intent intent = new  Intent (  )  ;  final  Authentication Request authentication Request = get Auth Request (  Prompt Behavior . FORCE_PROMPT )  ;  intent . put Extra (  Authentication Constants .  Broker . ACCOUNT_PROMPT, authentication Request . get Prompt (  )  . name (  )  )  ;  final  Account Manager mocked Account Manager = get Mocked Account Manager (  Authentication Constants .  Broker . BROKER_ACCOUNT_TYPE,  Authentication Constants .  Broker . COMPANY_PORTAL_APP_PACKAGE_NAME )  ;  mock Add Account Response ( mocked Account Manager, get Mocked Account Manager Future ( intent )  )  ;  final  File Mock Context mocked Context = new  File Mock Context ( androidx . test . platform . app .  Instrumentation Registry . get Instrumentation (  )  . get Context (  )  )  ;  mocked Context . set Mocked Account Manager ( mocked Account Manager )  ;  mocked Context . set Mocked Package Manager ( get Mocked Package Manager With Broker Account Service Disabled ( mock (  Signature . class ) ,  Authentication Constants .  Broker . AZURE_AUTHENTICATOR_APP_PACKAGE_NAME, true )  )  ;  final  Broker Proxy broker Proxy = new  Broker Proxy ( mocked Context )  ;  final  Intent returned Intent = broker Proxy . get Intent For Broker Activity ( authentication Request, null )  ;  assert True ( returned Intent . get String Extra (  Authentication Constants .  Broker . ACCOUNT_PROMPT )  . equals Ignore Case (  Prompt Behavior .  Always . name (  )  )  )  ; }"
4509,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
4510,"public  String get Response Body As String (  ) { try {     return new  String ( this . response Body, this . response Charset )  ;  } catch  (  Unsupported Encoding Exception ex )  {     // should not occur     throw new  Illegal State Exception ( ex )  ;  }}"
4511,"public static  Observable< Weather Data> get Weather Data (  String format,  String city ) {  Observable< Weather Data> ss = T Application . get App Component (  )  . get Service (  )  . get Weather Data ( format, city, ""ad1d20bebafe0668502c8eea5ddd0333"" )  ;  return ss ; }"
4512,"private PDF Object read Array ( int obj Num, int obj Gen, PDF Decrypter decrypter )  throws IO Exception{ // we've already read the  [  .    Now read objects until  ]   Array List<PDF Object> ary = new  Array List<PDF Object> (  )  ;  PDF Object obj ;  while  (  ( obj = read Object ( obj Num, obj Gen, decrypter )  )  != null )  {     ary . add ( obj )  ;  } if  ( buf . get (  )  != ' ] ' )  {     throw new PDF Parse Exception ( "" Array should end with ' ] '"" )  ;  } PDF Object [  ]  objlist = new PDF Object [ ary . size (  )  ]  ;  for  ( int i = 0 ;  i < objlist . length ;  i++ )  {     objlist [ i ]  =  ( PDF Object )  ary . get ( i )  ;  } return new PDF Object ( this, PDF Object . ARRAY, objlist )  ; }"
4513,public boolean is Missing Newline At End (  ) { final int end = lines . get ( lines . size (  )  - 1 )  ;  if  ( end == 0 )      return true ;  return content [ end - 1 ]  != '\n' ; }
4514,"public static void switch Target View ( @ Non Null  Simple Exo Player player, @ Nullable  Simple Exo Player View old Player View, @ Nullable  Simple Exo Player View new Player View ) {  Player View . switch Target View ( player, old Player View, new Player View )  ; }"
4515,"public byte [  ]  read Bytes (  ) {  Input Stream input = read (  )  ;  try {     return  Stream Utils . copy Stream To Byte Array ( input, estimate Length (  )  )  ;  } catch  ( IO Exception ex )  {     throw new  Gdx Runtime Exception ( "" Error reading file: "" + this, ex )  ;  } finally {      Stream Utils . close Quietly ( input )  ;  }}"
4516,public  Entity<T> get Entity (  Class<T> type ) { return  (  Entity<T> )  get Entity ( type . get Simple Name (  )  )  ; }
4517,"public void enqueue (  Event<L> event ) { enqueue Helper ( event, event )  ; }"
4518,public  Log Command exclude Path (  String path ) { check Callable (  )  ;  exclude Tree Filters . add (  Path Filter . create ( path )  . negate (  )  )  ;  return this ; }
4519,public  String get Sub Code (  ) { return sub Code ; }
4520,"public com . anychart . core . stock . scrollerseries . OHLC bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
4521,"public com . anychart . core . resource .  Logo stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4522,"public void get Series Count (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Series Count (  )  ; "" )  ; }"
4523,"public  Rectangle set Size ( float width, float height ) { this . width = width ;  this . height = height ;  return this ; }"
4524,"protected static void write (  Annotated Output out, short c0 ) { out . write Short ( c0 )  ; }"
4525,public static  Observable< Special Info> get Special (  String special Id ) { return s News Service . get Special ( special Id )  . subscribe On (  Schedulers . io (  )  )  . unsubscribe On (  Schedulers . io (  )  )  . subscribe On (  Android Schedulers . main Thread (  )  )  . observe On (  Android Schedulers . main Thread (  )  )  . flat Map ( _flat Map Special ( special Id )  )  ; }
4526,"public com . anychart . core . ui .  Paginator font Variant (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Variant ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
4527,"public boolean remove ( T item ) {  Point point = item . get Point (  )  ;  if  ( this . m Bounds . contains ( point . x, point . y )  )  {     return remove ( point . x, point . y, item )  ;  } else {     return false ;  }}"
4528,public T1 get Value1 (  ) { return value1 ; }
4529,public boolean equals (  Object obj ) { if  ( ! ( obj instanceof  String Hash Map )  )  {     return false ;  }  String Hash Map object =  (  String Hash Map )  obj ;  if  ( this . has Empty Value != object . has Empty Value )  {     return false ;  } if  ( this . key To Value == null )  {     if  ( object . key To Value != null )  {         return false ;      } } else {     if  ( !this . key To Value . equals ( object . key To Value )  )  {         return false ;      } } if  ( this . key To Value == null )  {     if  ( object . key To Value != null )  {         return false ;      } } else {     if  ( !this . value To Key . equals ( object . value To Key )  )  {         return false ;      } } return super . equals ( obj )  ; }
4530,"private byte [  ]  decrypt Upper Transport PDU ( @ Non Null final  Access Message access Message )  throws  Invalid Cipher Text Exception{ byte [  ]  decrypted Upper Transport PDU ;  byte [  ]  key ;  final int transport Mic Length = access Message . get Aszmic (  )  == SZMIC ? MAXIMUM_TRANSMIC_LENGTH : MINIMUM_TRANSMIC_LENGTH ;  // Check if the key used for encryption is an application key or a device key final byte [  ]  nonce ;  if  ( APPLICATION_KEY_IDENTIFIER == access Message . get Akf (  )  )  {     key = m Mesh Node . get Device Key (  )  ;      // If its a device key that was used to encrypt the message we need to create a device nonce to decrypt it     nonce = create Device Nonce ( access Message . get Aszmic (  ) , access Message . get Sequence Number (  ) , access Message . get Src (  ) , access Message . get Dst (  ) , access Message . get Iv Index (  )  )  ;      decrypted Upper Transport PDU =  Secure Utils . decrypt CCM ( access Message . get Upper Transport Pdu (  ) , key, nonce, transport Mic Length )  ;  } else {     final  List< Application Key> keys = m Upper Transport Layer Callbacks . get Application Keys ( access Message . get Network Key (  )  . get Key Index (  )  )  ;      if  ( keys . is Empty (  )  )          throw new  Illegal Argument Exception ( "" Unable to find the app key to decrypt the message"" )  ;      nonce = create Application Nonce ( access Message . get Aszmic (  ) , access Message . get Sequence Number (  ) , access Message . get Src (  ) , access Message . get Dst (  ) , access Message . get Iv Index (  )  )  ;      if  (  Mesh Address . is Valid Virtual Address ( access Message . get Dst (  )  )  )  {         decrypted Upper Transport PDU = decrypt ( access Message, m Upper Transport Layer Callbacks . ger Virtual Groups (  ) , keys, nonce, transport Mic Length )  ;      } else {         decrypted Upper Transport PDU = decrypt ( access Message, keys, nonce, transport Mic Length )  ;      } } if  ( decrypted Upper Transport PDU == null )      throw new  Illegal Argument Exception ( "" Unable to decrypt the message, invalid application key identifier!"" )  ;  final byte [  ]  temp Bytes = new byte [ decrypted Upper Transport PDU . length ]  ;   Byte Buffer decrypted Buffer =  Byte Buffer . wrap ( temp Bytes )  ;  decrypted Buffer . order (  Byte Order . LITTLE_ENDIAN )  ;  decrypted Buffer . put ( decrypted Upper Transport PDU )  ;  decrypted Upper Transport PDU = decrypted Buffer . array (  )  ;  return decrypted Upper Transport PDU ; }"
4531,protected  Bundle get Application Restrictions (  String package Name ) {  Bundle bundle = user Manager State . application Restrictions . get ( package Name )  ;  return bundle != null ? bundle : new  Bundle (  )  ; }
4532,"private static  Intent with Web Form Intent (  ) {  Intent basic Form Intent = new  Intent (  )  ;  basic Form Intent . put Extra (  Web View Activity . KEY_URL_TO_LOAD,  Web View Activity . WEB_FORM_URL )  ;  return basic Form Intent ; }"
4533,"public com . anychart . charts .  Cartesian margin (  String value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, value4 )  )  ;  return this ; }"
4534,"public static void build (  Mesh Part Builder builder, float width, float height, int divisions, float center X, float center Y, float center Z, float normal X, float normal Y, float normal Z, float tangent X, float tangent Y, float tangent Z, float binormal X, float binormal Y, float binormal Z ) { build ( builder, width, height, divisions, center X, center Y, center Z, normal X, normal Y, normal Z, tangent X, tangent Y, tangent Z, binormal X, binormal Y, binormal Z, 0f, 360f )  ; }"
4535,"public void test Connect Auth Ssh Rsa Pubkey Accepted Algorithms (  )  throws  Exception{ try  (  Ssh Server old Server = create Server ( TEST_USER, public Key1 )  )  {     old Server . set Signature Factories Names ( ""ssh-rsa"" )  ;      old Server . start (  )  ;      register Server ( old Server )  ;      install Config ( //     "" Host server"", //     "" Host Name localhost"", //     "" Port "" + old Server . get Port (  ) , //     "" User "" + TEST_USER, //     "" Identity File "" + private Key1 . get Absolute Path (  ) , "" Pubkey Accepted Algorithms ^ssh-rsa"" )  ;       Remote Session session = get Session Factory (  )  . get Session ( new UR Iish ( ""ssh://server/doesntmatter"" ) , null, FS . DETECTED, 10000 )  ;      assert Not Null ( session )  ;      session . disconnect (  )  ;  }}"
4536,private int s Width (  ) { int rotation = get Required Rotation (  )  ;  if  ( rotation == 90 || rotation == 270 )  {     return s Height ;  } else {     return s Width ;  }}
4537,"static  String get Path ( int stack Size, int [  ]  stack,  String [  ]  path Names, int [  ]  path Indices ) {  String Builder result = new  String Builder (  )  . append ( '$' )  ;  for  ( int i = 0 ;  i < stack Size ;  i++ )  {     switch ( stack [ i ]  )  {         case EMPTY_ARRAY:         case NONEMPTY_ARRAY:             result . append ( ' [ ' )  . append ( path Indices [ i ]  )  . append ( ' ] ' )  ;              break ;          case EMPTY_OBJECT:         case DANGLING_NAME:         case NONEMPTY_OBJECT:             result . append ( ' . ' )  ;              if  ( path Names [ i ]  != null )  {                 result . append ( path Names [ i ]  )  ;              }             break ;          case NONEMPTY_DOCUMENT:         case EMPTY_DOCUMENT:         case CLOSED:             break ;      } } return result . to String (  )  ; }"
4538,"public void text Direction (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . text Direction (  )  ; "" )  ; }"
4539,"private void report Cycle (  Cycle< Node> cycle,  Binding Graph binding Graph,  Diagnostic Reporter diagnostic Reporter ) { if  ( binding Graph . is Full Binding Graph (  )  )  {     diagnostic Reporter . report Component ( ERROR, binding Graph . component Node ( cycle . nodes (  )  . as List (  )  . get ( 0 )  . component Path (  )  )  . get (  ) , error Message ( cycle, binding Graph )  )  ;      return ;  }  Immutable List< Node> path = shortest Path To Cycle From An Entry Point ( cycle, binding Graph )  ;   Node cycle Start Node = path . get ( path . size (  )  - 1 )  ;   Node previous Node = path . get ( path . size (  )  - 2 )  ;   Dependency Edge dependency To Report = choose Dependency Edge Connecting ( previous Node, cycle Start Node, binding Graph )  ;  diagnostic Reporter . report Dependency ( ERROR, dependency To Report, error Message ( cycle . shift ( cycle Start Node ) , binding Graph )  )  ; }"
4540,"public void update ( T entity ) { @ Suppress Warnings ( ""unchecked"" )   Abstract Dao<T, ?> dao =  (  Abstract Dao<T, ?> )  get Dao ( entity . get Class (  )  )  ;  dao . update ( entity )  ; }"
4541,"public void set Bullet ( boolean flag ) { jni Set Bullet ( addr, flag )  ; }"
4542,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
4543,protected int get Column Count (  ) { return column Model . get Column Count (  )  ; }
4544,"public  Push Certificate parse (  Reader r )  throws  Pack Protocol Exception, IO Exception{  Stream Reader reader = new  Stream Reader ( r )  ;  receive Header ( reader, true )  ;   String line ;  try {     while  ( ! ( line = reader . read (  )  )  . is Empty (  )  )  {         if  ( line . equals ( BEGIN_SIGNATURE )  )  {             receive Signature ( reader )  ;              break ;          }         add Command ( line )  ;      } } catch  ( EOF Exception e )  { // EOF reached, but might have been at a valid state .   Let build call below // sort it out .  } return build (  )  ; }"
4545,"public com . anychart . core . stock .  Plot event Markers (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . event Markers ( %s )  ; "", value )  )  ;  return this ; }"
4546,"public void drill To ( com . anychart . data . tree .  Data Item target ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . drill To ( %s )  ; "",  ( target != null )  ? target . get Js Base (  )  : null )  )  ; }"
4547,"public static T from View (  View view,  Class<T> entry Point ) { return  Entry Points . get ( view, entry Point )  ; }"
4548,"public void schedule (  Transport Context transport Context, int attempt Number ) { schedule ( transport Context, attempt Number, false )  ; }"
4549,public  Optional< Path> get Path To Build Report (  Buck Config buck Config ) { return  Optional . of Nullable ( buck Config . resolve Path That May Be Outside The Project Filesystem ( build Report )  )  ; }
4550,"public void show Input Dialog (  String msg,  String def, int id, SV Event Type evtype ) { sv Event Handler . timer . stop (  )  ;   String tmp =  (  String )  J Option Pane . show Input Dialog ( this, msg, """", J Option Pane . QUESTION_MESSAGE, null, null, def )  ;  if  ( tmp != null )  {     tmp = convert Integer String To Unicode String ( tmp )  ;      SV Event res = new SV Event ( evtype, this, id, tmp )  ;       Scroll View . add Message ( res )  ;  } sv Event Handler . timer . restart (  )  ; }"
4551,public  Observable<E> observable (  ) { return flowable (  )  . to Observable (  )  ; }
4552,"public boolean on Touch Event (  Motion Event event ) { F Log . v ( TAG, ""on Touch Event: action: "", event . get Action (  )  )  ;  if  ( m Is Enabled && m Is Gesture Zoom Enabled )  {     return m Gesture Detector . on Touch Event ( event )  ;  } return false ; }"
4553,"public void on Load File Not Found (  File file, int file Type, boolean is Directory ) {  Tinker Log . i ( TAG, ""patch load Reporter on Load File Not Found: patch file not found: %s, file Type:%d, is Directory:%b"", file . get Absolute Path (  ) , file Type, is Directory )  ;  // check dex opt file at last, some phone such as VIVO/OPPO like to change dex2oat to interpreted if  ( file Type ==  Share Constants . TYPE_DEX_OPT )  {      Tinker tinker =  Tinker . with ( context )  ;      //we can recover at any process except recover process     if  ( tinker . is Main Process (  )  )  {          File patch Version File = tinker . get Tinker Load Result If Present (  )  . patch Version File ;          if  ( patch Version File != null )  {             if  (  Upgrade Patch Retry . get Instance ( context )  . on Patch Listener Check (  Share Patch File Util . get MD5 ( patch Version File )  )  )  {                  Tinker Log . i ( TAG, ""try to repair oat file on patch process"" )  ;                   Tinker Installer . on Receive Upgrade Patch ( context, patch Version File . get Absolute Path (  )  )  ;              } else {                  Tinker Log . i ( TAG, ""repair retry exceed must max time, just clean"" )  ;                  check And Clean Patch (  )  ;              }         }     } } else {     check And Clean Patch (  )  ;  }  Sample Tinker Report . on Load File Not Found ( file Type )  ; }"
4554,private static void remove Null Entries (  Array List<T> list ) { //  Clean up null entries for  ( int i = list . size (  )  - 1 ;  i >= 0 ;  i-- )  {     if  ( list . get ( i )  == null )  {         list . remove ( i )  ;      } }}
4555,public void set Batch (  Array< Particle Batch<?>> batches ) { for  (  Particle Controller controller : controllers )  {     for  (  Particle Batch<?> batch : batches )  if  ( controller . renderer . set Batch ( batch )  )          break ;  }}
4556,"private final void set File Permissions From Mode (  String name, int mode, int extra Permissions ) { int perms =  File Permission Utils . S_IRUSR |  File Permission Utils . S_IWUSR |  File Permission Utils . S_IRGRP |  File Permission Utils . S_IWGRP | extra Permissions ;  //        } if  ( LOG )  {      Log Debug . d ( PLUGIN_TAG, "" File "" + name + "": mode=0x"" +  Integer . to Hex String ( mode )  + "", perms=0x"" +  Integer . to Hex String ( perms )  )  ;  }  File Permission Utils . set Permissions ( name, perms, -1, -1 )  ; }"
4557,public  List< Intent> get All Started Services (  ) { return get Shadow Instrumentation (  )  . get All Started Services (  )  ; }
4558,"public static int get Encoded Data Size ( int width, int height ) { return  (  (  (  ( width + 3 )  & ~3 )  *  (  ( height + 3 )  & ~3 )  )  >> 1 )  ; }"
4559,public  Class<? extends  Annotation> annotation (  ) { return annotation ; }
4560,"Code Block generate See Method Javadoc (  Type Name name Of Class Containing Method,  String method Simple Name,  List<? extends  Variable Element> method Parameters ) { return generate See Method Javadoc Internal ( name Of Class Containing Method, method Simple Name,  Lists . transform ( method Parameters, new  Function< Variable Element,  Object> (  )  {     @ Override     public  Object apply (  Variable Element input )  {         return get Javadoc Safe Name ( input )  ;      } } )  )  ; }"
4561,"private boolean contains Black Point ( int a, int b, int fixed, boolean horizontal ) { if  ( horizontal )  {     for  ( int x = a ;  x <= b ;  x++ )  {         if  ( image . get ( x, fixed )  )  {             return true ;          }     } } else {     for  ( int y = a ;  y <= b ;  y++ )  {         if  ( image . get ( fixed, y )  )  {             return true ;          }     } } return false ; }"
4562,"public  Request Creator resize ( int target Width, int target Height ) { data . resize ( target Width, target Height )  ;  return this ; }"
4563,public  Mp4 Tag Field Sub Type get Sub Class Field Type (  ) { return subclass Type ; }
4564,public static boolean is Logging Enabled (  Context context ) { return false ; }
4565,public static  Psi Element get Name Identifier (  Bcfg Section section ) { return section . get Section Header (  )  . get Section Name (  )  ; }
4566,"public com . anychart . core . utils .  Padding set (  String value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
4567,"public static  Graph Transformation Engine create (  Cells cells,  Cell cell,  Closer closer,  Command Runner Params params ) {  Parser Config parser Config = cell . get Buck Config (  )  . get View (  Parser Config . class )  ;  // COMPUTATION: discover paths of build files needed to be parsed for provided target // patterns  Build Target Pattern To Build Package Path Computation pattern To Package Path Computation =  Build Target Pattern To Build Package Path Computation . of ( parser Config . get Build File Name (  ) , cell . get Filesystem (  )  . as View (  )  )  ;  // -- DEP COMPUTATION: listing of a specific directory to search for build file  Directory List Computation directory List Computation =  Directory List Computation . of ( cell . get Filesystem View For Source Files (  )  )  ;  // -- DEP COMPUTATION: file system tree to traverse to search for build files specified in // recursive spec  File Tree Computation file Tree Computation =  File Tree Computation . of (  )  ;  // COMPUTATION: parse build file to build file manifest  ( structured representation of a // build file )   Project Build File Parser Factory project Build File Parser Factory = new  Default Project Build File Parser Factory ( new  Default Type Coercer Factory (  ) , params . get Console (  ) , new  Parser Python Interpreter Provider ( cell . get Buck Config (  ) , params . get Executable Finder (  )  ) , params . get Known Rule Types Provider (  )  )  ;   Project Build File Parser build File Parser = project Build File Parser Factory . create File Parser ( params . get Buck Event Bus (  ) , params . get Cells (  )  . get Root Cell (  ) , params . get Watchman (  ) , true )  ;  //  Once computation is over, we want to close  Project Build File Parser to potentially release // resources //  Project Build File Parser implements  Auto Closeable but  Guava  Closer only works with //  Closeable, so we create another wrapper // TODO ( buck_team ) : implement  Closer which works with  Auto Closeables closer . register (  (  )  -> {     try {         build File Parser . close (  )  ;      } catch  (  Exception ex )  {         throw new IO Exception ( ex )  ;      } } )  ;   Build Package Path To Build File Manifest Computation package Path To Manifest Computation =  Build Package Path To Build File Manifest Computation . of ( build File Parser, cell . get Filesystem (  )  . get Path ( parser Config . get Build File Name (  )  ) , cell . get Root (  )  . get Path (  ) , false )  ;  // COMPOSITION: build target pattern to build file manifest  Composed Computation< Build Target Pattern To Build Package Path Key,  Build Package Paths> pattern To Path Computation =  Composition . as Composition (  Build Package Paths . class, pattern To Package Path Computation )  ;  // COMPUTATION:  Unconfigured build target to raw target node computation  Default Unconfigured Target Node Factory raw Target Node Factory = new  Default Unconfigured Target Node Factory ( params . get Known Rule Types Provider (  ) , new  Built Target Verifier (  ) , cells, new  Selector List Factory ( new  Selector Factory ( params . get Unconfigured Build Target Factory (  )  )  ) , params . get Type Coercer Factory (  )  )  ;   Build Target To Unconfigured Target Node Computation build Target To Unconfigured Target Node Computation =  Build Target To Unconfigured Target Node Computation . of ( raw Target Node Factory, cell )  ;  // COMPUTATION: raw target node to raw target node with deps // TODO: replace with  Target Platform Resolver  Target Platform Resolver target Platform Resolver =  (  target Configuration,  dependency Stack )  ->  Empty Platform . INSTANCE ;   Unconfigured Target Node To Target Node Factory unconfigured Target Node To Target Node Factory = new  Unconfigured Target Node To Target Node Factory ( params . get Type Coercer Factory (  ) , params . get Known Rule Types Provider (  ) , new  Default Constructor Arg Marshaller (  ) , new  Target Node Factory ( params . get Type Coercer Factory (  ) , new  Default Cell Name Resolver Provider ( new  Cells ( cell . get Cell (  Canonical Cell Name . root Cell (  )  )  )  )  ) , // TODO: replace with  Throwing Package Boundary Checker new  Noop Package Boundary Checker (  ) , // TODO: replace with symlink checker  (  build File,  node )  -> { }, // TODO: replace with  Default Selector List Resolver new  Selector List Resolver (  )  {     @ Nullable     @ Override     public <T> T resolve List (  Selectable Configuration Context configuration Context,  Build Target build Target,  String attribute Name,  Selector List<T> selector List,  Concatable<T> concatable,  Dependency Stack dependency Stack )  {         return selector List . get Selectors (  )  . get ( 0 )  . get Default Condition Value (  )  ;      } }, // TODO: replace with  Rule Based Constraint Resolver target Platform Resolver, new  Multi Platform Target Configuration Transformer ( target Platform Resolver ) , params . get Host Configuration (  )  . or Else (  Unconfigured Target Configuration . INSTANCE ) , cell . get Buck Config (  ) ,  Optional . empty (  )  )  ;   Unconfigured Target Node To Unconfigured Target Node With Deps Computation unconfigured Target Node To Unconfigured Target Node With Deps Computation =  Unconfigured Target Node To Unconfigured Target Node With Deps Computation . of ( unconfigured Target Node To Target Node Factory, cell )  ;  // COMPUTATION: path to a package to a list of raw target nodes with deps // this computation is workaround because left compositions are very slow // TODO:  Use right compositions instead  Build Package Path To Unconfigured Target Node Package Computation build Package Path To Unconfigured Target Node Package Computation =  Build Package Path To Unconfigured Target Node Package Computation . of ( unconfigured Target Node To Target Node Factory, cells, cell, false )  ;  // COMPOSITION: build target pattern to raw target node package  Composed Computation< Build Target Pattern To Build Package Path Key,  Unconfigured Target Node With Deps Package> pattern To Raw Target Node With Deps Package Computation =  Composition . compose Left (  Unconfigured Target Node With Deps Package . class, pattern To Path Computation,  (  key,  result )  -> result . get Package Roots (  )  . stream (  )  . map (  path ->  Build Package Path To Unconfigured Target Node Package Key . of ( path )  )  . collect (  Immutable Set . to Immutable Set (  )  )  )  ;  // ENGINE: bind computations to caches and feed them to  Graph  Engine // TODO: pass caches from global state  Graph Transformation Engine engine = new  Default Graph Transformation Engine (  Immutable List . of ( new  Graph Computation Stage<> ( pattern To Package Path Computation ) , new  Graph Computation Stage<> ( directory List Computation, params . get Global State (  )  . get Directory List Caches (  )  . get Unchecked ( cell . get Root (  )  . get Path (  )  )  ) , new  Graph Computation Stage<> ( file Tree Computation, params . get Global State (  )  . get File Tree Caches (  )  . get Unchecked ( cell . get Root (  )  . get Path (  )  )  ) , pattern To Path Computation . as Stage (  ) , new  Graph Computation Stage<> ( package Path To Manifest Computation, params . get Global State (  )  . get Build File Manifest Caches (  )  . get Unchecked ( cell . get Root (  )  . get Path (  )  )  ) , new  Graph Computation Stage<> ( build Target To Unconfigured Target Node Computation ) , new  Graph Computation Stage<> ( unconfigured Target Node To Unconfigured Target Node With Deps Computation ) , new  Graph Computation Stage<> ( build Package Path To Unconfigured Target Node Package Computation ) , pattern To Raw Target Node With Deps Package Computation . as Stage (  )  ) , 16, params . get Deps Aware Executor Supplier (  )  . get (  )  )  ;  return engine ; }"
4568,"public void save As Json (  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Json ( %s )  ; "", wrap Quotes ( filename )  )  )  ; }"
4569,"public void desc (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . desc (  )  ; "" )  ; }"
4570,"public com . anychart . core . gantt .  Time Line Header stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4571,"public void register Callback ( final  Callback Manager callback Manager, final  Facebook Callback< Login Result> callback ) { if  ( ! ( callback Manager instanceof  Callback Manager Impl )  )  {     throw new  Facebook Exception ( "" Unexpected  Callback Manager, "" + ""please use the provided  Factory . "" )  ;  }  (  (  Callback Manager Impl )  callback Manager )  . register Callback (  Callback Manager Impl .  Request Code Offset .  Login . to Request Code (  ) , new  Callback Manager Impl .  Callback (  )  {     @ Override     public boolean on Activity Result ( int result Code,  Intent data )  {         return  Login Manager . this . on Activity Result ( result Code, data, callback )  ;      } } )  ; }"
4572,"public void share With Linked In (  String caption Or Options,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Linked In ( %s, %s )  ; "", wrap Quotes ( caption Or Options ) , wrap Quotes ( description )  )  )  ; }"
4573,"public com . anychart . core . gantt . elements .  Baselines Element fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
4574,"public void sort (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . sort (  )  ; "" )  ; }"
4575,"public com . anychart . charts .  Radar margin (  String value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, value4 )  )  ;  return this ; }"
4576,int get Action Bar Height (  ) { return m Action Bar Height ; }
4577,"public void test Select Tracks Exceeding Capabilities Select Lower Sample Rate (  )  throws  Exception{  Format lower Sample Rate Format =  Format . create Audio Sample Format ( ""audio Format"",  Mime Types . AUDIO_AAC, null,  Format . NO_VALUE,  Format . NO_VALUE, 2, 22050, null, null, 0, null )  ;   Format higher Sample Rate Format =  Format . create Audio Sample Format ( ""audio Format"",  Mime Types . AUDIO_AAC, null,  Format . NO_VALUE,  Format . NO_VALUE, 2, 44100, null, null, 0, null )  ;   Track Group Array track Groups = wrap Formats ( higher Sample Rate Format, lower Sample Rate Format )  ;   Track Selector Result result = track Selector . select Tracks ( new  Renderer Capabilities [  ]  { ALL_AUDIO_FORMAT_EXCEEDED_RENDERER_CAPABILITIES }, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, lower Sample Rate Format )  ; }"
4578,"public com . anychart . core . map . series .  Base stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { return new com . anychart . core . map . series .  Base (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s ) "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ; }"
4579,"public void write Strong Binder ( I Binder b ) { //  Size of struct flat_binder_object in android/binder . h used to encode binders in the real // parceling code .  int length = 5 * INT_SIZE_BYTES ;  write Value ( length, b )  ; }"
4580,public  Builder set Place Id (  String place Id ) { this . place Id = place Id ;  return this ; }
4581,protected void shut Down (  )  throws  Exception{}
4582,"public synchronized void add On Tweak Declared Listener (  On Tweak Declared Listener listener ) { if  ( null == listener )  {     throw new  Null Pointer Exception ( ""listener cannot be null"" )  ;  } m Tweak Declared Listeners . add ( listener )  ; }"
4583,public void add Items (  List<T> items ) { m Datas . add All ( items )  ; }
4584,public void set On Change Direction Listener (  On Change Direction Listener on Change Direction Listener ) { this . m On Change Direction Listener = on Change Direction Listener ; }
4585,"public void set Content View ( int layout Res ID ) {  Layout Inflater inflator =  (  Layout Inflater )  anchor . get Context (  )  . get System Service (  Context . LAYOUT_INFLATER_SERVICE )  ;  set Content View ( inflator . inflate ( layout Res ID, null )  )  ; }"
4586,"private static  View create Translucent Status Bar View (  Activity activity, int alpha ) { // 绘制一个和状态栏一样高的矩形  View status Bar View = new  View ( activity )  ;   Linear Layout .  Layout Params params = new  Linear Layout .  Layout Params (  View Group .  Layout Params . MATCH_PARENT, get Status Bar Height ( activity )  )  ;  status Bar View . set Layout Params ( params )  ;  status Bar View . set Background Color (  Color . argb ( alpha, 0, 0, 0 )  )  ;  status Bar View . set Id ( FAKE_TRANSLUCENT_VIEW_ID )  ;  return status Bar View ; }"
4587,"protected void with Bind Holder (  Single Item Common Layout holder,  String data, int position ) { holder . text View Sample . set Text ( data )  ; }"
4588,"public void equality_unmanaged (  ) { test Equality ( new  Mutable Realm Integer Types (  ) , new  Mutable Realm Integer Types (  )  )  ; }"
4589,public static void add Global Perform Long Click Listener (  View .  On Long Click Listener listener ) {  Shadow View . global Long Click Listeners . add ( listener )  ; }
4590,"public com . anychart . standalones .  Resource List left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
4591,"public com . anychart . core . stock . scrollerseries .  Range Step Area max Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", width )  )  ;  return this ; }"
4592,public  Drop In Request vault Venmo ( boolean default Value ) { m Vault Venmo = default Value ;  return this ; }
4593,"protected void validate (  ) {  Preconditions . check State (  ( m Multi Image Requests == null )  ||  ( m Image Request == null ) , "" Cannot specify both  Image Request and  First Available Image Requests!"" )  ;   Preconditions . check State (  ( m Data Source Supplier == null )  ||  ( m Multi Image Requests == null && m Image Request == null && m Low Res Image Request == null ) , "" Cannot specify  Data Source Supplier with other  Image Requests!  Use one or the other . "" )  ; }"
4594,"public static  Striped< Lock> lazy Weak Lock ( int stripes ) { return lazy ( stripes, new  Supplier< Lock> (  )  {     @ Override     public  Lock get (  )  {         return new  Reentrant Lock ( false )  ;      } } )  ; }"
4595,"public void get Rotation Angle (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Rotation Angle (  )  ; "" )  ; }"
4596,public final boolean is Audio Size Enabled (  ) { return is Audio Size Enabled ; }
4597,"public void max Point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Point Width (  )  ; "" )  ; }"
4598,"public boolean validate With ( @ Non Null MET Validator validator ) {  Char Sequence text = get Text (  )  ;  boolean is Valid = validator . is Valid ( text, text . length (  )  == 0 )  ;  if  ( !is Valid )  {     set Error ( validator . get Error Message (  )  )  ;  } post Invalidate (  )  ;  return is Valid ; }"
4599,"public void name (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . name (  )  ; "" )  ; }"
4600,public BUILDER set Caller Context (  Object caller Context ) { m Caller Context = caller Context ;  return get This (  )  ; }
4601,public  String get Content (  ) { return content ; }
4602,public int get Created From Height (  ) { return created From Height ; }
4603,public T error ( @ Nullable  Drawable drawable ) { if  ( is Auto Clone Enabled )  {     return clone (  )  . error ( drawable )  ;  } this . error Placeholder = drawable ;  fields |= ERROR_PLACEHOLDER ;  this . error Id = 0 ;  fields &= ~ERROR_ID ;  return self Or Throw If Locked (  )  ; }
4604,"private void assert Ops (  List< Package Ops> pkg Ops,  Integer .  .  .  expected Ops ) {  Set< Integer> actual Ops = new  Hash Set<> (  )  ;  for  (  Package Ops pkg Op : pkg Ops )  {     for  (  Op Entry entry : pkg Op . get Ops (  )  )  {         actual Ops . add ( entry . get Op (  )  )  ;      } } assert That ( actual Ops )  . contains At Least Elements In ( expected Ops )  ; }"
4605,public  Checkout Command set Start Point (  String start Point ) { check Callable (  )  ;  this . start Point = start Point ;  this . start Commit = null ;  check Options (  )  ;  return this ; }
4606,"public static void vali Dir (  File file )  throws  Null Pointer Exception,  File Not Found Exception,  Illegal Argument Exception{ vali Object Is Null ( file, ""file"" )  ;  vali File Is Exists ( file )  ;  vali File Is Directory ( file )  ; }"
4607,protected  Object [  ]  standard To Array (  ) {  Object [  ]  new Array = new  Object [ size (  )  ]  ;  return to Array ( new Array )  ; }
4608,"public com . anychart . charts .  Sparkline bounds (  Number x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
4609,"public com . anychart . core .  State Settings high Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . high Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4610,"public  Delete Query<T> build Delete (  ) { if  ( !joins . is Empty (  )  )  {     throw new  Dao Exception ( ""JOI Ns are not supported for DELETE queries"" )  ;  }  String tablename = dao . get Tablename (  )  ;   String base Sql =  Sql Utils . create Sql Delete ( tablename, null )  ;   String Builder builder = new  String Builder ( base Sql )  ;  // table Prefix gets replaced by table name below .   Don't use table Name here because it causes trouble when // table name ends with table Prefix .  append Joins And Wheres ( builder, table Prefix )  ;   String sql = builder . to String (  )  ;  //  Remove table aliases, not supported for DELETE queries .  // TODO ( ? ) : don't create table aliases in the first place .  sql = sql . replace ( table Prefix + "" . \"""", '""' + tablename + ""\"" . \"""" )  ;  check Log ( sql )  ;  return  Delete Query . create ( dao, sql, values . to Array (  )  )  ; }"
4611,private  Path get Absolute Desired Link Path (  ) { return get Filesystem (  )  . resolve ( get Desired Link (  )  )  ; }
4612,"public void set Column Weight ( final int column Index, final int column Weight ) { column Weights . put ( column Index, column Weight )  ; }"
4613,public  String get Marker Title (  ) { return marker Title ; }
4614,public void test_ Float Nan Infinite (  )  throws  Exception{ // 正无穷大 assert Null (  Type Utils . cast To Big Decimal ( 1 . 0f / 0 . 0f )  )  ;  // 负无穷大 assert Null (  Type Utils . cast To Big Decimal ( -1 . 0f / 0 . 0f )  )  ;  //  Na N assert Null (  Type Utils . cast To Big Decimal ( 0 . 0f / 0 . 0f )  )  ; }
4615,public boolean is Set Debug Info (  ) { return this . debug Info != null ; }
4616,"public  Map< String,  Object> get Data ( @ Non Null  Server Timestamp Behavior server Timestamp Behavior ) { check Not Null ( server Timestamp Behavior, "" Provided server Timestamp Behavior value must not be null . "" )  ;   User Data Writer user Data Writer = new  User Data Writer ( firestore, server Timestamp Behavior )  ;  return doc == null ? null : user Data Writer . convert Object ( doc . get Data (  )  . get Fields Map (  )  )  ; }"
4617,public int get Modulus (  ) { return modulus ; }
4618,"public com . anychart . charts .  Venn hatch Fill Palette ( com . anychart . graphics . vector . hatchfill .  Hatch Fill Type [  ]  settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill Palette ( %s )  ; "", array To String ( settings )  )  )  ;  return this ; }"
4619,protected void started ( final  Base Download Task task ) {}
4620,private static  Collection< Weighted Lat Lng> wrap Data (  Collection< Lat Lng> data ) { //  Use an  Array List as it is a nice collection  Array List< Weighted Lat Lng> weighted Data = new  Array List< Weighted Lat Lng> (  )  ;  for  (  Lat Lng l : data )  {     weighted Data . add ( new  Weighted Lat Lng ( l )  )  ;  } return weighted Data ; }
4621,"public void query ( float center X, float center Y, float radius,  Float Array results ) { query ( center X, center Y, radius * radius, center X - radius, center Y - radius, radius * 2, results )  ; }"
4622,public int get End Offset (  ) { return end Offset ; }
4623,"public static  Lottie Result< Lottie Composition> from Url Sync (  Context context,  String url, @ Nullable  String cache Key ) {  Lottie Result< Lottie Composition> result = L . network Fetcher ( context )  . fetch Sync ( url, cache Key )  ;  if  ( cache Key != null && result . get Value (  )  != null )  {      Lottie Composition Cache . get Instance (  )  . put ( cache Key, result . get Value (  )  )  ;  } return result ; }"
4624,public void write (  Annotations Writer writer )  throws IO Exception{ writer . const Value Index ( get Value (  )  )  ; }
4625,public  Fetch Request .  Builder<T> new Fetch Request Builder (  Class<T> entity Type ) { return  Fetch Request .  Builder . for Entity ( store Coordinator . get Model (  )  . get Entity ( entity Type )  )  ; }
4626,public void unbind ( @ Non Null T view ) {}
4627,"private  Internal Provider<? extends T> get Internal Provider (  Class<T> clazz,  String binding Name, boolean is Scoped ) { if  ( binding Name == null )  {     if  ( is Scoped )  {         synchronized  ( map Classes To Un Named Scoped Providers )  {             return map Classes To Un Named Scoped Providers . get ( clazz )  ;          }     } else {         synchronized  ( map Classes To Un Named Un Scoped Providers )  {             return map Classes To Un Named Un Scoped Providers . get ( clazz )  ;          }     } } else {     synchronized  ( map Classes To Named Scoped Providers )  {          Map< String,  Internal Scoped Provider> map Name To Provider = map Classes To Named Scoped Providers . get ( clazz )  ;          if  ( map Name To Provider == null )  {             return null ;          }         return map Name To Provider . get ( binding Name )  ;      } }}"
4628,"public com . anychart . charts .  Heat Map min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
4629,"public com . anychart . core . ui .  Markers Factory markers (  ) { return new com . anychart . core . ui .  Markers Factory ( js Base + "" . markers (  ) "" )  ; }"
4630,public  Horizontal Group center (  ) { align =  Align . center ;  return this ; }
4631,"protected void check Can Create (  ) { if  ( subject Generator == null )  {     throw new  Illegal State Exception ( "" Call using (  )  before create Test Suite (  )  . "" )  ;  } if  ( name == null )  {     throw new  Illegal State Exception ( "" Call named (  )  before create Test Suite (  )  . "" )  ;  } if  ( features == null )  {     throw new  Illegal State Exception ( "" Call with Features (  )  before create Test Suite (  )  . "" )  ;  }}"
4632,public static  Clone Command clone Repository (  ) { return new  Clone Command (  )  ; }
4633,public  String get Message (  ) { return message ; }
4634,"public  Model With Annotated Class And Super Attributes_ on Visibility State Changed (  On Model Visibility State Changed Listener< Model With Annotated Class And Super Attributes_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
4635,public static  Document Key empty (  ) { return from Segments (  Collections . empty List (  )  )  ; }
4636,"static int next Opcode ( byte [  ]  code, int index )  throws  Bad Bytecode{ int opcode ;  try {     opcode = code [ index ]  & 0xff ;  } catch  (  Index Out Of Bounds Exception e )  {     throw new  Bad Bytecode ( ""invalid opcode address"" )  ;  } try {     int len = opcode Length [ opcode ]  ;      if  ( len > 0 )          return index + len ;      else if  ( opcode == WIDE )          if  ( // WIDE IINC         code [ index + 1 ]  ==  ( byte )  IINC )              return index + 6 ;          else             // WIDE  .  .  .              return index + 4 ;      int index2 =  ( index & ~3 )  + 8 ;      if  ( opcode == LOOKUPSWITCH )  {         int npairs =  Byte Array . read32bit ( code, index2 )  ;          return index2 + npairs * 8 + 4 ;      } else if  ( opcode == TABLESWITCH )  {         int low =  Byte Array . read32bit ( code, index2 )  ;          int high =  Byte Array . read32bit ( code, index2 + 4 )  ;          return index2 +  ( high - low + 1 )  * 4 + 8 ;      } } catch  (  Index Out Of Bounds Exception e )  { } // opcode is UNUSED or an  Index Out Of Bounds Exception was thrown .  throw new  Bad Bytecode ( opcode )  ; }"
4637,public boolean is Subset Of (  Object obj ) { return obj instanceof  Abstract Tag Item ; }
4638,void set Publish Retransmit Count ( final int publish Retransmit Count ) { this . publish Retransmit Count = publish Retransmit Count ; }
4639,"public void on Load More ( int last Position, int current Page ) { // new items that arrive from remote, should be already filtered, before adding them to the  Adapter! if  ( m Adapter . has Filter (  )  )  {     m Adapter . on Load More Complete ( null )  ;      return ;  } //  Simulating asynchronous call new  Handler (  )  . post Delayed ( new  Runnable (  )  {     @ Override     public void run (  )  {         final  List< Abstract Flexible Item> new Items = new  Array List<> (  )  ;          // 1 .   Simulating success/failure with  Random         int count = new  Random (  )  . next Int ( 200 )  ;          int total Items Of Type = m Adapter . get Item Count Of Types ( R . layout . recycler_simple_item )  ;          for  ( int i = 1 ;  i <= count ;  i++ )  {             new Items . add (  Database Service . new Simple Item ( total Items Of Type + i, null )  )  ;          }         //    To enable again, you must call set Endless Progress Item ( @ Nullable T progress Item )  .          if  ( m Adapter . is Top Endless (  )  )  {              Collections . reverse ( new Items )  ;               Database Service . get Instance (  )  . add All ( 0, new Items )  ;          } else {              Database Service . get Instance (  )  . add All ( new Items )  ;          }         m Adapter . on Load More Complete ( new Items,  ( new Items . is Empty (  )  ? -1 : 3000 L )  )  ;          // -  Retrieve the new page number after adding new items!          Log . d ( TAG, "" Last Position="" + last Position )  ;           Log . d ( TAG, "" Endless Current Page="" + m Adapter . get Endless Current Page (  )  )  ;           Log . d ( TAG, "" Endless Page Size="" + m Adapter . get Endless Page Size (  )  )  ;           Log . d ( TAG, "" Endless Target Count="" + m Adapter . get Endless Target Count (  )  )  ;          //       implement I Expandable interface!  So don't care about them .          for  (  Abstract Flexible Item item : new Items )  {             //  Option A .   (  Best use case )   Initialization is performed:             // -  Expanded status is ignored .  WARNING: possible sub Items duplication!             // -  Automatic scroll is skipped             m Adapter . expand ( item, true )  ;          //  Option B .   Simple expansion is performed:         // - WARNING:  Automatic scroll is performed!         //m Adapter . expand ( item )  ;          }         // 4 .   Notify user         if  ( get Activity (  )  != null && new Items . size (  )  > 0 )  {              Toast . make Text ( get Activity (  ) , "" Simulated: "" + new Items . size (  )  + "" new items arrived :- ) "",  Toast . LENGTH_SHORT )  . show (  )  ;          }     } }, 2000 L )  ; }"
4640,"public void test Cancellations_non Inflight (  ) { //  Hi-pri is LIFO,  Max hi-pri: 2, max low-pri: 1  Priority Network Fetcher< Fetch State> fetcher = new  Priority Network Fetcher<> ( delegate, false, 2, 1, false, 0, false, NO_DELAYED_REQUESTS, 0, false )  ;   Priority Fetch State< Fetch State> one = fetch ( fetcher, ""1"", callback, false )  ;   Priority Fetch State< Fetch State> two = fetch ( fetcher, ""2"", callback, false )  ;  // 'one' was requested from the delegate, 'two' is waiting for a free slot .  assert That ( fetcher . get Currently Fetching (  )  )  . contains Exactly ( one )  ;  assert That ( fetcher . get Low Pri Queue (  )  )  . contains ( two )  ;  //  Cancel 'one' - nothing happens, because it's already in-flight .  cancel ( one )  ;  assert That ( fetcher . get Low Pri Queue (  )  )  . contains ( two )  ;  assert That ( fetcher . get Currently Fetching (  )  )  . contains Exactly ( one )  ;  verify ( callback, never (  )  )  . on Cancellation (  )  ;  //  Cancel 'two' .  cancel ( two )  ;  assert That ( fetcher . get Low Pri Queue (  )  )  . is Empty (  )  ;  assert That ( fetcher . get Currently Fetching (  )  )  . contains Exactly ( one )  ;  verify ( callback )  . on Cancellation (  )  ; }"
4641,"public void to Svg (  String paper Size,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Svg ( %s, %s )  ; "", wrap Quotes ( paper Size ) , landscape )  )  ; }"
4642,public static boolean is Power Of Two ( long x ) { return x > 0 &  ( x &  ( x - 1 )  )  == 0 ; }
4643,"public com . anychart . core . cartesian . series .  Range Bar max Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
4644,public int get Num Components (  ) { return 1 ; }
4645,public void reload (  ) { m Renderer . reload Textures (  )  ; }
4646,public  Writable2 .  State get_writable State (  ) { return _writable State ; }
4647,"public synchronized byte [  ]  wrap ( byte [  ]  data )  throws  Secure Session Exception{ if  ( 0 == session Ptr )  {     throw new  Illegal State Exception ( "" Secure  Session is closed"" )  ;  } if  ( null == data )  {     throw new  Null Argument Exception (  )  ;  } byte [  ]  wrapped Data = jni Wrap ( data )  ;  if  ( null == wrapped Data )  {     throw new  Secure Session Exception ( "" Secure  Session failed to wrap data"" )  ;  } return wrapped Data ; }"
4648,"public  Validation Report< Type Element> validate (  Type Element type ) { return reentrant Compute If Absent ( reports, type, this::validate Uncached )  ; }"
4649,"protected long log Event Interval (  String prefix,  Optional< String> suffix, long current Millis, long offset Ms, @ Nullable  Buck Event start Event, @ Nullable  Buck Event finished Event,  Optional< Double> progress,  Optional< Long> minimum,  Immutable List .  Builder< String> lines ) { if  ( start Event == null )  {     return UNFINISHED_EVENT_PAIR ;  }  Event Interval interval =  Event Interval . of (  Optional Long . of ( start Event . get Timestamp Millis (  )  ) , finished Event == null ?  Optional Long . empty (  )  :  Optional Long . of ( finished Event . get Timestamp Millis (  )  )  )  ;  return log Event Interval ( prefix, suffix, current Millis, offset Ms,  Immutable List . of ( interval ) , progress, minimum, lines )  ; }"
4650,public  Dash Path Effect get Dash Path Effect (  ) { return m Dash Path Effect ; }
4651,"public void height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . height (  )  ; "" )  ; }"
4652,"public void set Transform (  Matrix new Transform, long duration Ms, @ Nullable  Runnable on Animation Complete ) { F Log . v ( get Log Tag (  ) , ""set Transform: duration %d ms"", duration Ms )  ;  if  ( duration Ms <= 0 )  {     set Transform Immediate ( new Transform )  ;  } else {     set Transform Animated ( new Transform, duration Ms, on Animation Complete )  ;  }}"
4653,protected boolean is Reader Available ( final GUID guid ) { return this . reader Map . contains Key ( guid )  ; }
4654,"public com . anychart . core . axismarkers .  Text text Marker (  Number index ) { return new com . anychart . core . axismarkers .  Text (  String . format (  Locale . US, js Base + "" . text Marker ( %s ) "", index )  )  ; }"
4655,public  Check Box Message Dialog Builder set Checked ( boolean checked ) { if  ( m Is Checked != checked )  {     m Is Checked = checked ;      if  ( m Text View != null )  {         m Text View . set Selected ( checked )  ;      } } return this ; }
4656,public void freeze (  ) {}
4657,"public void write String ( @ Null  String value )  throws IO Exception{ if  ( value == null )  {     write ( 0 )  ;      return ;  } int char Count = value . length (  )  ;  if  ( char Count == 0 )  {     write Byte ( 1 )  ;      return ;  } write Int ( char Count + 1, true )  ;  //  Try to write 8 bit chars .  int char Index = 0 ;  for  (  ;  char Index < char Count ;  char Index++ )  {     int c = value . char At ( char Index )  ;      if  ( c > 127 )          break ;      write (  ( byte )  c )  ;  } if  ( char Index < char Count )      write String_slow ( value, char Count, char Index )  ; }"
4658,public  Ls Remote Command set Upload Pack (  String upload Pack ) { this . upload Pack = upload Pack ;  return this ; }
4659,"public void default Series Type (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . default Series Type (  )  ; "" )  ; }"
4660,"protected  Char Sequence get Profile Switching Label (  User Handle user Handle ) { verify Can Access User ( user Handle )  ;  return "" Switch to "" + user Handle ; }"
4661,"private static float center From End ( int [  ]  state Count, int end ) { return  ( end - state Count [ 2 ]  )  - state Count [ 1 ]  / 2 . 0f ; }"
4662,public void set Reset Messenger State ( final boolean reset Messenger State ) { properties . set Reset Messenger State ( reset Messenger State )  ; }
4663,"public  Rev Commit call (  )  throws  Git API Exception,  Aborted By Hook Exception,  Concurrent Ref Update Exception,  No Head Exception,  No Message Exception,  Service Unavailable Exception,  Unmerged Paths Exception,  Wrong Repository State Exception{ check Callable (  )  ;   Collections . sort ( only )  ;  try  (  Rev Walk rw = new  Rev Walk ( repo )  )  {      Repository State state = repo . get Repository State (  )  ;      if  ( !state . can Commit (  )  )          throw new  Wrong Repository State Exception (  Message Format . format ( J Git Text . get (  )  . cannot Commit On A Repo With State, state . name (  )  )  )  ;      if  ( !no Verify )  {          Hooks . pre Commit ( repo, hook Out Redirect . get (  Pre Commit Hook . NAME ) , hook Err Redirect . get (  Pre Commit Hook . NAME )  )  . call (  )  ;      }     process Options ( state, rw )  ;      if  ( all && !repo . is Bare (  )  )  {         try  (  Git git = new  Git ( repo )  )  {             //$NON-NLS-1$             git . add (  )  . add Filepattern ( "" . "" )  . set Update ( true )  . call (  )  ;          } catch  (  No Filepattern Exception e )  {             // should really not happen             throw new J Git Internal Exception ( e . get Message (  ) , e )  ;          }     }      Ref head = repo . exact Ref (  Constants . HEAD )  ;      if  ( head == null )          throw new  No Head Exception ( J Git Text . get (  )  . commit On Repo Without HEAD Currently Not Supported )  ;      // determine the current HEAD and the commit it is referring to     //$NON-NLS-1$      Object Id head Id = repo . resolve (  Constants . HEAD + ""^{commit}"" )  ;      if  ( head Id == null && amend )          throw new  Wrong Repository State Exception ( J Git Text . get (  )  . commit Amend On Initial Not Possible )  ;      if  ( head Id != null )          if  ( amend )  {              Rev Commit previous Commit = rw . parse Commit ( head Id )  ;              for  (  Rev Commit p : previous Commit . get Parents (  )  )  parents . add ( p . get Id (  )  )  ;              if  ( author == null )                  author = previous Commit . get Author Ident (  )  ;          } else {             parents . add ( 0, head Id )  ;          }     if  ( !no Verify )  {         message =  Hooks . commit Msg ( repo, hook Out Redirect . get (  Commit Msg Hook . NAME ) , hook Err Redirect . get (  Commit Msg Hook . NAME )  )  . set Commit Message ( message )  . call (  )  ;      }      Rev Commit rev Commit ;       Dir Cache index = repo . lock Dir Cache (  )  ;      try  (  Object Inserter odi = repo . new Object Inserter (  )  )  {         if  ( !only . is Empty (  )  )              index = create Temporary Index ( head Id, index, rw )  ;          //  Write the index as tree to the object database .   This may         // fail for example when the index contains unmerged paths         //  ( unresolved conflicts )           Object Id index Tree Id = index . write Tree ( odi )  ;          if  ( insert Change Id )              insert Change Id ( index Tree Id )  ;          check If Empty ( rw, head Id, index Tree Id )  ;          //  Create a  Commit object, populate it and write it          Commit Builder commit = new  Commit Builder (  )  ;          commit . set Committer ( committer )  ;          commit . set Author ( author )  ;          commit . set Message ( message )  ;          commit . set Parent Ids ( parents )  ;          commit . set Tree Id ( index Tree Id )  ;          if  ( sign Commit . boolean Value (  )  )  {             sign ( commit )  ;          }          Object Id commit Id = odi . insert ( commit )  ;          odi . flush (  )  ;          rev Commit = rw . parse Commit ( commit Id )  ;          update Ref ( state, head Id, rev Commit, commit Id )  ;      } finally {         index . unlock (  )  ;      }     try {          Hooks . post Commit ( repo, hook Out Redirect . get (  Post Commit Hook . NAME ) , hook Err Redirect . get (  Post Commit Hook . NAME )  )  . call (  )  ;      } catch  (  Exception e )  {         log . error (  Message Format . format ( J Git Text . get (  )  . post Commit Hook Failed, e . get Message (  )  ) , e )  ;      }     return rev Commit ;  } catch  (  Unmerged Path Exception e )  {     throw new  Unmerged Paths Exception ( e )  ;  } catch  ( IO Exception e )  {     throw new J Git Internal Exception ( J Git Text . get (  )  . exception Caught During Execution Of Commit Command, e )  ;  }}"
4664,"public com . anychart . core . stock .  Plot container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
4665,"private  Base Ice Soap Parser Impl<?> get Parser For Field (  Field field, X Path Pull Parser pull Parser, X Path Element field X Path ) {  Class<?> class For Parser = field . get Type (  )  ;  if  (  List . class . is Assignable From ( field . get Type (  )  )  )  {     //  Class to parse is a list - find out the parameterized type of the     // list and create a parser for that, then wrap a  List Parser around     // it .      class For Parser = get List Item Class ( field . get Generic Type (  )  )  ;  }  Base Ice Soap Parser Impl<?> parser For Class = parser Cache . get ( field X Path )  ;  if  ( parser For Class == null )  {     parser For Class = new  Ice Soap Parser Impl ( class For Parser, field X Path )  ;      parser Cache . put ( field X Path, parser For Class )  ;  } //  The type is not a list - create a parser return parser For Class ; }"
4666,public void set Object ( PDF Object obj ) { this . reference = new  Soft Reference<PDF Object> ( obj )  ; }
4667,public  Set User Builder with Avatar Url (  String avatar Url ) { this . avatar Url = avatar Url ;  return this ; }
4668,"public void save (  Set User Listener listener ) { save (  )  . subscribe On (  Schedulers . io (  )  )  . observe On (  Android Schedulers . main Thread (  )  )  . subscribe ( listener::on Success, listener::on Error )  ; }"
4669,public boolean is End Marker Read (  ) { return m End Marker Read ; }
4670,"public boolean can Be Encoded (  ) { for  (  Pair entry :  (  (  Value Pairs )  value )  . mapping )  {      Text Encoded String Null Terminated next = new  Text Encoded String Null Terminated ( identifier, frame Body, entry . get Value (  )  )  ;      if  ( !next . can Be Encoded (  )  )  {         return false ;      } } return true ; }"
4671,"public com . anychart . core . utils .  Margin set (  Number [  ]  value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set ( %s, %s, %s, %s )  ; "",  Arrays . to String ( value1 ) , value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
4672,"public void add Store (  Persistent Store store ) { if  ( store . get Coordinator (  )  != null && store . get Coordinator (  )  != this )  {     throw new  Illegal State Exception ( "" Persistent Store "" + store + "" already assigned to another coordinator"" )  ;  } store . set Persistent Store Coordinator ( this )  ;  store . load Metadata (  )  ;  if  ( store . get Uuid (  )  == null )  {     throw new  Runtime Exception ( "" Did not get permanent UUID from store: "" + store )  ;  } store Uuid To Persistent Store . put ( store . get Uuid (  ) , store )  ;  LOG . info ( "" Added persistent store "" + store )  ; }"
4673,"public void set Cache Folder (  File cache Folder )  throws  Cache Creation Exception{ if  ( cache Folder == null )  {     cache Folder = new  File ( get Application (  )  . get Cache Dir (  ) , DEFAULT_ROOT_CACHE_DIR )  ;  } synchronized  ( cache Folder . get Absolute Path (  )  . intern (  )  )  {     if  ( !cache Folder . exists (  )  && !cache Folder . mkdirs (  )  )  {         throw new  Cache Creation Exception ( "" The cache folder "" + cache Folder . get Absolute Path (  )  + "" could not be created . "" )  ;      } } this . cache Folder = cache Folder ; }"
4674,"protected  Entry<K, V> [  ]  create Array With Null Key (  ) {  Entry<K, V> [  ]  array = create Samples Array (  )  ;  final int null Key Location = get Null Location (  )  ;  final  Entry<K, V> old Entry = array [ null Key Location ]  ;  array [ null Key Location ]  = entry ( null, old Entry . get Value (  )  )  ;  return array ; }"
4675,public  View get View To Click (  ) { return view To Click ; }
4676,protected int get Def Item View Type ( int position ) { return super . get Item View Type ( position )  ; }
4677,public void set Immutable (  ) { mutable = false ; }
4678,"public  Field Ref [  ]  get Field Refs (  ) {  Field Ref [  ]  field Refs = new  Field Ref [ m Field Ids . length ]  ;  for  ( int i = 0 ;  i < m Field Ids . length ;  i++ )  {      Field Id Item field Id = m Field Ids [ i ]  ;      field Refs [ i ]  = new  Field Ref ( class Name From Type Index ( field Id . class Idx ) , class Name From Type Index ( field Id . type Idx ) , m Strings [ field Id . name Idx ]  )  ;  } return field Refs ; }"
4679,public  String get Key (  ) { return m Component . get Key (  )  ; }
4680,"private  Class<?> load Managed Class (  String class Name )  throws  Class Not Found Exception{ if  ( m Delegate == null )  {     throw new  Runtime Exception ( "" Delegating CL was not initialized via  Exopackage Dex Loader . load Exopackage Jars"" )  ;  } try {     //  First try loading the class from the cache      Class<?> clazz =  (  Class<?> )  s FIND_LOADED_CLASS . invoke ( m Delegate, class Name )  ;      if  ( clazz == null )  {         //  Otherwise, load it from the relevant dex file          Dex File origin = m Managed Classes To Dex File . get ( class Name )  ;          if  ( origin == null )  {             throw new  Class Not Found Exception ( "" Unable to find class "" + class Name )  ;          }         // attribute all classloads to the same classloader so that package-scoping works correctly         // and so that we can use its loaded class cache         clazz = origin . load Class ( class Name, m Delegate )  ;      }     return clazz ;  } catch  (  Exception e )  {     throw new  Class Not Found Exception ( "" Unable to find class "" + class Name, e . get Cause (  )  )  ;  }}"
4681,"public void test Hierarchy Worktree Only (  )  throws IO Exception,  No Filepattern Exception,  Git API Exception{ write Attributes File ( "" . git/info/attributes"", ""* . global eol=crlf"" )  ;  write Attributes File ( "" . gitattributes"", ""* . local eol=lf"" )  ;  write Attributes File ( ""level1/ . gitattributes"", ""* . local text"" )  ;  write Attributes File ( ""level1/level2/ . gitattributes"", ""* . local -text"" )  ;  write Trash File ( ""l0 . global"", """" )  ;  write Trash File ( ""l0 . local"", """" )  ;  write Trash File ( ""level1/l1 . global"", """" )  ;  write Trash File ( ""level1/l1 . local"", """" )  ;  write Trash File ( ""level1/level2/l2 . global"", """" )  ;  write Trash File ( ""level1/level2/l2 . local"", """" )  ;  begin Walk (  )  ;  assert Entry ( F, "" . gitattributes"" )  ;  assert Entry ( F, ""l0 . global"", as Set ( EOL_CRLF )  )  ;  assert Entry ( F, ""l0 . local"", as Set ( EOL_LF )  )  ;  assert Entry ( D, ""level1"" )  ;  assert Entry ( F, ""level1/ . gitattributes"" )  ;  assert Entry ( F, ""level1/l1 . global"", as Set ( EOL_CRLF )  )  ;  assert Entry ( F, ""level1/l1 . local"", as Set ( EOL_LF, TEXT_SET )  )  ;  assert Entry ( D, ""level1/level2"" )  ;  assert Entry ( F, ""level1/level2/ . gitattributes"" )  ;  assert Entry ( F, ""level1/level2/l2 . global"", as Set ( EOL_CRLF )  )  ;  assert Entry ( F, ""level1/level2/l2 . local"", as Set ( EOL_LF, TEXT_UNSET )  )  ;  end Walk (  )  ; }"
4682,"public  Google Analytics Parameters .  Builder set Source ( @ Non Null  String source ) { parameters . put String ( KEY_UTM_SOURCE, source )  ;  return this ; }"
4683,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_TITLE ; }
4684,"public void write Bundle (  Progress Monitor monitor,  Output Stream os )  throws IO Exception{ try  (  Pack Writer pack Writer = new Pack Writer (  )  )  {     pack Writer . set Object Count Callback ( callback )  ;      pack Writer . set Index Disabled ( true )  ;      pack Writer . set Delta Base As Offset ( true )  ;      pack Writer . set Reuse Validating Objects ( false )  ;      if  ( cached Packs . is Empty (  )  )  {          Hash Set< Object Id> inc = new  Hash Set<> (  )  ;           Hash Set< Object Id> exc = new  Hash Set<> (  )  ;          inc . add All ( include . values (  )  )  ;          for  (  Rev Commit r : assume )  {             exc . add ( r . get Id (  )  )  ;          }         if  ( exc . is Empty (  )  )  {             pack Writer . set Tag Targets ( tag Targets )  ;          }         pack Writer . set Thin ( !exc . is Empty (  )  )  ;          pack Writer . prepare Pack ( monitor, inc, exc )  ;      } else {         pack Writer . prepare Pack ( cached Packs )  ;      }     final  Writer w = new  Output Stream Writer ( os, UTF_8 )  ;      w . write (  Transport Bundle . V2_BUNDLE_SIGNATURE )  ;      w . write ( '\n' )  ;      final char [  ]  tmp = new char [  Constants . OBJECT_ID_STRING_LENGTH ]  ;      for  (  Rev Commit a : assume )  {         w . write ( '-' )  ;          a . copy To ( tmp, w )  ;          if  ( a . get Raw Buffer (  )  != null )  {             w . write ( ' ' )  ;              w . write ( a . get Short Message (  )  )  ;          }         w . write ( '\n' )  ;      }     for  (  Map .  Entry< String,  Object Id> e : include . entry Set (  )  )  {         e . get Value (  )  . copy To ( tmp, w )  ;          w . write ( ' ' )  ;          w . write ( e . get Key (  )  )  ;          w . write ( '\n' )  ;      }     w . write ( '\n' )  ;      w . flush (  )  ;      pack Writer . write Pack ( monitor, monitor, os )  ;  }}"
4685,"public com . anychart . charts .  Linear Gauge left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
4686,"public void test Acquire Token By Refresh Token Positive (  )  throws IO Exception,  Interrupted Exception, JSON Exception{  File Mock Context mock Context = new  File Mock Context ( get Instrumentation (  )  . get Context (  )  )  ;  I Token Cache Store mock Cache = get Cache For Refresh Token ( TEST_IDTOKEN_USERID, TEST_IDTOKEN_UPN )  ;  final  Authentication Context context = get Authentication Context ( mock Context, VALID_AUTHORITY, false, mock Cache )  ;  final  Count Down Latch signal = new  Count Down Latch ( 1 )  ;   String expected Client Id = ""client"" + UUID . random UUID (  )  . to String (  )  ;   String expted Resource = ""resource"" + UUID . random UUID (  )  . to String (  )  ;   Mock Authentication Callback callback = new  Mock Authentication Callback ( signal )  ;  final  Http URL Connection mocked Connection =  Mockito . mock (  Http URL Connection . class )  ;   Http Url Connection Factory . set Mocked Http Url Connection ( mocked Connection )  ;   Util . prepare Mocked Url Connection ( mocked Connection )  ;   Mockito . when ( mocked Connection . get Output Stream (  )  )  . then Return (  Mockito . mock (  Output Stream . class )  )  ;   Mockito . when ( mocked Connection . get Input Stream (  )  )  . then Return (  Util . create Input Stream (  Util . get Success Token Response ( false, false )  ) ,  Util . create Input Stream (  Util . get Success Token Response ( true, true )  )  )  ;   Mockito . when ( mocked Connection . get Response Code (  )  )  . then Return (  Http URL Connection . HTTP_OK )  ;  context . acquire Token By Refresh Token ( ""refresh Token Sending"", expected Client Id, callback )  ;  signal . await ( CONTEXT_REQUEST_TIME_OUT,  Time Unit . MILLISECONDS )  ;  //  Verify that new refresh token is matching to mock response assert Equals ( "" Same token"", ""I am a new access token"", callback . get Authentication Result (  )  . get Access Token (  )  )  ;  assert Equals ( "" Same refresh token"", ""I am a new refresh token"", callback . get Authentication Result (  )  . get Refresh Token (  )  )  ;  final  Count Down Latch signal2 = new  Count Down Latch ( 1 )  ;  callback = new  Mock Authentication Callback ( signal2 )  ;  context . acquire Token By Refresh Token ( ""refresh Token Sending"", expected Client Id, expted Resource, callback )  ;  signal2 . await ( CONTEXT_REQUEST_TIME_OUT,  Time Unit . MILLISECONDS )  ;  //  Verify that new refresh token is matching to mock response assert Equals ( "" Same token"", ""I am a new access token"", callback . get Authentication Result (  )  . get Access Token (  )  )  ;  assert Equals ( "" Same refresh token"", ""I am a new refresh token"", callback . get Authentication Result (  )  . get Refresh Token (  )  )  ;  assert Not Null ( "" Result has user info from idtoken"", callback . get Authentication Result (  )  . get User Info (  )  )  ;  assert Equals ( "" Result has user info from idtoken"", TEST_IDTOKEN_UPN, callback . get Authentication Result (  )  . get User Info (  )  . get Displayable Id (  )  )  ; }"
4687,"public static final int get Device Key ( final  Usb Device device, final boolean use New API ) { return device != null ? get Device Key Name ( device, null, use New API )  . hash Code (  )  : 0 ; }"
4688,"public com . anychart . charts .  Pert bounds (  String x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
4689,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
4690,protected  File Repository create Bare Repository (  )  throws IO Exception{ return create Repository ( true )  ; }
4691,public boolean add Capture Listener (  Event Listener listener ) { return root . add Capture Listener ( listener )  ; }
4692,private void write Object ( java . io .  Object Output Stream s )  throws java . io . IO Exception{ final  Reentrant Lock lock = this . lock ;  lock . lock (  )  ;  try {     //  Write out capacity and any hidden stuff     s . default Write Object (  )  ;      //  Write out all elements in the proper order .      for  (  Node<E> p = first ;  p != null ;  p = p . next )  s . write Object ( p . item )  ;      //  Use trailing null as sentinel     s . write Object ( null )  ;  } finally {     lock . unlock (  )  ;  }}
4693,"public int accumulate Sum ( int .  .  .  nums ) { LOGGER . info ( "" Source module {}"", VERSION )  ;  return  Arrays . stream ( nums )  . reduce ( 0,  Integer::sum )  ; }"
4694,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
4695,"private  Type Mirror map Of Framework Type (  Type Mirror key Type,  Type Element framework Type,  Type Mirror value Type ) { return map Of ( key Type, types . get Declared Type ( framework Type, box Primitives ( value Type )  )  )  ; }"
4696,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
4697,"public static  Qiscus Comment generate Custom Message ( long room Id,  String text,  String type, JSON Object content ) {  Qiscus Comment qiscus Comment = generate Message ( room Id, text )  ;  qiscus Comment . set Raw Type ( ""custom"" )  ;  JSON Object json = new JSON Object (  )  ;  try {     json . put ( ""type"", type )  . put ( ""content"", content )  ;  } catch  ( JSON Exception e )  {     e . print Stack Trace (  )  ;  } qiscus Comment . set Extra Payload ( json . to String (  )  )  ;  return qiscus Comment ; }"
4698,"public com . anychart . core . utils .  Chart A11y a11y (  ) { return new com . anychart . core . utils .  Chart A11y ( js Base + "" . a11y (  ) "" )  ; }"
4699,public  Amplitude Client disable Location Listening (  ) { this . location Listening = false ;  if  ( this . device Info != null )  {     this . device Info . set Location Listening ( false )  ;  } return this ; }
4700,public  Repo Command set Branch (  String branch ) { this . branch = branch ;  return this ; }
4701,public void set Hide Underline ( boolean hide Underline ) { this . hide Underline = hide Underline ;  init Padding (  )  ;  post Invalidate (  )  ; }
4702,"public void mark Point (  String event Name,  String stage,  String data Attribution ) { if  ( stage . equals ( START )  )  {     m Started Events . add ( get Full Marker Name ( event Name, data Attribution, """" )  )  ;  } else if  ( stage . equals ( END )  && !m Started Events . remove ( get Full Marker Name ( event Name, data Attribution, """" )  )  )  {     // no matching start point, skip  ( can happen for changeset end )      return ;  } mark Point ( get Full Marker Name ( event Name, data Attribution, stage )  )  ; }"
4703,boolean has Multiple Setup (  ) { return m Setup List . size (  )  > 1 ; }
4704,public void set Bottom ( float bottom ) { this . bottom = bottom ;  invalidate Self (  )  ; }
4705,"public boolean alter ( K before, K after ) { if  ( contains Key ( after )  )      return false ;  int index = keys . index Of ( before, false )  ;  if  ( index == -1 )      return false ;  super . put ( after, super . remove ( before )  )  ;  keys . set ( index, after )  ;  return true ; }"
4706,"private void init Layout (  Intent intent ) { if  (  Build . VERSION . SDK_INT >  Build . VERSION_CODES . GINGERBREAD_MR1 )  {     // Animate if greater than 2 . 3 . 3     override Pending Transition ( R . anim . nothing, R . anim . nothing )  ;  }  Bundle extras = intent . get Extras (  )  ;  if  ( extras != null )  {     m Type = extras . get Int (  App Lock . EXTRA_TYPE,  App Lock . UNLOCK_PIN )  ;  } m Lock Manager =  Lock Manager . get Instance (  )  ;  m Pin Code = """" ;  m Old Pin Code = """" ;  enable App Locker If Does Not Exist (  )  ;  m Lock Manager . get App Lock (  )  . set Pin Challenge Cancelled ( false )  ;  m Step Text View =  (  Text View )  this . find View By Id ( R . id . pin_code_step_textview )  ;  m Pin Code Round View =  (  Pin Code Round View )  this . find View By Id ( R . id . pin_code_round_view )  ;  m Pin Code Round View . set Pin Length ( this . get Pin Length (  )  )  ;  m Forgot Text View =  (  Text View )  this . find View By Id ( R . id . pin_code_forgot_textview )  ;  m Forgot Text View . set On Click Listener ( this )  ;  m Keyboard View =  (  Keyboard View )  this . find View By Id ( R . id . pin_code_keyboard_view )  ;  m Keyboard View . set Keyboard Button Clicked Listener ( this )  ;  int logo Id = m Lock Manager . get App Lock (  )  . get Logo Id (  )  ;   Image View logo Image =  (  (  Image View )  find View By Id ( R . id . pin_code_logo_imageview )  )  ;  if  ( logo Id !=  App Lock . LOGO_ID_NONE )  {     logo Image . set Visibility (  View . VISIBLE )  ;      logo Image . set Image Resource ( logo Id )  ;  } m Forgot Text View . set Text ( get Forgot Text (  )  )  ;  set Forgot Text Visibility (  )  ;  set Step Text (  )  ; }"
4707,protected void setup Expand Collapse List Animation (  Card View Wrapper card View ) { if  ( card View == null )      return ;  card View . set On Expand List Animator Listener ( m Card Grid View )  ; }
4708,"public  Matrix Job Intent Service .  Generic Work Item dequeue Work (  ) {  Job Work Item work ;  synchronized  ( m Lock )  {     if  ( m Params == null )  {         return null ;      }     try {         work = m Params . dequeue Work (  )  ;      } catch  (  Throwable thr )  {          Matrix Log . print Err Stack Trace ( TAG, thr, ""exception occurred . "" )  ;          return null ;      } } if  ( work != null && work . get Intent (  )  != null )  {     work . get Intent (  )  . set Extras Class Loader ( m Service . get Class Loader (  )  )  ;      return new  Wrapper Work Item ( work )  ;  } else {     return null ;  }}"
4709,public boolean has Known Dimensions (  ) { return canvas Width > 0 ; }
4710,"public static  Immutable Multimap<K, V> of ( K k1, V v1 ) { return  Immutable List Multimap . of ( k1, v1 )  ; }"
4711,"private void tag Views Within List (  List< Object> children List, int position ) { for  (  Object child Object : children List )  {     tag Object If View Instance Or Scan Object For Enclosed Views ( child Object, position )  ;  }}"
4712,"public static void map ( int flags, int theme ) { if  ( theme > 0 )  {     _THEMES_MAP . put ( flags & _THEME_MASK, theme )  ;  } else {     final int i = _THEMES_MAP . index Of Key ( flags & _THEME_MASK )  ;      if  ( i > 0 )  {         _THEMES_MAP . remove At ( i )  ;      } }}"
4713,"private void init Base Loader (  ) { base Loader = new  Bsh Class Loader ( this, base Class Path )  ; }"
4714,public QMUI Dialog show (  ) { final QMUI Dialog dialog = create (  )  ;  dialog . show (  )  ;  return dialog ; }
4715,"protected  String read Json String From Uri ( @ Non Null final  Content Resolver content Resolver, @ Non Null final  Uri uri )  throws IO Exception{ final  String Builder string Builder = new  String Builder (  )  ;  final  Input Stream input Stream = content Resolver . open Input Stream ( uri )  ;  if  ( input Stream != null )  {     final  Buffered Reader reader = new  Buffered Reader ( new  Input Stream Reader ( input Stream )  )  ;       String line ;      while  (  ( line = reader . read Line (  )  )  != null )  {         string Builder . append ( line )  ;      }     reader . close (  )  ;      input Stream . close (  )  ;  } return string Builder . to String (  )  ; }"
4716,"public  Builder app Name (  String app Name ) {  Util . check Empty ( app Name, ""app Name"" )  ;  this . app Name = app Name ;  return this ; }"
4717,"public void write (  Byte Array Output Stream tag Buffer ) { logger . config ( "" Write  Frame to  Buffer"" + get Identifier (  )  )  ;  // This is where we will write header, move position to where we can //write body  Byte Buffer header Buffer =  Byte Buffer . allocate ( get Frame Header Size (  )  )  ;  // Write  Frame  Body  Data  Byte Array Output Stream body Output Stream = new  Byte Array Output Stream (  )  ;   (  (  Abstract ID3v2 Frame Body )  frame Body )  . write ( body Output Stream )  ;  // Write  Frame  Header // Write  Frame ID must adjust can only be 3 bytes long header Buffer . put (  Utils . get Default Bytes ( get Identifier (  ) , ""ISO-8859-1"" ) , 0, get Frame Id Size (  )  )  ;  encode Size ( header Buffer, frame Body . get Size (  )  )  ;  // Add header to the  Byte  Array  Output  Stream try {     tag Buffer . write ( header Buffer . array (  )  )  ;      // Add body to the  Byte  Array  Output  Stream     tag Buffer . write ( body Output Stream . to Byte Array (  )  )  ;  } catch  ( IO Exception ioe )  {     // This could never happen coz not writing to file, so convert to  Runtime Exception     throw new  Runtime Exception ( ioe )  ;  }}"
4718,public float get Value Line Width (  ) { return m Value Line Width ; }
4719,"public com . anychart . core . ui .  Background background (  ) { return new com . anychart . core . ui .  Background ( js Base + "" . background (  ) "" )  ; }"
4720,"public static int get Max Height In Row ( int start, int end,  List< Component Tree Holder> component Tree Holders ) { final int item Count = component Tree Holders . size (  )  ;  int measured Height = 0 ;  for  ( int i = start ;  i < end && i < item Count ;  i++ )  {     final  Component Tree Holder holder = component Tree Holders . get ( i )  ;      measured Height =  Math . max ( measured Height, holder . get Measured Height (  )  )  ;  } return measured Height ; }"
4721,"public  Map< String,  String> get Property Map (  ) { last Operation . set ( MAP_COPY_OPERATION )  ;  return copy On Thread Local . get (  )  ; }"
4722,public void set Json Prefix (  String json Prefix ) { this . json Prefix = json Prefix ; }
4723,"public static  String constant Name To Xml Name (  String constant Name ) { return  Case Format . UPPER_UNDERSCORE . to (  Case Format . LOWER_HYPHEN, constant Name )  ; }"
4724,"static  String convert SQL With Localized Unicode Collator (  String sql ) {  Matcher matcher = COLLATE_LOCALIZED_UNICODE_PATTERN . matcher ( sql )  ;  return matcher . replace All ( "" COLLATE NOCASE"" )  ; }"
4725,public  Parcel Uuid get Service Uuid (  ) { return service Uuid ; }
4726,"private void init_card_inner_layout (  ) { // Create a  Card  Card card = new  Card ( get Activity (  ) , R . layout . carddemo_example_inner_content )  ;  // Create a  Card Header  Card Header header = new  Card Header ( get Activity (  )  )  ;  // Set the header title header . set Title ( get String ( R . string . demo_header_basetitle )  )  ;  card . add Card Header ( header )  ;  // Set the card inner text card . set Title ( get String ( R . string . demo_card_basetitle )  )  ;  // Set card in the card View  Card View Native card View =  (  Card View Native )  get Activity (  )  . find View By Id ( R . id . carddemo_card_inner )  ;  card View . set Card ( card )  ; }"
4727,"private void process Frame Is Fin (  Web Socket Impl web Socket Impl,  Framedata frame )  throws  Invalid Data Exception{ if  ( current Continuous Frame == null )  {     log . trace ( "" Protocol error:  Previous continuous frame sequence not completed . "" )  ;      throw new  Invalid Data Exception (  Close Frame . PROTOCOL_ERROR, "" Continuous frame sequence was not started . "" )  ;  } add To Buffer List ( frame . get Payload Data (  )  )  ;  check Buffer Limit (  )  ;  if  ( current Continuous Frame . get Opcode (  )  ==  Opcode . TEXT )  {      (  (  Framedata Impl1 )  current Continuous Frame )  . set Payload ( get Payload From Byte Buffer List (  )  )  ;       (  (  Framedata Impl1 )  current Continuous Frame )  . is Valid (  )  ;      try {         web Socket Impl . get Web Socket Listener (  )  . on Websocket Message ( web Socket Impl,  Charsetfunctions . string Utf8 ( current Continuous Frame . get Payload Data (  )  )  )  ;      } catch  (  Runtime Exception e )  {         log Runtime Exception ( web Socket Impl, e )  ;      } } else if  ( current Continuous Frame . get Opcode (  )  ==  Opcode . BINARY )  {      (  (  Framedata Impl1 )  current Continuous Frame )  . set Payload ( get Payload From Byte Buffer List (  )  )  ;       (  (  Framedata Impl1 )  current Continuous Frame )  . is Valid (  )  ;      try {         web Socket Impl . get Web Socket Listener (  )  . on Websocket Message ( web Socket Impl, current Continuous Frame . get Payload Data (  )  )  ;      } catch  (  Runtime Exception e )  {         log Runtime Exception ( web Socket Impl, e )  ;      } } current Continuous Frame = null ;  clear Buffer List (  )  ; }"
4728,"public static  Cell<R, C, V> immutable Cell ( @ Nullable R row Key, @ Nullable C column Key, @ Nullable V value ) { return new  Immutable Cell<> ( row Key, column Key, value )  ; }"
4729,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings bounds (  String x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
4730,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
4731,"public com . anychart . core . cartesian . series .  Bar3d x Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4732,"public synchronized void connect (  Bluetooth Device device ) { if  ( D )       Log . d ( TAG, ""connect to: "" + device )  ;  disconnect (  )  ;  //  Start the thread to connect with the given device m Connect Thread = new  Connect Thread ( device )  ;  m Connect Thread . start (  )  ;  update State (  Bluetooth Status . CONNECTING )  ; }"
4733,"protected void on Layout ( boolean changed, int left, int top, int right, int bottom ) { int new Top =  ( int )  transformer . get View Height (  )  ;  int last Top Position = transformer . get Last Top Position (  )  ;  int last Left Position = transformer . get Last Left Position (  )  ;  int new Right = transformer . get Last Right Position (  )  ;  int new Bottom = last Top Position + new Top ;  drag View . layout ( last Left Position, last Top Position, new Right, new Bottom )  ;  second View . layout ( 0, new Bottom, right, last Top Position + bottom )  ; }"
4734,public boolean fits In16 Bits (  ) { if  ( !fits In Int (  )  )  {     return false ;  } int bits = get Int Bits (  )  ;  return  ( short )  bits == bits ; }
4735,public  Collection< App Usage Observer> get Registered App Usage Observers (  ) { return  Immutable List . copy Of ( app Usage Observers By Id . values (  )  )  ; }
4736,"private void remove Referenced (  Map< Object Id,  File> id2 File,  Object Walk w )  throws  Missing Object Exception,  Incorrect Object Type Exception, IO Exception{  Rev Object ro = w . next (  )  ;  while  ( ro != null )  {     check Cancelled (  )  ;      if  ( id2 File . remove ( ro . get Id (  )  )  != null && id2 File . is Empty (  )  )  {         return ;      }     ro = w . next (  )  ;  } ro = w . next Object (  )  ;  while  ( ro != null )  {     check Cancelled (  )  ;      if  ( id2 File . remove ( ro . get Id (  )  )  != null && id2 File . is Empty (  )  )  {         return ;      }     ro = w . next Object (  )  ;  }}"
4737,private void signal Next Waiter (  ) { for  (  Guard guard = active Guards ;  guard != null ;  guard = guard . next )  {     if  ( is Satisfied ( guard )  )  {         guard . condition . signal (  )  ;          break ;      } }}
4738,"public int get Int (  String name ) {  String value = get ( name, null )  ;  if  ( value == null )      throw new  Gdx Runtime Exception ( "" Element "" + this . name + "" doesn't have attribute or child: "" + name )  ;  return  Integer . parse Int ( value )  ; }"
4739,"public void show ( final  Fragment Manager manager, final  String tag ) { if  ( _m Activity instanceof I Support Activity )  {      (  ( I Support Activity )  _m Activity )  . get Support Delegate (  )  . post ( new  Runnable (  )  {         @ Override         public void run (  )  {              Demo Dialog Fragment . super . show ( manager, tag )  ;          }     } )  ;      return ;  } super . show ( manager, tag )  ; }"
4740,"public  Optional< String> get Value (  String section Name,  String property Name ) { return config . get Value ( section Name, property Name )  ; }"
4741,"public  Postcard with String ( @ Nullable  String key, @ Nullable  String value ) { m Bundle . put String ( key, value )  ;  return this ; }"
4742,"protected void process Include (  Interpretation Context ic, URL url )  throws  Joran Exception{  Input Stream in = open URL ( url )  ;  try {     if  ( in != null )  {         // add URL to watch list in case the ""scan"" flag is true, in         // which case this URL is periodically checked for changes          Configuration Watch List Util . add To Watch List ( get Context (  ) , url )  ;          // parse the include          Sax Event Recorder recorder = create Recorder ( in, url )  ;          recorder . set Context ( get Context (  )  )  ;          recorder . record Events ( in )  ;          // remove the leading/trailing tags  ( <included> or <configuration> )          trim Head And Tail ( recorder )  ;          ic . get Joran Interpreter (  )  . get Event Player (  )  . add Events Dynamically ( recorder . get Sax Event List (  ) , this . event Offset )  ;      } } catch  (  Joran Exception e )  {     optional Warning ( "" Failed processing  [ "" + url . to String (  )  + "" ] "", e )  ;  } finally {     close ( in )  ;  }}"
4743,public boolean is Empty (  ) { return map . is Empty (  )  ; }
4744,"public void set Maximum Scale X ( float x Scale ) { if  ( x Scale == 0 . f )      x Scale =  Float . MAX_VALUE ;  m Max Scale X = x Scale ;  limit Trans And Scale ( m Matrix Touch, m Content Rect )  ; }"
4745,"private void draw Multi Colored Borders (  Canvas canvas ) { m Paint . set Stroke Width ( m State . m Border Left Width )  ;  float inset = m State . m Border Left Width / 2f ;  s Draw Bounds . set ( get Bounds (  )  )  ;  final int translate Save Count = canvas . save (  )  ;  canvas . translate ( s Draw Bounds . left, s Draw Bounds . top )  ;  s Draw Bounds . offset To ( 0 . 0f, 0 . 0f )  ;  s Draw Bounds . inset ( inset, inset )  ;  s Inner Draw Bounds . set ( s Draw Bounds )  ;  float third =  Math . min ( s Draw Bounds . width (  ) , s Draw Bounds . height (  )  )  / 3f ;  s Inner Draw Bounds . inset ( third, third )  ;  int save Count ;  //  Left int color = m State . m Border Left Color ;  if  ( color != QUICK_REJECT_COLOR )  {     save Count = canvas . save (  )  ;      m Paint . set Color ( color )  ;      m Clip Path . reset (  )  ;      m Clip Path . move To ( s Draw Bounds . left - inset, s Draw Bounds . top - inset )  ;      m Clip Path . line To ( s Inner Draw Bounds . left, s Inner Draw Bounds . top )  ;      m Clip Path . line To ( s Inner Draw Bounds . left, s Inner Draw Bounds . bottom )  ;      m Clip Path . line To ( s Draw Bounds . left - inset, s Draw Bounds . bottom + inset )  ;      m Clip Path . close (  )  ;      canvas . clip Path ( m Clip Path )  ;      draw Border ( canvas, s Draw Bounds, path (  ) , m State . m Border Radius, m Paint )  ;      canvas . restore To Count ( save Count )  ;  } //  Top color = m State . m Border Top Color ;  if  ( color != QUICK_REJECT_COLOR )  {     save Count = canvas . save (  )  ;      m Paint . set Color ( color )  ;      m Clip Path . reset (  )  ;      m Clip Path . move To ( s Draw Bounds . left - inset, s Draw Bounds . top - inset )  ;      m Clip Path . line To ( s Inner Draw Bounds . left, s Inner Draw Bounds . top )  ;      m Clip Path . line To ( s Inner Draw Bounds . right, s Inner Draw Bounds . top )  ;      m Clip Path . line To ( s Draw Bounds . right + inset, s Draw Bounds . top - inset )  ;      m Clip Path . close (  )  ;      canvas . clip Path ( m Clip Path )  ;      draw Border ( canvas, s Draw Bounds, path (  ) , m State . m Border Radius, m Paint )  ;      canvas . restore To Count ( save Count )  ;  } //  Right color = m State . m Border Right Color ;  if  ( color != QUICK_REJECT_COLOR )  {     save Count = canvas . save (  )  ;      m Paint . set Color ( color )  ;      m Clip Path . reset (  )  ;      m Clip Path . move To ( s Draw Bounds . right + inset, s Draw Bounds . top - inset )  ;      m Clip Path . line To ( s Inner Draw Bounds . right, s Inner Draw Bounds . top )  ;      m Clip Path . line To ( s Inner Draw Bounds . right, s Inner Draw Bounds . bottom )  ;      m Clip Path . line To ( s Draw Bounds . right + inset, s Draw Bounds . bottom + inset )  ;      m Clip Path . close (  )  ;      canvas . clip Path ( m Clip Path )  ;      draw Border ( canvas, s Draw Bounds, path (  ) , m State . m Border Radius, m Paint )  ;      canvas . restore To Count ( save Count )  ;  } //  Bottom color = m State . m Border Bottom Color ;  if  ( color != QUICK_REJECT_COLOR )  {     save Count = canvas . save (  )  ;      m Paint . set Color ( color )  ;      m Clip Path . reset (  )  ;      m Clip Path . move To ( s Draw Bounds . left - inset, s Draw Bounds . bottom + inset )  ;      m Clip Path . line To ( s Inner Draw Bounds . left, s Inner Draw Bounds . bottom )  ;      m Clip Path . line To ( s Inner Draw Bounds . right, s Inner Draw Bounds . bottom )  ;      m Clip Path . line To ( s Draw Bounds . right + inset, s Draw Bounds . bottom + inset )  ;      m Clip Path . close (  )  ;      canvas . clip Path ( m Clip Path )  ;      draw Border ( canvas, s Draw Bounds, path (  ) , m State . m Border Radius, m Paint )  ;      canvas . restore To Count ( save Count )  ;  } canvas . restore To Count ( translate Save Count )  ; }"
4746,public T1 get Value1 (  ) { return value1 ; }
4747,"private void write Object (  Object Output Stream stream )  throws IO Exception{ stream . default Write Object (  )  ;   Serialization . write Map ( this, stream )  ; }"
4748,"public com . anychart . core . ui .  Timeline row Odd Fill (  String [  ]  value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Odd Fill ( %s )  ; "", array To String Wrap Quotes ( value )  )  )  ;  return this ; }"
4749,"private  String get Title ( int pos ) { //  Set the default title  String title = ""title "" + pos ;  //  If the  Title Provider exist if  ( title Provider != null )  {     title = title Provider . get Title ( pos )  ;  } return title ; }"
4750,protected  Generated Class Loader create Class Loader (  Class Loader parent ) { return new  Defining Class Loader ( parent )  ; }
4751,"public com . anychart . charts .  Waterfall container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
4752,public void set Connection Status ( boolean is Connected ) { set Connection Status ( is Connected ?  Network Info .  State . CONNECTED :  Network Info .  State . DISCONNECTED )  ; }
4753,public  Bluetooth Device get Device (  ) { return m Device ; }
4754,public  Config<T> set Firebase Service (  Firebase Service Type type ) { this . service Type = type ;  return this ; }
4755,public static void handle Remove Node (  React Shadow Node node ) { node . remove All Native Children (  )  ; }
4756,public  List< List< Lat Lng>> get Geometry Object (  ) {  List< List< Lat Lng>> coordinates = new  Array List<> (  )  ;  coordinates . add ( m Outer Boundary Coordinates )  ;  // Polygon objects do not have to have inner holes if  ( m Inner Boundary Coordinates != null )  {     coordinates . add All ( m Inner Boundary Coordinates )  ;  } return coordinates ; }
4757,"private void set Frame Size ( int w, int h ) { width = w ;  height = h ; }"
4758,"private void merge Hi ( int base1, int len1, int base2, int len2 ) { if  ( DEBUG )      assert len1 > 0 && len2 > 0 && base1 + len1 == base2 ;  //  Copy second run into temp array //  For performance T [  ]  a = this . a ;  T [  ]  tmp = ensure Capacity ( len2 )  ;   System . arraycopy ( a, base2, tmp, 0, len2 )  ;  //  Indexes into a int cursor1 = base1 + len1 - 1 ;  //  Indexes into tmp array int cursor2 = len2 - 1 ;  //  Indexes into a int dest = base2 + len2 - 1 ;  //  Move last element of first run and deal with degenerate cases a [ dest-- ]  = a [ cursor1-- ]  ;  if  ( --len1 == 0 )  {      System . arraycopy ( tmp, 0, a, dest -  ( len2 - 1 ) , len2 )  ;      return ;  } if  ( len2 == 1 )  {     dest -= len1 ;      cursor1 -= len1 ;       System . arraycopy ( a, cursor1 + 1, a, dest + 1, len1 )  ;      a [ dest ]  = tmp [ cursor2 ]  ;      return ;  } //  Use local variable for performance  Comparator<? super T> c = this . c ;  // ""    "" ""     "" "" int min Gallop = this . min Gallop ;  outer: while  ( true )  {     //  Number of times in a row that first run won     int count1 = 0 ;      //  Number of times in a row that second run won     int count2 = 0 ;      /*			 *  Do the straightforward thing until  ( if ever )  one run appears to win consistently . 			 */     do {         if  ( DEBUG )              assert len1 > 0 && len2 > 1 ;          if  ( c . compare ( tmp [ cursor2 ] , a [ cursor1 ]  )  < 0 )  {             a [ dest-- ]  = a [ cursor1-- ]  ;              count1++ ;              count2 = 0 ;              if  ( --len1 == 0 )                  break outer ;          } else {             a [ dest-- ]  = tmp [ cursor2-- ]  ;              count2++ ;              count1 = 0 ;              if  ( --len2 == 1 )                  break outer ;          }     } while  (  ( count1 | count2 )  < min Gallop )  ;      /*			 *  One run is winning so consistently that galloping may be a huge win .   So try that, and continue galloping until  ( if			 * ever )  neither run appears to be winning consistently anymore . 			 */     do {         if  ( DEBUG )              assert len1 > 0 && len2 > 1 ;          count1 = len1 - gallop Right ( tmp [ cursor2 ] , a, base1, len1, len1 - 1, c )  ;          if  ( count1 != 0 )  {             dest -= count1 ;              cursor1 -= count1 ;              len1 -= count1 ;               System . arraycopy ( a, cursor1 + 1, a, dest + 1, count1 )  ;              if  ( len1 == 0 )                  break outer ;          }         a [ dest-- ]  = tmp [ cursor2-- ]  ;          if  ( --len2 == 1 )              break outer ;          count2 = len2 - gallop Left ( a [ cursor1 ] , tmp, 0, len2, len2 - 1, c )  ;          if  ( count2 != 0 )  {             dest -= count2 ;              cursor2 -= count2 ;              len2 -= count2 ;               System . arraycopy ( tmp, cursor2 + 1, a, dest + 1, count2 )  ;              if  ( // len2 == 1 || len2 == 0             len2 <= 1 )                  break outer ;          }         a [ dest-- ]  = a [ cursor1-- ]  ;          if  ( --len1 == 0 )              break outer ;          min Gallop-- ;      } while  ( count1 >= MIN_GALLOP | count2 >= MIN_GALLOP )  ;      if  ( min Gallop < 0 )          min Gallop = 0 ;      //  Penalize for leaving gallop mode     min Gallop += 2 ;  } //  End of ""outer"" loop //  Write back to field this . min Gallop = min Gallop < 1 ? 1 : min Gallop ;  if  ( len2 == 1 )  {     if  ( DEBUG )          assert len1 > 0 ;      dest -= len1 ;      cursor1 -= len1 ;       System . arraycopy ( a, cursor1 + 1, a, dest + 1, len1 )  ;      //  Move first elt of run2 to front of merge     a [ dest ]  = tmp [ cursor2 ]  ;  } else if  ( len2 == 0 )  {     throw new  Illegal Argument Exception ( "" Comparison method violates its general contract!"" )  ;  } else {     if  ( DEBUG )          assert len1 == 0 ;      if  ( DEBUG )          assert len2 > 0 ;       System . arraycopy ( tmp, 0, a, dest -  ( len2 - 1 ) , len2 )  ;  }}"
4759,public int get Alive Interval Millis (  ) { return 0 ; }
4760,"private  String [  ]  enabled Protocols (  String [  ]  supported Protocols,  String [  ]  default Protocols ) { if  ( enabled Protocols == null )  {     // so once we determine the enabled set, we won't do it again     if  (  Option Helper . is Empty ( get Included Protocols (  )  )  &&  Option Helper . is Empty ( get Excluded Protocols (  )  )  )  {         enabled Protocols =  Arrays . copy Of ( default Protocols, default Protocols . length )  ;      } else {         enabled Protocols = included Strings ( supported Protocols, get Included Protocols (  ) , get Excluded Protocols (  )  )  ;      }     for  (  String protocol : enabled Protocols )  {         add Info ( ""enabled protocol: "" + protocol )  ;      } } return enabled Protocols ; }"
4761,"int copy Type ( int src Index ) {  String name = src Pool . get Utf8 Info ( src Index )  ;   String new Name =  Descriptor . rename ( name, classnames )  ;  return dest Pool . add Utf8 Info ( new Name )  ; }"
4762,"public synchronized  Closeable Reference< Bitmap> convert To Bitmap Reference (  ) {  Preconditions . check Not Null ( m Bitmap Reference, "" Cannot convert a closed static bitmap"" )  ;  return detach Bitmap Reference (  )  ; }"
4763,"public com . anychart . core . gantt . elements .  Connector Element stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4764,public  List Branch Command set Contains (  String contains Commitish ) { check Callable (  )  ;  this . contains Commitish = contains Commitish ;  return this ; }
4765,"public com . anychart . core . ui .  Outline fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
4766,"public com . anychart . core . utils .  Stock Interactivity interactivity (  ) { return new com . anychart . core . utils .  Stock Interactivity ( js Base + "" . interactivity (  ) "" )  ; }"
4767,public void zoom Reset (  ) { if  ( m Fit Zoom != null )  {     m Fit Zoom . apply (  )  ;      m Zoom In . notify Zoom Reset Listeners (  )  ;      repaint (  )  ;  }}
4768,"private  Component get Content To Focus (  ) {  Component focus Component = my Content ;   Focus Traversal Policy policy = my Content . get Focus Traversal Policy (  )  ;  if  ( policy instanceof  Sorting Focus Traversal Policy &&  (  (  Sorting Focus Traversal Policy )  policy )  . get Implicit Down Cycle Traversal (  )  )  {     focus Component = policy . get Default Component ( my Content )  ;  } while  ( true )  {     // contained view .   This is useful for  Tooltip popups, for example .      if  ( focus Component instanceof J Scroll Pane )  {         J Viewport viewport =  (  ( J Scroll Pane )  focus Component )  . get Viewport (  )  ;          if  ( viewport == null )  {             break ;          }          Component child = viewport . get View (  )  ;          if  ( child == null )  {             break ;          }         focus Component = child ;          continue ;      }     //  Done if we can't find anything to dive into     break ;  } return focus Component ; }"
4769,protected final int get Index (  ) { return index ; }
4770,"public com . anychart . charts .  Sunburst margin (  String value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, value4 )  )  ;  return this ; }"
4771,public static  Resource Folder Type get Type By Name (  String name ) { // use #get Folder Type instead assert name . index Of ( '-' )  == -1 : name ;  for  (  Resource Folder Type r Type : values (  )  )  {     if  ( r Type . m Name . equals ( name )  )  {         return r Type ;      } } return null ; }
4772,"public static  View set Status Bar Color ( @ Non Null final  Window window, @ Color Int final int color, final boolean is Decor ) { if  (  Build . VERSION . SDK_INT <  Build . VERSION_CODES . KITKAT )      return null ;  transparent Status Bar ( window )  ;  return apply Status Bar Color ( window, color, is Decor )  ; }"
4773,"private void add Work If Necessary ( int offset, boolean block Start ) { if  ( ! Bits . get ( live Set, offset )  )  {      Bits . set ( work Set, offset )  ;  } if  ( block Start )  {      Bits . set ( block Set, offset )  ;  }}"
4774,public static int get Num Managed Cubemaps (  ) { return managed Cubemaps . get (  Gdx . app )  . size ; }
4775,"public  Model With Final Field_ on Visibility State Changed (  On Model Visibility State Changed Listener< Model With Final Field_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
4776,public static  Tree Props acquire ( @ Nullable  Tree Props source ) { final  Tree Props new Props = new  Tree Props (  )  ;  if  ( source != null )  {     synchronized  ( source . m Map )  {         new Props . m Map . put All ( source . m Map )  ;      } } return new Props ; }
4777,"protected  Rev Commit commit Chain ( int depth )  throws  Exception{ if  ( depth <= 0 )      throw new  Illegal Argument Exception ( "" Chain depth must be > 0"" )  ;   Commit Builder cb = tr . commit (  )  ;   Rev Commit tip ;  do {     --depth ;      tip = cb . add ( ""a"", """" + depth )  . message ( """" + depth )  . create (  )  ;      cb = cb . child (  )  ;  } while  ( depth > 0 )  ;  return tip ; }"
4778,"public com . anychart . core . ui . markersfactory .  Marker marker (  ) { return new com . anychart . core . ui . markersfactory .  Marker ( js Base + "" . marker (  ) "" )  ; }"
4779,"private static  Json Node normalize Json (  Json Node node ) { if  ( node . is Value Node (  )  )  {     return node ;  } else if  ( node . is Array (  )  )  {     //  Only if this is an array of strings, copy the array and sort it .      if  (  Iterables . all ( node,  (  Json Node child )  -> child . is Textual (  )  )  )  {          Array List< String> values = new  Array List<> (  )  ;           Iterables . add All ( values,  Iterables . transform ( node,  (  Json Node child )  -> child . as Text (  )  )  )  ;          values . sort (  String::compare To )  ;           Array Node normalized =  (  Array Node )   Object Mappers . READER . create Array Node (  )  ;          values . for Each (  (  String value )  -> normalized . add ( value )  )  ;          return normalized ;      } else {         return node ;      } } else if  ( node . is Object (  )  )  {      Object Node original =  (  Object Node )  node ;       Object Node normalized =  (  Object Node )   Object Mappers . READER . create Object Node (  )  ;      for  (  Iterator< Map .  Entry< String,  Json Node>> iter = original . fields (  )  ;  iter . has Next (  )  ;   )  {          Map .  Entry< String,  Json Node> entry = iter . next (  )  ;          normalized . set ( entry . get Key (  ) , normalize Json ( entry . get Value (  )  )  )  ;      }     return normalized ;  } else {     throw new  Illegal Argument Exception ( "" Unexpected node type: "" + node )  ;  }}"
4780,void clear (  ) { value = 0 ; }
4781,"public static int color With Alpha ( int color, int alpha ) { return  ( color & 0xffffff )  |  (  ( alpha & 0xff )  << 24 )  ; }"
4782,public void set Resize Check Delay ( int resize Check Delay ) { this . resize Check Delay = resize Check Delay ; }
4783,"public  Base Adapter Helper set Progress ( int view Id, int progress, int max ) {  Progress Bar view = retrieve View ( view Id )  ;  view . set Max ( max )  ;  view . set Progress ( progress )  ;  return this ; }"
4784,"public  Object get ( @ Non Null  Field Path field Path ) { return get ( field Path,  Server Timestamp Behavior . DEFAULT )  ; }"
4785,"public com . anychart . charts .  Pie overlap Mode ( com . anychart . enums .  Labels Overlap Mode value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . overlap Mode ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
4786,public int get Angle (  ) { return m Angle ; }
4787,"public com . anychart . charts .  Circular Gauge default Pointer Type (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . default Pointer Type ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
4788,"public com . anychart . core . gantt . elements .  Grouping Tasks Element fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
4789,"protected  Object parse (  String value,  String pattern,  Locale locale ) { value =  ( value == null ? null : value . trim (  )  )  ;  if  ( value == null || value . length (  )  == 0 )  {     return null ;  }  Format formatter = get Format ( pattern, locale )  ;  return parse ( value, formatter )  ; }"
4790,public void set Video Rotation ( int degree ) { m Video Target Rotation Degree = m Video Rotation Degree + degree ;  m Render View . set Video Rotation ( m Video Target Rotation Degree )  ; }
4791,"public com . anychart . core . stock . scrollerseries .  Range Step Area hatch Fill (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "", enabled )  )  ;  return this ; }"
4792,"public void set Bottom Fill Color (  React Horizontal Scroll View view, int color ) { view . set End Fill Color ( color )  ; }"
4793,"public static  Condition< Inspectable Component> type Is ( final  Class<? extends  Component Lifecycle> clazz ) { return new  Condition< Inspectable Component> ( new  Text Description ( "" Component with type <%s>"", clazz )  )  {     @ Override     public boolean matches (  Inspectable Component value )  {         final  Class component = value . get Component Class (  )  ;          return component != null && component . equals ( clazz )  ;      } } ; }"
4794,"public void set Screen Bounds ( int screen X, int screen Y, int screen Width, int screen Height ) { this . screen X = screen X ;  this . screen Y = screen Y ;  this . screen Width = screen Width ;  this . screen Height = screen Height ; }"
4795,"public static void close Scope (  Object name ) { synchronized  ( ROOT_SCOPES )  {     // we remove the scope first, so that other threads don't see it, and see the next snapshot of     // the tree      Scope Node scope =  (  Scope Node )  MAP_KEY_TO_SCOPE . remove ( name )  ;      if  ( scope != null )  {          Scope Node parent Scope = scope . get Parent Scope (  )  ;          if  ( parent Scope != null )  {             parent Scope . remove Child ( scope )  ;          } else {              Configuration Holder . configuration . on Scope Forest Reset (  )  ;              ROOT_SCOPES . remove ( name )  ;          }         remove Scope And Children From Map ( scope )  ;      } }}"
4796,"public void set Enabled (  Actor actor, boolean enabled ) { //  Get current style .   Method method = find Method ( actor . get Class (  ) , ""get Style"" )  ;  if  ( method == null )      return ;   Object style ;  try {     style = method . invoke ( actor )  ;  } catch  (  Exception ignored )  {     return ;  } //  Determine new style .   String name = find ( style )  ;  if  ( name == null )      return ;  name = name . replace ( ""-disabled"", """" )  +  ( enabled ? """" : ""-disabled"" )  ;  style = get ( name, style . get Class (  )  )  ;  //  Set new style .  method = find Method ( actor . get Class (  ) , ""set Style"" )  ;  if  ( method == null )      return ;  try {     method . invoke ( actor, style )  ;  } catch  (  Exception ignored )  { }}"
4797,"protected void on Model Unbound ( @ Non Null  Epoxy View Holder holder, @ Non Null  Epoxy Model<?> model ) {}"
4798,"public void add Parenthesis (  String open,  String close ) { parenthesis Map . put ( open, close )  ; }"
4799,"public void set Background Between Scan Period ( long p ) { background Between Scan Period = p ;  if  ( android . os .  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . O && background Between Scan Period < 15 * 60 * 1000 )  /* 15 min */ {      Log Manager . w ( TAG, "" Setting a short background Between Scan Period has no effect on "" + "" Android 8+, which is limited to scanning every ~15 minutes"" )  ;  }}"
4800,"public com . anychart . scales .  Linear Color align Minimum (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . align Minimum ( %s )  ; "", enabled )  )  ;  return this ; }"
4801,"protected boolean is Valid Authority (  String authority ) { if  ( authority == null )  {     return false ;  } // check manual authority validation if specified if  ( authority Validator != null && authority Validator . is Valid ( authority )  )  {     return true ;  } // convert to ASCII if possible final  String authority ASCII =  Domain Validator . unicode To ASCII ( authority )  ;   Matcher authority Matcher = AUTHORITY_PATTERN . matcher ( authority ASCII )  ;  if  ( !authority Matcher . matches (  )  )  {     return false ;  }  String host Location = authority Matcher . group ( PARSE_AUTHORITY_HOST_IP )  ;  // check if authority is hostname or IP address: // try a hostname first since that's much more likely  Domain Validator domain Validator =  Domain Validator . get Instance ( is On ( ALLOW_LOCAL_URLS )  )  ;  if  ( !domain Validator . is Valid ( host Location )  )  {     // try an IP address      Inet Address Validator inet Address Validator =  Inet Address Validator . get Instance (  )  ;      if  ( !inet Address Validator . is Valid ( host Location )  )  {         // isn't either one, so the URL is invalid         return false ;      } }  String port = authority Matcher . group ( PARSE_AUTHORITY_PORT )  ;  if  ( port != null && !PORT_PATTERN . matcher ( port )  . matches (  )  )  {     return false ;  }  String extra = authority Matcher . group ( PARSE_AUTHORITY_EXTRA )  ;  if  ( extra != null && extra . trim (  )  . length (  )  > 0 )  {     return false ;  } return true ; }"
4802,"public com . anychart . core .  State Settings stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4803,"private static  String get Root Url (  String project Id,  String package Name ) { return  String . format ( ""%s/project/%s/performance/app/android:%s"", URL_BASE_PATH, project Id, package Name )  ; }"
4804,"public  Layout Spec Model create (  Elements elements,  Types types,  Type Element element,  Messager messager,  Enum Set< Run Mode> run Mode, @ Nullable  Dependency Injection Helper dependency Injection Helper, @ Nullable  Inter Stage Store inter Stage Store ) { return new  Layout Spec Model ( element . get Qualified Name (  )  . to String (  ) , element . get Annotation (  Layout Spec . class )  . value (  ) ,  Delegate Method Extractor . get Delegate Methods ( element, m Layout Spec Delegate Method Annotations, INTER_STAGE_INPUT_ANNOTATIONS,  Immutable List . < Class<? extends  Annotation>>of (  Should Update . class ) , messager ) ,  Event Method Extractor . get On Event Methods ( elements, element, INTER_STAGE_INPUT_ANNOTATIONS, messager, run Mode ) ,  Trigger Method Extractor . get On Trigger Methods ( elements, element, INTER_STAGE_INPUT_ANNOTATIONS, messager, run Mode ) ,  Working Ranges Method Extractor . get Register Method ( element, INTER_STAGE_INPUT_ANNOTATIONS, messager ) ,  Working Ranges Method Extractor . get Ranges Methods ( elements, element, INTER_STAGE_INPUT_ANNOTATIONS, messager ) ,  Update State Method Extractor . get On Update State Methods ( element, INTER_STAGE_INPUT_ANNOTATIONS, messager ) ,  Update State Method Extractor . get On Update State With Transition Methods ( element, INTER_STAGE_INPUT_ANNOTATIONS, messager ) , inter Stage Store == null ?  Immutable List . of (  )  :  Cached Prop Name Extractor . get Cached Prop Names ( inter Stage Store, element . get Qualified Name (  )  ) ,  Immutable List . copy Of (  Prop Defaults Extractor . get Prop Defaults ( element )  ) ,  Event Declarations Extractor . get Event Declarations ( elements, element,  Layout Spec . class, run Mode ) ,  Annotation Extractor . extract Valid Annotations ( element ) ,  Tag Extractor . extract Tags From Spec Class ( types, element, run Mode ) ,  Javadoc Extractor . get Class Javadoc ( elements, element ) ,  Javadoc Extractor . get Prop Javadocs ( elements, element ) , element . get Annotation (  Layout Spec . class )  . is Public (  ) , dependency Injection Helper,  Spec Element Type Determinator . determine ( element ) , element, m Layout Spec Generator,  Immutable List . copy Of (  Type Variables Extractor . get Type Variables ( element )  ) ,  Fields Extractor . extract Fields ( element ) , element . get Annotation (  Layout Spec . class )  . simple Name Delegate (  )  )  ; }"
4805,public  Option View build (  ) { return new  Option View ( this )  ; }
4806,public void test Is Whitespace (  ) { for  ( byte c = -128 ;  c < 127 ;  c++ )  {     switch ( c )  {         case  ( byte )  '\r':         case  ( byte )  '\n':         case  ( byte )  '\t':         case  ( byte )  ' ':             assert True ( is Whitespace ( c )  )  ;              break ;          default:             assert False ( is Whitespace ( c )  )  ;      } }}
4807,"public void font Family (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Family (  )  ; "" )  ; }"
4808,"public com . anychart . core . stock . scrollerseries .  Spline Area rendering (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rendering ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4809,public void set Draw Labels ( boolean enabled ) { m Draw Labels = enabled ; }
4810,public boolean is Striped (  ) { return striped ; }
4811,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
4812,"public com . anychart . core .  State Settings stem Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stem Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4813,"public synchronized void set Log Level ( @ Non Null  Logger .  Level log Level ) { assert Unfrozen ( ""set Log Level"" )  ;  this . config . set Log Level ( log Level )  ; }"
4814,"public com . anychart . core . axismarkers .  Gantt Text font Variant (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Variant ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
4815,public void add Text Value (  String value ) {  Text Encoded String Size Terminated text =  (  Text Encoded String Size Terminated )  get Object (  Data Types . OBJ_TEXT )  ;  text . add Value ( value )  ; }
4816,public  Gson Builder set Lenient (  ) { lenient = true ;  return this ; }
4817,"public static  Own Cloud Client create Own Cloud Client (  Uri uri,  Context context, boolean follow Redirects ) {  Own Cloud Client client = new  Own Cloud Client ( uri )  ;  client . set Follow Redirects ( follow Redirects )  ;   Http Client . set Context ( context )  ;  retrieve Cookies From Middleware ( client )  ;  return client ; }"
4818,"public void set Replacement ( int id,  Object replacement ) { set Replacement ( id, replacement, this )  ; }"
4819,"public void start At ( int index ) { if  ( active )  {     return ;  } if  ( index < 0 || index >= targets . size (  )  )  {     throw new  Illegal Argument Exception ( "" Given invalid index "" + index )  ;  } final int expected Size = targets . size (  )  - index ;  while  ( targets . peek (  )  != null && targets . size (  )  != expected Size )  {     targets . poll (  )  ;  } if  ( targets . size (  )  != expected Size )  {     throw new  Illegal State Exception ( "" Given index "" + index + "" not in sequence"" )  ;  } start (  )  ; }"
4820,"protected void handle Invalid Message (  Action Invocation action Invocation,  Unsupported Data Exception original Exception,  Unsupported Data Exception recovering Exception )  throws  Unsupported Data Exception{ throw original Exception ; }"
4821,"public  Item Transformation transform Child ( @ Non Null final  View child, final float item Position To Center Diff, final int orientation, final int item Position In Adapter ) { return transform Child ( child, item Position To Center Diff, orientation )  ; }"
4822,"public static void set Configs (  String not Found Val, boolean debug Flag ) {  Easy Device Info . not Found Val = not Found Val ;   Easy Device Info . debuggable = debug Flag ; }"
4823,static int read Count (  Object Input Stream stream )  throws IO Exception{ return stream . read Int (  )  ; }
4824,"public com . anychart . core . gantt . edit .  Element Edit stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4825,"public com . anychart . standalones .  Title font Style (  String style ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Style ( %s )  ; "", wrap Quotes ( style )  )  )  ;  return this ; }"
4826,public final void is At Most ( int other ) { is At Most (  ( long )  other )  ; }
4827,public  String get Url Link Without Trailing Nulls (  ) {  Text Encoded String Size Terminated text =  (  Text Encoded String Size Terminated )  get Object (  Data Types . OBJ_URLLINK )  ;  return text . get Value Without Trailing Null (  )  ; }
4828,"public static  Fragment create Fragment (  String class Name,  Bundle args ) { try {     final  Fragment instance =  (  Fragment )   Class . for Name ( class Name )  . new Instance (  )  ;      instance . set Arguments ( args )  ;      return instance ;  } catch  (  Illegal Access Exception |  Instantiation Exception e )  {     throw new  Runtime Exception ( "" Could not instantiate "" + class Name, e )  ;  } catch  (  Class Not Found Exception e )  {     throw new  Runtime Exception ( class Name + "" could not be found"", e )  ;  } catch  (  Class Cast Exception e )  {     throw new  Runtime Exception ( "" Fragment is not assignable from "" + class Name, e )  ;  }}"
4829,"public com . anychart . core . cartesian . series .  Column3d width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
4830,public  Ad Manager set Page Transformer (  View Pager .  Page Transformer page Transformer ) { this . page Transformer = page Transformer ;  return this ; }
4831,public  Text Input Control get Text Input Control (  ) { return this ; }
4832,"public com . anychart . charts .  Sparkline stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4833,public final boolean read Boolean (  )  throws IO Exception{ return dis . read Boolean (  )  ; }
4834,"public long get Item Id ( @ Non Null final T data, final int index ) { return  Recycler View . NO_ID ; }"
4835,"private void show Chart Dialog (  String table Name,  List< String> chart Y Data List,  List< Integer> list ) {  View chart View =  View . inflate ( this, R . layout . dialog_chart, null )  ;   Line Chart line Chart =  (  Line Chart )  chart View . find View By Id ( R . id . line Chart )  ;  line Chart . set Line Model (  Line Chart . CURVE_MODEL )  ;   Resources res = get Resources (  )  ;  com . daivd . chart . data . style .  Font Style . set Default Text Sp Size ( this, 12 )  ;   List< Line Data>  Column Datas = new  Array List<> (  )  ;   Array List< Double> temp List1 = new  Array List<> (  )  ;   Array List< String> ydata List = new  Array List<> (  )  ;  for  ( int i = 0 ;  i < 30 ;  i++ )  {      String value = chart Y Data List . get ( i )  ;      ydata List . add ( value )  ;  } for  ( int i = 0 ;  i < 30 ;  i++ )  {     int value = list . get ( i )  ;      temp List1 . add (  Double . value Of ( value )  )  ;  }  Line Data column Data1 = new  Line Data ( table Name, """", I Axis .  Axis Direction . LEFT, get Resources (  )  . get Color ( R . color . arc1 ) , temp List1 )  ;   Column Datas . add ( column Data1 )  ;   Chart Data< Line Data> chart Data2 = new  Chart Data<> ( "" Area  Chart"", ydata List,  Column Datas )  ;  line Chart . get Chart Title (  )  . set Direction ( I Component . TOP )  ;  line Chart . get Legend (  )  . set Direction ( I Component . BOTTOM )  ;  line Chart . set Line Model (  Line Chart . CURVE_MODEL )  ;   Base Axis vertical Axis = line Chart . get Left Vertical Axis (  )  ;   Base Axis horizontal Axis = line Chart . get Horizontal Axis (  )  ;  //设置竖轴方向 vertical Axis . set Axis Direction ( I Axis .  Axis Direction . LEFT )  ;  //设置网格 vertical Axis . set Draw Grid ( true )  ;  //设置横轴方向 horizontal Axis . set Axis Direction ( I Axis .  Axis Direction . BOTTOM )  ;  horizontal Axis . set Draw Grid ( true )  ;  //设置线条样式 vertical Axis . get Axis Style (  )  . set Width ( this, 1 )  ;   Dash Path Effect effects = new  Dash Path Effect ( new float [  ]  { 1, 2, 4, 8 }, 1 )  ;  vertical Axis . get Grid Style (  )  . set Width ( this, 1 )  . set Color ( res . get Color ( R . color . arc_text )  )  . set Effect ( effects )  ;  horizontal Axis . get Grid Style (  )  . set Width ( this, 1 )  . set Color ( res . get Color ( R . color . arc_text )  )  . set Effect ( effects )  ;  line Chart . set Zoom ( true )  ;  //开启十字架 line Chart . get Provider (  )  . set Open Cross ( true )  ;  line Chart . get Provider (  )  . set Cross ( new  Vertical Cross (  )  )  ;  line Chart . get Provider (  )  . set Show Text ( true )  ;  //开启 Mark View line Chart . get Provider (  )  . set Open Mark ( true )  ;  //设置 Mark View line Chart . get Provider (  )  . set Mark View ( new  Bubble Mark View ( this )  )  ;  //设置显示标题 line Chart . set Show Chart Name ( true )  ;  //设置标题样式 com . daivd . chart . data . style .  Font Style font Style = line Chart . get Chart Title (  )  . get Font Style (  )  ;  font Style . set Text Color ( res . get Color ( R . color . arc_temp )  )  ;  font Style . set Text Sp Size ( this, 15 )  ;   Level Line level Line = new  Level Line ( 30 )  ;   Dash Path Effect effects2 = new  Dash Path Effect ( new float [  ]  { 1, 2, 2, 4 }, 1 )  ;  level Line . get Line Style (  )  . set Width ( this, 1 )  . set Color ( res . get Color ( R . color . arc23 )  )  . set Effect ( effects )  ;  level Line . get Line Style (  )  . set Effect ( effects2 )  ;  line Chart . get Provider (  )  . add Level Line ( level Line )  ;   Point legend Point =  (  Point )  line Chart . get Legend (  )  . get Point (  )  ;   Point Style style = legend Point . get Point Style (  )  ;  style . set Shape (  Point Style . SQUARE )  ;  line Chart . get Provider (  )  . set Area ( true )  ;  line Chart . get Horizontal Axis (  )  . set Rotate Angle ( 90 )  ;  line Chart . set Chart Data ( chart Data2 )  ;  line Chart . start Chart Anim ( 400 )  ;   Base Dialog dialog = new  Base Dialog .  Builder ( this )  . set Fill Width ( true )  . set Content View ( chart View )  . create (  )  ;  dialog . show (  )  ; }"
4836,"public  Double get Double ( @ Non Null  String field ) {  Number val = get Typed Value ( field,  Number . class )  ;  return val != null ? val . double Value (  )  : null ; }"
4837,"private  Logging Event make Logging Event ( long timestamp ) {  Logging Event event = new  Logging Event (  Formatting Converter . class . get Name (  ) , _logger,  Level . INFO, "" Some message"", null, null )  ;  event . set Time Stamp ( timestamp )  ;  return event ; }"
4838,"public void add Source Folder (  Ij Folder folder ) {  Path path = folder . get Path (  )  ;   Ij Folder other Folder = source Folders Merge Map . get ( path )  ;  if  ( other Folder != null )  {     folder = merge Promoting To Source If Different ( folder, other Folder )  ;  } source Folders Merge Map . put ( path, folder )  ; }"
4839,public void set Is Frame Open ( boolean e_is Frame Open ) { this . e_is Frame Open = e_is Frame Open ; }
4840,public  Branch Builder branch (  String ref ) { if  (  Constants . HEAD . equals ( ref )  )  { // nothing } else if  ( ref . starts With (  Constants . R_REFS )  )  { // nothing } else     ref =  Constants . R_HEADS + ref ;  return new  Branch Builder ( ref )  ; }
4841,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
4842,"public  Bitmap get Image ( int width, int height,  Rect F clip ) { return get Image ( width, height, clip, true, false )  ; }"
4843,public boolean is Set Type (  ) { return this . type != null ; }
4844,"public com . google . common . util . concurrent .  Listenable Future<com . facebook . buck . logd . proto .  Create Log Response> create Log File ( com . facebook . buck . logd . proto .  Create Log Request request ) { return future Unary Call ( get Channel (  )  . new Call ( get Create Log File Method Helper (  ) , get Call Options (  )  ) , request )  ; }"
4845,"public com . anychart . core .  Visual Base container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
4846,public static  Config< Firebase UI Module> builder (  ) { return instance . config ; }
4847,"public  Flexible Adapter<T> set Sticky Headers ( final boolean sticky, @ Nullable  View Group sticky Container ) { log . i ( "" Set sticky Headers=%s  ( in  Post! ) %s"", sticky,  ( sticky Container != null ? "" with user defined  Sticky  Container"" : """" )  )  ;  //  With user defined container m Sticky Container = sticky Container ;  m Sticky Headers Enabled = sticky ;  this . set Sticky Headers Helper ( sticky )  ;  return this ; }"
4848,"public  Gif Drawable build (  )  throws IO Exception{ if  ( m Input Source == null )  {     throw new  Null Pointer Exception ( "" Source is not set"" )  ;  } return m Input Source . create Gif Drawable ( m Old Drawable, m Executor, m Is Rendering Triggered On Draw, m Options )  ; }"
4849,"protected void assert Final Step Throws Illegal State Exception (  Closing Future<?> closing Future ) { try {     closing Future . finish To Future (  )  ;      fail (  )  ;  } catch  (  Illegal State Exception expected )  { } try {     closing Future . finish To Value And Closer ( new  No Op Value And Closer Consumer<> (  ) , executor )  ;      fail (  )  ;  } catch  (  Illegal State Exception expected )  { }}"
4850,"public static  Pair< Integer,  Integer> decode Dimensions (  Uri uri ) {  Preconditions . check Not Null ( uri )  ;   Bitmap Factory .  Options options = new  Bitmap Factory .  Options (  )  ;  options . in Just Decode Bounds = true ;   Bitmap Factory . decode File ( uri . get Path (  ) , options )  ;  return  ( options . out Width == -1 || options . out Height == -1 )  ? null : new  Pair<> ( options . out Width, options . out Height )  ; }"
4851,"private boolean can Keep Media Period Holder (  Media Period Info old Info,  Media Period Info new Info ) { return old Info . start Position Us == new Info . start Position Us && old Info . id . equals ( new Info . id )  ; }"
4852,public  String get Class Info ( int index ) {  Class Info c =  (  Class Info )  get Item ( index )  ;  if  ( c == null )      return null ;  return  Descriptor . to Java Name ( get Utf8 Info ( c . name )  )  ; }
4853,"public com . anychart . core . stock . indicators . CCI series (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . series ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
4854,"void update Running Experiments (  Fetch Eligible Campaigns Response response ) {  Array List< Abt Experiment Info> running Experiments = new  Array List<> (  )  ;  for  (  Campaign Proto .  Thick Content content : response . get Messages List (  )  )  {     if  ( !content . get Is Test Campaign (  )  && content . get Payload Case (  )  . equals (  Campaign Proto .  Thick Content .  Payload Case . EXPERIMENTAL_PAYLOAD )  )  {          Experiment Payload Proto .  Experiment Payload payload = content . get Experimental Payload (  )  . get Experiment Payload (  )  ;          running Experiments . add ( new  Abt Experiment Info ( payload . get Experiment Id (  ) , payload . get Variant Id (  ) , payload . get Trigger Event (  ) , new  Date ( payload . get Experiment Start Time Millis (  )  ) , payload . get Trigger Timeout Millis (  ) , payload . get Time To Live Millis (  )  )  )  ;      } } if  ( running Experiments . is Empty (  )  )  {     return ;  } executor . execute (  (  )  -> {     try {          Logging . logd ( "" Updating running experiments with: "" + running Experiments . size (  )  + "" experiments"" )  ;          ab Testing . validate Running Experiments ( running Experiments )  ;      } catch  (  Abt Exception e )  {          Logging . loge ( "" Unable to register experiments with ABT, missing analytics?\n"" + e . get Message (  )  )  ;      } } )  ; }"
4855,"public static  Litho View get View After State Update (  Component Context context,  Component component ) { return get View After State Update ( context, component, new  State Updater (  )  {     @ Override     public void perform State Update (  Component Context ignored )  {     } },  Component Test Helper . get Default Layout Thread Shadow Looper (  ) , false, false )  ; }"
4856,"private long read Time Stamp ( byte [  ]  buffer, int offset ) { long seconds = read32 ( buffer, offset )  ;  long fraction = read32 ( buffer, offset + 4 )  ;  return  (  ( seconds - OFFSET_1900_TO_1970 )  * 1000 )  +  (  ( fraction * 1000 L )  / 0x100000000 L )  ; }"
4857,"private static JSON Object build Create Firebase Installation Request Body ( @ Nullable  String fid, @ Non Null  String app Id ) { try {     JSON Object firebase Installation Data = new JSON Object (  )  ;      firebase Installation Data . put ( ""fid"", fid )  ;      firebase Installation Data . put ( ""app Id"", app Id )  ;      firebase Installation Data . put ( ""auth Version"", FIREBASE_INSTALLATION_AUTH_VERSION )  ;      firebase Installation Data . put ( ""sdk Version"", SDK_VERSION_PREFIX + VERSION_NAME )  ;      return firebase Installation Data ;  } catch  ( JSON Exception e )  {     throw new  Illegal State Exception ( e )  ;  }}"
4858,"public void id (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . id (  )  ; "" )  ; }"
4859,"public static boolean delete Property (  Scriptable obj,  String name ) {  Scriptable base = get Base ( obj, name )  ;  if  ( base == null )      return true ;  base . delete ( name )  ;  return !base . has ( name, obj )  ; }"
4860,"public final synchronized void move Media Source ( int current Index, int new Index ) { move Public Media Source ( current Index, new Index, /* handler= */ null, /* on Completion Action= */ null )  ; }"
4861,"public void max Point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Point Width (  )  ; "" )  ; }"
4862,"public static T serialize And Deserialize ( T instance,  Class<T> t Class,  Source Path Rule Finder rule Finder,  Cell Path Resolver cell Resolver,  Source Path Resolver Adapter resolver,  Toolchain Provider toolchain Provider,  Function< Optional< String>,  Project Filesystem> filesystem Function )  throws IO Exception{  Map< Hash Code, byte [  ] > data Map = new  Hash Map<> (  )  ;   Map< Hash Code,  List< Hash Code>> child Map = new  Hash Map<> (  )  ;   Delegate serializer Delegate =  (  value,  data,  children )  -> {     int id = data Map . size (  )  ;       Hash Code hash =  Hash Code . from Int ( id )  ;      data Map . put ( hash, data )  ;      child Map . put ( hash, children )  ;      return hash ;  } ;   Either< Hash Code, byte [  ] > serialized = new  Serializer ( rule Finder, cell Resolver, serializer Delegate )  . serialize ( instance,  Default Class Info Factory . for Instance ( instance )  )  ;  return new  Deserializer ( filesystem Function,  Class::for Name,  (  )  -> resolver, toolchain Provider )  . deserialize ( new  Data Provider (  )  {     @ Override     public  Input Stream get Data (  )  {         return new  Byte Array Input Stream ( serialized . transform (  left -> data Map . get ( left ) ,  right -> right )  )  ;      }     @ Override     public  Data Provider get Child (  Hash Code hash )  {         return get Data Provider ( data Map, child Map, hash )  ;      } }, t Class )  ; }"
4863,"public static void close On Destroy ( @ Non Null final  Lifecycle Owner owner, @ Non Null final  Scope scope ) { owner . get Lifecycle (  )  . add Observer ( new  Default Lifecycle Observer (  )  {     @ Override     public void on Destroy ( @ Non Null  Lifecycle Owner owner )  {         close Scope ( scope . get Name (  )  )  ;      } } )  ; }"
4864,static boolean has View Output (  Internal Node node ) { return node . is Force View Wrapping (  )  || is Mount View Spec ( node . get Tail Component (  )  )  || has View Attributes ( node . get Node Info (  )  )  || needs Host View For Common Dynamic Props ( node )  || needs Host View For Transition ( node )  ; }
4865,public  Mongo Database get Mongo Database (  ) { return database ; }
4866,public boolean has Locals (  ) { return unprocessed Insns . has Any Local Info (  )  ; }
4867,"protected void on Resume (  ) { super . on Resume (  )  ;   Logger . d ( ""engine on Resume"" )  ;  layer Engine Screen . restart (  )  ; // need add .  .  . }"
4868,"public static void apply Pressed View Scale ( final  View [  ]  views, final float [  ]  scale Factors ) { if  ( views == null || views . length == 0 )  {     return ;  } for  ( int i = 0 ;  i < views . length ;  i++ )  {     if  ( scale Factors == null || i >= scale Factors . length )  {         apply Pressed View Scale ( views [ i ] , PRESSED_VIEW_SCALE_DEFAULT_VALUE )  ;      } else {         apply Pressed View Scale ( views [ i ] , scale Factors [ i ]  )  ;      } }}"
4869,"public com . anychart . charts .  Venn bounds (  Number x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
4870,public  Set< String> get Untracked (  ) { return untracked ; }
4871,public final boolean less Equals (  Protocol Version version ) { return is Comparable ( version )  &&  ( compare To Version ( version )  <= 0 )  ; }
4872,public void flush (  )  throws IO Exception{ out . flush (  )  ; }
4873,"private static int get Core Count Pre17 (  ) { //  We override the current  Thread Policy to allow disk reads .  //  This shouldn't actually do disk-IO and accesses a device file .  //  See: https://github . com/bumptech/glide/issues/1170  File [  ]  cpus = null ;   Thread Policy original Policy =  Strict Mode . allow Thread Disk Reads (  )  ;  try {      File cpu Info = new  File ( CPU_LOCATION )  ;      final  Pattern cpu Name Pattern =  Pattern . compile ( CPU_NAME_REGEX )  ;      cpus = cpu Info . list Files ( new  Filename Filter (  )  {         @ Override         public boolean accept (  File file,  String s )  {             return cpu Name Pattern . matcher ( s )  . matches (  )  ;          }     } )  ;  } catch  (  Throwable t )  {     if  (  Log . is Loggable ( TAG,  Log . ERROR )  )  {          Log . e ( TAG, "" Failed to calculate accurate cpu count"", t )  ;      } } finally {      Strict Mode . set Thread Policy ( original Policy )  ;  } return  Math . max ( 1, cpus != null ? cpus . length : 0 )  ; }"
4874,"private void test Keys When Input Contents Changes (  Source Path Rule Finder rule Finder,  Source Path used Source Path,  Source Path unused Source Path,  Source Path noncovered Source Path,  Source Path interesting Source Path,  Path used Absolute Path,  Path unused Absolute Path,  Path noncovered Absolute Path,  Path interesting Absolute Path,  Dependency File Entry used Dep File Entry )  throws  Exception{ test Dep File Rule Key When Input Contents Changes ( rule Finder, used Source Path, unused Source Path, noncovered Source Path, interesting Source Path, used Absolute Path, unused Absolute Path, noncovered Absolute Path, interesting Absolute Path, used Dep File Entry )  ;  test Manifest Key When Input Contents Changes ( rule Finder, unused Source Path, noncovered Source Path, interesting Source Path, unused Absolute Path, noncovered Absolute Path, interesting Absolute Path )  ; }"
4875,public boolean get Detail Orientation Rotate Auto (  ) { return false ; }
4876,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
4877,"public void test Text Track Selection Flags (  )  throws  Exo Playback Exception{  Format forced Only = build Text Format ( ""forced Only"", ""eng"", C . SELECTION_FLAG_FORCED )  ;   Format forced Default = build Text Format ( ""forced Default"", ""eng"", C . SELECTION_FLAG_FORCED | C . SELECTION_FLAG_DEFAULT )  ;   Format default Only = build Text Format ( ""default Only"", ""eng"", C . SELECTION_FLAG_DEFAULT )  ;   Format no Flag = build Text Format ( ""no Flag"", ""eng"" )  ;   Renderer Capabilities [  ]  text Renderer Capabilities = new  Renderer Capabilities [  ]  { ALL_TEXT_FORMAT_SUPPORTED_RENDERER_CAPABILITIES } ;  //  There is no text language preference, the first track flagged as default should be selected .   Track Group Array track Groups = wrap Formats ( forced Only, forced Default, default Only, no Flag )  ;   Track Selector Result result = track Selector . select Tracks ( text Renderer Capabilities, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, forced Default )  ;  //  Ditto .  track Groups = wrap Formats ( forced Only, no Flag, default Only )  ;  result = track Selector . select Tracks ( text Renderer Capabilities, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, default Only )  ;  //  Default flags are disabled and no language preference is provided, so no text track is // selected .  track Groups = wrap Formats ( default Only, no Flag, forced Only, forced Default )  ;  track Selector . set Parameters (  Parameters . DEFAULT . build Upon (  )  . set Disabled Text Track Selection Flags ( C . SELECTION_FLAG_DEFAULT )  . build (  )  )  ;  result = track Selector . select Tracks ( text Renderer Capabilities, track Groups, period Id, TIMELINE )  ;  assert No Selection ( result . selections . get ( 0 )  )  ;  //  All selection flags are disabled and there is no language preference, so nothing should be // selected .  track Groups = wrap Formats ( forced Only, forced Default, default Only, no Flag )  ;  track Selector . set Parameters ( track Selector . get Parameters (  )  . build Upon (  )  . set Disabled Text Track Selection Flags ( C . SELECTION_FLAG_DEFAULT | C . SELECTION_FLAG_FORCED )  . build (  )  )  ;  result = track Selector . select Tracks ( text Renderer Capabilities, track Groups, period Id, TIMELINE )  ;  assert No Selection ( result . selections . get ( 0 )  )  ;  //  There is a preferred language, so the first language-matching track flagged as default should // be selected .  track Selector . set Parameters (  Parameters . DEFAULT . build Upon (  )  . set Preferred Text Language ( ""eng"" )  . build (  )  )  ;  result = track Selector . select Tracks ( text Renderer Capabilities, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, forced Default )  ;  //  Same as above, but the default flag is disabled .   If multiple tracks match the preferred // language, those not flagged as forced are preferred, as they likely include the contents of // forced subtitles .  track Groups = wrap Formats ( no Flag, forced Only, forced Default, default Only )  ;  track Selector . set Parameters ( track Selector . get Parameters (  )  . build Upon (  )  . set Disabled Text Track Selection Flags ( C . SELECTION_FLAG_DEFAULT )  . build (  )  )  ;  result = track Selector . select Tracks ( text Renderer Capabilities, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, no Flag )  ; }"
4878,public  Request Creator no Fade (  ) { no Fade = true ;  return this ; }
4879,"void on Continuous Glucose Monitor Session Run Time Received With Crc Error ( @ Non Null final  Bluetooth Device device, @ Non Null final  Data data ) {// ignore}"
4880,public long get Free Memory Bytes (  ) { return free Memory Bytes ; }
4881,"public float dst ( int x, int y ) { int xd = x - this . x ;  int yd = y - this . y ;  return  ( float )   Math . sqrt ( xd * xd + yd * yd )  ; }"
4882,"public com . anychart . charts .  Heat Map margin (  String value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, value4 )  )  ;  return this ; }"
4883,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
4884,"public com . anychart . core . annotations .  Vertical Line right (  String right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", wrap Quotes ( right )  )  )  ;  return this ; }"
4885,"public void pack (  List< String> refs )  throws IO Exception{ pack ( refs,  Collections . empty Map (  )  )  ; }"
4886,"public com . anychart . core . utils .  Quarter corners (  Number corners ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . corners ( %s )  ; "", corners )  )  ;  return this ; }"
4887,"public  String to String (  ) { return get Value (  )  . replace ( '$', ' . ' )  + "" . class"" ; }"
4888,"private  Method setup Setter Or Getter (  Class target Class,  Hash Map< Class,  Hash Map< String,  Method>> property Map Map,  String prefix,  Class value Type ) {  Method setter Or Getter = null ;  try {     //  Have to lock property map prior to reading it, to guard against     // another thread putting something in there after we've checked it     // but before we've added an entry to it     m Property Map Lock . write Lock (  )  . lock (  )  ;       Hash Map< String,  Method> property Map = property Map Map . get ( target Class )  ;      if  ( property Map != null )  {         setter Or Getter = property Map . get ( m Property Name )  ;      }     if  ( setter Or Getter == null )  {         setter Or Getter = get Property Function ( target Class, prefix, value Type )  ;          if  ( property Map == null )  {             property Map = new  Hash Map< String,  Method> (  )  ;              property Map Map . put ( target Class, property Map )  ;          }         property Map . put ( m Property Name, setter Or Getter )  ;      } } finally {     m Property Map Lock . write Lock (  )  . unlock (  )  ;  } return setter Or Getter ; }"
4889,"public com . anychart . charts .  Pareto x Axis (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Axis ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
4890,"private void on Action Move ( float x, float y ) { if  ( m Move Handler != null )  {     float snap Radius = m Snap Radius ;       Rect F rect = m Crop Window Handler . get Rect (  )  ;      if  ( calculate Bounds ( rect )  )  {         snap Radius = 0 ;      }     m Move Handler . move ( rect, x, y, m Calc Bounds, m View Width, m View Height, snap Radius, m Fix Aspect Ratio, m Target Aspect Ratio )  ;      m Crop Window Handler . set Rect ( rect )  ;      call On Crop Window Changed ( true )  ;      invalidate (  )  ;  }}"
4891,"public long get Sessions Memory Capture Frequency Foreground Ms (  ) { //  Order of precedence is: // 1 .   If the value exists in  Android  Manifest, return this value .  // 2 .   If the value exists through  Firebase  Remote  Config, cache and return this value .  // 3 .   If the value exists in device cache, return this value .  // 4 .   Otherwise, return default value .   Sessions Memory Capture Frequency Foreground Ms config =  Sessions Memory Capture Frequency Foreground Ms . get Instance (  )  ;  // 1 .   Reads value in  Android  Manifest  ( it is set by developers during build time )  .   Optional< Long> metadata Value = get Metadata Long ( config )  ;  if  ( metadata Value . is Available (  )  && is Gauge Capture Frequency Ms Valid ( metadata Value . get (  )  )  )  {     return metadata Value . get (  )  ;  } // 2 .   Reads value from  Firebase  Remote  Config, saves this value in cache layer if valid .   Optional< Long> rc Value = get Remote Config Long ( config )  ;  if  ( rc Value . is Available (  )  && is Gauge Capture Frequency Ms Valid ( rc Value . get (  )  )  )  {     device Cache Manager . set Value ( config . get Device Cache Flag (  ) , rc Value . get (  )  )  ;      return rc Value . get (  )  ;  } // 3 .   Reads value from cache layer .   Optional< Long> device Cache Value = get Device Cache Long ( config )  ;  if  ( device Cache Value . is Available (  )  && is Gauge Capture Frequency Ms Valid ( device Cache Value . get (  )  )  )  {     return device Cache Value . get (  )  ;  } // 4 .   Returns default value if there is no valid value from above approaches .  return config . get Default (  )  ; }"
4892,"public  Ad Group with Ad Durations Us ( long [  ]  durations Us ) {  Assertions . check Argument ( count == C . LENGTH_UNSET || durations Us . length <= this . uris . length )  ;  if  ( durations Us . length < this . uris . length )  {     durations Us = copy Durations Us With Space For Ad Count ( durations Us, uris . length )  ;  } return new  Ad Group ( count, states, uris, durations Us )  ; }"
4893,"public  Authentication Token get Authentication Token (  String host,  String realm ) {  Authentication Token token = null ;  token = this . authentication Tokens . get ( host . concat ( realm )  )  ;  if  ( token == null )  {     // try with just the host     token = this . authentication Tokens . get ( host )  ;      //  Try the realm     if  ( token == null )  {         token = this . authentication Tokens . get ( realm )  ;      }     // if no host found, just query for default     if  ( token == null )  {         token = this . authentication Tokens . get ( """" )  ;      } } return token ; }"
4894,public  Source Editor set Wrap ( final boolean wrap ) { this . wrap = wrap ;  load Source (  )  ;  return this ; }
4895,public  List< Call Adapter .  Factory> call Adapter Factories (  ) { return this . call Adapter Factories ; }
4896,public static  Immutable Set< Class<? extends  Annotation>> all Component And Creator Annotations (  ) { return ALL_COMPONENT_AND_CREATOR_ANNOTATIONS ; }
4897,"public  Map< String,  String> get Request Properties (  ) { return request Properties ; }"
4898,public int get Node Identity State (  ) { return node Identity State ; }
4899,"public  Object eval (  Reader reader )  throws  Script Exception{ return eval ( reader, context )  ; }"
4900,"public  String to Human (  String prefix,  String header ) {  String Builder sb = new  String Builder ( 100 )  ;  int size = size (  )  ;  sb . append ( prefix )  ;  sb . append ( header )  ;  sb . append ( ""catch "" )  ;  for  ( int i = 0 ;  i < size ;  i++ )  {      Entry entry = get ( i )  ;      if  ( i != 0 )  {         sb . append ( "",\n"" )  ;          sb . append ( prefix )  ;          sb . append ( ""  "" )  ;      }     if  (  ( i ==  ( size - 1 )  )  && catches All (  )  )  {         sb . append ( ""<any>"" )  ;      } else {         sb . append ( entry . get Exception Type (  )  . to Human (  )  )  ;      }     sb . append ( "" -> "" )  ;      sb . append (  Hex . u2or4 ( entry . get Handler (  )  )  )  ;  } return sb . to String (  )  ; }"
4901,public final int length (  ) { return fields . size (  )  ; }
4902,"public com . anychart . core . grids .  Linear y Grid (  Number index ) { return new com . anychart . core . grids .  Linear (  String . format (  Locale . US, js Base + "" . y Grid ( %s ) "", index )  )  ; }"
4903,"private  Void update Custom Installation Id (  String custom Installation Id )  throws  Set Custom Installation Id Exception{  Custom Installation Id Cache Entry Value cache Entry Value = local Cache . read Cache Entry Value (  )  ;  if  ( cache Entry Value != null && cache Entry Value . get Custom Installation Id (  )  . equals ( custom Installation Id )  && cache Entry Value . get Cache Status (  )  ==  Custom Installation Id Cache .  Cache Status . SYNCED )  {     // value, there's no need to update .      return null ;  }  String fid ;   Installation Token Result installation Token Result ;  try {     fid =  Tasks . await ( firebase Installations Api . get Id (  )  )  ;      //  No need to force refresh token .      installation Token Result =  Tasks . await ( firebase Installations Api . get Token ( false )  )  ;  } catch  (  Execution Exception |  Interrupted Exception e )  {     throw new  Set Custom Installation Id Exception (  Status . CLIENT_ERROR, "" Failed to get  Firebase installation ID and token"" )  ;  } boolean first Update Cache Result = local Cache . insert Or Update Cache Entry (  Custom Installation Id Cache Entry Value . create ( custom Installation Id, fid,  Custom Installation Id Cache .  Cache Status . PENDING_UPDATE )  )  ;  if  ( !first Update Cache Result )  {     throw new  Set Custom Installation Id Exception (  Status . CLIENT_ERROR, "" Failed to update client side cache"" )  ;  } //  Start requesting backend when first cache updae is done .   Code backend Request Result = backend Service Client . update Custom Installation Id (  Utils . get Project Number From App Id ( firebase App . get Options (  )  . get Application Id (  )  ) , firebase App . get Options (  )  . get Api Key (  ) , custom Installation Id, fid, installation Token Result . get Token (  )  )  ;  boolean final Update Cache Result ;  switch ( backend Request Result )  {     case OK:         final Update Cache Result = local Cache . insert Or Update Cache Entry (  Custom Installation Id Cache Entry Value . create ( custom Installation Id, fid,  Custom Installation Id Cache .  Cache Status . SYNCED )  )  ;          break ;      case UNAUTHORIZED:         local Cache . clear (  )  ;          throw new  Set Custom Installation Id Exception (  Status . CLIENT_ERROR, "" Instance id token is invalid . "" )  ;      case CONFLICT:         local Cache . clear (  )  ;          throw new  Set Custom Installation Id Exception (  Status . DUPLICATED_CUSTOM_INSTALLATION_ID, "" The custom installation id is used by another  Firebase installation in your project . "" )  ;      case HTTP_CLIENT_ERROR:         local Cache . clear (  )  ;          throw new  Set Custom Installation Id Exception (  Status . CLIENT_ERROR, "" Http client error ( 4xx ) "" )  ;      case NETWORK_ERROR:     case SERVER_ERROR:     default:         //  These are considered retryable errors, so not to clean up the cache .          throw new  Set Custom Installation Id Exception (  Status . BACKEND_ERROR )  ;  } if  ( final Update Cache Result )  {     return null ;  } else {     throw new  Set Custom Installation Id Exception (  Status . CLIENT_ERROR, "" Failed to update client side cache"" )  ;  }}"
4904,"public  String Builder replace (  String find,  String replace ) { int find Length = find . length (  ) , replace Length = replace . length (  )  ;  int index = 0 ;  while  ( true )  {     index = index Of ( find, index )  ;      if  ( index == -1 )          break ;      replace0 ( index, index + find Length, replace )  ;      index += replace Length ;  } return this ; }"
4905,"public com . anychart . charts .  Cartesian3d palette (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4906,"public com . anychart . core . utils .  Quarter min Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", height )  )  ;  return this ; }"
4907,private void reset Persistence Stats (  ) { query Engine . reset Counts (  )  ; }
4908,public static _ Fields find By Thrift Id ( int field Id ) { switch ( field Id )  {     default:         return null ;  }}
4909,"private boolean annotate String As Local File (  Buck Simple Expression target Expression,  String target Value,  Annotation Holder annotation Holder ) {  Optional< Virtual File> target File =  Optional . of ( target Expression )  . map (  Psi Element::get Containing File )  . map (  Psi File::get Virtual File )  . map (  Virtual File::get Parent )  . map (  dir -> dir . find File By Relative Path ( target Value )  )  . filter (  Virtual File::exists )  ;  if  ( !target File . is Present (  )  )  {     return false ;  }  Annotation annotation = annotation Holder . create Info Annotation ( target Expression, target File . get (  )  . get Path (  )  )  ;  annotation . set Text Attributes (  Buck Syntax Highlighter . BUCK_FILE_NAME )  ;  return true ; }"
4910,"public void on Configuration Changed (  Activity activity,  Configuration new Config ) {}"
4911,public void set Data (  Biking Route Line line ) { m Route Line = line ; }
4912,"static int get Reconciliation Mode ( final  Component Context c, final  Internal Node current, final  Set< String> keys ) { final  List< Component> components = current . get Components (  )  ;  final  List< String> component Keys = current . get Component Keys (  )  ;  final  Component root = current . get Head Component (  )  ;  // 1 . 0 check early exit conditions if  ( c == null || root == null || current instanceof  Nested Tree Holder )  {     return  Reconciliation Mode . RECREATE ;  } // 1 . 1  Check if any component has mutations for  ( int i = 0, size = components . size (  )  ;  i < size ;  i++ )  {     final  Component component = components . get ( i )  ;      final  String key =  Component Utils . get Global Key ( component, component Keys == null ? null : component Keys . get ( i )  )  ;      if  ( keys . contains ( key )  )  {         return  Reconciliation Mode . RECREATE ;      } } // 2 . 0  Check if any descendants have mutations final  String root Key =  Component Utils . get Global Key ( root, current . get Head Component Key (  )  )  ;  for  (  String key : keys )  {     if  ( key . starts With ( root Key )  )  {         return  Reconciliation Mode . RECONCILE ;      } } return  Reconciliation Mode . COPY ; }"
4913,"public com . anychart . core . axes .  Circular fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
4914,"public com . anychart . core . annotations .  Plot Controller annotations (  ) { return new com . anychart . core . annotations .  Plot Controller ( js Base + "" . annotations (  ) "" )  ; }"
4915,public  Builder set Content Language ( @ Nullable  String content Language ) { m Metadata . m Content Language =  Metadata Value . with User Value ( content Language )  ;  return this ; }
4916,"public com . anychart . core . cartesian . series .  Step Line step Line ( com . anychart . data .  View data, com . anychart . enums .  Text Parsing Mode csv Settings ) { return new com . anychart . core . cartesian . series .  Step Line (  String . format (  Locale . US, js Base + "" . step Line ( %s, %s ) "",  ( data != null )  ? data . get Js Base (  )  : null,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
4917,"public  Builder set Minimum Fetch Interval In Seconds ( long duration ) { if  ( duration < 0 )  {     throw new  Illegal Argument Exception ( "" Minimum interval between fetches has to be a non-negative number .  "" + duration + "" is an invalid argument"" )  ;  } minimum Fetch Interval = duration ;  return this ; }"
4918,"public long get Long (  String key ) {  Long activated Long = get Long From Cache ( activated Configs Cache, key )  ;  if  ( activated Long != null )  {     call Listeners ( key, get Configs From Cache ( activated Configs Cache )  )  ;      return activated Long ;  }  Long defaults Long = get Long From Cache ( default Configs Cache, key )  ;  if  ( defaults Long != null )  {     return defaults Long ;  } log Parameter Value Does Not Exist ( key, "" Long"" )  ;  return DEFAULT_VALUE_FOR_LONG ; }"
4919,public void set Enable Logging ( boolean enable Logging ) { m Config . set Enable Logging ( enable Logging )  ; }
4920,public static void set Default Item Spacing Dp ( @ Dimension ( unit =  Dimension . DP )  int dp ) { default Spacing Between Items Dp = dp ; }
4921,"static  Set< Pair<ID Key, ID Key>> get Registry (  ) { return REGISTRY . get (  )  ; }"
4922,public static boolean has Duplicates (  List<?> list ) { if  ( list . size (  )  < 2 )  {     return false ;  }  Set< Object> as Set = new  Hash Set< Object> ( list )  ;  return list . size (  )  != as Set . size (  )  ; }
4923,"public com . anychart . core . utils .  Quarter top Stroke ( com . anychart . graphics . vector .  Stroke color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top Stroke ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
4924,"public com . anychart . charts .  Cartesian a11y (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . a11y ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
4925,"public static boolean remove Occurrences (  Multiset<?> multiset To Modify,  Multiset<?> occurrences To Remove ) { check Not Null ( multiset To Modify )  ;  check Not Null ( occurrences To Remove )  ;  boolean changed = false ;   Iterator<? extends  Entry<?>> entry Iterator = multiset To Modify . entry Set (  )  . iterator (  )  ;  while  ( entry Iterator . has Next (  )  )  {      Entry<?> entry = entry Iterator . next (  )  ;      int remove Count = occurrences To Remove . count ( entry . get Element (  )  )  ;      if  ( remove Count >= entry . get Count (  )  )  {         entry Iterator . remove (  )  ;          changed = true ;      } else if  ( remove Count > 0 )  {         multiset To Modify . remove ( entry . get Element (  ) , remove Count )  ;          changed = true ;      } } return changed ; }"
4926,"public void test_6 (  ) {  Base Result< List< String>> base Result = new  Base Result< List< String>> (  )  ;  base Result . set Code ( ""1000"" )  ;  base Result . set Msg ( ""success"" )  ;  base Result . set Data (  Lists . new Array List ( ""测试1"", ""测试2"", ""测试3"" )  )  ;   Generic Fast Json Redis Serializer generic Fast Json Redis Serializer = new  Generic Fast Json Redis Serializer (  )  ;  byte [  ]  bytes = generic Fast Json Redis Serializer . serialize ( base Result )  ;   Base Result< List< String>> base Result2 =  (  Base Result< List< String>> )  generic Fast Json Redis Serializer . deserialize ( bytes )  ;   Assert . assert Equals ( base Result2 . get Code (  ) , ""1000"" )  ;   Assert . assert Equals ( base Result2 . get Data (  )  . size (  ) , 3 )  ;   String json = ""{\n"" + ""\""@type\"": \""com . alibaba . json . bvt . support . spring .  Generic Fast Json Redis Serializer Test$ Base Result\"",\n"" + ""\""code\"": \""1000\"",\n"" + ""\""data\"":  [ \n"" + ""\""按手动控制按钮\"",\n"" + ""\""不停机\"",\n"" + ""\""不转动\"",\n"" + ""\""传动轴振动大\"",\n"" + ""\""第一推进器\"",\n"" + ""\""电机不运行\"",\n"" + "" ] ,\n"" + ""\""msg\"": \""success\""\n"" + ""}"" ;   Base Result< List< String>> base Result3 =  (  Base Result< List< String>> )  generic Fast Json Redis Serializer . deserialize ( json . get Bytes ( IO Utils . UTF8 )  )  ;   Assert . assert Equals ( base Result3 . get Code (  ) , ""1000"" )  ;   Assert . assert Equals ( base Result3 . get Data (  )  . size (  ) , 6 )  ; }"
4927,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
4928,"public com . anychart . charts .  Sankey select Marquee Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
4929,public void set Color ( int color ) { reset Colors (  )  ;  m Colors . add ( color )  ; }
4930,"public static  Value boolean Value (  String name, final boolean current Value, final  String description ) { return new  Default Value ( name,  String . value Of ( current Value )  )  {     public void show Dialog (  )  {         J Check Box check Box = new J Check Box (  )  ;          check Box . set Selected ( current Value )  ;          if  ( show Value Dialog ( check Box, description )  )              value =  String . value Of ( check Box . is Selected (  )  )  ;      }     public  Object get Object (  )  {         return  Boolean . value Of ( value )  ;      } } ; }"
4931,public  Glide Builder set Default Request Options ( @ Non Null  Request Options Factory factory ) { this . default Request Options Factory =  Preconditions . check Not Null ( factory )  ;  return this ; }
4932,"public  String parse Link Destination (  ) { int after Dest =  Link Scanner . scan Link Destination ( input, index )  ;  if  ( after Dest == -1 )  {     return null ;  }  String dest ;  if  ( peek (  )  == '<' )  {     // chop off surrounding < .  . >:     dest = input . substring ( index + 1, after Dest - 1 )  ;  } else {     dest = input . substring ( index, after Dest )  ;  } index = after Dest ;  return  Escaping . unescape String ( dest )  ; }"
4933,"public  String get Exported Name (  ) { return  Preconditions . check Not Null ( exported Name, "" Tried to get exported name before function has been assigned to a variable and exported"" )  ; }"
4934,"private  Pair< Writable Array,  Writable Array> touch Subsequence ( @ Non Null  Writable Array touches, @ Non Null  Writable Array changed Indices ) {  Writable Array result = new  Writable Native Array (  )  ;  for  ( int i = 0 ;  i < changed Indices . size (  )  ;  i++ )  {     result . push Map ( get Writable Map ( touches . get Map ( changed Indices . get Int ( i )  )  )  )  ;  } return new  Pair<> ( result, touches )  ; }"
4935,public  Test Text Prop View Model_ title ( @ String Res int string Res ) { on Mutation (  )  ;  assigned Attributes_epoxy Generated Model . set ( 0 )  ;  title_ String Attribute Data . set Value ( string Res )  ;  return this ; }
4936,"public static void main (  String [  ]  args ) { if  ( args . length != 2 )  {      System . err . println ( J Git Text . get (  )  . need2 Arguments )  ;       System . exit ( 1 )  ;  } try {      Raw Text a = new  Raw Text ( new java . io .  File ( args [ 0 ]  )  )  ;       Raw Text b = new  Raw Text ( new java . io .  File ( args [ 1 ]  )  )  ;       Edit List r = INSTANCE . diff (  Raw Text Comparator . DEFAULT, a, b )  ;       System . out . println ( r . to String (  )  )  ;  } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  }}"
4937,"public  String read Line (  )  throws IO Exception{ synchronized  ( in )  {     if  ( buf == null )  {         throw new IO Exception ( "" Line Reader is closed"" )  ;      }     // throw again if that happens ;  thus we need to handle end == -1 as well as end == pos .      if  ( pos >= end )  {         fill Buf (  )  ;      }     //  Try to find LF in the buffered data and return the line if successful .      for  ( int i = pos ;  i != end ;  ++i )  {         if  ( buf [ i ]  == LF )  {             int line End =  ( i != pos && buf [ i - 1 ]  == CR )  ? i - 1 : i ;               String res = new  String ( buf, pos, line End - pos, charset . name (  )  )  ;              pos = i + 1 ;              return res ;          }     }     //  Let's anticipate up to 80 characters on top of those already read .       Byte Array Output Stream out = new  Byte Array Output Stream ( end - pos + 80 )  {         @ Override         public  String to String (  )  {             int length =  ( count > 0 && buf [ count - 1 ]  == CR )  ? count - 1 : count ;              try {                 return new  String ( buf, 0, length, charset . name (  )  )  ;              } catch  (  Unsupported Encoding Exception e )  {                 //  Since we control the charset this will never happen .                  throw new  Assertion Error ( e )  ;              }         }     } ;      while  ( true )  {         out . write ( buf, pos, end - pos )  ;          //  Mark unterminated line in case fill Buf throws EOF Exception or IO Exception .          end = -1 ;          fill Buf (  )  ;          //  Try to find LF in the buffered data and return the line if successful .          for  ( int i = pos ;  i != end ;  ++i )  {             if  ( buf [ i ]  == LF )  {                 if  ( i != pos )  {                     out . write ( buf, pos, i - pos )  ;                  }                 pos = i + 1 ;                  return out . to String (  )  ;              }         }     } }}"
4938,"public void add Items (  List<T> items, int position ) { position =  Math . min ( position, m Data . size (  )  )  ;  _add Item List ( position, items )  ;  int pos = _calc Position ( position )  ;  for  ( T item : items )  {     notify Item Inserted ( pos++ )  ;  }}"
4939,"public void set Values ( long [  ]  keys, E unique Value ) { int length = keys . length ;  for  ( int i = 0 ;  i < length ;  i++ )  {     put ( keys [ i ] , unique Value )  ;  }}"
4940,"public void add View ( final  Context context, final  View Group texture View Container, final int rotate, final IGSY Surface Listener gsy Surface Listener, final  Measure Helper .  Measure Form Video Params Listener video Params Listener, final GSY Video GL View .  Shader Interface effect, final float [  ]  transform, final GSY Video GL View Base Render custom Render, int mode ) { if  ( GSY Video Type . get Render Type (  )  == GSY Video Type . SUFRACE )  {     m Show View = GSY Surface View . add Surface View ( context, texture View Container, rotate, gsy Surface Listener, video Params Listener )  ;  } else if  ( GSY Video Type . get Render Type (  )  == GSY Video Type . GLSURFACE )  {     m Show View = GSY Video GL View . add GL View ( context, texture View Container, rotate, gsy Surface Listener, video Params Listener, effect, transform, custom Render, mode )  ;  } else {     m Show View = GSY Texture View . add Texture View ( context, texture View Container, rotate, gsy Surface Listener, video Params Listener )  ;  }}"
4941,"public static  String derive Code Verifier Challenge (  String code Verifier ) { try {      Message Digest sha256 Digester =  Message Digest . get Instance ( ""SHA-256"" )  ;      sha256 Digester . update ( code Verifier . get Bytes ( ""ISO_8859_1"" )  )  ;      byte [  ]  digest Bytes = sha256 Digester . digest (  )  ;      return  Base64 . encode To String ( digest Bytes, PKCE_BASE64_ENCODE_SETTINGS )  ;  } catch  (  No Such Algorithm Exception e )  {      Logger . warn ( ""SHA-256 is not supported on this device!  Using plain challenge"", e )  ;      return code Verifier ;  } catch  (  Unsupported Encoding Exception e )  {      Logger . error ( ""ISO-8859-1 encoding not supported on this device!"", e )  ;      throw new  Illegal State Exception ( ""ISO-8859-1 encoding not supported"", e )  ;  }}"
4942,"protected static void multiply MV ( float [  ]  result Vec, int result Vec Offset, float [  ]  lhs Mat, int lhs Mat Offset, float [  ]  rhs Vec, int rhs Vec Offset ) { if  ( result Vec == null )  {     throw new  Illegal Argument Exception ( ""result Vec == null"" )  ;  } if  ( lhs Mat == null )  {     throw new  Illegal Argument Exception ( ""lhs Mat == null"" )  ;  } if  ( rhs Vec == null )  {     throw new  Illegal Argument Exception ( ""rhs Vec == null"" )  ;  } if  ( result Vec Offset + 4 > result Vec . length )  {     throw new  Illegal Argument Exception ( ""result Vec Offset + 4 > result Vec . length"" )  ;  } if  ( lhs Mat Offset + 16 > lhs Mat . length )  {     throw new  Illegal Argument Exception ( ""lhs Mat Offset + 16 > lhs Mat . length"" )  ;  } if  ( rhs Vec Offset + 4 > rhs Vec . length )  {     throw new  Illegal Argument Exception ( ""rhs Vec Offset + 4 > rhs Vec . length"" )  ;  } final float x = rhs Vec [ rhs Vec Offset + 0 ]  ;  final float y = rhs Vec [ rhs Vec Offset + 1 ]  ;  final float z = rhs Vec [ rhs Vec Offset + 2 ]  ;  final float w = rhs Vec [ rhs Vec Offset + 3 ]  ;  result Vec [ result Vec Offset + 0 ]  = lhs Mat [ I ( 0, 0, lhs Mat Offset )  ]  * x + lhs Mat [ I ( 1, 0, lhs Mat Offset )  ]  * y + lhs Mat [ I ( 2, 0, lhs Mat Offset )  ]  * z + lhs Mat [ I ( 3, 0, lhs Mat Offset )  ]  * w ;  result Vec [ result Vec Offset + 1 ]  = lhs Mat [ I ( 0, 1, lhs Mat Offset )  ]  * x + lhs Mat [ I ( 1, 1, lhs Mat Offset )  ]  * y + lhs Mat [ I ( 2, 1, lhs Mat Offset )  ]  * z + lhs Mat [ I ( 3, 1, lhs Mat Offset )  ]  * w ;  result Vec [ result Vec Offset + 2 ]  = lhs Mat [ I ( 0, 2, lhs Mat Offset )  ]  * x + lhs Mat [ I ( 1, 2, lhs Mat Offset )  ]  * y + lhs Mat [ I ( 2, 2, lhs Mat Offset )  ]  * z + lhs Mat [ I ( 3, 2, lhs Mat Offset )  ]  * w ;  result Vec [ result Vec Offset + 3 ]  = lhs Mat [ I ( 0, 3, lhs Mat Offset )  ]  * x + lhs Mat [ I ( 1, 3, lhs Mat Offset )  ]  * y + lhs Mat [ I ( 2, 3, lhs Mat Offset )  ]  * z + lhs Mat [ I ( 3, 3, lhs Mat Offset )  ]  * w ; }"
4943,"public void test Topics Api Populates Param Topic_straight From Http Topic Api (  ) {  Intent intent = new  Intent (  )  ;  intent . put Extra (  Message Payload Keys . FROM, ""/topics/test_topic"" )  ;  intent . put Extra (  Constants .  Analytics Keys . ENABLED, ""1"" )  ;   Messaging Analytics . log Notification Received ( intent )  ;   List< Analytics Validator .  Logged Event> events = analytics Validator . get Logged Events (  )  ;  assert That ( events )  . has Size ( 1 )  ;   Analytics Validator .  Logged Event event = events . get ( 0 )  ;  assert That ( event . get Origin (  )  )  . is Equal To (  Scion Analytics . ORIGIN_FCM )  ;  assert That ( event . get Name (  )  )  . is Equal To (  Scion Analytics . EVENT_NOTIFICATION_RECEIVE )  ;  assert That ( event . get Params (  )  . contains Key (  Analytics . PARAM_MESSAGE_ID )  )  . is False (  )  ;  assert That ( event . get Params (  )  . get String (  Scion Analytics . PARAM_TOPIC )  )  . is Equal To ( ""/topics/test_topic"" )  ; }"
4944,"public final  Selection Override get Selection Override ( int renderer Index,  Track Group Array groups ) {  Map< Track Group Array,  Selection Override> overrides = selection Overrides . get ( renderer Index )  ;  return overrides != null ? overrides . get ( groups )  : null ; }"
4945,public static int to Back Buffer Y ( int logical Y ) { return  ( int )   ( logical Y *  Gdx . graphics . get Back Buffer Height (  )  /  ( float )   Gdx . graphics . get Height (  )  )  ; }
4946,"public static double distance To ( @ Non Null  Vector3 u, @ Non Null  Vector3 v ) { final double a = u . x - v . x ;  final double b = u . y - v . y ;  final double c = u . z - v . z ;  return  Math . sqrt ( a * a + b * b + c * c )  ; }"
4947,"public void enable Merge Paths For Kit Kat And Above ( boolean enable ) { if  ( enable Merge Paths == enable )  {     return ;  } if  (  Build . VERSION . SDK_INT <  Build . VERSION_CODES . KITKAT )  {      Logger . warning ( "" Merge paths are not supported pre- Kit  Kat . "" )  ;      return ;  } enable Merge Paths = enable ;  if  ( composition != null )  {     build Composition Layer (  )  ;  }}"
4948,public  File Name Rule get File Name Rule (  ) { return file Name Rule ; }
4949,"public  Register Spec get ( int reg ) { try {     return specs [ reg ]  ;  } catch  (  Array Index Out Of Bounds Exception ex )  {     //  Translate the exception .      throw new  Illegal Argument Exception ( ""bogus reg"" )  ;  }}"
4950,"private void stop ( final boolean go To Idle ) { if  ( D )       Log . d ( TAG, "" Stopping playback, go To Idle = "" + go To Idle )  ;  if  ( m Player . is Initialized (  )  )  {     m Player . stop (  )  ;  } m File To Play = null ;  close Cursor (  )  ;  if  ( go To Idle )  {     set Is Supposed To Be Playing ( false, false )  ;  } else {     if  (  Listener Util . is Lollipop (  )  )          stop Foreground ( false )  ;      else         stop Foreground ( true )  ;  }}"
4951,"public com . anychart . charts .  Sankey padding (  String value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
4952,"public int compare (  String frame Id1,  String frame Id2 ) { int frame Id1 Index = frame Ids In Preferred Order . index Of ( frame Id1 )  ;  if  ( frame Id1 Index == -1 )  {     frame Id1 Index =  Integer . MAX_VALUE ;  } int frame Id2 Index = frame Ids In Preferred Order . index Of ( frame Id2 )  ;  // Because othwerwise returns -1 whihc would be tags in list went to top of list if  ( frame Id2 Index == -1 )  {     frame Id2 Index =  Integer . MAX_VALUE ;  } // To have determinable ordering AND because if returns equal  Treese considers as equal if  ( frame Id1 Index == frame Id2 Index )  {     return frame Id1 . compare To ( frame Id2 )  ;  } return frame Id1 Index - frame Id2 Index ; }"
4953,"public com . anychart . core .  Separate Chart select Marquee Stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
4954,"public void define Property (  String property Name,  Object delegate To,  Method getter,  Method setter, int attributes ) {  Member Box getter Box = null ;  if  ( getter != null )  {     getter Box = new  Member Box ( getter )  ;      boolean delegated Form ;      if  ( ! Modifier . is Static ( getter . get Modifiers (  )  )  )  {         delegated Form =  ( delegate To != null )  ;          getter Box . delegate To = delegate To ;      } else {         delegated Form = true ;          //  Ignore delegate To for static getter but store         // non-null delegate To indicator .          getter Box . delegate To =  Void . TYPE ;      }      String error Id = null ;       Class<?> [  ]  parm Types = getter . get Parameter Types (  )  ;      if  ( parm Types . length == 0 )  {         if  ( delegated Form )  {             error Id = ""msg . obj . getter . parms"" ;          }     } else if  ( parm Types . length == 1 )  {          Object arg Type = parm Types [ 0 ]  ;          //  Allow  Scriptable Object for compatibility         if  ( ! ( arg Type ==  Script Runtime .  Scriptable Class || arg Type ==  Script Runtime .  Scriptable Object Class )  )  {             error Id = ""msg . bad . getter . parms"" ;          } else if  ( !delegated Form )  {             error Id = ""msg . bad . getter . parms"" ;          }     } else {         error Id = ""msg . bad . getter . parms"" ;      }     if  ( error Id != null )  {         throw  Context . report Runtime Error1 ( error Id, getter . to String (  )  )  ;      } }  Member Box setter Box = null ;  if  ( setter != null )  {     if  ( setter . get Return Type (  )  !=  Void . TYPE )          throw  Context . report Runtime Error1 ( ""msg . setter . return"", setter . to String (  )  )  ;      setter Box = new  Member Box ( setter )  ;      boolean delegated Form ;      if  ( ! Modifier . is Static ( setter . get Modifiers (  )  )  )  {         delegated Form =  ( delegate To != null )  ;          setter Box . delegate To = delegate To ;      } else {         delegated Form = true ;          //  Ignore delegate To for static setter but store         // non-null delegate To indicator .          setter Box . delegate To =  Void . TYPE ;      }      String error Id = null ;       Class<?> [  ]  parm Types = setter . get Parameter Types (  )  ;      if  ( parm Types . length == 1 )  {         if  ( delegated Form )  {             error Id = ""msg . setter2 . expected"" ;          }     } else if  ( parm Types . length == 2 )  {          Object arg Type = parm Types [ 0 ]  ;          //  Allow  Scriptable Object for compatibility         if  ( ! ( arg Type ==  Script Runtime .  Scriptable Class || arg Type ==  Script Runtime .  Scriptable Object Class )  )  {             error Id = ""msg . setter2 . parms"" ;          } else if  ( !delegated Form )  {             error Id = ""msg . setter1 . parms"" ;          }     } else {         error Id = ""msg . setter . parms"" ;      }     if  ( error Id != null )  {         throw  Context . report Runtime Error1 ( error Id, setter . to String (  )  )  ;      } }  Getter Slot gslot =  (  Getter Slot )  get Slot ( property Name, 0, SLOT_MODIFY_GETTER_SETTER )  ;  gslot . set Attributes ( attributes )  ;  gslot . getter = getter Box ;  gslot . setter = setter Box ; }"
4955,"public void set Distance ( float distance ) { this . distance = distance ;  set Float ( distance Location, distance )  ; }"
4956,"public  Result T call Function (  String name,  List<?> args,  Class< Result T> result Class,  Codec Registry codec Registry ) { return invoke ( name, args, codec Registry,  Jni Bson Protocol . get Codec ( result Class, codec Registry )  )  ; }"
4957,"public  Resource create Relative (  String relative Path ) {  String path To Use =  String Utils . apply Relative Path ( this . path, relative Path )  ;  return new  File System Resource ( path To Use )  ; }"
4958,"static void write Encoding ( @ Non Null  Charset encoding, @ Non Null  Output Stream out )  throws IO Exception{ if  ( ! References . is Same Object ( encoding, UTF_8 )  )  {     out . write ( hencoding )  ;      out . write ( ' ' )  ;      out . write (  Constants . encode ASCII ( encoding . name (  )  )  )  ;      out . write ( '\n' )  ;  }}"
4959,"public static  Function< Item,  Number> divide ( final  String num Field1, final  String num Field2 ) { return new  Divide Operator ( num Field1, num Field2 )  ; }"
4960,static void sleep ( long ms )  throws  Interrupted IO Exception{ if  ( ms <= 0 )  {     return ;  } try {      Thread . sleep ( ms )  ;  } catch  (  Interrupted Exception e )  {      Interrupted IO Exception ie = new  Interrupted IO Exception (  )  ;      ie . init Cause ( e )  ;      throw ie ;  }}
4961,public  View get Content (  ) { return m View Above . get Content (  )  ; }
4962,"public  String get UTF8 Text ( int level ) { return native Get UTF8 Text ( m Native Result Iterator, level )  ; }"
4963,"public void visible (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . visible (  )  ; "" )  ; }"
4964,"public com . anychart . core . cartesian . series .  Area3d labels (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", settings )  )  ;  return this ; }"
4965,"public com . anychart . core . ui .  Label label (  Number index ) { return new com . anychart . core . ui .  Label (  String . format (  Locale . US, js Base + "" . label ( %s ) "", index )  )  ; }"
4966,"public  Immutable List .  Builder< String> get Buck Command Builder (  ) {  String buck Exe =  Env Variables Provider . get System Env (  )  . get ( ""TEST_BUCK"" )  ;  if  ( buck Exe == null || buck Exe . is Empty (  )  )  {     throw new  Assertion Error ( ""TEST_BUCK env variable must be set"" )  ;  }  Path buck Exe Path =  Paths . get ( buck Exe )  ;  if  ( ! Files . exists ( buck Exe Path )  )  {     throw new  Assertion Error ( ""TEST_BUCK path "" + buck Exe + "" does not exist"" )  ;  } if  ( !buck Exe Path . is Absolute (  )  )  {     throw new  Assertion Error ( ""TEST_BUCK path "" + buck Exe + "" must be absolute"" )  ;  } return get Command Builder (  )  . add ( buck Exe )  ; }"
4967,"public static  String get Authentication Method Name ( final  Authentication OOB Methods type ) { switch ( type )  {     case NO_OOB_AUTHENTICATION:         return "" No OOB"" ;      case STATIC_OOB_AUTHENTICATION:         return "" Static OOB"" ;      case OUTPUT_OOB_AUTHENTICATION:         return "" Output OOB"" ;      case INPUT_OOB_AUTHENTICATION:         return "" Input OOB"" ;      default:         return "" Prohibited"" ;  }}"
4968,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
4969,"public void add (  Offsetted Item item ) { throw If Prepared (  )  ;  try {     if  ( item . get Alignment (  )  > get Alignment (  )  )  {         throw new  Illegal Argument Exception ( ""incompatible item alignment"" )  ;      } } catch  (  Null Pointer Exception ex )  {     //  Elucidate the exception .      throw new  Null Pointer Exception ( ""item == null"" )  ;  } items . add ( item )  ; }"
4970,public T7 get Value7 (  ) { return value7 ; }
4971,"public com . anychart . core . annotations .  Fibonacci Retracement right (  String right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", wrap Quotes ( right )  )  )  ;  return this ; }"
4972,"private static void assert Mp4 Webvtt Subtitle Equals (  Subtitle subtitle,  Cue .  .  .  expected Cues ) { assert That ( subtitle . get Event Time Count (  )  )  . is Equal To ( 1 )  ;  assert That ( subtitle . get Event Time ( 0 )  )  . is Equal To ( 0 )  ;   List< Cue> subtitle Cues = subtitle . get Cues ( 0 )  ;  assert That ( subtitle Cues )  . has Size ( expected Cues . length )  ;  for  ( int i = 0 ;  i < subtitle Cues . size (  )  ;  i++ )  {     assert Cue Equals ( expected Cues [ i ] , subtitle Cues . get ( i )  )  ;  }}"
4973,public  View get View (  ) { return convert View ; }
4974,"public com . anychart . charts .  Sunburst margin (  String value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
4975,public  Countly Config set Star Rating Text Dismiss (  String star Rating Text Dismiss ) { this . star Rating Text Dismiss = star Rating Text Dismiss ;  return this ; }
4976,"public  Recent Repositories save Async (  ) { if  ( ids != null )  {     new  Async Task< Void,  Void,  Void> (  )  {         @ Override         protected  Void do In Background (  Void .  .  .  params )  {             save (  )  ;              return null ;          }     } . execute (  )  ;  } return this ; }"
4977,"static final void connect To Host Svc (  ) {  Context context = PMF . get Application Context (  )  ;  I Binder binder =  Plugin Provider Stub . proxy Fetch Host Binder ( context )  ;  if  ( LOG )  {      Log Debug . d ( PLUGIN_TAG, ""host binder = "" + binder )  ;  } if  ( binder == null )  {     // 无法连接到常驻进程，当前进程自杀     if  ( LOGR )  {          Log Release . e ( PLUGIN_TAG, ""p . p fhb fail"" )  ;      }      System . exit ( 1 )  ;  } try {     binder . link To Death ( new I Binder .  Death Recipient (  )  {         @ Override         public void binder Died (  )  {             if  ( LOGR )  {                  Log Release . i ( PLUGIN_TAG, ""p . p d, p . h s n"" )  ;              }             // 检测到常驻进程退出，插件进程自杀             if  (  Plugin Manager . is Plugin Process (  )  )  {                 if  ( LOGR )  {                     // persistent process exception, PLUGIN process quit now                      Log Release . i ( MAIN_TAG, ""p p e, pp q n"" )  ;                  }                  System . exit ( 0 )  ;              }             s Plugin Host Remote = null ;              // 断开和插件化管理器服务端的连接，因为已经失效              Plugin Manager Proxy . disconnect (  )  ;          }     }, 0 )  ;  } catch  (  Remote Exception e )  {     // 无法连接到常驻进程，当前进程自杀     if  ( LOGR )  {          Log Release . e ( PLUGIN_TAG, ""p . p p . h l2a: "" + e . get Message (  ) , e )  ;      }      System . exit ( 1 )  ;  } // s Plugin Host Remote = I Plugin Host .  Stub . as Interface ( binder )  ;  if  ( LOG )  {      Log Debug . d ( PLUGIN_TAG, ""host binder . i = "" +  Plugin Process Main . s Plugin Host Remote )  ;  } //  Added by  Jiongxuan  Zhang try {      Plugin Manager Proxy . connect To Server ( s Plugin Host Remote )  ;      // 将当前进程的""正在运行""列表和常驻做同步     // TODO 若常驻进程重启，则应在启动时发送广播，各存活着的进程调用该方法来同步      Plugin Manager Proxy . sync Running Plugins (  )  ;  } catch  (  Remote Exception e )  {     // 获取 Plugin Manager Server时出现问题，可能常驻进程突然挂掉等，当前进程自杀     if  ( LOGR )  {          Log Release . e ( PLUGIN_TAG, ""p . p p . h l3a: "" + e . get Message (  ) , e )  ;      }      System . exit ( 1 )  ;  } // 注册该进程信息到“插件管理进程”中 PMF . s Plugin Mgr . attach (  )  ; }"
4978,"public boolean set Composition (  Lottie Composition composition ) { if  ( this . composition == composition )  {     return false ;  } is Dirty = false ;  clear Composition (  )  ;  this . composition = composition ;  build Composition Layer (  )  ;  animator . set Composition ( composition )  ;  set Progress ( animator . get Animated Fraction (  )  )  ;  set Scale ( scale )  ;  //  We copy the tasks to a new  Array List so that if this method is called from multiple threads, // then there won't be two iterators iterating and removing at the same time .   Iterator< Lazy Composition Task> it = new  Array List<> ( lazy Composition Tasks )  . iterator (  )  ;  while  ( it . has Next (  )  )  {      Lazy Composition Task t = it . next (  )  ;      // https://github . com/airbnb/lottie-android/issues/1702     if  ( t != null )  {         t . run ( composition )  ;      }     it . remove (  )  ;  } lazy Composition Tasks . clear (  )  ;  composition . set Performance Tracking Enabled ( performance Tracking Enabled )  ;  //  Ensure that  Image View updates the drawable width/height so it can // properly calculate its drawable matrix .   Callback callback = get Callback (  )  ;  if  ( callback instanceof  Image View )  {      (  (  Image View )  callback )  . set Image Drawable ( null )  ;       (  (  Image View )  callback )  . set Image Drawable ( this )  ;  } return true ; }"
4979,"public static  Immutable Sorted Map< String,  Source Path> get Transitive Shared Libraries (  Action Graph Builder graph Builder,  Iterable<? extends  Native Linkable> roots, boolean always Include Roots ) {  Immutable Set< Build Target> root Targets =  Rich Stream . from ( roots )  . map (  l -> l . get Build Target (  )  )  . to Immutable Set (  )  ;   Immutable List<? extends  Native Linkable> native Linkables = get Transitive Native Linkables ( graph Builder, roots )  ;   Shared Libraries Builder builder = new  Shared Libraries Builder (  )  ;  builder . add All ( graph Builder, native Linkables . stream (  )  . filter (  e -> e . get Preferred Linkage (  )  !=  Native Linkable Group .  Linkage . STATIC ||  ( always Include Roots && root Targets . contains ( e . get Build Target (  )  )  )  )  . collect (  Collectors . to List (  )  )  )  ;  return builder . build (  )  ; }"
4980,public void fix Current Crop Window Rect (  ) {  Rect F rect = get Crop Window Rect (  )  ;  fix Crop Window Rect By Rules ( rect )  ;  m Crop Window Handler . set Rect ( rect )  ; }
4981,"public com . anychart . core . gantt .  Time Line Header max Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
4982,"private void set Custom Request Headers (  Http URL Connection url Connection,  Map< String,  String> custom Headers ) { for  (  Map .  Entry< String,  String> custom Header Entry : custom Headers . entry Set (  )  )  {     url Connection . set Request Property ( custom Header Entry . get Key (  ) , custom Header Entry . get Value (  )  )  ;  }}"
4983,"public static  Linker .  Linkable Dep Type get Link Style (  Native Linkable Group .  Linkage preferred Linkage,  Linker .  Linkable Dep Type requested Link Style ) { return get Link Style ( preferred Linkage, requested Link Style,  Optional . empty (  )  )  ; }"
4984,public void set Dismissable (  Dismissable dismissable ) { m Dismissable = dismissable ; }
4985,"public void set Playing Ad Position ( int ad Group Index, int ad Index In Ad Group, long position, long content Position ) { boolean notify = !is Playing Ad || this . ad Index In Ad Group != ad Index In Ad Group ;  is Playing Ad = true ;  this . ad Group Index = ad Group Index ;  this . ad Index In Ad Group = ad Index In Ad Group ;  this . position = position ;  this . content Position = content Position ;  if  ( notify )  {     for  (  Player .  Event Listener listener : listeners )  {         listener . on Position Discontinuity ( DISCONTINUITY_REASON_AD_INSERTION )  ;      } }}"
4986,"public static void build (  Mesh Part Builder builder,  Camera camera ) { build ( builder, camera, tmp Color0 . set ( 1, 0 . 66f, 0, 1 ) , tmp Color1 . set ( 1, 0, 0, 1 ) , tmp Color2 . set ( 0, 0 . 66f, 1, 1 ) , tmp Color3 . set ( 1, 1, 1, 1 ) , tmp Color4 . set ( 0 . 2f, 0 . 2f, 0 . 2f, 1 )  )  ; }"
4987,"public final void move Item ( int from Position, int to Position ) {  Thread Utils . assert Main Thread (  )  ;  if  (  Sections Debug . ENABLED )  {      Log . d (  Sections Debug . TAG, "" ( "" + hash Code (  )  + "" )  move Item "" + from Position + "" to "" + to Position )  ;  } final  Component Tree Holder holder ;  final boolean is New Position In Range ;  synchronized  ( this )  {     holder = m Component Tree Holders . remove ( from Position )  ;      m Component Tree Holders . add ( to Position, holder )  ;      is New Position In Range = m Estimated Viewport Count != UNSET && to Position >= m Current First Visible Position -  ( m Estimated Viewport Count * m Range Ratio )  && to Position <= m Current Last Visible Position +  ( m Estimated Viewport Count * m Range Ratio )  ;  } final boolean is Tree Valid = holder . is Tree Valid (  )  ;  if  ( is Tree Valid && !is New Position In Range )  {     holder . acquire State And Release Tree ( m Acquire State Handler On Release )  ;  } m Internal Adapter . notify Item Moved ( from Position, to Position )  ;  m Viewport Manager . set Should Update ( m Viewport Manager . move Affects Visible Range ( from Position, to Position,  ( m Current Last Visible Position - m Current First Visible Position + 1 )  )  )  ; }"
4988,"public static  Fork Join Pool fork Join Pool With Thread Limit ( int parallelism, int spares ) {  Atomic Integer active Threads = new  Atomic Integer ( 0 )  ;  return new  Fork Join Pool ( parallelism,  pool -> {     if  ( active Threads . get (  )  > parallelism + spares )  {         return null ;      }     return new  Fork Join Worker Thread ( pool )  {         @ Override         protected void on Start (  )  {             super . on Start (  )  ;              active Threads . increment And Get (  )  ;          }         @ Override         protected void on Termination (  Throwable exception )  {             active Threads . decrement And Get (  )  ;              super . on Termination ( exception )  ;          }     } ;  }, /* handler */ null, /* async Mode */ false )  ; }"
4989,"public com . anychart . charts .  Radar padding (  Number value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
4990,public void set Fast Json Config (  Fast Json Config fast Json Config ) { this . fast Json Config = fast Json Config ; }
4991,"void on Viewport Changed ( @ Viewport Info .  State int state ) { final int first Visible Position = m Layout Info . find First Visible Item Position (  )  ;  final int last Visible Position = m Layout Info . find Last Visible Item Position (  )  ;  final int first Fully Visible Item Position = m Layout Info . find First Fully Visible Item Position (  )  ;  final int last Fully Visible Item Position = m Layout Info . find Last Fully Visible Item Position (  )  ;  final int total Item Count = m Layout Info . get Item Count (  )  ;  if  ( first Visible Position < 0 || last Visible Position < 0 )  {     return ;  } if  ( first Visible Position == m Current First Visible Position && last Visible Position == m Current Last Visible Position && first Fully Visible Item Position == m Current First Fully Visible Position && last Fully Visible Item Position == m Current Last Fully Visible Position && total Item Count == m Total Item Count && state !=  Viewport Info .  State . DATA_CHANGES )  {     return ;  } m Current First Visible Position = first Visible Position ;  m Current Last Visible Position = last Visible Position ;  m Current First Fully Visible Position = first Fully Visible Item Position ;  m Current Last Fully Visible Position = last Fully Visible Item Position ;  m Total Item Count = total Item Count ;  m Should Update = false ;  final  List< Viewport Changed> viewport Changed Listeners ;  synchronized  ( this )  {     if  ( m Viewport Changed Listeners . is Empty (  )  )  {         return ;      }     viewport Changed Listeners = new  Array List<> ( m Viewport Changed Listeners )  ;  } for  ( int i = 0, size = viewport Changed Listeners . size (  )  ;  i < size ;  i++ )  {     final  Viewport Changed viewport Changed Listener = viewport Changed Listeners . get ( i )  ;      viewport Changed Listener . viewport Changed ( first Visible Position, last Visible Position, first Fully Visible Item Position, last Fully Visible Item Position, state )  ;  }}"
4992,"public synchronized void on Stop (  ) { L . d ( "" Countly on Stop called,  [ "" + activity Count_ + "" ]  ->  [ "" +  ( activity Count_ - 1 )  + "" ]  activities now open"" )  ;  if  ( !is Initialized (  )  )  {     L . e ( ""init must be called before on Stop"" )  ;      return ;  } if  ( activity Count_ == 0 )  {     L . e ( ""must call on Start before on Stop"" )  ;      return ;  } --activity Count_ ;  if  ( activity Count_ == 0 && !module Sessions . manual Session Control Enabled )  {     // if we don't use manual session control     //  Called when final  Activity is stopped .      //  Sends an end session event to the server, also sends any unsent custom events .      module Sessions . end Session Internal ( null )  ;  }  Crash Details . in Background (  )  ;  for  (  Module Base module : modules )  {     module . on Activity Stopped (  )  ;  }}"
4993,"public com . anychart . core .  State Settings negative Hatch Fill ( com . anychart . graphics . vector .  Hatch Fill settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . negative Hatch Fill ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
4994,"public void text Indent (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . text Indent (  )  ; "" )  ; }"
4995,public  Merge Result get Merge Result (  ) { return this . merge Result ; }
4996,"private void sync Flush (  String session Id,  Application Process State app State ) {  Gauge Metric .  Builder gauge Metric Builder =  Gauge Metric . new Builder (  )  ;  //  Adding CPU metric readings .  while  ( !cpu Gauge Collector . cpu Metric Readings . is Empty (  )  )  {     gauge Metric Builder . add Cpu Metric Readings ( cpu Gauge Collector . cpu Metric Readings . poll (  )  )  ;  } //  Adding  Memory metric readings .  while  ( !memory Gauge Collector . memory Metric Readings . is Empty (  )  )  {     gauge Metric Builder . add Android Memory Readings ( memory Gauge Collector . memory Metric Readings . poll (  )  )  ;  } //  Adding  Session ID info .  gauge Metric Builder . set Session Id ( session Id )  ;  transport Manager . log ( gauge Metric Builder . build (  ) , app State )  ; }"
4997,"public static int round To Int ( double x,  Rounding Mode mode ) { double z = round Intermediate ( x, mode )  ;  check In Range For Rounding Inputs ( z > MIN_INT_AS_DOUBLE - 1 . 0 & z < MAX_INT_AS_DOUBLE + 1 . 0, x, mode )  ;  return  ( int )  z ; }"
4998,"public com . anychart . core . stock . scrollerseries .  Hilo y Scale ( com . anychart . scales .  Scatter Base settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
4999,"public static int reflection Compare (  Object lhs,  Object rhs,  String .  .  .  exclude Fields ) { return reflection Compare ( lhs, rhs, false, null, exclude Fields )  ; }"
5000,"public com . anychart . core .  State Settings dummy Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . dummy Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
5001,"public void save As Xlsx (  String chart Data Export Mode,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Xlsx ( %s, %s )  ; "", wrap Quotes ( chart Data Export Mode ) , wrap Quotes ( filename )  )  )  ; }"
5002,public  String get Bluetooth Device Bond State (  ) { return resolve Bonding State ( m Device . get Bond State (  )  )  ; }
5003,"public com . anychart . charts .  Heat Map bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
5004,"private static void generate Super (  Class File Writer cfw,  String gen Name,  String super Name,  String method Name,  String method Signature,  Class<?> [  ]  parms,  Class<?> return Type ) { cfw . start Method ( ""super$"" + method Name, method Signature,  Class File Writer . ACC_PUBLIC )  ;  // push ""this"" cfw . add (  Byte Code . ALOAD, 0 )  ;  // push the rest of the parameters .  int param Offset = 1 ;  for  ( int i = 0 ;  i < parms . length ;  i++ )  {     param Offset += generate Push Param ( cfw, param Offset, parms [ i ]  )  ;  } // call the superclass implementation of the method .  cfw . add Invoke (  Byte Code . INVOKESPECIAL, super Name, method Name, method Signature )  ;  // now, handle the return type appropriately .   Class<?> ret Type = return Type ;  if  ( !ret Type . equals (  Void . TYPE )  )  {     generate Pop Result ( cfw, ret Type )  ;  } else {     cfw . add (  Byte Code . RETURN )  ;  } cfw . stop Method (  ( short )   ( param Offset + 1 )  )  ; }"
5005,"public float [  ]  calculate ( float [  ]  inputs, int input Offset, float [  ]  outputs, int output Offset ) { // check the inputs if  ( inputs . length - input Offset < get Num Inputs (  )  )  {     throw new  Illegal Argument Exception ( "" Wrong number of inputs to function!"" )  ;  } // check the outputs if  ( range != null && outputs . length - output Offset < get Num Outputs (  )  )  {     throw new  Illegal Argument Exception ( "" Wrong number of outputs for function!"" )  ;  } // clip the inputs to domain for  ( int i = 0 ;  i < inputs . length ;  i++ )  {     // clip to the domain -- min ( max ( x<i>, domain<2i> ) , domain<2i+1> )      inputs [ i ]  =  Math . max ( inputs [ i ] , get Domain ( 2 * i )  )  ;      inputs [ i ]  =  Math . min ( inputs [ i ] , get Domain (  ( 2 * i )  + 1 )  )  ;  } // do the actual calculation do Function ( inputs, input Offset, outputs, output Offset )  ;  // clip the outputs to range for  ( int i = 0 ;  range != null && i < outputs . length ;  i++ )  {     // clip to range -- min ( max ( r<i>, range<2i> ) , range<2i + 1> )      outputs [ i ]  =  Math . max ( outputs [ i ] , get Range ( 2 * i )  )  ;      outputs [ i ]  =  Math . min ( outputs [ i ] , get Range (  ( 2 * i )  + 1 )  )  ;  } return outputs ; }"
5006,public  Rect F get Circle Oval (  ) { return pie Chart Renderer . get Circle Oval (  )  ; }
5007,Label get Label (  ) { return get Import (  )  . get Label ( get Containing Label (  )  )  ; }
5008,public  String get Encoding Type (  ) { return  (  String )  content . get ( FIELD_TYPE )  ; }
5009,"public static  File Snapshot save No Config (  File path ) { return new  File Snapshot ( path, false )  ; }"
5010,"public com . anychart . core . stock . scrollerseries .  Jump Line y Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
5011,"protected void layout Child ( final  View child, int left, int top, int right, int bottom, @ Non Null  Layout Manager Helper helper ) { layout Child ( child, left, top, right, bottom, helper, false )  ; }"
5012,"private int header Size (  ) { /*      *  Because of how this instance was set up, this is the same      * as the alignment .       */ return get Alignment (  )  ; }"
5013,"private int expand Color (  String color Value ) { return  Integer . parse Int ( color Value + color Value, 16 )  ; }"
5014,"void test Date Values (  ) { assert Equals ( expected Date Values, created Date Values )  ; }"
5015,"private int read Corner2 ( int num Rows, int num Columns ) { int current Byte = 0 ;  if  ( read Module ( num Rows - 3, 0, num Rows, num Columns )  )  {     current Byte |= 1 ;  } current Byte <<= 1 ;  if  ( read Module ( num Rows - 2, 0, num Rows, num Columns )  )  {     current Byte |= 1 ;  } current Byte <<= 1 ;  if  ( read Module ( num Rows - 1, 0, num Rows, num Columns )  )  {     current Byte |= 1 ;  } current Byte <<= 1 ;  if  ( read Module ( 0, num Columns - 4, num Rows, num Columns )  )  {     current Byte |= 1 ;  } current Byte <<= 1 ;  if  ( read Module ( 0, num Columns - 3, num Rows, num Columns )  )  {     current Byte |= 1 ;  } current Byte <<= 1 ;  if  ( read Module ( 0, num Columns - 2, num Rows, num Columns )  )  {     current Byte |= 1 ;  } current Byte <<= 1 ;  if  ( read Module ( 0, num Columns - 1, num Rows, num Columns )  )  {     current Byte |= 1 ;  } current Byte <<= 1 ;  if  ( read Module ( 1, num Columns - 1, num Rows, num Columns )  )  {     current Byte |= 1 ;  } return current Byte ; }"
5016,public void set Draggable View (  View view ) { m Draggable View = view ; }
5017,"public com . anychart . core . ui .  Markers Factory markers (  ) { return new com . anychart . core . ui .  Markers Factory ( js Base + "" . markers (  ) "" )  ; }"
5018,public  Node Data get Data (  Merkle Tree Node node ) { return node . get Data ( protocol )  ; }
5019,"public  Identify set (  String property, JSON Array values ) { add To User Properties (  Constants . AMP_OP_SET, property, values )  ;  return this ; }"
5020,public final  String [  ]  get Supported ABIS (  ) {  String [  ]  result = new  String [  ]  {  Easy Device Info . not Found Val } ;  if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . LOLLIPOP )  {     result =  Build . SUPPORTED_ABIS ;  } return  Check Validity Util . check Valid Data ( result )  ; }
5021,"public void set Refreshing (  ) { state =  State . REFRESHING ;  scroll To ( 0, 0 )  ;  set Ui Refreshing (  )  ;  set Header Padding ( 0 )  ; }"
5022,"public void append To String (  String Buffer buffer,  String to String ) { if  ( to String != null )  {     int pos1 = to String . index Of ( content Start )  + content Start . length (  )  ;      int pos2 = to String . last Index Of ( content End )  ;      if  ( pos1 != pos2 && pos1 >= 0 && pos2 >= 0 )  {          String data = to String . substring ( pos1, pos2 )  ;          if  ( field Separator At Start )  {             remove Last Field Separator ( buffer )  ;          }         buffer . append ( data )  ;          append Field Separator ( buffer )  ;      } }}"
5023,"public static void stub Get And Set Bounds (  Drawable drawable ) { final  Rect rect = new  Rect (  )  ;  when ( drawable . get Bounds (  )  )  . then Return ( rect )  ;  do Answer ( new  Answer (  )  {     @ Override     public  Object answer (  Invocation On Mock invocation )  throws  Throwable {         rect . set (  (  Integer )  invocation . get Arguments (  )  [ 0 ] ,  (  Integer )  invocation . get Arguments (  )  [ 1 ] ,  (  Integer )  invocation . get Arguments (  )  [ 2 ] ,  (  Integer )  invocation . get Arguments (  )  [ 3 ]  )  ;          return null ;      } } )  . when ( drawable )  . set Bounds ( any Int (  ) , any Int (  ) , any Int (  ) , any Int (  )  )  ; }"
5024,"private void handle Write Stream Mutation Results (  Snapshot Version commit Version,  List< Mutation Result> results ) { //  This is a response to a write containing mutations and should be correlated to the first // write in our write pipeline .   Mutation Batch batch = write Pipeline . poll (  )  ;   Mutation Batch Result mutation Batch Result =  Mutation Batch Result . create ( batch, commit Version, results, write Stream . get Last Stream Token (  )  )  ;  remote Store Callback . handle Successful Write ( mutation Batch Result )  ;  //  It's possible that with the completion of this mutation another slot has freed up .  fill Write Pipeline (  )  ; }"
5025,"public void get Stat (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Stat ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
5026,public static  File Name Generator create File Name Generator (  ) { return new  Hash Code File Name Generator (  )  ; }
5027,"public com . anychart . core . annotations .  Fibonacci Base trend ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . trend ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
5028,"public void does Not Match (  String regex ) { if  (  Pattern . matches ( regex, actual )  )  {     fail With Actual ( ""expected to fail to match"", regex )  ;  }}"
5029,"public com . anychart . core . ui .  Timeline get Timeline (  ) { return new com . anychart . core . ui .  Timeline ( js Base + "" . get Timeline (  ) "" )  ; }"
5030,public void dispose (  ) { reader . close (  )  ;  free Flags = APP_FLAGS ;  delay Free Flags = 0 ;  retain On Reset = 0 ;  carry Flags = UNINTERESTING ;  first Parent = false ;  objects . clear (  )  ;  roots . clear (  )  ;  queue = new  Date Rev Queue ( first Parent )  ;  pending = new  Start Generator ( this )  ;  shallow Commits Initialized = false ; }
5031,public void set Color ( int color ) { m Color = color ; }
5032,"public void show Activity (  Activity aty,  Intent it ) { aty . start Activity ( it )  ; }"
5033,"public com . anychart . charts .  Sankey parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
5034,"private static  Pair< Integer,  Integer> get VP8 X Dimension ( final  Input Stream is )  throws IO Exception{ //  We have to skip 8 bytes is . skip ( 8 )  ;  //  Read 3 bytes for width and height return new  Pair<> ( read3 Bytes ( is )  + 1, read3 Bytes ( is )  + 1 )  ; }"
5035,"private void test First N Bytes ( byte [  ]  byte Array, int n, boolean found New Scan, int expected Best Scan, int best Scan End Offset ) { assert Equals ( found New Scan, m Progressive Jpeg Parser . parse More Data ( build Encoded Image ( new  Trivial Pooled Byte Buffer (  Arrays . copy Of ( byte Array, n )  )  )  )  )  ;  assert True ( m Progressive Jpeg Parser . is Jpeg (  )  )  ;  assert Equals ( expected Best Scan, m Progressive Jpeg Parser . get Best Scan Number (  )  )  ;  assert Equals ( best Scan End Offset, m Progressive Jpeg Parser . get Best Scan End Offset (  )  )  ; }"
5036,public void set Name (  String name ) { this . name = name ; }
5037,"private int index Of Batch Id ( int batch Id ) { if  ( queue . is Empty (  )  )  {     //  As an index this is past the end of the queue     return 0 ;  } //  Examine the front of the queue to figure out the difference between the batch Id and indexes // in the array .   Note that since the queue is ordered by batch Id, if the first batch has a // larger batch Id then the requested batch Id doesn't exist in the queue .   Mutation Batch first Batch = queue . get ( 0 )  ;  int first Batch Id = first Batch . get Batch Id (  )  ;  return batch Id - first Batch Id ; }"
5038,"private void check Values (  ) { assert That (  Build . FINGERPRINT )  . is Equal To ( ""robolectric"" )  ;  // set fingerprint value here .   It should be reset before next test executes .   Shadow Build . set Fingerprint ( ""test_fingerprint"" )  ; }"
5039,"public com . anychart . charts .  Tag Cloud max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
5040,public static void set Default Global Snap Helper Factory ( @ Nullable  Snap Helper Factory factory ) { default Global Snap Helper Factory = factory ; }
5041,public  Immutable List .  Builder< String> get Buck Command Builder (  ) { return get Command Builder (  )  . add ( BUCK_EXE )  ; }
5042,"public synchronized  Usb Interface get Interface ( final int interface_id, final int altsetting )  throws  Illegal State Exception{ check Connection (  )  ;   Sparse Array< Usb Interface> intfs = m Interfaces . get ( interface_id )  ;  if  ( intfs == null )  {     intfs = new  Sparse Array< Usb Interface> (  )  ;      m Interfaces . put ( interface_id, intfs )  ;  }  Usb Interface intf = intfs . get ( altsetting )  ;  if  ( intf == null )  {     final  Usb Device device = m Weak Device . get (  )  ;      final int n = device . get Interface Count (  )  ;      for  ( int i = 0 ;  i < n ;  i++ )  {         final  Usb Interface temp = device . get Interface ( i )  ;          if  (  ( temp . get Id (  )  == interface_id )  &&  ( temp . get Alternate Setting (  )  == altsetting )  )  {             intf = temp ;              break ;          }     }     if  ( intf != null )  {         intfs . append ( altsetting, intf )  ;      } } return intf ; }"
5043,"private void start Animation (  ) { post Delayed ( new  Runnable (  )  {     @ Override     public void run (  )  {         _start Animation (  )  ;      } }, 10 )  ; }"
5044,"public static  String [  ]  from Comma Separated List (  String s, boolean unescape Commas ) { if  ( s == null || s . length (  )  == 0 )  {     return null ;  } final  String QUOTED_COMMA_PLACEHOLDER = ""XXX1122334455 XXX"" ;  if  ( unescape Commas )  {     s = s . replace All ( ""\\\\,"", QUOTED_COMMA_PLACEHOLDER )  ;  }  String [  ]  split = s . split ( "","" )  ;  for  ( int i = 0 ;  i < split . length ;  i++ )  {     split [ i ]  = split [ i ]  . replace All ( QUOTED_COMMA_PLACEHOLDER, "","" )  ;      split [ i ]  = split [ i ]  . replace All ( ""\\\\\\\\"", ""\\\\"" )  ;  } return split ; }"
5045,"public static  Build File Spec from Recursive Path (  Cell Relative Path cell Relative Path ) { return  Immutable Build File Spec . of ( cell Relative Path, /* recursive */ true )  ; }"
5046,"public int [  ]  get Box Geometry ( int index ) { int [  ]  dimensions = new int [ 4 ]  ;  if  ( get Box Geometry ( index, dimensions )  )  {     return dimensions ;  } return null ; }"
5047,"public  Optional< Rev Commit> are All Reachable (  Collection< Rev Commit> targets,  Stream< Rev Commit> starters )  throws  Missing Object Exception,  Incorrect Object Type Exception, IO Exception{  List< Rev Commit> remaining Targets = new  Array List<> ( targets )  ;  walk . reset (  )  ;  walk . sort (  Rev Sort . TOPO )  ;  //  Filter emits only commits that are unreachable from previously // visited commits .   Internally it keeps a bitmap of everything // reachable so far, which we use to discard reachable targets .   Bitmap Index repo Bitmaps = walk . get Object Reader (  )  . get Bitmap Index (  )  ;   Reached Filter reached Filter = new  Reached Filter ( repo Bitmaps )  ;  walk . set Rev Filter ( reached Filter )  ;   Iterator< Rev Commit> starters Iter = starters . iterator (  )  ;  while  ( starters Iter . has Next (  )  )  {     walk . mark Start ( starters Iter . next (  )  )  ;      while  ( walk . next (  )  != null )  {         remaining Targets . remove If ( reached Filter::is Reachable )  ;          if  ( remaining Targets . is Empty (  )  )  {             return  Optional . empty (  )  ;          }     }     walk . reset (  )  ;  } return  Optional . of ( remaining Targets . get ( 0 )  )  ; }"
5048,public boolean can Zoom In More X (  ) { return m Scale X < m Max Scale X ; }
5049,"public  Container<T> pref Size (  Value width,  Value height ) { if  ( width == null )      throw new  Illegal Argument Exception ( ""width cannot be null . "" )  ;  if  ( height == null )      throw new  Illegal Argument Exception ( ""height cannot be null . "" )  ;  pref Width = width ;  pref Height = height ;  return this ; }"
5050,"public com . anychart . core . lineargauge . pointers .  Led stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5051,"public com . anychart . core . annotations .  Infinite Line bounds (  Number x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
5052,"public  Realm Results<E> sort (  String field Name ) { throw get Unsupported Exception ( ""sort"" )  ; }"
5053,public  Refresh Layout finish Load More (  ) { return finish Load More ( true )  ; }
5054,"public com . anychart . core . axismarkers .  Gantt Text font Family (  String family ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Family ( %s )  ; "", wrap Quotes ( family )  )  )  ;  return this ; }"
5055,public static  Config< Config Builder< Chat SDK>> builder (  ) { shared (  )  . builder = new  Config Builder<> ( shared (  )  )  ;  return shared (  )  . builder . builder (  )  ; }
5056,"public  Optional< Immutable List< String>> load Names (  Name qualified Name ) { final  Optional< File Object> resource = get Resource ( m Filer,  Standard Location . CLASS_PATH, """", BASE_PATH + qualified Name + FILE_EXT )  ;  return resource . map (  r -> {     final  List< String> props = new  Array List<> (  )  ;      try  (  Buffered Reader reader = new  Buffered Reader ( new  Input Stream Reader ( r . open Input Stream (  )  )  )  )  {          String line ;          while  (  ( line = reader . read Line (  )  )  != null )  {             props . add ( line )  ;          }     } catch  ( final IO Exception err )  {         throw new  Runtime Exception ( err )  ;      }     return  Immutable List . copy Of ( props )  ;  } )  ; }"
5057,"private void init On Bottom Style (  ) { if  ( footer Layout != null )  {     if  ( is On Bottom Style )  {         add Footer View ( footer Layout )  ;      } else {         remove Footer View ( footer Layout )  ;      }     return ;  } if  ( !is On Bottom Style )  {     return ;  } footer Default Text = context . get String ( R . string . drop_down_list_footer_default_text )  ;  footer Loading Text = context . get String ( R . string . drop_down_list_footer_loading_text )  ;  footer No More Text = context . get String ( R . string . drop_down_list_footer_no_more_text )  ;   Layout Inflater inflater =  (  Layout Inflater )  context . get System Service (  Context . LAYOUT_INFLATER_SERVICE )  ;  footer Layout =  (  Relative Layout )  inflater . inflate ( R . layout . drop_down_list_footer, this, false )  ;  footer Button =  (  Button )  footer Layout . find View By Id ( R . id . drop_down_list_footer_button )  ;  footer Button . set Drawing Cache Background Color ( 0 )  ;  footer Button . set Enabled ( true )  ;  footer Progress Bar =  (  Progress Bar )  footer Layout . find View By Id ( R . id . drop_down_list_footer_progress_bar )  ;  add Footer View ( footer Layout )  ; }"
5058,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
5059,"public com . anychart . charts .  Polar bounds (  Number x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
5060,"public com . anychart . charts .  Tree Map a11y (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . a11y ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5061,int locale (  ) { return  (  ( language [ 0 ]  & 0xff )  << 24 )  |  (  ( language [ 1 ]  & 0xff )  << 16 )  |  (  ( country [ 0 ]  & 0xff )  << 8 )  |  ( country [ 1 ]  & 0xff )  ; }
5062,"public void v Align (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . v Align (  )  ; "" )  ; }"
5063,"public  Task<T Result> run Transaction ( @ Non Null  Transaction .  Function<T Result> update Function ) { check Not Null ( update Function, "" Provided transaction update function must not be null . "" )  ;  return run Transaction ( update Function, com . google . firebase . firestore . core .  Transaction . get Default Executor (  )  )  ; }"
5064,"public  Task< Uri> get Download Url (  ) {  Task Completion Source< Uri> pending Result = new  Task Completion Source<> (  )  ;   Storage Task Scheduler . get Instance (  )  . schedule Command ( new  Get Download Url Task ( this, pending Result )  )  ;  return pending Result . get Task (  )  ; }"
5065,"public  Builder<K, V> order Keys By (  Comparator<? super K> key Comparator ) { super . order Keys By ( key Comparator )  ;  return this ; }"
5066,"protected void move ( double x, double y, double z ) { logger . info ( "" Move to  (  "" + x + "", "" + y + "", "" + z + ""  ) "" )  ; }"
5067,public static  Process Helper get Instance (  ) { return INSTANCE ; }
5068,"public com . anychart . charts .  Stock margin (  Number value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, value3, value4 )  )  ;  return this ; }"
5069,"public static  Immutable Set< Executable Element> assisted Injected Constructors (  Type Element type ) { return constructors In ( type . get Enclosed Elements (  )  )  . stream (  )  . filter (  constructor -> is Annotation Present ( constructor,  Assisted Inject . class )  )  . collect ( to Immutable Set (  )  )  ; }"
5070,"public static  Buck Global State create (  Cells root Cell,  Known Rule Types Provider known Rule Types Provider,  Watchman watchman,  Optional< Web Server> web Server To Reuse,  Unconfigured Build Target View Factory unconfigured Build Target Factory,  Target Configuration Serializer target Configuration Serializer,  Clock clock ) {  Event Bus file Event Bus = new  Event Bus ( ""file-change-events"" )  ;   Immutable List< Cell> all Cells = root Cell . get All Cells (  )  ;   Build Buck Config build Buck Config = root Cell . get Root Cell (  )  . get Buck Config (  )  . get View (  Build Buck Config . class )  ;  //  Setup the stacked file hash cache from all cells .   Immutable List .  Builder< Project File Hash Cache> hash Caches Builder =  Immutable List . builder With Expected Size ( all Cells . size (  )  + 1 )  ;  for  (  Cell sub Cell : all Cells )  {      Watched File Hash Cache watched Cache = new  Watched File Hash Cache ( sub Cell . get Filesystem (  ) , build Buck Config . get File Hash Cache Mode (  )  )  ;      file Event Bus . register ( watched Cache )  ;      hash Caches Builder . add ( watched Cache )  ;  } hash Caches Builder . add (  Default File Hash Cache . create Buck Out File Hash Cache ( root Cell . get Root Cell (  )  . get Filesystem (  ) , build Buck Config . get File Hash Cache Mode (  )  )  )  ;   Immutable List< Project File Hash Cache> hash Caches = hash Caches Builder . build (  )  ;  //  Setup file list cache and file tree cache from all cells  Loading Cache< Path,  Directory List Cache> directory List Cache Per Root = create Directory List Cache Per Cell Map ( file Event Bus )  ;   Loading Cache< Path,  File Tree Cache> file Tree Cache Per Root = create File Tree Cache Per Cell Map ( file Event Bus )  ;   Loading Cache< Path,  Build File Manifest Cache> build File Manifest Cache Per Root = create Build File Manifest Cache Per Cell Map ( file Event Bus, root Cell . get Cell Provider (  ) , root Cell . get Super Root Path (  )  )  ;   Action Graph Cache action Graph Cache = new  Action Graph Cache ( build Buck Config . get Max Action Graph Cache Entries (  )  )  ;   Versioned Target Graph Cache versioned Target Graph Cache = new  Versioned Target Graph Cache (  )  ;   Type Coercer Factory type Coercer Factory = new  Default Type Coercer Factory (  )  ;   Parser Config parser Config = root Cell . get Root Cell (  )  . get Buck Config (  )  . get View (  Parser Config . class )  ;   Daemonic Parser State daemonic Parser State = new  Daemonic Parser State ( parser Config . get Num Parsing Threads (  )  )  ;  file Event Bus . register ( daemonic Parser State )  ;  //  Build the the rule key cache recycler .   Rule Key Cache Recycler< Rule Key> default Rule Key Factory Cache Recycler =  Rule Key Cache Recycler . create And Register ( file Event Bus, new  Default Rule Key Cache<> (  ) ,  Rich Stream . from ( all Cells )  . map (  Cell::get Filesystem )  . to Immutable Set (  )  )  ;   Optional< Web Server> web Server ;  if  ( web Server To Reuse . is Present (  )  )  {     web Server = web Server To Reuse ;  } else {     web Server = create Web Server ( root Cell . get Root Cell (  )  . get Buck Config (  ) , root Cell . get Root Cell (  )  . get Filesystem (  ) , clock )  ;  } if  ( web Server . is Present (  )  )  {      Optional< Artifact Cache> served Cache =  Artifact Caches . new Served Cache ( new  Artifact Cache Buck Config ( root Cell . get Root Cell (  )  . get Buck Config (  )  ) ,  target -> unconfigured Build Target Factory . create ( target, root Cell . get Root Cell (  )  . get Cell Name Resolver (  )  ) , target Configuration Serializer, root Cell . get Root Cell (  )  . get Filesystem (  )  )  ;      if  ( !init Web Server ( web Server, served Cache )  )  {         LOG . warn ( "" Can't start web server"" )  ;      } }  Immutable Map< Abs Path,  Watchman Cursor> cursor ;  if  ( root Cell . get Root Cell (  )  . get Buck Config (  )  . get View (  Parser Config . class )  . get Watchman Cursor (  )  ==  Watchman Watcher .  Cursor Type . CLOCK_ID && !watchman . get Clock Ids (  )  . is Empty (  )  )  {     cursor = watchman . build Clock Watchman Cursor Map (  )  ;  } else {     LOG . debug ( "" Falling back to named cursors: %s"", watchman . get Project Watches (  )  )  ;      cursor = watchman . build Named Watchman Cursor Map (  )  ;  } LOG . debug ( "" Using  Watchman  Cursor: %s"", cursor )  ;   Concurrent Map< String,  Worker Process Pool> persistent Worker Pools = new  Concurrent Hash Map<> (  )  ;  return new  Buck Global State ( root Cell . get Root Cell (  ) , type Coercer Factory, daemonic Parser State, hash Caches, directory List Cache Per Root, file Tree Cache Per Root, build File Manifest Cache Per Root, file Event Bus, web Server, persistent Worker Pools, versioned Target Graph Cache, action Graph Cache, default Rule Key Factory Cache Recycler, cursor, known Rule Types Provider, clock, watchman !=  Watchman Factory . NULL_WATCHMAN )  ; }"
5071,"private static  Stack Trace Element [  ]  trim Repeats (  Stack Trace Element [  ]  stacktrace, int max Repetitions ) { final  Map< Stack Trace Element,  Integer> most Recent Indices = new  Hash Map<> (  )  ;  //  Worse case scenario, no trimming happens and we end up with a copy of the original .  final  Stack Trace Element [  ]  buffer = new  Stack Trace Element [ stacktrace . length ]  ;  int trimmed Length = 0 ;  int num Repeats = 1 ;  for  ( int i = 0 ;  i < stacktrace . length ;  ++i )  {     final int current Index = i ;      final  Stack Trace Element current Frame = stacktrace [ i ]  ;      final  Integer previous Index = most Recent Indices . get ( current Frame )  ;      if  ( previous Index == null || !is Repeating Sequence ( stacktrace, previous Index, i )  )  {         //  No repeat detected .   Keep moving .          num Repeats = 1 ;          buffer [ trimmed Length ]  = stacktrace [ i ]  ;          trimmed Length++ ;      } else {         //  Repeat detected .   Skip it unless we allow more than one repetition .          final int window Size = i - previous Index ;          if  ( num Repeats < max Repetitions )  {              System . arraycopy ( stacktrace, i, buffer, trimmed Length, window Size )  ;              trimmed Length += window Size ;              num Repeats++ ;          }         i += window Size - 1 ;      }     most Recent Indices . put ( current Frame, current Index )  ;  } //  One last array copy for the final trimmed sizing .  final  Stack Trace Element [  ]  trimmed = new  Stack Trace Element [ trimmed Length ]  ;   System . arraycopy ( buffer, 0, trimmed, 0, trimmed . length )  ;  return trimmed ; }"
5072,protected void on Progress Update (  Progress .  .  .  values ) {}
5073,public void set Maximized ( boolean maximized ) { this . window Maximized = maximized ; }
5074,"public  List< Diff Entry> call (  )  throws  Git API Exception{ try  (  Diff Formatter diff Fmt = get Diff Formatter (  )  )  {     diff Fmt . set Repository ( repo )  ;      diff Fmt . set Progress Monitor ( monitor )  ;      if  ( cached )  {         if  ( old Tree == null )  {             //$NON-NLS-1$              Object Id head = repo . resolve ( HEAD + ""^{tree}"" )  ;              if  ( head == null )                  throw new  No Head Exception ( J Git Text . get (  )  . cannot Read Tree )  ;               Canonical Tree Parser p = new  Canonical Tree Parser (  )  ;              try  (  Object Reader reader = repo . new Object Reader (  )  )  {                 p . reset ( reader, head )  ;              }             old Tree = p ;          }         new Tree = new  Dir Cache Iterator ( repo . read Dir Cache (  )  )  ;      } else {         if  ( old Tree == null )  {             old Tree = new  Dir Cache Iterator ( repo . read Dir Cache (  )  )  ;          }         if  ( new Tree == null )  {             new Tree = new  File Tree Iterator ( repo )  ;          }     }     diff Fmt . set Path Filter ( path Filter )  ;       List< Diff Entry> result = diff Fmt . scan ( old Tree, new Tree )  ;      if  ( show Name And Status Only )  {         return result ;      }     if  ( context Lines >= 0 )  {         diff Fmt . set Context ( context Lines )  ;      }     if  ( destination Prefix != null )  {         diff Fmt . set New Prefix ( destination Prefix )  ;      }     if  ( source Prefix != null )  {         diff Fmt . set Old Prefix ( source Prefix )  ;      }     diff Fmt . format ( result )  ;      diff Fmt . flush (  )  ;      return result ;  } catch  ( IO Exception e )  {     throw new J Git Internal Exception ( e . get Message (  ) , e )  ;  }}"
5075,public void set Player ( @ Nullable  Player player ) {  Assertions . check State (  Looper . my Looper (  )  ==  Looper . get Main Looper (  )  )  ;   Assertions . check Argument ( player == null || player . get Application Looper (  )  ==  Looper . get Main Looper (  )  )  ;  if  ( this . player == player )  {     return ;  } if  ( this . player != null )  {     this . player . remove Listener ( component Listener )  ;  } this . player = player ;  if  ( player != null )  {     player . add Listener ( component Listener )  ;  } update All (  )  ; }
5076,"void resync ( long now Micros ) { // if next Free Ticket is in the past, resync to now if  ( now Micros > next Free Ticket Micros )  {     double new Permits =  ( now Micros - next Free Ticket Micros )  / cool Down Interval Micros (  )  ;      stored Permits = min ( max Permits, stored Permits + new Permits )  ;      next Free Ticket Micros = now Micros ;  }}"
5077,"public void add Usage Stats ( int interval Type,  Usage Stats stats ) { usage Stats By Interval Type . put ( interval Type, stats )  ; }"
5078,public  String get Distinct Id (  ) { return m Persistent Identity . get Events Distinct Id (  )  ; }
5079,public  Ummalqura Calendar get Max Date (  ) { return m Max Date ; }
5080,private  Data Source .  Factory build Data Source Factory (  ) { return  (  (  Demo Application )  get Application (  )  )  . build Data Source Factory (  )  ; }
5081,public  Builder set Ref Prefixes (  List< String> value ) { ref Prefixes = value ;  return this ; }
5082,private int get Current Item Showing (  ) { return m Radial Time Picker View . get Current Item Showing (  )  ; }
5083,protected void build (  Byte Buffer raw ) { // Read the raw data into byte array this . data Bytes = new byte [ data Size ]  ;  for  ( int i = 0 ;  i < data Bytes . length ;  i++ )  {     this . data Bytes [ i ]  = raw . get (  )  ;  }}
5084,public boolean is Channel Deleted (  String channel Id ) { return deleted Notification Channels . contains Key ( channel Id )  ; }
5085,"public boolean seek (  Byte Buffer byte Buffer ) { byte Buffer . rewind (  )  ;  logger . config ( "" Byte Buffer pos:"" + byte Buffer . position (  )  + "":limit"" + byte Buffer . limit (  )  + "":cap"" + byte Buffer . capacity (  )  )  ;  byte [  ]  tag Identifier = new byte [ FIELD_TAGID_LENGTH ]  ;  byte Buffer . get ( tag Identifier, 0, FIELD_TAGID_LENGTH )  ;  if  ( ! (  Arrays . equals ( tag Identifier, TAG_ID )  )  )  {     return false ;  } // Major  Version if  ( byte Buffer . get (  )  != get Major Version (  )  )  {     return false ;  } // Minor  Version return byte Buffer . get (  )  == get Revision (  )  ; }"
5086,public java . lang .  String get Schedule Type (  ) { java . lang .  Object ref = schedule Type_ ;  if  ( ref instanceof java . lang .  String )  {     return  ( java . lang .  String )  ref ;  } else {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      schedule Type_ = s ;      return s ;  }}
5087,"public com . anychart . core .  State Settings hatch Fill (  String type,  String color,  Number thickness,  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s, %s, %s, %s )  ; "", wrap Quotes ( type ) , wrap Quotes ( color ) , thickness, size )  )  ;  return this ; }"
5088,"public com . anychart . charts .  Stock padding (  Number value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
5089,"public static  Stream<R> map With Index (  Long Stream stream,  Long Function With Index<R> function ) { check Not Null ( stream )  ;  check Not Null ( function )  ;  boolean is Parallel = stream . is Parallel (  )  ;   Spliterator .  Of Long from Spliterator = stream . spliterator (  )  ;  if  ( !from Spliterator . has Characteristics (  Spliterator . SUBSIZED )  )  {      Primitive Iterator .  Of Long from Iterator =  Spliterators . iterator ( from Spliterator )  ;      return  Stream Support . stream ( new  Abstract Spliterator<R> ( from Spliterator . estimate Size (  ) , from Spliterator . characteristics (  )  &  (  Spliterator . ORDERED |  Spliterator . SIZED )  )  {         long index = 0 ;          @ Override         public boolean try Advance (  Consumer<? super R> action )  {             if  ( from Iterator . has Next (  )  )  {                 action . accept ( function . apply ( from Iterator . next Long (  ) , index++ )  )  ;                  return true ;              }             return false ;          }     }, is Parallel )  . on Close ( stream::close )  ;  } class  Splitr extends  Map With Index Spliterator< Spliterator .  Of Long, R,  Splitr> implements  Long Consumer,  Spliterator<R> {     long holder ;       Splitr (  Spliterator .  Of Long splitr, long index )  {         super ( splitr, index )  ;      }     @ Override     public void accept ( long t )  {         this . holder = t ;      }     @ Override     public boolean try Advance (  Consumer<? super R> action )  {         if  ( from Spliterator . try Advance ( this )  )  {             action . accept ( function . apply ( holder, index++ )  )  ;              return true ;          }         return false ;      }     @ Override      Splitr create Split (  Spliterator .  Of Long from, long i )  {         return new  Splitr ( from, i )  ;      } } return  Stream Support . stream ( new  Splitr ( from Spliterator, 0 ) , is Parallel )  . on Close ( stream::close )  ; }"
5090,"public void test Should Export Delivery Metrics To Big Query_none Manifest True Setter (  ) { assert Manifest Field With Value ( MANIFEST_DELIVERY_METRICS_EXPORT_TO_BIG_QUERY_ENABLED, null )  ;  assert Preferences Field With Value ( DELIVERY_METRICS_EXPORT_TO_BIG_QUERY_PREF, null )  ;  //  Ack  Messaging Analytics . set Delivery Metrics Export To Big Query ( true )  ;  //  Verify assert Manifest Field With Value ( MANIFEST_DELIVERY_METRICS_EXPORT_TO_BIG_QUERY_ENABLED, null )  ;  assert Preferences Field With Value ( DELIVERY_METRICS_EXPORT_TO_BIG_QUERY_PREF, true )  ;  assert That (  Messaging Analytics . delivery Metrics Export To Big Query Enabled (  )  )  . is True (  )  ; }"
5091,public static  Inflater get (  ) { final  Inflater r = get Impl (  )  ;  return r != null ? r : new  Inflater ( false )  ; }
5092,"public void add (  Runnable runnable,  Executor executor ) { //  Fail fast on a null .   We throw NPE here because the contract of  Executor states that it throws // NPE on null listener, so we propagate that contract up into the add method as well .  check Not Null ( runnable, "" Runnable was null . "" )  ;  check Not Null ( executor, "" Executor was null . "" )  ;  // yet started execution .  synchronized  ( this )  {     if  ( !executed )  {         runnables = new  Runnable Executor Pair ( runnable, executor, runnables )  ;          return ;      } } //  Execute the runnable immediately .   Because of scheduling this may end up getting called before // some of the previously added runnables, but we're OK with that .   If we want to change the // contract to guarantee ordering among runnables we'd have to modify the logic here to allow // it .  execute Listener ( runnable, executor )  ; }"
5093,public  Thread Factory build (  ) { return do Build ( this )  ; }
5094,"public  Model Factory Base Model View Model_ on Visibility State Changed (  On Model Visibility State Changed Listener< Model Factory Base Model View Model_,  Model Factory Base Model View> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
5095,"protected boolean has Host Key (  String host, int port,  String key Part,  List< String> lines ) {  String h = ' [ ' + host + "" ] :"" + port ;  return lines . stream (  )  . any Match (  l -> l . contains ( h )  && l . contains ( key Part )  )  ; }"
5096,public void set Need Stat Information ( boolean on ) { set Need Snapshot ( on )  ; }
5097,"public void mount (  Recycler View view ) {  Thread Utils . assert Main Thread (  )  ;  if  ( m Is Sub Adapter )  {     throw new  Runtime Exception ( "" Can't mount a  Recycler View in sub adapter mode"" )  ;  } if  ( m Mounted View == view )  {     return ;  } if  ( m Mounted View != null )  {     unmount ( m Mounted View )  ;  } // we attach to this  Recycler View .  if  ( m Has Async Operations )  {     apply Ready Batches (  )  ;  } // offset added to it .  if  ( m Is Circular )  {     if  ( !m Is Init Mounted || m Current First Visible Position < 0 )  {         final int jump To Middle =  Integer . MAX_VALUE / 2 ;          final int offset First Item = m Component Tree Holders . is Empty (  )  ? 0 : jump To Middle % m Component Tree Holders . size (  )  ;          m Current First Visible Position =  Math . max ( 0, m Current First Visible Position )  + jump To Middle - offset First Item ;      } } m Mounted View = view ;  m Is Init Mounted = true ;  final  Layout Manager layout Manager = m Layout Info . get Layout Manager (  )  ;  //  Item Prefetching feature of  Recycler View clashes with  Recycler Binder's compute range // optimization and in certain scenarios  ( like sticky header )  it might reset  Component Tree of //  Litho View while it is still on screen making it render blank or zero height .  layout Manager . set Item Prefetch Enabled ( m Recycler View Item Prefetch )  ;  //  This will force padding to be resolved on the main thread before the  Layout Manager finds out // about this view .   This will keep padding from trying to be resolved later on from a bg thread .  //  See T41844038 .   Longer term, it isn't safe to ever get the padding from a bg thread and it // will need to be passed manually to the  Recycler Binder view . get Padding Left (  )  ;  view . set Layout Manager ( layout Manager )  ;  view . set Adapter ( m Internal Adapter )  ;  view . add On Scroll Listener ( m Viewport Manager . get Scroll Listener (  )  )  ;  if  ( layout Manager instanceof  Needs Bg Padding Info )  {      (  (  Needs Bg Padding Info )  layout Manager )  . set Bg Padding Info ( new  Rect ( view . get Padding Left (  ) , view . get Padding Top (  ) , view . get Padding Right (  ) , view . get Padding Bottom (  )  )  )  ;  } register Draw Listener ( view )  ;  m Layout Info . set Render Info Collection ( this )  ;  m Viewport Manager . add Viewport Changed Listener ( m Viewport Changed Listener )  ;  if  ( m Current First Visible Position !=  Recycler View . NO_POSITION && m Current First Visible Position >= 0 && !m Is Circular )  {     if  ( m Smooth Scroll Alignment Type != null )  {         scroll Smooth To Position ( m Current First Visible Position, m Current Offset, m Smooth Scroll Alignment Type )  ;      } else {         m Layout Info . scroll To Position With Offset ( m Current First Visible Position, m Current Offset )  ;      } } else if  ( m Is Circular )  {     //  Initialize circular  Recycler View position     view . scroll To Position ( m Current First Visible Position )  ;      //  Circular  Recycler Views report their size as  Integer . MAX_VALUE, which makes  Talkback     // actually announce "" In  List, 2147483674 items"" .   This overrides the row/column count on the     //  Accessibility Node Info to accurately reflect the real number of items in the list .      view . set Accessibility Delegate Compat ( new  Recycler View Accessibility Delegate ( view )  {         @ Override         public void on Initialize Accessibility Node Info (  View host,  Accessibility Node Info Compat info )  {             super . on Initialize Accessibility Node Info ( host, info )  ;              int item Count = get Component Tree Holders (  )  . size (  )  ;              int row Count = layout Manager . can Scroll Vertically (  )  ? item Count : 1 ;              int col Count = layout Manager . can Scroll Horizontally (  )  ? item Count : 1 ;              final  Accessibility Node Info Compat .  Collection Info Compat collection Info =  Accessibility Node Info Compat .  Collection Info Compat . obtain ( row Count, col Count, false,  Accessibility Node Info Compat .  Collection Info Compat . SELECTION_MODE_NONE )  ;              info . set Collection Info ( collection Info )  ;          }     } )  ;  } enable Sticky Header ( m Mounted View )  ; }"
5098,"public  Media Event schedule Buffer Underrun At Offset ( int offset, final int length ) { final  Media Event restart = new  Media Event (  )  {     @ Override     public void run (  Media Player mp,  Shadow Media Player smp )  {         smp . invoke Info Listener (  Media Player . MEDIA_INFO_BUFFERING_END, 0 )  ;          smp . do Start (  )  ;      } } ;   Media Event callback = new  Media Event (  )  {     @ Override     public void run (  Media Player mp,  Shadow Media Player smp )  {         smp . do Stop (  )  ;          smp . invoke Info Listener (  Media Player . MEDIA_INFO_BUFFERING_START, 0 )  ;          smp . post Event Delayed ( restart, length )  ;      } } ;  schedule Event At Offset ( offset, callback )  ;  return callback ; }"
5099,"public com . anychart . core . axes .  Circular width (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
5100,public  String table (  ) { return table ; }
5101,public  Ordered contains Exactly (  ) { return  Multimap Subject . this . contains Exactly (  )  ; }
5102,"public com . anychart . charts .  Scatter y Minor Grid (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Minor Grid ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
5103,"public static  Optional< Macho Dyld Info Command> read (  Mapped Byte Buffer macho File Buffer ) { macho File Buffer . rewind (  )  ;  try {      Macho Header header =  Machos . get Header ( macho File Buffer )  ;      int commands Count = header . get Commands Count (  )  ;      for  ( int i = 0 ;  i < commands Count ;  i++ )  {         int command =  Object File Scrubbers . get Little Endian Int ( macho File Buffer )  ;          int command Size =  Object File Scrubbers . get Little Endian Int ( macho File Buffer )  ;          if  (  Machos . LC_DYLD_INFO == command ||  Machos . LC_DYLD_INFO_ONLY == command )  {             // https://opensource . apple . com/source/xnu/xnu-1699 . 32 . 7/EXTERNAL_HEADERS/mach-o/loader . h             //             // struct dyld_info_command {             //     uint32_t   cmd ;           // LC_DYLD_INFO or LC_DYLD_INFO_ONLY             //     uint32_t   cmdsize ;       // sizeof ( struct dyld_info_command )              //             //     uint32_t   rebase_off ;   // file offset to rebase info             //     uint32_t   rebase_size ;  // size of rebase info             //             //     uint32_t   bind_off ;     // file offset to binding info             //     uint32_t   bind_size ;    // size of binding info             //             //     uint32_t   weak_bind_off ;    // file offset to weak binding info             //     uint32_t   weak_bind_size ;   // size of weak binding info             //             //     uint32_t   lazy_bind_off ;    // file offset to lazy binding info             //     uint32_t   lazy_bind_size ;   // size of lazy binding infs             //             //     uint32_t   export_off ;   // file offset to lazy binding info             //     uint32_t   export_size ;  // size of lazy binding infs             // } ;              int rebase_off =  Object File Scrubbers . get Little Endian Int ( macho File Buffer )  ;              int rebase_size =  Object File Scrubbers . get Little Endian Int ( macho File Buffer )  ;              int bind_off =  Object File Scrubbers . get Little Endian Int ( macho File Buffer )  ;              int bind_size =  Object File Scrubbers . get Little Endian Int ( macho File Buffer )  ;              int weak_bind_off =  Object File Scrubbers . get Little Endian Int ( macho File Buffer )  ;              int weak_bind_size =  Object File Scrubbers . get Little Endian Int ( macho File Buffer )  ;              int lazy_bind_off =  Object File Scrubbers . get Little Endian Int ( macho File Buffer )  ;              int lazy_bind_size =  Object File Scrubbers . get Little Endian Int ( macho File Buffer )  ;              int export_off =  Object File Scrubbers . get Little Endian Int ( macho File Buffer )  ;              int export_size =  Object File Scrubbers . get Little Endian Int ( macho File Buffer )  ;              return  Optional . of (  Immutable Macho Dyld Info Command . of ( command, command Size, rebase_off, rebase_size, bind_off, bind_size, weak_bind_off, weak_bind_size, lazy_bind_off, lazy_bind_size, export_off, export_size )  )  ;          }         //  Skip over command body          Object File Scrubbers . get Bytes ( macho File Buffer, command Size - 8 )  ;      } } catch  (  Machos .  Macho Exception e )  { //  Handle failure by returning  Optional } return  Optional . empty (  )  ; }"
5104,"public static  Uri get Temp Uri (  Context context,  String path ) {  File file = new  File ( path )  ;  return get Temp Uri ( context, file )  ; }"
5105,"public com . anychart . charts .  Venn parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
5106,public  Decoder Counters get Video Decoder Counters (  ) { return video Decoder Counters ; }
5107,"public JSON Object truncate ( JSON Object object ) { if  ( object == null )  {     return new JSON Object (  )  ;  } if  ( object . length (  )  >  Constants . MAX_PROPERTY_KEYS )  {     logger . w ( TAG, "" Warning: too many properties  ( more than 1000 ) , ignoring"" )  ;      return new JSON Object (  )  ;  }  Iterator<?> keys = object . keys (  )  ;  while  ( keys . has Next (  )  )  {      String key =  (  String )  keys . next (  )  ;      try {          Object value = object . get ( key )  ;          // do not truncate revenue receipt and receipt sig fields         if  ( key . equals (  Constants . AMP_REVENUE_RECEIPT )  || key . equals (  Constants . AMP_REVENUE_RECEIPT_SIG )  )  {             object . put ( key, value )  ;          } else if  ( value . get Class (  )  . equals (  String . class )  )  {             object . put ( key, truncate (  (  String )  value )  )  ;          } else if  ( value . get Class (  )  . equals ( JSON Object . class )  )  {             object . put ( key, truncate (  ( JSON Object )  value )  )  ;          } else if  ( value . get Class (  )  . equals ( JSON Array . class )  )  {             object . put ( key, truncate (  ( JSON Array )  value )  )  ;          }     } catch  ( JSON Exception e )  {         logger . e ( TAG, e . to String (  )  )  ;      } } return object ; }"
5108,public int get Bit (  ) { return 1 << get Position (  )  ; }
5109,On Page Change Listener set Internal Page Change Listener (  On Page Change Listener listener ) {  On Page Change Listener old Listener = m Internal Page Change Listener ;  m Internal Page Change Listener = listener ;  return old Listener ; }
5110,"public void set Length ( float length ) { jni Set Length ( addr, length )  ; }"
5111,"public static void sort ( int [  ]  array, int from Index, int to Index ) { check Not Null ( array )  ;  check Position Indexes ( from Index, to Index, array . length )  ;  for  ( int i = from Index ;  i < to Index ;  i++ )  {     array [ i ]  = flip ( array [ i ]  )  ;  }  Arrays . sort ( array, from Index, to Index )  ;  for  ( int i = from Index ;  i < to Index ;  i++ )  {     array [ i ]  = flip ( array [ i ]  )  ;  }}"
5112,"public com . anychart . charts .  Radar bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
5113,"public com . anychart . core . ui .  Label label (  Number index ) { return new com . anychart . core . ui .  Label (  String . format (  Locale . US, js Base + "" . label ( %s ) "", index )  )  ; }"
5114,"public void min Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Height (  )  ; "" )  ; }"
5115,"Authentication Result acquire Token With Refresh Token ( final  String refresh Token )  throws  Authentication Exception{ final  String method Name = "":acquire Token With Refresh Token"" ;   Logger . v ( TAG + method Name, "" Try to get new access token with the found refresh token . "", m Auth Request . get Log Info (  ) , null )  ;  //  Check if network is available, if not throw exception .    Http Util . throw If Network Not Available ( m Context )  ;  final  Authentication Result result ;  try {     final JWS Builder jws Builder = new JWS Builder (  )  ;      final  Oauth2 oauth Request = new  Oauth2 ( m Auth Request, m Web Request Handler, jws Builder )  ;      result = oauth Request . refresh Token ( refresh Token )  ;      if  ( result != null &&  String Extensions . is Null Or Blank ( result . get Refresh Token (  )  )  )  {          Logger . w ( TAG + method Name, "" Refresh token is not returned or empty"" )  ;          result . set Refresh Token ( refresh Token )  ;      } } catch  ( final  Server Responding With Retryable Exception exc )  {      Logger . i ( TAG + method Name, "" The server is not responding after the retry with error code: "" + exc . get Code (  ) , """" )  ;      final  Token Cache Item access Token Item = m Token Cache Accessor . get Stale Token ( m Auth Request )  ;      if  ( access Token Item != null )  {         final  Authentication Result retry Result =  Authentication Result . create Extended Life Time Result ( access Token Item )  ;           Logger . i ( TAG + method Name, "" The result with stale access token is returned . "", """" )  ;          return retry Result ;      }      Logger . e ( TAG + method Name, "" Error in refresh token for request .  "", "" Request: "" + m Auth Request . get Log Info (  )  + "" "" +  Exception Extensions . get Exception Message ( exc )  + "" "" +  Log . get Stack Trace String ( exc ) , ADAL Error . AUTH_FAILED_NO_TOKEN, null )  ;      throw new  Authentication Exception ( ADAL Error . AUTH_FAILED_NO_TOKEN,  Exception Extensions . get Exception Message ( exc ) , new  Authentication Exception ( ADAL Error . SERVER_ERROR, exc . get Message (  ) , exc )  )  ;  } catch  ( final IO Exception |  Authentication Exception exc )  {      Logger . e ( TAG + method Name, "" Error in refresh token for request . "", "" Request: "" + m Auth Request . get Log Info (  )  + "" "" +  Exception Extensions . get Exception Message ( exc )  + "" "" +  Log . get Stack Trace String ( exc ) , ADAL Error . AUTH_FAILED_NO_TOKEN, null )  ;      throw new  Authentication Exception ( ADAL Error . AUTH_FAILED_NO_TOKEN,  Exception Extensions . get Exception Message ( exc ) , new  Authentication Exception ( ADAL Error . SERVER_ERROR, exc . get Message (  ) , exc )  )  ;  } return result ; }"
5116,"public void append ( long key, E value ) { if  ( m Size != 0 && key <= m Keys [ m Size - 1 ]  )  {     put ( key, value )  ;      return ;  } if  ( m Garbage && m Size >= m Keys . length )  {     gc (  )  ;  } int pos = m Size ;  if  ( pos >= m Keys . length )  {     int n =  Array Utils . ideal Int Array Size ( pos + 1 )  ;      long [  ]  nkeys = new long [ n ]  ;       Object [  ]  nvalues = new  Object [ n ]  ;      //  Log . e ( "" Sparse Array"", ""grow "" + m Keys . length + "" to "" + n )  ;       System . arraycopy ( m Keys, 0, nkeys, 0, m Keys . length )  ;       System . arraycopy ( m Values, 0, nvalues, 0, m Values . length )  ;      m Keys = nkeys ;      m Values = nvalues ;  } m Keys [ pos ]  = key ;  m Values [ pos ]  = value ;  m Size = pos + 1 ; }"
5117,"public void test Two Complicated Modifications (  )  throws IO Exception{ assert Equals ( t ( ""a<ZZZ Zf Zh Zj=b Yd YYY Yi Y>"" ) , merge ( ""abcdefghij"", ""a ZZZ Zf Zh Zj"", ""ab Yd YYY Yi Y"" )  )  ; }"
5118,public  Unprovisioned Mesh Node get Mesh Node (  ) { return m Unprovisioned Mesh Node ; }
5119,public  List< String> get Missing Dependencies (  ) { if  ( missing Dependencies == null )  {     missing Dependencies = new  Array List<> (  )  ;      if  ( kind ==  Completed Type Kind . ERROR_TYPE )  {         //  Realistically the only way we get to be an error type is if our class itself is         // missing .          missing Dependencies . add ( file Manager . get Owning Target ( element )  )  ;      }     // us back we must move it forward too .      if  ( enclosing Type != null && enclosing Type . kind == kind )  {         missing Dependencies . add All ( enclosing Type . get Missing Dependencies (  )  )  ;      }     super And Interfaces Stream (  )  . filter (  supertype -> {         if  ( kind ==  Completed Type Kind . PARTIALLY_COMPLETED_TYPE )  {             return true ;          } else if  ( kind ==  Completed Type Kind . COMPLETED_TYPE )  {             return false ;          } else if  ( !superclasses May Be Missing (  )  && supertype . kind ==  Completed Type Kind . ERROR_TYPE )  {             return true ;          }         return supertype . kind ==  Completed Type Kind . CRASH ;      } )  . map (  Completed Type::get Missing Dependencies )  . for Each ( missing Dependencies::add All )  ;  } return missing Dependencies ; }
5120,public T end Range ( float end ) { m End = end ;  return self (  )  ; }
5121,"public boolean should Acquire (  String name ) { if  ( CLASSES_TO_ALWAYS_ACQUIRE . contains ( name )  )  {     return true ;  } if  ( name . equals ( ""java . util . jar .  Strict Jar File"" )  )  {     return true ;  } // android . R and com . android . internal . R classes must be loaded from the framework jar if  ( name . matches ( "" ( android|com\\ . android\\ . internal ) \\ . R ( \\$ . + ) ?"" )  )  {     return true ;  } //  Hack .   Fixes https://github . com/robolectric/robolectric/issues/1864 if  ( name . equals ( ""javax . net . ssl .  Distinguished Name Parser"" )  || name . equals ( ""javax . microedition . khronos . opengles . GL"" )  )  {     return true ;  } for  (  String package Name : packages To Not Acquire )  {     if  ( name . starts With ( package Name )  )          return false ;  } // R classes must be loaded from system CP boolean is R Class = name . matches ( "" . *\\ . R ( |\\$ [ a-z ] + ) $"" )  ;  return !is R Class && !classes To Not Acquire . contains ( name )  ; }"
5122,"public com . anychart . core . ui .  Label label (  Number index ) { return new com . anychart . core . ui .  Label (  String . format (  Locale . US, js Base + "" . label ( %s ) "", index )  )  ; }"
5123,protected void set Use Field Names ( boolean use Field Names ) { this . use Field Names = use Field Names ; }
5124,"private void add To Rssi Log ( final long timestamp, final int rssi Reading ) { synchronized  ( m Rssi Log )  {     if  ( timestamp - m Current Timestamp > LOG_INVALIDATION_THRESHOLD )  {         m Rssi Log . clear (  )  ;      }     m Current Rssi = rssi Reading ;      m Current Timestamp = timestamp ;      m Rssi Log . put ( timestamp, rssi Reading )  ;  }}"
5125,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
5126,"public com . anychart . charts .  Sankey bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
5127,"public static void dump ( byte [  ]  bytes,  Print Stream out,  String file Path, boolean rop,  Args args ) {  Block Dumper bd = new  Block Dumper ( bytes, out, file Path, rop, args )  ;  bd . dump (  )  ; }"
5128,"public com . anychart . charts .  Cartesian3d y Axis (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Axis ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
5129,"public final  Simple Subject Builder<S, A> about (  Subject .  Factory<S, A> factory ) { return new  Simple Subject Builder<> ( metadata (  ) , factory )  ; }"
5130,"public void set Inner Name Index ( int nth, int index ) {  Byte Array . write16bit ( index, get (  ) , nth * 8 + 6 )  ; }"
5131,"public void connector Stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . connector Stroke (  )  ; "" )  ; }"
5132,"public void disable Pointer Events (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . disable Pointer Events (  )  ; "" )  ; }"
5133,"public com . anychart . core .  State Settings normal (  ) { return new com . anychart . core .  State Settings ( js Base + "" . normal (  ) "" )  ; }"
5134,"public void render ( final  Renderable Provider renderable Provider, final  Environment environment ) { final int offset = renderables . size ;  renderable Provider . get Renderables ( renderables, renderables Pool )  ;  for  ( int i = offset ;  i < renderables . size ;  i++ )  {      Renderable renderable = renderables . get ( i )  ;      renderable . environment = environment ;      renderable . shader = shader Provider . get Shader ( renderable )  ;  }}"
5135,"public void get User With Entity ID (  String entity ID ) {  User user =  Chat SDK . core (  )  . get User Now For Entity ID ( entity ID )  ;   Disposable d =  Chat SDK . core (  )  . user On ( user )  . subscribe (  (  )  -> { //  User object has now been populated and type ready to use },  throwable -> { } )  ; }"
5136,"public  String to String (  ) { if  ( wildcard == '*' )      return ""?"" ;   String type = arg . to String (  )  ;  if  ( wildcard == ' ' )      return type ;  else if  ( wildcard == '+' )      return ""? extends "" + type ;  else     return ""? super "" + type ; }"
5137,"Char Sequence build History (  ) {  String Builder history Text = new  String Builder ( 1000 )  ;  SQ Lite Open Helper helper = new DB Helper ( activity )  ;  try  ( SQ Lite Database db = helper . get Readable Database (  )  ;       Cursor cursor = db . query ( DB Helper . TABLE_NAME, COLUMNS, null, null, null, null, DB Helper . TIMESTAMP_COL + "" DESC"" )  )  {      Date Format format =  Date Format . get Date Time Instance (  Date Format . MEDIUM,  Date Format . MEDIUM )  ;      while  ( cursor . move To Next (  )  )  {         history Text . append ( '""' )  . append ( massage History Field ( cursor . get String ( 0 )  )  )  . append ( ""\"","" )  ;          history Text . append ( '""' )  . append ( massage History Field ( cursor . get String ( 1 )  )  )  . append ( ""\"","" )  ;          history Text . append ( '""' )  . append ( massage History Field ( cursor . get String ( 2 )  )  )  . append ( ""\"","" )  ;          history Text . append ( '""' )  . append ( massage History Field ( cursor . get String ( 3 )  )  )  . append ( ""\"","" )  ;          //  Add timestamp again, formatted         long timestamp = cursor . get Long ( 3 )  ;          history Text . append ( '""' )  . append ( massage History Field ( format . format ( timestamp )  )  )  . append ( ""\"","" )  ;          //  Above we're preserving the old ordering of columns which had formatted data in position 5         history Text . append ( '""' )  . append ( massage History Field ( cursor . get String ( 4 )  )  )  . append ( ""\""\r\n"" )  ;      } } catch  ( SQL Exception sqle )  {      Log . w ( TAG, sqle )  ;  } return history Text ; }"
5138,private void reset (  ) { buffer = null ;  pos = 0 ;  read Pos = 0 ;  current Line Pos = 0 ;  modulus = 0 ;  eof = false ; }
5139,private static  Double reference Try Parse (  String input ) { if  ( input . trim (  )  . length (  )  < input . length (  )  )  {     return null ;  } try {     return  Double . value Of ( input )  ;  } catch  (  Number Format Exception e )  {     return null ;  }}
5140,"public static void verify ( boolean expression,  String error Message Template, long p1, @ Check For Null  Object p2 ) { if  ( !expression )  {     throw new  Verify Exception ( lenient Format ( error Message Template, p1, p2 )  )  ;  }}"
5141,public void scale ( float scale ) { low Min *= scale ;  low Max *= scale ; }
5142,"public  Rx Inserter< Entry> prepare Insert Into Entry ( @ On Conflict int on Conflict Algorithm ) { return prepare Insert Into Entry ( on Conflict Algorithm, true )  ; }"
5143,public  Checkout Command set Force ( boolean force ) { return set Force Ref Update ( force )  ; }
5144,"int initialize ( int next Available Register ) { this . reg = next Available Register ;  this . spec =  Register Spec . make ( next Available Register, type . rop Type )  ;  return size (  )  ; }"
5145,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
5146,public boolean equals (  Object o ) { return  ( compare To ( o )  == 0 )  ; }
5147,"public void write String (  String string, boolean append ) { write String ( string, append, null )  ; }"
5148,public void on Ready (  Runnable runnable ) { runnable . run (  )  ; }
5149,"public com . anychart . charts .  Pareto select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
5150,public  Builder error Handler (  Error Event Handler error Event Handler ) { if  ( error Event Handler != null )  {     this . error Event Handler = error Event Handler ;  } return this ; }
5151,"public  String get User Agent (  ) { return "" Mozilla/5 . 0  (  Linux ;   Android 5 . 1 . 1 ;   Nexus 6  Build/LYZ28 E )   Apple Web Kit/537 . 36  ( KHTML, like  Gecko )   Chrome/61 . 0 . 3163 . 100  Mobile  Safari/537 . 36"" ; }"
5152,public float get Drawing Offset (  ) { return m Drawing Offset ; }
5153,public static  String get Value (  Bcfg Property property ) { return get Value ( property . get Property Value (  )  )  ; }
5154,public synchronized void set Preparation Complete (  ) { defer On Prepared = false ;  if  ( player Handler != null && prepare Callback != null )  {     player Handler . post ( this::finish Preparation )  ;  }}
5155,"private static boolean is Set ( int flags, int bitmask ) { return  ( flags & bitmask )  == bitmask ; }"
5156,public  Login Manager set Reset Messenger State ( final boolean reset Messenger State ) { this . reset Messenger State = reset Messenger State ;  return this ; }
5157,public boolean is Set Rule Keys (  ) { return this . rule Keys != null ; }
5158,public void cancel (  ) { if  ( pressed Pointer == -1 )      return ;  cancelled = true ;  pressed = false ; }
5159,"private static boolean is Device Active (  String device )  throws  Interrupted Exception{ /*   $ networksetup -get Media ""en0""    Current: autoselect    Active: autoselect   $ networksetup -get Media ""en6""    Current: autoselect    Active: none */ LOG . debug ( "" Determine active state of media for device"" )  ;   String media Output = run Network Setup Command ( ""get Media"", device )  ;   Matcher matcher = active Pattern . matcher ( media Output )  ;  return  ( matcher . find (  )  && !matcher . group ( 1 )  . equals ( ""none"" )  )  ; }"
5160,public  String get Promotion Code (  ) { return promo Code ; }
5161,"public  Builder<R, C, V> put All (  Table<? extends R, ? extends C, ? extends V> table ) { for  (  Cell<? extends R, ? extends C, ? extends V> cell : table . cell Set (  )  )  {     put ( cell )  ;  } return this ; }"
5162,private boolean submodule Exists (  String path )  throws IO Exception{  Tree Filter filter =  Path Filter . create ( path )  ;  try  (  Submodule Walk w =  Submodule Walk . for Index ( repo )  )  {     return w . set Filter ( filter )  . next (  )  ;  }}
5163,public void set Background Effect ( boolean background Effect ) { if  ( this . background Effect == background Effect )      return ;  this . background Effect = background Effect ;  set Button Background (  )  ;  to Layout (  )  ; }
5164,"private boolean should Show Rational (  String [  ]  permissions ) { boolean current Show Rational = false ;  for  (  String permission : permissions )  {     if  ( activity != null )  {         if  ( should Show Request Permission Rationale ( activity, permission )  == true )  {             current Show Rational = true ;              break ;          }     } else {         if  ( fragment . should Show Request Permission Rationale ( permission )  == true )  {             current Show Rational = true ;              break ;          }     } } return current Show Rational ; }"
5165,"public com . anychart . core .  State Settings line Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Height ( %s )  ; "", height )  )  ;  return this ; }"
5166,"public void write Packet ( byte [  ]  packet )  throws IO Exception{ write Packet ( packet, 0, packet . length )  ; }"
5167,"public  Map Producer<K, V> build (  ) { return new  Map Producer<> ( map Builder . build (  )  )  ; }"
5168,public static  Context Imprint  Context Imprint With Key ( byte [  ]  key ) { return new  Secure Cell Context Imprint ( new  Symmetric Key ( key )  )  ; }
5169,"public com . anychart . core . axismarkers .  Gantt Line stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5170,public static  Recycler View .  View Holder get View Holder ( @ Nullable  View view ) {  Recycler View rv = get Parent Recycler View ( view )  ;  if  ( rv == null )  {     return null ;  } return rv . find Containing View Holder ( view )  ; }
5171,"public void add Error (  String error ) { add Error ( element, error )  ; }"
5172,"public boolean is Assignable (  Type Mirror right Hand Side,  Type Mirror left Hand Side,  Contribution Type contribution Type ) { return types . is Assignable ( right Hand Side, desired Assignable Type ( left Hand Side, contribution Type )  )  ; }"
5173,"public void is Vertical (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . is Vertical (  )  ; "" )  ; }"
5174,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
5175,"public boolean can Write (  Class<?> clazz,  Media Type media Type ) { return supports ( clazz )  && can Write ( media Type )  ; }"
5176,"public com . anychart . charts .  Stock select Marquee Fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
5177,"public  Log Cursor seek Log (  String ref Name )  throws IO Exception{ return seek Log ( ref Name,  Long . MAX_VALUE )  ; }"
5178,"public  Build Info Recorder add Build Metadata (  String key,  String value ) { build Metadata . put ( key, value )  ;  return this ; }"
5179,public void set Capacity ( int required Capacity ) { if  ( capacity != required Capacity )  {     for  (  Channel channel : arrays )  {         channel . set Capacity ( required Capacity )  ;      }     capacity = required Capacity ;  }}
5180,"public  Cursor query Recent Searches ( final  String limit ) { final SQ Lite Database database = m Music Database . get Readable Database (  )  ;  return database . query (  Search History Columns . NAME, new  String [  ]  {  Search History Columns . SEARCHSTRING }, null, null, null, null,  Search History Columns . TIMESEARCHED + "" DESC"", limit )  ; }"
5181,"public void cleanup Events ( long time,  Table table ) { final  String table Name = table . get Name (  )  ;  try {     final SQ Lite Database db = m Db . get Writable Database (  )  ;      db . delete ( table Name, KEY_CREATED_AT + "" <= "" + time, null )  ;  } catch  ( final SQ Lite Exception e )  {     MP Log . e ( LOGTAG, "" Could not clean timed-out  Mixpanel records from "" + table Name + "" .   Re-initializing database . "", e )  ;      //  We assume that in general, the results of a SQL exception are     // unrecoverable, and could be associated with an oversized or     // otherwise unusable DB .   Better to bomb it and get back on track     // than to leave it junked up  ( and maybe filling up the disk .  )      m Db . delete Database (  )  ;  } finally {     m Db . close (  )  ;  }}"
5182,"public com . anychart . core . lineargauge . pointers .  Led container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
5183,"public com . anychart . charts .  Circular Gauge select Marquee Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
5184,public int get Duration (  ) { return m Native Info Handle . get Duration (  )  ; }
5185,public  Base Anim get Fixed Animation (  String name ) { return anim Map . get ( name )  ; }
5186,"private  Cxx Thin LTO Opt create Thin Opt Build Rule (  String name,  Cxx Source source,  Source Path thin Indices Root ) {  Preconditions . check Argument (  Cxx Source Types . is Optimizable Type ( source . get Type (  )  )  )  ;   Build Target target = create Optimize Build Target ( name )  ;   Compiler compiler =  Cxx Source Types . get Compiler ( get Cxx Platform (  ) , source . get Type (  )  )  . resolve ( get Action Graph Builder (  ) , get Base Build Target (  )  . get Target Configuration (  )  )  ;   Cxx Tool Flags flags =  Cxx Tool Flags . explicit Builder (  )  . add All Platform Flags (  String Arg . from ( get Pic Type (  )  . get Flags ( compiler )  )  )  . add All Platform Flags ( get Platform Compile Flags ( source . get Type (  )  )  )  . add All Rule Flags ( get Rule Compile Flags ( source . get Type (  )  )  )  . add All Rule Flags ( sanitized Args (  String Arg . from ( source . get Flags (  )  )  )  )  . add Rule Flags ( new  Cxx Thin LTO Index Arg ( thin Indices Root, source . get Path (  )  )  )  . build (  )  ;   Compiler Delegate compiler Delegate = new  Compiler Delegate ( get Cxx Platform (  )  . get Compiler Debug Path Sanitizer (  ) , compiler, flags, get Cxx Platform (  )  . get Use Arg File (  )  )  ;  return  Cxx Thin LTO Opt . optimize ( target, get Project Filesystem (  ) , get Action Graph Builder (  ) , compiler Delegate, get Compile Output Name ( name ) , source . get Path (  ) , thin Indices Root, source . get Type (  ) , get Sanitizer (  )  )  ; }"
5187,public void set Fill Color ( @ Color Int int fill Color ) { if  ( fill Color == this . fill Color )  {     return ;  } this . fill Color = fill Color ;  fill Paint . set Color ( fill Color )  ;  invalidate (  )  ; }
5188,"public void set Starts ( int index,  Register Spec Set specs ) { throw If Immutable (  )  ;  if  ( specs == null )  {     throw new  Null Pointer Exception ( ""specs == null"" )  ;  } try {     block Starts [ index ]  = specs ;  } catch  (  Array Index Out Of Bounds Exception ex )  {     //  Translate the exception .      throw new  Illegal Argument Exception ( ""bogus index"" )  ;  }}"
5189,"private static X509 Certificate convert To Jca Certificate ( X509 Certificate Holder bouncy Castle Certificate ) { try {     return new  Jca X509 Certificate Converter (  )  . get Certificate ( bouncy Castle Certificate )  ;  } catch  (  Certificate Exception e )  {     throw new  Certificate Creation Exception ( "" Unable to convert X590 Certificate Holder to JCA X590 Certificate"", e )  ;  }}"
5190,"private T parse Option (  Enum Option<T> option ) { // we only put covariant values into the map @ Suppress Warnings ( ""unchecked"" )  T value =  ( T )  enum Options . compute If Absent ( option, this::parse Option Uncached )  ;  return value ; }"
5191,"public int current Segment ( float [  ]  coords, float length ) { int type = current Segment ( coords )  ;  // the cut point .   Same if this is a SEG_MOVETO .  if  ( m Current Segment Length <= length || type == SEG_MOVETO )  {     return type ;  } float t = length / get Current Segment Length (  )  ;  // a new end point to cut the segment short switch ( type )  {     case SEG_CUBICTO:     case SEG_QUADTO:         float [  ]  curve = new float [ 8 ]  ;          curve [ 0 ]  = m Last Point [ 0 ]  ;          curve [ 1 ]  = m Last Point [ 1 ]  ;           System . arraycopy ( coords, 0, curve, 2, coords . length )  ;          if  ( type == SEG_CUBICTO )  {             cubic Curve Segment ( curve, 0f, t )  ;          } else {             quad Curve Segment ( curve, 0f, t )  ;          }          System . arraycopy ( curve, 2, coords, 0, coords . length )  ;          break ;      default:         float [  ]  point = new float [ 2 ]  ;          get Point At Length ( type, coords, m Last Point [ 0 ] , m Last Point [ 1 ] , t, point )  ;          coords [ 0 ]  = point [ 0 ]  ;          coords [ 1 ]  = point [ 1 ]  ;  } return type ; }"
5192,"public void remove Android Event Listener (  Android Event Listener listener ) { synchronized  ( android Event Listeners )  {     android Event Listeners . remove Value ( listener, true )  ;  }}"
5193,protected void on Params Changed (  ) {}
5194,"public void check ( int obj Type, byte [  ]  raw )  throws  Corrupt Object Exception{ check ( id For ( obj Type, raw ) , obj Type, raw )  ; }"
5195,public final boolean is Successful (  ) { return m Status Code == 0x00 ; }
5196,"public  Animator on Disappear ( @ Non Null  View Group scene Root, @ Non Null  View view, @ Nullable  Transition Values start Values, @ Nullable  Transition Values end Values ) { return null ; }"
5197,"private  Immutable Sorted Map< Build Target With Outputs,  Target Result> compute Show Rules (  Command Runner Params params,  Immutable List< Target Node Spec> target Node Specs,  Listening Executor Service executor,  Pair< Target Graph,  Iterable< Target Node<?>>> target Graph And Target Nodes )  throws IO Exception,  Interrupted Exception,  Build File Parse Exception,  Cycle Exception{  Target Result Builders target Result Builders = new  Target Result Builders (  )  ;  if  ( is Show Target Hash )  {     //  If we need to get transitive dependencies, then make sure we populate target Result Builders     // with /all/ recursive parse time dependencies      Pair< Target Graph,  Iterable< Target Node<?>>> target Graph And Maybe Recursive Target Nodes = target Graph And Target Nodes ;      if  ( is Show Transitive Target Hashes )  {         target Graph And Maybe Recursive Target Nodes = new  Pair<> ( target Graph And Target Nodes . get First (  ) , get Transitive Parse Time Deps ( target Graph And Target Nodes )  )  ;      }     compute Show Target Hash ( params, executor, target Graph And Maybe Recursive Target Nodes, target Result Builders )  ;  } //  We only need the action graph if we're showing the output or the keys, and the //  Rule Key Factory if we're showing the keys .   Optional< Action Graph> action Graph ;   Optional< Action Graph Builder> graph Builder ;   Optional< Parallel Rule Key Calculator< Rule Key>> rule Key Calculator =  Optional . empty (  )  ;  try  (  Thrift Rule Key Logger rule Key Logger = create Rule Key Logger (  )  . or Else ( null )  )  {     if  ( is Show Rule Key || is Show Output || is Show Outputs || is Show Full Output )  {          Action Graph And Builder result = params . get Action Graph Provider (  )  . get Action Graph (  Target Graph Creation Result . of ( target Graph And Target Nodes . get First (  ) ,  Immutable Set . of (  )  )  )  ;          action Graph =  Optional . of ( result . get Action Graph (  )  )  ;          graph Builder =  Optional . of ( result . get Action Graph Builder (  )  )  ;          if  ( is Show Rule Key )  {             try  (  Rule Key Cache Scope< Rule Key> rule Key Cache Scope = get Default Rule Key Cache Scope ( params, new  Rule Key Cache Recycler .  Settings Affecting Cache ( params . get Buck Config (  )  . get View (  Build Buck Config . class )  . get Key Seed (  ) , result . get Action Graph (  )  )  )  )  {                 //  Setup a parallel rule key calculator to use when building rule keys .                  rule Key Calculator =  Optional . of ( new  Parallel Rule Key Calculator<> ( executor, new  Default Rule Key Factory ( new  Rule Key Field Loader ( params . get Rule Key Configuration (  )  ) , params . get File Hash Cache (  ) , result . get Action Graph Builder (  ) , rule Key Cache Scope . get Cache (  ) ,  Optional . of Nullable ( rule Key Logger )  ) , new  Default Rule Deps Cache ( graph Builder . get (  ) , result . get Build Engine Action To Build Rule Resolver (  )  ) ,  (  event Bus,  rule )  ->  (  )  -> {                 } )  )  ;              }         }     } else {         action Graph =  Optional . empty (  )  ;          graph Builder =  Optional . empty (  )  ;      }     //  Start rule calculations in parallel .      if  ( action Graph . is Present (  )  && is Show Rule Key )  {         for  (  Target Node<?> target Node : target Graph And Target Nodes . get Second (  )  )  {             if  ( !target Node . get Rule Type (  )  . is Build Rule (  )  )  {                 continue ;              }              Build Rule rule = graph Builder . get (  )  . require Rule ( target Node . get Build Target (  )  )  ;              rule Key Calculator . get (  )  . calculate ( params . get Buck Event Bus (  ) , rule )  ;          }     }     // TODO rewrite targets so that this doesn't alter the  Action Graph     for  (  Target Node<?> target Node : target Graph And Target Nodes . get Second (  )  )  {          Immutable Target Result .  Builder builder = target Result Builders . get Or Create ( target Node . get Build Target (  )  )  ;           Objects . require Non Null ( builder )  ;          if  ( action Graph . is Present (  )  && is Show Rule Key )  {             if  ( !target Node . get Rule Type (  )  . is Build Rule (  )  )  {                 continue ;              }              Build Rule rule = graph Builder . get (  )  . require Rule ( target Node . get Build Target (  )  )  ;              builder . set Rule Key (  Futures . get Unchecked ( rule Key Calculator . get (  )  . calculate ( params . get Buck Event Bus (  ) , rule )  )  . to String (  )  )  ;              if  ( is Show Transitive Rule Keys )  {                  Parallel Rule Key Calculator< Rule Key> calculator = rule Key Calculator . get (  )  ;                   Abstract Breadth First Traversal . traverse ( rule,  traversed Rule -> {                      Immutable Target Result .  Builder show Options Builder = target Result Builders . get Or Create ( traversed Rule . get Build Target (  )  )  ;                      show Options Builder . set Rule Key (  Futures . get Unchecked ( calculator . calculate ( params . get Buck Event Bus (  ) , traversed Rule )  )  . to String (  )  )  ;                      return traversed Rule . get Build Deps (  )  ;                  } )  ;              }         }     }      Immutable Set< Build Target With Outputs> build Targets With Outputs = match Build Targets With Labels From Specs ( target Node Specs, target Result Builders . map . key Set (  )  )  ;       Target Graph target Graph = target Graph And Target Nodes . get First (  )  ;      graph Builder . if Present (  action Graph Builder -> process Build Rules ( target Result Builders . map, target Graph, build Targets With Outputs, action Graph Builder, params )  )  ;       Immutable Sorted Map .  Builder< Build Target With Outputs,  Target Result> builder =  Immutable Sorted Map . natural Order (  )  ;      build Targets With Outputs . for Each (  target With Outputs -> builder . put ( target With Outputs,  Objects . require Non Null ( target Result Builders . map . get ( target With Outputs . get Build Target (  )  )  )  . build (  )  )  )  ;      return builder . build (  )  ;  }}"
5198,boolean commit (  ) { if  ( non Empty )  {     return lock . commit (  )  ;  } log File . delete (  )  ;  lock . unlock (  )  ;  return true ; }
5199,"public com . anychart . charts .  Scatter baseline (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . baseline ( %s )  ; "", value )  )  ;  return this ; }"
5200,"public static void replace ( @ Non Null final  Fragment src Fragment, @ Non Null final  Fragment dest Fragment, final  String dest Tag, final boolean is Add Stack, @ Animator Res @ Anim Res final int enter Anim, @ Animator Res @ Anim Res final int exit Anim, @ Animator Res @ Anim Res final int pop Enter Anim, @ Animator Res @ Anim Res final int pop Exit Anim ) {  Fragment Manager fm = src Fragment . get Fragment Manager (  )  ;  if  ( fm == null )      return ;   Args args = get Args ( src Fragment )  ;  replace ( fm, dest Fragment, args . id, dest Tag, is Add Stack, enter Anim, exit Anim, pop Enter Anim, pop Exit Anim )  ; }"
5201,"public T get Application (  ) { assert Not Null ( "" Application not yet created"", application )  ;  return  ( T )  application ; }"
5202,public  Builder set Instance Id ( java . lang .  String value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } instance Id_ = value ;  on Changed (  )  ;  return this ; }
5203,"public com . anychart . charts .  Sunburst padding (  Number value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
5204,public static  Build File Manifest Pojoizer of (  ) { return new  Build File Manifest Pojoizer (  )  ; }
5205,"public static void execute On Global Layout ( @ Non Null final  Activity activity, @ Non Null final  View Tree Observer .  On Global Layout Listener listener ) { execute On Global Layout ( activity . get Window (  )  . get Decor View (  )  . find View By Id ( android . R . id . content ) , listener )  ; }"
5206,"public static boolean is Match ( final  String regex, final  Char Sequence input ) { return input != null && input . length (  )  > 0 &&  Pattern . matches ( regex, input )  ; }"
5207,public float get Speed (  ) { return lottie Drawable . get Speed (  )  ; }
5208,public  Builder set Max Media Bitrate ( int bitrate ) {  Assertions . check Argument ( bitrate > 0 )  ;  this . media Bitrate = bitrate ;  return this ; }
5209,public void set Reverse ( boolean reverse ) { this . reverse = reverse ; }
5210,"public  Object clone (  ) { PDF Text Format new Format = new PDF Text Format (  )  ;  // copy values new Format . set Char Spacing ( get Char Spacing (  )  )  ;  new Format . set Word Spacing ( get Word Spacing (  )  )  ;  new Format . set Horizontal Scale ( get Horizontal Scale (  )  )  ;  new Format . set Leading ( get Leading (  )  )  ;  new Format . set Text Format Mode ( get Mode (  )  )  ;  new Format . set Rise ( get Rise (  )  )  ;  // copy immutable fields new Format . set Font ( get Font (  ) , get Font Size (  )  )  ;  return new Format ; }"
5211,"public com . anychart . charts .  Cartesian y Axis (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Axis ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
5212,public  Context get Context For Inflater (  Activity activity ) {  Action Bar ab = null ;  if  ( activity instanceof  Sherlock Activity )  {     ab =  (  (  Sherlock Activity )  activity )  . get Support Action Bar (  )  ;  } else if  ( activity instanceof  Sherlock List Activity )  {     ab =  (  (  Sherlock List Activity )  activity )  . get Support Action Bar (  )  ;  } else if  ( activity instanceof  Sherlock Fragment Activity )  {     ab =  (  (  Sherlock Fragment Activity )  activity )  . get Support Action Bar (  )  ;  } else if  ( activity instanceof  Sherlock Expandable List Activity )  {     ab =  (  (  Sherlock Expandable List Activity )  activity )  . get Support Action Bar (  )  ;  } else if  ( activity instanceof  Sherlock Preference Activity )  {     ab =  (  (  Sherlock Preference Activity )  activity )  . get Support Action Bar (  )  ;  }  Context context = null ;  if  ( ab != null )  {     context = ab . get Themed Context (  )  ;  } if  ( context == null )  {     context = activity ;  } return context ; }
5213,"public  Document get Predecessor (  Document Key key ) {  Document document = key Index . get ( key )  ;  if  ( document == null )  {     throw new  Illegal Argument Exception ( "" Key not contained in  Document Set: "" + key )  ;  } return sorted Set . get Predecessor Entry ( document )  ; }"
5214,"public synchronized long get Model Download Begin Time Ms ( @ Non Null  Custom Model custom Model ) { return get Shared Preferences (  )  . get Long (  String . format ( DOWNLOAD_BEGIN_TIME_MS_PATTERN, persistence Key, custom Model . get Name (  )  ) , 0 L )  ; }"
5215,"public void get Stat (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Stat ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
5216,"public void insert Local ( int index, int tag, int class Info )  throws  Bad Bytecode{ byte [  ]  data = new  Insert Local ( this, index, tag, class Info )  . doit (  )  ;  this . set ( data )  ; }"
5217,public boolean is Chart Drawn (  ) { return m Drawn ; }
5218,"static void update Leaf Rounding (  Drawable Parent parent, @ Nullable  Rounding Params rounding Params,  Resources resources ) { parent = find Drawable Parent For Leaf ( parent )  ;   Drawable child = parent . get Drawable (  )  ;  if  ( rounding Params != null && rounding Params . get Rounding Method (  )  ==  Rounding Params .  Rounding Method . BITMAP_ONLY )  {     // drawable that will round it .      if  ( child instanceof  Rounded )  {          Rounded rounded =  (  Rounded )  child ;          apply Rounding Params ( rounded, rounding Params )  ;      } else if  ( child != null )  {         //  Important: remove the child before wrapping it with a new parent!         parent . set Drawable ( s Empty Drawable )  ;           Drawable rounded = apply Leaf Rounding ( child, rounding Params, resources )  ;          parent . set Drawable ( rounded )  ;      } } else if  ( child instanceof  Rounded )  {     //  No rounding requested - reset rounding params so no rounding occurs .      reset Rounding Params (  (  Rounded )  child )  ;  }}"
5219,"public static synchronized void log (  String text ) {  Log . i ( TAG, text )  ; }"
5220,"public com . anychart . core . ui .  Crosshair Label h Align (  String align ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . h Align ( %s )  ; "", wrap Quotes ( align )  )  )  ;  return this ; }"
5221,"public void on Child View Detached From Window (  View view ) { final  Recycler View .  View Holder holder = recycler View . get Child View Holder ( view )  ;  if  ( holder == null || ! ( holder instanceof  Swipe Open View Holder )  )  {     return ;  } final  Swipe Open View Holder swipe Holder =  (  Swipe Open View Holder )  holder ;  if  ( prev Selected == swipe Holder )  {     prev Selected = null ;  } if  ( selected != null && swipe Holder == selected )  {     select ( null, ACTION_STATE_IDLE )  ;  } else {     callback . clear View ( recycler View, swipe Holder )  ;      end Recover Animation ( swipe Holder )  ;  }}"
5222,public  List< File Download Task> get Active Download Tasks (  ) { return  Storage Task Manager . get Instance (  )  . get Download Tasks Under ( this )  ; }
5223,"public com . anychart . charts .  Circular Gauge a11y (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . a11y ( %s )  ; "", settings )  )  ;  return this ; }"
5224,"public void acquire Token Silent Async (  String resource,  String client Id,  String user Id, boolean force Refresh,  Authentication Callback< Authentication Result> callback ) { acquire Token Silent Async ( null, null, resource, client Id, user Id,  User Identifier Type .  Unique Id, force Refresh, null,  Event Strings . ACQUIRE_TOKEN_SILENT_ASYNC_FORCE_REFRESH, callback )  ; }"
5225,public void decode Single (  Barcode Callback callback ) { this . decode Mode =  Decode Mode . SINGLE ;  this . callback = callback ;  start Decoder Thread (  )  ; }
5226,public void install (  ) {  Repository Cache . reconfigure ( this )  ; }
5227,"public com . anychart . core . stock . series .  Base max Labels (  Boolean settings ) { return new com . anychart . core . stock . series .  Base (  String . format (  Locale . US, js Base + "" . max Labels ( %s ) "", settings )  )  ; }"
5228,"private static byte [  ]  collect Slice ( int y, int x,  Bitmap image ) { byte [  ]  slices = new byte [  ]  { 0, 0, 0 } ;  for  ( int yy = y, i = 0 ;  yy < y + 24 && i < 3 ;  yy += 8, i++ )  {     // va a hacer 3 ciclos     byte slice = 0 ;      for  ( int b = 0 ;  b < 8 ;  b++ )  {         int yyy = yy + b ;          if  ( yyy >= image . get Height (  )  )  {             continue ;          }         int color = image . get Pixel ( x, yyy )  ;          boolean v = should Print Color ( color )  ;          slice |=  ( byte )   (  ( v ? 1 : 0 )  <<  ( 7 - b )  )  ;      }     slices [ i ]  = slice ;  } return slices ; }"
5229,public  Format get Format ( int index ) { return formats [ index ]  ; }
5230,"public  React Instance Manager Builder set JS Bundle File (  String js Bundle File ) { if  ( js Bundle File . starts With ( ""assets://"" )  )  {     m JS Bundle Asset Url = js Bundle File ;      m JS Bundle Loader = null ;      return this ;  } return set JS Bundle Loader ( JS Bundle Loader . create File Loader ( js Bundle File )  )  ; }"
5231,"protected  Completable remove Users (  Path path,  List<? extends  User> users ) { return  Fire . stream (  )  . get Firebase Service (  )  . core . remove Users ( path, users )  . observe On ( RX . main (  )  )  ; }"
5232,"public int add Multi Newarray (  Ct Class clazz, int dim ) { add ( MULTIANEWARRAY )  ;  add Index ( const Pool . add Class Info ( clazz )  )  ;  add ( dim )  ;  grow Stack ( 1 - dim )  ;  return dim ; }"
5233,public  Builder<T Fragment> set Pages Count ( int pages Count ) { m Pages Count = pages Count ;  return this ; }
5234,"private  Drawable get Drawable (  Uri uri ) { try {      String scheme = uri . get Scheme (  )  ;      if  (  Content Resolver . SCHEME_ANDROID_RESOURCE . equals ( scheme )  )  {         //  Load drawables through  Resources, to get the source density information         try {             return get Drawable From Resource Uri ( uri )  ;          } catch  (  Resources .  Not Found Exception ex )  {             throw new  File Not Found Exception ( "" Resource does not exist: "" + uri )  ;          }     } else {         //  Let the  Content Resolver handle content and file UR Is .           Input Stream stream = m Provider Context . get Content Resolver (  )  . open Input Stream ( uri )  ;          if  ( stream == null )  {             throw new  File Not Found Exception ( "" Failed to open "" + uri )  ;          }         try {             return  Drawable . create From Stream ( stream, null )  ;          } finally {             try {                 stream . close (  )  ;              } catch  ( IO Exception ex )  {                  Log . e ( LOG_TAG, "" Error closing icon stream for "" + uri, ex )  ;              }         }     } } catch  (  File Not Found Exception fnfe )  {      Log . w ( LOG_TAG, "" Icon not found: "" + uri + "", "" + fnfe . get Message (  )  )  ;      return null ;  }}"
5235,"public com . anychart . core . axismarkers .  Current Price Indicator falling Label (  String index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Label ( %s, %s )  ; "", wrap Quotes ( index ) , settings )  )  ;  return this ; }"
5236,public  List< Fake Track Selection> get All Track Selections (  ) { return fake Track Selection Factory . track Selections ; }
5237,public void set Right Offset ( float right Offset ) { this . right Offset = right Offset ; }
5238,"public  Array<K> to Array (  ) { return to Array ( new  Array<K> ( true, map . size )  )  ; }"
5239,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
5240,public byte get Type (  ) { return type ; }
5241,"public com . anychart . core .  Series Point get Point (  Number index ) { return new com . anychart . core .  Series Point (  String . format (  Locale . US, js Base + "" . get Point ( %s ) "", index )  )  ; }"
5242,public int get Contact Callback Filter (  ) { return contact Callback Filter ; }
5243,public final double get (  ) { return long Bits To Double ( value )  ; }
5244,public  Sliding Menu get Sliding Menu (  ) { return m Sliding Menu ; }
5245,public boolean expand Panel (  ) { if  ( m First Layout )  {     m Slide State =  Slide State . EXPANDED ;      return true ;  } else {     return expand Panel ( 1 . 0f )  ;  }}
5246,"private void set Scale Adapter (  ) {  Animation Adapter anim Card Array Adapter = new  Scale In Animation Adapter ( m Card Array Adapter )  ;  anim Card Array Adapter . set Abs List View ( m List View )  ;  if  ( m List View != null )  {     m List View . set External Adapter ( anim Card Array Adapter, m Card Array Adapter )  ;  }}"
5247,"public  String get Font File (  ) { if  ( ttf File Ref == null )  {     //  Worst case if this  Unicode Font was loaded without a ttf File Ref, try to get the font file from  Sun's classes .      try {          Object font2 D ;          try {             //  Java 7+ .              font2 D =  Class . for Name ( ""sun . font .  Font Utilities"" )  . get Declared Method ( ""get Font2 D"", new  Class [  ]  {  Font . class } )  . invoke ( null, new  Object [  ]  { font } )  ;          } catch  (  Throwable ignored )  {             font2 D =  Class . for Name ( ""sun . font .  Font Manager"" )  . get Declared Method ( ""get Font2 D"", new  Class [  ]  {  Font . class } )  . invoke ( null, new  Object [  ]  { font } )  ;          }          Field plat Name Field =  Class . for Name ( ""sun . font .  Physical Font"" )  . get Declared Field ( ""plat Name"" )  ;          plat Name Field . set Accessible ( true )  ;          ttf File Ref =  (  String )  plat Name Field . get ( font2 D )  ;      } catch  (  Throwable ignored )  {     }     if  ( ttf File Ref == null )          ttf File Ref = """" ;  } if  ( ttf File Ref . length (  )  == 0 )      return null ;  return ttf File Ref ; }"
5248,public  Realm Query<E> end Group (  ) { realm . check If Valid (  )  ;  return end Group Without Thread Validation (  )  ; }
5249,"public  Char Sequence get Message (  ) { if  ( m Progress Style ==  Progress Dialog . STYLE_HORIZONTAL )  {     return super . get Message (  )  ;  } else {      Text View message =  Reflection Helpers . get Field ( real Progress Dialog, ""m Message View"" )  ;      return message . get Text (  )  ;  }}"
5250,"public static  Upnp Header new Instance (  Upnp Header .  Type type,  String header Value ) { //  Try all the U Pn P headers and see if one matches our value parsers  Upnp Header upnp Header = null ;  for  ( int i = 0 ;  i < type . get Header Types (  )  . length && upnp Header == null ;  i++ )  {      Class<? extends  Upnp Header> header Class = type . get Header Types (  )  [ i ]  ;      try {         log . finest ( "" Trying to parse '"" + type + ""' with class: "" + header Class . get Simple Name (  )  )  ;          upnp Header = header Class . new Instance (  )  ;          if  ( header Value != null )  {             upnp Header . set String ( header Value )  ;          }     } catch  (  Invalid Header Exception ex )  {         log . finest ( "" Invalid header value for tested type: "" + header Class . get Simple Name (  )  + "" - "" + ex . get Message (  )  )  ;          upnp Header = null ;      } catch  (  Exception ex )  {         log . severe ( "" Error instantiating header of type '"" + type + ""' with value: "" + header Value )  ;          log . log (  Level . SEVERE, "" Exception root cause: "",  Exceptions . unwrap ( ex )  )  ;      } } return upnp Header ; }"
5251,"private void layout For Predictive Animations Expose (  Recycler View .  Recycler recycler,  Recycler View .  State state, int start Offset, int end Offset ) { // another view out of bounds .  if  ( !state . will Run Predictive Animations (  )  || get Child Count (  )  == 0 || state . is Pre Layout (  )  || !supports Predictive Item Animations (  )  )  {     return ;  } // to make the logic simpler, we calculate the size of children and call fill .  int scrap Extra Start = 0, scrap Extra End = 0 ;  final  List< Recycler View .  View Holder> scrap List = recycler . get Scrap List (  )  ;  final int scrap Size = scrap List . size (  )  ;  final int first Child Pos = get Position ( get Child At ( 0 )  )  ;  for  ( int i = 0 ;  i < scrap Size ;  i++ )  {      Recycler View .  View Holder scrap = scrap List . get ( i )  ;      final int position = scrap . get Position (  )  ;      final int direction = position < first Child Pos != m Should Reverse Layout Expose ?  Layout State . LAYOUT_START :  Layout State . LAYOUT_END ;      if  ( direction ==  Layout State . LAYOUT_START )  {         scrap Extra Start += m Orientation Helper . get Decorated Measurement ( scrap . item View )  ;      } else {         scrap Extra End += m Orientation Helper . get Decorated Measurement ( scrap . item View )  ;      } } if  ( DEBUG )  {      Log . d ( TAG, ""for unused scrap, decided to add "" + scrap Extra Start + "" towards start and "" + scrap Extra End + "" towards end"" )  ;  } m Layout State . m Scrap List = scrap List ;  if  ( scrap Extra Start > 0 )  {      View anchor = get Child Closest To Start Expose (  )  ;      update Layout State To Fill Start Expose ( get Position ( anchor ) , start Offset )  ;      m Layout State . m Extra = scrap Extra Start ;      m Layout State . m Available = 0 ;      m Layout State . m Current Position += m Should Reverse Layout Expose ? 1 : -1 ;      m Layout State . m On Refres Layout = true ;      fill ( recycler, m Layout State, state, false )  ;  } if  ( scrap Extra End > 0 )  {      View anchor = get Child Closest To End Expose (  )  ;      update Layout State To Fill End Expose ( get Position ( anchor ) , end Offset )  ;      m Layout State . m Extra = scrap Extra End ;      m Layout State . m Available = 0 ;      m Layout State . m Current Position += m Should Reverse Layout Expose ? -1 : 1 ;      m Layout State . m On Refres Layout = true ;      fill ( recycler, m Layout State, state, false )  ;  } m Layout State . m Scrap List = null ; }"
5252,public static boolean has Global (  ) { return global != null ; }
5253,"public static  String get String (  Annotation Value value ) { return value Of Type ( value,  String . class )  ; }"
5254,public static  Dfs Block Cache get Instance (  ) { return cache ; }
5255,"public com . anychart . charts .  Gantt auto Redraw (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . auto Redraw ( %s )  ; "", enabled )  )  ;  return this ; }"
5256,"public com . anychart . core . gantt . timelineheader .  Level Wrapper stroke ( com . anychart . graphics . vector .  Stroke settings,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
5257,"public static int drag View To (  View v, int gravity, int to X, int to Y ) { int [  ]  xy = new int [ 2 ]  ;  get Start Location ( v, gravity, xy )  ;  int from X = xy [ 0 ]  ;  int from Y = xy [ 1 ]  ;  int delta X = from X - to X ;  int delta Y = from Y - to Y ;  int distance =  ( int )   Math . sqrt ( delta X * delta X + delta Y * delta Y )  ;  drag ( from X, to X, from Y, to Y, distance )  ;  return distance ; }"
5258,"public void node Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . node Width (  )  ; "" )  ; }"
5259,"public static  Bcfg File create File (  Project project,  String text ) {  Psi File Factory psi File Factory =  Psi File Factory . get Instance ( project )  ;  return  (  Bcfg File )  psi File Factory . create File From Text (  Bcfg Language . INSTANCE, text )  ; }"
5260,public  Config Container get Blocking (  ) { return get Blocking ( DISK_READ_TIMEOUT_IN_SECONDS )  ; }
5261,"public void left (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . left (  )  ; "" )  ; }"
5262,public  Network Request Metric Builder set Time To Request Completed Micros ( long time ) { builder . set Time To Request Completed Us ( time )  ;  return this ; }
5263,public int get Exported Symbol Count (  ) { return exported Symbol_ . size (  )  ; }
5264,public  String get UTF8 Text (  ) { //  Trim because the text will have extra line breaks at the end  String text = native Get UTF8 Text (  )  ;  return text . trim (  )  ; }
5265,public static  Predicate<T> or (  Predicate<? super T> .  .  .  components ) { return new  Or Predicate<T> ( defensive Copy ( components )  )  ; }
5266,"public com . anychart . core . stock . series .  Base series (  ) { return new com . anychart . core . stock . series .  Base ( js Base + "" . series (  ) "" )  ; }"
5267,public final short get Index Unit (  ) { return  ( short )  index ; }
5268,public void set Transform (  Matrix transform ) { m Transform . set ( transform )  ;  update Texture View Size ( m Render Thread . m Gif Info Handle )  ; }
5269,public  Builder disc Cache File Count ( int max File Count ) { return disk Cache File Count ( max File Count )  ; }
5270,public  Builder set Peel ( boolean value ) { peel = value ;  return this ; }
5271,protected void on Server Ready ( @ Non Null final  Bluetooth Gatt Server server ) {// empty initialization}
5272,"public void save As Png (  String width,  Number height,  Number quality,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Png ( %s, %s, %s, %s )  ; "", wrap Quotes ( width ) , height, quality, wrap Quotes ( filename )  )  )  ; }"
5273,"public void trim To Size (  ) { if  ( needs Alloc Arrays (  )  )  {     return ;  } @ Nullable  Map<K, V> delegate = delegate Or Null (  )  ;  if  ( delegate != null )  {      Map<K, V> new Delegate = create Hash Flooding Resistant Delegate ( size (  )  )  ;      new Delegate . put All ( delegate )  ;      this . table = new Delegate ;      return ;  } int size = this . size ;  if  ( size < entries . length )  {     resize Entries ( size )  ;  } int minimum Table Size =  Compact Hashing . table Size ( size )  ;  int mask = hash Table Mask (  )  ;  if  ( minimum Table Size < mask )  {     // smaller table size will always be less than current mask     resize Table ( mask, minimum Table Size, UNSET, UNSET )  ;  }}"
5274,"public static  Observable< Qiscus Account> update User As Observable (  String name,  String avatar Url ) { return update User As Observable ( name, avatar Url, null )  ; }"
5275,"public com . anychart . core . stock . scrollerseries .  Jump Line left (  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", wrap Quotes ( left )  )  )  ;  return this ; }"
5276,"public com . anychart . core . gantt . elements .  Tasks Element height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
5277,private float get Value ( int property Constant ) { //final  View .  Transformation Info info = m View . m Transformation Info ;   View v = m View . get (  )  ;  if  ( v != null )  {     switch ( property Constant )  {         case TRANSLATION_X:             //return info . m Translation X ;              return v . get Translation X (  )  ;          case TRANSLATION_Y:             //return info . m Translation Y ;              return v . get Translation Y (  )  ;          case ROTATION:             //return info . m Rotation ;              return v . get Rotation (  )  ;          case ROTATION_X:             //return info . m Rotation X ;              return v . get Rotation X (  )  ;          case ROTATION_Y:             //return info . m Rotation Y ;              return v . get Rotation Y (  )  ;          case SCALE_X:             //return info . m Scale X ;              return v . get Scale X (  )  ;          case SCALE_Y:             //return info . m Scale Y ;              return v . get Scale Y (  )  ;          case X:             //return v . m Left + info . m Translation X ;              return v . get X (  )  ;          case Y:             //return v . m Top + info . m Translation Y ;              return v . get Y (  )  ;          case ALPHA:             //return info . m Alpha ;              return v . get Alpha (  )  ;      } } return 0 ; }
5278,"public  Activity Builder set Aspect Ratio ( int aspect Ratio X, int aspect Ratio Y ) { m Options . aspect Ratio X = aspect Ratio X ;  m Options . aspect Ratio Y = aspect Ratio Y ;  m Options . fix Aspect Ratio = true ;  return this ; }"
5279,protected final  Http URL Connection get Connection (  ) { return connection ; }
5280,public void set Ssl ( SSL Configuration ssl ) { this . ssl = ssl ; }
5281,public void allocate Channels (  ) {}
5282,public  Nitrite Builder compressed (  ) { this . compress = true ;  return this ; }
5283,"public void build Drawing Cache ( boolean auto Scale ) { L . begin Section ( ""build Drawing Cache"" )  ;  build Drawing Cache Depth++ ;  super . build Drawing Cache ( auto Scale )  ;  if  ( build Drawing Cache Depth == 1 && get Width (  )  > 0 && get Height (  )  > 0 && get Layer Type (  )  == LAYER_TYPE_SOFTWARE && get Drawing Cache ( auto Scale )  == null )  {     set Render Mode ( HARDWARE )  ;  } build Drawing Cache Depth-- ;  L . end Section ( ""build Drawing Cache"" )  ; }"
5284,public final  File get Preserved Directory (  ) { return preserved . get Directory (  )  ; }
5285,public boolean is Set ( _ Fields field ) { if  ( field == null )  {     throw new java . lang .  Illegal Argument Exception (  )  ;  } switch ( field )  {     case RULE_KEY:         return is Set Rule Key (  )  ;      case WAS_STORED:         return is Set Was Stored (  )  ;      case LAST_STORED_TIMESTAMP_MILLIS:         return is Set Last Stored Timestamp Millis (  )  ;      case STORE_LOG_ENTRIES:         return is Set Store Log Entries (  )  ;  } throw new java . lang .  Illegal State Exception (  )  ; }
5286,public  Builder set Orientation ( com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Orientation value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } orientation_ = value . get Number (  )  ;  on Changed (  )  ;  return this ; }
5287,public int hash Code (  ) { int h = 1 ;  h *= 1000003 ;  h ^=  Objects . hash Code ( this . class Token )  ;  h *= 1000003 ;  h ^=  Objects . hash Code ( this . method Name )  ;  return h ; }
5288,"protected static bt Collision Object Wrapper obtain For Argument ( final long swig C Ptr, boolean owner ) { bt Collision Object Wrapper instance = argument Instances [ argument Index =  ( argument Index + 1 )  & 3 ]  ;  instance . reset ( swig C Ptr, owner )  ;  return instance ; }"
5289,public static  String log Tag For Class Holder (  Generated Class Holder holder ) { return trim Log Tag ( holder . get Generated Class (  )  . name (  )  )  ; }
5290,"public void meta (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . meta ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
5291,"void ack Write (  Snapshot Version commit Version,  List< Mutation Result> results ) { listener . on Write Response ( commit Version, results )  ; }"
5292,public  Update Options upsert ( final boolean upsert ) { this . upsert = upsert ;  return this ; }
5293,"private void animate View If Necessary ( final int position, @ Non Null final  View view, @ Non Null final  View Group parent ) { assert m View Animator != null ;  /*  Grid View measures the first  View which is returned by get View ( int,  View,  View Group ) , but does not use that  View .          On  Kit Kat, it does this actually multiple times .          Therefore, we animate all these first  Views, and reset the last animated position when we suspect  Grid View is measuring .  */ m Grid View Possibly Measuring = m Grid View Possibly Measuring &&  ( m Grid View Measuring Position == -1 || m Grid View Measuring Position == position )  ;  if  ( m Grid View Possibly Measuring )  {     m Grid View Measuring Position = position ;      m View Animator . set Last Animated Position ( -1 )  ;  }  Animator [  ]  child Animators ;  if  ( get Decorated Base Adapter (  )  instanceof  Animation Adapter )  {     child Animators =  (  (  Animation Adapter )  get Decorated Base Adapter (  )  )  . get Animators ( parent, view )  ;  } else {     child Animators = new  Animator [ 0 ]  ;  }  Animator [  ]  animators = get Animators ( parent, view )  ;   Animator alpha Animator =  Object Animator . of Float ( view, ALPHA, 0, 1 )  ;   Animator [  ]  concat Animators =  Animator Util . concat Animators ( child Animators, animators, alpha Animator )  ;  m View Animator . animate View If Necessary ( position, view, concat Animators )  ; }"
5294,public boolean is Reference (  ) { return true ; }
5295,"public static void start Drag And Swipe (  Recycler View view,  Base Quick Adapter adapter, int drag Fix Count, int fix Color ) { start Drag And Swipe ( view, adapter, drag Fix Count )  ;  adapter . set Drag Fix Drawable ( fix Color )  ; }"
5296,public void add Stroke Paint ( PDF Paint p ) { add Command ( new PDF Stroke Paint Cmd ( p )  )  ; }
5297,"public static void show ( final  Fragment Activity activity, final int request Code, final  String title, final  String message ) { show ( activity, request Code, title, message, null )  ; }"
5298,public  String get Cvv (  ) { return cvv ; }
5299,public boolean has Properties (  ) { return m Properties . size (  )  > 0 ; }
5300,Iterator< Subscriber> get Subscribers (  Object event ) {  Immutable Set< Class<?>> event Types = flatten Hierarchy ( event . get Class (  )  )  ;   List< Iterator< Subscriber>> subscriber Iterators =  Lists . new Array List With Capacity ( event Types . size (  )  )  ;  for  (  Class<?> event Type : event Types )  {      Copy On Write Array Set< Subscriber> event Subscribers = subscribers . get ( event Type )  ;      if  ( event Subscribers != null )  {         // eager no-copy snapshot         subscriber Iterators . add ( event Subscribers . iterator (  )  )  ;      } } return  Iterators . concat ( subscriber Iterators . iterator (  )  )  ; }
5301,public  File get Ssh Directory (  ) { return ssh Directory ; }
5302,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
5303,"public void font Family (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Family (  )  ; "" )  ; }"
5304,"public com . anychart . core . stock . scrollerseries .  Range Step Area bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
5305,public static  Initializer Builder new Initializer Builder (  Context context ) { return new  Initializer Builder ( context )  ; }
5306,protected byte [  ]  generate Multipart Boundary (  ) { byte [  ]  boundary = new byte [ rnd . next Int ( 11 )  + 30 ]  ;  for  ( int i = 0 ;  i < boundary . length ;  i++ )  {     boundary [ i ]  = BOUNDARY_CHARS [ rnd . next Int ( BOUNDARY_CHARS . length )  ]  ;  } return boundary ; }
5307,public  String get Thumbnail Small Path (  ) { return thumbnail Small Path ; }
5308,"public com . anychart . core . ui .  Scroll Bar background Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5309,public void set Max Tile Size ( int max Pixels ) { this . max Tile Width = max Pixels ;  this . max Tile Height = max Pixels ; }
5310,"public com . anychart . ui .  Context Menu context Menu (  ) { return new com . anychart . ui .  Context Menu ( js Base + "" . context Menu (  ) "" )  ; }"
5311,"public com . anychart . core . stock .  Plot bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
5312,public void set Parent (  Activity parent ) { this . parent = parent ; }
5313,"public com . anychart . core .  Series Base markers (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", value )  )  ;  return this ; }"
5314,"public  Test Null String Overloads View Model_ on Bind (  On Model Bound Listener< Test Null String Overloads View Model_,  Test Null String Overloads View> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
5315,"public  Support Fragment Controller<F> create ( final int content View Id, final  Bundle bundle ) { shadow Main Looper . run Paused ( new  Runnable (  )  {     @ Override     public void run (  )  {         activity Controller . create ( bundle )  . get (  )  . get Support Fragment Manager (  )  . begin Transaction (  )  . add ( content View Id, fragment )  . commit Now (  )  ;      } } )  ;  return this ; }"
5316,public  Builder wait For Seek Processed (  ) { return apply ( new  Wait For Seek Processed ( tag )  )  ; }
5317,"public com . anychart . core . utils .  Quarter fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
5318,"public static T find Activity (  Context context ) { if  ( context instanceof  Activity )  {     //noinspection unchecked     return  ( T )  context ;  } while  ( context != null && context instanceof  Context Wrapper )  {     context =  (  (  Context Wrapper )  context )  . get Base Context (  )  ;      if  ( context instanceof  Activity )  {         //noinspection unchecked         return  ( T )  context ;      } } throw new  Illegal Argument Exception ( "" No activity found in context hierarchy . "" )  ; }"
5319,"public void falling Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . falling Fill (  )  ; "" )  ; }"
5320,"public long approximate Element Count (  ) { long bit Size = bits . bit Size (  )  ;  long bit Count = bits . bit Count (  )  ;  /**  *  Each insertion is expected to reduce the # of clear bits by a factor of  * `num Hash Functions/bit Size` .   So, after n insertions, expected bit Count is `bit Size *  ( 1 -  ( 1 -  * num Hash Functions/bit Size ) ^n ) ` .   Solving that for n, and approximating `ln x` as `x - 1` when x  * is close to 1  ( why? ) , gives the following formula .   */ double fraction Of Bits Set =  ( double )  bit Count / bit Size ;  return  Double Math . round To Long ( - Math . log1p ( -fraction Of Bits Set )  * bit Size / num Hash Functions,  Rounding Mode . HALF_UP )  ; }"
5321,public  Dao Config clone (  ) { return new  Dao Config ( this )  ; }
5322,"private void propagate Root Cause (  Unchecked Execution Exception e )  throws IO Exception,  Interrupted Exception{  Throwable root Cause =  Throwables . get Root Cause ( e )  ;  if  ( root Cause instanceof  Build File Parse Exception )  {     throw  (  Build File Parse Exception )  root Cause ;  } if  ( root Cause instanceof IO Exception )  {     throw  ( IO Exception )  root Cause ;  } if  ( root Cause instanceof  Interrupted Exception )  {     throw  (  Interrupted Exception )  root Cause ;  } throw e ; }"
5323,"public static void maybe Set Color Info (  Media Format format, @ Nullable  Color Info color Info ) { if  ( color Info != null )  {     maybe Set Integer ( format,  Media Format . KEY_COLOR_TRANSFER, color Info . color Transfer )  ;      maybe Set Integer ( format,  Media Format . KEY_COLOR_STANDARD, color Info . color Space )  ;      maybe Set Integer ( format,  Media Format . KEY_COLOR_RANGE, color Info . color Range )  ;      maybe Set Byte Buffer ( format,  Media Format . KEY_HDR_STATIC_INFO, color Info . hdr Static Info )  ;  }}"
5324,"public com . anychart . core . cartesian . series .  Line3d right (  Number right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", right )  )  ;  return this ; }"
5325,"public com . anychart . graphics . vector .  Pattern Fill hatch Fill (  ) { return new com . anychart . graphics . vector .  Pattern Fill ( js Base + "" . hatch Fill (  ) "" )  ; }"
5326,public void set Proxy (  Proxy proxy ) { this . proxy = proxy ; }
5327,"protected final  Bluetooth Gatt Descriptor cccd (  ) { return descriptor ( CLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR_UUID,  Bluetooth Gatt Descriptor . PERMISSION_READ |  Bluetooth Gatt Descriptor . PERMISSION_WRITE, new byte [  ]  { 0, 0 } )  ; }"
5328,"public com . anychart . standalones . axes .  Radial parent Bounds ( com . anychart . math .  Rect value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
5329,"static boolean has Local Cache (  Cache<?, ?> cache ) { return  ( check Not Null ( cache )  instanceof  Local Loading Cache )  ; }"
5330,"public com . anychart . core . lineargauge . pointers .  Thermometer fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
5331,"synchronized void flush ( final  String request Id ) { final  Map< String,  String> dispatch Map = new  Hash Map<> (  )  ;  if  ( get Dispatcher (  )  == null )  {     return ;  } final  List<I Events> events = get Objects To Be Dispatched (  )  . remove ( request Id )  ;  if  ( events == null || events . is Empty (  )  )  {     return ;  } for  ( int i = 0 ;  i < events . size (  )  ;  i++ )  {     I Events event = events . get ( i )  ;      //  The child class of I Event that is received here will call its process Event     event . process Event ( dispatch Map )  ;  } get Dispatcher (  )  . dispatch Event ( dispatch Map )  ; }"
5332,"public com . anychart . core . series .  Rendering Settings start (  String start Function ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . start ( %s )  ; "", wrap Quotes ( start Function )  )  )  ;  return this ; }"
5333,"public void does Not Match (  Pattern regex ) { if  ( regex . matcher ( actual )  . matches (  )  )  {     fail With Actual ( ""expected to fail to match"", regex )  ;  }}"
5334,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
5335,"public final void has Length ( int length ) { check Argument ( length >= 0, ""length  ( %s )  must be >= 0"" )  ;  check ( ""length"" )  . that ( length (  )  )  . is Equal To ( length )  ; }"
5336,"public void set Characteristic Notification ( final  Bluetooth Gatt Characteristic characteristic, final boolean enabled ) { if  ( m Bluetooth Adapter == null || m Bluetooth Gatt == null )  {      Log . w ( TAG, "" Bluetooth Adapter not initialized"" )  ;      return ;  } m Bluetooth Gatt . set Characteristic Notification ( characteristic, enabled )  ; }"
5337,"public com . anychart . core .  Visual Base With Bounds min Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
5338,"public final  Comparison Chain compare (  Boolean left,  Boolean right ) { return compare False First ( left, right )  ; }"
5339,"public com . anychart . core . stock . scrollerseries .  Range Spline Area fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
5340,public  Activity Builder set No Output Image ( boolean no Output Image ) { m Options . no Output Image = no Output Image ;  return this ; }
5341,"public void set Buffer Size ( int amount ) { if  ( amount < height )  {     amount = height ;  } if  ( amount < max Buf Size )  {     char [  ]  [  ]  cbuf = new char [ amount ]  [ width ]  ;      int [  ]  [  ]  abuf = new int [ amount ]  [ width ]  ;      int copy Start = buf Size - amount < 0 ? 0 : buf Size - amount ;      int copy Count = buf Size - amount < 0 ? buf Size : amount ;      if  ( char Array != null )  {          System . arraycopy ( char Array, copy Start, cbuf, 0, copy Count )  ;      }     if  ( char Attributes != null )  {          System . arraycopy ( char Attributes, copy Start, abuf, 0, copy Count )  ;      }     char Array = cbuf ;      char Attributes = abuf ;      buf Size = copy Count ;      screen Base = buf Size - height ;      window Base = screen Base ;  } max Buf Size = amount ;  update [ 0 ]  = true ;  redraw (  )  ; }"
5342,"public  Single< Boolean> is Rate Limited (  Rate Limit limit ) { return get Rate Limits (  )  . switch If Empty (  Maybe . just (  Rate Limit Proto .  Rate Limit . get Default Instance (  )  )  )  . map (  stored Limits -> stored Limits . get Limits Or Default ( limit . limiter Key (  ) , new Counter (  )  )  )  . filter (  counter -> is Limit Expired ( counter, limit )  || counter . get Value (  )  < limit . limit (  )  )  . is Empty (  )  ; }"
5343,"public com . anychart . core . stock . scrollerseries .  Stick bounds (  String x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
5344,"public void global To Local (  Number x Coord,  Number y Coord ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . global To Local ( %s, %s )  ; "", x Coord, y Coord )  )  ; }"
5345,boolean is Current (  ) { return current ; }
5346,"public static void register (  Merge Strategy imp ) { register ( imp . get Name (  ) , imp )  ; }"
5347,"public com . anychart . charts .  Sparkline first Hatch Fill ( com . anychart . graphics . vector .  Hatch Fill settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . first Hatch Fill ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
5348,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
5349,protected int request Audio Focus ( android . media .  Audio Focus Request audio Focus Request ) { last Audio Focus Request = new  Audio Focus Request ( audio Focus Request )  ;  return next Response Value ; }
5350,public  String get Video URI String (  ) { return uri == null ? null : uri . to String (  )  ; }
5351,public void test Proc Only Compilation Double Close (  ) { log Desired Event Stream For Proc Only ( mock Logger )  ;  replay ( mock Logger )  ;  trace Proc Only Events ( tracer )  ;  tracer . close (  )  ;  verify ( mock Logger )  ; }
5352,"private UI Alert Controller build UI Alert Controller ( final  Text Input Listener listener,  String title, final  String text, final  String placeholder, final  Onscreen Keyboard Type type ) { final UI Alert Controller ui Alert Controller = new UI Alert Controller ( title, text, UI Alert Controller Style .  Alert )  ;  ui Alert Controller . add Text Field ( new  Void Block1<UI Text Field> (  )  {     @ Override     public void invoke ( UI Text Field ui Text Field )  {         ui Text Field . set Placeholder ( placeholder )  ;          ui Text Field . set Text ( text )  ;          ui Text Field . set Keyboard Type ( get Ios Input Type ( type )  )  ;          if  ( type ==  Onscreen Keyboard Type .  Password )  {             ui Text Field . set Secure Text Entry ( true )  ;          }     } } )  ;  ui Alert Controller . add Action ( new UI Alert Action ( "" Ok"", UI Alert Action Style .  Default, new  Void Block1<UI Alert Action> (  )  {     @ Override     public void invoke ( UI Alert Action ui Alert Action )  {         // user clicked "" Ok"" button         UI Text Field text Field = ui Alert Controller . get Text Fields (  )  . get ( 0 )  ;          listener . input ( text Field . get Text (  )  )  ;      } } )  )  ;  ui Alert Controller . add Action ( new UI Alert Action ( "" Cancel"", UI Alert Action Style .  Cancel, new  Void Block1<UI Alert Action> (  )  {     @ Override     public void invoke ( UI Alert Action ui Alert Action )  {         // user clicked "" Cancel"" button         listener . canceled (  )  ;      } } )  )  ;  return ui Alert Controller ; }"
5353,"private int find Range And Adjust (  Normal Ssa Insn insn ) {  Register Spec List sources = insn . get Sources (  )  ;  int sz Sources = sources . size (  )  ;  // the category for each source index int [  ]  categories For Index = new int [ sz Sources ]  ;  int range Length = 0 ;  //  Compute range Length and categories For Index for  ( int i = 0 ;  i < sz Sources ;  i++ )  {     int category = sources . get ( i )  . get Category (  )  ;      categories For Index [ i ]  = category ;      range Length += categories For Index [ i ]  ;  } // the highest score of fits tried so far int max Score =  Integer . MIN_VALUE ;  // the high scoring range's start int result Range Start = -1 ;  // by source index: set of sources needing moves in high scoring plan  Bit Set result Moves Required = null ;  /*      *  First, go through each source that's already been mapped .   Try      * to center the range around the rop register this source is mapped      * to .       */ int range Start Offset = 0 ;  for  ( int i = 0 ;  i < sz Sources ;  i++ )  {     int ssa Center Reg = sources . get ( i )  . get Reg (  )  ;      if  ( i != 0 )  {         range Start Offset -= categories For Index [ i - 1 ]  ;      }     if  ( !ssa Regs Mapped . get ( ssa Center Reg )  )  {         continue ;      }     int range Start = mapper . old To New ( ssa Center Reg )  + range Start Offset ;      if  ( range Start < 0 || spans Param Range ( range Start, range Length )  )  {         continue ;      }      Bit Set cur Moves Required = new  Bit Set ( sz Sources )  ;      int fit Width = fit Plan For Range ( range Start, insn, categories For Index, cur Moves Required )  ;      if  ( fit Width < 0 )  {         continue ;      }     int score = fit Width - cur Moves Required . cardinality (  )  ;      if  ( score > max Score )  {         max Score = score ;          result Range Start = range Start ;          result Moves Required = cur Moves Required ;      }     if  ( fit Width == range Length )  {         //  We can't do any better than this, so stop here         break ;      } } if  ( result Range Start == -1 )  {     result Moves Required = new  Bit Set ( sz Sources )  ;      result Range Start = find Any Fitting Range ( insn, range Length, categories For Index, result Moves Required )  ;  } for  ( int i = result Moves Required . next Set Bit ( 0 )  ;  i >= 0 ;  i = result Moves Required . next Set Bit ( i + 1 )  )  {     insn . change One Source ( i, insert Move Before ( insn, sources . get ( i )  )  )  ;  } return result Range Start ; }"
5354,"protected static boolean is Supported ( int format Support, boolean allow Exceeds Capabilities ) { int masked Support = format Support &  Renderer Capabilities . FORMAT_SUPPORT_MASK ;  return masked Support ==  Renderer Capabilities . FORMAT_HANDLED ||  ( allow Exceeds Capabilities && masked Support ==  Renderer Capabilities . FORMAT_EXCEEDS_CAPABILITIES )  ; }"
5355,"public static boolean switch Panel And Keyboard ( final  View panel Layout, final  View focus View ) { boolean switch To Panel = panel Layout . get Visibility (  )  !=  View . VISIBLE ;  if  ( !switch To Panel )  {     show Keyboard ( panel Layout, focus View )  ;  } else {     show Panel ( panel Layout )  ;  } return switch To Panel ; }"
5356,public void fade Out Layer ( int index ) { m Transition State = TRANSITION_STARTING ;  m Is Layer On [ index ]  = false ;  invalidate Self (  )  ; }
5357,public int get Matching Beacon Type Code End Offset (  ) { if  ( m Matching Beacon Type Code End Offset == null )  {     return -1 ;  } return m Matching Beacon Type Code End Offset ; }
5358,"public com . anychart . charts .  Sparkline negative Fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . negative Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
5359,"public static  Immutable List< Parameter Spec> assisted Parameter Specs (  Binding binding,  Dagger Types types ) { check Argument ( binding . kind (  )  ==  Binding Kind . ASSISTED_INJECTION )  ;   Executable Element constructor = as Executable ( binding . binding Element (  )  . get (  )  )  ;   Executable Type constructor Type = as Executable ( types . as Member Of ( as Declared ( binding . key (  )  . type (  )  ) , constructor )  )  ;  return assisted Parameter Specs ( constructor . get Parameters (  ) , constructor Type . get Parameter Types (  )  )  ; }"
5360,static void detect (  List< Component<?>> components ) {  Set< Component Node> graph = to Graph ( components )  ;   Set< Component Node> roots = get Roots ( graph )  ;  int num Visited = 0 ;  while  ( !roots . is Empty (  )  )  {      Component Node node = roots . iterator (  )  . next (  )  ;      roots . remove ( node )  ;      num Visited++ ;      for  (  Component Node dependent : node . get Dependencies (  )  )  {         dependent . remove Dependent ( node )  ;          if  ( dependent . is Root (  )  )  {             roots . add ( dependent )  ;          }     } } // the original list .  if  ( num Visited == components . size (  )  )  {     return ;  } //  Otherwise there is a cycle .   List< Component<?>> components In Cycle = new  Array List<> (  )  ;  for  (  Component Node node : graph )  {     if  ( !node . is Root (  )  && !node . is Leaf (  )  )  {         components In Cycle . add ( node . get Component (  )  )  ;      } } throw new  Dependency Cycle Exception ( components In Cycle )  ; }
5361,public void set Model Downloader Collection Enabled ( @ Nullable  Boolean enabled ) { shared Preferences Util . set Custom Model Stats Collection Enabled ( enabled )  ; }
5362,"public com . anychart . core . polar . series .  Range Column select (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ;  return this ; }"
5363,"public com . anychart . charts .  Cartesian3d bottom (  Number bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", bottom )  )  ;  return this ; }"
5364,"public com . anychart . core . grids .  Map Settings stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
5365,private static  Date read Amf Date (  Parsable Byte Array data ) {  Date date = new  Date (  ( long )  read Amf Double ( data )  . double Value (  )  )  ;  //  Skip reserved bytes .  data . skip Bytes ( 2 )  ;  return date ; }
5366,"public void font Variant (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Variant (  )  ; "" )  ; }"
5367,"public  Network Key get Net Key ( final int key Index ) { for  (  Network Key key : net Keys )  {     if  ( key Index == key . get Key Index (  )  )  {         try {             return key . clone (  )  ;          } catch  (  Clone Not Supported Exception e )  {              Log . e ( TAG, "" Error while cloning key: "" + e . get Message (  )  )  ;          }     } } return null ; }"
5368,"public com . anychart . core . annotations .  Fibonacci Retracement trend (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . trend ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
5369,"private int create Program (  String vertex Source,  String fragment Source ) { m V Shader Handle = load Shader ( GLES20 . GL_VERTEX_SHADER, vertex Source )  ;  if  ( m V Shader Handle == 0 )  {     return 0 ;  } m F Shader Handle = load Shader ( GLES20 . GL_FRAGMENT_SHADER, fragment Source )  ;  if  ( m F Shader Handle == 0 )  {     return 0 ;  } int program = GLES20 . gl Create Program (  )  ;  if  ( program != 0 )  {     GLES20 . gl Attach Shader ( program, m V Shader Handle )  ;      GLES20 . gl Attach Shader ( program, m F Shader Handle )  ;      GLES20 . gl Link Program ( program )  ;      int [  ]  link Status = new int [ 1 ]  ;      GLES20 . gl Get Programiv ( program, GLES20 . GL_LINK_STATUS, link Status, 0 )  ;      if  ( link Status [ 0 ]  != GLES20 . GL_TRUE )  {          Raj Log . e ( "" Could not link program in "" + get Class (  )  . get Canonical Name (  )  + "": "" )  ;           Raj Log . e ( GLES20 . gl Get Program Info Log ( program )  )  ;          GLES20 . gl Delete Program ( program )  ;          program = 0 ;      } } return program ; }"
5370,public  Match Node check (  Check<T> check ) { m Checks . add ( check )  ;  return this ; }
5371,"public com . anychart . charts .  Cartesian3d parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
5372,"public void set Object Id (  String field Name, @ Nullable  Object Id value ) { proxy State . get Realm$realm (  )  . check If Valid (  )  ;  long column Key = proxy State . get Row$realm (  )  . get Column Key ( field Name )  ;  if  ( value == null )  {     proxy State . get Row$realm (  )  . set Null ( column Key )  ;  } else {     proxy State . get Row$realm (  )  . set Object Id ( column Key, value )  ;  }}"
5373,"private void insert Plain Insn Before (  Ssa Insn insn,  Register Spec List new Sources,  Register Spec new Result, int new Opcode,  Constant cst ) {  Insn original Rop Insn = insn . get Original Rop Insn (  )  ;   Rop new Rop ;  if  ( new Opcode ==  Reg Ops . MOVE_RESULT_PSEUDO )  {     new Rop =  Rops . op Move Result Pseudo ( new Result . get Type (  )  )  ;  } else {     new Rop =  Rops . rop For ( new Opcode, new Result, new Sources, cst )  ;  }  Insn new Rop Insn ;  if  ( cst == null )  {     new Rop Insn = new  Plain Insn ( new Rop, original Rop Insn . get Position (  ) , new Result, new Sources )  ;  } else {     new Rop Insn = new  Plain Cst Insn ( new Rop, original Rop Insn . get Position (  ) , new Result, new Sources, cst )  ;  }  Normal Ssa Insn new Insn = new  Normal Ssa Insn ( new Rop Insn, insn . get Block (  )  )  ;   List< Ssa Insn> insns = insn . get Block (  )  . get Insns (  )  ;  insns . add ( insns . last Index Of ( insn ) , new Insn )  ;  ssa Meth . on Insn Added ( new Insn )  ; }"
5374,private boolean is Non Straight Angle Rotated (  ) { return m Bounds Points [ 0 ]  != m Bounds Points [ 6 ]  && m Bounds Points [ 1 ]  != m Bounds Points [ 7 ]  ; }
5375,"public  Cancel Result cancel Jobs (  Tag Constraint constraint,  String .  .  .  tags ) { assert Not In Main Thread ( "" Cannot call this method on main thread .   Use cancel Jobs In Background"" + "" instead"" )  ;  assert Not In Job Manager Thread ( "" Cannot call this method on  Job Manager's thread .   Use"" + ""cancel Jobs In Background instead"" )  ;  if  ( constraint == null )  {     throw new  Illegal Argument Exception ( ""must provide a  Tag Constraint"" )  ;  } final  Count Down Latch latch = new  Count Down Latch ( 1 )  ;  final  Cancel Result [  ]  result = new  Cancel Result [ 1 ]  ;   Cancel Result .  Async Cancel Callback my Callback = new  Cancel Result .  Async Cancel Callback (  )  {     @ Override     public void on Cancelled (  Cancel Result cancel Result )  {         result [ 0 ]  = cancel Result ;          latch . count Down (  )  ;      } } ;   Cancel Message message = message Factory . obtain (  Cancel Message . class )  ;  message . set Constraint ( constraint )  ;  message . set Tags ( tags )  ;  message . set Callback ( my Callback )  ;  message Queue . post ( message )  ;  try {     latch . await (  )  ;  } catch  (  Interrupted Exception ignored )  { } return result [ 0 ]  ; }"
5376,"public void delete Unused Files (  ) { int size = get Size (  )  ;  final  Hash Set< String> file Path Set = new  Hash Set< String> ( size > 16 ? size : 16 )  ;  for  (  Cache Object< String> value : values (  )  )  {     if  ( value != null )  {         file Path Set . add ( value . get Data (  )  )  ;      } } thread Pool . execute ( new  Runnable (  )  {     @ Override     public void run (  )  {         try {              File file = new  File ( get Cache Folder (  )  )  ;              if  ( file != null && file . exists (  )  && file . is Directory (  )  )  {                 for  (  File f : file . list Files (  )  )  {                     if  ( f . is File (  )  && !file Path Set . contains ( f . get Path (  )  )  )  {                         f . delete (  )  ;                      }                 }             }         } catch  (  Exception e )  {             e . print Stack Trace (  )  ;               Log . e ( TAG, ""delete unused files fail . "" )  ;          }     } } )  ; }"
5377,void set Adapter Params (  Card Stack Layout card Stack Layout ) { m Parent = card Stack Layout ;  m Card Views = new  View [ get Count (  )  ]  ;  m Card Gap Bottom = card Stack Layout . get Card Gap Bottom (  )  ;  m Card Gap = card Stack Layout . get Card Gap (  )  ;  m Parallax Scale = card Stack Layout . get Parallax Scale (  )  ;  m Parallax Enabled = card Stack Layout . is Parallax Enabled (  )  ;  if  ( m Parallax Enabled && m Parallax Scale == 0 )      m Parallax Enabled = false ;  m Show Init Animation = card Stack Layout . is Show Init Animation (  )  ;  m Parent Padding Top = card Stack Layout . get Padding Top (  )  ;  full Card Height =  ( int )   ( m Screen Height - dp30 - dp8 - get Count (  )  * m Card Gap Bottom )  ; }
5378,"public com . anychart . core . stock . scrollerseries .  Hilo normal (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . normal ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5379,"public void test Send Event (  )  throws  Exception{  Remote Message Builder builder = new  Remote Message Builder (  )  . set Message Type (  Remote Message Builder . MESSAGE_TYPE_SEND_EVENT )  . set Message Id ( ""msg-123"" )  ;  start Service Via Receiver ( builder . build Intent (  )  )  ;  verify ( service )  . on Message Sent ( eq ( ""msg-123"" )  )  ; }"
5380,public  String get Channel Id (  ) { return channel Id ; }
5381,"public com . anychart . scales .  Calendar calendar (  ) { return new com . anychart . scales .  Calendar ( js Base + "" . calendar (  ) "" )  ; }"
5382,"public void read All Reads One Segment At A Time (  )  throws IO Exception{  Buffer write1 = new  Buffer (  )  . write Utf8 ( repeat ( ""a"", SEGMENT_SIZE )  )  ;   Buffer write2 = new  Buffer (  )  . write Utf8 ( repeat ( ""b"", SEGMENT_SIZE )  )  ;   Buffer write3 = new  Buffer (  )  . write Utf8 ( repeat ( ""c"", SEGMENT_SIZE )  )  ;   Buffer source = new  Buffer (  )  . write Utf8 ( """" + repeat ( ""a"", SEGMENT_SIZE )  + repeat ( ""b"", SEGMENT_SIZE )  + repeat ( ""c"", SEGMENT_SIZE )  )  ;   Mock Sink mock Sink = new  Mock Sink (  )  ;   Buffered Source buffered Source =  Okio . buffer (  (  Source )  source )  ;  assert Equals ( SEGMENT_SIZE * 3, buffered Source . read All ( mock Sink )  )  ;  mock Sink . assert Log ( ""write ( "" + write1 + "", "" + write1 . size (  )  + "" ) "", ""write ( "" + write2 + "", "" + write2 . size (  )  + "" ) "", ""write ( "" + write3 + "", "" + write3 . size (  )  + "" ) "" )  ; }"
5383,"public com . anychart . core . ui .  Crosshair Label word Break (  String mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . word Break ( %s )  ; "", wrap Quotes ( mode )  )  )  ;  return this ; }"
5384,"public void sort (  ) { throw If Immutable (  )  ;  if  ( !sorted )  {      Arrays . sort ( values, 0, size )  ;      sorted = true ;  }}"
5385,public  Object Id get Object Id (  ) { return object ; }
5386,"public boolean is Valid Generic Tld (  String g Tld ) { g Tld = unicode To ASCII ( g Tld )  ;  return  Arrays . binary Search ( GENERIC_TLDS, chomp Leading Dot ( g Tld . to Lower Case (  Locale . ENGLISH )  )  )  >= 0 ; }"
5387,"public com . anychart . core . stock . scrollerseries .  Spline max Point Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Point Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
5388,public final  Media Route Selector get Media Route Selector (  ) { return m Media Route Selector ; }
5389,"Inferred Type get Element Type If Array Or Throw (  ) {  String descriptor = descriptor (  )  ;  check State ( descriptor . char At ( 0 )  == ' [ ', "" This type %s is not an array . "", this )  ;  return create ( descriptor . substring ( 1 )  )  ; }"
5390,"public com . anychart . standalones .  Resource List bounds (  String x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
5391,"public long open (  Data Spec data Spec )  throws  Http Data Source Exception{ this . data Spec = data Spec ;  this . bytes Read = 0 ;  this . bytes Skipped = 0 ;  transfer Initializing ( data Spec )  ;  try {     connection = make Connection ( data Spec )  ;  } catch  ( IO Exception e )  {     throw new  Http Data Source Exception ( "" Unable to connect"", e, data Spec,  Http Data Source Exception . TYPE_OPEN )  ;  }  String response Message ;  try {     response Code = connection . get Response Code (  )  ;      response Message = connection . get Response Message (  )  ;  } catch  ( IO Exception e )  {     close Connection Quietly (  )  ;      throw new  Http Data Source Exception ( "" Unable to connect"", e, data Spec,  Http Data Source Exception . TYPE_OPEN )  ;  } //  Check for a valid response code .  if  ( response Code < 200 || response Code > 299 )  {      Map< String,  List< String>> headers = connection . get Header Fields (  )  ;      @ Nullable  Input Stream error Stream = connection . get Error Stream (  )  ;      byte [  ]  error Response Body ;      try {         error Response Body = error Stream != null ?  Util . to Byte Array ( error Stream )  :  Util . EMPTY_BYTE_ARRAY ;      } catch  ( IO Exception e )  {         throw new  Http Data Source Exception ( "" Error reading non-2xx response body"", e, data Spec,  Http Data Source Exception . TYPE_OPEN )  ;      }     close Connection Quietly (  )  ;       Invalid Response Code Exception exception = new  Invalid Response Code Exception ( response Code, response Message, headers, data Spec, error Response Body )  ;      if  ( response Code == 416 )  {         exception . init Cause ( new  Data Source Exception (  Data Source Exception . POSITION_OUT_OF_RANGE )  )  ;      }     throw exception ;  } //  Check for a valid content type .   String content Type = connection . get Content Type (  )  ;  if  ( content Type Predicate != null && !content Type Predicate . apply ( content Type )  )  {     close Connection Quietly (  )  ;      throw new  Invalid Content Type Exception ( content Type, data Spec )  ;  } //  If we requested a range starting from a non-zero position and received a 200 rather than a // 206, then the server does not support partial requests .   We'll need to manually skip to the // requested position .  bytes To Skip = response Code == 200 && data Spec . position != 0 ? data Spec . position : 0 ;  //  Determine the length of the data to be read, after skipping .  boolean is Compressed = is Compressed ( connection )  ;  if  ( !is Compressed )  {     if  ( data Spec . length != C . LENGTH_UNSET )  {         bytes To Read = data Spec . length ;      } else {         long content Length = get Content Length ( connection )  ;          bytes To Read = content Length != C . LENGTH_UNSET ?  ( content Length - bytes To Skip )  : C . LENGTH_UNSET ;      } } else {     //  Gzip is enabled .   If the server opts to use gzip then the content length in the response     // will be that of the compressed data, which isn't what we want .   Always use the data Spec     // length in this case .      bytes To Read = data Spec . length ;  } try {     input Stream = connection . get Input Stream (  )  ;      if  ( is Compressed )  {         input Stream = new GZIP Input Stream ( input Stream )  ;      } } catch  ( IO Exception e )  {     close Connection Quietly (  )  ;      throw new  Http Data Source Exception ( e, data Spec,  Http Data Source Exception . TYPE_OPEN )  ;  } opened = true ;  transfer Started ( data Spec )  ;  return bytes To Read ; }"
5392,boolean is Drag View At Bottom (  ) { return transformer . is View At Bottom (  )  ; }
5393,public  Hash Code Builder append ( byte [  ]  array ) { if  ( array == null )  {     i Total = i Total * i Constant ;  } else {     for  ( byte element : array )  {         append ( element )  ;      } } return this ; }
5394,public  Array<T> get Texture Attachments (  ) { return texture Attachments ; }
5395,"public com . anychart . charts .  Stock bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
5396,private byte [  ]  get Bytes From ( int start ) { int end = data . position (  )  ;  byte [  ]  result = new byte [ end - start ]  ;  data . position ( start )  ;  data . get ( result )  ;  return result ; }
5397,"private void print Data (  ) { char [  ]  parts = new char [ 17 ]  ;  int partsloc = 0 ;  for  ( int i = 0 ;  i < data . length ;  i++ )  {     int d =  (  ( int )  data [ i ]  )  & 0xff ;      if  ( d == 0 )  {         parts [ partsloc++ ]  = ' . ' ;      } else if  ( d < 32 || d >= 127 )  {         parts [ partsloc++ ]  = '?' ;      } else {         parts [ partsloc++ ]  =  ( char )  d ;      }     if  ( d < 16 )  {          System . out . print ( ""0"" +  Integer . to Hex String ( d )  )  ;      } else {          System . out . print (  Integer . to Hex String ( d )  )  ;      }     if  (  ( i & 15 )  == 15 )  {          System . out . println ( ""      "" + new  String ( parts )  )  ;          partsloc = 0 ;      } else if  (  ( i & 7 )  == 7 )  {          System . out . print ( ""  "" )  ;          parts [ partsloc++ ]  = ' ' ;      } else if  (  ( i & 1 )  == 1 )  {          System . out . print ( "" "" )  ;      } }  System . out . println (  )  ; }"
5398,"public  Cursor raw Query (  String sql,  String [  ]  selection Args,  Cancellation Signal cancellation Signal,  String tag )  throws JSQL Parser Exception,  Class Cast Exception{ if  ( tag == null )      throw new  Illegal Argument Exception ( "" The tag must not be null . "" )  ;   Statement statement = CCJ Sql Parser Util . parse ( sql )  ;  generate Raw Update Delete Query ( statement, sql, selection Args, tag )  ;   Cursor cursor = m SQ Lite Database . raw Query ( sql, selection Args, cancellation Signal )  ;  cursor . move To First (  )  ;  if  ( sql . to Lower Case (  Locale . get Default (  )  )  . contains ( ""insert into"" )  )  {      Insert insert Statement =  (  Insert )  statement ;       String table = insert Statement . get Table (  )  . get Name (  )  ;      generate Insert Raw Query ( table, tag )  ;  } return cursor ; }"
5399,public long get Fetch Timeout In Seconds (  ) { return fetch Timeout In Seconds ; }
5400,public  Object get Manifest (  ) { if  ( media Source == null )  {     return null ;  } assert Prepared With Media (  )  ;  return media Preparer . manifest ; }
5401,public void set Variable Context (  Variable Context variable Context ) { get Context Support (  )  . set Variable Context ( variable Context )  ; }
5402,"public com . anychart . core . resource .  Logo corners (  Number top Left,  String top Right,  String bottom Right,  Number bottom Left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . corners ( %s, %s, %s, %s )  ; "", top Left, wrap Quotes ( top Right ) , wrap Quotes ( bottom Right ) , bottom Left )  )  ;  return this ; }"
5403,"private  Inferred Type convert Type In Stack Map Frame (  Object type In Stack Map Frame ) { if  ( type In Stack Map Frame ==  Opcodes . TOP )  {     return  Inferred Type . TOP ;  } else if  ( type In Stack Map Frame ==  Opcodes . INTEGER )  {     return  Inferred Type . INT ;  } else if  ( type In Stack Map Frame ==  Opcodes . FLOAT )  {     return  Inferred Type . FLOAT ;  } else if  ( type In Stack Map Frame ==  Opcodes . DOUBLE )  {     return  Inferred Type . DOUBLE ;  } else if  ( type In Stack Map Frame ==  Opcodes . LONG )  {     return  Inferred Type . LONG ;  } else if  ( type In Stack Map Frame ==  Opcodes . NULL )  {     return  Inferred Type . NULL ;  } else if  ( type In Stack Map Frame ==  Opcodes . UNINITIALIZED_THIS )  {     return  Inferred Type . UNINITIALIZED_THIS ;  } else if  ( type In Stack Map Frame instanceof  String )  {      String reference Type Name =  (  String )  type In Stack Map Frame ;      if  ( reference Type Name . char At ( 0 )  == ' [ ' )  {         return  Inferred Type . create ( reference Type Name )  ;      } else {         return  Inferred Type . create ( 'L' + reference Type Name + ' ; ' )  ;      } } else if  ( type In Stack Map Frame instanceof  Label )  {     return  Inferred Type . UNINITIALIZED ;  } else {     throw new  Runtime Exception ( "" Cannot reach here .   Unhandled element: value="" + type In Stack Map Frame + "", class="" + type In Stack Map Frame . get Class (  )  + "" .   The current method being desugared is "" + method Signature )  ;  }}"
5404,"public com . anychart . charts .  Sparkline max Fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
5405,public void set External Usage ( boolean external Usage ) { this . m External Usage = external Usage ; }
5406,"protected void append Summary (  String Buffer buffer,  String field Name,  Object value ) { buffer . append ( summary Object Start Text )  ;  buffer . append ( get Short Class Name ( value . get Class (  )  )  )  ;  buffer . append ( summary Object End Text )  ; }"
5407,"public com . anychart . core . cartesian . series .  Width Based color Scale ( com . anychart . scales .  Ordinal Color settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
5408,"public void invalidate Item ( T item ) { send Event For Item ( item,  Accessibility Event . TYPE_WINDOW_CONTENT_CHANGED )  ; }"
5409,"public void set Rotation ( long timestamp Us, float [  ]  angle Axis ) { rotations . add ( timestamp Us, angle Axis )  ; }"
5410,"static boolean set Count Impl (  Multiset<E> self, E element, int old Count, int new Count ) { check Nonnegative ( old Count, ""old Count"" )  ;  check Nonnegative ( new Count, ""new Count"" )  ;  if  ( self . count ( element )  == old Count )  {     self . set Count ( element, new Count )  ;      return true ;  } else {     return false ;  }}"
5411,"public void add Menu Bar Item (  String parent,  String name, int id, boolean checked ) { sv Menu Bar . add ( parent, name, id, checked )  ; }"
5412,"public  List< Document Change> get Document Changes ( @ Non Null  Metadata Changes metadata Changes ) { if  (  Metadata Changes . INCLUDE . equals ( metadata Changes )  && snapshot . excludes Metadata Changes (  )  )  {     throw new  Illegal Argument Exception ( "" To include metadata changes with your document changes, you must also pass  Metadata Changes . INCLUDE to add Snapshot Listener (  )  . "" )  ;  } if  ( cached Changes == null || cached Changes Metadata State != metadata Changes )  {     cached Changes =  Collections . unmodifiable List (  Document Change . changes From Snapshot ( firestore, metadata Changes, snapshot )  )  ;      cached Changes Metadata State = metadata Changes ;  } return cached Changes ; }"
5413,"public void add Listener ( L listener,  Executor executor ) { check Not Null ( listener, ""listener"" )  ;  check Not Null ( executor, ""executor"" )  ;  listeners . add ( new  Per Listener Queue<> ( listener, executor )  )  ; }"
5414,public  Cache Stats get Cache Stats (  ) {  Cache Stats .  Builder stats Builder =  Cache Stats . builder (  )  . set Hit Count ( stats Tracker . get Total Hit Count (  )  )  . set Miss Count ( stats Tracker . get Total Miss Count (  )  )  . set Miss Match Count ( stats Tracker . get Total Miss Match Count (  )  )  ;  if  ( stats Tracker . get Total Hit Count (  )  + stats Tracker . get Total Miss Count (  )  + stats Tracker . get Total Miss Match Count (  )  > 0 )  {     stats Builder . set Retrieval Time ( stats Tracker . get Average Retrieval Time (  )  )  . set Total Miss Time ( stats Tracker . get Average Miss Time (  )  )  . set Total Load Time ( stats Tracker . get Average Load Time (  )  )  ;  } return stats Builder . build (  )  ; }
5415,"public  List< Change> get Visible Changes ( int first Visible Index, int last Visible Index, int global Offset ) { int global First Visible Index = global Offset +  ( first Visible Index >= 0 ? first Visible Index : 0 )  ;  int global Last Visible Index = global Offset +  ( last Visible Index >= 0 ? last Visible Index : 0 )  ;  final  List< Change> result = new  Array List<> (  )  ;  for  ( int i = 0, size = m Changes . size (  )  ;  i < size ;  i++ )  {     final  Change change = m Changes . get ( i )  ;      if  ( is Range Overlap ( global First Visible Index, global Last Visible Index, change . get Index (  ) , change . get Index (  )  + change . get Count (  )  - 1 )  )  {         result . add ( change )  ;      } } return result ; }"
5416,"public  Observable< Result> add Comment (  String publish User Id,  Comment Item circle Item ) { return  Observable . create ( new  Observable .  On Subscribe< Result> (  )  {     @ Override     public void call (  Subscriber<? super  Result> subscriber )  {          Result result = new  Result (  )  ;          subscriber . on Next ( result )  ;          subscriber . on Completed (  )  ;           Log Utils . logd ( result . to String (  )  )  ;      } } )  . compose (  Rx Schedulers . < Result>io_main (  )  )  ; }"
5417,public boolean is Frozen (  ) { return native Is Frozen ( native Ptr )  ; }
5418,"public void bottom (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . bottom (  )  ; "" )  ; }"
5419,"public  Flexible Item Decoration with Divider ( @ Drawable Res int res Id,  Integer .  .  .  view Types ) { m Divider =  Context Compat . get Drawable ( context, res Id )  ;  m View Types =  Arrays . as List ( view Types )  ;  return this ; }"
5420,public void set Data (  Extractor Input extractor Input ) { this . byte Buffer Data = null ;  this . extractor Input = extractor Input ;  if  ( temp Buffer == null )  {     this . temp Buffer = new byte [ TEMP_BUFFER_SIZE ]  ;  } end Of Extractor Input = false ; }
5421,"void init First Block ( int max Stack, int max Locals,  String class Name,  String method Desc, boolean is Static, boolean is Constructor )  throws  Bad Bytecode{ if  ( method Desc . char At ( 0 )  != ' ( ' )      throw new  Bad Bytecode ( ""no method descriptor: "" + method Desc )  ;  stack Top = 0 ;  stack Types =  Type Data . make ( max Stack )  ;   Type Data [  ]  locals =  Type Data . make ( max Locals )  ;  if  ( is Constructor )      locals [ 0 ]  = new  Type Data .  Uninit This ( class Name )  ;  else if  ( !is Static )      locals [ 0 ]  = new  Type Data .  Class Name ( class Name )  ;  int n = is Static ? -1 : 0 ;  int i = 1 ;  try {     while  (  ( i = desc To Tag ( method Desc, i, ++n, locals )  )  > 0 )  if  ( locals [ n ]  . is2 Word Type (  )  )          locals [ ++n ]  =  Type Tag . TOP ;  } catch  (  String Index Out Of Bounds Exception e )  {     throw new  Bad Bytecode ( ""bad method descriptor: "" + method Desc )  ;  } num Locals = n ;  locals Types = locals ; }"
5422,"public static boolean is Assignable From Any Of (  Type Element element,  Immutable Set< Class Name> class Names ) { for  (  Class Name class Name : class Names )  {     if  (  Class Name . get ( element )  . equals ( class Name )  )  {         return true ;      } }  Type Mirror super Class = element . get Superclass (  )  ;  //  Error type is returned for classes that are generated by this processor if  (  ( super Class . get Kind (  )  !=  Type Kind . NONE )  &&  ( super Class . get Kind (  )  !=  Type Kind . ERROR )  )  {      Preconditions . check State ( super Class . get Kind (  )  ==  Type Kind . DECLARED )  ;      if  ( is Assignable From Any Of (  More Types . as Type Element ( super Class ) , class Names )  )  {         return true ;      } } for  (  Type Mirror iface : element . get Interfaces (  )  )  {     // processor .      if  ( iface . get Kind (  )  ==  Type Kind . ERROR )  {         continue ;      }      Preconditions . check State ( iface . get Kind (  )  ==  Type Kind . DECLARED, "" Interface type is %s"", iface . get Kind (  )  )  ;      if  ( is Assignable From Any Of (  More Types . as Type Element ( iface ) , class Names )  )  {         return true ;      } } return false ; }"
5423,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
5424,"private  Remote Event create Remote Event ( long snapshot Version,  Map< Integer,  Target Data> target Map,  Map< Integer,  Integer> outstanding Responses,  Immutable Sorted Set< Document Key> existing Keys,  Watch Change .  .  .  watch Changes ) {  Watch Change Aggregator aggregator = create Aggregator ( target Map, outstanding Responses, existing Keys, watch Changes )  ;  return aggregator . create Remote Event ( version ( snapshot Version )  )  ; }"
5425,"public com . anychart . core . utils .  Chart A11y a11y (  ) { return new com . anychart . core . utils .  Chart A11y ( js Base + "" . a11y (  ) "" )  ; }"
5426,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
5427,public static  Builders . IV . F<? extends  Builders . IV . F<?>> with (  Image View image View ) { return get Default ( image View . get Context (  )  )  . build ( image View )  ; }
5428,"public static  Closing Future<V> submit (  Closing Callable<V> callable,  Executor executor ) { return new  Closing Future<> ( callable, executor )  ; }"
5429,"public static  String evaluate (  Object str Arg,  Locale locale,  Navigator nav ) {  String str =  String Function . evaluate ( str Arg, nav )  ;  // pick a default locale if  ( locale == null )      locale =  Locale . ENGLISH ;  return str . to Upper Case ( locale )  ; }"
5430,"private static  Cst Array make Cst Array (  Type List types ) { int size = types . size (  )  ;   Cst Array .  List list = new  Cst Array .  List ( size )  ;  for  ( int i = 0 ;  i < size ;  i++ )  {     list . set ( i,  Cst Type . intern ( types . get Type ( i )  )  )  ;  } list . set Immutable (  )  ;  return new  Cst Array ( list )  ; }"
5431,"public E copy To Realm Or Update ( E object,  Import Flag .  .  .  flags ) { check Not Null Object ( object )  ;  check Has Primary Key ( object . get Class (  )  )  ;  return copy Or Update ( object, true, new  Hash Map<> (  ) ,  Util . to Set ( flags )  )  ; }"
5432,public void set Draw Circles ( boolean enabled ) { this . m Draw Circles = enabled ; }
5433,public  String get Identifier (  ) { return ID3v2 Chapter Frames . FRAME_ID_CHAPTER ; }
5434,"public final void test (  ) { try {     recurse ( 0 )  ;  } catch  (  Runtime Exception e )  {     throw new  Runtime Exception (  Arrays . to String ( stimuli ) , e )  ;  }}"
5435,"public  Code Attribute to Code Attribute (  ) { return new  Code Attribute ( const Pool, max Stack, max Locals, get (  ) , tryblocks )  ; }"
5436,"public void text Direction (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . text Direction (  )  ; "" )  ; }"
5437,public void set Above Offset ( int i ) { m View Above . set Above Offset ( i )  ; }
5438,public  Optional< Double> hit Rate (  ) {  Optional< Long> request Count = get Request Count (  )  ;  return request Count . map (  a Long ->  ( a Long == 0 )  ? 1 . 0 :  ( double )  get Hit Count (  )  . get (  )  / a Long )  ; }
5439,"public void write To Parcel ( final  Parcel out, final int flags ) { out . write String ( this . object Id )  ;  out . write String ( this . object Type )  ; }"
5440,"public com . anychart . core . cartesian . series .  Range Bar right (  Number right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", right )  )  ;  return this ; }"
5441,"public com . anychart . core . annotations .  Fibonacci Fan bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
5442,"private static  String parse Selector (  Parsable Byte Array input,  String Builder string Builder ) { skip Whitespace And Comments ( input )  ;  if  ( input . bytes Left (  )  < 5 )  {     return null ;  }  String cue Selector = input . read String ( 5 )  ;  if  ( !""::cue"" . equals ( cue Selector )  )  {     return null ;  } int position = input . get Position (  )  ;   String token = parse Next Token ( input, string Builder )  ;  if  ( token == null )  {     return null ;  } if  ( RULE_START . equals ( token )  )  {     input . set Position ( position )  ;      return """" ;  }  String target = null ;  if  ( "" ( "" . equals ( token )  )  {     target = read Cue Target ( input )  ;  } token = parse Next Token ( input, string Builder )  ;  if  ( !"" ) "" . equals ( token )  || token == null )  {     return null ;  } return target ; }"
5443,public  Builder set Prioritize Time Over Size Thresholds ( boolean prioritize Time Over Size Thresholds ) {  Assertions . check State ( !create Default Load Control Called )  ;  this . prioritize Time Over Size Thresholds = prioritize Time Over Size Thresholds ;  return this ; }
5444,public A Transformable3 D reset To Look At (  ) { reset To Look At ( m Up Axis )  ;  return this ; }
5445,public void set Title (  Char Sequence value ) { title = value ; }
5446,"public  Ultimate Recyclerview View Holder on Create View Holder (  View Group parent ) {  View v =  Layout Inflater . from ( parent . get Context (  )  )  . inflate ( get Normal Layout Res Id (  ) , parent, false )  ;  return new View Holder ( v )  ; }"
5447,"public com . anychart . charts .  Pie padding (  String value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
5448,"public com . anychart . charts .  Polar container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
5449,"public int get Position (  ) { if  ( position == -1 )      throw new  Illegal State Exception ( "" Use  Base Adapter Helper constructor "" + ""with position if you need to retrieve the position . "" )  ;  return position ; }"
5450,public  Builder button Corner Radius ( int button Corner Radius ) { this . button Corner Radius = button Corner Radius ;  return this ; }
5451,public boolean is Provisioning Complete (  ) { return m Nrf Mesh Repository . is Provisioning Complete (  )  ; }
5452,"protected  Rev Commit get Base Commit (  Rev Commit a,  Rev Commit b )  throws  Incorrect Object Type Exception, IO Exception{ return get Base Commit ( a, b, 0 )  ; }"
5453,"public static int get Useful Screen Height (  Activity activity ) { return get Useful Screen Height ( activity, QMUI Notch Helper . has Notch ( activity )  )  ; }"
5454,"public void set Over Scroll Mode (  React Horizontal Scroll View view,  String value ) { view . set Over Scroll Mode (  React Scroll View Helper . parse Over Scroll Mode ( value )  )  ; }"
5455,"Hash Code get (  Project Filesystem filesystem,  Path path )  throws IO Exception{ return get ( filesystem . resolve ( path )  )  ; }"
5456,"public void handle Document Change (  Document Change document Change ) {  Mutable Document document = document Change . get New Document (  )  ;   Document Key document Key = document Change . get Document Key (  )  ;  for  ( int target Id : document Change . get Updated Target Ids (  )  )  {     if  ( document != null && document . is Found Document (  )  )  {         add Document To Target ( target Id, document )  ;      } else {         remove Document From Target ( target Id, document Key, document )  ;      } } for  ( int target Id : document Change . get Removed Target Ids (  )  )  {     remove Document From Target ( target Id, document Key, document Change . get New Document (  )  )  ;  }}"
5457,"private boolean mark Start And Known Nodes (  Connectivity Check Info connectivity Check Info,  Object Walk ow,  Set< Object Id> haves,  Progress Monitor pm )  throws IO Exception{ boolean mark Trees = connectivity Check Info . is Check Objects (  )  && !connectivity Check Info . get Parser (  )  . get Base Object Ids (  )  . is Empty (  )  ;  if  ( connectivity Check Info . is Check Objects (  )  )  {     ow . sort (  Rev Sort . TOPO )  ;      if  ( !connectivity Check Info . get Parser (  )  . get Base Object Ids (  )  . is Empty (  )  )  {         ow . sort (  Rev Sort . BOUNDARY, true )  ;      } } boolean has Interesting = false ;  for  (  Receive Command cmd : connectivity Check Info . get Commands (  )  )  {     if  ( cmd . get Result (  )  !=  Result . NOT_ATTEMPTED )  {         continue ;      }     if  ( cmd . get Type (  )  ==  Receive Command .  Type . DELETE )  {         continue ;      }     if  ( haves . contains ( cmd . get New Id (  )  )  )  {         continue ;      }     ow . mark Start ( ow . parse Any ( cmd . get New Id (  )  )  )  ;      pm . update ( 1 )  ;      has Interesting = true ;  } if  ( !has Interesting )  {     return false ;  } for  (  Object Id have : haves )  {      Rev Object o = ow . parse Any ( have )  ;      ow . mark Uninteresting ( o )  ;      pm . update ( 1 )  ;      if  ( mark Trees )  {         o = ow . peel ( o )  ;          if  ( o instanceof  Rev Commit )  {             o =  (  (  Rev Commit )  o )  . get Tree (  )  ;          }         if  ( o instanceof  Rev Tree )  {             ow . mark Uninteresting ( o )  ;          }     } } return true ; }"
5458,public boolean is Updated (  Managed Object object ) { return updated Objects . contains ( object )  ; }
5459,public  Fast Json Config get Fast Json Config (  ) { return fast Json Config ; }
5460,"private com . google . protobuf .  Single Field Builder V3<com . facebook . buck . remoteexecution . proto .  Client Action Info, com . facebook . buck . remoteexecution . proto .  Client Action Info .  Builder, com . facebook . buck . remoteexecution . proto .  Client Action Info Or Builder> get Client Action Info Field Builder (  ) { if  ( client Action Info Builder_ == null )  {     client Action Info Builder_ = new com . google . protobuf .  Single Field Builder V3<com . facebook . buck . remoteexecution . proto .  Client Action Info, com . facebook . buck . remoteexecution . proto .  Client Action Info .  Builder, com . facebook . buck . remoteexecution . proto .  Client Action Info Or Builder> ( get Client Action Info (  ) , get Parent For Children (  ) , is Clean (  )  )  ;      client Action Info_ = null ;  } return client Action Info Builder_ ; }"
5461,"public static void assert That ( T actual,  Matcher<? super T> matcher ) { assert That ( """", actual, matcher )  ; }"
5462,"public com . anychart . scales .  Geo Ticks interval (  Number interval ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . interval ( %s )  ; "", interval )  )  ;  return this ; }"
5463,"protected void on Processed Output Buffer ( long presentation Time Us ) { buffers In Codec Count-- ;  while  ( pending Output Stream Offset Count != 0 && presentation Time Us >= pending Output Stream Switch Times Us [ 0 ]  )  {     output Stream Offset Us = pending Output Stream Offsets Us [ 0 ]  ;      pending Output Stream Offset Count-- ;       System . arraycopy ( pending Output Stream Offsets Us, /* src Pos= */     1, pending Output Stream Offsets Us, /* dest Pos= */     0, pending Output Stream Offset Count )  ;       System . arraycopy ( pending Output Stream Switch Times Us, /* src Pos= */     1, pending Output Stream Switch Times Us, /* dest Pos= */     0, pending Output Stream Offset Count )  ;  }}"
5464,public static int calculate Block Acknowledgement ( final int seg N ) { final int segment Count = seg N + 1 ;  int ack = 0 ;  for  ( int i = 0 ;  i < segment Count ;  i++ )  {     ack |= 1 << i ;  } return ack ; }
5465,static  String get Short Name (  String url ) { int last Slash = url . last Index Of ( '/' )  ;  if  ( last Slash < 0 )  {     last Slash = url . last Index Of ( '\\' )  ;  }  String short Name = url ;  if  ( last Slash >= 0 && last Slash + 1 < url . length (  )  )  {     short Name = url . substring ( last Slash + 1 )  ;  } return short Name ; }
5466,"public  Identify post Insert (  String property, boolean [  ]  values ) { add To User Properties (  Constants . AMP_OP_POSTINSERT, property, boolean Array To JSON Array ( values )  )  ;  return this ; }"
5467,protected int get Size In Bytes ( int bucketed Size ) { return bucketed Size ; }
5468,"public void walk Relative File Tree (  Path path Relative To Project Root,  Enum Set< File Visit Option> visit Options,  File Visitor< Path> file Visitor, boolean skip Ignored )  throws IO Exception{ walk Relative File Tree ( path Relative To Project Root, visit Options, file Visitor, skip Ignored ?  input -> !is Ignored ( relativize ( input )  )  :  input -> true )  ; }"
5469,public boolean is Copying Fields (  ) { return this . copy Fields ; }
5470,"public com . anychart . charts .  Scatter margin (  Number value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
5471,"public static void restart Application With Intent ( @ Non Null  Activity activity, @ Non Null  Intent intent, @ Non Null  Caoc Config config ) { intent . add Flags (  Intent . FLAG_ACTIVITY_NEW_TASK |  Intent . FLAG_ACTIVITY_CLEAR_TASK |  Intent . FLAG_ACTIVITY_RESET_TASK_IF_NEEDED )  ;  if  ( intent . get Component (  )  != null )  {     // If the class name has been set, we force it to simulate a  Launcher launch .      // If we don't do this, if you restart from the error activity, then press home,     //and then launch the activity from the launcher, the main activity appears twice on the backstack .      // This will most likely not have any detrimental effect because if you set the  Intent component,     //if will always be launched regardless of the actions specified here .      intent . set Action (  Intent . ACTION_MAIN )  ;      intent . add Category (  Intent . CATEGORY_LAUNCHER )  ;  } if  ( config . get Event Listener (  )  != null )  {     config . get Event Listener (  )  . on Restart App From Error Activity (  )  ;  } activity . finish (  )  ;  activity . start Activity ( intent )  ;  kill Current Process (  )  ; }"
5472,public  Html Plugin add Handler ( @ Non Null  Tag Handler tag Handler ) { builder . add Handler ( tag Handler )  ;  return this ; }
5473,"public static  Pix read Bitmap (  Bitmap bmp ) { if  ( bmp == null )      throw new  Illegal Argument Exception ( "" Bitmap must be non-null"" )  ;  if  ( bmp . get Config (  )  !=  Bitmap .  Config . ARGB_8888 )      throw new  Illegal Argument Exception ( "" Bitmap config must be ARGB_8888"" )  ;  int native Pix = native Read Bitmap ( bmp )  ;  if  ( native Pix == 0 )      throw new  Runtime Exception ( "" Failed to read pix from bitmap"" )  ;  return new  Pix ( native Pix )  ; }"
5474,private boolean inverted (  ) { return  ( m Closest Data Set To Touch == null && m Chart . is Any Axis Inverted (  )  )  ||  ( m Closest Data Set To Touch != null && m Chart . is Inverted ( m Closest Data Set To Touch . get Axis Dependency (  )  )  )  ; }
5475,"public final  Flexible Adapter<T> set Swipe Enabled ( boolean swipe Enabled ) { log . i ( "" Set swipe Enabled=%s"", swipe Enabled )  ;  initialize Item Touch Helper (  )  ;  m Item Touch Helper Callback . set Swipe Enabled ( swipe Enabled )  ;  return this ; }"
5476,"public com . anychart . core . utils .  Padding padding (  ) { return new com . anychart . core . utils .  Padding ( js Base + "" . padding (  ) "" )  ; }"
5477,"public static void initialize (  Context context,  String api Key ) { get Instance (  )  . initialize ( context, api Key )  ; }"
5478,public  Builder set Button (  Share Messenger Action Button button ) { this . button = button ;  return this ; }
5479,"public  Activity Info add Receiver If Not Present (  Component Name component Name ) { return add Component ( receiver Filters,  p -> p . receivers,  (  p,  a )  -> p . receivers = a, update Name ( component Name, new  Activity Info (  )  ) , false )  ; }"
5480,public  Mongo Collection< Document> get Tickets Collection (  ) { return tickets Collection ; }
5481,public void set Item Move Mode ( @ Item Move Mode int mode ) { m Item Move Mode = mode ; }
5482,"final  Builder schema (  Class<? extends  Realm Model> first Class,  Class<? extends  Realm Model> .  .  .  additional Classes ) { //noinspection  Constant Conditions if  ( first Class == null )  {     throw new  Illegal Argument Exception ( ""A non-null class must be provided"" )  ;  } modules . clear (  )  ;  modules . add ( DEFAULT_MODULE_MEDIATOR )  ;  debug Schema . add ( first Class )  ;  //noinspection  Constant Conditions if  ( additional Classes != null )  {      Collections . add All ( debug Schema, additional Classes )  ;  } return this ; }"
5483,"public com . anychart . core . axes .  Circular fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
5484,"public com . anychart . standalones .  Labels Factory container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
5485,"Node create For (  Node loop,  Node init,  Node test,  Node incr,  Node body ) { if  ( init . get Type (  )  ==  Token . LET )  {     // rewrite ""for  ( let i=s ;  i < N ;  i++ )  .  .  . "" as      // ""let  ( i=s )  { for  (  ;  i < N ;  i++ )  .  .  . "" so that ""s"" is evaluated     // outside the scope of the for .       Node .  Scope let =  Node .  Scope . split Scope (  (  Node .  Scope )  loop )  ;      let . set Type (  Token . LET )  ;      let . add Children To Back ( init )  ;      let . add Child To Back ( create Loop (  (  Node .  Jump )  loop, LOOP_FOR, body, test, new  Node (  Token . EMPTY ) , incr )  )  ;      return let ;  } return create Loop (  (  Node .  Jump )  loop, LOOP_FOR, body, test, init, incr )  ; }"
5486,public static int get App Id ( int uid ) { return uid % PER_USER_RANGE ; }
5487,"public static void draw Single Text (  Canvas canvas,  Paint paint,  Rect rect,  String value ) { canvas . draw Text ( value,  Draw Utils . get Text Center X ( rect . left, rect . right, paint ) ,  Draw Utils . get Text Center Y ( rect . center Y (  ) , paint ) , paint )  ; }"
5488,public void set Root Id (  String media Id ) { root Id = media Id ; }
5489,"public com . anychart . core . utils .  Margin margin (  ) { return new com . anychart . core . utils .  Margin ( js Base + "" . margin (  ) "" )  ; }"
5490,"public void middle Y (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . middle Y (  )  ; "" )  ; }"
5491,public  String get Log Tag (  ) { return null ; }
5492,public  String get Host (  ) { synchronized  ( lock )  {     return host ;  }}
5493,public  Color State List get Progress Background Tint List (  ) { log Progress Bar Tint Warning (  )  ;  return get Support Progress Background Tint List (  )  ; }
5494,public static  Memory Gauge Collector get Instance (  ) { return instance ; }
5495,private static  Inet Address bytes To Inet Address ( byte [  ]  addr ) { try {     return  Inet Address . get By Address ( addr )  ;  } catch  (  Unknown Host Exception e )  {     throw new  Assertion Error ( e )  ;  }}
5496,"public boolean is Indexing (  String field ) { not Null ( field, error Message ( ""field can not be null"", VE_IS_INDEXING_NULL_FIELD )  )  ;  return indexing Service . is Indexing ( field )  ; }"
5497,void invalidate Cache (  ) { m Checked Opacity = false ;  m Checked Stateful = false ; }
5498,public void set Status Bar Scrim ( @ Nullable  Drawable drawable ) { m Status Bar Scrim Skin Attr = 0 ;  set Status Bar Scrim Inner ( drawable )  ; }
5499,public void truncate ( int new Size ) { if  ( size <= new Size )      return ;  for  ( int i = new Size ;  i < size ;  i++ )  {     keys [ i ]  = null ;      values [ i ]  = null ;  } size = new Size ; }
5500,"public com . anychart . core . lineargauge . pointers .  Thermometer bulb Radius (  String radius ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bulb Radius ( %s )  ; "", wrap Quotes ( radius )  )  )  ;  return this ; }"
5501,"private com . google . protobuf .  Single Field Builder V3<com . facebook . buck . remoteexecution . proto .  Worker Info, com . facebook . buck . remoteexecution . proto .  Worker Info .  Builder, com . facebook . buck . remoteexecution . proto .  Worker Info Or Builder> get Worker Info Field Builder (  ) { if  ( worker Info Builder_ == null )  {     worker Info Builder_ = new com . google . protobuf .  Single Field Builder V3<com . facebook . buck . remoteexecution . proto .  Worker Info, com . facebook . buck . remoteexecution . proto .  Worker Info .  Builder, com . facebook . buck . remoteexecution . proto .  Worker Info Or Builder> ( get Worker Info (  ) , get Parent For Children (  ) , is Clean (  )  )  ;      worker Info_ = null ;  } return worker Info Builder_ ; }"
5502,public static void clear User ID (  ) {  Analytics User ID Store . set User ID ( null )  ; }
5503,"public void min Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Height (  )  ; "" )  ; }"
5504,"public  Launched Process launch Command Process ( boolean buckd Enabled,  Immutable Map< String,  String> environment Overrides,  List< String> command )  throws  Exception{  Immutable Map< String,  String> environment = override System Environment ( buckd Enabled, environment Overrides )  ;   Process Executor Params params =  Process Executor Params . builder (  )  . set Command ( command )  . set Environment ( environment )  . set Directory ( dest Path . resolve ( relative Working Dir )  . to Absolute Path (  )  )  . build (  )  ;  return process Executor . launch Process ( params )  ; }"
5505,public  Contact get Contact (  ) { return contact ; }
5506,public  Init Command set Fs ( FS fs ) { this . fs = fs ;  return this ; }
5507,"private static int translate Attr Id (  String attr Name, X Resources orig Res ) {  String orig Package = orig Res . m Package Name ;  int orig Attr Id = 0 ;  try {     orig Attr Id = orig Res . get Identifier ( attr Name, ""attr"", orig Package )  ;  } catch  (  Not Found Exception e )  {      Xposed Bridge . log ( "" Attribute "" + attr Name + "" not found in original resources"" )  ;  } return orig Attr Id ; }"
5508,"public  Awd Properties read Properties (  Sparse Array< Short> expected )  throws IO Exception{ //  Determine the length of the properties final long props Length = read Unsigned Int (  )  ;  final long end Position = m Position + props Length ;  //  Skip properties if null is passed if  ( expected == null )  {     if  (  Raj Log . is Debug Enabled (  )  )           Raj Log . d ( ""   Skipping property values . "" )  ;      skip ( props Length )  ;  } final  Awd Properties props = new  Awd Properties (  )  ;  //  No properties to read if  ( props Length == 0 )      return props ;  short prop Key ;  long prop Length ;  //  Read the properties, skip the remaining values if an error is encountered while  ( m Position < end Position )  {     prop Key =  ( short )  read Unsigned Short (  )  ;      prop Length = read Unsigned Int (  )  ;      if  ( m Position + prop Length > end Position )  {          Raj Log . e ( "" Unexpected properties length .   Properties attemped to read past total properties length . "" )  ;          if  ( end Position > m Position )              skip ( end Position - m Position )  ;          return props ;      }     if  ( expected . index Of Key ( prop Key )  > -1 )  {         props . put ( prop Key, parse Attr Value ( expected . get ( prop Key ) , prop Length )  )  ;      } else {         skip ( prop Length )  ;      } } return props ; }"
5509,public int get Screen Width (  ) { return screen Width_ ; }
5510,public  Gson Builder serialize Nulls (  ) { this . serialize Nulls = true ;  return this ; }
5511,public boolean is Visible (  ) { return m Polyline Options . is Visible (  )  ; }
5512,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
5513,"public static  Immutable Bi Map< Source Path,  Path> resolve Duplicate Relative Paths (  Immutable Sorted Set< Source Path> source Paths,  Source Path Resolver Adapter resolver ) { //  This serves a dual purpose - it keeps track of whether a particular relative path had been // assigned to a  Source Path and how many times a particular relative path had been seen .   Multiset< Path> assigned Paths =  Hash Multiset . create (  )  ;   Immutable Bi Map .  Builder< Source Path,  Path> builder =  Immutable Bi Map . builder (  )  ;   List< Source Path> conflicts = new  Array List<> (  )  ;  for  (  Source Path source Path : source Paths )  {      Path relative Path = resolver . get Relative Path ( source Path )  ;      if  ( !assigned Paths . contains ( relative Path )  )  {         builder . put ( source Path, relative Path )  ;          assigned Paths . add ( relative Path )  ;      } else {         conflicts . add ( source Path )  ;      } } for  (  Source Path conflict : conflicts )  {      Path relative Path = resolver . get Relative Path ( conflict )  ;       Path parent =  More Paths . get Parent Or Empty ( relative Path )  ;       String extension =  More Paths . get File Extension ( relative Path )  ;       String name =  More Paths . get Name Without Extension ( relative Path )  ;      while  ( true )  {          String Builder candidate Name = new  String Builder ( name )  ;          candidate Name . append ( '-' )  ;          int suffix = assigned Paths . count ( relative Path )  ;          candidate Name . append ( suffix )  ;          if  ( !extension . is Empty (  )  )  {             candidate Name . append ( ' . ' )  ;              candidate Name . append ( extension )  ;          }          Path candidate = parent . resolve ( candidate Name . to String (  )  )  ;          if  ( !assigned Paths . contains ( candidate )  )  {             assigned Paths . add ( candidate )  ;              builder . put ( conflict, candidate )  ;              break ;          } else {             assigned Paths . add ( relative Path )  ;          }     } } return builder . build (  )  ; }"
5514,"private synchronized void log ( int log Type,  String msg,  Object .  .  .  args ) { if  ( settings . get Log Level (  )  ==  Log Level . NONE )  {     return ;  }  String tag = get Tag (  )  ;   String message = create Message ( msg, args )  ;  int method Count = get Method Count (  )  ;  log Top Border ( log Type, tag )  ;  log Header Content ( log Type, tag, method Count )  ;  //get bytes of message with system's default charset  ( which is UTF-8 for  Android )  byte [  ]  bytes = message . get Bytes (  )  ;  int length = bytes . length ;  if  ( length <= CHUNK_SIZE )  {     if  ( method Count > 0 )  {         log Divider ( log Type, tag )  ;      }     log Content ( log Type, tag, message )  ;      log Bottom Border ( log Type, tag )  ;      return ;  } if  ( method Count > 0 )  {     log Divider ( log Type, tag )  ;  } for  ( int i = 0 ;  i < length ;  i += CHUNK_SIZE )  {     int count =  Math . min ( length - i, CHUNK_SIZE )  ;      //create a new  String with system's default charset  ( which is UTF-8 for  Android )      log Content ( log Type, tag, new  String ( bytes, i, count )  )  ;  } log Bottom Border ( log Type, tag )  ; }"
5515,"public com . anychart . core . stock . scrollerseries .  Step Area stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5516,"public com . anychart . charts .  Venn stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
5517,public static  Choreographer Compat get Instance (  ) { if  ( s Instance == null )  {     s Instance = new  Choreographer Compat Impl (  )  ;  } return s Instance ; }
5518,public long max Update Index (  ) { return max Update Index ; }
5519,public  Builder clear Should Try Larger Worker On Oom (  ) { should Try Larger Worker On Oom_ = false ;  on Changed (  )  ;  return this ; }
5520,public void set Json Prefix (  String json Prefix ) { this . json Prefix = json Prefix ; }
5521,"public com . anychart . charts .  Pie margin (  String value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
5522,"public static bt Rigid Body get Instance ( final long swig C Ptr, boolean owner ) { if  ( swig C Ptr == 0 )      return null ;  bt Rigid Body result = get Instance ( swig C Ptr )  ;  if  ( result == null )      result = new bt Rigid Body ( swig C Ptr, owner )  ;  return result ; }"
5523,"public static  Spring Chain create ( int main Tension, int main Friction, int attachment Tension, int attachment Friction ) { return new  Spring Chain ( main Tension, main Friction, attachment Tension, attachment Friction )  ; }"
5524,public int get Packed Git Window Size (  ) { return packed Git Window Size ; }
5525,"public com . anychart . core . stock . scrollerseries .  Step Area height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
5526,"public com . anychart . graphics . vector .  Pattern Fill odd Hatch Fill (  ) { return new com . anychart . graphics . vector .  Pattern Fill ( js Base + "" . odd Hatch Fill (  ) "" )  ; }"
5527,public void invoked (  ) { exactly ( 1 )  ; }
5528,"public static  Battery State get (  Context context ) { boolean power Connected = false ;   Float level = null ;  try {     final  Intent Filter ifilter = new  Intent Filter (  Intent . ACTION_BATTERY_CHANGED )  ;      final  Intent battery Status Intent = context . register Receiver ( /*receiver=*/     null, ifilter )  ;      if  ( battery Status Intent != null )  {         power Connected = is Power Connected ( battery Status Intent )  ;          level = get Level ( battery Status Intent )  ;      } } catch  (  Illegal State Exception ex )  {     //  This happens on some devices when the app registers too many receivers .       Logger . get Logger (  )  . e ( "" An error occurred getting battery state . "", ex )  ;  } return new  Battery State ( level, power Connected )  ; }"
5529,"public com . anychart . core . polar . series .  Range Column max Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
5530,public void clear (  ) { cache . clear (  )  ;  http Cache Dao . delete All Http Response (  )  ; }
5531,"public void remove Range ( @ Int Range ( from = 0 )  int position Start, @ Int Range ( from = 0 )  int item Count, @ Nullable  Object payload ) { int initial Count = get Item Count (  )  ;  log . d ( ""remove Range position Start=%s item Count=%s"", position Start, item Count )  ;  if  ( position Start < 0 ||  ( position Start + item Count )  > initial Count )  {     log . e ( "" Cannot remove Range with position Start  Out Of Bounds!"" )  ;      return ;  } else if  ( item Count == 0 || initial Count == 0 )  {     log . w ( ""remove Range  Nothing to delete!"" )  ;      return ;  } T item = null ;  I Expandable parent = null ;  for  ( int position = position Start ;  position < position Start + item Count ;  position++ )  {     //  We remove always at position Start!     item = get Item ( position Start )  ;      if  ( item == null )  {         continue ;      }     if  ( !permanent Delete )  {         //  When removing a range of children, parent is always the same :- )          if  ( parent == null )  {             parent = get Expandable Of ( item )  ;          }         //  Differentiate:  (  Expandable &  Non Expandable with  No parent )  from  (  Non Expandable with a parent )          if  ( parent == null )  {             create Restore Item Info ( position Start, item )  ;          } else {             create Restore Sub Item Info ( parent, item )  ;          }     }     //  Mark hidden the deleted item     item . set Hidden ( true )  ;      //  Unlink items that belongs to the removed header     if  ( unlink On Remove Header && is Header ( item )  )  {         I Header header =  ( I Header )  item ;          //  If item is a  Header, remove linkage from ALL  Sectionable items if exist          List<I Sectionable> sectionable List = get Section Items ( header )  ;          for  ( I Sectionable sectionable : sectionable List )  {             sectionable . set Header ( null )  ;              if  ( payload != null )  {                 notify Item Changed ( get Global Position Of ( sectionable ) ,  Payload . UNLINK )  ;              }         }     }     //  Remove item from internal list     m Items . remove ( position Start )  ;      if  ( permanent Delete && m Original List != null )  {         m Original List . remove ( item )  ;      }     remove Selection ( position )  ;  } //  Notify range removal notify Item Range Removed ( position Start, item Count )  ;  //  Update content of the header linked to first item of the range int header Position = get Global Position Of ( get Header Of ( item )  )  ;  if  ( header Position >= 0 )  {     notify Item Changed ( header Position, payload )  ;  } //  Notify the  Parent about the change if requested if different from header int parent Position = get Global Position Of ( parent )  ;  if  ( parent Position >= 0 && parent Position != header Position )  {     notify Item Changed ( parent Position, payload )  ;  } //  Update empty view if  ( m Update Listener != null && !multi Range && initial Count > 0 && get Item Count (  )  == 0 )  {     m Update Listener . on Update Empty View ( get Main Item Count (  )  )  ;  }}"
5532,"public void render ( com . anychart . charts .  Stock parent Element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . render ( %s )  ; "",  ( parent Element != null )  ? parent Element . get Js Base (  )  : null )  )  ; }"
5533,"public com . anychart . core . stock . scrollerseries .  Range Step Area parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
5534,public double get Max Altitude (  ) { return m Max H ; }
5535,"static  File System new Test File System (  Feature .  .  .  supported Features )  throws IO Exception{  File System fs =  Jimfs . new File System (  Configuration . unix (  )  . to Builder (  )  . set Supported Features (  Object Arrays . concat ( SYMBOLIC_LINKS, supported Features )  )  . build (  )  )  ;   Files . create Directories ( fs . get Path ( ""dir/b/i/j/l"" )  )  ;   Files . create File ( fs . get Path ( ""dir/a"" )  )  ;   Files . create File ( fs . get Path ( ""dir/c"" )  )  ;   Files . create Symbolic Link ( fs . get Path ( ""dir/d"" ) , fs . get Path ( ""b/i"" )  )  ;   Files . create Directory ( fs . get Path ( ""dir/e"" )  )  ;   Files . create Symbolic Link ( fs . get Path ( ""dir/f"" ) , fs . get Path ( ""/dontdelete"" )  )  ;   Files . create File ( fs . get Path ( ""dir/b/g"" )  )  ;   Files . create Symbolic Link ( fs . get Path ( ""dir/b/h"" ) , fs . get Path ( "" .  . /a"" )  )  ;   Files . create File ( fs . get Path ( ""dir/b/i/j/k"" )  )  ;   Files . create Directory ( fs . get Path ( ""/dontdelete"" )  )  ;   Files . create File ( fs . get Path ( ""/dontdelete/a"" )  )  ;   Files . create Directory ( fs . get Path ( ""/dontdelete/b"" )  )  ;   Files . create File ( fs . get Path ( ""/dontdelete/c"" )  )  ;   Files . create Symbolic Link ( fs . get Path ( ""/symlinktodir"" ) , fs . get Path ( ""work/dir"" )  )  ;  return fs ; }"
5536,"public void on End ( boolean result,  Base Slider View target ) { if  ( target . is Error Disappear (  )  == false || result == true )  {     return ;  } for  (  Base Slider View slider : m Image Contents )  {     if  ( slider . equals ( target )  )  {         remove Slider ( target )  ;          break ;      } }}"
5537,"public com . anychart . core . polar . series .  Range Column bounds (  String x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
5538,"private static  Attribute throw Bad Length ( int expected ) { throw new  Parse Exception ( ""bad attribute length ;  expected length "" +  Hex . u4 ( expected )  )  ; }"
5539,public  Builder clear Value (  ) { value_ = get Default Instance (  )  . get Value (  )  ;  on Changed (  )  ;  return this ; }
5540,"private void update Mini Controller ( I Mini Controller controller )  throws  Transient Network Disconnection Exception,  No Connection Exception{ check Connectivity (  )  ;  check Remote Media Player Available (  )  ;  if  ( m Remote Media Player . get Stream Duration (  )  > 0 )  {     controller . set Playback Status ( m State )  ;      controller . set Sub Title ( m Context . get Resources (  )  . get String ( R . string . casting_to_device, m Device Name )  )  ;       Media Metadata mm = get Remote Media Information (  )  . get Metadata (  )  ;      controller . set Title ( mm . get String (  Media Metadata . KEY_TITLE )  )  ;      controller . set Icon ( mm . get Images (  )  . get ( 0 )  . get Url (  )  )  ;  }}"
5541,"public com . anychart . core . polar . series .  Range Column x Scale ( com . anychart . scales .  Base settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
5542,"public static void set Translucent For Image View In Fragment (  Activity activity, @ Int Range ( from = 0, to = 255 )  int status Bar Alpha,  View need Offset View ) { set Translucent For Image View ( activity, status Bar Alpha, need Offset View )  ;  if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . KITKAT &&  Build . VERSION . SDK_INT <  Build . VERSION_CODES . LOLLIPOP )  {     clear Previous Setting ( activity )  ;  }}"
5543,public  Package Info get Package Info For Testing (  String package Name ) { return get Internal Mutable Package Info ( package Name )  ; }
5544,public void set Exception Types (  Ct Class [  ]  types )  throws  Not Found Exception{ declaring Class . check Modify (  )  ;  if  ( types == null || types . length == 0 )  {     method Info . remove Exceptions Attribute (  )  ;      return ;  }  String [  ]  names = new  String [ types . length ]  ;  for  ( int i = 0 ;  i < types . length ;  ++i )  names [ i ]  = types [ i ]  . get Name (  )  ;   Exceptions Attribute ea = method Info . get Exceptions Attribute (  )  ;  if  ( ea == null )  {     ea = new  Exceptions Attribute ( method Info . get Const Pool (  )  )  ;      method Info . set Exceptions Attribute ( ea )  ;  } ea . set Exceptions ( names )  ; }
5545,protected void set Resource (  Bitmap resource ) { view . set Image Bitmap ( resource )  ; }
5546,public  Find Iterable< Result T> projection ( @ Nullable final  Bson projection ) { this . options . projection ( projection )  ;  return this ; }
5547,public void set Progress Bar Style ( int style ) { if  ( m Progress Bar Style != style )  {     m Progress Bar Style = style ;      apply Progress Bar Style (  )  ;  }}
5548,public static int get Height (  Byte Buffer header ) { return  ( 0x FFFF & header . get Short ( ETC2_PKM_HEIGHT_OFFSET )  )  ; }
5549,"public  Async Operation query Unique (  Query<?> query ) { return query Unique ( query, 0 )  ; }"
5550,public void translate Y ( float y Amount ) { y += y Amount ;  if  ( dirty )      return ;  final float [  ]  vertices = this . vertices ;  for  ( int i = 1 ;  i < vertices . length ;  i +=  Sprite . VERTEX_SIZE )  vertices [ i ]  += y Amount ; }
5551,"public void slider Stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . slider Stroke (  )  ; "" )  ; }"
5552,"public void horizontal Spacing (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . horizontal Spacing (  )  ; "" )  ; }"
5553,"public void force Size ( int width, int height ) { bridge . resize Computed ( width, height, get Width (  ) , get Height (  )  )  ; }"
5554,public  String get Env Var Value (  ) { return name ; }
5555,"byte read Byte (  )  throws IO Exception{ m Dex File . read Fully ( tmp Buf, 0, 1 )  ;  return tmp Buf [ 0 ]  ; }"
5556,"Node create Unary ( int node Type,  Node child ) { int child Type = child . get Type (  )  ;  switch ( node Type )  {     case  Token . DELPROP:         {              Node n ;              if  ( child Type ==  Token . NAME )  {                 //  Transform  Delete (  Name ""a"" )                  //  to  Delete (  Bind ( ""a"" ) ,  String ( ""a"" )  )                  child . set Type (  Token . BINDNAME )  ;                   Node left = child ;                   Node right =  Node . new String ( child . get String (  )  )  ;                  n = new  Node ( node Type, left, right )  ;              } else if  ( child Type ==  Token . GETPROP || child Type ==  Token . GETELEM )  {                  Node left = child . get First Child (  )  ;                   Node right = child . get Last Child (  )  ;                  child . remove Child ( left )  ;                  child . remove Child ( right )  ;                  n = new  Node ( node Type, left, right )  ;              } else if  ( child Type ==  Token . GET_REF )  {                  Node ref = child . get First Child (  )  ;                  child . remove Child ( ref )  ;                  n = new  Node (  Token . DEL_REF, ref )  ;              } else {                 n = new  Node (  Token . TRUE )  ;              }             return n ;          }     case  Token . TYPEOF:         if  ( child Type ==  Token . NAME )  {             child . set Type (  Token . TYPEOFNAME )  ;              return child ;          }         break ;      case  Token . BITNOT:         if  ( child Type ==  Token . NUMBER )  {             int value =  Script Runtime . to Int32 ( child . get Double (  )  )  ;              child . set Double ( ~value )  ;              return child ;          }         break ;      case  Token . NEG:         if  ( child Type ==  Token . NUMBER )  {             child . set Double ( -child . get Double (  )  )  ;              return child ;          }         break ;      case  Token . NOT:         {             int status = is Always Defined Boolean ( child )  ;              if  ( status != 0 )  {                 int type ;                  if  ( status == ALWAYS_TRUE_BOOLEAN )  {                     type =  Token . FALSE ;                  } else {                     type =  Token . TRUE ;                  }                 if  ( child Type ==  Token . TRUE || child Type ==  Token . FALSE )  {                     child . set Type ( type )  ;                      return child ;                  }                 return new  Node ( type )  ;              }             break ;          } } return new  Node ( node Type, child )  ; }"
5557,"public void dimiss Pending (  ) { for  ( int position : m Undo Positions )  {     perform Dismiss ( m Undo Views . get ( position ) , position )  ;  }}"
5558,public  Byte Catch List get Catches (  ) { return catches ; }
5559,"public com . anychart . core . gantt .  Data Grid Button enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
5560,"public void merge (  Decoder Counters other ) { decoder Init Count += other . decoder Init Count ;  decoder Release Count += other . decoder Release Count ;  input Buffer Count += other . input Buffer Count ;  skipped Input Buffer Count += other . skipped Input Buffer Count ;  rendered Output Buffer Count += other . rendered Output Buffer Count ;  skipped Output Buffer Count += other . skipped Output Buffer Count ;  dropped Buffer Count += other . dropped Buffer Count ;  max Consecutive Dropped Buffer Count =  Math . max ( max Consecutive Dropped Buffer Count, other . max Consecutive Dropped Buffer Count )  ;  dropped To Keyframe Count += other . dropped To Keyframe Count ; }"
5561,"public void test Trim Leading Whitespace (  ) { assert Equals ( 0, trim Leading Whitespace ( """" . get Bytes ( US_ASCII ) , 0, 0 )  )  ;  assert Equals ( 1, trim Leading Whitespace ( "" "" . get Bytes ( US_ASCII ) , 0, 1 )  )  ;  assert Equals ( 0, trim Leading Whitespace ( ""a "" . get Bytes ( US_ASCII ) , 0, 2 )  )  ;  assert Equals ( 1, trim Leading Whitespace ( "" a "" . get Bytes ( US_ASCII ) , 0, 3 )  )  ;  assert Equals ( 2, trim Leading Whitespace ( ""  a"" . get Bytes ( US_ASCII ) , 0, 3 )  )  ;  assert Equals ( 2, trim Leading Whitespace ( ""  test   "" . get Bytes ( US_ASCII ) , 2, 9 )  )  ; }"
5562,public final  Iterable<N> breadth First ( N start Node ) { return breadth First (  Immutable Set . of ( start Node )  )  ; }
5563,"private void refresh Required Tiles ( boolean load ) { if  ( decoder == null || tile Map == null )  {     return ;  } int sample Size =  Math . min ( full Image Sample Size, calculate In Sample Size ( scale )  )  ;  // resolution than required, or lower res than required but not the base layer, so the base layer is always present .  for  (  Map .  Entry< Integer,  List< Tile>> tile Map Entry : tile Map . entry Set (  )  )  {     for  (  Tile tile : tile Map Entry . get Value (  )  )  {         if  ( tile . sample Size < sample Size ||  ( tile . sample Size > sample Size && tile . sample Size != full Image Sample Size )  )  {             tile . visible = false ;              if  ( tile . bitmap != null )  {                 tile . bitmap . recycle (  )  ;                  tile . bitmap = null ;              }         }         if  ( tile . sample Size == sample Size )  {             if  ( tile Visible ( tile )  )  {                 tile . visible = true ;                  if  ( !tile . loading && tile . bitmap == null && load )  {                      Tile Load Task task = new  Tile Load Task ( this, decoder, tile )  ;                      execute ( task )  ;                  }             } else if  ( tile . sample Size != full Image Sample Size )  {                 tile . visible = false ;                  if  ( tile . bitmap != null )  {                     tile . bitmap . recycle (  )  ;                      tile . bitmap = null ;                  }             }         } else if  ( tile . sample Size == full Image Sample Size )  {             tile . visible = true ;          }     } }}"
5564,"public void exclude Point (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . exclude Point ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ; }"
5565,"public com . anychart . core . gantt .  Time Line Header padding (  String value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
5566,"public void get X Scales (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get X Scales (  )  ; "" )  ; }"
5567,"protected void set Interact Across Profiles App Op (  String package Name, @ Mode int new Mode ) { if  ( !has Permission ( permission . INTERACT_ACROSS_USERS )  || !has Permission ( permission . CONFIGURE_INTERACT_ACROSS_PROFILES )  )  {     throw new  Security Exception ( "" Requires INTERACT_ACROSS_USERS and CONFIGURE_INTERACT_ACROSS_PROFILES permission"" )  ;  } set Interact Across Profiles App Op ( new Mode )  ; }"
5568,"public com . anychart . core . ui .  Crosshair Label parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
5569,public  String [  ]  match (  String value ) { if  ( value == null )  {     return null ;  } for  ( int i = 0 ;  i < patterns . length ;  i++ )  {      Matcher matcher = patterns [ i ]  . matcher ( value )  ;      if  ( matcher . matches (  )  )  {         int count = matcher . group Count (  )  ;           String [  ]  groups = new  String [ count ]  ;          for  ( int j = 0 ;  j < count ;  j++ )  {             groups [ j ]  = matcher . group ( j + 1 )  ;          }         return groups ;      } } return null ; }
5570,public void set Texture Mult ( double value ) { this . texture Mult = value ; }
5571,public static  Option with (  Fragment fragment ) { return new  Boot ( new X Fragment Source ( fragment )  )  ; }
5572,public long get Max Download Retry Time Millis (  ) { return s Max Download Retry ; }
5573,"public void test Incomplete Repository Fork (  ) {  Repository Event Matcher matcher = new  Repository Event Matcher (  )  ;   Fork Payload payload =  Fork Payload . builder (  )  . build (  )  ;   Git Hub Event event =  Git Hub Event . builder (  )  . type (  Git Hub Event Type .  Fork Event )  . payload ( payload )  . build (  )  ;  assert Null ( matcher . get Repository ( event )  )  ;   Repository repository =  Repository . builder (  )  . build (  )  ;  payload = payload . to Builder (  )  . forkee ( repository )  . build (  )  ;  event = event . to Builder (  )  . payload ( payload )  . build (  )  ;  assert Null ( matcher . get Repository ( event )  )  ;  repository = repository . to Builder (  )  . name ( ""repo"" )  . build (  )  ;  payload = payload . to Builder (  )  . forkee ( repository )  . build (  )  ;  event = event . to Builder (  )  . payload ( payload )  . build (  )  ;  assert Null ( matcher . get Repository ( event )  )  ;   User user =  User . builder (  )  . build (  )  ;  repository = repository . to Builder (  )  . owner ( user )  . build (  )  ;  payload = payload . to Builder (  )  . forkee ( repository )  . build (  )  ;  event = event . to Builder (  )  . payload ( payload )  . build (  )  ;  assert Null ( matcher . get Repository ( event )  )  ;  user = user . to Builder (  )  . login ( ""owner"" )  . build (  )  ;  repository = repository . to Builder (  )  . owner ( user )  . build (  )  ;  payload = payload . to Builder (  )  . forkee ( repository )  . build (  )  ;  event = event . to Builder (  )  . payload ( payload )  . build (  )  ;  assert Equals ( repository, matcher . get Repository ( event )  )  ; }"
5574,protected void on Create (  Bundle icicle ) { super . on Create ( icicle )  ;  account Authenticator Response = get Intent (  )  . get Parcelable Extra (  Account Manager . KEY_ACCOUNT_AUTHENTICATOR_RESPONSE )  ;  if  ( account Authenticator Response != null )  {     account Authenticator Response . on Request Continued (  )  ;  }}
5575,public com . facebook . buck . remoteexecution . proto .  Client Job Info Or Builder get Client Job Info Or Builder (  ) { if  ( client Job Info Builder_ != null )  {     return client Job Info Builder_ . get Message Or Builder (  )  ;  } else {     return client Job Info_ == null ? com . facebook . buck . remoteexecution . proto .  Client Job Info . get Default Instance (  )  : client Job Info_ ;  }}
5576,"public com . anychart . charts .  Pareto padding (  String value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, value4 )  )  ;  return this ; }"
5577,public static P Stream Provider as Current (  String level ) { if  (  Globals .  Location Config . use Google Service )      return new  Google Current Location Provider ( level )  ;  else     return new  Current Location Provider ( level )  ; }
5578,"public  Builder put (  Cell Name cell,  String section,  String key,  String value ) { require Cell ( cell )  . put ( section, key, value )  ;  return this ; }"
5579,"public com . anychart . charts .  Sparkline parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
5580,public int get Request Code (  ) { return request Code ; }
5581,"Task< Resp T> run Rpc (  Method Descriptor< Req T,  Resp T> method,  Req T request ) {  Task Completion Source< Resp T> tcs = new  Task Completion Source<> (  )  ;  call Provider . create Client Call ( method )  . add On Complete Listener ( async Queue . get Executor (  ) ,  result -> {      Client Call< Req T,  Resp T> call = result . get Result (  )  ;      call . start ( new  Client Call .  Listener< Resp T> (  )  {         @ Override         public void on Message (  Resp T message )  {             tcs . set Result ( message )  ;          }         @ Override         public void on Close (  Status status,  Metadata trailers )  {             if  ( status . is Ok (  )  )  {                 if  ( !tcs . get Task (  )  . is Complete (  )  )  {                     tcs . set Exception ( new  Firebase Firestore Exception ( "" Received on Close with status OK, but no message . "",  Code . INTERNAL )  )  ;                  }             } else {                 tcs . set Exception ( exception From Status ( status )  )  ;              }         }     }, request Headers (  )  )  ;      call . request ( 2 )  ;      call . send Message ( request )  ;      call . half Close (  )  ;  } )  ;  return tcs . get Task (  )  ; }"
5582,"private boolean filter Object ( T item,  List<T> values ) { //  Stop filter task if cancelled if  ( m Filter Async Task != null && m Filter Async Task . is Cancelled (  )  )  {     return false ;  } //  Skip already filtered items  ( it happens when internal original List )  if  ( m Original List != null &&  ( is Scrollable Header Or Footer ( item )  || values . contains ( item )  )  )  {     return false ;  } //  Start to compose the filtered Items to maintain the order of addition //  It will be discarded if no sub Item will be filtered  List<T> filtered Items = new  Array List<> (  )  ;  filtered Items . add ( item )  ;  //  Filter sub Items boolean filtered = filter Expandable Object ( item, filtered Items )  ;  //  If no sub Item was filtered, fallback to  Normal filter if  ( !filtered )  {     filtered = filter Object ( item, get Filter (  Serializable . class )  )  ;  } if  ( filtered )  {     //  Check if header has to be added too     I Header header = get Header Of ( item )  ;      if  ( headers Shown && has Header ( item )  && !values . contains ( header )  )  {         header . set Hidden ( false )  ;          values . add (  ( T )  header )  ;      }     values . add All ( filtered Items )  ;  } item . set Hidden ( !filtered )  ;  return filtered ; }"
5583,void use Server ( @ Nullable final  Ble Server Manager server ) { this . server Manager = server ; }
5584,public int get Request To Launch Count (  ) { return map Request To Launch To Request Listener . size (  )  ; }
5585,"public com . anychart . charts .  Sparkline margin (  Number value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
5586,"public void show Progress (  ) { m Left Action . set Visibility (  View . GONE )  ;  m Search Progress . set Alpha ( 0 . 0f )  ;  m Search Progress . set Visibility (  View . VISIBLE )  ;   Object Animator . of Float ( m Search Progress, ""alpha"", 0 . 0f, 1 . 0f )  . start (  )  ; }"
5587,void drop Collection (  ) { try {     write Lock . lock (  )  ;      indexing Service . drop All Indices (  )  ;      nitrite Context . drop Collection ( map Store . get Name (  )  )  ;      map Store . get Store (  )  . remove Map ( map Store )  ;  } finally {     write Lock . unlock (  )  ;  }}
5588,public  Scaling Utils .  Scale Type get Actual Image Scale Type (  ) { return m Actual Image Scale Type ; }
5589,"public void test Get Committer (  ) {  Commit commit =  Commit . builder (  )  . build (  )  ;  assert Null (  Commit Utils . get Committer ( commit )  )  ;   Git Commit raw Commit =  Git Commit . builder (  )  . build (  )  ;  commit = commit . to Builder (  )  . commit ( raw Commit )  . build (  )  ;  assert Null (  Commit Utils . get Committer ( commit )  )  ;   Git User user =  Git User . builder (  )  . build (  )  ;  raw Commit = raw Commit . to Builder (  )  . committer ( user )  . build (  )  ;  commit = commit . to Builder (  )  . commit ( raw Commit )  . build (  )  ;  assert Null (  Commit Utils . get Committer ( commit )  )  ;  user = user . to Builder (  )  . name ( ""u1"" )  . build (  )  ;  raw Commit = raw Commit . to Builder (  )  . committer ( user )  . build (  )  ;  commit = commit . to Builder (  )  . commit ( raw Commit )  . build (  )  ;  assert Equals ( ""u1"",  Commit Utils . get Committer ( commit )  )  ;  user = user . to Builder (  )  . name ( ""u2"" )  . build (  )  ;  raw Commit = raw Commit . to Builder (  )  . committer ( user )  . build (  )  ;  commit = commit . to Builder (  )  . commit ( raw Commit )  . build (  )  ;  assert Equals ( ""u2"",  Commit Utils . get Committer ( commit )  )  ; }"
5590,"public  String get No Backup Files Directory Path (  ) { return  Build . VERSION . SDK_INT >= 21 && this . context != null ? abs Path ( this . context . get No Backup Files Dir (  )  )  : """" ; }"
5591,"private void finish Processing If Necessary (  ) { if  ( insns != null )  {     return ;  } insns = unprocessed Insns . finish Processing And Get List (  )  ;  positions =  Position List . make ( insns, position Info )  ;  locals =  Local List . make ( insns )  ;  catches = unprocessed Catches . build (  )  ;  //  Let them be gc'ed .  unprocessed Insns = null ;  unprocessed Catches = null ; }"
5592,"public com . anychart . core . ui .  Chart Scroller outline Stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . outline Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
5593,"public final  Mat22 add ( final  Mat22 B ) { // return new  Mat22 ( ex . add ( B . ex ) , col2 . add ( B . ey )  )  ;   Mat22 m = new  Mat22 (  )  ;  m . ex . x = ex . x + B . ex . x ;  m . ex . y = ex . y + B . ex . y ;  m . ey . x = ey . x + B . ey . x ;  m . ey . y = ey . y + B . ey . y ;  return m ; }"
5594,private void create Velocity Tracker (  Motion Event event ) { if  ( m Velocity Tracker == null )  {     m Velocity Tracker =  Velocity Tracker . obtain (  )  ;  } m Velocity Tracker . add Movement ( event )  ; }
5595,public boolean get Check Loggable (  ) { return this . check Loggable ; }
5596,"public void dynamically Grows Beyond64 Entries (  )  throws IO Exception{ //  Lots of headers need more room! hpack Reader = new  Hpack .  Reader ( bytes In, 16384, 4096 )  ;  //  Dynamic table size update  ( size = 16384 )  .  bytes In . write Byte ( 0x3 F )  ;  bytes In . write Byte ( 0x E1 )  ;  bytes In . write Byte ( 0x7 F )  ;  for  ( int i = 0 ;  i < 256 ;  i++ )  {     //  Literal indexed     bytes In . write Byte ( 0x40 )  ;      //  Literal name  ( len = 10 )      bytes In . write Byte ( 0x0a )  ;      bytes In . write Utf8 ( ""custom-foo"" )  ;      //  Literal value  ( len = 13 )      bytes In . write Byte ( 0x0d )  ;      bytes In . write Utf8 ( ""custom-header"" )  ;  } hpack Reader . read Headers (  )  ;  assert That ( hpack Reader . header Count )  . is Equal To ( 256 )  ; }"
5597,"private void set Overlay (  Field Path path, @ Nullable  Value value ) {  Map< String,  Object> current Level = overlay Map ;  for  ( int i = 0 ;  i < path . length (  )  - 1 ;  ++i )  {      String current Segment = path . get Segment ( i )  ;       Object current Value = current Level . get ( current Segment )  ;      if  ( current Value instanceof  Map )  {         //  Re-use a previously created map         current Level =  (  Map< String,  Object> )  current Value ;      } else if  ( current Value instanceof  Value &&  (  (  Value )  current Value )  . get Value Type Case (  )  ==  Value .  Value Type Case . MAP_VALUE )  {         //  Convert the existing  Protobuf  Map Value into a  Java map          Map< String,  Object> next Level = new  Hash Map<> (  (  (  Value )  current Value )  . get Map Value (  )  . get Fields Map (  )  )  ;          current Level . put ( current Segment, next Level )  ;          current Level = next Level ;      } else {         //  Create an empty hash map to represent the current nesting level          Map< String,  Object> next Level = new  Hash Map<> (  )  ;          current Level . put ( current Segment, next Level )  ;          current Level = next Level ;      } } current Level . put ( path . get Last Segment (  ) , value )  ; }"
5598,"public static void warm Decoder Info Cache (  String mime Type, boolean secure, boolean tunneling ) { try {     get Decoder Infos ( mime Type, secure, tunneling )  ;  } catch  (  Decoder Query Exception e )  {     //  Codec warming is best effort, so we can swallow the exception .       Log . e ( TAG, "" Codec warming failed"", e )  ;  }}"
5599,"public com . anychart . standalones .  Color Range title (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . title ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5600,"public  Completable increment (  Rate Limit limit ) { return get Rate Limits (  )  . default If Empty ( EMPTY_RATE_LIMITS )  . flat Map Completable (  stored Limits ->  Observable . just ( stored Limits . get Limits Or Default ( limit . limiter Key (  ) , new Counter (  )  )  )  . filter (  counter -> !is Limit Expired ( counter, limit )  )  . switch If Empty (  Observable . just ( new Counter (  )  )  )  . map (  current -> {      Counter incremented = increment ( current )  ;      return  Rate Limit Proto .  Rate Limit . new Builder ( stored Limits )  . put Limits ( limit . limiter Key (  ) , incremented )  . build (  )  ;  } )  . flat Map Completable (  a -> storage Client . write ( a )  . do On Complete (  (  )  -> init In Mem Cache ( a )  )  )  )  ; }"
5601,"public com . anychart . core . ui .  Color Range color Range (  ) { return new com . anychart . core . ui .  Color Range ( js Base + "" . color Range (  ) "" )  ; }"
5602,public float get Fps (  ) { return m Fps Counter . get Fps (  )  ; }
5603,public void reset (  ) { current Base Ms = 0 ; }
5604,public  Array List< Float> get Rr Intervals (  ) { return rr Intervals ; }
5605,"public void set In Sample Size ( @ Int Range ( from = 1, to =  Character . MAX_VALUE )  int in Sample Size ) { if  ( in Sample Size < 1 || in Sample Size >  Character . MAX_VALUE )  {     this . in Sample Size = 1 ;  } else {     this . in Sample Size =  ( char )  in Sample Size ;  }}"
5606,"public void show Star Rating (  Activity activity, final  Countly Star Rating .  Rating Callback callback ) { if  ( !is Initialized (  )  )  {     L . e ( "" Can't call this function before init has been called"" )  ;      return ;  } if  ( callback == null )  {     ratings (  )  . show Star Rating ( activity, null )  ;  } else {     ratings (  )  . show Star Rating ( activity, new  Star Rating Callback (  )  {         @ Override         public void on Rate ( int rating )  {             callback . on Rate ( rating )  ;          }         @ Override         public void on Dismiss (  )  {             callback . on Dismiss (  )  ;          }     } )  ;  }}"
5607,public int get Transition Resolution (  ) { return m Transition Resolution ; }
5608,public float get Min Frame (  ) { return lottie Drawable . get Min Frame (  )  ; }
5609,"public com . anychart . core . ui .  Label label (  String index ) { return new com . anychart . core . ui .  Label (  String . format (  Locale . US, js Base + "" . label ( %s ) "", wrap Quotes ( index )  )  )  ; }"
5610,"public com . anychart . core . stock . scrollerseries .  Stick min Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", height )  )  ;  return this ; }"
5611,"public com . anychart . core . ui .  Timeline text Marker (  Number index, com . anychart . enums .  Gantt Date Time Markers value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Marker ( %s, %s )  ; "", index,  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
5612,"void test End Process (  )  throws  Exception{ assert Timeout ( of Millis ( 5000 ) ,  (  )  -> {     //  Instantiate a new executor and start a new 'null' task  .  .  .      final var executor = new  Thread Async Executor (  )  ;      final var result = new  Object (  )  ;      when ( task . call (  )  )  . then Answer (  i -> {          Thread . sleep ( 1500 )  ;          return result ;      } )  ;      final var async Result = executor . start Process ( task )  ;      assert Not Null ( async Result )  ;      assert False ( async Result . is Completed (  )  )  ;      try {         async Result . get Value (  )  ;          fail ( "" Expected  Illegal State Exception when calling  Async Result#get Value on a non-completed task"" )  ;      } catch  (  Illegal State Exception e )  {         assert Not Null ( e . get Message (  )  )  ;      }     assert Same ( result, executor . end Process ( async Result )  )  ;      verify ( task, times ( 1 )  )  . call (  )  ;      assert True ( async Result . is Completed (  )  )  ;      //  Calling end process a second time while already finished should give the same result     assert Same ( result, executor . end Process ( async Result )  )  ;      verify No More Interactions ( task )  ;  } )  ; }"
5613,"Code Block get Modifiable Module Method Expression (  Class Name requesting Class ) { return  Code Block . of ( ""return $L"", get Expression ( requesting Class )  )  ; }"
5614,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
5615,"public  Maps Card set Location (  Lat Lng [  ]  lat Lngs, @ Not Null  String .  .  .  titles ) { multiple Marker = true ;  single Marker = false ;  lat Lng Array = lat Lngs ;  marker Title Array = titles ;  return this ; }"
5616,"public com . anychart . core . utils .  Bounds bounds (  ) { return new com . anychart . core . utils .  Bounds ( js Base + "" . bounds (  ) "" )  ; }"
5617,"private  Translated Payload Meta Data translate Single Frame Payload Length (  Byte Buffer buffer,  Opcode optcode, int old Payloadlength, int maxpacketsize, int old Realpacketsize )  throws  Invalid Frame Exception,  Incomplete Exception,  Limit Exceeded Exception{ int payloadlength = old Payloadlength ;  int realpacketsize = old Realpacketsize ;  if  ( optcode ==  Opcode . PING || optcode ==  Opcode . PONG || optcode ==  Opcode . CLOSING )  {     log . trace ( "" Invalid frame: more than 125 octets"" )  ;      throw new  Invalid Frame Exception ( ""more than 125 octets"" )  ;  } if  ( payloadlength == 126 )  {     // additional length bytes     realpacketsize += 2 ;      translate Single Frame Check Packet Size ( maxpacketsize, realpacketsize )  ;      byte [  ]  sizebytes = new byte [ 3 ]  ;      sizebytes [ 1 ]  = buffer . get (  )  ;      sizebytes [ 2 ]  = buffer . get (  )  ;      payloadlength = new  Big Integer ( sizebytes )  . int Value (  )  ;  } else {     // additional length bytes     realpacketsize += 8 ;      translate Single Frame Check Packet Size ( maxpacketsize, realpacketsize )  ;      byte [  ]  bytes = new byte [ 8 ]  ;      for  ( int i = 0 ;  i < 8 ;  i++ )  {         bytes [ i ]  = buffer . get (  )  ;      }     long length = new  Big Integer ( bytes )  . long Value (  )  ;      translate Single Frame Check Length Limit ( length )  ;      payloadlength =  ( int )  length ;  } return new  Translated Payload Meta Data ( payloadlength, realpacketsize )  ; }"
5618,public  Builder blocks Legacy ( boolean blocks Legacy ) { this . blocks Legacy = blocks Legacy ;  return this ; }
5619,"public void append Frames ( int count, short .  .  .  channel Levels ) {  Assertions . check State ( !built )  ;  for  ( int i = 0 ;  i < count ;  i += channel Count )  {     for  ( short channel Level : channel Levels )  {         buffer . put ( channel Level )  ;      } }}"
5620,"public static void request Permissions (  Cordova Plugin plugin, int request Code,  String [  ]  permissions ) { plugin . cordova . request Permissions ( plugin, request Code, permissions )  ; }"
5621,protected V get ( K key ) { return get Map (  )  . get ( key )  ; }
5622,"public  Void call (  )  throws  Exception{ if  ( cancel )      return null ;   Asynchronous Asset Loader async Loader =  (  Asynchronous Asset Loader )  loader ;  if  ( !dependencies Loaded )  {     dependencies = async Loader . get Dependencies ( asset Desc . file Name, resolve ( loader, asset Desc ) , asset Desc . params )  ;      if  ( dependencies != null )  {         remove Duplicates ( dependencies )  ;          manager . inject Dependencies ( asset Desc . file Name, dependencies )  ;      } else {         // if we have no dependencies, we load the async part of the task immediately .          async Loader . load Async ( manager, asset Desc . file Name, resolve ( loader, asset Desc ) , asset Desc . params )  ;          async Done = true ;      } } else {     async Loader . load Async ( manager, asset Desc . file Name, resolve ( loader, asset Desc ) , asset Desc . params )  ;      async Done = true ;  } return null ; }"
5623,"public  Immersion Bar bar Color ( @ Color Res int bar Color ) { return this . bar Color Int (  Context Compat . get Color ( m Activity, bar Color )  )  ; }"
5624,"public static void enable QQ Log Output (  String package Name,  Class Loader class Loader ) { if  ( ""com . tencent . mobileqq"" . equals ( package Name )  )  {     try {          Reflect . on ( ""com . tencent . qphone . base . util . Q Log"", class Loader )  . set ( ""UIN_REPORTLOG_LEVEL"", 100 )  ;      } catch  (  Reflect Exception e )  {     // ignore     } }}"
5625,"String obj C Generated Header Name (  ) { return  Swift Attribute Parser . get Swift Obj C Generated Header Name ( target Node (  ) ,  Optional . of ( module Name (  )  )  )  ; }"
5626,"public  Named Node calc Next Node After Post (  Node complete Server Data,  Named Node start Post, boolean reverse,  Index index ) { return this . write Tree . calc Next Node After Post ( this . tree Path, complete Server Data, start Post, reverse, index )  ; }"
5627,public  Builder set Title ( @ String Res int title ) { m Title = m Context . get String ( title )  ;  return this ; }
5628,"public  Tag create Default Tag (  ) { if  (  Supported File Format . FLAC . get Filesuffix (  )  . equals ( file . get Name (  )  . substring ( file . get Name (  )  . last Index Of ( ' . ' )  )  )  )  {     return new  Flac Tag (  Vorbis Comment Tag . create New Tag (  ) , new  Array List< Metadata Block Data Picture> (  )  )  ;  } else if  (  Supported File Format . OGG . get Filesuffix (  )  . equals ( file . get Name (  )  . substring ( file . get Name (  )  . last Index Of ( ' . ' )  )  )  )  {     return  Vorbis Comment Tag . create New Tag (  )  ;  } else if  (  Supported File Format . MP4 . get Filesuffix (  )  . equals ( file . get Name (  )  . substring ( file . get Name (  )  . last Index Of ( ' . ' )  )  )  )  {     return new  Mp4 Tag (  )  ;  } else if  (  Supported File Format . M4 A . get Filesuffix (  )  . equals ( file . get Name (  )  . substring ( file . get Name (  )  . last Index Of ( ' . ' )  )  )  )  {     return new  Mp4 Tag (  )  ;  } else if  (  Supported File Format . M4 P . get Filesuffix (  )  . equals ( file . get Name (  )  . substring ( file . get Name (  )  . last Index Of ( ' . ' )  )  )  )  {     return new  Mp4 Tag (  )  ;  } else if  (  Supported File Format . WMA . get Filesuffix (  )  . equals ( file . get Name (  )  . substring ( file . get Name (  )  . last Index Of ( ' . ' )  )  )  )  {     return new  Asf Tag (  )  ;  } else if  (  Supported File Format . WAV . get Filesuffix (  )  . equals ( file . get Name (  )  . substring ( file . get Name (  )  . last Index Of ( ' . ' )  )  )  )  {     return new  Wav Tag (  )  ;  } else if  (  Supported File Format . RA . get Filesuffix (  )  . equals ( file . get Name (  )  . substring ( file . get Name (  )  . last Index Of ( ' . ' )  )  )  )  {     return new  Real Tag (  )  ;  } else if  (  Supported File Format . RM . get Filesuffix (  )  . equals ( file . get Name (  )  . substring ( file . get Name (  )  . last Index Of ( ' . ' )  )  )  )  {     return new  Real Tag (  )  ;  } else if  (  Supported File Format . AIF . get Filesuffix (  )  . equals ( file . get Name (  )  . substring ( file . get Name (  )  . last Index Of ( ' . ' )  )  )  )  {     return new  Aiff Tag (  )  ;  } else {     throw new  Runtime Exception ( "" Unable to create default tag for this file format"" )  ;  }}"
5629,"public void to Json (  Boolean stringify ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Json ( %s )  ; "", stringify )  )  ; }"
5630,"public void start Disappearing Mount Item (  Mount Item mount Item ) { final int index = m Mount Items . key At ( m Mount Items . index Of Value ( mount Item )  )  ;  start Unmount Disappearing Item ( index, mount Item )  ; }"
5631,"public com . anychart . core . stock . scrollerseries . OHLC height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
5632,"private static void binary Sort (  Object [  ]  a, int lo, int hi, int start ) { if  ( DEBUG )      assert lo <= start && start <= hi ;  if  ( start == lo )      start++ ;  for  (  ;  start < hi ;  start++ )  {     @ Suppress Warnings ( ""unchecked"" )   Comparable< Object> pivot =  (  Comparable )  a [ start ]  ;      //  Set left  ( and right )  to the index where a [ start ]   ( pivot )  belongs     int left = lo ;      int right = start ;      if  ( DEBUG )          assert left <= right ;      /*			 *  Invariants: pivot >= all in  [ lo, left )  .  pivot < all in  [ right, start )  . 			 */     while  ( left < right )  {         int mid =  ( left + right )  >>> 1 ;          if  ( pivot . compare To ( a [ mid ]  )  < 0 )              right = mid ;          else             left = mid + 1 ;      }     if  ( DEBUG )          assert left == right ;      /*			 *  The invariants still hold: pivot >= all in  [ lo, left )  and pivot < all in  [ left, start ) , so pivot belongs at left .   Note			 * that if there are elements equal to pivot, left points to the first slot after them -- that's why this sort is stable . 			 *  Slide elements over to make room to make room for pivot . 			 */     //  The number of elements to move     int n = start - left ;      //  Switch is just an optimization for arraycopy in default case     switch ( n )  {         case 2:             a [ left + 2 ]  = a [ left + 1 ]  ;          case 1:             a [ left + 1 ]  = a [ left ]  ;              break ;          default:              System . arraycopy ( a, left, a, left + 1, n )  ;      }     a [ left ]  = pivot ;  }}"
5633,"public com . anychart . core . utils .  Quarter height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
5634,"public com . google . firebase . perf . v1 .  Perf Session build (  ) { com . google . firebase . perf . v1 .  Perf Session .  Builder session Metric = com . google . firebase . perf . v1 .  Perf Session . new Builder (  )  . set Session Id ( session Id )  ;  //  If gauge collection is enabled, enable gauge collection verbosity .  if  ( is Gauge And Event Collection Enabled )  {     session Metric . add Session Verbosity (  Session Verbosity . GAUGES_AND_SYSTEM_EVENTS )  ;  } return session Metric . build (  )  ; }"
5635,"public static byte [  ]  read Stream (  Input Stream fin )  throws IO Exception{ byte [  ]  [  ]  bufs = new byte [ 8 ]  [  ]  ;  int bufsize = 4096 ;  for  ( int i = 0 ;  i < 8 ;  ++i )  {     bufs [ i ]  = new byte [ bufsize ]  ;      int size = 0 ;      int len = 0 ;      do {         len = fin . read ( bufs [ i ] , size, bufsize - size )  ;          if  ( len >= 0 )              size += len ;          else {             byte [  ]  result = new byte [ bufsize - 4096 + size ]  ;              int s = 0 ;              for  ( int j = 0 ;  j < i ;  ++j )  {                  System . arraycopy ( bufs [ j ] , 0, result, s, s + 4096 )  ;                  s = s + s + 4096 ;              }              System . arraycopy ( bufs [ i ] , 0, result, s, size )  ;              return result ;          }     } while  ( size < bufsize )  ;      bufsize *= 2 ;  } throw new IO Exception ( ""too much data"" )  ; }"
5636,"public com . anychart . charts .  Polar padding (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
5637,"public static void main (  String [  ]  args )  throws IO Exception{ if  ( args . length == 1 )  {      Webserver web = new  Webserver ( args [ 0 ]  )  ;      web . run (  )  ;  } else      System . err . println ( "" Usage: java javassist . tools . web .  Webserver <port number>"" )  ; }"
5638,public static  Resizable Widget Collection get (  ) { if  ( static Collection == null )  {     static Collection = new  Resizable Widget Collection (  )  ;  } return static Collection ; }
5639,public int get Item View Type ( int position ) { return  Math . round (  ( float )   App . SCREEN_WIDTH /  ( float )  m List . get ( position )  . get Height (  )  * 10f )  ; }
5640,"public com . anychart . charts .  Venn padding (  String value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
5641,"public com . anychart . charts .  Sparkline select Marquee Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5642,"public void invalidate Node Layout ( int tag ) {  React Shadow Node node = m UI Implementation . resolve Shadow Node ( tag )  ;  if  ( node == null )  {     F Log . w (  React Constants . TAG, "" Warning : attempted to dirty a non-existent react shadow node .  react Tag="" + tag )  ;      return ;  } node . dirty (  )  ;  m UI Implementation . dispatch View Updates ( -1 )  ; }"
5643,public long get Created (  ) { return this . created ; }
5644,private void init_simple_card (  ) { // Create a  Card  Card card = new  Card ( get Activity (  )  )  ;  // Create a  Card Header  Card Header header = new  Card Header ( get Activity (  )  )  ;  // Set the header title header . set Title ( get String ( R . string . demo_header_basetitle )  )  ;  card . add Card Header ( header )  ;  // Set the card inner text card . set Title ( get String ( R . string . demo_card_basetitle )  )  ;  // Set card in the card View  Card View card View =  (  Card View )  get Activity (  )  . find View By Id ( R . id . carddemo_card_id )  ;  card View . set Card ( card )  ; }
5645,"public com . anychart . charts .  Circular Gauge container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
5646,"protected  List< Node> extract ( int offset,  Cursor cursor ) {  List< Node> notes = new  Array List<> (  )  ;  if  ( cursor == null || cursor . get Count (  )  <= offset )  {     return notes ;  } cursor . move To First (  )  ;  cursor . move To Position ( offset )  ;  do {      Node note = new  Node (  )  ;      note . key = cursor . get Long ( cursor . get Column Index ( m DB Message . PRIMARY_KEY )  )  ;      for  ( int i = 0 ;  i < m DB Message . LABEL_NAME . size (  )  ;  i++ )  {         note . array List . add ( cursor . get Column Index ( m DB Message . LABEL_NAME . get ( i )  )  )  ;      }     notes . add ( note )  ;  } while  ( cursor . move To Next (  )  )  ;  cursor . close (  )  ;  return notes ; }"
5647,"public com . anychart . core . annotations .  Plot Controller from Xml (  String config ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . from Xml ( %s )  ; "", wrap Quotes ( config )  )  )  ;  return this ; }"
5648,"public static T parse Object ( byte [  ]  bytes, int offset, int len,  Charset charset,  Type clazz,  Feature .  .  .  features ) { return  ( T )  parse Object ( bytes, offset, len, charset, clazz,  Parser Config . global, null, DEFAULT_PARSER_FEATURE, features )  ; }"
5649,protected void set Delays (  ) { SHORT_DELAY_MS = get Short Delay (  )  ;  SMALL_DELAY_MS = SHORT_DELAY_MS * 5 ;  MEDIUM_DELAY_MS = SHORT_DELAY_MS * 10 ;  LONG_DELAY_MS = SHORT_DELAY_MS * 200 ; }
5650,public  To String Helper omit Null Values (  ) { omit Null Values = true ;  return this ; }
5651,"public static  String get Game Request ID (  ) { if  (  Gaming Payload . payload Data == null )  {     return null ;  } return  Gaming Payload . payload Data . get Or Default ( KEY_GAME_REQUEST_ID, null )  ; }"
5652,"public void render ( com . anychart . charts .  Stock parent Element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . render ( %s )  ; "",  ( parent Element != null )  ? parent Element . get Js Base (  )  : null )  )  ; }"
5653,"private void safe Animate Camera ( final  Google Map map, final  Camera Update camera Update ) { try {     map . animate Camera ( camera Update )  ;  } catch  (  Illegal State Exception e )  {     map . set On Map Loaded Callback ( new  Google Map .  On Map Loaded Callback (  )  {         @ Override         public void on Map Loaded (  )  {             map . animate Camera ( camera Update )  ;          }     } )  ;  }}"
5654,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
5655,public int color BG (  ) { return theme . color BG (  )  ; }
5656,protected int index Of ( final long type ) { if  ( has ( type )  )      for  ( int i = 0 ;  i < attributes . size ;  i++ )  if  ( attributes . get ( i )  . type == type )          return i ;  return -1 ; }
5657,public float get Z (  ) { return this . position . z ; }
5658,public  Object on Last Fragment Finish (  ) { return null ; }
5659,public static KJDB create (  ) { return create ( false )  ; }
5660,"public static  String get Identifier (  Label extension Label,  String exported Name ) { return  String . format ( ""%s:%s"", extension Label . get Canonical Form (  ) , exported Name )  ; }"
5661,public  Immutable Sorted Set< Abs Path> get Known Roots (  ) { return  Immutable Sorted Set . ordered By (  Abs Path . comparator (  )  . reversed (  )  )  . add All ( get Cell Paths By Root Cell External Name (  )  . values (  )  . stream (  )  . collect (  Immutable List . to Immutable List (  )  )  )  . add (  Abs Path . of ( get Cell Path Or Throw (  Optional . empty (  )  )  )  )  . build (  )  ; }
5662,"public com . anychart . core . annotations .  Fibonacci Base bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
5663,public void set Listener (  Listener listener ) { this . listener = listener ; }
5664,"public void set Cursor Position ( int cursor Position ) { if  ( cursor Position < 0 )      throw new  Illegal Argument Exception ( ""cursor Position must be >= 0"" )  ;  clear Selection (  )  ;  cursor =  Math . min ( cursor Position, text . length (  )  )  ; }"
5665,"public static void request Focus (  Section Context c,  String section Key,  Focus Type focus Type ) { final  Section scoped Section = c . get Section Scope (  )  ;  final  Section Tree section Tree = c . get Section Tree (  )  ;  if  ( scoped Section == null || section Tree == null )  {     return ;  } final  String global Key = scoped Section . get Global Key (  )  + section Key ;  switch ( focus Type )  {     case START:         section Tree . request Focus Start ( global Key )  ;          break ;      case END:         section Tree . request Focus End ( global Key )  ;          break ;  }}"
5666,public static  Immutable Sorted Set<E> of ( E element ) { throw new  Unsupported Operation Exception (  )  ; }
5667,"static JSON Object invalid Feature Geometry Collection Invalid Geometry (  )  throws  Exception{ return new JSON Object ( ""{\n"" + ""  \""type\"":\"" Feature Collection\"",\n"" + ""  \""features\"": [ \n"" + ""    {\n"" + ""      \""type\"":\"" Feature\"",\n"" + ""      \""geometry\"":{\n"" + ""        \""type\"":\"" Geometry Collection\"",\n"" + ""        \""geometries\"": [ \n"" + ""          {\n"" + ""            \""type\"":\"" Point\"",\n"" + ""            \""shark\"": [ \n"" + ""              100 . 0,\n"" + ""              0 . 0\n"" + ""             ] \n"" + ""          },\n"" + ""          {\n"" + ""            \""type\"":\"" Line String\"",\n"" + ""            \""coordinates\"": [ \n"" + ""               [ \n"" + ""                101 . 0,\n"" + ""                0 . 0\n"" + ""               ] ,\n"" + ""               [ \n"" + ""                102 . 0,\n"" + ""                1 . 0\n"" + ""               ] \n"" + ""             ] \n"" + ""          }\n"" + ""         ] \n"" + ""      },\n"" + ""      \""properties\"":{\n"" + ""        \""prop0\"":\""value0\""\n"" + ""      }\n"" + ""    }\n"" + ""   ] \n"" + ""}"" )  ; }"
5668,"private void check Multibindings (  ) {  Immutable Set< Annotation Mirror> multibinding Annotations =  Multibinding Annotations . for Element ( element )  ;  switch ( allows Multibindings )  {     case NO_MULTIBINDINGS:         for  (  Annotation Mirror annotation : multibinding Annotations )  {             report . add Error ( binding Elements ( ""cannot have multibinding annotations"" ) , element, annotation )  ;          }         break ;      case ALLOWS_MULTIBINDINGS:         if  ( multibinding Annotations . size (  )  > 1 )  {             for  (  Annotation Mirror annotation : multibinding Annotations )  {                 report . add Error ( binding Elements ( ""cannot have more than one multibinding annotation"" ) , element, annotation )  ;              }         }         break ;  } // TODO ( ronshapiro ) : move this into  Provides Method Validator if  ( binding Annotation . equals (  Provides . class )  )  {      Annotation Mirror binding Annotation Mirror = get Annotation Mirror ( element, binding Annotation )  . get (  )  ;      boolean uses Provides Type = false ;      for  (  Executable Element member : binding Annotation Mirror . get Element Values (  )  . key Set (  )  )  {         uses Provides Type |= member . get Simple Name (  )  . content Equals ( ""type"" )  ;      }     if  ( uses Provides Type && !multibinding Annotations . is Empty (  )  )  {         report . add Error ( ""@ Provides . type cannot be used with multibinding annotations"", element )  ;      } }}"
5669,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
5670,"public com . anychart . charts .  Scatter text Marker (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Marker ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5671,"static  Stack Trace Element [  ]  parse Stack Trace ( @ Non Null  Rx Java Assembly Exception exception, @ Nullable  String [  ]  base Packages ) {  String [  ]  lines = exception . stacktrace (  )  . split ( NEW_LINE_REGEX )  ;   List< Stack Trace Element> stack Trace = new  Array List< Stack Trace Element> (  )  ;  boolean filter In = false ;  for  (  String line : lines )  {     filter In = filter In || base Packages == null || base Packages . length == 0 || starts With Any ( line, base Packages )  ;      if  ( filter In )  {          Stack Trace Element element = parse Stack Trace Line ( line )  ;          if  ( element != null )  {             stack Trace . add ( element )  ;          }     } } return stack Trace . to Array ( new  Stack Trace Element [ 0 ]  )  ; }"
5672,"public com . anychart . standalones .  Project Timeline background Fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background Fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
5673,"protected void draw Ripple (  Canvas canvas, int width, int height ) { if  ( m Ripple Radius > 0 )  {     m Paint . set Color ( m Accent Color )  ;      canvas . draw Circle ( width / 2f, height / 2f, m Ripple Radius, m Paint )  ;  }}"
5674,"public void basic_managed (  ) { realm . begin Transaction (  )  ;   Mutable Realm Integer Types c1 = realm . create Object (  Mutable Realm Integer Types . class )  ;   Mutable Realm Integer Types c2 = realm . create Object (  Mutable Realm Integer Types . class )  ;  realm . commit Transaction (  )  ;  realm . begin Transaction (  )  ;  test Basic ( c1 . column Nullable Mutable Realm Integer, c2 . column Nullable Mutable Realm Integer )  ;  realm . commit Transaction (  )  ; }"
5675,"public final  Bitmap remove (  String key ) { if  ( key == null )  {     throw new  Null Pointer Exception ( ""key == null"" )  ;  } synchronized  ( this )  {      Bitmap previous = map . remove ( key )  ;      if  ( previous != null )  {         size -= size Of ( key, previous )  ;      }     return previous ;  }}"
5676,public  Input Stream new File Input Stream (  Path path Relative To Project Root )  throws IO Exception{ byte [  ]  contents = file Contents . get ( normalize Path To Project Root ( path Relative To Project Root )  )  ;  return new  Byte Array Input Stream ( contents )  ; }
5677,public void set Position ( X Axis Position pos ) { m Position = pos ; }
5678,public  Array List<A Texture> get Texture List (  ) { return m Texture List ; }
5679,public boolean is Rotate Supported (  ) { return true ; }
5680,String get Char Name ( char char Index ) { if  ( char Index >= std Names . length )  {     return glyph Names [ char Index - std Names . length ]  ;  } return super . get Char Name ( char Index )  ; }
5681,"public void add Changed Package ( int sequence Number,  String package Name ) { if  ( sequence Number < 0 )  {     return ;  } sequence Number Changed Packages Map . put ( sequence Number, package Name )  ; }"
5682,public boolean matches All But Type (  Item other ) { return  ( start Pc == other . start Pc )  &&  ( length == other . length )  &&  ( index == other . index )  && name . equals ( other . name )  ; }
5683,"public com . anychart . core . stock . scrollerseries .  Range Spline Area color Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
5684,"protected void draw Path (  Canvas canvas,  List< Float> points,  Paint paint, boolean circular ) {  Path path = new  Path (  )  ;  int height = canvas . get Height (  )  ;  int width = canvas . get Width (  )  ;  float [  ]  temp Draw Points ;  if  ( points . size (  )  < 4 )  {     return ;  } temp Draw Points = calculate Draw Points ( points . get ( 0 ) , points . get ( 1 ) , points . get ( 2 ) , points . get ( 3 ) , height, width )  ;  path . move To ( temp Draw Points [ 0 ] , temp Draw Points [ 1 ]  )  ;  path . line To ( temp Draw Points [ 2 ] , temp Draw Points [ 3 ]  )  ;  int length = points . size (  )  ;  for  ( int i = 4 ;  i < length ;  i += 2 )  {     if  (  ( points . get ( i - 1 )  < 0 && points . get ( i + 1 )  < 0 )  ||  ( points . get ( i - 1 )  > height && points . get ( i + 1 )  > height )  )  {         continue ;      }     temp Draw Points = calculate Draw Points ( points . get ( i - 2 ) , points . get ( i - 1 ) , points . get ( i ) , points . get ( i + 1 ) , height, width )  ;      if  ( !circular )  {         path . move To ( temp Draw Points [ 0 ] , temp Draw Points [ 1 ]  )  ;      }     path . line To ( temp Draw Points [ 2 ] , temp Draw Points [ 3 ]  )  ;  } if  ( circular )  {     path . line To ( points . get ( 0 ) , points . get ( 1 )  )  ;  } canvas . draw Path ( path, paint )  ; }"
5685,public  Table Info get Table Info (  ) { return table Info ; }
5686,"public com . anychart . core . ui .  Label label (  Number index ) { return new com . anychart . core . ui .  Label (  String . format (  Locale . US, js Base + "" . label ( %s ) "", index )  )  ; }"
5687,"public void on Registration Id (  String registration Id,  Countly Messaging Mode mode,  Countly Messaging Provider provider ) { if  ( !get Consent (  Countly Feature Names . push )  )  {     return ;  } connection Queue_ . token Session ( registration Id, mode, provider )  ; }"
5688,"public com . anychart . core . axes .  Circular Ticks parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
5689,"public void atr Period (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . atr Period (  )  ; "" )  ; }"
5690,"public void right (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . right (  )  ; "" )  ; }"
5691,public int get Actual Image Height Px (  ) { if  (  Closeable Reference . is Valid ( m Image Reference )  )  {     return m Image Reference . get (  )  . get Height (  )  ;  } return -1 ; }
5692,"public static void add Exception (  Data Source ds,  Runtime Exception e ) { exceptions . put ( ds, e )  ; }"
5693,"public com . anychart . charts .  Radar x Minor Grid (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Minor Grid ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
5694,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
5695,static  Object get Index Object ( double d ) { int i =  ( int )  d ;  if  ( i == d )  {     return new  Integer ( i )  ;  } return to String ( d )  ; }
5696,public  Quaternion sub (  Quaternion quaternion ) { this . x -= quaternion . x ;  this . y -= quaternion . y ;  this . z -= quaternion . z ;  this . w -= quaternion . w ;  return this ; }
5697,"public com . anychart . graphics . vector .  Hatch Fill append Transformation Matrix (  Number m00,  Number m10,  Number m01,  Number m11,  Number m02,  Number m12 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . append Transformation Matrix ( %s, %s, %s, %s, %s, %s )  ; "", m00, m10, m01, m11, m02, m12 )  )  ;  return this ; }"
5698,"public void clear Preference (  String preference ) {  Application application =  (  Application )  firebase App . get Application Context (  )  ;   Shared Preferences .  Editor preferences Editor = application . get Shared Preferences ( PREFERENCES_PACKAGE_NAME,  Context . MODE_PRIVATE )  . edit (  )  ;  preferences Editor . remove ( preference )  ;  preferences Editor . apply (  )  ; }"
5699,"protected final void on Mutation (  ) { // from changing the model in a different controller if  ( is Debug Validation Enabled (  )  && !currently In Interceptors )  {     throw new  Immutable Model Exception ( this, get Position ( first Controller Added To, this )  )  ;  } if  ( controller To Stage To != null )  {     controller To Stage To . set Staged Model ( this )  ;  }}"
5700,public double read Double (  ) { return  Double . long Bits To Double ( read Long (  )  )  ; }
5701,private static void remove Scope And Children From Map (  Scope Node scope ) { MAP_KEY_TO_SCOPE . remove ( scope . get Name (  )  )  ;  scope . close (  )  ;  for  (  Scope Node child Scope : scope . children Scopes . values (  )  )  {     remove Scope And Children From Map ( child Scope )  ;  }}
5702,private void signal Connected (  ) { lock . lock (  )  ;  try {     connect Condition . signal All (  )  ;  } finally {     lock . unlock (  )  ;  }}
5703,"public void get Stat (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Stat ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
5704,"public com . anychart . charts .  Pert margin (  Number value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
5705,public void put ( E e )  throws  Interrupted Exception{ check Not Null ( e )  ;  final  Reentrant Lock lock = this . lock ;  lock . lock Interruptibly (  )  ;  try {     while  ( count == items . length )  not Full . await (  )  ;      insert ( e )  ;  } finally {     lock . unlock (  )  ;  }}
5706,public com . google . protobuf .  Byte String get Job Id Bytes (  ) { java . lang .  Object ref = job Id_ ;  if  ( ref instanceof  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      job Id_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
5707,"public  Task< Data Snapshot> get Value (  Query query ) {  Task Completion Source< Data Snapshot> source = new  Task Completion Source<> (  )  ;  this . schedule Now ( new  Runnable (  )  {     @ Override     public void run (  )  {         //  Always check active-listener in-memory caches first .   These are always at least as         // up to date as the persistence cache .           Node server Value = server Sync Tree . get Server Value ( query . get Spec (  )  )  ;          if  ( server Value != null )  {             source . set Result (  Internal Helpers . create Data Snapshot ( query . get Ref (  ) ,  Indexed Node . from ( server Value )  )  )  ;              return ;          }         server Sync Tree . set Query Active ( query . get Spec (  )  )  ;          connection . get ( query . get Path (  )  . as List (  ) , query . get Spec (  )  . get Params (  )  . get Wire Protocol Params (  )  )  . add On Complete Listener (  (  (  Default Run Loop )  ctx . get Run Loop (  )  )  . get Executor Service (  ) , new  On Complete Listener< Object> (  )  {             @ Override             public void on Complete ( @ Non Null  Task< Object> task )  {                 if  ( !task . is Successful (  )  )  {                     operation Logger . info ( ""get for query "" + query . get Path (  )  + "" falling back to disk cache after error: "" + task . get Exception (  )  . get Message (  )  )  ;                       Data Snapshot cached = server Sync Tree . persistence Server Cache ( query )  ;                      if  ( !cached . exists (  )  )  {                         source . set Exception ( task . get Exception (  )  )  ;                      } else {                         source . set Result ( cached )  ;                      }                 } else {                      Node server Node =  Node Utilities .  Node From JSON ( task . get Result (  )  )  ;                      post Events ( server Sync Tree . apply Server Overwrite ( query . get Path (  ) , server Node )  )  ;                      source . set Result (  Internal Helpers . create Data Snapshot ( query . get Ref (  ) ,  Indexed Node . from ( server Node, query . get Spec (  )  . get Index (  )  )  )  )  ;                  }                 server Sync Tree . set Query Inactive ( query . get Spec (  )  )  ;              }         } )  ;      } } )  ;  return source . get Task (  )  ; }"
5708,"public void lock In Cache (  Ct Class c ) { super . cache Ct Class ( c . get Name (  ) , c, false )  ; }"
5709,public static boolean allow Extend (  ) { return support Extend ; }
5710,"public void refresh (  ) { for  (  Map .  Entry< Class<? extends  Realm Model>,  Column Info> entry : class To Column Info Map . entry Set (  )  )  {      Column Info new Column Info = mediator . create Column Info ( entry . get Key (  ) , os Schema Info )  ;      entry . get Value (  )  . copy From ( new Column Info )  ;  }}"
5711,"public void selectable (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . selectable (  )  ; "" )  ; }"
5712,"public static  Attested Key Pair create (  Key Pair key Pair,  Certificate [  ]  attestation Record ) { return new  Attested Key Pair ( key Pair, attestation Record )  ; }"
5713,"static  Lookup Element create (  String qualified Name,  Project project,  Insert Handler< Lookup Element> insert Handler )  throws  Incorrect Operation Exception{ if  ( CACHE . contains Key ( qualified Name )  )  {     return CACHE . get ( qualified Name )  ;  }  Psi Class type Cls =  Psi Search Utils . get Instance (  )  . find Class ( project, qualified Name )  ;  if  ( type Cls != null )  {      Spec Lookup Element lookup Element = new  Spec Lookup Element ( type Cls, insert Handler )  ;      CACHE . put ( qualified Name, lookup Element )  ;      return lookup Element ;  } //  This is a dummy class, we don't want to cache it .  type Cls =  Java Psi Facade . get Instance ( project )  . get Element Factory (  )  . create Class (  Litho Class Names . short Name ( qualified Name )  )  ;  return new  Spec Lookup Element ( type Cls, insert Handler )  ; }"
5714,static  Throwable get Root Cause (  Throwable throwable ) {  Throwable cause = throwable ;  while  ( cause instanceof  Wraps Exception )  {     cause = cause . get Cause (  )  ;  } return cause ; }
5715,public  String to String (  ) { return canonical Form ; }
5716,T concat (  Iterable<T> elements ) { return null ; }
5717,"public  Block Header get Block By ID ( int block ID ) { if  ( block Data List . index Of Key ( block ID )  < 0 )      throw new  Runtime Exception ( "" Block parsing referenced non existant id: "" + block ID )  ;  return block Data List . get ( block ID )  ; }"
5718,public  Edit Text Dialog Builder set Placeholder (  String placeholder ) { this . m Placeholder = placeholder ;  return this ; }
5719,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
5720,public void update Download (  File Info file Info ) {  Video Info info = _find ( file Info . get Name (  )  )  ;  if  ( info == null )  {     return ;  } info . set Download Status ( file Info . get Status (  )  )  ;  info . set Total Size ( file Info . get Total Bytes (  )  )  ;  info . set Loaded Size ( file Info . get Load Bytes (  )  )  ;  info . set Download Speed ( file Info . get Speed (  )  )  ;  _update Download ( info )  ; }
5721,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
5722,static  Comparison Result different With Description (  Fact .  .  .  facts ) { return new  Comparison Result (  Immutable List . copy Of ( facts )  )  ; }
5723,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings max Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
5724,public void set String Visitor (  Visitor visitor ) { string Visitor = visitor ; }
5725,public void set Change Alpha When Disable ( boolean change Alpha When Disable ) { get Alpha View Helper (  )  . set Change Alpha When Disable ( change Alpha When Disable )  ; }
5726,"public com . anychart . core . ui .  Legend Item font Weight (  String weight ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Weight ( %s )  ; "", wrap Quotes ( weight )  )  )  ;  return this ; }"
5727,public void set Image Asset Delegate (  Image Asset Delegate asset Delegate ) { this . image Asset Delegate = asset Delegate ;  if  ( image Asset Manager != null )  {     image Asset Manager . set Delegate ( asset Delegate )  ;  }}
5728,"public void set Transform (  Vector2 position, float angle ) { jni Set Transform ( addr, position . x, position . y, angle )  ; }"
5729,"protected void draw Boundary (  Canvas canvas, int width, int height ) { m Paint . set Color ( m Back Color )  ;  canvas . draw Rect ( 0, 0, width, height, m Paint )  ;  m Paint . set Color ( m Boundary Color )  ;  canvas . draw Line ( 0, 0, width, 0, m Paint )  ;  canvas . draw Line ( 0, height - DIVIDING_LINE_SIZE, width, height - DIVIDING_LINE_SIZE, m Paint )  ; }"
5730,public void set Double Tap To Zoom Enabled ( boolean enabled ) { m Double Tap To Zoom Enabled = enabled ; }
5731,public boolean is Validating (  ) { return m Async Validation Task != null && m Async Validation Task . get Status (  )  !=  Async Task .  Status . FINISHED ; }
5732,public static long increment Component State Update Sync Count (  ) { return s Component Triggered Sync State Update Count . add And Get ( 1 )  ; }
5733,public  Builder set Report Behaviour ( boolean enable ) { if  ( enable )  {     m Behaviour Mask |= BEHAVIOUR_REPORT ;  } else {     m Behaviour Mask &= ~BEHAVIOUR_REPORT ;  } return this ; }
5734,"public static  Error Code from Native Error (  String type, int error Code ) {  Error Code [  ]  error Codes = values (  )  ;  for  ( int i = 0 ;  i < error Codes . length ;  i++ )  {      Error Code error = error Codes [ i ]  ;      if  ( error . int Value (  )  == error Code && error . type . equals ( type )  )  {         return error ;      } }  Realm Log . warn (  String . format (  Locale . US, "" Unknown error code: '%s:%d'"", type, error Code )  )  ;  return UNKNOWN ; }"
5735,public  Account get Account (  ) { return m Account ; }
5736,public void remove Table (  String tag String ) { tables . remove ( tag String )  ; }
5737,"public com . anychart . core . lineargauge . pointers .  Tank fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
5738,"public void allow Point Settings (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . allow Point Settings (  )  ; "" )  ; }"
5739,"public  Builder estimated Viewport Count ( int estimated Viewport Count ) { if  ( estimated Viewport Count <= 0 )  {     throw new  Illegal Argument Exception ( "" Estimated viewport count must be > 0: "" + estimated Viewport Count )  ;  } m Estimated Viewport Count = estimated Viewport Count ;  return this ; }"
5740,"public void should Not Deadlock (  )  throws IO Exception{  Project Workspace workspace =  Test Data Helper . create Project Workspace For Scenario ( this, ""deadlock"", temp )  ;  workspace . set Up (  )  ;   Process Result result = workspace . run Buck Command ( ""test"", ""//:suite"" )  ;  result . assert Success (  )  ; }"
5741,public static  Immutable List< Immutable Sorted Set< Flavor>> generate Thin Flavors (  Sorted Set< Flavor> flavors ) {  Set< Flavor> platform Free Flavors = flavors . stream (  )  . filter (  flavor -> ! Apple Platform . is Platform Flavor ( flavor )  )  . collect (  Collectors . to Set (  )  )  ;   Immutable List .  Builder< Immutable Sorted Set< Flavor>> thin Targets Builder =  Immutable List . builder (  )  ;  for  (  Flavor flavor : flavors )  {     if  (  Apple Platform . is Platform Flavor ( flavor )  )  {         thin Targets Builder . add (  Immutable Sorted Set . < Flavor>natural Order (  )  . add All ( platform Free Flavors )  . add ( flavor )  . build (  )  )  ;      } } return thin Targets Builder . build (  )  ; }
5742,"public com . anychart . core . ui .  Timeline baseline Bar Height (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . baseline Bar Height ( %s )  ; "", value )  )  ;  return this ; }"
5743,"Faulting Set<E> get Objects In Context (  Object Context other Context ) { if  ( !get Context (  )  . is Compatible With Context ( other Context )  )  {     throw new  Runtime Exception ( "" Contexts not compatible .   Ensure that they share the same persistence store . "" )  ;  }  List<E> related Objects = null ;  if  ( !is Fault (  )  )  {     related Objects = new  Array List<E> (  )  ;      for  ( E related Object : this )  {         related Objects . add (  ( E )  other Context . object With ID ( related Object . get ID (  )  )  )  ;      } }  Faulting Set<E> related Objects Set = new  Faulting Set<E> ( other Context . object With ID ( parent . get ID (  )  ) , relationship, related Objects )  ;  return related Objects Set ; }"
5744,public void set Handle Cancel As Neutral (  Boolean handle Cancel As Neutral ) { this . m Handle Cancel As Neutral = handle Cancel As Neutral ; }
5745,"public  Generated Model Suffix View Suffix_ on Visibility Changed (  On Model Visibility Changed Listener< Generated Model Suffix View Suffix_,  Generated Model Suffix View> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
5746,"public  Criteria add Child (  Class<?> clazz,  String alias,  String join,  Restrictions on ) {  Criteria criteria = new  Criteria (  )  ;  criteria . clazz = clazz ;  criteria . alias = alias ;  criteria . parent = this ;  criteria . root = this . get Root (  )  ;  criteria . join = join ;  criteria . on = on ;  if  ( criteria . on != null )  {     criteria . on . criteria = criteria ;  } criteria . table =  Mapping . get Instance (  )  . get Table Name ( clazz )  ;  criteria . result Column = join == null || CROSS_JOIN . equals ( join )  || LEFT_OUTER_JOIN . equals ( join )  ;  this . child = criteria ;  return criteria ; }"
5747,"public static void put ( @ Non Null final  String key, @ Nullable final  Serializable value, final int save Time ) { put ( key, value, save Time, get Default Cache Disk Utils (  )  )  ; }"
5748,"public com . anychart . charts .  Pareto width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
5749,"public com . anychart . scales .  Date Time With Calendar skip Holidays (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . skip Holidays ( %s )  ; "", enabled )  )  ;  return this ; }"
5750,"public void get Ticks (  Number from Pix,  Number to Pix,  String unit,  Number count ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Ticks ( %s, %s, %s, %s )  ; "", from Pix, to Pix, wrap Quotes ( unit ) , count )  )  ; }"
5751,public byte get Major Version (  ) { return MAJOR_VERSION ; }
5752,"private  Producer< Closeable Reference< Closeable Image>> new Bitmap Cache Get To Decode Sequence (  Producer< Encoded Image> input Producer ) { if  (  Fresco Systrace . is Tracing (  )  )  {      Fresco Systrace . begin Section ( "" Producer Sequence Factory#new Bitmap Cache Get To Decode Sequence"" )  ;  }  Decode Producer decode Producer = m Producer Factory . new Decode Producer ( input Producer )  ;   Producer< Closeable Reference< Closeable Image>> result = new Bitmap Cache Get To Bitmap Cache Sequence ( decode Producer )  ;  if  (  Fresco Systrace . is Tracing (  )  )  {      Fresco Systrace . end Section (  )  ;  } return result ; }"
5753,boolean is Family Token (  ) { return ! String Extensions . is Null Or Blank ( m Family Client Id )  ; }
5754,protected void remove On Subscriptions Changed Listener (  On Subscriptions Changed Listener listener ) { listeners . remove ( listener )  ; }
5755,"public void set Double (  String field Name, double value ) { proxy State . get Realm$realm (  )  . check If Valid (  )  ;  long column Key = proxy State . get Row$realm (  )  . get Column Key ( field Name )  ;  proxy State . get Row$realm (  )  . set Double ( column Key, value )  ; }"
5756,public  Drawable get As Drawable (  String key ) { if  ( get As Binary ( key )  == null )  {     return null ;  } return  Utils . bitmap2 Drawable (  Utils .  Bytes2 Bimap ( get As Binary ( key )  )  )  ; }
5757,"public com . anychart . charts .  Waterfall select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5758,"public  Provider get Identity Provider (  ) {  String native Provider = os Credentials . get Provider (  )  ;   String id = identity Provider . get Id (  )  ;  //  Sanity check - ensure nothing changed in the OS if  ( native Provider . equals ( id )  )  {     return identity Provider ;  } else {     throw new  Assertion Error ( "" The provider from the  Object  Store differs from the one in  Realm . "" )  ;  }}"
5759,public void reset (  ) { fragment . reset (  )  ;  current Sample Index = 0 ;  current Track Run Index = 0 ;  current Sample In Track Run = 0 ;  first Sample To Output Index = 0 ; }
5760,"public void min Font Size (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Font Size (  )  ; "" )  ; }"
5761,"public E await Valid ( @ Non Null final E response )  throws  Request Failed Exception,  Invalid Data Exception,  Device Disconnected Exception,  Bluetooth Disabled Exception,  Invalid Request Exception{ await ( response )  ;  if  ( !response . is Valid (  )  )  {     throw new  Invalid Data Exception ( response )  ;  } return response ; }"
5762,"public void certificate Created ( long start Time Ms, long finish Time Ms ) { certificates Generated . increment And Get (  )  ;  certificate Generation Time Ms . add And Get ( finish Time Ms - start Time Ms )  ;  // record the timestamp of the first certificate generation first Certificate Generated Timestamp . compare And Set ( 0 L,  System . current Time Millis (  )  )  ; }"
5763,"public void calculate Weights (  ) { distribution . clear (  )  ;   Vertex Attributes attributes = mesh . get Vertex Attributes (  )  ;  int indices Count = mesh . get Num Indices (  )  ;  int vertex Count = mesh . get Num Vertices (  )  ;  int vertex Size =  ( short )   ( attributes . vertex Size / 4 ) , position Offset =  ( short )   ( attributes . find By Usage (  Usage .  Position )  . offset / 4 )  ;  float [  ]  vertices = new float [ vertex Count * vertex Size ]  ;  mesh . get Vertices ( vertices )  ;  if  ( indices Count > 0 )  {     short [  ]  indices = new short [ indices Count ]  ;      mesh . get Indices ( indices )  ;      //  Calculate the  Area     for  ( int i = 0 ;  i < indices Count ;  i += 3 )  {         int p1 Offset = indices [ i ]  * vertex Size + position Offset, p2 Offset = indices [ i + 1 ]  * vertex Size + position Offset, p3 Offset = indices [ i + 2 ]  * vertex Size + position Offset ;          float x1 = vertices [ p1 Offset ] , y1 = vertices [ p1 Offset + 1 ] , z1 = vertices [ p1 Offset + 2 ] , x2 = vertices [ p2 Offset ] , y2 = vertices [ p2 Offset + 1 ] , z2 = vertices [ p2 Offset + 2 ] , x3 = vertices [ p3 Offset ] , y3 = vertices [ p3 Offset + 1 ] , z3 = vertices [ p3 Offset + 2 ]  ;          float area =  Math . abs (  ( x1 *  ( y2 - y3 )  + x2 *  ( y3 - y1 )  + x3 *  ( y1 - y2 )  )  / 2f )  ;          distribution . add ( new  Triangle ( x1, y1, z1, x2, y2, z2, x3, y3, z3 ) , area )  ;      } } else {     //  Calculate the  Area     for  ( int i = 0 ;  i < vertex Count ;  i += vertex Size )  {         int p1 Offset = i + position Offset, p2 Offset = p1 Offset + vertex Size, p3 Offset = p2 Offset + vertex Size ;          float x1 = vertices [ p1 Offset ] , y1 = vertices [ p1 Offset + 1 ] , z1 = vertices [ p1 Offset + 2 ] , x2 = vertices [ p2 Offset ] , y2 = vertices [ p2 Offset + 1 ] , z2 = vertices [ p2 Offset + 2 ] , x3 = vertices [ p3 Offset ] , y3 = vertices [ p3 Offset + 1 ] , z3 = vertices [ p3 Offset + 2 ]  ;          float area =  Math . abs (  ( x1 *  ( y2 - y3 )  + x2 *  ( y3 - y1 )  + x3 *  ( y1 - y2 )  )  / 2f )  ;          distribution . add ( new  Triangle ( x1, y1, z1, x2, y2, z2, x3, y3, z3 ) , area )  ;      } } //  Generate cumulative distribution distribution . generate Normalized (  )  ; }"
5764,"public void validate Request Intent (  ) { if  ( m Request == null )  {      Logger . v ( TAG, "" Request item is null, so it returns to caller"" )  ;      throw new  Illegal Argument Exception ( "" Request is null"" )  ;  } if  (  Text Utils . is Empty ( m Request . get Authority (  )  )  )  {     throw new  Illegal Argument Exception ( "" Authority is null"" )  ;  } if  (  Text Utils . is Empty ( m Request . get Resource (  )  )  )  {     throw new  Illegal Argument Exception ( "" Resource is null"" )  ;  } if  (  Text Utils . is Empty ( m Request . get Client Id (  )  )  )  {     throw new  Illegal Argument Exception ( "" Client Id is null"" )  ;  } if  (  Text Utils . is Empty ( m Request . get Redirect Uri (  )  )  )  {     throw new  Illegal Argument Exception ( "" Redirect Uri is null"" )  ;  }}"
5765,"private static void assert Approximate Element Count Guess (  Bloom Filter<?> bf, int size Guess ) { assert That ( bf . approximate Element Count (  )  )  . is At Least (  ( long )   ( size Guess * 0 . 99 )  )  ;  assert That ( bf . approximate Element Count (  )  )  . is At Most (  ( long )   ( size Guess * 1 . 01 )  )  ; }"
5766,"public static  Unsigned Long value Of (  String string, int radix ) { return from Long Bits (  Unsigned Longs . parse Unsigned Long ( string, radix )  )  ; }"
5767,public final void set TSUID (  String tsuid ) { this . tsuid = tsuid ; }
5768,public boolean is Merge Tx (  ) { return  ( flags & FLAG_MERGE_TX )  != 0 ; }
5769,public void unregister Custom Command Receiver (  Command Receiver command Receiver ) { custom Command Receivers . remove ( command Receiver )  ; }
5770,"public void row Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . row Fill (  )  ; "" )  ; }"
5771,public  Transport Context with Priority (  Priority priority ) { return builder (  )  . set Backend Name ( get Backend Name (  )  )  . set Priority ( priority )  . set Extras ( get Extras (  )  )  . build (  )  ; }
5772,"public void debug Print (  Print Writer out,  String prefix ) { annotate Entries ( prefix, out, null )  ; }"
5773,"private static  Audio Routes Info new Audio Route Info ( @ Nullable  String bluetooth Device Name ) {  Parcel p =  Parcel . obtain (  )  ;   Text Utils . write To Parcel ( bluetooth Device Name, p, /* parcelable Flags= */ 0 )  ;  p . set Data Position ( 0 )  ;  return  Audio Routes Info . CREATOR . create From Parcel ( p )  ; }"
5774,"public com . anychart . core . ui .  Scroll Bar vertical Scroll Bar (  ) { return new com . anychart . core . ui .  Scroll Bar ( js Base + "" . vertical Scroll Bar (  ) "" )  ; }"
5775,"public com . anychart . charts .  Sparkline last Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . last Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
5776,"public static void put ( @ Non Null final  String key, @ Nullable final byte [  ]  value, final int save Time ) { put ( key, value, save Time, get Default Cache Disk Utils (  )  )  ; }"
5777,"private void draw Left And Top (  Canvas canvas,  Rect show Rect,  Rect rect,  Table Config config ) { canvas . save (  )  ;  canvas . clip Rect (  Math . max ( this . rect . left, rect . left ) , show Rect . top, show Rect . left, rect . bottom )  ;   Paint paint = config . get Paint (  )  ;  if  ( config . get Left And Top Background Color (  )  != 0 )  {     paint . set Style (  Paint .  Style . FILL )  ;      paint . set Color ( config . get Left And Top Background Color (  )  )  ;      canvas . draw Rect ( rect, paint )  ;  } if  ( config . get Table Grid Format (  )  != null )  {     config . get Sequence Grid Style (  )  . fill Paint ( paint )  ;      config . get Table Grid Format (  )  . draw Left And Top Grid ( canvas, rect, paint )  ;  }  Left Top Draw Format format = config . get Left Top Draw Format (  )  ;  if  ( format != null )  {     format . set Image Size ( rect . width (  ) , rect . height (  )  )  ;      config . get Left Top Draw Format (  )  . draw ( canvas, rect, null, config )  ;  } canvas . restore (  )  ; }"
5778,"static boolean is Algorithm Present (  String algorithm ) {  Set< String> cipher Set =  Security . get Algorithms ( "" Cipher"" )  ;  for  (  String source : cipher Set )  {     //  Standard names are not case-sensitive .      // http://docs . oracle . com/javase/8/docs/technotes/guides/security/ Standard Names . html      String target = algorithm . to Upper Case (  Locale . ROOT )  ;      if  ( source . equals Ignore Case ( target )  )  {         return true ;      } } return false ; }"
5779,"private  String get String ( long download Id,  String column Name ) {  Download Manager .  Query query = new  Download Manager .  Query (  )  . set Filter By Id ( download Id )  ;   String result = null ;   Cursor c = null ;  try {     c = download Manager . query ( query )  ;      if  ( c != null && c . move To First (  )  )  {         result = c . get String ( c . get Column Index ( column Name )  )  ;      } } finally {     if  ( c != null )  {         c . close (  )  ;      } } return result ; }"
5780,public static  Worker Platform Type value Of ( int value ) { return for Number ( value )  ; }
5781,public  To String Helper add Value ( char value ) { return add Unconditional Holder (  String . value Of ( value )  )  ; }
5782,"public static  Immutable List< Annotation Mirror> get Map Key Annotations (  Element element ) { return get Annotations Annotated With ( element,  Class Name . get ( ""dagger"", "" Map Key"" )  )  ; }"
5783,public  String get Device Name (  ) { return device Name ; }
5784,"public com . anychart . core . annotations .  Fibonacci Timezones stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5785,"public void ensure Capacity ( int additional Capacity ) { int table Size = table Size ( size + additional Capacity, load Factor )  ;  if  ( key Table . length < table Size )      resize ( table Size )  ; }"
5786,"public com . anychart . charts .  Scatter margin (  String value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, value4 )  )  ;  return this ; }"
5787,"protected UR Iish to UR Iish (  Servlet Context Handler app,  String name )  throws URI Syntax Exception{  String p = app . get Context Path (  )  ;  if  ( !p . ends With ( ""/"" )  && !name . starts With ( ""/"" )  )      p += ""/"" ;  p += name ;  return to UR Iish ( p )  ; }"
5788,"private int find Index (  Class<K> type ) { for  ( int i = 0 ;  i < influencers . size ;  ++i )  {      Influencer influencer = influencers . get ( i )  ;      if  (  Class Reflection . is Assignable From ( type, influencer . get Class (  )  )  )  {         return i ;      } } return -1 ; }"
5789,"public static  String get Log String ( int status Code ) { switch ( status Code )  {     case  Cast Status Codes . APPLICATION_NOT_FOUND:         return ""A requested application could not be found . "" ;      case  Cast Status Codes . APPLICATION_NOT_RUNNING:         return ""A requested application is not currently running . "" ;      case  Cast Status Codes . AUTHENTICATION_FAILED:         return "" Authentication failure . "" ;      case  Cast Status Codes . CANCELED:         return "" An in-progress request has been canceled, most likely because another action has "" + ""preempted it . "" ;      case  Cast Status Codes . ERROR_SERVICE_CREATION_FAILED:         return "" The  Cast  Remote  Display service could not be created . "" ;      case  Cast Status Codes . ERROR_SERVICE_DISCONNECTED:         return "" The  Cast  Remote  Display service was disconnected . "" ;      case  Cast Status Codes . FAILED:         return "" The in-progress request failed . "" ;      case  Cast Status Codes . INTERNAL_ERROR:         return "" An internal error has occurred . "" ;      case  Cast Status Codes . INTERRUPTED:         return ""A blocking call was interrupted while waiting and did not run to completion . "" ;      case  Cast Status Codes . INVALID_REQUEST:         return "" An invalid request was made . "" ;      case  Cast Status Codes . MESSAGE_SEND_BUFFER_TOO_FULL:         return ""A message could not be sent because there is not enough room in the send buffer at "" + ""this time . "" ;      case  Cast Status Codes . MESSAGE_TOO_LARGE:         return ""A message could not be sent because it is too large . "" ;      case  Cast Status Codes . NETWORK_ERROR:         return "" Network I/O error . "" ;      case  Cast Status Codes . NOT_ALLOWED:         return "" The request was disallowed and could not be completed . "" ;      case  Cast Status Codes . REPLACED:         return "" The request's progress is no longer being tracked because another request of the "" + ""same type has been made before the first request completed . "" ;      case  Cast Status Codes . SUCCESS:         return "" Success . "" ;      case  Cast Status Codes . TIMEOUT:         return "" An operation has timed out . "" ;      case  Cast Status Codes . UNKNOWN_ERROR:         return "" An unknown, unexpected error has occurred . "" ;      default:         return  Cast Status Codes . get Status Code String ( status Code )  ;  }}"
5790,"public void cleanup All Events (  Table table,  String token ) { final  String table Name = table . get Name (  )  ;  try {     final SQ Lite Database db = m Db . get Writable Database (  )  ;      db . delete ( table Name, KEY_TOKEN + "" = '"" + token + ""'"", null )  ;  } catch  ( final SQ Lite Exception e )  {     MP Log . e ( LOGTAG, "" Could not clean timed-out  Mixpanel records from "" + table Name + "" .   Re-initializing database . "", e )  ;      //  We assume that in general, the results of a SQL exception are     // unrecoverable, and could be associated with an oversized or     // otherwise unusable DB .   Better to bomb it and get back on track     // than to leave it junked up  ( and maybe filling up the disk .  )      m Db . delete Database (  )  ;  } finally {     m Db . close (  )  ;  }}"
5791,"public com . anychart . standalones .  Data Grid bounds (  Number x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
5792,public  Countly Config enable Crash Reporting (  ) { this . enable Unhandled Crash Reporting = true ;  return this ; }
5793,public static  Boolean has Claims Directive (  String header Value ) { int claims Directive Index = header Value . index Of ( CLAIMS_DIRECTIVE )  ;  if  ( claims Directive Index == -1 )  {     return false ;  } return true ; }
5794,"public void delete Field (  String id ) { super . do Delete Tag Field ( new  Frame And Sub Id ( id, null )  )  ; }"
5795,public  File Download Queue Set set Tag ( final  Object tag ) { this . tag = tag ;  return this ; }
5796,"public static int decode Int32 ( final byte [  ]  intbuf, final int offset ) { int r = intbuf [ offset ]  << 8 ;  r |= intbuf [ offset + 1 ]  & 0xff ;  r <<= 8 ;  r |= intbuf [ offset + 2 ]  & 0xff ;  return  ( r << 8 )  |  ( intbuf [ offset + 3 ]  & 0xff )  ; }"
5797,"private  String merge This And Default Value ( @ Non Null  Merging Report .  Builder merging Report, @ Non Null  Xml Element implicit Node ) {  String merged Value = get Value (  )  ;  if  ( m Attribute Model == null || m Attribute Model . get Default Value (  )  == null || !m Attribute Model . get Merging Policy (  )  . should Merge Default Values (  )  )  {     return merged Value ;  }  String default Value = m Attribute Model . get Default Value (  )  ;  if  ( default Value . equals ( merged Value )  )  {     // as the default value, ensure it gets added to the higher priority node .      return merged Value ;  } else {     // ok, the default value and actual declaration are different, delegate to the     // merging policy to figure out what value should be used if any .      merged Value = m Attribute Model . get Merging Policy (  )  . merge ( default Value, merged Value )  ;      if  ( merged Value == null )  {         add Illegal Implicit Override Message ( merging Report, m Attribute Model, implicit Node )  ;          return null ;      }     if  ( merged Value . equals ( default Value )  )  {         // since it was not declared to start with .          return null ;      } } return merged Value ; }"
5798,void submit ( final  Load And Display Image Task task ) { task Distributor . execute ( new  Runnable (  )  {     @ Override     public void run (  )  {          File image = configuration . disk Cache . get ( task . get Loading Uri (  )  )  ;          boolean is Image Cached On Disk = image != null && image . exists (  )  || is Local Uri ( task . get Loading Uri (  )  )  ;          init Executors If Need (  )  ;          if  ( is Image Cached On Disk )  {             task Executor For Cached Images . execute ( task )  ;          } else {             task Executor . execute ( task )  ;          }     } } )  ; }
5799,"public com . anychart . core .  State Settings grid ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . grid ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5800,public  Texture Region get Region (  ) { return regions . first (  )  ; }
5801,"public static  String get Type Name ( final  Address Type type ) { switch ( type )  {     default:     case UNASSIGNED_ADDRESS:         return "" Unassigned  Address"" ;      case UNICAST_ADDRESS:         return "" Unicast  Address"" ;      case GROUP_ADDRESS:         return "" Group  Address"" ;      case ALL_PROXIES:         return "" All  Proxies"" ;      case ALL_FRIENDS:         return "" All  Friends"" ;      case ALL_RELAYS:         return "" All  Relays"" ;      case ALL_NODES:         return "" All  Nodes"" ;      case VIRTUAL_ADDRESS:         return "" Virtual  Address"" ;  }}"
5802,public  Login Behavior get Login Behavior (  ) { return properties . get Login Behavior (  )  ; }
5803,"public com . anychart . core . annotations .  Base start Drawing (  String annotation Type Or Config ) { return new com . anychart . core . annotations .  Base (  String . format (  Locale . US, js Base + "" . start Drawing ( %s ) "", wrap Quotes ( annotation Type Or Config )  )  )  ; }"
5804,"public com . anychart . graphics . vector .  Hatch Fill id (  String id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . id ( %s )  ; "", wrap Quotes ( id )  )  )  ;  return this ; }"
5805,"private boolean have Multiply Confirmed Centers (  ) { int confirmed Count = 0 ;  float total Module Size = 0 . 0f ;  int max = possible Centers . size (  )  ;  for  (  Finder Pattern pattern : possible Centers )  {     if  ( pattern . get Count (  )  >= CENTER_QUORUM )  {         confirmed Count++ ;          total Module Size += pattern . get Estimated Module Size (  )  ;      } } if  ( confirmed Count < 3 )  {     return false ;  } // OK, we have at least 3 confirmed centers, but, it's possible that one is a ""false positive"" // and that we need to keep looking .   We detect this by asking if the estimated module sizes // vary too much .   We arbitrarily say that when the total deviation from average exceeds // 5% of the total module size estimates, it's too much .  float average = total Module Size / max ;  float total Deviation = 0 . 0f ;  for  (  Finder Pattern pattern : possible Centers )  {     total Deviation +=  Math . abs ( pattern . get Estimated Module Size (  )  - average )  ;  } return total Deviation <= 0 . 05f * total Module Size ; }"
5806,"public  Equals Builder append ( int [  ]  lhs, int [  ]  rhs ) { if  ( is Equals == false )  {     return this ;  } if  ( lhs == rhs )  {     return this ;  } if  ( lhs == null || rhs == null )  {     this . set Equals ( false )  ;      return this ;  } if  ( lhs . length != rhs . length )  {     this . set Equals ( false )  ;      return this ;  } for  ( int i = 0 ;  i < lhs . length && is Equals ;  ++i )  {     append ( lhs [ i ] , rhs [ i ]  )  ;  } return this ; }"
5807,"public com . anychart . charts .  Cartesian full Screen (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . full Screen ( %s )  ; "", enabled )  )  ;  return this ; }"
5808,"public static short checked Cast ( long value ) { short result =  ( short )  value ;  check Argument ( result == value, "" Out of range: %s"", value )  ;  return result ; }"
5809,"public final  Point F source To View Coord ( float sx, float sy ) { return source To View Coord ( sx, sy, new  Point F (  )  )  ; }"
5810,"public  Glide Builder set Log Request Origins ( boolean is Enabled ) { glide Experiments Builder . update ( new  Log Request Origins (  ) , is Enabled )  ;  return this ; }"
5811,"public com . anychart . core . map . series .  Choropleth select (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ;  return this ; }"
5812,"public static byte [  ]  MD5 ( byte [  ]  input ) {  Message Digest md = null ;  try {     md =  Message Digest . get Instance ( ""MD5"" )  ;  } catch  (  No Such Algorithm Exception e )  {     e . print Stack Trace (  )  ;  } if  ( md != null )  {     md . update ( input )  ;      return md . digest (  )  ;  } else {     return null ;  }}"
5813,"public com . anychart . core . gantt . elements .  Progress Element labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
5814,"public com . anychart . ui .  Context Menu items ( com . anychart . ui . contextmenu .  Item [  ]  items List ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . items ( %s )  ; "", array To String ( items List )  )  )  ;  return this ; }"
5815,public static byte [  ]  read File2 Bytes By Map ( final  String file Path ) { return read File2 Bytes By Map (  Utils Bridge . get File By Path ( file Path )  )  ; }
5816,"private boolean is File Portion Null ( int start Byte, int end Byte )  throws IO Exception{ logger . config ( "" Checking file portion:"" +  Hex . as Hex ( start Byte )  + "":"" +  Hex . as Hex ( end Byte )  )  ;   File Input Stream fis = null ;   File Channel fc = null ;  try {     fis = new  File Input Stream ( file )  ;      fc = fis . get Channel (  )  ;      fc . position ( start Byte )  ;       Byte Buffer bb =  Byte Buffer . allocate Direct ( end Byte - start Byte )  ;      fc . read ( bb )  ;      while  ( bb . has Remaining (  )  )  {         if  ( bb . get (  )  != 0 )  {             return false ;          }     } } finally {     if  ( fc != null )  {         fc . close (  )  ;      }     if  ( fis != null )  {         fis . close (  )  ;      } } return true ; }"
5817,"public static  Rop op Add (  Type List types ) { return pick Binary Op ( types, ADD_CONST_INT, ADD_CONST_LONG, ADD_CONST_FLOAT, ADD_CONST_DOUBLE, ADD_INT, ADD_LONG, ADD_FLOAT, ADD_DOUBLE )  ; }"
5818,public synchronized void rewind (  ) { read Position = 0 ; }
5819,public  Tag Command set Force Update ( boolean force Update ) { check Callable (  )  ;  this . force Update = force Update ;  return this ; }
5820,"public static PDF Function get Function ( PDF Object obj )  throws IO Exception{ PDF Function function ;  int type ;  float [  ]  domain = null ;  float [  ]  range = null ;  // read the function type  ( required )  PDF Object type Obj = obj . get Dict Ref ( "" Function Type"" )  ;  if  ( type Obj == null )  {     throw new PDF Parse Exception ( "" No  Function Type specified in function!"" )  ;  } type = type Obj . get Int Value (  )  ;  // read the function's domain  ( required )  PDF Object domain Obj = obj . get Dict Ref ( "" Domain"" )  ;  if  ( domain Obj == null )  {     throw new PDF Parse Exception ( "" No  Domain specified in function!"" )  ;  } PDF Object [  ]  domain Ary = domain Obj . get Array (  )  ;  domain = new float [ domain Ary . length ]  ;  for  ( int i = 0 ;  i < domain Ary . length ;  i++ )  {     domain [ i ]  = domain Ary [ i ]  . get Float Value (  )  ;  } // read the function's range  ( optional )  PDF Object range Obj = obj . get Dict Ref ( "" Range"" )  ;  if  ( range Obj != null )  {     PDF Object [  ]  range Ary = range Obj . get Array (  )  ;      range = new float [ range Ary . length ]  ;      for  ( int i = 0 ;  i < range Ary . length ;  i++ )  {         range [ i ]  = range Ary [ i ]  . get Float Value (  )  ;      } } // now create the acual function object switch ( type )  {     case TYPE_0:         if  ( range Obj == null )  {             throw new PDF Parse Exception ( "" No  Range specified in  Type 0  Function!"" )  ;          }         function = new  Function Type0 (  )  ;          break ;      case TYPE_2:         function = new  Function Type2 (  )  ;          break ;      case TYPE_3:         function = new  Function Type3 (  )  ;          break ;      case TYPE_4:         if  ( range Obj == null )  {             throw new PDF Parse Exception ( "" No  Range specified in  Type 4  Function!"" )  ;          }         function = new  Function Type4 (  )  ;          break ;      default:         throw new PDF Parse Exception ( "" Unsupported function type: "" + type )  ;  } // fill in the domain and optionally the range function . set Domain ( domain )  ;  if  ( range != null )  {     function . set Range ( range )  ;  } // now initialize the function function . parse ( obj )  ;  return function ; }"
5821,public void set Field (  Artwork artwork )  throws  Field Data Invalid Exception{ this . set Field ( create Field ( artwork )  )  ; }
5822,"public com . anychart . core . annotations .  Triangle min Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", width )  )  ;  return this ; }"
5823,public  Integer build (  ) { return  Integer . value Of ( to Hash Code (  )  )  ; }
5824,"public static boolean is Num Or Char (  String to Check Str ) { return can Match ( to Check Str, "" [ a-z A-Z0-9 ]  [ a-z A-Z0-9 ] *"" )  ; }"
5825,"public com . anychart . core . ui .  Chart Scroller selected Fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
5826,public long client Source Buffer Size (  )  throws IO Exception{ get Source (  )  . request ( 1 L )  ;  return get Source (  )  . get Buffer (  )  . size (  )  ; }
5827,"public void add All (  Annotations to Add ) { throw If Immutable (  )  ;  if  ( to Add == null )  {     throw new  Null Pointer Exception ( ""to Add == null"" )  ;  } for  (  Annotation a : to Add . annotations . values (  )  )  {     add ( a )  ;  }}"
5828,protected  Children create Children (  Section Context c ) { return null ; }
5829,public int find Last Visible Item Position (  ) { if  ( get Item Count (  )  == 0 )  {     return  Recycler View . NO_POSITION ;  } else {     return m First Visible Position + get Child Count (  )  ;  }}
5830,"public void offset Y (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . offset Y (  )  ; "" )  ; }"
5831,"public  Charset get Charset (  )  throws java . nio . charset .  Unsupported Charset Exception{  String content Type Header = get Content Type (  )  ;   Charset charset = null ;  try {     charset =  Browser Mob Http Util . read Charset In Content Type Header ( content Type Header )  ;  } catch  (  Unsupported Charset Exception e )  {     java . nio . charset .  Unsupported Charset Exception cause = e . get Unsupported Charset Exception Cause (  )  ;      log . error ( "" Character set specified in  Content- Type header is not supported on this platform .   Content- Type header: {}"", content Type Header, cause )  ;      throw cause ;  } if  ( charset == null )  {     return  Browser Mob Http Util . DEFAULT_HTTP_CHARSET ;  } return charset ; }"
5832,"private final void do Configure ( final  Input Source input Source )  throws  Joran Exception{ long threshold =  System . current Time Millis (  )  ;  //    if  ( ! Configuration Watch List Util . was Configuration Watch List Reset ( context )  )  { //      inform Context Of URL Used For Configuration ( get Context (  ) , null )  ;  //    }  Sax Event Recorder recorder = new  Sax Event Recorder ( context )  ;  recorder . record Events ( input Source )  ;  do Configure ( recorder . get Sax Event List (  )  )  ;  // no exceptions a this level  Status Util status Util = new  Status Util ( context )  ;  if  ( status Util . no XML Parsing Errors Occurred ( threshold )  )  {     add Info ( "" Registering current configuration as safe fallback point"" )  ;      register Safe Configuration ( recorder . get Sax Event List (  )  )  ;  }}"
5833,"public static  String join (  String separator, long .  .  .  array ) { check Not Null ( separator )  ;  if  ( array . length == 0 )  {     return """" ;  } //  For pre-sizing a builder, just get the right order of magnitude  String Builder builder = new  String Builder ( array . length * 10 )  ;  builder . append ( array [ 0 ]  )  ;  for  ( int i = 1 ;  i < array . length ;  i++ )  {     builder . append ( separator )  . append ( array [ i ]  )  ;  } return builder . to String (  )  ; }"
5834,public static  String get User ID (  ) { return  Analytics User ID Store . get User ID (  )  ; }
5835,"public void get Excluded Points (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Excluded Points (  )  ; "" )  ; }"
5836,public  Source Info source Info (  String url ) { return url To Source Info . get ( url )  ; }
5837,"public com . anychart . standalones . axes .  Radial stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5838,"public com . anychart . core . cartesian . series .  Line3d enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
5839,"private void remove Cache (  ) { KJ Http kjh = new KJ Http (  )  ;   String url = ""http://www . oschina . net/action/api/team_stickynote_batch_update"" ;  kjh . remove Cache ( url )  ; }"
5840,"private void set Path Capacity ( int capacity, int len ) { final byte [  ]  o = path ;  final byte [  ]  n = new byte [ capacity ]  ;   System . arraycopy ( o, 0, n, 0, len )  ;  for  (  Abstract Tree Iterator p = this ;  p != null && p . path == o ;  p = p . parent )  p . path = n ; }"
5841,"public void add Actor At ( int index,  Actor actor ) { throw new  Unsupported Operation Exception ( "" Use  Scroll Pane#set Widget . "" )  ; }"
5842,public void reset (  ) { reset Internal (  )  ;  invalidate Self (  )  ; }
5843,protected boolean should Handle Gesture (  ) { return should Retry On Tap (  )  ; }
5844,"public final  String get String Supported ABIS (  ) {  String result = null ;  if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . LOLLIPOP )  {      String [  ]  supported ABIS =  Build . SUPPORTED_ABIS ;       String Builder supported ABI String = new  String Builder (  )  ;      if  ( supported ABIS . length > 0 )  {         for  (  String abis : supported ABIS )  {             supported ABI String . append ( abis )  . append ( ""_"" )  ;          }         supported ABI String . delete Char At ( supported ABI String . last Index Of ( ""_"" )  )  ;      } else {         supported ABI String . append ( """" )  ;      }     result = supported ABI String . to String (  )  ;  } return  Check Validity Util . check Valid Data (  Check Validity Util . handle Illegal Character In Result ( result )  )  ; }"
5845,"public  Node calc Complete Event Cache (  Node complete Server Cache ) { return this . calc Complete Event Cache ( complete Server Cache,  Collections . < Long>empty List (  )  )  ; }"
5846,public void action (  Action .  .  .  actions ) {  Arrays . stream ( actions )  . for Each ( this::action )  ; }
5847,public T next (  ) { return head . value ; }
5848,"public static synchronized void load (  ) { if  ( natives Loaded )      return ;  natives Loaded = true ;  if  ( disable Natives Loading )      return ;  new  Shared Library Loader (  )  . load ( ""gdx"" )  ; }"
5849,"public com . anychart . core . stock . scrollerseries .  Range Spline Area high Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . high Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5850,"public void dummy Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . dummy Fill (  )  ; "" )  ; }"
5851,public static  Builder< Comparable> expected Size ( int expected Size ) { return new  Builder< Comparable> (  Ordering . natural (  )  )  . expected Size ( expected Size )  ; }
5852,public final long length (  ) { return count ; }
5853,"public  Mongo Collection< Document T> get Collection ( final  String collection Name, final  Class< Document T> document Class ) {  Util . check Empty ( collection Name, ""collection Name"" )  ;   Util . check Null ( document Class, ""document Class"" )  ;   Mongo Namespace namespace = new  Mongo Namespace ( name, collection Name )  ;  return new  Mongo Collection<> ( namespace, os Mongo Database . get Collection ( collection Name, namespace, document Class )  )  ; }"
5854,"public static  Message decode Message (  Map< String,  String> data ) {  Module Push .  Message Impl message = new  Module Push .  Message Impl ( data )  ;  return message . id == null ? null : message ; }"
5855,"public static  Ad Load Exception create For Ad Group (  Exception error, int ad Group Index ) { return new  Ad Load Exception ( TYPE_AD_GROUP, new IO Exception ( "" Failed to load ad group "" + ad Group Index, error )  )  ; }"
5856,"public  Buck Target Pattern as Package Matching Pattern (  ) { return new  Buck Target Pattern ( cell Name, cell Path, "":"" )  ; }"
5857,"private void remove Values For Key (  Object key ) {  Collection<V> collection =  Maps . safe Remove ( map, key )  ;  if  ( collection != null )  {     int count = collection . size (  )  ;      collection . clear (  )  ;      total Size -= count ;  }}"
5858,public void set Count ( int count ) { this . repeat Count = count ; }
5859,"public static  Function< Item,  String> format Time (  String timestamp Field,  String time Format ) { return new  Time To String Converter ( timestamp Field, time Format )  ; }"
5860,protected boolean is Render Null Values (  ) { return false ; }
5861,Section get Current Root (  ) { return m Current Root ; }
5862,"public com . anychart . standalones . axismarkers .  Line stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5863,"public static float get Max Anisotropic Filter Level (  ) { if  ( max Anisotropic Filter Level > 0 )      return max Anisotropic Filter Level ;  if  (  Gdx . graphics . supports Extension ( ""GL_EXT_texture_filter_anisotropic"" )  )  {      Float Buffer buffer =  Buffer Utils . new Float Buffer ( 16 )  ;       (  (  Buffer )  buffer )  . position ( 0 )  ;       (  (  Buffer )  buffer )  . limit ( buffer . capacity (  )  )  ;       Gdx . gl20 . gl Get Floatv ( GL20 . GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT, buffer )  ;      return max Anisotropic Filter Level = buffer . get ( 0 )  ;  } return max Anisotropic Filter Level = 1f ; }"
5864,"public void key Pressed (  Key Event e ) { char key Ch = e . get Key Char (  )  ;  if  ( key Ch == '\r' || key Ch == '\n' || key Ch == '\0' || key Ch == '?' )  {     process Event ( new SV Event ( SV Event Type . SVET_INPUT, sv Window, last X Move, last Y Move, 0, 0, key Str )  )  ;      //  Send newline characters as '!' as '!' can never be a keypressed     // and the client eats all newline characters .      key Str = ""!"" ;  } else {     process Event ( new SV Event ( SV Event Type . SVET_INPUT, sv Window, last X Move, last Y Move, 0, 0,  String . value Of ( key Ch )  )  )  ;      key Str += key Ch ;  }}"
5865,"public com . anychart . standalones .  Markers Factory stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
5866,public void set Z Index ( float z Index ) { m Polygon Options . z Index ( z Index )  ;  style Changed (  )  ; }
5867,"public void word Wrap (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . word Wrap (  )  ; "" )  ; }"
5868,public  Job Intent Service .  Generic Work Item dequeue Work (  ) {  Job Work Item work = null ;  synchronized  ( m Lock )  {     if  ( m Params == null )  {         return null ;      }     try {         work = m Params . dequeue Work (  )  ;      } catch  (  Security Exception se )  {         //ignore         se . print Stack Trace (  )  ;      } } if  ( work != null )  {     work . get Intent (  )  . set Extras Class Loader ( m Service . get Class Loader (  )  )  ;      return new  Wrapper Work Item ( work )  ;  } else {     return null ;  }}
5869,"public void change Camera Parameters (  Camera Parameters Callback callback ) { if  ( camera != null )  {     try {         camera . set Parameters ( callback . change Camera Parameters ( camera . get Parameters (  )  )  )  ;      } catch  (  Runtime Exception e )  {         //  Camera error .   Could happen if the camera is being closed .           Log . e ( TAG, "" Failed to change camera parameters"", e )  ;      } }}"
5870,"public  Completable my Permission (  ) { return  Completable . defer (  (  )  -> {      String current Entity ID =  Chat SDK . current User ID (  )  ;       Database Reference ref =  Firebase Paths . thread Permissions Ref ( model . get Entity ID (  )  )  . child ( current Entity ID )  ;      RX Realtime realtime = new RX Realtime ( this )  ;      return realtime . get ( ref )  . flat Map Completable (  change -> {         if  ( !change . is Empty (  )  )  {             model . set Permission ( current Entity ID, change . get (  )  . get Value (  String . class ) , true, false )  ;          } else {             model . set Permission ( current Entity ID, model . get Creator (  )  . is Me (  )  ?  Permission .  Owner :  Permission .  Member, true, false )  ;          }         return  Completable . complete (  )  ;      } )  ;  } )  ; }"
5871,public boolean is In Bitmap Memory Cache ( final  Uri uri ) { if  ( uri == null )  {     return false ;  }  Predicate< Cache Key> bitmap Cache Predicate = predicate For Uri ( uri )  ;  return m Bitmap Memory Cache . contains ( bitmap Cache Predicate )  ; }
5872,public  List< String> get Queries (  ) { return queries ; }
5873,"protected  Parcel File Descriptor open Accessory (  Usb Accessory accessory ) { try {      File tmp Usb Dir =  Runtime Environment . get Temp Directory (  )  . create If Not Exists ( ""usb-accessory"" )  . to File (  )  ;      return  Parcel File Descriptor . open ( new  File ( tmp Usb Dir, ""usb-accessory-file"" ) ,  Parcel File Descriptor . MODE_READ_WRITE )  ;  } catch  (  File Not Found Exception error )  {     throw new  Runtime Exception ( "" Error shadowing open Accessory"", error )  ;  }}"
5874,"public static  String to Jvm Name (  String classname ) { return classname . replace ( ' . ', '/' )  ; }"
5875,"public static byte [  ]  get Bytes ( @ Non Null final  String key, final byte [  ]  default Value, @ Non Null final  Cache Double Utils cache Double Utils ) { return cache Double Utils . get Bytes ( key, default Value )  ; }"
5876,"public void high Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . high Fill (  )  ; "" )  ; }"
5877,public  Horizontal Group row Left (  ) { row Align |=  Align . left ;  row Align &= ~ Align . right ;  return this ; }
5878,public static long get Component Calculate Layout Count (  ) { return s Component Calculate Layout Count . get (  )  ; }
5879,"public  String to String (  ) {  String Buffer buf = new  String Buffer (  )  ;   String indent = ""    "" ;  buf . append ( indent + "" Version          : "" +  Integer . to Hex String ( get Version (  )  )  + ""\n"" )  ;  buf . append ( indent + "" Revision         : "" +  Integer . to Hex String ( get Font Revision (  )  )  + ""\n"" )  ;  buf . append ( indent + "" Checksum Adj      : "" +  Integer . to Hex String ( get Checksum Adjustment (  )  )  + ""\n"" )  ;  buf . append ( indent + "" Magic Number      : "" +  Integer . to Hex String ( get Magic Number (  )  )  + ""\n"" )  ;  buf . append ( indent + "" Flags            : "" +  Integer . to Binary String ( get Flags (  )  )  + ""\n"" )  ;  buf . append ( indent + "" Units Per Em       : "" + get Units Per Em (  )  + ""\n"" )  ;  buf . append ( indent + "" Created          : "" + new  Date ( get Created (  )  )  + ""\n"" )  ;  buf . append ( indent + "" Modified         : "" + new  Date ( get Modified (  )  )  + ""\n"" )  ;  buf . append ( indent + ""X Min             : "" + get X Min (  )  + ""\n"" )  ;  buf . append ( indent + ""X Max             : "" + get X Max (  )  + ""\n"" )  ;  buf . append ( indent + ""Y Min             : "" + get Y Min (  )  + ""\n"" )  ;  buf . append ( indent + ""Y Max             : "" + get Y Max (  )  + ""\n"" )  ;  buf . append ( indent + "" Mac Style         : "" +  Integer . to Binary String ( get Mac Style (  )  )  + ""\n"" )  ;  buf . append ( indent + "" Lowest P Pem       : "" + get Lowest Rec P Pem (  )  + ""\n"" )  ;  buf . append ( indent + "" Font Direction Hint: "" + get Font Direction Hint (  )  + ""\n"" )  ;  buf . append ( indent + "" Index To Loc Format : "" + get Index To Loc Format (  )  + ""\n"" )  ;  buf . append ( indent + "" Glyph Data Format  : "" + get Glyph Data Format (  )  + ""\n"" )  ;  return buf . to String (  )  ; }"
5880,"public  Cursor raw Query ( @ Non Null  Raw Query raw Query ) { return sq Lite Open Helper . get Readable Database (  )  . raw Query ( raw Query . query (  ) , nullable Array Of Strings ( raw Query . args (  )  )  )  ; }"
5881,"public  List< Abstract Flexible Item> get Database List (  ) {  Log . i ( TAG, "" Database  Type: "" + database Type )  ;  // m Items can be returned without making a copy:  The copy is now done internally by the  Adapter .  return m Items ; }"
5882,public  Billing Status check Subscription Supported (  ) { return  Billing Controller . check Subscription Supported ( get Activity (  )  )  ; }
5883,public void mouse Exited (  Mouse Event e ) {}
5884,"public static final boolean is Same App ( int uid1, int uid2 ) { return get App Id ( uid1 )  == get App Id ( uid2 )  ; }"
5885,"public void set Short (  String field Name, short value ) { check Non Empty Field Name ( field Name )  ;  base Realm . check If Valid And In Transaction (  )  ;  field Name = map Field Name To Internal Name ( field Name )  ;  check Type ( field Name,  Realm Field Type . INTEGER )  ;  os Results . set Int ( field Name, value )  ; }"
5886,public short get X Min (  ) { return this . x Min ; }
5887,"public void get Type (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Type (  )  ; "" )  ; }"
5888,"public void activate Particles ( int start Index, int count ) {}"
5889,"public void set Crop Frame Color ( @ Color Int int color ) { m Option Bundle . put Int ( EXTRA_CROP_FRAME_COLOR, color )  ; }"
5890,"void register Working Range (  String name,  Working Range working Range,  Component component,  String global Key ) { if  ( m Working Range Registrations == null )  {     m Working Range Registrations = new  Array List<> (  )  ;  } m Working Range Registrations . add ( new  Working Range Container .  Registration ( name, working Range, component, global Key )  )  ; }"
5891,"public com . anychart . core . gantt . elements .  Periods Element height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
5892,"public static void set ( int [  ]  bits, int idx ) { int array Idx = idx >> 5 ;  int bit = 1 <<  ( idx & 0x1f )  ;  bits [ array Idx ]  |= bit ; }"
5893,"public void id (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . id (  )  ; "" )  ; }"
5894,public static void set Connection Quality Change Listener (  Connection Quality Change Listener connection Change Listener ) {  Connection Class Manager . get Instance (  )  . set Listener ( connection Change Listener )  ; }
5895,"public void test No Tags (  ) {  Bundle data = new  Bundle (  )  ;  data . put String ( KEY_ICON, ""gcm_icon"" )  ;  assert True ( new  Display Notification ( context, new  Notification Params ( data ) , executor )  . handle Notification (  )  )  ;  //  Still with no tag, just a different icon .   Move the clock forward as it uses the uptime // in the tag .  data . put String ( KEY_ICON, ""gcm_icon2"" )  ;   System Clock . set Current Time Millis (  Shadow System Clock . current Time Millis (  )  + 1000 )  ;  assert True ( new  Display Notification ( context, new  Notification Params ( data ) , executor )  . handle Notification (  )  )  ;  assert Equals ( 2, shadow Of ( notification Manager )  . size (  )  )  ;  //  Shadow Notification Manager uses an  ( unordered )   Hash Map for storing notifications, so // these notifications can be in any order .   Notification n1 = shadow Of ( notification Manager )  . get All Notifications (  )  . get ( 0 )  ;   Notification n2 = shadow Of ( notification Manager )  . get All Notifications (  )  . get ( 1 )  ;   Set< Integer> expected Icons = new  Hash Set<> (  Arrays . as List ( R . drawable . gcm_icon, R . drawable . gcm_icon2 )  )  ;  assert True ( expected Icons . remove ( n1 . icon )  )  ;  assert True ( expected Icons . remove ( n2 . icon )  )  ;  assert True ( expected Icons . is Empty (  )  )  ; }"
5896,"public com . anychart . charts .  Linear Gauge padding (  Number value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
5897,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
5898,public void set On Cluster Item Info Window Click Listener (  On Cluster Item Info Window Click Listener<T> listener ) { m On Cluster Item Info Window Click Listener = listener ;  m Renderer . set On Cluster Item Info Window Click Listener ( listener )  ; }
5899,"public com . anychart . graphics . vector .  Pattern Fill high Hatch Fill (  ) { return new com . anychart . graphics . vector .  Pattern Fill ( js Base + "" . high Hatch Fill (  ) "" )  ; }"
5900,"public final KJ Async Task< Params,  Progress,  Result> execute (  Params .  .  .  params ) { return execute On Executor ( m Default Executor, params )  ; }"
5901,public static void on Resume ( boolean seek ) { if  ( GSY Video Manager . instance (  )  . listener (  )  != null )  {     GSY Video Manager . instance (  )  . listener (  )  . on Video Resume ( seek )  ;  }}
5902,"public void launch Bundle (  Bundle bundle,  Context context ) { if  ( !bundle . is Launchable (  )  )  {     return ;  } if  ( context instanceof  Activity )  {      Activity activity =  (  Activity )  context ;      if  ( should Finish Previous Activity ( activity )  )  {         activity . finish (  )  ;      }     activity . start Activity For Result ( bundle . get Intent (  ) ,  Small . REQUEST_CODE_DEFAULT )  ;  } else {     context . start Activity ( bundle . get Intent (  )  )  ;  }}"
5903,"protected  Bitmap Font new Bitmap Font (  Bitmap Font Data data,  Array< Texture Region> page Regions, boolean integer ) { return new  Bitmap Font ( data, page Regions, integer )  ; }"
5904,public void set F Sync ( boolean on ) { fsync = on ; }
5905,public boolean is Executable (  ) { return is Executable ; }
5906,"protected  Any Long Object Id get Object To Transfer (  Http Servlet Request req,  Http Servlet Response rsp )  throws IO Exception{  String info = req . get Path Info (  )  ;  int length = 1 +  Constants . LONG_OBJECT_ID_STRING_LENGTH ;  if  ( info . length (  )  != length )  {     send Error ( rsp,  Http Status . SC_UNPROCESSABLE_ENTITY,  Message Format . format (  Lfs Server Text . get (  )  . invalid Path Info, info )  )  ;      return null ;  } try {     return  Long Object Id . from String ( info . substring ( 1, length )  )  ;  } catch  (  Invalid Long Object Id Exception e )  {     send Error ( rsp,  Http Status . SC_UNPROCESSABLE_ENTITY, e . get Message (  )  )  ;      return null ;  }}"
5907,"public void test Lifecycle_I1_F1_I2_F2_F3_C (  ) {  Data Source< Object> data Source = get And Subscribe (  )  ;   Data Subscriber< Object> subscriber1 = verify Get And Subscribe ( m Data Source Supplier1, m Src1 )  ;   Object val1 = mock (  Object . class )  ;  set State ( m Src1, NOT_CLOSED, NOT_FINISHED, WITH_RESULT, val1, NOT_FAILED, null )  ;  subscriber1 . on New Result ( m Src1 )  ;  verify Subscriber ( data Source, m Src1, ON_NEW_RESULT )  ;  verify State ( data Source, m Src1, NOT_CLOSED, NOT_FINISHED, WITH_RESULT, val1, NOT_FAILED, null )  ;  set State ( m Src1, NOT_CLOSED, FINISHED, WITH_RESULT, val1, FAILED, mock (  Throwable . class )  )  ;  subscriber1 . on Failure ( m Src1 )  ;   Data Subscriber< Object> subscriber2 = verify Get And Subscribe ( m Data Source Supplier2, m Src2 )  ;  verify State ( data Source, m Src1, NOT_CLOSED, NOT_FINISHED, WITH_RESULT, val1, NOT_FAILED, null )  ;  // I2 gets ignored because we already have I1  Object val2 = mock (  Object . class )  ;  set State ( m Src2, NOT_CLOSED, NOT_FINISHED, WITH_RESULT, val2, NOT_FAILED, null )  ;  subscriber2 . on New Result ( m Src2 )  ;  verify Subscriber ( data Source, m Src2, NO_INTERACTIONS )  ;  verify State ( data Source, m Src1, NOT_CLOSED, NOT_FINISHED, WITH_RESULT, val1, NOT_FAILED, null )  ;  set State ( m Src2, NOT_CLOSED, FINISHED, WITH_RESULT, val2, FAILED, mock (  Throwable . class )  )  ;  subscriber2 . on Failure ( m Src2 )  ;  m In Order . verify ( m Src2 )  . close (  )  ;   Data Subscriber< Object> subscriber3 = verify Get And Subscribe ( m Data Source Supplier3, m Src3 )  ;  verify State ( data Source, m Src1, NOT_CLOSED, NOT_FINISHED, WITH_RESULT, val1, NOT_FAILED, null )  ;   Throwable throwable = mock (  Throwable . class )  ;  set State ( m Src3, NOT_CLOSED, FINISHED, WITHOUT_RESULT, null, FAILED, throwable )  ;  subscriber3 . on Failure ( m Src3 )  ;  m In Order . verify ( m Src3 )  . close (  )  ;  verify Subscriber ( data Source, m Src3, ON_FAILURE )  ;  verify State ( data Source, m Src1, NOT_CLOSED, FINISHED, WITH_RESULT, val1, FAILED, throwable )  ;  test Close ( data Source, m Src1 )  ;  verify State ( data Source, null, CLOSED, FINISHED, WITHOUT_RESULT, null, FAILED, throwable )  ; }"
5908,"private void categories (  Route Meta route Mete ) { if  ( route Verify ( route Mete )  )  {     logger . info ( "">>>  Start categories, group = "" + route Mete . get Group (  )  + "", path = "" + route Mete . get Path (  )  + "" <<<"" )  ;       Set< Route Meta> route Metas = group Map . get ( route Mete . get Group (  )  )  ;      if  (  Collection Utils . is Empty ( route Metas )  )  {          Set< Route Meta> route Meta Set = new  Tree Set<> ( new  Comparator< Route Meta> (  )  {             @ Override             public int compare (  Route Meta r1,  Route Meta r2 )  {                 try {                     return r1 . get Path (  )  . compare To ( r2 . get Path (  )  )  ;                  } catch  (  Null Pointer Exception npe )  {                     logger . error ( npe . get Message (  )  )  ;                      return 0 ;                  }             }         } )  ;          route Meta Set . add ( route Mete )  ;          group Map . put ( route Mete . get Group (  ) , route Meta Set )  ;      } else {         route Metas . add ( route Mete )  ;      } } else {     logger . warning ( "">>>  Route meta verify error, group is "" + route Mete . get Group (  )  + "" <<<"" )  ;  }}"
5909,public boolean is Indirect (  ) { return  ( type == INDIRECT )  ; }
5910,public  Builder clear Creator Info (  ) { if  ( creator Info Builder_ == null )  {     creator Info_ = null ;      on Changed (  )  ;  } else {     creator Info_ = null ;      creator Info Builder_ = null ;  } return this ; }
5911,"public void save (  Epoxy View Holder holder ) { if  ( !holder . get Model (  )  . should Save View State (  )  )  {     return ;  } //  Reuse the previous sparse array if available .   We shouldn't need to clear it since the // exact same view type is being saved to it, which // should have identical ids for all its views, and will just overwrite the previous state .   View State state = get ( holder . get Item Id (  )  )  ;  if  ( state == null )  {     state = new  View State (  )  ;  } state . save ( holder . item View )  ;  put ( holder . get Item Id (  ) , state )  ; }"
5912,"public void file Will Be Modified (  Audio File file, boolean delete )  throws  Modify Veto Exception{ for  (  Audio File Modification Listener listener : this . listeners )  {      Audio File Modification Listener current = listener ;      try {         current . file Will Be Modified ( file, delete )  ;      } catch  (  Modify Veto Exception e )  {         veto Thrown ( current, file, e )  ;          throw e ;      } }}"
5913,public int hash Code (  ) { int hash = 1 ;  for  ( int i = start ;  i < end ;  i++ )  {     hash *= 31 ;      hash +=  Doubles . hash Code ( array [ i ]  )  ;  } return hash ; }
5914,String get Path (  ) { return  Fs . externalize ( this )  ; }
5915,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
5916,"public static void for Each Pair (  Iterable<L> left,  Iterable<R> right,  Bi Consumer<? super L, ? super R> consumer ) {  Iterator<L> left Iter = left . iterator (  )  ;   Iterator<R> right Iter = right . iterator (  )  ;  while  ( left Iter . has Next (  )  && right Iter . has Next (  )  )  {     consumer . accept ( left Iter . next (  ) , right Iter . next (  )  )  ;  }  Preconditions . check State ( !left Iter . has Next (  )  && !right Iter . has Next (  )  )  ; }"
5917,public int hash Code (  ) { proxy State . get Realm$realm (  )  . check If Valid (  )  ;   String realm Name = proxy State . get Realm$realm (  )  . get Path (  )  ;   String table Name = proxy State . get Row$realm (  )  . get Table (  )  . get Name (  )  ;  long row Index = proxy State . get Row$realm (  )  . get Object Key (  )  ;  int result = 17 ;  result = 31 * result +  (  ( realm Name != null )  ? realm Name . hash Code (  )  : 0 )  ;  result = 31 * result +  (  ( table Name != null )  ? table Name . hash Code (  )  : 0 )  ;  result = 31 * result +  ( int )   ( row Index ^  ( row Index >>> 32 )  )  ;  return result ; }
5918,protected  Accessibility Node Info get Source (  ) { if  ( source Node == null )  {     return null ;  } return  Accessibility Node Info . obtain ( source Node )  ; }
5919,"public com . anychart . core . lineargauge . pointers .  Tank parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
5920,public  Date get Timestamp (  ) { return timestamp ; }
5921,"protected boolean request Pin App Widget (  Component Name provider, @ Nullable  Bundle extras, @ Nullable  Pending Intent success Callback ) { if  ( request Pin App Widget Supported )  {     int my Widget Id = next Widget Id++ ;      //  Bind the widget .      bind App Widget Id ( my Widget Id, provider )  ;      //  Call the success callback if it exists .      if  ( success Callback != null )  {         try {             success Callback . send ( context . get Application Context (  ) , 0, new  Intent (  )  . put Extra (  App Widget Manager . EXTRA_APPWIDGET_ID, my Widget Id )  )  ;          } catch  (  Canceled Exception e )  {             throw new  Runtime Exception ( e )  ;          }     }     return true ;  } return false ; }"
5922,"public com . anychart . core . cartesian . series .  Base With Markers a11y (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . a11y ( %s )  ; "", value )  )  ;  return this ; }"
5923,"public static  Dimension Value offset Px ( float value ) { return new  Dimension Value (  Type . OFFSET, value )  ; }"
5924,public static boolean is Wifi Connected (  Context context ) {  Connectivity Manager connectivity Manager =  (  Connectivity Manager )  context . get System Service (  Context . CONNECTIVITY_SERVICE )  ;   Network Info wifi Network Info = connectivity Manager . get Network Info (  Connectivity Manager . TYPE_WIFI )  ;  if  ( wifi Network Info . is Connected (  )  )  {     return true ;  } return false ; }
5925,"public com . anychart . core . ui .  Labels Factory labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . labels (  ) "" )  ; }"
5926,"public  String get (  String key,  String def )  throws  Illegal Argument Exception{ if  (  System Properties == null || get String == null )      return null ;   String ret = null ;  try {     ret =  (  String )  get String . invoke (  System Properties, new  Object [  ]  { key, def } )  ;  } catch  (  Illegal Argument Exception e )  {     throw e ;  } catch  (  Exception e )  { } // since neither of those are valid values if  ( ret == null || ret . length (  )  == 0 )  {     ret = def ;  } return ret ; }"
5927,"static  String create Valid Param Name (  String name, int idx ) { if  ( name == null || name . equals ( """" )  )  {     return ""param"" + idx ;  } else {     return name ;  }}"
5928,"public synchronized void record Event ( final  String key, final  Map< String,  String> segmentation, final int count, final double sum ) { record Event ( key, segmentation, count, sum, 0 )  ; }"
5929,public T3 get Value3 (  ) { return value3 ; }
5930,"public  Float Array As Iterable using Exact Equality (  ) { return new  Float Array As Iterable ( EXACT_EQUALITY_CORRESPONDENCE, iterable Subject (  )  )  ; }"
5931,public long read Little Endian Long (  ) { return  ( data [ position++ ]  & 0x FFL )  |  ( data [ position++ ]  & 0x FFL )  << 8 |  ( data [ position++ ]  & 0x FFL )  << 16 |  ( data [ position++ ]  & 0x FFL )  << 24 |  ( data [ position++ ]  & 0x FFL )  << 32 |  ( data [ position++ ]  & 0x FFL )  << 40 |  ( data [ position++ ]  & 0x FFL )  << 48 |  ( data [ position++ ]  & 0x FFL )  << 56 ; }
5932,"private int check Mail Config (  String sender,  String recipients,  String smtp,  String cur Password ) { if  ( !BLANK_STRING . equals ( cur Password )  && !BLANK_STRING . equals ( sender )  && !BLANK_STRING . equals ( recipients )  && !BLANK_STRING . equals ( smtp )  )  {     return 1 ;  } else if  ( BLANK_STRING . equals ( cur Password )  && BLANK_STRING . equals ( sender )  && BLANK_STRING . equals ( recipients )  && BLANK_STRING . equals ( smtp )  )  {     return 0 ;  } else     return -1 ; }"
5933,"private  Cxx Preprocess And Compile create Preprocess And Compile Build Rule (  String name,  Cxx Source source ) {  Build Target target = create Compile Build Target ( name )  ;  LOG . verbose ( "" Creating preprocess and compile %s for %s"", target, source )  ;   Preconditions . check Argument (  Cxx Source Types . is Preprocessable Type ( source . get Type (  )  )  )  ;   Compiler Delegate compiler Delegate = new  Compiler Delegate ( get Cxx Platform (  )  . get Compiler Debug Path Sanitizer (  ) ,  Cxx Source Types . get Compiler ( get Cxx Platform (  ) ,  Cxx Source Types . get Preprocessor Output Type ( source . get Type (  )  )  )  . resolve ( get Action Graph Builder (  ) , get Base Build Target (  )  . get Target Configuration (  )  ) , compute Compiler Flags ( source . get Type (  ) , source . get Flags (  )  ) , get Cxx Platform (  )  . get Use Arg File (  )  )  ;   Preprocessor Delegate Cache Value preprocessor Delegate Value = preprocessor Delegates . apply (  Preprocessor Delegate Cache Key . of ( source . get Type (  ) , source . get Flags (  )  )  )  ;   Preprocessor Delegate preprocessor Delegate = preprocessor Delegate Value . get Preprocessor Delegate (  )  ;   Optional< Cxx Precompiled Header> precompiled Header Rule = get Optional Precompiled Header ( preprocessor Delegate Value, source )  ;  if  ( precompiled Header Rule . is Present (  )  && get Precompiled Header (  )  . is Present (  )  )  {     //  For a precompiled header  ( and not a prefix header ) , we may need extra include paths .      //  The PCH build might have involved some deps that this rule does not have, so we     // would need to pull in its include paths to ensure any includes that happen during this     // build play out the same way as they did for the PCH .      preprocessor Delegate = preprocessor Delegate . with Leading Include Paths ( precompiled Header Rule . get (  )  . get Cxx Include Paths (  )  )  ;  } return  Cxx Preprocess And Compile . preprocess And Compile ( target, get Project Filesystem (  ) , get Action Graph Builder (  ) , preprocessor Delegate, compiler Delegate, get Compile Output Name ( name ) , source . get Path (  ) , source . get Type (  ) , precompiled Header Rule, get Sanitizer (  )  )  ; }"
5934,"protected void write Line ( final char prefix, final  Raw Text text, final int cur )  throws IO Exception{ out . write ( prefix )  ;  text . write Line ( out, cur )  ;  out . write ( '\n' )  ; }"
5935,"public void record Event ( final  String key, final int count ) { record Event ( key, null, count, 0 )  ; }"
5936,public  Field Key get Generic Key From Id3 ( ID3v22 Field Key field Key ) { return id3 To Tag Field . get ( field Key )  ; }
5937,public void set Axis Title Text Size ( float text Size ) { m Axis Title Text Size = text Size ; }
5938,public  Component Tree get Component Tree (  ) { if  ( m Component Tree == null )  {     m Component Tree =  Component Tree . create ( m Context )  . build (  )  ;  } return m Component Tree ; }
5939,"public void deviation (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . deviation (  )  ; "" )  ; }"
5940,"public void put (  Path path, T value ) {  Entry<T> maybe = map . get ( path )  ;  if  ( maybe == null )  {     synchronized  ( root )  {         maybe = map . compute If Absent ( path, this::put Entry )  ;      } } maybe . set ( value )  ; }"
5941,"public static  Builder new Builder (  ) { return new  Builder (  Enum Serialization . NAME,  Case Format . LOWER_UNDERSCORE,  Case Format . LOWER_CAMEL )  ; }"
5942,public void set Indentation Levels (  String [  ]  indentation Levels ) { m Indentation Levels = indentation Levels ; }
5943,"public com . anychart . core . annotations .  Fibonacci Timezones container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
5944,"public com . anychart . charts .  Tag Cloud padding (  Number value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, value3, value4 )  )  ;  return this ; }"
5945,"public com . anychart . core . stock . indicators . OBV series (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . series ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
5946,"public boolean invoke (  ) { if  ( m Click Listener != null && m Click Listener . on Menu Item Click ( this )  )  {     return true ;  } if  ( m Menu . dispatch Menu Item Selected ( m Menu . get Root Menu (  ) , this )  )  {     return true ;  } if  ( m Item Callback != null )  {     m Item Callback . run (  )  ;      return true ;  } if  ( m Intent != null )  {     try {         m Menu . get Context (  )  . start Activity ( m Intent )  ;          return true ;      } catch  (  Activity Not Found Exception e )  {          Log . e ( TAG, "" Can't find activity to handle intent ;  ignoring"", e )  ;      } } if  ( m Action Provider != null && m Action Provider . on Perform Default Action (  )  )  {     return true ;  } return false ; }"
5947,public void set Offset Right ( float offset Right ) { touch Listener . set Right Offset ( offset Right )  ; }
5948,"public com . anychart . core . ui .  Labels Factory min Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . min Labels (  ) "" )  ; }"
5949,"public synchronized void set Property String (  String key,  String value ) { drm Session Manager . set Property String ( key, value )  ; }"
5950,"private static boolean is Valid Annotation (  Annotation Mirror annotation ) { final  Retention retention = annotation . get Annotation Type (  )  . as Element (  )  . get Annotation (  Retention . class )  ;  if  ( retention != null && retention . value (  )  ==  Retention Policy . SOURCE )  {     return false ;  }  String annotation Name = annotation . get Annotation Type (  )  . to String (  )  ;  return !annotation Name . starts With ( ""com . facebook . "" )  && !annotation Name . equals ( ""kotlin .  Metadata"" )  && !annotation Name . starts With ( ""kotlin . jvm"" )  ; }"
5951,"public void in Marquee (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . in Marquee (  )  ; "" )  ; }"
5952,"public com . anychart . core . stock . indicators .  Aroon aroon ( com . anychart . data .  Table Mapping mapping,  Number period,  String up Series Type, com . anychart . enums .  Stock Series Type down Series Type ) { return new com . anychart . core . stock . indicators .  Aroon (  String . format (  Locale . US, js Base + "" . aroon ( %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, period, wrap Quotes ( up Series Type ) ,  ( down Series Type != null )  ? down Series Type . get Js Base (  )  : null )  )  ; }"
5953,"public static  String encode Path (  String remote File Path ) {  String encoded Path =  Uri . encode ( remote File Path, ""/"" )  ;  if  ( !encoded Path . starts With ( ""/"" )  )  {     encoded Path = ""/"" + encoded Path ;  } return encoded Path ; }"
5954,"public  Rectangle from String (  String v ) { int s0 = v . index Of ( ',', 1 )  ;  int s1 = v . index Of ( ',', s0 + 1 )  ;  int s2 = v . index Of ( ',', s1 + 1 )  ;  if  ( s0 != -1 && s1 != -1 && s2 != -1 && v . char At ( 0 )  == ' [ ' && v . char At ( v . length (  )  - 1 )  == ' ] ' )  {     try {         float x =  Float . parse Float ( v . substring ( 1, s0 )  )  ;          float y =  Float . parse Float ( v . substring ( s0 + 1, s1 )  )  ;          float width =  Float . parse Float ( v . substring ( s1 + 1, s2 )  )  ;          float height =  Float . parse Float ( v . substring ( s2 + 1, v . length (  )  - 1 )  )  ;          return this . set ( x, y, width, height )  ;      } catch  (  Number Format Exception ex )  {     //  Throw a  Gdx Runtime Exception     } } throw new  Gdx Runtime Exception ( "" Malformed  Rectangle: "" + v )  ; }"
5955,public  Listen Clipboard Service get Service (  ) { return  Listen Clipboard Service . this ; }
5956,public boolean remove ( @ Nullable  Object o ) { if  ( o == null )      return false ;  final E [  ]  items = this . items ;  final  Monitor monitor = this . monitor ;  monitor . enter (  )  ;  try {     int i = take Index ;      int k = 0 ;      for  (  ;   ;   )  {         if  ( k++ >= count )              return false ;          if  ( o . equals ( items [ i ]  )  )  {             remove At ( i )  ;              return true ;          }         i = inc ( i )  ;      } } finally {     monitor . leave (  )  ;  }}
5957,public  Uri Components Builder scheme Specific Part (  String ssp ) { this . ssp = ssp ;  reset Hierarchical Components (  )  ;  return this ; }
5958,"public com . anychart . charts .  Pareto select Marquee Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
5959,"public com . anychart . standalones .  Labels Factory height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
5960,"public  Intent Integrator set Torch Enabled ( boolean enabled ) { add Extra (  Intents .  Scan . TORCH_ENABLED, enabled )  ;  return this ; }"
5961,"public com . anychart . math .  Rect get Pixel Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . get Pixel Bounds (  ) "" )  ; }"
5962,"public  Annotation Elements Holder extract (  Set<? extends  Type Element> annotations,  Set< String> annotation Types To Check,  Round Environment round Env ) {  Annotation Elements Holder extracted Model = new  Annotation Elements Holder (  )  ;   Set<? extends  Element> root Elements = round Env . get Root Elements (  )  ;   Set< Type Element> root Type Elements = find Root Type Elements ( root Elements )  ;  extract Ancestors Annotations ( extracted Model, annotation Types To Check, root Type Elements )  ;  extract Root Elements Annotations ( annotations, round Env, extracted Model )  ;  return extracted Model ; }"
5963,"public static int get Fake Res Id (  Resources res, int id ) { return get Fake Res Id ( res . get Resource Name ( id )  )  ; }"
5964,"public final void remove Messages ( int what,  Object object ) { m Exec . remove Messages ( what, object )  ; }"
5965,public final int get Remaining Elements Count (  ) { var counter = 0 ;  for  ( var ignored : this )  {     counter++ ;  } return counter ; }
5966,public void seek To Frame ( @ Int Range ( from = 0 )  int index ) { m Gif Info Handle . seek To Frame GL ( index )  ; }
5967,public final int get Constant Height (  ) { if  ( !m Checked Constant Size )  {     compute Constant Size (  )  ;  } return m Constant Height ; }
5968,"static void request Interrupt In ( final long time, final  Time Unit unit ) { check Not Null ( unit )  ;  final  Thread interruptee =  Thread . current Thread (  )  ;  new  Thread ( new  Runnable (  )  {     @ Override     public void run (  )  {         try {             unit . sleep ( time )  ;          } catch  (  Interrupted Exception wont Happen )  {             throw new  Assertion Error ( wont Happen )  ;          }         interruptee . interrupt (  )  ;      } } )  . start (  )  ; }"
5969,public void init (  String controller Id ) { m Controller Id = controller Id ; }
5970,public  Affine2 idt (  ) { m00 = 1 ;  m01 = 0 ;  m02 = 0 ;  m10 = 0 ;  m11 = 1 ;  m12 = 0 ;  return this ; }
5971,"public  Cursor query (  Criteria criteria ) { return query ( criteria, null )  ; }"
5972,"protected void set Instance Id Value ( int id,  Object value ) { throw new  Illegal State Exception (  String . value Of ( id )  )  ; }"
5973,public  Flexible Adapter<T> set Sticky Header Elevation ( @ Int Range ( from = 0 )  int sticky Elevation ) { m Sticky Elevation = sticky Elevation ;  return this ; }
5974,"public static  Animated Sprite from Animated Sprite (  Animated Sprite other ) {  Animated Sprite sprite = new  Animated Sprite ( other . frames, other . sample Size )  ;  sprite . set FPS ( other . fps )  ;  return sprite ; }"
5975,"public void add Change Listener (  Ordered Realm Collection Change Listener< Realm Results<E>> listener ) { check For Add Listener ( listener )  ;  os Results . add Listener ( this, listener )  ; }"
5976,public int get Publication Resolution (  ) { return publication Resolution ; }
5977,public synchronized void init Oauth Session ( O Auth Session session ) { this . session = session ;  this . notify All (  )  ; }
5978,public float get Corner Radius (  ) { return m Corner Radius ; }
5979,public  Window Cache Stats get Stats (  ) { return stats Recorder . get Stats (  )  ; }
5980,"public static  Spannable String Builder add Emojis (  Context context,  Spannable String Builder text, int emoji Size, int text Size, int index, int length, boolean use System Default ) { if  ( use System Default )  {     return text ;  } int text Length To Process = calculate Legal Text Length ( text, index, length )  ;  // remove spans throughout all text  Emojicon Span [  ]  old Spans = text . get Spans ( 0, text . length (  ) ,  Emojicon Span . class )  ;  for  (  Emojicon Span old Span : old Spans )  {     text . remove Span ( old Span )  ;  } int [  ]  results = new int [ 3 ]  ;   String text Str = text . to String (  )  ;  int process Idx = index ;  while  ( process Idx < text Length To Process )  {     boolean is Emoji = find Emoji ( text Str, process Idx, text Length To Process, results )  ;      int skip = results [ 1 ]  ;      if  ( is Emoji )  {         int icon = results [ 0 ]  ;          boolean is QQ Face = results [ 2 ]  > 0 ;           Emojicon Span span = new  Emojicon Span ( context, icon,  ( int )   ( emoji Size * EMOJIICON_SCALE ) ,  ( int )   ( emoji Size * EMOJIICON_SCALE )  )  ;          span . set Translate Y ( is QQ Face ? QQFACE_TRANSLATE_Y : EMOJIICON_TRANSLATE_Y )  ;          if  ( span . get Cached Drawable (  )  == null )  {             text . replace ( process Idx, process Idx + skip, "" .  . "" )  ;              //重新计算字符串的合法长度             text Length To Process = calculate Legal Text Length ( text, index, length )  ;          } else {             text . set Span ( span, process Idx, process Idx + skip,  Spannable . SPAN_EXCLUSIVE_EXCLUSIVE )  ;          }     }     process Idx += skip ;  } return  (  Spannable String Builder )  text . sub Sequence ( index, process Idx )  ; }"
5981,"public com . anychart . charts .  Sunburst credits (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . credits ( %s )  ; "", value )  )  ;  return this ; }"
5982,"public static  Double try Parse (  String string ) { if  ( FLOATING_POINT_PATTERN . matcher ( string )  . matches (  )  )  {     // extensive testing     try {         return  Double . parse Double ( string )  ;      } catch  (  Number Format Exception e )  {     //  Double . parse Double has changed specs several times, so fall through     // gracefully     } } return null ; }"
5983,public boolean is Set Repository (  ) { return this . repository != null ; }
5984,public char [  ]  get Value (  ) { return value ; }
5985,"public com . didiglobal . booster . aapt2 .  Resources .  File Reference .  Type get Type (  ) { @ Suppress Warnings ( ""deprecation"" )  com . didiglobal . booster . aapt2 .  Resources .  File Reference .  Type result = com . didiglobal . booster . aapt2 .  Resources .  File Reference .  Type . value Of ( type_ )  ;  return result == null ? com . didiglobal . booster . aapt2 .  Resources .  File Reference .  Type . UNRECOGNIZED : result ; }"
5986,"public  To String Builder append (  String field Name, double value ) { style . append ( buffer, field Name, value )  ;  return this ; }"
5987,"public com . anychart . charts .  Scatter y Scale ( com . anychart . scales .  Scatter Base settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
5988,"static T check Not Null ( T reference, @ Nullable  Object error Message ) { if  ( reference == null )  {     throw new  Null Pointer Exception (  String . value Of ( error Message )  )  ;  } return reference ; }"
5989,"public com . anychart . charts .  Mekko crosshair (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . crosshair ( %s )  ; "", settings )  )  ;  return this ; }"
5990,"public static  Path get Header Symlink Tree Path (  Project Filesystem filesystem,  Build Target target,  Header Visibility header Visibility,  Flavor .  .  .  flavors ) { return  Build Target Paths . get Gen Path ( filesystem, create Header Symlink Tree Target ( target, header Visibility, flavors ) , ""%s"" )  ; }"
5991,public  Filter Query Provider get Filter Query Provider (  ) { return m Filter Query Provider ; }
5992,"public void visit ( int version, int access,  String name,  String signature,  String super Name,  String [  ]  interfaces ) { super . visit ( version,  Opcodes . ACC_PUBLIC |  Opcodes . ACC_SUPER, name + OVERRIDE_SUFFIX, signature, ""java/lang/ Object"", new  String [  ]  { TB Incremental Support Visitor . ALI_CHANGE_TYPE . get Internal Name (  )  } )  ;  if  ( DEBUG )  {      System . out . println ( "">>>>>>>>  Processing "" + name + ""<<<<<<<<<<<<<"" )  ;  } visited Class Name = name ;  visited Super Name = super Name ;  instance To Static Desc Prefix = "" ( L"" + visited Class Name + "" ; "" ;  //  Create empty constructor  Method Visitor mv = super . visit Method (  Opcodes . ACC_PUBLIC, ""<init>"", "" (  ) V"", null, null )  ;  mv . visit Code (  )  ;  mv . visit Var Insn (  Opcodes . ALOAD, 0 )  ;  mv . visit Method Insn (  Opcodes . INVOKESPECIAL, ""java/lang/ Object"", ""<init>"", "" (  ) V"", false )  ;  mv . visit Insn (  Opcodes . RETURN )  ;  mv . visit Maxs ( 0, 0 )  ;  mv . visit End (  )  ;  super . visit Field (  Opcodes . ACC_PUBLIC |  Opcodes . ACC_SYNTHETIC |  Opcodes . ACC_STATIC, ""$ip Obsolete"", ""Z"", null, null )  ; }"
5993,"public static  String access Multi Dex Method (  ) {  String ret = ""enable multi Dex Enabled & uncomment access Multi Dex Method"" ;  /**      * test for extra dex      * this case for : test whether class of extra dex can be accessed, after extra dex is loaded .       */ { /*retrofit2 .  Retrofit retrofit = new retrofit2 .  Retrofit .  Builder (  )                   . base Url ( ""http://www . mocky . io/v2/"" )                   . add Converter Factory ( retrofit2 . converter . gson .  Gson Converter Factory . create (  )  )                   . build (  )  ;           Log . d ( TAG, ""retrofit:"" + retrofit . base Url (  )  )  ;          ret = ""retrofit base Url: "" + retrofit . base Url (  )  ; */ } /**      * test for main dex      * this case for : test whether class of main dex can be still accessed, after extra dex is loaded .       */ { /*int auto Height = com . google . android . gms . ads .  Ad Size . AUTO_HEIGHT ;          ret += ""\n Ad Size . AUTO_HEIGHT: "" + auto Height ; */ } /**      * test for extra dex      * this case for : test whether class of extra dex can be still accessed again, after extra dex is loaded      *                 and accessing class of main dex .       */ { /*retrofit2 .  Retrofit retrofit = new retrofit2 .  Retrofit .  Builder (  )                   . base Url ( ""http://www . mocky . io/v2/"" )                   . add Converter Factory ( retrofit2 . converter . gson .  Gson Converter Factory . create (  )  )                   . build (  )  ;           Log . d ( TAG, ""retrofit:"" + retrofit . base Url (  )  )  ;          ret += ""\nretrofit base Url again: "" + retrofit . base Url (  )  ; */ } return ret ; }"
5994,"public  Quaternion from Axes ( double xx, double xy, double xz, double yx, double yy, double yz, double zx, double zy, double zz ) { //  The trace is the sum of the diagonal elements ;  see // http://mathworld . wolfram . com/ Matrix Trace . html final double m00 = xx, m01 = xy, m02 = xz ;  final double m10 = yx, m11 = yy, m12 = yz ;  final double m20 = zx, m21 = zy, m22 = zz ;  final double t = m00 + m11 + m22 ;  // Protect the division by s by ensuring that s >= 1 double x, y, z, w ;  if  ( t >= 0 )  {     // |s| >= 1     double s =  Math . sqrt ( t + 1 )  ;      // |w| >= 0 . 5     w = 0 . 5 * s ;      //<-  This division cannot be bad     s = 0 . 5 / s ;      x =  ( m21 - m12 )  * s ;      y =  ( m02 - m20 )  * s ;      z =  ( m10 - m01 )  * s ;  } else if  (  ( m00 > m11 )  &&  ( m00 > m22 )  )  {     // |s| >= 1     double s =  Math . sqrt ( 1 . 0 + m00 - m11 - m22 )  ;      // |x| >= 0 . 5     x = s * 0 . 5 ;      s = 0 . 5 / s ;      y =  ( m10 + m01 )  * s ;      z =  ( m02 + m20 )  * s ;      w =  ( m21 - m12 )  * s ;  } else if  ( m11 > m22 )  {     // |s| >= 1     double s =  Math . sqrt ( 1 . 0 + m11 - m00 - m22 )  ;      // |y| >= 0 . 5     y = s * 0 . 5 ;      s = 0 . 5 / s ;      x =  ( m10 + m01 )  * s ;      z =  ( m21 + m12 )  * s ;      w =  ( m02 - m20 )  * s ;  } else {     // |s| >= 1     double s =  Math . sqrt ( 1 . 0 + m22 - m00 - m11 )  ;      // |z| >= 0 . 5     z = s * 0 . 5 ;      s = 0 . 5 / s ;      x =  ( m02 + m20 )  * s ;      y =  ( m21 + m12 )  * s ;      w =  ( m10 - m01 )  * s ;  } return set All ( w, x, y, z )  ; }"
5995,"public  Async Operation delete (  Object entity, int flags ) { return enqueue Entity Operation (  Operation Type .  Delete, entity, flags )  ; }"
5996,"public static void run ( @ Non Null  List<T> list, @ Non Null  Action<? super T> action ) { for  ( int i = 0, count = list . size (  )  ;  i < count ;  i++ )  {     action . apply ( list . get ( i ) , i )  ;  }}"
5997,"protected void on Queue Input Buffer (  Decoder Input Buffer buffer ) { buffers In Codec Count++ ;  last Input Time Us =  Math . max ( buffer . time Us, last Input Time Us )  ;  if  (  Util . SDK_INT < 23 && tunneling )  {     //  In tunneled mode before API 23 we don't have a way to know when the buffer is output, so     // treat it as if it were output immediately .      on Processed Tunneled Buffer ( buffer . time Us )  ;  }}"
5998,public void launch (  ) { build (  )  . launch ( context )  ; }
5999,"public static  Access Path Nullness Analysis instance (  Context context,  Predicate< Method Invocation Node> method Returns Non Null,  Config config,  Handler handler ) {  Access Path Nullness Analysis instance = context . get ( FIELD_NULLNESS_ANALYSIS_KEY )  ;  if  ( instance == null )  {     instance = new  Access Path Nullness Analysis ( method Returns Non Null, context, config, handler )  ;      context . put ( FIELD_NULLNESS_ANALYSIS_KEY, instance )  ;  } return instance ; }"
6000,"public com . anychart . standalones . axismarkers .  Line value (  Number new Value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . value ( %s )  ; "", new Value )  )  ;  return this ; }"
6001,public void set Buildozer Executable Override (  Optional< String> buildozer Executable Override ) { this . state . buildozer Executable = buildozer Executable Override . or Else ( null )  ; }
6002,public  Expr get Root Expr (  ) { return xpath . get Root Expr (  )  ; }
6003,public static float [  ]  to Array (  Collection<? extends  Number> collection ) { if  ( collection instanceof  Float Array As List )  {     return  (  (  Float Array As List )  collection )  . to Float Array (  )  ;  }  Object [  ]  boxed Array = collection . to Array (  )  ;  int len = boxed Array . length ;  float [  ]  array = new float [ len ]  ;  for  ( int i = 0 ;  i < len ;  i++ )  {     // check Not Null for GWT  ( do not optimize )      array [ i ]  =  (  (  Number )  check Not Null ( boxed Array [ i ]  )  )  . float Value (  )  ;  } return array ; }
6004,"public  Project Build File Parser create File Parser (  Buck Event Bus event Bus,  Cell cell,  Watchman watchman, boolean thread Safe ) {  Parser Config parser Config = cell . get Buck Config (  )  . get View (  Parser Config . class )  ;  boolean use Watchman Glob = parser Config . get Glob Handler (  )  ==  Parser Config .  Glob Handler . WATCHMAN && watchman . has Wildmatch Glob (  )  ;  boolean watchman Glob Stat Results = parser Config . get Watchman Glob Sanity Check (  )  ==  Parser Config .  Watchman Glob Sanity Check . STAT ;  boolean watchman Use Glob Generator = watchman . get Capabilities (  )  . contains (  Capability . GLOB_GENERATOR )  ;   Optional< String> python Module Search Path = parser Config . get Python Module Search Path (  )  ;   Project Build File Parser Options build File Parser Options =  Project Build File Parser Options . builder (  )  . set Enable Profiling ( enable Profiling )  . set Project Root ( cell . get Filesystem (  )  . get Root Path (  )  )  . set Cell Roots ( cell . get Cell Path Resolver (  )  . get Cell Paths By Root Cell External Name (  )  )  . set Cell Name ( cell . get Canonical Name (  )  . get Name (  )  )  . set Python Interpreter ( python Interpreter Provider . get Or Fail (  )  )  . set Python Module Search Path ( python Module Search Path )  . set Allow Empty Globs ( parser Config . get Allow Empty Globs (  )  )  . set Ignore Paths ( cell . get Filesystem (  )  . get Ignore Paths (  )  )  . set Build File Name ( cell . get Buck Config View (  Parser Config . class )  . get Build File Name (  )  )  . set Default Includes ( parser Config . get Default Includes (  )  )  . set Descriptions ( known Rule Types Provider . get Native Rule Types ( cell )  . get Descriptions (  )  )  . set Per Feature Providers ( known Rule Types Provider . get Native Rule Types ( cell )  . get Per Feature Providers (  )  )  . set Use Watchman Glob ( use Watchman Glob )  . set Watchman Glob Stat Results ( watchman Glob Stat Results )  . set Watchman Use Glob Generator ( watchman Use Glob Generator )  . set Watchman ( watchman )  . set Watchman Query Timeout Ms ( parser Config . get Watchman Query Timeout Ms (  )  )  . set Raw Config ( cell . get Buck Config (  )  . get View (  Config Ignored By Daemon . class )  . get Raw Config For Parser (  )  )  . set Build File Import Whitelist ( parser Config . get Build File Import Whitelist (  )  )  . set Implicit Native Rules State ( parser Config . get Implicit Native Rules State (  )  )  . set User Defined Rules State ( parser Config . get User Defined Rules State (  )  )  . set Warn About Deprecated Syntax ( parser Config . is Warn About Deprecated Syntax (  )  )  . set Package Implicit Includes ( parser Config . get Package Implicit Includes (  )  )  . build (  )  ;  return  Event Reporting Project Build File Parser . of ( create Project Build File Parser ( cell, type Coercer Factory, console, event Bus, parser Config, build File Parser Options, thread Safe ) , event Bus )  ; }"
6005,"public void draw Top Line (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . draw Top Line (  )  ; "" )  ; }"
6006,"public com . anychart . core . cartesian . series .  Bar3d is Vertical (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . is Vertical ( %s )  ; "", enabled )  )  ;  return this ; }"
6007,"public static  Rx Java2 Call Adapter Factory create Async (  ) { return new  Rx Java2 Call Adapter Factory ( null, true )  ; }"
6008,"public com . anychart . core . stock . scrollerseries .  Range Area low Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6009,"public com . anychart . core . ui .  Markers Factory markers (  ) { return new com . anychart . core . ui .  Markers Factory ( js Base + "" . markers (  ) "" )  ; }"
6010,"public static  Resources close Adapt ( @ Non Null final  Resources resources ) { float new Xdpi =  Resources . get System (  )  . get Display Metrics (  )  . density * 72f ;  apply Display Metrics ( resources, new Xdpi )  ;  return resources ; }"
6011,"public static  Immutable List< Executable Element> methods On Interfaces (  Type Element type ) {  Immutable List .  Builder< Executable Element> interface Methods = new  Immutable List .  Builder<> (  )  ;  add Interface Methods ( type, interface Methods )  ;  return interface Methods . build (  )  ; }"
6012,public int get Border Color (  ) { return m Border Color ; }
6013,public void clear Cached Widths (  ) { m Cached Width List . clear (  )  ; }
6014,"public void full Frame ( int pos, int offset Delta, int [  ]  local Tags, int [  ]  local Data, int [  ]  stack Tags, int [  ]  stack Data )  throws  Bad Bytecode{}"
6015,"public boolean is Valid (  String value,  String pattern ) { return is Valid ( value, pattern,  (  Locale )  null )  ; }"
6016,"public T find View By Id Efficient ( int id ) { return  ( T )  find View By Id Efficient ( 0, id )  ; }"
6017,"public com . anychart . core . stock . scrollerseries .  Step Area bottom (  Number bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", bottom )  )  ;  return this ; }"
6018,public float get Reference Angle (  ) { return jni Get Reference Angle ( addr )  ; }
6019,"public void set Data ( final  Byte Buffer data ) { // int pos = data . position (  )  ;  // byte [  ]  prdata = new byte [ data . remaining (  )  ]  ;  // data . get ( prdata )  ;  //  Hex Dump . print Data ( prdata )  ;  // data . position ( pos )  ;  // read the contour end points final short [  ]  contour End Pts_ = new short [ get Num Contours (  )  ]  ;  for  ( int i = 0, to = contour End Pts_ . length ;  i < to ;  ++i )  {     contour End Pts_ [ i ]  = data . get Short (  )  ;  } set Contour End Points ( contour End Pts_ )  ;  // the number of points in the glyf is the number of the end // point in the last contour final int num Points = get Contour End Point ( get Num Contours (  )  - 1 )  + 1 ;  // read the instructions final short num Instructions = data . get Short (  )  ;  final byte [  ]  instructions_ = new byte [ num Instructions ]  ;  data . get ( instructions_ )  ;  set Instructions ( instructions_ )  ;  // read the flags final byte [  ]  flags_ = new byte [ num Points ]  ;  for  ( int i = 0, to = flags_ . length ;  i < to ;  ++i )  {     flags_ [ i ]  = data . get (  )  ;      // check for repeats     if  (  ( flags_ [ i ]  & 0x8 )  != 0 )  {         final byte f = flags_ [ i ]  ;          final int n =  ( int )   ( data . get (  )  & 0xff )  ;          for  ( int c = 0 ;  c < n ;  c++ )  {             flags_ [ ++i ]  = f ;          }     } } set Flags ( flags_ )  ;  // read the x coordinates final short [  ]  x Coords_ = new short [ num Points ]  ;  for  ( int i = 0, to = x Coords_ . length ;  i < to ;  i++ )  {     if  ( i > 0 )  {         x Coords_ [ i ]  = x Coords_ [ i - 1 ]  ;      }     // read this value     if  ( x Is Byte ( i )  )  {         int val =  ( int )   ( data . get (  )  & 0xff )  ;          if  ( !x Is Same ( i )  )  {             // the x Is Same bit controls the sign             val = -val ;          }         x Coords_ [ i ]  += val ;      } else if  ( !x Is Same ( i )  )  {         x Coords_ [ i ]  += data . get Short (  )  ;      } } set X Coords ( x Coords_ )  ;  // read the y coordinates final short [  ]  y Coords_ = new short [ num Points ]  ;  for  ( int i = 0, to = y Coords_ . length ;  i < to ;  i++ )  {     if  ( i > 0 )  {         y Coords_ [ i ]  = y Coords_ [ i - 1 ]  ;      }     // read this value     if  ( y Is Byte ( i )  )  {         int val =  ( int )   ( data . get (  )  & 0xff )  ;          if  ( !y Is Same ( i )  )  {             // the x Is Same bit controls the sign             val = -val ;          }         y Coords_ [ i ]  += val ;      } else if  ( !y Is Same ( i )  )  {         y Coords_ [ i ]  += data . get Short (  )  ;      } } set Y Coords ( y Coords_ )  ; }"
6020,"public float get Motor Torque ( float inv Dt ) { return jni Get Motor Torque ( addr, inv Dt )  ; }"
6021,"public static  Function< Item,  Boolean> and ( final  Function< Item,  Boolean> predicate1, final  Function< Item,  Boolean> predicate2 ) { return new  And Operator ( predicate1, predicate2 )  ; }"
6022,"public void depends On Binding With Key (  String qualifier,  String type ) { depends On Binding With Key String ( key String ( qualifier, type )  )  ; }"
6023,"public com . anychart . core .  State Settings selected (  ) { return new com . anychart . core .  State Settings ( js Base + "" . selected (  ) "" )  ; }"
6024,public void test Lab (  Action< Firebase Test Lab Extension> action ) { action . execute ( test Lab )  ; }
6025,public float get Max Force (  ) { return jni Get Max Force ( addr )  ; }
6026,"public void levels (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . levels (  )  ; "" )  ; }"
6027,public static  Glide Options signature Of ( @ Non Null  Key key ) { return new  Glide Options (  )  . signature ( key )  ; }
6028,public static synchronized  Merge Strategy get (  String name ) { return STRATEGIES . get ( name )  ; }
6029,"public static  Observable per Millisecond Observable ( final int shortest Update Window Millis, @ Non Null final  Observable .  .  .  observables ) { return composite Observable ( shortest Update Window Millis, observables )  ; }"
6030,"public com . anychart . charts .  Scatter bounds (  String x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
6031,"private  Scale Type Drawable get Scale Type Drawable At Index ( int index ) {  Drawable Parent parent = get Parent Drawable At Index ( index )  ;  if  ( parent instanceof  Scale Type Drawable )  {     return  (  Scale Type Drawable )  parent ;  } else {     return  Wrapping Utils . wrap Child With Scale Type ( parent,  Scaling Utils .  Scale Type . FIT_XY )  ;  }}"
6032,final boolean empty (  ) { return object == null ; }
6033,public  Media Period Info get Playing Media Period (  ) { return media Period Info Queue . is Empty (  )  || timeline . is Empty (  )  || is Seeking ? null : media Period Info Queue . get ( 0 )  ; }
6034,public  Builder clear Name (  ) { name_ = get Default Instance (  )  . get Name (  )  ;  on Changed (  )  ;  return this ; }
6035,"public  Equals Builder append (  Object [  ]  lhs,  Object [  ]  rhs ) { if  ( is Equals == false )  {     return this ;  } if  ( lhs == rhs )  {     return this ;  } if  ( lhs == null || rhs == null )  {     this . set Equals ( false )  ;      return this ;  } if  ( lhs . length != rhs . length )  {     this . set Equals ( false )  ;      return this ;  } for  ( int i = 0 ;  i < lhs . length && is Equals ;  ++i )  {     append ( lhs [ i ] , rhs [ i ]  )  ;  } return this ; }"
6036,public  Message Type get Message Type (  ) { return message Type ; }
6037,protected  Array List< Employee> do In Background (  Void .  .  .  ignore ) { try {      Thread . sleep ( 1500 )  ;  } catch  (  Interrupted Exception e )  {     e . print Stack Trace (  )  ;  } return generate New Dummy Data And Add To List (  )  ; }
6038,"public void default Series Type (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . default Series Type (  )  ; "" )  ; }"
6039,public  Media Player get Current Media Player (  ) { return m Current Media Player ; }
6040,"public static  Submodule Walk for Path (  Repository repository,  Any Object Id tree Id,  String path )  throws IO Exception{  Submodule Walk generator = new  Submodule Walk ( repository )  ;  try {     generator . set Tree ( tree Id )  ;       Path Filter filter =  Path Filter . create ( path )  ;      generator . set Filter ( filter )  ;      generator . set Root Tree ( tree Id )  ;      while  ( generator . next (  )  )  if  ( filter . is Done ( generator . walk )  )          return generator ;  } catch  ( IO Exception e )  {     generator . close (  )  ;      throw e ;  } generator . close (  )  ;  return null ; }"
6041,public int get Repeat Count (  ) { return m Repeat Count ; }
6042,"public com . anychart . core . resource .  Grid parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
6043,"public com . anychart . charts .  Stock padding (  Number value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
6044,"public void save As Pdf (  String paper Size Or Width Or Options,  Boolean landscape,  Number x,  Number y,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Pdf ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( paper Size Or Width Or Options ) , landscape, x, y, wrap Quotes ( filename )  )  )  ; }"
6045,"public com . anychart . core . resource .  Grid horizontal Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . horizontal Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
6046,"static byte [  ]  new Pre Filled Byte Array ( int size ) { return new Pre Filled Byte Array ( 0, size )  ; }"
6047,"private  String ui Mode (  ) {  Ui Mode Manager ui Mode Manager =  (  Ui Mode Manager )  get React Application Context (  )  . get System Service ( UI_MODE_SERVICE )  ;  switch ( ui Mode Manager . get Current Mode Type (  )  )  {     case  Configuration . UI_MODE_TYPE_TELEVISION:         return ""tv"" ;      case  Configuration . UI_MODE_TYPE_CAR:         return ""car"" ;      case  Configuration . UI_MODE_TYPE_DESK:         return ""desk"" ;      case  Configuration . UI_MODE_TYPE_WATCH:         return ""watch"" ;      case  Configuration . UI_MODE_TYPE_NORMAL:         return ""normal"" ;      default:         return ""unknown"" ;  }}"
6048,"static  Bounds get Bounds (  Collection< Weighted Lat Lng> points ) { //  Use an iterator, need to access any one point of the collection for starting bounds  Iterator< Weighted Lat Lng> iter = points . iterator (  )  ;   Weighted Lat Lng first = iter . next (  )  ;  double min X = first . get Point (  )  . x ;  double max X = first . get Point (  )  . x ;  double min Y = first . get Point (  )  . y ;  double max Y = first . get Point (  )  . y ;  while  ( iter . has Next (  )  )  {      Weighted Lat Lng l = iter . next (  )  ;      double x = l . get Point (  )  . x ;      double y = l . get Point (  )  . y ;      //  Extend bounds if necessary     if  ( x < min X )          min X = x ;      if  ( x > max X )          max X = x ;      if  ( y < min Y )          min Y = y ;      if  ( y > max Y )          max Y = y ;  } return new  Bounds ( min X, max X, min Y, max Y )  ; }"
6049,public  Ftp Channel get Ftp Channel (  ) { return new  Sshd Ftp Channel (  )  ; }
6050,"public int get Drawer Lock Mode ( @ Edge Gravity int edge Gravity ) { final int abs Gravity =  Gravity Compat . get Absolute Gravity ( edge Gravity,  View Compat . get Layout Direction ( this )  )  ;  if  ( abs Gravity ==  Gravity . LEFT )  {     return m Lock Mode Left ;  } else if  ( abs Gravity ==  Gravity . RIGHT )  {     return m Lock Mode Right ;  } return LOCK_MODE_UNLOCKED ; }"
6051,public boolean is Reachable (  ) { if  ( reachable == -1 )  {     parent . compute Reachability (  )  ;  } return  ( reachable == 1 )  ; }
6052,public static long  Fib ( int n ) { if  ( n < 2 )  {     return n ;  } else {     return  Fib ( n - 1 )  +  Fib ( n - 2 )  ;  }}
6053,"public void update (  )  throws IO Exception{ out Filesystem . mkdirs ( get Idea Config Dir (  )  )  ;  project Data Preparer . get Modules To Be Written (  )  . parallel Stream (  )  . for Each (  module -> {     try {          Immutable List< Content Root> content Roots = project Data Preparer . get Content Roots ( module )  ;          write Module ( module, content Roots )  ;      } catch  ( IO Exception e )  {         throw new  Runtime Exception ( e )  ;      } } )  ;  project Data Preparer . get Libraries To Be Written (  )  . parallel Stream (  )  . for Each (  library -> {     try {         write Library ( library )  ;      } catch  ( IO Exception e )  {         throw new  Runtime Exception ( e )  ;      } } )  ;  update Modules Index ( project Data Preparer . get Modules To Be Written (  )  )  ;  if  ( project Config . is Generating Target Info Map Enabled (  )  )  {     write Target Info Map ( project Data Preparer, true )  ;  }}"
6054,public static  String get Column Prefix (  ) { return column Prefix ; }
6055,"public static double [  ]  v3 Cross ( double [  ]  a, double [  ]  b ) { return new double [  ]  { a [ 1 ]  * b [ 2 ]  - a [ 2 ]  * b [ 1 ] , a [ 2 ]  * b [ 0 ]  - a [ 0 ]  * b [ 2 ] , a [ 0 ]  * b [ 1 ]  - a [ 1 ]  * b [ 0 ]  } ; }"
6056,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_YEAR ; }
6057,"public  Db Model find Db Model By SQL (  String str SQL ) { debug Sql ( str SQL )  ;   Cursor cursor = db . raw Query ( str SQL, null )  ;  try {     if  ( cursor . move To Next (  )  )  {         return  Cursor Helper . get Db Model ( cursor )  ;      } } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  } finally {     cursor . close (  )  ;  } return null ; }"
6058,protected int place ( int item ) { return  ( int )   ( item * 0x9 E3779 B97 F4 A7 C15 L >>> shift )  ; }
6059,public void start (  ) { timer . reset (  )  ;  network Metric Builder . set Request Start Time Micros ( timer . get Micros (  )  )  ; }
6060,"public static  Immutable Map< String,  Cxx Source> parse Cxx Sources (  Build Target build Target,  Action Graph Builder graph Builder,  Cxx Platform cxx Platform,  Cxx Constructor Arg args ) { return parse Cxx Sources ( build Target, graph Builder, cxx Platform, args . get Srcs (  ) , args . get Platform Srcs (  )  )  ; }"
6061,public void set Snippet (  String snippet ) { m Snippet = snippet ; }
6062,"public static  Media Codec Info new Passthrough Instance (  String name ) { return new  Media Codec Info ( name, /* mime Type= */ null, /* capabilities= */ null, /* passthrough= */ true, /* force Disable Adaptive= */ false, /* force Secure= */ false )  ; }"
6063,public void set Last Scene ( final int last Scene ) { this . last Scene = last Scene ; }
6064,"public com . anychart . core . polar . series .  Continuous Base selection Mode ( com . anychart . enums .  Selection Mode value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selection Mode ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
6065,public  Result get Result (  ) { return status ; }
6066,"public  Note get Note (  Any Object Id id )  throws IO Exception{ return root . get Note ( id, reader )  ; }"
6067,"public static  Immutable Sorted Set< Artifact> get Artifacts From Srcs (  Iterable< Source Path> srcs,  Immutable Map< Build Target,  Provider Info Collection> deps ) {  Immutable Sorted Set .  Builder< Artifact> artifacts =  Immutable Sorted Set . natural Order (  )  ;  for  (  Source Path src : srcs )  {     artifacts . add (  Source Artifact Converter . get Artifacts From Src ( src, deps )  )  ;  } return artifacts . build (  )  ; }"
6068,public  Builder set Show Hour (  Boolean is Show Hour ) { this . is Show Hour = is Show Hour ;  return this ; }
6069,"void test Write V2 Read V1 (  )  throws  Exception{ final var output Path =  Files . create File ( test Folder . resolve ( ""output File2"" )  )  ;   Rainbow Fish Serializer . write V2 ( V2, output Path . to String (  )  )  ;  final var fish =  Rainbow Fish Serializer . read V1 ( output Path . to String (  )  )  ;  assert Not Same ( V2, fish )  ;  assert Equals ( V2 . get Name (  ) , fish . get Name (  )  )  ;  assert Equals ( V2 . get Age (  ) , fish . get Age (  )  )  ;  assert Equals ( V2 . get Length Meters (  ) , fish . get Length Meters (  )  )  ;  assert Equals ( V2 . get Weight Tons (  ) , fish . get Weight Tons (  )  )  ; }"
6070,"public static R Dot Txt Entry match Parent ( R Dot Txt Entry entry ) { return  Fake Entry . create With Parent ( entry . id Type, entry . type, entry . name, entry . parent )  ; }"
6071,"public static  Property Values Holder of Keyframe (  String property Name,  Keyframe .  .  .  values ) {  Keyframe Set keyframe Set =  Keyframe Set . of Keyframe ( values )  ;  if  ( keyframe Set instanceof  Int Keyframe Set )  {     return new  Int Property Values Holder ( property Name,  (  Int Keyframe Set )  keyframe Set )  ;  } else if  ( keyframe Set instanceof  Float Keyframe Set )  {     return new  Float Property Values Holder ( property Name,  (  Float Keyframe Set )  keyframe Set )  ;  } else {      Property Values Holder pvh = new  Property Values Holder ( property Name )  ;      pvh . m Keyframe Set = keyframe Set ;      pvh . m Value Type =  (  (  Keyframe )  values [ 0 ]  )  . get Type (  )  ;      return pvh ;  }}"
6072,public int get Padding Top (  ) { return padding Top ; }
6073,"protected final  String binding Elements (  String rule Format,  Object .  .  .  args ) { return new  Formatter (  )  . format ( ""%s "", binding Elements (  )  )  . format ( rule Format, args )  . to String (  )  ; }"
6074,public boolean is Unsynchronization (  ) { return unsynchronization ; }
6075,"public  Change Mode Controller init ( final  Activity activity, final  Class m Class ) { init (  )  ;   Layout Inflater Compat . set Factory (  Layout Inflater . from ( activity ) , new  Layout Inflater Factory (  )  {     @ Override     public  View on Create View (  View parent,  String name,  Context context,  Attribute Set attrs )  {          View view = null ;          try {             if  ( name . index Of ( ' . ' )  == -1 )  {                 if  ( "" View"" . equals ( name )  )  {                     view =  Layout Inflater . from ( context )  . create View ( name, ""android . view . "", attrs )  ;                  }                 if  ( view == null )  {                     view =  Layout Inflater . from ( context )  . create View ( name, ""android . widget . "", attrs )  ;                  }                 if  ( view == null )  {                     view =  Layout Inflater . from ( context )  . create View ( name, ""android . webkit . "", attrs )  ;                  }             } else {                 if  ( view == null )  {                     view =  Layout Inflater . from ( context )  . create View ( name, null, attrs )  ;                  }             }             if  ( view != null )  {                 //  Log . e ( ""TAG"", ""name = "" + name )  ;                  for  ( int i = 0 ;  i < attrs . get Attribute Count (  )  ;  i++ )  {                     //                             Log . e ( ""TAG"", attrs . get Attribute Name ( i )  + "" , "" + attrs . get Attribute Value ( i )  )  ;                      if  ( attrs . get Attribute Name ( i )  . equals ( ATTR_BACKGROUND )  )  {                         m Back Ground Views . add ( new  Attr Entity< View> ( view, get Attr ( m Class, attrs . get Attribute Value ( i )  )  )  )  ;                      }                     if  ( attrs . get Attribute Name ( i )  . equals ( ATTR_TEXTCOLOR )  )  {                         m One Text Color Views . add ( new  Attr Entity< Text View> (  (  Text View )  view, get Attr ( m Class, attrs . get Attribute Value ( i )  )  )  )  ;                      }                     if  ( attrs . get Attribute Name ( i )  . equals ( ATTR_TWO_TEXTCOLOR )  )  {                         m One Text Color Views . add ( new  Attr Entity< Text View> (  (  Text View )  view, get Attr ( m Class, attrs . get Attribute Value ( i )  )  )  )  ;                      }                     if  ( attrs . get Attribute Name ( i )  . equals ( ATTR_THREE_TEXTCOLOR )  )  {                         m One Text Color Views . add ( new  Attr Entity< Text View> (  (  Text View )  view, get Attr ( m Class, attrs . get Attribute Value ( i )  )  )  )  ;                      }                     if  ( attrs . get Attribute Name ( i )  . equals ( ATTR_BACKGROUND_DRAWABLE )  )  {                         m Back Ground Drawable Views . add ( new  Attr Entity< View> ( view, get Attr ( m Class, attrs . get Attribute Value ( i )  )  )  )  ;                      }                 }             }         } catch  (  Exception e )  {             e . print Stack Trace (  )  ;          }         return view ;      } } )  ;  return this ; }"
6076,"public  Intent execute (  Context context ) { double [  ]  min Values = new double [  ]  { -24, -19, -10, -1, 7, 12, 15, 14, 9, 1, -11, -16 } ;  double [  ]  max Values = new double [  ]  { 7, 12, 24, 28, 33, 35, 37, 36, 28, 19, 11, 4 } ;  XY Multiple Series Dataset dataset = new XY Multiple Series Dataset (  )  ;   Range Category Series series = new  Range Category Series ( "" Temperature"" )  ;  int length = min Values . length ;  for  ( int k = 0 ;  k < length ;  k++ )  {     series . add ( min Values [ k ] , max Values [ k ]  )  ;  } dataset . add Series ( series . to XY Series (  )  )  ;  int [  ]  colors = new int [  ]  {  Color . CYAN } ;  XY Multiple Series Renderer renderer = build Bar Renderer ( colors )  ;  set Chart Settings ( renderer, "" Monthly temperature range"", "" Month"", "" Celsius degrees"", 0 . 5, 12 . 5, -30, 45,  Color . GRAY,  Color . LTGRAY )  ;  renderer . set Bar Spacing ( 0 . 5 )  ;  renderer . set X Labels ( 0 )  ;  renderer . set Y Labels ( 10 )  ;  renderer . add X Text Label ( 1, "" Jan"" )  ;  renderer . add X Text Label ( 3, "" Mar"" )  ;  renderer . add X Text Label ( 5, "" May"" )  ;  renderer . add X Text Label ( 7, "" Jul"" )  ;  renderer . add X Text Label ( 10, "" Oct"" )  ;  renderer . add X Text Label ( 12, "" Dec"" )  ;  renderer . add Y Text Label ( -25, "" Very cold"" )  ;  renderer . add Y Text Label ( -10, "" Cold"" )  ;  renderer . add Y Text Label ( 5, ""OK"" )  ;  renderer . add Y Text Label ( 20, "" Nice"" )  ;  renderer . set Margins ( new int [  ]  { 30, 70, 10, 0 } )  ;  renderer . set Y Labels Align (  Align . RIGHT )  ;  XY Series Renderer r =  ( XY Series Renderer )  renderer . get Series Renderer At ( 0 )  ;  r . set Display Chart Values ( true )  ;  r . set Chart Values Text Size ( 12 )  ;  r . set Chart Values Spacing ( 3 )  ;  r . set Gradient Enabled ( true )  ;  r . set Gradient Start ( -20,  Color . BLUE )  ;  r . set Gradient Stop ( 20,  Color . GREEN )  ;  return  Chart Factory . get Range Bar Chart Intent ( context, dataset, renderer,  Type . DEFAULT, "" Temperature range"" )  ; }"
6077,"protected void animate Loading View In (  ) {  Lce Animator . show Loading ( loading View, content View, error View )  ; }"
6078,public static  Navigation for Number ( int value ) { switch ( value )  {     case 0:         return NAVIGATION_UNSET ;      case 1:         return NAVIGATION_NONAV ;      case 2:         return NAVIGATION_DPAD ;      case 3:         return NAVIGATION_TRACKBALL ;      case 4:         return NAVIGATION_WHEEL ;      default:         return null ;  }}
6079,"public com . anychart . core . annotations .  Horizontal Line bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
6080,public static  List< Car> get Sedan Cars Owned Sorted By Date (  List< Person> persons ) { return persons . stream (  )  . map (  Person::get Cars )  . flat Map (  List::stream )  . filter (  car ->  Category . SEDAN . equals ( car . get Category (  )  )  )  . sorted (  Comparator . comparing (  Car::get Year )  )  . collect (  Collectors . to List (  )  )  ; }
6081,"public void write (  File Handle file ) {  Data Output Stream write = null ;  byte [  ]  buffer = new byte [ 10 * 1024 ]  ;  int written Bytes = 0 ;   (  (  Buffer )  compressed Data )  . position ( 0 )  ;   (  (  Buffer )  compressed Data )  . limit ( compressed Data . capacity (  )  )  ;  try {     write = new  Data Output Stream ( new GZIP Output Stream ( file . write ( false )  )  )  ;      write . write Int ( compressed Data . capacity (  )  )  ;      while  ( written Bytes != compressed Data . capacity (  )  )  {         int bytes To Write =  Math . min ( compressed Data . remaining (  ) , buffer . length )  ;          compressed Data . get ( buffer, 0, bytes To Write )  ;          write . write ( buffer, 0, bytes To Write )  ;          written Bytes += bytes To Write ;      } } catch  (  Exception e )  {     throw new  Gdx Runtime Exception ( "" Couldn't write PKM file to '"" + file + ""'"", e )  ;  } finally {      Stream Utils . close Quietly ( write )  ;  }  (  (  Buffer )  compressed Data )  . position ( data Offset )  ;   (  (  Buffer )  compressed Data )  . limit ( compressed Data . capacity (  )  )  ; }"
6082,"static  Stats read From (  Byte Buffer buffer ) { check Not Null ( buffer )  ;  check Argument ( buffer . remaining (  )  >= BYTES, "" Expected at least  Stats . BYTES = %s remaining , got %s"", BYTES, buffer . remaining (  )  )  ;  return new  Stats ( buffer . get Long (  ) , buffer . get Double (  ) , buffer . get Double (  ) , buffer . get Double (  ) , buffer . get Double (  )  )  ; }"
6083,public void key Released (  Key Event e ) { e . consume (  )  ; }
6084,"public com . anychart . charts .  Tree Map bottom (  String bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", wrap Quotes ( bottom )  )  )  ;  return this ; }"
6085,public boolean contains (  Object o ) { if  ( o == null )      return false ;  final  Reentrant Lock lock = this . lock ;  lock . lock (  )  ;  try {     for  (  Node<E> p = first ;  p != null ;  p = p . next )  if  ( o . equals ( p . item )  )          return true ;      return false ;  } finally {     lock . unlock (  )  ;  }}
6086,"public static  Resource Folder Type get Folder Type (  String folder Name ) { int index = folder Name . index Of (  Resource Constants . RES_QUALIFIER_SEP )  ;  if  ( index != -1 )  {     folder Name = folder Name . substring ( 0, index )  ;  } return get Type By Name ( folder Name )  ; }"
6087,"public static bt Collision Object get Instance ( final long swig C Ptr, boolean owner ) { if  ( swig C Ptr == 0 )      return null ;  bt Collision Object result = instances . get ( swig C Ptr )  ;  if  ( result == null )      result = new bt Collision Object ( swig C Ptr, owner )  ;  return result ; }"
6088,public float get Pad Right (  ) { if  ( pad Right == -1 )      return get Right Width (  )  ;  return pad Right ; }
6089,"public void is None Of ( @ Nullable  Object first, @ Nullable  Object second, @ Nullable  Object .  .  .  rest ) { super . is None Of ( first, second, rest )  ; }"
6090,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
6091,"public  Map<K,  Long> as Map (  ) {  Map<K,  Long> result = as Map ;  return  ( result == null )  ? as Map = create As Map (  )  : result ; }"
6092,"public com . anychart . core . grids .  Map Settings fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
6093,protected boolean is Background Restricted (  ) { return is Background Restricted ; }
6094,"public static byte [  ]  encrypt MD2 ( final byte [  ]  data ) { return hash Template ( data, ""MD2"" )  ; }"
6095,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
6096,"public com . anychart . charts .  Pert bounds (  Number x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
6097,"protected void show Light Error (  String msg ) {  Toast . make Text ( this, msg,  Toast . LENGTH_SHORT )  . show (  )  ; }"
6098,public long get Default Max Results (  ) { return 999 ; }
6099,"public com . anychart . charts .  Circular Gauge padding (  String value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
6100,"public void show (  ) { show ( false, null )  ; }"
6101,"public com . anychart . standalones .  Title text Direction (  String direction ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Direction ( %s )  ; "", wrap Quotes ( direction )  )  )  ;  return this ; }"
6102,private static int to Even ( float value ) { int i =  Math . round ( value )  ;  return  ( i % 2 == 1 )  ? i - 1 : i ; }
6103,public  Object get Raw Data (  ) { return raw Data ; }
6104,"public static  Pair< Long,  Long> get License Duration Remaining Sec (  Drm Session<?> drm Session ) {  Map< String,  String> key Status = drm Session . query Key Status (  )  ;  if  ( key Status == null )  {     return null ;  } return new  Pair<> ( get Duration Remaining Sec ( key Status, PROPERTY_LICENSE_DURATION_REMAINING ) , get Duration Remaining Sec ( key Status, PROPERTY_PLAYBACK_DURATION_REMAINING )  )  ; }"
6105,static  Type Name get Base Type If Wildcard (  Type Name type Name ) { if  ( type Name instanceof  Wildcard Type Name )  {     return  (  (  Wildcard Type Name )  type Name )  . upper Bounds . get ( 0 )  ;  } return type Name ; }
6106,public  Array< Page> get Pages (  ) { return pages ; }
6107,public  Uri get Link (  ) { return link ; }
6108,"public  Media Period Id copy With Period Uid (  Object new Period Uid ) { return period Uid . equals ( new Period Uid )  ? this : new  Media Period Id ( new Period Uid, ad Group Index, ad Index In Ad Group, window Sequence Number, next Ad Group Index )  ; }"
6109,public  Tag Command set Signed ( boolean signed ) { check Callable (  )  ;  this . signed =  Boolean . value Of ( signed )  ;  return this ; }
6110,"protected  Integer map Throwable Flat (  Throwable throwable ) {  Class<? extends  Throwable> throwable Class = throwable . get Class (  )  ;   Integer res Id = throwable To Msg Id Map . get ( throwable Class )  ;  if  ( res Id == null )  {      Class<? extends  Throwable> closest Class = null ;       Set< Entry< Class<? extends  Throwable>,  Integer>> mappings = throwable To Msg Id Map . entry Set (  )  ;      for  (  Entry< Class<? extends  Throwable>,  Integer> mapping : mappings )  {          Class<? extends  Throwable> candidate = mapping . get Key (  )  ;          if  ( candidate . is Assignable From ( throwable Class )  )  {             if  ( closest Class == null || closest Class . is Assignable From ( candidate )  )  {                 closest Class = candidate ;                  res Id = mapping . get Value (  )  ;              }         }     } } return res Id ; }"
6111,"public com . anychart . core . axismarkers .  Gantt Text parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
6112,"void register Mixpanel Activity Lifecycle Callbacks (  ) { if  ( android . os .  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . ICE_CREAM_SANDWICH )  {     if  ( m Context . get Application Context (  )  instanceof  Application )  {         final  Application app =  (  Application )  m Context . get Application Context (  )  ;          m Mixpanel Activity Lifecycle Callbacks = new  Mixpanel Activity Lifecycle Callbacks ( this, m Config )  ;          app . register Activity Lifecycle Callbacks ( m Mixpanel Activity Lifecycle Callbacks )  ;      } else {         MP Log . i ( LOGTAG, "" Context is not an  Application,  Mixpanel will not automatically show in-app notifications or A/B test experiments .   We won't be able to automatically flush on an app background . "" )  ;      } }}"
6113,"public com . anychart . charts .  Mekko margin (  Number value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
6114,"public void set Title ( final  String value ) { LOGGER . info ( "" Change album title from {} to {}"", selected Album . get Title (  ) , value )  ;  selected Album . set Title ( value )  ; }"
6115,public static  String to Jvm Name (  Ct Class clazz ) { if  ( clazz . is Array (  )  )      return of ( clazz )  ;  return to Jvm Name ( clazz . get Name (  )  )  ; }
6116,"public com . anychart . core . axismarkers .  Current Price Indicator stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6117,public java . util .  List<? extends com . didiglobal . booster . aapt2 .  Resources Internal .  Compiled File .  Symbol Or Builder> get Exported Symbol Or Builder List (  ) { if  ( exported Symbol Builder_ != null )  {     return exported Symbol Builder_ . get Message Or Builder List (  )  ;  } else {     return java . util .  Collections . unmodifiable List ( exported Symbol_ )  ;  }}
6118,"public com . anychart . standalones .  Title text Overflow ( com . anychart . graphics . vector . text .  Text Overflow value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Overflow ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
6119,"public  Criteria add (  Restrictions restrictions ) { if  ( root . root Restrictions == null )  {     root . root Restrictions = restrictions ;  } else {     root . root Restrictions =  Restrictions . and ( root . root Restrictions, restrictions )  ;  } root . root Restrictions . criteria = this ;  return this ; }"
6120,"public com . anychart . core . gantt . elements .  Grouping Tasks Element stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
6121,"public static boolean can Match (  String to Check Str,  String pattern Str ) {  Pattern pattern =  Pattern . compile ( pattern Str )  ;   Matcher matcher = pattern . matcher ( to Check Str )  ;  if  ( !matcher . matches (  )  )  {     return false ;  } return true ; }"
6122,"private  String [  ]  get Hex ( final byte [  ]  bytes ) { final  String [  ]  result = new  String [ bytes . length ]  ;  final  String Builder tmp = new  String Builder (  )  ;  for  ( int i = 0 ;  i < bytes . length ;  i++ )  {     tmp . delete ( 0, tmp . length (  )  )  ;      tmp . append (  Integer . to Hex String ( 0x FF & bytes [ i ]  )  )  ;      if  ( tmp . length (  )  == 1 )  {         tmp . insert ( 0, ""0"" )  ;      }     result [ i ]  = tmp . to String (  )  ;  } return result ; }"
6123,public  Result delete (  )  throws IO Exception{ try  (  Rev Walk rw = new  Rev Walk ( get Repository (  )  )  )  {     rw . set Retain Body ( false )  ;      return delete ( rw )  ;  }}
6124,"public static  Ion get Default (  Context context ) { return get Instance ( context, ""ion"" )  ; }"
6125,public long get Elapsed (  ) { return  System . current Time Millis (  )  - e_start ; }
6126,"static  Intent Filter get Intent Filter (  String package Name ) { return new  Intent Filter ( package Name + "" . _EXOPACKAGE_DIR_UPDATED"" )  ; }"
6127,"public void include Point (  Number indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . include Point ( %s )  ; "", indexes )  )  ; }"
6128,"private static boolean is View Descendant Of (  View child,  View parent ) { if  ( child == parent )  {     return true ;  } final  View Parent the Parent = child . get Parent (  )  ;  return  ( the Parent instanceof  View Group )  && is View Descendant Of (  (  View )  the Parent, parent )  ; }"
6129,"static  Resolved Bindings for Contribution Bindings (  Key key,  Multimap< Type Element,  Contribution Binding> contribution Bindings,  Iterable< Multibinding Declaration> multibindings,  Iterable< Subcomponent Declaration> subcomponent Declarations,  Iterable< Optional Binding Declaration> optional Binding Declarations ) { return new  Auto Value_ Resolved Bindings ( key,  Immutable Set Multimap . copy Of ( contribution Bindings ) ,  Immutable Map . of (  ) ,  Immutable Set . copy Of ( multibindings ) ,  Immutable Set . copy Of ( subcomponent Declarations ) ,  Immutable Set . copy Of ( optional Binding Declarations )  )  ; }"
6130,"public void max Point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Point Width (  )  ; "" )  ; }"
6131,"public  View Tree Assert has Content Description ( final  String content Description ) { final  Immutable List< View> path = get Path To Content Description ( content Description )  ;   Java6 Assertions . assert That ( path )  . overriding Error Message ( "" Cannot find content description \""%s\"" in view hierarchy:%n%s"", content Description, actual . make String (  View Extractors . GET_CONTENT_DESCRIPTION_FUNCTION )  )  . is Not Null (  )  ;  return this ; }"
6132,public  Collection<V> values (  ) { return super . values (  )  ; }
6133,public void set Tool Tip Mode (  Tool Tip Mode tool Tip Mode ) { this . tool Tip Mode = tool Tip Mode ; }
6134,public  Status get Cause (  ) { return cause ; }
6135,List< Method Spec> generate Instance Methods For Extensions (  Set< String> glide Extension Class Names ) {  List< Executable Element> request Option Extension Methods = get Request Option Extension Methods ( glide Extension Class Names )  ;   List< Method Spec> result = new  Array List<> ( request Option Extension Methods . size (  )  )  ;  for  (  Executable Element request Options Extension Method : request Option Extension Methods )  {     result . add ( generate Methods For Request Options Extension ( request Options Extension Method )  )  ;  } return result ; }
6136,public long read Unsigned Int (  ) { return  ( data [ position++ ]  & 0x FFL )  << 24 |  ( data [ position++ ]  & 0x FFL )  << 16 |  ( data [ position++ ]  & 0x FFL )  << 8 |  ( data [ position++ ]  & 0x FFL )  ; }
6137,public  String get Current As String (  ) { if  ( current Index < nc . size (  )  && current Index >= 0 )  {     return nc . get ( current Index )  . content ;  } return null ; }
6138,public E pop (  ) { return remove First (  )  ; }
6139,boolean should Use Pool For Cell (  Cell cell ) {  Parser Config parser Config = cell . get Buck Config (  )  . get View (  Parser Config . class )  ;  // polyglot mode or if default syntax is set to  Python DSL return parser Config . is Polyglot Parsing Enabled (  )  || parser Config . get Default Build File Syntax (  )  ==  Syntax . PYTHON_DSL ; }
6140,"public static void close Soft Input (  Context context ) {  Input Method Manager input Method Manager =  (  Input Method Manager )  context . get System Service (  Context . INPUT_METHOD_SERVICE )  ;  if  ( input Method Manager != null &&  (  (  Activity )  context )  . get Current Focus (  )  != null )  {     input Method Manager . hide Soft Input From Window (  (  (  Activity )  context )  . get Current Focus (  )  . get Window Token (  ) ,  Input Method Manager . HIDE_NOT_ALWAYS )  ;  }}"
6141,"public  Account Manager Future< Bundle> add Account ( final int user Id, final  String account Type, final  String auth Token Type, final  String [  ]  required Features, final  Bundle add Account Options, final  Activity activity,  Account Manager Callback< Bundle> callback,  Handler handler ) { if  ( account Type == null )      throw new  Illegal Argument Exception ( ""account Type is null"" )  ;  final  Bundle options In = new  Bundle (  )  ;  if  ( add Account Options != null )  {     options In . put All ( add Account Options )  ;  } options In . put String ( KEY_ANDROID_PACKAGE_NAME, ""android"" )  ;  return new  Ams Task ( activity, handler, callback )  {     @ Override     public void do Work (  )  throws  Remote Exception {         add Account ( user Id, m Response, account Type, auth Token Type, required Features, activity != null, options In )  ;      } } . start (  )  ; }"
6142,public void enable Stencil Buffer ( boolean stencil Buffer ) { m Stencil Buffer = stencil Buffer ; }
6143,"public static  Collector<T, ?, M> flattening To Multimap ( java . util . function .  Function<? super T, ? extends K> key Function, java . util . function .  Function<? super T, ? extends  Stream<? extends V>> value Function, java . util . function .  Supplier<M> multimap Supplier ) { return  Collect Collectors . flattening To Multimap ( key Function, value Function, multimap Supplier )  ; }"
6144,"public  Boolean check Ignored (  String entry Path, boolean is Directory ) { // rules have higher priority for  ( int i = rules . size (  )  - 1 ;  i > -1 ;  i-- )  {      Fast Ignore Rule rule = rules . get ( i )  ;      if  ( rule . is Match ( entry Path, is Directory, true )  )  {         return  Boolean . value Of ( rule . get Result (  )  )  ;      } } return null ; }"
6145,"public  Intent to Intent (  ) {  Intent data = new  Intent (  )  ;  data . put Extra ( EXTRA_RESPONSE, this . json Serialize String (  )  )  ;  return data ; }"
6146,public UI Config<T> set Image Messages Enabled ( boolean value ) { this . image Messages Enabled = value ;  return this ; }
6147,"private boolean try Hook (  ) { try {      Class<?> close Guard Cls =  Class . for Name ( ""dalvik . system .  Close Guard"" )  ;       Class<?> close Guard Reporter Cls =  Class . for Name ( ""dalvik . system .  Close Guard$ Reporter"" )  ;       Method method Get Reporter = close Guard Cls . get Declared Method ( ""get Reporter"" )  ;       Method method Set Reporter = close Guard Cls . get Declared Method ( ""set Reporter"", close Guard Reporter Cls )  ;       Method method Set Enabled = close Guard Cls . get Declared Method ( ""set Enabled"", boolean . class )  ;      s Original Reporter = method Get Reporter . invoke ( null )  ;      method Set Enabled . invoke ( null, true )  ;      // open matrix close guard also      Matrix Close Guard . set Enabled ( true )  ;       Class Loader class Loader = close Guard Reporter Cls . get Class Loader (  )  ;      if  ( class Loader == null )  {         return false ;      }     method Set Reporter . invoke ( null,  Proxy . new Proxy Instance ( class Loader, new  Class<?> [  ]  { close Guard Reporter Cls }, new IO Close Leak Detector ( issue Listener, s Original Reporter )  )  )  ;      return true ;  } catch  (  Throwable e )  {      Matrix Log . e ( TAG, ""try Hook exp=%s"", e )  ;  } return false ; }"
6148,"public com . anychart . core . ui .  Crosshair Label font Style ( com . anychart . graphics . vector . text .  Font Style style ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Style ( %s )  ; "",  ( style != null )  ? style . get Js Base (  )  : null )  )  ;  return this ; }"
6149,"public static void drop All Tables (  Database db, boolean if Exists ) {  Minimal Entity Dao . drop Table ( db, if Exists )  ; }"
6150,"public com . anychart . charts .  Tree Map bounds (  Number x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, height )  )  ;  return this ; }"
6151,"public  String get Required Value (  String value Description )  throws  Options Exception{ if  ( m Last Option Value != null )  {      String result = m Last Option Value ;      m Last Option Value = null ;      return result ;  } if  ( m Index >= m Params . length )  {     //  No more parameters left     throw new  Options Exception ( value Description + "" missing after "" + m Last Option Original Form )  ;  }  String param = m Params [ m Index ]  ;  if  ( ""--"" . equals ( param )  )  {     //  End of options marker     throw new  Options Exception ( value Description + "" missing after "" + m Last Option Original Form )  ;  } m Index++ ;  return param ; }"
6152,"public static boolean is Purchased (  Context context,  String item Id ) { final byte [  ]  salt = get Salt (  )  ;  item Id = salt != null ?  Security . obfuscate ( context, salt, item Id )  : item Id ;  return  Transaction Manager . is Purchased ( context, item Id )  ; }"
6153,"public  String to Json (  Video video,  String [  ]  fields )  throws  Exception{ var json = new  String Builder (  )  . append ( ""{"" )  ;  var i = 0 ;  var fields Length = fields . length ;  while  ( i < fields Length )  {     json . append ( get String ( video,  Video . class . get Declared Field ( fields [ i ]  )  )  )  ;      if  ( i != fields Length - 1 )  {         json . append ( "","" )  ;      }     i++ ;  } json . append ( ""}"" )  ;  return json . to String (  )  ; }"
6154,"private void sort Nodes (  ) { if  ( m Needs Sort )  {     m Sorted Nodes . clear (  )  ;       Array List< Node> roots = new  Array List< Node> (  )  ;      int num Nodes = m Nodes . size (  )  ;      for  ( int i = 0 ;  i < num Nodes ;  ++i )  {          Node node = m Nodes . get ( i )  ;          if  ( node . dependencies == null || node . dependencies . size (  )  == 0 )  {             roots . add ( node )  ;          }     }      Array List< Node> tmp Roots = new  Array List< Node> (  )  ;      while  ( roots . size (  )  > 0 )  {         int num Roots = roots . size (  )  ;          for  ( int i = 0 ;  i < num Roots ;  ++i )  {              Node root = roots . get ( i )  ;              m Sorted Nodes . add ( root )  ;              if  ( root . node Dependents != null )  {                 int num Dependents = root . node Dependents . size (  )  ;                  for  ( int j = 0 ;  j < num Dependents ;  ++j )  {                      Node node = root . node Dependents . get ( j )  ;                      node . node Dependencies . remove ( root )  ;                      if  ( node . node Dependencies . size (  )  == 0 )  {                         tmp Roots . add ( node )  ;                      }                 }             }         }         roots . clear (  )  ;          roots . add All ( tmp Roots )  ;          tmp Roots . clear (  )  ;      }     m Needs Sort = false ;      if  ( m Sorted Nodes . size (  )  != m Nodes . size (  )  )  {         throw new  Illegal State Exception ( "" Circular dependencies cannot exist"" + "" in  Animator Set"" )  ;      } } else {     //  Doesn't need sorting, but still need to add in the node Dependencies list     // because these get removed as the event listeners fire and the dependencies     // are satisfied     int num Nodes = m Nodes . size (  )  ;      for  ( int i = 0 ;  i < num Nodes ;  ++i )  {          Node node = m Nodes . get ( i )  ;          if  ( node . dependencies != null && node . dependencies . size (  )  > 0 )  {             int num Dependencies = node . dependencies . size (  )  ;              for  ( int j = 0 ;  j < num Dependencies ;  ++j )  {                  Dependency dependency = node . dependencies . get ( j )  ;                  if  ( node . node Dependencies == null )  {                     node . node Dependencies = new  Array List< Node> (  )  ;                  }                 if  ( !node . node Dependencies . contains ( dependency . node )  )  {                     node . node Dependencies . add ( dependency . node )  ;                  }             }         }         // nodes are 'done' by default ;  they become un-done when started, and done         // again when ended         node . done = false ;      } }}"
6155,public  List< Closeable Reference< Bitmap>> get Decoded Frames (  ) { return  Closeable Reference . clone Or Null ( m Decoded Frames )  ; }
6156,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
6157,"public void test Update Non Fast Forward Unknown Object (  )  throws IO Exception{ final  Remote Ref Update rru = new  Remote Ref Update ( db, ""2c349335b7f797072cf729c4f3bb0914ecb6dec9"", ""refs/heads/master"", false, null, null )  ;  final  Ref ref = new  Object Id Ref .  Unpeeled (  Ref .  Storage . LOOSE, ""refs/heads/master"",  Object Id . from String ( ""0000000000000000000000000000000000000001"" )  )  ;  test One Update Status ( rru, ref,  Status . REJECTED_NONFASTFORWARD, null )  ; }"
6158,public  Create Branch Command set Force ( boolean force ) { check Callable (  )  ;  this . force = force ;  return this ; }
6159,"public  Map With Proto Values Fluent Assertion<M> using Double Tolerance For Fields For Values ( double tolerance, int first Field Number, int .  .  .  rest ) { return using Config ( config . using Double Tolerance For Fields ( tolerance, as List ( first Field Number, rest )  )  )  ; }"
6160,public static  Generic Drawee Hierarchy mock Drawee Hierarchy Of (  Drawable top Level Drawable ) {  Generic Drawee Hierarchy gdh = mock (  Generic Drawee Hierarchy . class )  ;  when ( gdh . get Top Level Drawable (  )  )  . then Return ( top Level Drawable )  ;  return gdh ; }
6161,"public com . anychart . core . map . series .  Choropleth bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
6162,"private int [  ]  get Pads (  Buffered Image image,  String name, int [  ]  splits ) {  Writable Raster raster = image . get Raster (  )  ;  int bottom = raster . get Height (  )  - 1 ;  int right = raster . get Width (  )  - 1 ;  int start X = get Split Point ( raster, name, 1, bottom, true, true )  ;  int start Y = get Split Point ( raster, name, right, 1, true, false )  ;  //  No need to hunt for the end if a start was never found .  int end X = 0 ;  int end Y = 0 ;  if  ( start X != 0 )      end X = get Split Point ( raster, name, start X + 1, bottom, false, true )  ;  if  ( start Y != 0 )      end Y = get Split Point ( raster, name, right, start Y + 1, false, false )  ;  //  Ensure pixels after the end are not invalid .  get Split Point ( raster, name, end X + 1, bottom, true, true )  ;  get Split Point ( raster, name, right, end Y + 1, true, false )  ;  //  No pads .  if  ( start X == 0 && end X == 0 && start Y == 0 && end Y == 0 )  {     return null ;  } // -2 here is because the coordinates were computed before the 1px border was stripped .  if  ( start X == 0 && end X == 0 )  {     start X = -1 ;      end X = -1 ;  } else {     if  ( start X > 0 )  {         start X-- ;          end X = raster . get Width (  )  - 2 -  ( end X - 1 )  ;      } else {         //  If no start point was ever found, we assume full stretch .          end X = raster . get Width (  )  - 2 ;      } } if  ( start Y == 0 && end Y == 0 )  {     start Y = -1 ;      end Y = -1 ;  } else {     if  ( start Y > 0 )  {         start Y-- ;          end Y = raster . get Height (  )  - 2 -  ( end Y - 1 )  ;      } else {         //  If no start point was ever found, we assume full stretch .          end Y = raster . get Height (  )  - 2 ;      } } if  ( scale != 1 )  {     start X =  ( int )   Math . round ( start X * scale )  ;      end X =  ( int )   Math . round ( end X * scale )  ;      start Y =  ( int )   Math . round ( start Y * scale )  ;      end Y =  ( int )   Math . round ( end Y * scale )  ;  } int [  ]  pads = new int [  ]  { start X, end X, start Y, end Y } ;  if  ( splits != null &&  Arrays . equals ( pads, splits )  )  {     return null ;  } return pads ; }"
6163,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
6164,"public  Builder set Power Save ( final long scan Interval, final long rest Interval ) { if  ( scan Interval <= 0 || rest Interval <= 0 )  {     throw new  Illegal Argument Exception ( ""scan Interval and rest Interval must be > 0"" )  ;  } power Save Scan Interval = scan Interval ;  power Save Rest Interval = rest Interval ;  return this ; }"
6165,public void handle Service Create (  Service service ) { m Plugin Mgr . handle Service Created ( service )  ; }
6166,"public com . anychart . core . grids .  Linear y Minor Grid (  Number index ) { return new com . anychart . core . grids .  Linear (  String . format (  Locale . US, js Base + "" . y Minor Grid ( %s ) "", index )  )  ; }"
6167,public void set Cancel Text (  String cancel String ) { m Cancel String = cancel String ; }
6168,"public com . anychart . core . ui .  Legend Item max Width (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
6169,"public com . anychart . charts .  Radar select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6170,public static void set Config ( @ Non Null  Caoc Config config ) {  Custom Activity On Crash . config = config ; }
6171,"public void handle Result (  String error Category,  Long error Code,  String error Message ) { this . error Category = error Category ;  this . error Code = error Code ;  this . error Message = error Message ;  this . result Received = true ;  waiter . count Down (  )  ; }"
6172,public int color F (  ) { return theme . color F (  )  ; }
6173,public boolean is Set Cell Path To Daemonic State (  ) { return this . cell Path To Daemonic State != null ; }
6174,"public static  Interpolator create ( float control X, float control Y ) { if  (  Build . VERSION . SDK_INT >= 21 )  {     return  Path Interpolator Compat Api21 . create ( control X, control Y )  ;  } return  Path Interpolator Compat Base . create ( control X, control Y )  ; }"
6175,public  Type get Type (  ) { return type ; }
6176,"protected void add ( char [  ]  cbuf, int off, int len )  throws IO Exception{ int pos = off ;  if  ( saw Return && len > 0 )  {     //  Last call to add ended with a CR ;  we can handle the line now .      if  ( finish Line ( cbuf [ pos ]  == '\n' )  )  {         pos++ ;      } } int start = pos ;  for  ( int end = off + len ;  pos < end ;  pos++ )  {     switch ( cbuf [ pos ]  )  {         case '\r':             line . append ( cbuf, start, pos - start )  ;              saw Return = true ;              if  ( pos + 1 < end )  {                 if  ( finish Line ( cbuf [ pos + 1 ]  == '\n' )  )  {                     pos++ ;                  }             }             start = pos + 1 ;              break ;          case '\n':             line . append ( cbuf, start, pos - start )  ;              finish Line ( true )  ;              start = pos + 1 ;              break ;          default:     } } line . append ( cbuf, start, off + len - start )  ; }"
6177,public  Empty Tree Iterator create Empty Tree Iterator (  ) { return new  Empty Tree Iterator ( this )  ; }
6178,public void close (  )  throws java . io . IO Exception{ // 1 .   Ensure that pending characters are written flush Base64 (  )  ;  // 2 .   Actually close the stream //  Base class both flushes and closes .  super . close (  )  ;  buffer = null ;  out = null ; }
6179,"public static void add Links (  Text View text,  Pattern pattern,  String scheme ) { add Links ( text, pattern, scheme, null, null )  ; }"
6180,"public com . anychart . core . stock . indicators .  Keltner Channels ma Period (  Number period ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . ma Period ( %s )  ; "", period )  )  ;  return this ; }"
6181,"public void write Ref (  Ref ref, long update Index )  throws IO Exception{ if  ( update Index < min Update Index )  {     throw new  Illegal Argument Exception (  )  ;  } long d = update Index - min Update Index ;   Ref Entry entry = new  Ref Entry ( ref, d )  ;  if  ( last Ref != null &&  Entry . compare ( last Ref, entry )  >= 0 )  {     throw Illegal Entry ( last Ref, entry )  ;  } last Ref = entry ;  long block Pos = refs . write ( entry )  ;  index Ref ( ref, block Pos )  ; }"
6182,"public void on Patch Dex Opt Fail (  File patch File,  List< File> dex Files,  Throwable t ) {  Share Tinker Log . i ( TAG, ""patch Reporter on Patch Dex Opt Fail: dex opt fail path: %s, dex size: %d"", patch File . get Absolute Path (  ) , dex Files . size (  )  )  ;   Share Tinker Log . print Err Stack Trace ( TAG, t, ""on Patch Dex Opt Fail:"" )  ;  // check oat file if it is elf format if  ( t . get Message (  )  . contains (  Share Constants . CHECK_DEX_OAT_EXIST_FAIL )  || t . get Message (  )  . contains (  Share Constants . CHECK_DEX_OAT_FORMAT_FAIL )  )  {     should Retry = true ;      delete Opt Files ( dex Files )  ;  } else {      Tinker . with ( context )  . clean Patch By Patch Apk ( patch File )  ;  }}"
6183,"public com . anychart . core . stock . scrollerseries .  Range Area max Point Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Point Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
6184,"public com . anychart . charts .  Pie labels (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", settings )  )  ;  return this ; }"
6185,"public void create Sym Link (  File path,  String target )  throws IO Exception{  File Utils . create Sym Link ( path, target )  ; }"
6186,private boolean has Counters ( @ Non Null  Trace Metric trace ) { boolean has Trace Counters = trace . get Counters Count (  )  > 0 ;  if  ( has Trace Counters )  {     return true ;  } for  (  Trace Metric subtrace : trace . get Subtraces List (  )  )  {     boolean has Subtrace Counters = subtrace . get Counters Count (  )  > 0 ;      if  ( has Subtrace Counters )  {         return true ;      } } return false ; }
6187,"public void start With Pop ( I Support Fragment to Fragment ) { m Transaction Delegate . start With Pop ( m Fragment . get Fragment Manager (  ) , m Support F, to Fragment )  ; }"
6188,"private  Listenable Future< Package File Manifest> get Package File Manifest (  Cell cell,  Abs Path package File ) { if  ( cell . get Filesystem (  )  . is File ( package File )  )  {     return package File Parse Pipeline . get File Job ( cell, package File )  ;  } return  Futures . immediate Future (  Package File Manifest . EMPTY_SINGLETON )  ; }"
6189,"public  Mesh Part part ( final  String id, final  Mesh mesh, int primitive Type, final  Material material ) { return part ( id, mesh, primitive Type, 0, mesh . get Num Indices (  ) , material )  ; }"
6190,"public com . anychart . charts .  Radar label (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s )  ; "", settings )  )  ;  return this ; }"
6191,"public com . anychart . core . cartesian . series .  Bar3d bounds ( com . anychart . utils .  Rect Obj bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
6192,"public void icon Marker Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . icon Marker Fill (  )  ; "" )  ; }"
6193,public boolean get Should Try Larger Worker On Oom (  ) { return should Try Larger Worker On Oom_ ; }
6194,public static  Focused Module Target Matcher focused On (  Immutable Set< Unflavored Build Target> targets ) { return new  Focused Module Target Matcher ( targets )  ; }
6195,"public com . anychart . charts .  Mekko top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
6196,"public  Immutable List< String> get Command (  Build Context context ) { return get Buildable (  )  . make Main Step ( context, get Project Filesystem (  ) , get Output Path Resolver (  ) , false )  . get Command (  )  ; }"
6197,public static _ Fields find By Name ( java . lang .  String name ) { return by Name . get ( name )  ; }
6198,public void add (  Episode View Model episode View Model ) { episodes . add ( episode View Model )  ; }
6199,"public void value (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . value (  )  ; "" )  ; }"
6200,protected int get Margin Top (  View child ) { if  ( child . get Visibility (  )  ==  View . GONE )  {     return 0 ;  } return get Layout Params ( child )  . top Margin ; }
6201,"public com . anychart . core . utils .  Quarter corners (  Number top Left,  Number top Right,  String bottom Right,  String bottom Left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . corners ( %s, %s, %s, %s )  ; "", top Left, top Right, wrap Quotes ( bottom Right ) , wrap Quotes ( bottom Left )  )  )  ;  return this ; }"
6202,"protected  Map< String,  String> get Query Parameters (  ) { return null ; }"
6203,"public void dont Notify Request Listeners For Request ( final  Cached Spice Request<?> request, final  Collection< Request Listener<?>> list Request Listener ) { final  Set< Request Listener<?>> set Request Listener = map Request To Request Listener . get ( request )  ;  request Listener Notifier . clear Notifications For Request ( request, set Request Listener )  ;  if  ( set Request Listener != null && list Request Listener != null )  {      Ln . d ( "" Removing listeners of request : "" + request . to String (  )  + "" : "" + set Request Listener . size (  )  )  ;      set Request Listener . remove All ( list Request Listener )  ;  }}"
6204,public boolean has Executed Action Info (  ) { return executed Action Info Builder_ != null || executed Action Info_ != null ; }
6205,"public  List<E> copy From Realm (  Iterable<E> realm Objects, int max Depth ) { check Max Depth ( max Depth )  ;  //noinspection  Constant Conditions if  ( realm Objects == null )  {     return new  Array List<> ( 0 )  ;  }  Array List unmanaged Objects ;  if  ( realm Objects instanceof  Collection )  {     unmanaged Objects = new  Array List<> (  (  (  Collection )  realm Objects )  . size (  )  )  ;  } else {     unmanaged Objects = new  Array List<> (  )  ;  }  Map< Realm Model,  Realm Object Proxy .  Cache Data< Realm Model>> list Cache = new  Hash Map<> (  )  ;  for  ( E object : realm Objects )  {     check Valid Object For Detach ( object )  ;      unmanaged Objects . add ( create Detached Copy ( object, max Depth, list Cache )  )  ;  } return unmanaged Objects ; }"
6206,"synchronized  Firebase Firestore get ( @ Non Null  String database Id ) {  Firebase Firestore firestore = instances . get ( database Id )  ;  if  ( firestore == null )  {     firestore =  Firebase Firestore . new Instance ( context, app, auth Provider, database Id, this, metadata Provider )  ;      instances . put ( database Id, firestore )  ;  } return firestore ; }"
6207,public void num Parameters ( int num )  throws IO Exception{ output . write ( num )  ; }
6208,"public  Container<T> size (  Value width,  Value height ) { if  ( width == null )      throw new  Illegal Argument Exception ( ""width cannot be null . "" )  ;  if  ( height == null )      throw new  Illegal Argument Exception ( ""height cannot be null . "" )  ;  min Width = width ;  min Height = height ;  pref Width = width ;  pref Height = height ;  max Width = width ;  max Height = height ;  return this ; }"
6209,"protected final void fail Without Actual (  Fact first,  Fact .  .  .  rest ) { do Fail (  Immutable List . copy Of (  Lists . as List ( first, rest )  )  )  ; }"
6210,public  File Request get Request (  ) { return m Request ; }
6211,public boolean matches (  Register Spec other Spec ) { return spec . equals Using Simple Type ( other Spec )  ; }
6212,"private static void close Quietly (  Closeable closeable ) { try {     closeable . close (  )  ;  } catch  ( IO Exception e )  {      Log . w ( TAG, "" Failed to close resource"", e )  ;  }}"
6213,public void clear All Breakpoints (  ) { for  (  Source Info si : url To Source Info . values (  )  )  {     si . remove All Breakpoints (  )  ;  }}
6214,"private byte [  ]  encode Parameters (  Map< String,  String> params,  String params Encoding ) {  String Builder encoded Params = new  String Builder (  )  ;  try {     for  (  Map .  Entry< String,  String> entry : params . entry Set (  )  )  {         if  ( entry . get Key (  )  == null || entry . get Value (  )  == null )  {             throw new  Illegal Argument Exception (  String . format ( "" Request#get Params (  )  or  Request#get Post Params (  )  returned a map "" + ""containing a null key or value:  ( %s, %s )  .   All keys "" + ""and values must be non-null . "", entry . get Key (  ) , entry . get Value (  )  )  )  ;          }         encoded Params . append ( URL Encoder . encode ( entry . get Key (  ) , params Encoding )  )  ;          encoded Params . append ( '=' )  ;          encoded Params . append ( URL Encoder . encode ( entry . get Value (  ) , params Encoding )  )  ;          encoded Params . append ( '&' )  ;      }     return encoded Params . to String (  )  . get Bytes ( params Encoding )  ;  } catch  (  Unsupported Encoding Exception uee )  {     throw new  Runtime Exception ( "" Encoding not supported: "" + params Encoding, uee )  ;  }}"
6215,"public static  String convert Frame ID22 To24 (  String identifier ) { // Idv22 identifiers are only of length 3 times if  ( identifier . length (  )  < 3 )  {     return null ;  } // Has idv22 been mapped to v23  String id = ID3 Frames . convertv22 Tov23 . get ( identifier . substring ( 0, 3 )  )  ;  if  ( id != null )  {     //has v2 . 3 been mapped to v2 . 4      String v23id = ID3 Frames . convertv23 Tov24 . get ( id )  ;      if  ( v23id == null )  {         //in mapping         if  ( ID3v24 Frames . get Instance Of (  )  . get Id To Value Map (  )  . get ( id )  != null )  {             return id ;          } else {             return null ;          }     } else {         return v23id ;      } } else {     return null ;  }}"
6216,"public  Test Field Prop Callback Prop View Model_ value ( @ Nullable final  On Model Click Listener< Test Field Prop Callback Prop View Model_,  Test Field Prop Callback Prop View> value ) { on Mutation (  )  ;  if  ( value == null )  {     this . value_ On Click Listener = null ;  } else {     this . value_ On Click Listener = new  Wrapped Epoxy Model Click Listener ( value )  ;  } return this ; }"
6217,"public void max Ticks Count (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Ticks Count (  )  ; "" )  ; }"
6218,"public static  Parser create (  Type Coercer Factory type Coercer Factory,  Constructor Arg Marshaller marshaller,  Known Rule Types Provider known Rule Types Provider,  Parser Python Interpreter Provider parser Python Interpreter Provider,  Daemonic Parser State daemonic Parser State,  Target Spec Resolver target Spec Resolver,  Watchman watchman,  Buck Event Bus event Bus,  Unconfigured Build Target View Factory unconfigured Build Target Factory,  Target Configuration host Configuration, boolean buck Out Include Target Config Hash ) { return new  Parser With Configurable Attributes ( daemonic Parser State, new  Per Build State Factory ( type Coercer Factory, marshaller, known Rule Types Provider, parser Python Interpreter Provider, watchman, event Bus, unconfigured Build Target Factory, host Configuration ) , target Spec Resolver, event Bus, buck Out Include Target Config Hash )  ; }"
6219,public void file Operation Finished (  File result ) { for  (  Audio File Modification Listener listener : this . listeners )  {      Audio File Modification Listener current = listener ;      current . file Operation Finished ( result )  ;  }}
6220,public V User Handle get User For Serial Number ( long serial Number ) { int ident = get User Handle (  ( int )  serial Number )  ;  return ident >= 0 ? new V User Handle ( ident )  : null ; }
6221,public boolean has Cas Client Info (  ) { return cas Client Info Builder_ != null || cas Client Info_ != null ; }
6222,public  Asset File Descriptor get Asset File Descriptor (  )  throws IO Exception{ return assets != null ? assets . open Fd ( path (  )  )  : null ; }
6223,"public  Object run (  Context cx ) { switch ( type )  {     case IPROXY_COMPILE_SCRIPT:         cx . compile String ( text, url, 1, null )  ;          break ;      case IPROXY_EVAL_SCRIPT:         {              Scriptable scope = null ;              if  ( dim . scope Provider != null )  {                 scope = dim . scope Provider . get Scope (  )  ;              }             if  ( scope == null )  {                 scope = new  Importer Top Level ( cx )  ;              }             cx . evaluate String ( scope, text, url, 1, null )  ;          }         break ;      case IPROXY_STRING_IS_COMPILABLE:         boolean Result = cx . string Is Compilable Unit ( text )  ;          break ;      case IPROXY_OBJECT_TO_STRING:         if  ( object ==  Undefined . instance )  {             string Result = ""undefined"" ;          } else if  ( object == null )  {             string Result = ""null"" ;          } else if  ( object instanceof  Native Call )  {             string Result = "" [ object  Call ] "" ;          } else {             string Result =  Context . to String ( object )  ;          }         break ;      case IPROXY_OBJECT_PROPERTY:         object Result = dim . get Object Property Impl ( cx, object, id )  ;          break ;      case IPROXY_OBJECT_IDS:         object Array Result = dim . get Object Ids Impl ( cx, object )  ;          break ;      default:         throw  Kit . code Bug (  )  ;  } return null ; }"
6224,public  Listenable Future< Build Rule> require Rule Future (  Build Target target ) {  Preconditions . check State ( is Valid )  ;  return add Require Task ( target )  . schedule ( executor )  . future ; }
6225,public long get Read Pack Index Count (  ) { return stats . read Idx ; }
6226,"public int type Exchange (  Element element ) {  Type Mirror type Mirror = element . as Type (  )  ;  //  Primitive if  ( type Mirror . get Kind (  )  . is Primitive (  )  )  {     return element . as Type (  )  . get Kind (  )  . ordinal (  )  ;  } switch ( type Mirror . to String (  )  )  {     case BYTE:         return  Type Kind . BYTE . ordinal (  )  ;      case SHORT:         return  Type Kind . SHORT . ordinal (  )  ;      case INTEGER:         return  Type Kind . INT . ordinal (  )  ;      case LONG:         return  Type Kind . LONG . ordinal (  )  ;      case FLOAT:         return  Type Kind . FLOAT . ordinal (  )  ;      case DOUBEL:         return  Type Kind . DOUBLE . ordinal (  )  ;      case BOOLEAN:         return  Type Kind . BOOLEAN . ordinal (  )  ;      case CHAR:         return  Type Kind . CHAR . ordinal (  )  ;      case STRING:         return  Type Kind . STRING . ordinal (  )  ;      default:         //  Other side, maybe the PARCELABLE or SERIALIZABLE or OBJECT .          if  ( types . is Subtype ( type Mirror, parcelable Type )  )  {             // PARCELABLE             return  Type Kind . PARCELABLE . ordinal (  )  ;          } else if  ( types . is Subtype ( type Mirror, serializable Type )  )  {             // SERIALIZABLE             return  Type Kind . SERIALIZABLE . ordinal (  )  ;          } else {             return  Type Kind . OBJECT . ordinal (  )  ;          } }}"
6227,"private static  List< Apk Signer V2 .  Signer Config> create V2 Signer Configs (  Private Key [  ]  private Keys, X509 Certificate [  ]  certificates,  String [  ]  digest Algorithms )  throws  Invalid Key Exception{ if  ( private Keys . length != certificates . length )  {     throw new  Illegal Argument Exception ( "" The number of private keys must match the number of certificates: "" + private Keys . length + "" vs"" + certificates . length )  ;  }  List< Apk Signer V2 .  Signer Config> result = new  Array List<> ( private Keys . length )  ;  for  ( int i = 0 ;  i < private Keys . length ;  i++ )  {      Private Key private Key = private Keys [ i ]  ;      X509 Certificate certificate = certificates [ i ]  ;       Public Key public Key = certificate . get Public Key (  )  ;       String key Algorithm = private Key . get Algorithm (  )  ;      if  ( !key Algorithm . equals Ignore Case ( public Key . get Algorithm (  )  )  )  {         throw new  Invalid Key Exception ( "" Key algorithm of private key #"" +  ( i + 1 )  + "" does not match key"" + "" algorithm of public key #"" +  ( i + 1 )  + "": "" + key Algorithm + "" vs "" + public Key . get Algorithm (  )  )  ;      }      Apk Signer V2 .  Signer Config signer Config = new  Apk Signer V2 .  Signer Config (  )  ;      signer Config . private Key = private Key ;      signer Config . certificates =  Collections . singleton List ( certificate )  ;       List< Integer> signature Algorithms = new  Array List<> ( digest Algorithms . length )  ;      for  (  String digest Algorithm : digest Algorithms )  {         try {             signature Algorithms . add ( get V2 Signature Algorithm ( key Algorithm, digest Algorithm )  )  ;          } catch  (  Illegal Argument Exception e )  {             throw new  Invalid Key Exception ( "" Unsupported key and digest algorithm combination for signer #"" +  ( i + 1 ) , e )  ;          }     }     signer Config . signature Algorithms = signature Algorithms ;      result . add ( signer Config )  ;  } return result ; }"
6228,public void set Auxiliary View Position (  Auxiliary View Position auxiliary View Position ) { auxiliary View Position = auxiliary View Position != null ? auxiliary View Position :  Auxiliary View Position . DEFAULT ;  if  ( this . auxiliary View Position != auxiliary View Position )  {     this . auxiliary View Position = auxiliary View Position ;      update Layout (  )  ;  }}
6229,public boolean has Chunk By GUID ( final GUID look For ) { return this . chunk Table . contains Key ( look For )  ; }
6230,"public com . anychart . core . cartesian . series .  Range Spline Area range Spline Area ( com . anychart . data .  View data,  String csv Settings ) { return new com . anychart . core . cartesian . series .  Range Spline Area (  String . format (  Locale . US, js Base + "" . range Spline Area ( %s, %s ) "",  ( data != null )  ? data . get Js Base (  )  : null, wrap Quotes ( csv Settings )  )  )  ; }"
6231,"protected void refresh Refreshable View Size ( int width, int height ) { if  ( null != m Refreshable View Wrapper )  {      Linear Layout .  Layout Params lp =  (  Linear Layout .  Layout Params )  m Refreshable View Wrapper . get Layout Params (  )  ;      if  ( lp . height != height )  {         lp . height = height ;          m Refreshable View Wrapper . request Layout (  )  ;      } }}"
6232,"public void test Resiliency Token Return Extended Lifetime Onwith Valid Retry (  )  throws  Package Manager .  Name Not Found Exception, IO Exception,  Interrupted Exception, JSON Exception{ // make sure AT's expires_in is expired and ext_expires_in is not expired final I Token Cache Store cache Store = get Token Cache ( get Expire Date ( -MINUS_MINUTE ) , false, false, get Expire Date ( EXTEND_MINUS_MINUTE )  )  ;  final  File Mock Context mock Context = create Mock Context (  )  ;  final  Authentication Context auth Context = new  Authentication Context ( mock Context, VALID_AUTHORITY, false, cache Store )  ;  auth Context . set Extended Lifetime Enabled ( true )  ;  //mock http response final  Http URL Connection mocked Connection =  Mockito . mock (  Http URL Connection . class )  ;   Http Url Connection Factory . set Mocked Http Url Connection ( mocked Connection )  ;   Util . prepare Mocked Url Connection ( mocked Connection )  ;   Mockito . when ( mocked Connection . get Output Stream (  )  )  . then Return (  Mockito . mock (  Output Stream . class )  )  ;   Mockito . when ( mocked Connection . get Input Stream (  )  )  . then Return (  Util . create Input Stream (  Util . get Error Response Body ( ""HTTP_GATEWAY_TIMEOUT"" )  ) ,  Util . create Input Stream (  Util . get Success Token Response ( false, false )  )  )  ;   Mockito . when ( mocked Connection . get Response Code (  )  )  . then Return (  Http URL Connection . HTTP_GATEWAY_TIMEOUT,  Http URL Connection . HTTP_OK )  ;  try {     final  Authentication Result result = auth Context . acquire Token Silent Sync ( ""resource"", ""clientid"", TEST_USERID )  ;      verify ( mocked Connection, times ( 2 )  )  . get Input Stream (  )  ;      assert Not Null ( result )  ;      assert Equals ( ""I am a new access token"", result . get Access Token (  )  )  ;      assert True ( !result . is Extended Life Time Token (  )  )  ;  } catch  ( final  Authentication Exception exception )  {     fail ( "" Did not expect an exception"" )  ;  } finally {     cache Store . remove All (  )  ;  }}"
6233,public int get Type (  ) { return type ; }
6234,"public com . anychart . charts .  Scatter padding (  String value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
6235,"protected boolean can Scroll (  View v, boolean check V, int dx, int x, int y ) { if  ( v instanceof  View Group )  {     final  View Group group =  (  View Group )  v ;      final int scroll X = v . get Scroll X (  )  ;      final int scroll Y = v . get Scroll Y (  )  ;      final int count = group . get Child Count (  )  ;      //  Count backwards - let topmost views consume scroll distance first .      for  ( int i = count - 1 ;  i >= 0 ;  i-- )  {         final  View child = group . get Child At ( i )  ;          if  ( x + scroll X >= child . get Left (  )  && x + scroll X < child . get Right (  )  && y + scroll Y >= child . get Top (  )  && y + scroll Y < child . get Bottom (  )  && can Scroll ( child, true, dx, x + scroll X - child . get Left (  ) , y + scroll Y - child . get Top (  )  )  )  {             return true ;          }     } } return check V &&  View Compat . can Scroll Horizontally ( v, -dx )  ; }"
6236,"public  Todo new Todo From Cursor ( @ Non Null  Cursor cursor ) { return  Todo_ Schema . INSTANCE . new Model From Cursor ( connection, cursor, 0 )  ; }"
6237,protected  List< Application Key> get App Keys ( final int bound Net Key Index ) { final  List< Application Key> application Keys = new  Array List<> (  )  ;  for  (  Application Key application Key : app Keys )  {     if  ( application Key . get Bound Net Key Index (  )  == bound Net Key Index )  {         application Keys . add ( application Key )  ;      } } return application Keys ; }
6238,public MP3 Audio Header get MP3 Audio Header (  ) { return  ( MP3 Audio Header )  get Audio Header (  )  ; }
6239,"private static void on Publish Issue ( final  String db Name, final  Array List<SQ Lite Lint Issue> published Issues ) { try {     SQ Lite Lint Android Core Manager . INSTANCE . get ( db Name )  . on Publish ( published Issues )  ;  } catch  (  Throwable e )  {     S Log . e ( TAG, ""on Publish Issue ex "", e . get Message (  )  )  ;  }}"
6240,"public com . anychart . core . annotations .  Plot Controller parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
6241,"private static boolean has Notch At Xiao Mi (  Context context ) { int result = 0 ;  if  ( "" Xiaomi"" . equals (  Build . MANUFACTURER )  )  {     try {          Class Loader class Loader = context . get Class Loader (  )  ;          @ Suppress Lint ( "" Private Api"" )   Class<?> a Class = class Loader . load Class ( SYSTEM_PROPERTIES )  ;           Method method = a Class . get Method ( ""get Int"",  String . class, int . class )  ;          result =  (  Integer )  method . invoke ( a Class, NOTCH_XIAO_MI, 0 )  ;      } catch  (  No Such Method Exception ignored )  {     } catch  (  Illegal Access Exception ignored )  {     } catch  (  Invocation Target Exception ignored )  {     } catch  (  Class Not Found Exception ignored )  {     } } return result == 1 ; }"
6242,void unregister Broadcast Receivers (  ) { m Context . unregister Receiver ( m Bluetooth State Broadcast Receiver )  ;  if  (  Utils . is Marshmallow Or Above (  )  )  {     m Context . unregister Receiver ( m Location Provider Changed Receiver )  ;  }}
6243,public void set Camera Settings (  Camera Settings camera Settings ) { this . camera Settings = camera Settings ; }
6244,"protected boolean request Quiet Mode Enabled ( boolean enable Quiet Mode,  User Handle user Handle, int flags ) { return request Quiet Mode Enabled ( enable Quiet Mode, user Handle )  ; }"
6245,"public void point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . point Width (  )  ; "" )  ; }"
6246,public boolean has Mounted (  ) { return m Has Mounted ; }
6247,"public  List< Data Event> add Event Registration ( @ Not Null  Event Registration event Registration,  Write Tree Ref writes Cache,  Cache Node server Cache ) {  Query Spec query = event Registration . get Query Spec (  )  ;   View view = get View ( query, writes Cache, server Cache )  ;  //  If this is a non-default query we need to tell persistence our current view of the data if  ( !query . loads All Data (  )  )  {      Set< Child Key> all Children = new  Hash Set< Child Key> (  )  ;      for  (  Named Node node : view . get Event Cache (  )  )  {         all Children . add ( node . get Name (  )  )  ;      }     this . persistence Manager . set Tracked Query Keys ( query, all Children )  ;  } if  ( !this . views . contains Key ( query . get Params (  )  )  )  {     this . views . put ( query . get Params (  ) , view )  ;  } this . views . put ( query . get Params (  ) , view )  ;  //  This is guaranteed to exist now, we just created anything that was missing view . add Event Registration ( event Registration )  ;  return view . get Initial Events ( event Registration )  ; }"
6248,"public  Observable< List< Feed Item>> load Newest Page (  ) { return grouped Loader . get Newest Page (  )  . delay ( 2,  Time Unit . SECONDS )  ; }"
6249,"public void write Index Annotation (  Annotated Output out,  Item Type item Type,  String intro ) { throw If Not Prepared (  )  ;   Tree Map< String,  Offsetted Item> index = new  Tree Map< String,  Offsetted Item> (  )  ;  for  (  Offsetted Item item : items )  {     if  ( item . item Type (  )  == item Type )  {          String label = item . to Human (  )  ;          index . put ( label, item )  ;      } } if  ( index . size (  )  == 0 )  {     return ;  } out . annotate ( 0, intro )  ;  for  (  Map .  Entry< String,  Offsetted Item> entry : index . entry Set (  )  )  {      String label = entry . get Key (  )  ;       Offsetted Item item = entry . get Value (  )  ;      out . annotate ( 0, item . offset String (  )  + ' ' + label + '\n' )  ;  }}"
6250,public void set Scale Down Inside Borders ( boolean scale Down Inside Borders ) { m Scale Down Inside Borders = scale Down Inside Borders ;  update Path (  )  ;  invalidate Self (  )  ; }
6251,public  Builder set Description ( final  String description ) { this . description = description ;  return this ; }
6252,"public  Matrix4 scale ( double x, double y, double z ) {  Matrix . scale M ( m, 0, x, y, z )  ;  return this ; }"
6253,"public static void validate Unique Constraint Settings (  String rule Type,  Build Target build Target,  Dependency Stack dependency Stack,  Immutable Set< Constraint Value> constraint Values ) {  Hash Multimap< Constraint Setting,  Constraint Value> values By Setting =  Hash Multimap . create (  )  ;  for  (  Constraint Value constraint Value : constraint Values )  {     values By Setting . put ( constraint Value . get Constraint Setting (  ) , constraint Value )  ;  } for  (  Map .  Entry< Constraint Setting,  Collection< Constraint Value>> e : values By Setting . as Map (  )  . entry Set (  )  )  {      Constraint Setting constraint Setting = e . get Key (  )  ;       Collection< Constraint Value> constraint Values For Setting = e . get Value (  )  ;      if  ( constraint Values For Setting . size (  )  > 1 )  {         throw new  Human Readable Exception ( dependency Stack, ""in %s rule %s:  Duplicate constraint values detected: constraint_setting %s has %s"", rule Type, build Target, constraint Setting . get Build Target (  ) , constraint Values For Setting . stream (  )  . map (  Constraint Value::get Build Target )  . sorted (  Comparator . comparing (  Build Target::to String )  )  . collect (  Immutable List . to Immutable List (  )  )  )  ;      } }}"
6254,"public void change Buffer Data (  Buffer Info buffer Info,  Buffer new Data, int index ) { this . change Buffer Data ( buffer Info, new Data, index, false )  ; }"
6255,private void setup Processor (  ) { if  ( m Processor == null || m Preview Surface == null )      return ;  m Processor . set Output Surface ( m Preview Surface )  ;  m Processing Hdr Surface = m Processor . get Input Hdr Surface (  )  ;  m Processing Normal Surface = m Processor . get Input Normal Surface (  )  ;   List< Surface> camera Output Surfaces = new  Array List<> (  )  ;  camera Output Surfaces . add ( m Processing Hdr Surface )  ;  camera Output Surfaces . add ( m Processing Normal Surface )  ;  m Camera Ops . set Surfaces ( camera Output Surfaces )  ; }
6256,"static  List<? extends  File> load (  Context context,  File source Apk,  File dex Dir,  String prefs Key Prefix, boolean force Reload )  throws IO Exception{  Log . i ( TAG, "" Multi Dex Extractor . load ( "" + source Apk . get Path (  )  + "", "" + force Reload + "", "" + prefs Key Prefix + "" ) "" )  ;  long current Crc = get Zip Crc ( source Apk )  ;  //  Validity check and extraction must be done only while the lock file has been taken .   File lock File = new  File ( dex Dir, LOCK_FILENAME )  ;   Random Access File lock Raf = new  Random Access File ( lock File, ""rw"" )  ;   File Channel lock Channel = null ;   File Lock cache Lock = null ;   List< Extracted Dex> files ;  IO Exception release Lock Exception = null ;  try {     lock Channel = lock Raf . get Channel (  )  ;       Log . i ( TAG, "" Blocking on lock "" + lock File . get Path (  )  )  ;      cache Lock = lock Channel . lock (  )  ;       Log . i ( TAG, lock File . get Path (  )  + "" locked"" )  ;      if  ( !force Reload && !is Modified ( context, source Apk, current Crc, prefs Key Prefix )  )  {         try {             files = load Existing Extractions ( context, source Apk, dex Dir, prefs Key Prefix )  ;          } catch  ( IO Exception ioe )  {              Log . w ( TAG, "" Failed to reload existing extracted secondary dex files,"" + "" falling back to fresh extraction"", ioe )  ;              files = perform Extractions ( source Apk, dex Dir )  ;              put Stored Apk Info ( context, prefs Key Prefix, get Time Stamp ( source Apk ) , current Crc, files )  ;          }     } else {          Log . i ( TAG, "" Detected that extraction must be performed . "" )  ;          files = perform Extractions ( source Apk, dex Dir )  ;          put Stored Apk Info ( context, prefs Key Prefix, get Time Stamp ( source Apk ) , current Crc, files )  ;      } } finally {     if  ( cache Lock != null )  {         try {             cache Lock . release (  )  ;          } catch  ( IO Exception e )  {              Log . e ( TAG, "" Failed to release lock on "" + lock File . get Path (  )  )  ;              //  Exception while releasing the lock is bad, we want to report it, but not at             // the price of overriding any already pending exception .              release Lock Exception = e ;          }     }     if  ( lock Channel != null )  {         close Quietly ( lock Channel )  ;      }     close Quietly ( lock Raf )  ;  } if  ( release Lock Exception != null )  {     throw release Lock Exception ;  }  Log . i ( TAG, ""load found "" + files . size (  )  + "" secondary dex files"" )  ;  return files ; }"
6257,"private static void initialize Drawee (  Context context, @ Nullable  Drawee Config drawee Config ) { if  (  Fresco Systrace . is Tracing (  )  )  {      Fresco Systrace . begin Section ( "" Fresco . initialize Drawee"" )  ;  } s Drawee Controller Builder Supplier = new  Pipeline Drawee Controller Builder Supplier ( context, drawee Config )  ;   Simple Drawee View . initialize ( s Drawee Controller Builder Supplier )  ;  if  (  Fresco Systrace . is Tracing (  )  )  {      Fresco Systrace . end Section (  )  ;  }}"
6258,public static void disable Cache Initialization Exceptions (  ) { cache Initialization Exceptions Disabled = true ; }
6259,"private void resolve Error ( final  Fragment Wrapper fragment, final  Graph Response response ) { start Login ( new  Fragment Start Activity Delegate ( fragment ) , create Login Request From Response ( response )  )  ; }"
6260,"public  Log Command not (  Any Object Id start )  throws  Missing Object Exception,  Incorrect Object Type Exception{ return add ( false, start )  ; }"
6261,"public com . anychart . core . gantt .  Time Line Header bounds ( com . anychart . core . utils .  Bounds bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
6262,public  Bundle get Bundle (  ) { return m Bundle ; }
6263,"public void global To Local (  Number x Coord,  Number y Coord ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . global To Local ( %s, %s )  ; "", x Coord, y Coord )  )  ; }"
6264,"public static void translucent (  Activity activity, @ Color Int int color On5x ) {  Window window = activity . get Window (  )  ;  translucent ( window, color On5x )  ; }"
6265,"private  Byte Buffer write String UTF16 BEBOM (  String next, int i, int no Of Values )  throws  Character Coding Exception{  Charset Encoder encoder =  Charset . for Name (  Text Encoding . CHARSET_UTF_16_BE_ENCODING_FORMAT )  . new Encoder (  )  ;  encoder . on Malformed Input (  Coding Error Action . IGNORE )  ;  encoder . on Unmappable Character (  Coding Error Action . IGNORE )  ;   Byte Buffer bb = null ;  // Add BOM if  (  ( i + 1 )  == no Of Values )  {     bb = encoder . encode (  Char Buffer . wrap ( '﻿' + next )  )  ;  } else {     bb = encoder . encode (  Char Buffer . wrap ( '﻿' + next + '\0' )  )  ;  } bb . rewind (  )  ;  return bb ; }"
6266,"public static  Credentials load Json Credentials (  String password,  String content )  throws IO Exception,  Cipher Exception{  Wallet File wallet File = object Mapper . read Value ( content,  Wallet File . class )  ;  return  Credentials . create (  Wallet . decrypt ( password, wallet File )  )  ; }"
6267,"public com . anychart . core . stock . scrollerseries .  Base low Fill ( com . anychart . graphics . vector .  Fill color ) { return new com . anychart . core . stock . scrollerseries .  Base (  String . format (  Locale . US, js Base + "" . low Fill ( %s ) "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ; }"
6268,public void abort Animation (  ) { m Finished = true ;  m Current Zoom = m End Zoom ; }
6269,"public static  Executor Service get Exiting Executor Service (  Thread Pool Executor executor, long termination Timeout,  Time Unit time Unit ) { return new  Application (  )  . get Exiting Executor Service ( executor, termination Timeout, time Unit )  ; }"
6270,"static void move Item ( int old Index, int new Index,  Sparse Array Compat<T> items,  Sparse Array Compat<T> scrap Items ) { T item To Move ;  if  ( exists Scrap Item At ( old Index, scrap Items )  )  {     //  Before moving the item from items we need to check whether an old item has been put in     // the scrap Items array .   If there is an item at old Index there, it means that in     // items at position old Index there's now something else and the correct item to move to     // new Index is instead in the scrap Items  Sparse Array .      item To Move = scrap Items . get ( old Index )  ;      scrap Items . remove ( old Index )  ;  } else {     item To Move = items . get ( old Index )  ;      items . remove ( old Index )  ;  } items . put ( new Index, item To Move )  ; }"
6271,"public void refresh (  ) { if  ( my Dao == null )  {     throw new  Dao Exception ( "" Entity is detached from DAO context"" )  ;  } my Dao . refresh ( this )  ; }"
6272,"public void show Countdown UI (  ) { if  ( m Animation Disabled )  {     return ;  } m Village Backdrop . set Image Resource ( R . drawable . village_bg_countdown )  ;  m Village . set Plane Enabled ( true )  ;  m Launch Button . set Visibility (  View . GONE )  ;  m Santa Collapsing . set Content Scrim Color (  Context Compat . get Color ( this, R . color . village Toolbar Light )  )  ;  m Santa Collapsing . set Status Bar Scrim Color (  Context Compat . get Color ( this, R . color . village Status Bar Light )  )  ;  m Countdown View . set Visibility (  View . VISIBLE )  ;  m Waving Santa . set Visibility (  View . VISIBLE )  ;  m Ornament . set Visibility (  View . VISIBLE )  ; }"
6273,"public com . anychart . core . ui .  Paginator text Indent (  Number indent ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Indent ( %s )  ; "", indent )  )  ;  return this ; }"
6274,"public  String to String (  String set String,  String unset String ) { return build To String ( set String, unset String, ""\n"" )  ; }"
6275,"private  Request create Request ( long started ) { int id = next Id . get And Increment (  )  ;   Request request = data . build (  )  ;  request . id = id ;  request . started = started ;  boolean logging Enabled = picasso . logging Enabled ;  if  ( logging Enabled )  {     log ( OWNER_MAIN, VERB_CREATED, request . plain Id (  ) , request . to String (  )  )  ;  }  Request transformed = picasso . transform Request ( request )  ;  if  ( transformed != request )  {     //  If the request was changed, copy over the id and timestamp from the original .      transformed . id = id ;      transformed . started = started ;      if  ( logging Enabled )  {         log ( OWNER_MAIN, VERB_CHANGED, transformed . log Id (  ) , ""into "" + transformed )  ;      } } return transformed ; }"
6276,"public void keep Only Points (  Number indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . keep Only Points ( %s )  ; "", indexes )  )  ; }"
6277,"public static  Matrix4 create Rotation Matrix ( double yaw, double pitch, double roll ) { return new  Matrix4 (  )  . set To Rotation ( yaw, pitch, roll )  ; }"
6278,"public static void do Heart Beat (  View view, int duration ) {  Animator Set set = new  Animator Set (  )  ;  set . play Together (  Object Animator . of Float ( view, ""scale X"", 1 . 0f, 1 . 4f, 0 . 9f, 1 . 0f ) ,  Object Animator . of Float ( view, ""scale Y"", 1 . 0f, 1 . 4f, 0 . 9f, 1 . 0f )  )  ;  set . set Duration ( duration )  ;  set . start (  )  ; }"
6279,"public void connect (  ) { connect ( DEFAULT_DB, DEFAULT_EVENTS_COLLECTION )  ; }"
6280,"public void test Pre With No Whitespace (  ) {  String html = ""a<pre>b</pre> c"" ;  assert Equals ( ""a<pre>b</pre> c"", format ( html )  )  ; }"
6281,public boolean is Packed (  ) { return packed ; }
6282,public  Horizontal Group row Bottom (  ) { row Align |=  Align . bottom ;  row Align &= ~ Align . top ;  return this ; }
6283,"public com . anychart . charts .  Waterfall bottom (  Number bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", bottom )  )  ;  return this ; }"
6284,"public void unfold ( boolean skip Animation ) { if  ( m Unfolded || m Animation In Progress )      return ;  // get main content parts final  View content View = get Child At ( 0 )  ;  if  ( content View == null )      return ;  final  View title View = get Child At ( 1 )  ;  if  ( title View == null )      return ;  // hide title and content views title View . set Visibility ( GONE )  ;  content View . set Visibility ( GONE )  ;  //  Measure views and take a bitmaps to replace real views with images  Bitmap bitmap From Title View = measure View And Get Bitmap ( title View, this . get Measured Width (  )  )  ;   Bitmap bitmap From Content View = measure View And Get Bitmap ( content View, this . get Measured Width (  )  )  ;  if  ( skip Animation )  {     content View . set Visibility ( VISIBLE )  ;       Folding Cell . this . m Unfolded = true ;       Folding Cell . this . m Animation In Progress = false ;      this . get Layout Params (  )  . height = content View . get Height (  )  ;  } else {      View Compat . set Has Transient State ( this, true )  ;      // create layout container for animation elements     final  Linear Layout folding Layout = create And Prepare Folding Container (  )  ;      this . add View ( folding Layout )  ;      // calculate heights of animation parts      Array List< Integer> heights = calculate Heights For Animation Parts ( title View . get Height (  ) , content View . get Height (  ) , m Additional Flips Count )  ;      // create list with animation parts for animation      Array List< Folding Cell View> folding Cell Elements = prepare Views For Animation ( heights, bitmap From Title View, bitmap From Content View )  ;      // start unfold animation with end listener     int child Count = folding Cell Elements . size (  )  ;      int part90degree Animation Duration = m Animation Duration /  ( child Count * 2 )  ;      start Unfold Animation ( folding Cell Elements, folding Layout, part90degree Animation Duration, new  Animation End Listener (  )  {         public void on Animation End (  Animation animation )  {             content View . set Visibility ( VISIBLE )  ;              folding Layout . set Visibility ( GONE )  ;               Folding Cell . this . remove View ( folding Layout )  ;               Folding Cell . this . m Unfolded = true ;               Folding Cell . this . m Animation In Progress = false ;               View Compat . set Has Transient State (  Folding Cell . this, true )  ;          }     } )  ;      start Expand Height Animation ( heights, part90degree Animation Duration * 2 )  ;      this . m Animation In Progress = true ;  }}"
6285,"public  Test Field Prop Do Not Hash Option View Model_ value ( @ Non Null  View .  On Click Listener value ) { if  ( value == null )  {     throw new  Illegal Argument Exception ( ""value cannot be null"" )  ;  } assigned Attributes_epoxy Generated Model . set ( 0 )  ;  on Mutation (  )  ;  this . value_ On Click Listener = value ;  return this ; }"
6286,"public com . anychart . standalones .  Project Timeline text Marker (  Number index, com . anychart . enums .  Gantt Date Time Markers value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Marker ( %s, %s )  ; "", index,  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
6287,"public com . anychart . core . stock . scrollerseries .  Step Area container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
6288,private void check Redraw Feature (  Geo Json Style style ) { if  ( has Geometry (  )  &&  Arrays . as List ( style . get Geometry Type (  )  )  . contains ( get Geometry (  )  . get Geometry Type (  )  )  )  {     //  Don't redraw objects that aren't on the map     set Changed (  )  ;      notify Observers (  )  ;  }}
6289,"public void save As Xml (  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Xml ( %s )  ; "", wrap Quotes ( filename )  )  )  ; }"
6290,"public  Matchable Call then Return File (  String .  .  .  json Files ) { return then Return File ( 200, json Files )  ; }"
6291,"void init3nd Pass (  ) {  Property target Pk Property = target Entity . get Pk Property (  )  ;  if  ( fk Properties . length != 1 || target Pk Property == null )  {     throw new  Runtime Exception ( "" Currently only single FK columns are supported: "" + this )  ;  }  Property property = fk Properties [ 0 ]  ;   Property Type property Type = property . get Property Type (  )  ;  if  ( property Type == null )  {     property Type = target Pk Property . get Property Type (  )  ;      property . set Property Type ( property Type )  ;      //  Property is not a regular property with primitive getters/setters, so let it catch up     property . init2nd Pass (  )  ;      property . init3nd Pass (  )  ;  } else if  ( property Type != target Pk Property . get Property Type (  )  )  {      System . err . println ( "" Warning to-one property type does not match target key type: "" + this )  ;  } resolved Key Java Type [ 0 ]  = schema . map To Java Type Nullable ( property Type )  ;  resolved Key Use Equals [ 0 ]  = check Use Equals ( property Type )  ; }"
6292,"public  Scale And Indexes indexes (  Collection< Integer> indexes ) { return new  Scale And Indexes ( scale,  Ints . to Array ( indexes )  )  ; }"
6293,public  Hash Code hash (  Hash Function hash Function )  throws IO Exception{  Hasher hasher = hash Function . new Hasher (  )  ;  copy To (  Funnels . as Output Stream ( hasher )  )  ;  return hasher . hash (  )  ; }
6294,public static  Bitmap Transition Options with ( @ Non Null  Transition Factory< Bitmap> transition Factory ) { return new  Bitmap Transition Options (  )  . transition ( transition Factory )  ; }
6295,"public com . anychart . core . ui .  Scroll Bar bounds (  Number x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
6296,"public void intersect (  Register Spec Set other, boolean local Primary ) { throw If Immutable (  )  ;   Register Spec [  ]  other Specs = other . specs ;  int this Len = specs . length ;  int len =  Math . min ( this Len, other Specs . length )  ;  size = -1 ;  for  ( int i = 0 ;  i < len ;  i++ )  {      Register Spec spec = specs [ i ]  ;      if  ( spec == null )  {         continue ;      }      Register Spec intersection = spec . intersect ( other Specs [ i ] , local Primary )  ;      if  ( intersection != spec )  {         specs [ i ]  = intersection ;      } } for  ( int i = len ;  i < this Len ;  i++ )  {     specs [ i ]  = null ;  }}"
6297,protected  List< Subsystem Factory> configure Subsystems (  ) { // SFTP .  server . set File System Factory ( new  Virtual File System Factory ( repository . get Directory (  )  . get Parent File (  )  . get Absolute File (  )  . to Path (  )  )  )  ;  return  Collections . singleton List (  ( new  Sftp Subsystem Factory .  Builder (  )  )  . build (  )  )  ; }
6298,"public com . anychart . charts .  Sankey background (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6299,"public com . anychart . charts .  Polar y Minor Grid (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Minor Grid ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6300,"public void right (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . right (  )  ; "" )  ; }"
6301,public short get Index To Loc Format (  ) { return this . index To Loc Format ; }
6302,"public com . anychart . charts .  Cartesian interactivity (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . interactivity ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6303,"public com . anychart . core . cartesian . series .  Range Bar x Point Position (  Number position ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Point Position ( %s )  ; "", position )  )  ;  return this ; }"
6304,"public com . anychart . core . gauge . pointers .  Knob hatch Fill (  String type,  String color,  Number thickness,  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s, %s, %s, %s )  ; "", wrap Quotes ( type ) , wrap Quotes ( color ) , thickness, size )  )  ;  return this ; }"
6305,"public static byte [  ]  build Aac Lc Audio Specific Config ( int sample Rate, int num Channels ) { int sample Rate Index = C . INDEX_UNSET ;  for  ( int i = 0 ;  i < AUDIO_SPECIFIC_CONFIG_SAMPLING_RATE_TABLE . length ;  ++i )  {     if  ( sample Rate == AUDIO_SPECIFIC_CONFIG_SAMPLING_RATE_TABLE [ i ]  )  {         sample Rate Index = i ;      } } int channel Config = C . INDEX_UNSET ;  for  ( int i = 0 ;  i < AUDIO_SPECIFIC_CONFIG_CHANNEL_COUNT_TABLE . length ;  ++i )  {     if  ( num Channels == AUDIO_SPECIFIC_CONFIG_CHANNEL_COUNT_TABLE [ i ]  )  {         channel Config = i ;      } } if  ( sample Rate == C . INDEX_UNSET || channel Config == C . INDEX_UNSET )  {     throw new  Illegal Argument Exception ( "" Invalid sample rate or number of channels: "" + sample Rate + "", "" + num Channels )  ;  } return build Aac Audio Specific Config ( AUDIO_OBJECT_TYPE_AAC_LC, sample Rate Index, channel Config )  ; }"
6306,public static  Config< Firebase Push Module> builder (  ) { return instance . config ; }
6307,"private static double [  ]  compute Labels ( final double start, final double end, final int approx Num Labels ) { if  (  Math . abs ( start - end )  < 0 . 0000001f )  {     return new double [  ]  { start, start, 0 } ;  } double s = start ;  double e = end ;  boolean switched = false ;  if  ( s > e )  {     switched = true ;      double tmp = s ;      s = e ;      e = tmp ;  } double x Step = round Up (  Math . abs ( s - e )  / approx Num Labels )  ;  //  Compute x starting point so it is a multiple of x Step .  double x Start = x Step *  Math . ceil ( s / x Step )  ;  double x End = x Step *  Math . floor ( e / x Step )  ;  if  ( switched )  {     return new double [  ]  { x End, x Start, -1 . 0 * x Step } ;  } return new double [  ]  { x Start, x End, x Step } ; }"
6308,"public com . anychart . core . cartesian . series .  Range Bar color Scale ( com . anychart . scales .  Ordinal Color settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
6309,"public com . anychart . core . ui .  Callout container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
6310,"public com . anychart . core .  Series Base bounds (  Number x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
6311,"private void _handle News Normal ( final  Base View Holder holder, final  News Info item ) {  Image View news Icon = holder . get View ( R . id . iv_icon )  ;   Image Loader . load Center Crop ( m Context, item . get Imgsrc (  ) , news Icon,  Def Icon Factory . provide Icon (  )  )  ;  holder . set Text ( R . id . tv_title, item . get Title (  )  )  . set Text ( R . id . tv_source,  String Utils . clip News Source ( item . get Source (  )  )  )  . set Text ( R . id . tv_time, item . get Ptime (  )  )  ;  // 设置标签 if  (  News Utils . is News Special ( item . get Skip Type (  )  )  )  {      Label View label View = holder . get View ( R . id . label_view )  ;      label View . set Visibility (  View . VISIBLE )  ;      label View . set Text ( ""专题"" )  ;  } else {     holder . set Visible ( R . id . label_view, false )  ;  } // 波纹效果  Ripple View ripple Layout = holder . get View ( R . id . item_ripple )  ;  ripple Layout . set On Ripple Complete Listener ( new  Ripple View .  On Ripple Complete Listener (  )  {     @ Override     public void on Complete (  Ripple View ripple View )  {         if  (  News Utils . is News Special ( item . get Skip Type (  )  )  )  {              Special Activity . launch ( m Context, item . get Special ID (  )  )  ;          } else {             // 旧的实现方式和网易的比较相近，感兴趣的可以切换看看             //                     News Detail Activity . launch ( m Context, item . get Postid (  )  )  ;               News Article Activity . launch ( m Context, item . get Postid (  )  )  ;          }     } } )  ; }"
6312,"public com . anychart . core . stock . scrollerseries .  Candlestick bottom (  Number bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", bottom )  )  ;  return this ; }"
6313,"public boolean is Descendant Of (  Actor actor ) { if  ( actor == null )      throw new  Illegal Argument Exception ( ""actor cannot be null . "" )  ;   Actor parent = this ;  do {     if  ( parent == actor )          return true ;      parent = parent . parent ;  } while  ( parent != null )  ;  return false ; }"
6314,public static  Integer Validator get Instance (  ) { return VALIDATOR ; }
6315,public void set Cancel Touch Focus ( boolean cancel Touch Focus ) { this . cancel Touch Focus = cancel Touch Focus ; }
6316,"public static  Rule Type create (  Class<? extends  Base Description<?>> cls ) {  String result = cls . get Simple Name (  )  ;  result =  More Strings . strip Prefix ( result, "" Abstract"" )  . or Else ( result )  ;  boolean is Build Rule =  Description With Target Graph . class . is Assignable From ( cls )  ;  boolean is Rule Analysis Rule =  Rule Description . class . is Assignable From ( cls )  ;  boolean is Configuration Rule =  Configuration Rule Description . class . is Assignable From ( cls )  ;  if  ( is Build Rule && is Rule Analysis Rule )  {     throw new  Illegal State Exception (  String . format ( ""rule cannot be both a normal build rule and a rule analysis build rule: %s"", cls . get Name (  )  )  )  ;  } if  (  ( is Build Rule || is Rule Analysis Rule )  && is Configuration Rule )  {     throw new  Illegal State Exception (  String . format ( ""rule cannot be both build and configuration: %s"", cls . get Name (  )  )  )  ;  } if  ( is Build Rule || is Configuration Rule )  {     result =  More Strings . strip Suffix ( result, "" Description"" )  . or Else ( result )  ;  } if  ( is Rule Analysis Rule )  {     result =  More Strings . strip Suffix ( result, "" Rule Description"" )  . or Else ( result )  ;  }  Rule Type .  Kind rule Kind ;  if  ( is Build Rule )  {     rule Kind =  Rule Type .  Kind . BUILD ;  } else if  ( is Rule Analysis Rule )  {     rule Kind =  Rule Type .  Kind . BUILD ;  } else if  ( is Configuration Rule )  {     rule Kind =  Rule Type .  Kind . CONFIGURATION ;  } else {     throw new  Illegal State Exception (  String . format ( ""cannot determine rule kind: %s"", cls . get Name (  )  )  )  ;  } return  Rule Type . of (  Case Format . UPPER_CAMEL . to (  Case Format . LOWER_UNDERSCORE, result ) , rule Kind )  ; }"
6317,public boolean has Custom View Type (  ) { return m Render Info . has Custom View Type (  )  ; }
6318,"public com . anychart . core . grids .  Map Settings stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6319,public void set Shadow Color ( int shadow Color ) { if  ( this . shadow Color == shadow Color )      return ;  this . shadow Color = shadow Color ;  init Shadow (  )  ; }
6320,public  Set< String> get Ignored Not In Index (  ) { return ignored ; }
6321,"public void set Firestore Settings ( @ Non Null  Firebase Firestore Settings settings ) { settings = merge Emulator Settings ( settings, this . emulator Settings )  ;  synchronized  ( database Id )  {     check Not Null ( settings, "" Provided settings must not be null . "" )  ;      // should make it simpler to get a  Firestore instance in an activity .      if  ( client != null && !this . settings . equals ( settings )  )  {         throw new  Illegal State Exception ( "" Firebase Firestore has already been started and its settings can no longer be changed .  "" + "" You can only call set Firestore Settings (  )  before calling any other methods on a "" + "" Firebase Firestore object . "" )  ;      }     this . settings = settings ;  }}"
6322,public boolean is Empty (  ) { return static Fields . is Empty (  )  && instance Fields . is Empty (  )  && direct Methods . is Empty (  )  && virtual Methods . is Empty (  )  ; }
6323,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
6324,"public  Model With Abstract Class And Annotation_ on Visibility Changed (  On Model Visibility Changed Listener< Model With Abstract Class And Annotation_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
6325,protected void set Min X ( short min X ) { this . min X = min X ; }
6326,"public void start Listening (  )  throws  Security Exception{ if  ( init Cipher (  )  )  {      Fingerprint Manager .  Crypto Object crypto Object = new  Fingerprint Manager .  Crypto Object ( m Cipher )  ;      if  ( !is Fingerprint Auth Available (  )  )  {         return ;      }     m Cancellation Signal = new  Cancellation Signal (  )  ;      m Self Cancelled = false ;      m Fingerprint Manager . authenticate ( crypto Object, m Cancellation Signal, 0, /* flags */     this, null )  ;      m Icon . set Image Resource ( R . drawable . ic_fp_40px )  ;  }}"
6327,"public static void update (  Update Info update Info,  File patch File )  throws  Merge Exception,  Bundle Exception{ if  ( null == update Info || update Info . dex Patch )  {     //with dex Patch,please call ""dex Patch Update""     return ;  }  Merge Callback merge Callback = new  Merge Callback (  )  {     @ Override     public void on Merge Result ( boolean result,  String bundle Name )  {         if  ( result )  {              Log . d ( "" [ dexmerge ] "", ""merge bundle "" + bundle Name + "" success "" )  ;          } else {              Log . e ( "" [ dexmerge ] "", ""merge bundle "" + bundle Name + "" fail "" )  ;          }     } } ;   Patch Merger patch Merger = new  Patch Merger ( update Info, patch File, merge Callback )  ;  try {     patch Merger . merge (  )  ;  } catch  ( IO Exception e )  {     e . print Stack Trace (  )  ;  }  Patch Installer patch Installer = new  Patch Installer ( patch Merger . merge Outputs, update Info )  ;  patch Installer . install (  )  ;   Patch Cleaner . clear Update Path ( update Info . work Dir . get Absolute Path (  )  )  ; }"
6328,public  Image Downloader get Downloader (  ) { return downloader ; }
6329,"public com . anychart . core .  Series Base color Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
6330,public boolean is Updated (  ) { return updated ; }
6331,private static boolean log Contains (  String msg ) {  List< Log Item> logs =  Shadow Log . get Logs (  )  ;  boolean found = false ;  for  (  Log Item log Item : logs )  {     if  ( log Item . msg . starts With ( msg )  )  {         found = true ;      } } return found ; }
6332,public static boolean is Null Or Blank (  String param ) { return com . microsoft . identity . common . adal . internal . util .  String Extensions . is Null Or Blank ( param )  ; }
6333,"public static  Function< Void,  Long> get Current Time (  ) { return new  Current Time Getter (  )  ; }"
6334,private  String get Previous Inputs Hash (  ) { //  Returning null will trigger the dx command to run again .  return filesystem . read First Line ( output Hash Path )  . or Else ( null )  ; }
6335,"public static boolean write File From IS ( final  File file, final  Input Stream is ) { return write File From IS ( file, is, false, null )  ; }"
6336,"public void show ( J Component comp, int x, int y ) { this . x = x ;  this . y = y ;  super . show ( comp, x, y )  ; }"
6337,public boolean has Additional Data (  ) { return null != this . additional Data ; }
6338,"public com . anychart . core . annotations .  Fibonacci Timezones normal (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . normal ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6339,"public  Builder authorization Header Name (  String header Name ) {  Util . check Empty ( header Name, ""header Name"" )  ;  this . authorization Header Name = header Name ;  return this ; }"
6340,public void promote Leader (  ) {  Worker leader = null ;  if  ( workers . size (  )  > 0 )  {     leader = workers . get ( 0 )  ;  } this . leader = leader ; }
6341,"static boolean write File ( byte [  ]  content,  String file Path ) {  File file = new  File ( file Path )  ;   File Output Stream fos = null ;  try {     if  ( !file . exists (  )  && !file . create New File (  )  )  {         return false ;      }     fos = new  File Output Stream ( file )  ;      fos . write ( content )  ;      fos . flush (  )  ;      return true ;  } catch  (  Throwable e )  {      Sonic Utils . log ( TAG,  Log . ERROR, ""write File error: ( "" + file Path + "" )  "" + e . get Message (  )  )  ;  } finally {     if  ( null != fos )  {         try {             fos . close (  )  ;          } catch  (  Throwable e )  {              Sonic Utils . log ( TAG,  Log . ERROR, ""write File close error: ( "" + file Path + "" )  "" + e . get Message (  )  )  ;          }     } } return false ; }"
6342,public void set Padding Advance X ( int padding Advance X ) { this . padding Advance X = padding Advance X ; }
6343,public static void set Override Immediate Scan Job Id ( int id ) { s Override Immediate Scan Job Id = id ; }
6344,"public void set Drop Down Menu ( @ Non Null  List< String> tab Texts, @ Non Null  List< View> popup Views, @ Non Null  View content View ) { if  ( tab Texts . size (  )  != popup Views . size (  )  )  {     throw new  Illegal Argument Exception ( ""params not match, tab Texts . size (  )  should be equal popup Views . size (  ) "" )  ;  } for  ( int i = 0 ;  i < tab Texts . size (  )  ;  i++ )  {     add Tab ( tab Texts, i )  ;  } container View . add View ( content View, 0 )  ;  mask View = new  View ( get Context (  )  )  ;  mask View . set Layout Params ( new  Frame Layout .  Layout Params (  Frame Layout .  Layout Params . MATCH_PARENT,  Frame Layout .  Layout Params . MATCH_PARENT )  )  ;  mask View . set Background Color ( mask Color )  ;  mask View . set On Click Listener ( new  On Click Listener (  )  {     @ Override     public void on Click (  View v )  {         close Menu (  )  ;      } } )  ;  container View . add View ( mask View, 1 )  ;  mask View . set Visibility ( GONE )  ;  if  ( container View . get Child At ( 2 )  != null )  {     container View . remove View At ( 2 )  ;  } popup Menu Views = new  Frame Layout ( get Context (  )  )  ;  popup Menu Views . set Layout Params ( new  Frame Layout .  Layout Params (  View Group .  Layout Params . MATCH_PARENT,  ( int )   (  Device Utils . get Screen Size ( get Context (  )  )  . y * menu Heigh Percent )  )  )  ;  popup Menu Views . set Visibility ( GONE )  ;  container View . add View ( popup Menu Views, 2 )  ;  for  ( int i = 0 ;  i < popup Views . size (  )  ;  i++ )  {     popup Views . get ( i )  . set Layout Params ( new  View Group .  Layout Params (  View Group .  Layout Params . MATCH_PARENT,  View Group .  Layout Params . WRAP_CONTENT )  )  ;      popup Menu Views . add View ( popup Views . get ( i ) , i )  ;  }}"
6345,"public void test Same Modification (  )  throws IO Exception{ assert Equals ( t ( ""ab Zdefghij"" ) , merge ( ""abcdefghij"", ""ab Zdefghij"", ""ab Zdefghij"" )  )  ; }"
6346,"public boolean has Permission For Package (  Usb Device device,  String package Name ) {  List< Usb Device> usb Devices = granted Permissions . get ( package Name )  ;  return usb Devices != null && usb Devices . contains ( device )  ; }"
6347,"public com . anychart . core . cartesian . series .  Bar3d bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
6348,"public com . anychart . charts .  Heat Map context Menu (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . context Menu ( %s )  ; "", settings )  )  ;  return this ; }"
6349,"public com . anychart . charts .  Heat Map y Axis (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Axis ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
6350,"public static  Intent get App Store Intent (  ) { return get App Store Intent (  Utils . get App (  )  . get Package Name (  ) , false )  ; }"
6351,public static  View To Click To Expand builder (  ) { return new  View To Click To Expand (  )  ; }
6352,public boolean equals ( TJ Scaling Factor other ) { return  ( this . num == other . num && this . denom == other . denom )  ; }
6353,"protected void reload Swipe State In View (  View front View, int position ) { if  ( !opened . get ( position )  )  {      View Compat . set Translation X ( front View, 0 . 0f )  ;  } else {     if  ( opened Right . get ( position )  )  {          View Compat . set Translation X ( front View, swipe List View . get Width (  )  )  ;      } else {          View Compat . set Translation X ( front View, -swipe List View . get Width (  )  )  ;      } }}"
6354,"public  View on Activity Create View (  View parent,  View view,  String name,  Context context,  Attribute Set attrs ) { return m Calligraphy Factory . on View Created ( create Custom View Internal ( parent, view, name, context, attrs ) , context, attrs )  ; }"
6355,"public static int get Orientation ( @ Non Null  List< Image Header Parser> parsers, @ Nullable  Input Stream is, @ Non Null final  Array Pool byte Array Pool )  throws IO Exception{ if  ( is == null )  {     return  Image Header Parser . UNKNOWN_ORIENTATION ;  } if  ( !is . mark Supported (  )  )  {     is = new  Recyclable Buffered Input Stream ( is, byte Array Pool )  ;  } is . mark ( MARK_READ_LIMIT )  ;  final  Input Stream final Is = is ;  return get Orientation Internal ( parsers, new  Orientation Reader (  )  {     @ Override     public int get Orientation (  Image Header Parser parser )  throws IO Exception {         try {             return parser . get Orientation ( final Is, byte Array Pool )  ;          } finally {             final Is . reset (  )  ;          }     } } )  ; }"
6356,"public static final UVC Camera Handler Multi Surface create Handler ( final  Activity parent, final  Camera View Interface camera View, final int width, final int height, final float bandwidth Factor ) { return create Handler ( parent, camera View, 1, width, height, UVC Camera . FRAME_FORMAT_MJPEG, bandwidth Factor )  ; }"
6357,"public  Realm Result Task< Update Result> update One ( final  Bson filter, final  Bson update, final  Update Options update Options ) { return new  Realm Result Task Impl<> ( thread Pool Executor, new  Realm Result Task Impl .  Executor< Update Result> (  )  {     @ Nullable     @ Override     public  Update Result run (  )  {         return os Mongo Collection . update One ( filter, update, update Options )  ;      } } )  ; }"
6358,public static _ Fields find By Thrift Id ( int field Id ) { switch ( field Id )  {     case // DEBUG_INFO     1:         return DEBUG_INFO ;      default:         return null ;  }}
6359,"public com . anychart . charts .  Circular Gauge range (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . range ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
6360,"public com . anychart . core . stock . scrollerseries .  Range Step Area high Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . high Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
6361,public boolean is Showing Popup (  ) { return get List Popup Window (  )  . is Showing (  )  ; }
6362,public final T from Json Value ( @ Nullable  Object value ) {  Json Value Reader reader = new  Json Value Reader ( value )  ;  try {     return from Json ( reader )  ;  } catch  ( IO Exception e )  {     //  No I/O reading from an object .      throw new  Assertion Error ( e )  ;  }}
6363,"public boolean is Cached (  String url ) { check Not Null ( url, "" Url can't be null!"" )  ;  return get Cache File ( url )  . exists (  )  ; }"
6364,"public com . anychart . core . cartesian . series .  Column3d max Point Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Point Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
6365,"public com . anychart . charts .  Sparkline max Markers (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Markers ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6366,"public  Base Adapter Helper set Max ( int view Id, int max ) {  Progress Bar view = retrieve View ( view Id )  ;  view . set Max ( max )  ;  return this ; }"
6367,public void update Progress ( float value ) { final int size = m Transition List . size (  )  ;  for  ( int i = 0 ;  i < size ;  i++ )  {     m Transition List . get ( i )  . update Progress ( value )  ;  }}
6368,public boolean is Success (  ) { return success ; }
6369,"public com . anychart . core . annotations .  Fibonacci Timezones stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6370,"public  Listenable Future< Set<T>> compute (  ) {  List< Listenable Future<T>> individual Futures = new  Array List< Listenable Future<T>> ( individual Producers . size (  )  )  ;  for  (  Producer<T> producer : individual Producers )  {     individual Futures . add ( check Not Null ( producer . get (  )  )  )  ;  } //  Presize the list of collections produced by the amount of collection Producers, with one more // for the consolidate individual Futures from  Futures . all As List .   List< Listenable Future<? extends  Collection<T>>> future Collections = new  Array List< Listenable Future<? extends  Collection<T>>> ( collection Producers . size (  )  + 1 )  ;  future Collections . add (  Futures . all As List ( individual Futures )  )  ;  for  (  Producer< Collection<T>> producer : collection Producers )  {     future Collections . add ( check Not Null ( producer . get (  )  )  )  ;  } return transform (  Futures . all As List ( future Collections ) , new  Function< List< Collection<T>>,  Set<T>> (  )  {     @ Override     public  Set<T> apply (  List< Collection<T>> sets )  {          Immutable Set .  Builder<T> builder =  Immutable Set . builder (  )  ;          for  (  Collection<T> set : sets )  {             builder . add All ( set )  ;          }         return builder . build (  )  ;      } }, direct Executor (  )  )  ; }"
6371,public void set Header Layout Params (  Linear Layout .  Layout Params layout Params ) { if  ( m Header Container != null )  {     m Header Container . set Layout Params ( layout Params )  ;      m Header Height = layout Params . height ;      is Custom Header Height = true ;  }}
6372,public static void clear ( @ Non Null final  Cache Double Utils cache Double Utils ) { cache Double Utils . clear (  )  ; }
6373,"public void test Static Methods (  Class<?> c,  Visibility minimal Visibility ) { for  (  Method method : minimal Visibility . get Static Methods ( c )  )  {     if  ( !is Ignored ( method )  )  {         test Method ( null, method )  ;      } }}"
6374,"protected boolean maybe Drop Buffers To Keyframe (  Media Codec codec, int index, long presentation Time Us, long position Us )  throws  Exo Playback Exception{ int dropped Source Buffer Count = skip Source ( position Us )  ;  if  ( dropped Source Buffer Count == 0 )  {     return false ;  } decoder Counters . dropped To Keyframe Count++ ;  //  We dropped some buffers to catch up, so update the decoder counters and flush the codec, // which releases all pending buffers buffers including the current output buffer .  update Dropped Buffer Counters ( buffers In Codec Count + dropped Source Buffer Count )  ;  flush Or Reinitialize Codec (  )  ;  return true ; }"
6375,protected  Servlet Binder register (  Servlet Binder b ) { return b ; }
6376,"public boolean is Set Last Stored Timestamp Millis (  ) { return org . apache . thrift .  Encoding Utils . test Bit ( __isset_bitfield, __LASTSTOREDTIMESTAMPMILLIS_ISSET_ID )  ; }"
6377,public long get Updated Time Millis (  ) { return  Util . parse Date Time ( m Updated Time )  ; }
6378,"public com . anychart . core . stock . indicators .  Aroon down Series (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . down Series ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
6379,"public com . anychart . charts .  Linear Gauge bounds ( com . anychart . core . utils .  Bounds bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
6380,public  Two Level Header set Enable Two Level ( boolean enabled ) { this . m Enable Two Level = enabled ;  return this ; }
6381,"public com . anychart . graphics . vector .  Hatch Fill scale By Anchor (  Number sx,  Number sy, com . anychart . graphics . vector .  Anchor anchor ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . scale By Anchor ( %s, %s, %s )  ; "", sx, sy,  ( anchor != null )  ? anchor . get Js Base (  )  : null )  )  ;  return this ; }"
6382,"private void init_custom_card_clickable (  ) { // Create a  Card  Custom Card card = new  Custom Card ( get Activity (  )  )  ;  // Set on Click listener card . set On Click Listener ( new  Card .  On Card Click Listener (  )  {     @ Override     public void on Click (  Card card,  View view )  {          Toast . make Text ( get Activity (  ) , "" Clickable card"",  Toast . LENGTH_LONG )  . show (  )  ;      } } )  ;  // Set card in the card View  Card View Native card View =  (  Card View Native )  get Activity (  )  . find View By Id ( R . id . carddemo_example_card3_clickable )  ;  card View . set Card ( card )  ; }"
6383,"public com . anychart . core . polar . series .  Continuous Base closed (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . closed ( %s )  ; "", enabled )  )  ;  return this ; }"
6384,"public void when Serial Number Set In Environment Then Correct Device Found (  ) { I Device [  ]  devices = new I Device [  ]  { create Real Device ( ""1"", I Device .  Device State . ONLINE ) , create Emulator ( ""2"", I Device .  Device State . ONLINE ) , create Real Device ( ""3"", I Device .  Device State . ONLINE ) , create Emulator ( ""4"", I Device .  Device State . ONLINE )  } ;  for  ( int i = 0 ;  i < devices . length ;  i++ )  {      Adb Helper my Adb Helper = create Adb Helper (  Test Execution Context . new Builder (  )  . set Environment (  Immutable Map . of (  Adb Helper . SERIAL_NUMBER_ENV, devices [ i ]  . get Serial Number (  )  )  )  . build (  ) , create Adb Options (  ) , new  Target Device Options (  )  )  ;       List<I Device> filtered Devices = my Adb Helper . filter Devices ( devices )  ;      assert Not Null ( filtered Devices )  ;      assert Equals ( 1, filtered Devices . size (  )  )  ;      assert Same ( devices [ i ] , filtered Devices . get ( 0 )  )  ;  }}"
6385,"public static  Queue<E> synchronized Queue (  Queue<E> queue ) { return  Synchronized . queue ( queue, null )  ; }"
6386,"public final  String get Full Message (  ) { byte [  ]  raw = buffer ;  int msg B =  Raw Parse Utils . tag Message ( raw, 0 )  ;  if  ( msg B < 0 )  {     //$NON-NLS-1$     return """" ;  } int signature Start = get Signature Start (  )  ;  int end = signature Start < 0 ? raw . length : signature Start ;  if  ( end == msg B )  {     //$NON-NLS-1$     return """" ;  } return  Raw Parse Utils . decode ( guess Encoding (  ) , raw, msg B, end )  ; }"
6387,"public com . anychart . core . ui .  Circular Labels Factory disable Pointer Events (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . disable Pointer Events ( %s )  ; "", enabled )  )  ;  return this ; }"
6388,public  Builder set Resource Name ( java . lang .  String value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } resource Name_ = value ;  on Changed (  )  ;  return this ; }
6389,"public com . anychart . core . utils .  Unbound Regions Settings stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6390,"public void test Constructors (  Class<?> c,  Visibility minimal Visibility ) { for  (  Constructor<?> constructor : c . get Declared Constructors (  )  )  {     if  ( minimal Visibility . is Visible ( constructor )  && !is Ignored ( constructor )  )  {         test Constructor ( constructor )  ;      } }}"
6391,"protected boolean is Fit (  Char Sequence text,  Text Paint paint ) { // 自动换行 boolean m Single Line = text View . is Single Line (  )  ;  int max Lines = text View . get Max Lines Compat (  )  ;  float multi = text View . get Line Spacing Multiplier Compat (  )  ;  float space = text View . get Line Spacing Extra Compat (  )  ;  space = space * multi ;  int height = text View . get Text Height (  )  ;  if  ( !m Single Line )  {     if  ( ! Last No Space )  {         height +=  Math . round ( space )  ;      } } int lines = m Single Line ? 1 :  Math . max ( 1, max Lines )  ;   Static Layout layout = get Static Layout ( text, paint )  ;  return layout . get Line Count (  )  <= lines && layout . get Height (  )  <= height ; }"
6392,"public com . anychart . core . gantt .  Time Line Header padding (  String value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
6393,public GSY Video Option Builder set Dismiss Control Time ( int dismiss Control Time ) { this . m Dismiss Control Time = dismiss Control Time ;  return this ; }
6394,"public com . anychart . core . stock . scrollerseries .  Jump Line stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
6395,"public int execute (  ) { return conn . update ( get Schema (  ) , contents, get Where Clause (  ) , get Bind Args (  )  )  ; }"
6396,"public  Optional< Tool Provider> get Tool Provider (  String section,  String field ) { return get Tool Provider ( section, field,  Paths::get )  ; }"
6397,protected  Inet Address get Inet Address (  )  throws  Unknown Host Exception{ if  ( get Address (  )  == null )      return null ;  return  Inet Address . get By Name ( get Address (  )  )  ; }
6398,"private boolean process Response ( final  Network Request request )  throws IO Exception{ boolean success = true ;   Input Stream stream = request . get Stream (  )  ;   Output Stream output ;  if  ( stream != null )  {      File output File = new  File ( m Destination File . get Path (  )  )  ;      if  ( !output File . exists (  )  )  {         if  ( m Resume Offset > 0 )  {             throw new IO Exception ( "" The file to download to has been deleted . "" )  ;          }         boolean created = output File . create New File (  )  ;          if  ( !created )  {              Log . w ( TAG, ""unable to create file:"" + output File . get Absolute Path (  )  )  ;          }     }     if  ( m Resume Offset > 0 )  {          Log . d ( TAG, "" Resuming download file "" + output File . get Absolute Path (  )  + "" at "" + m Resume Offset )  ;          output = new  File Output Stream ( output File, true )  ;      } else {         // truncate if we are starting from scratch .          output = new  File Output Stream ( output File )  ;      }     try {         byte [  ]  data = new byte [ PREFERRED_CHUNK_SIZE ]  ;          int count ;          while  ( success &&  ( count = fill Buffer ( stream, data )  )  != -1 )  {             output . write ( data, 0, count )  ;              m Bytes Downloaded += count ;              if  ( m Exception != null )  {                  Log . d ( TAG, "" Exception occurred during file download .   Retrying . "", m Exception )  ;                  m Exception = null ;                  success = false ;              }             if  ( !try Change State ( INTERNAL_STATE_IN_PROGRESS, false )  )  {                 success = false ;              }         }     } finally {         output . flush (  )  ;          output . close (  )  ;          stream . close (  )  ;      } } else {     m Exception = new  Illegal State Exception ( "" Unable to open  Firebase  Storage stream . "" )  ;      success = false ;  } return success ; }"
6399,public  Simple Series Renderer get Series Renderer At ( int index ) { return m Renderers . get ( index )  ; }
6400,"public com . anychart . standalones . axismarkers .  Line layout ( com . anychart . enums .  Layout layout ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . layout ( %s )  ; "",  ( layout != null )  ? layout . get Js Base (  )  : null )  )  ;  return this ; }"
6401,"public final  Point F view To Source Coord (  Point F vxy, @ Non Null  Point F s Target ) { return view To Source Coord ( vxy . x, vxy . y, s Target )  ; }"
6402,"protected void show ( final  Object Walk object Walk, final  Rev Object current Object )  throws  Exception{//  Do nothing by default .   Most applications cannot show an object . }"
6403,"public com . anychart . charts .  Gantt row Selected Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
6404,"public void offset X (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . offset X (  )  ; "" )  ; }"
6405,"public  Job Status get Job Status (  String id ) { assert Not In Main Thread (  )  ;  assert Not In Job Manager Thread ( "" Cannot call get Job Status on  Job Manager's thread"" )  ;   Public Query Message message = message Factory . obtain (  Public Query Message . class )  ;  message . set (  Public Query Message . JOB_STATUS, id, null )  ;   Integer status = new  Int Query Future<> ( message Queue, message )  . get Safe (  )  ;  return  Job Status . values (  )  [ status ]  ; }"
6406,public  Builder failed Resource Id ( @ Layout Res final int failed Resource Id ) { this . failed Resource Id = failed Resource Id ;  return this ; }
6407,"public final  Parameters Builder set Renderer Disabled ( int renderer Index, boolean disabled ) { if  ( renderer Disabled Flags . get ( renderer Index )  == disabled )  {     //  The disabled flag is unchanged .      return this ;  } //  Only true values are placed in the array to make it easier to check for equality .  if  ( disabled )  {     renderer Disabled Flags . put ( renderer Index, true )  ;  } else {     renderer Disabled Flags . delete ( renderer Index )  ;  } return this ; }"
6408,"private static boolean is Power Connected (  Intent battery Status Intent ) { final int status = battery Status Intent . get Int Extra (  Battery Manager . EXTRA_STATUS, -1 )  ;  if  ( status == -1 )  {     return false ;  } return status ==  Battery Manager . BATTERY_STATUS_CHARGING || status ==  Battery Manager . BATTERY_STATUS_FULL ; }"
6409,public  Bson Document get Document Key (  ) { return document Key ; }
6410,"public void send (  String data )  throws IO Exception{  Datagram Packet dp = new  Datagram Packet ( data . get Bytes (  ) , data . length (  ) , multicast Group )  ;  datagram Socket . send ( dp )  ; }"
6411,"public com . anychart . core . cartesian . series .  Continuous Range Base max Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
6412,public int get Count (  ) { return layers . size ; }
6413,"private static  String parse Host Header (  Http Request http Request, boolean include Port ) { // this header parsing logic is adapted from  Client To Proxy Connection#identify Host And Port .   List< String> hosts = http Request . headers (  )  . get All (  Http Headers .  Names . HOST )  ;  if  ( !hosts . is Empty (  )  )  {      String host And Port = hosts . get ( 0 )  ;      if  ( include Port )  {         return host And Port ;      } else {          Host And Port parsed Host And Port =  Host And Port . from String ( host And Port )  ;          return parsed Host And Port . get Host (  )  ;      } } else {     return null ;  }}"
6414,protected void set Action Bar Res (  Action Bar Res action Bar Res ) { super . set Action Bar Res ( action Bar Res )  ;  action Bar Res . title = get String ( R . string . str_collect )  ;  action Bar Res . back Image Id = R . drawable . titlebar_back ; }
6415,public boolean is Recording (  ) { return recording ; }
6416,"public void save As Xlsx ( com . anychart . enums .  Chart Data Export Mode chart Data Export Mode,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Xlsx ( %s, %s )  ; "",  ( chart Data Export Mode != null )  ? chart Data Export Mode . get Js Base (  )  : null, wrap Quotes ( filename )  )  )  ; }"
6417,"public void remove Change Listener (  Ordered Realm Collection Change Listener< Realm Results<E>> listener ) { check For Remove Listener ( listener, true )  ;  os Results . remove Listener ( this, listener )  ; }"
6418,"public void render Limit Lines (  Canvas c ) {  List< Limit Line> limit Lines = m X Axis . get Limit Lines (  )  ;  if  ( limit Lines == null || limit Lines . size (  )  <= 0 )      return ;  float [  ]  pts = m Render Limit Lines Buffer ;  pts [ 0 ]  = 0 ;  pts [ 1 ]  = 0 ;   Path limit Line Path = m Render Limit Lines Path Buffer ;  limit Line Path . reset (  )  ;  for  ( int i = 0 ;  i < limit Lines . size (  )  ;  i++ )  {      Limit Line l = limit Lines . get ( i )  ;      if  ( !l . is Enabled (  )  )          continue ;      int clip Restore Count = c . save (  )  ;      m Limit Line Clipping Rect . set ( m View Port Handler . get Content Rect (  )  )  ;      m Limit Line Clipping Rect . inset ( 0 . f, -l . get Line Width (  )  )  ;      c . clip Rect ( m Limit Line Clipping Rect )  ;      m Limit Line Paint . set Style (  Paint .  Style . STROKE )  ;      m Limit Line Paint . set Color ( l . get Line Color (  )  )  ;      m Limit Line Paint . set Stroke Width ( l . get Line Width (  )  )  ;      m Limit Line Paint . set Path Effect ( l . get Dash Path Effect (  )  )  ;      pts [ 1 ]  = l . get Limit (  )  ;      m Trans . point Values To Pixel ( pts )  ;      limit Line Path . move To ( m View Port Handler . content Left (  ) , pts [ 1 ]  )  ;      limit Line Path . line To ( m View Port Handler . content Right (  ) , pts [ 1 ]  )  ;      c . draw Path ( limit Line Path, m Limit Line Paint )  ;      limit Line Path . reset (  )  ;      // c . draw Lines ( pts, m Limit Line Paint )  ;       String label = l . get Label (  )  ;      // if drawing the limit-value label is enabled     if  ( label != null && !label . equals ( """" )  )  {         m Limit Line Paint . set Style ( l . get Text Style (  )  )  ;          m Limit Line Paint . set Path Effect ( null )  ;          m Limit Line Paint . set Color ( l . get Text Color (  )  )  ;          m Limit Line Paint . set Stroke Width ( 0 . 5f )  ;          m Limit Line Paint . set Text Size ( l . get Text Size (  )  )  ;          final float label Line Height =  Utils . calc Text Height ( m Limit Line Paint, label )  ;          float x Offset =  Utils . convert Dp To Pixel ( 4f )  + l . get X Offset (  )  ;          float y Offset = l . get Line Width (  )  + label Line Height + l . get Y Offset (  )  ;          final  Limit Line .  Limit Label Position position = l . get Label Position (  )  ;          if  ( position ==  Limit Line .  Limit Label Position . RIGHT_TOP )  {             m Limit Line Paint . set Text Align (  Align . RIGHT )  ;              c . draw Text ( label, m View Port Handler . content Right (  )  - x Offset, pts [ 1 ]  - y Offset + label Line Height, m Limit Line Paint )  ;          } else if  ( position ==  Limit Line .  Limit Label Position . RIGHT_BOTTOM )  {             m Limit Line Paint . set Text Align (  Align . RIGHT )  ;              c . draw Text ( label, m View Port Handler . content Right (  )  - x Offset, pts [ 1 ]  + y Offset, m Limit Line Paint )  ;          } else if  ( position ==  Limit Line .  Limit Label Position . LEFT_TOP )  {             m Limit Line Paint . set Text Align (  Align . LEFT )  ;              c . draw Text ( label, m View Port Handler . content Left (  )  + x Offset, pts [ 1 ]  - y Offset + label Line Height, m Limit Line Paint )  ;          } else {             m Limit Line Paint . set Text Align (  Align . LEFT )  ;              c . draw Text ( label, m View Port Handler . offset Left (  )  + x Offset, pts [ 1 ]  + y Offset, m Limit Line Paint )  ;          }     }     c . restore To Count ( clip Restore Count )  ;  }}"
6419,public  Share Messenger Action Button get Default Action (  ) { return default Action ; }
6420,"protected  Object invoke ( @ Nullable  Object a1, @ Nullable  Object a2 )  throws  Invocation Target Exception{  Object [  ]  args = new  Object [ 2 + json Adapters . length ]  ;  args [ 0 ]  = a1 ;  args [ 1 ]  = a2 ;   System . arraycopy ( json Adapters, 0, args, 2, json Adapters . length )  ;  try {     return method . invoke ( adapter, args )  ;  } catch  (  Illegal Access Exception e )  {     throw new  Assertion Error (  )  ;  }}"
6421,"public static float [  ]  concat All Float ( float [  ]  .  .  .  arrays ) { int total Length = 0 ;  final int sub Array Count = arrays . length ;  for  ( int i = 0 ;  i < sub Array Count ;  ++i )  {     total Length += arrays [ i ]  . length ;  } float [  ]  result =  Arrays . copy Of ( arrays [ 0 ] , total Length )  ;  int offset = arrays [ 0 ]  . length ;  for  ( int i = 1 ;  i < sub Array Count ;  ++i )  {      System . arraycopy ( arrays [ i ] , 0, result, offset, arrays [ i ]  . length )  ;      offset += arrays [ i ]  . length ;  } return result ; }"
6422,"public com . anychart . scales .  Linear stick To Zero (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stick To Zero ( %s )  ; "", enabled )  )  ;  return this ; }"
6423,public float get Indicator Width (  ) { return m Indicator Width ; }
6424,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
6425,"public com . anychart . core . gauge . pointers .  Knob stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6426,"public static void set Transparent For Image View (  Activity activity,  View need Offset View ) { set Translucent For Image View ( activity, 0, need Offset View )  ; }"
6427,"public static void t (  String message ) { F Log . i (  React Constants . TAG, message )  ; }"
6428,"public  Closing Future<U> call ( final  Closing Function2<V1, V2, U> function,  Executor executor ) { return call ( new  Combining Callable<U> (  )  {     @ Override     public U call (  Deferred Closer closer,  Peeker peeker )  throws  Exception {         return function . apply ( closer, peeker . get Done ( future1 ) , peeker . get Done ( future2 )  )  ;      }     @ Override     public  String to String (  )  {         return function . to String (  )  ;      } }, executor )  ; }"
6429,private void cancel Subscription (  ) { if  ( subscriber != null && !subscriber . is Unsubscribed (  )  )  {     subscriber . unsubscribe (  )  ;  }}
6430,"public static  Immutable Set< Aggregated Uninstall Modules Metadata> from (  Elements elements ) { return from (  Aggregated Elements . from (  Class Names . AGGREGATED_UNINSTALL_MODULES_PACKAGE,  Class Names . AGGREGATED_UNINSTALL_MODULES, elements ) , elements )  ; }"
6431,"public com . anychart . core .  State Settings selected (  ) { return new com . anychart . core .  State Settings ( js Base + "" . selected (  ) "" )  ; }"
6432,"public  Immersion Bar status Bar Color Transform ( @ Color Res int status Bar Color Transform ) { return this . status Bar Color Transform Int (  Context Compat . get Color ( m Activity, status Bar Color Transform )  )  ; }"
6433,public boolean should Do Full Binding Graph Validation (  Type Element component ) { return requires Full Binding Graph Validation (  )  || compiler Options . plugins Visit Full Binding Graphs ( component )  ; }
6434,"public com . anychart . charts .  Cartesian3d margin (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
6435,public void reset Circle Colors (  ) { if  ( m Circle Colors == null )  {     m Circle Colors = new  Array List< Integer> (  )  ;  } m Circle Colors . clear (  )  ; }
6436,"public void contains Match (  String regex ) { check Not Null ( regex )  ;  if  ( actual == null )  {     fail With Actual ( ""expected a string that contains a match for"", regex )  ;  } else if  ( ! Platform . contains Match ( actual, regex )  )  {     fail With Actual ( ""expected to contain a match for"", regex )  ;  }}"
6437,"public int get Scaled Width ( int desired Width, int desired Height )  throws  Exception{ if  ( jpeg Width < 1 || jpeg Height < 1 )      throw new  Exception ( NO_ASSOC_ERROR )  ;  if  ( desired Width < 0 || desired Height < 0 )      throw new  Exception ( "" Invalid argument in get Scaled Width (  ) "" )  ;  TJ Scaling Factor [  ]  sf = TJ . get Scaling Factors (  )  ;  if  ( desired Width == 0 )      desired Width = jpeg Width ;  if  ( desired Height == 0 )      desired Height = jpeg Height ;  int scaled Width = jpeg Width, scaled Height = jpeg Height ;  for  ( int i = 0 ;  i < sf . length ;  i++ )  {     scaled Width = sf [ i ]  . get Scaled ( jpeg Width )  ;      scaled Height = sf [ i ]  . get Scaled ( jpeg Height )  ;      if  ( scaled Width <= desired Width && scaled Height <= desired Height )          break ;  } if  ( scaled Width > desired Width || scaled Height > desired Height )      throw new  Exception ( "" Could not scale down to desired image dimensions"" )  ;  return scaled Width ; }"
6438,"public static  String get All Error Details From Intent ( @ Non Null  Context context, @ Non Null  Intent intent ) { //I don't think that this needs localization because it's a development string .  .  .   Date current Date = new  Date (  )  ;   Date Format date Format = new  Simple Date Format ( ""yyyy-MM-dd HH:mm:ss"",  Locale . US )  ;  // Get build date  String build Date As String = get Build Date As String ( context, date Format )  ;  // Get app version  String version Name = get Version Name ( context )  ;   String error Details = """" ;  error Details += "" Build version: "" + version Name + "" \n"" ;  if  ( build Date As String != null )  {     error Details += "" Build date: "" + build Date As String + "" \n"" ;  } error Details += "" Current date: "" + date Format . format ( current Date )  + "" \n"" ;  // Added a space between line feeds to fix #18 .  // Ideally, we should not use this method at all .  .  .   It is only formatted this way because of coupling with the default error activity .  // We should move it to a method that returns a bean, and let anyone format it as they wish .  error Details += "" Device: "" + get Device Model Name (  )  + "" \n"" ;  error Details += ""OS version:  Android "" +  Build . VERSION . RELEASE + ""  ( SDK "" +  Build . VERSION . SDK_INT + "" )  \n \n"" ;  error Details += "" Stack trace:  \n"" ;  error Details += get Stack Trace From Intent ( intent )  ;   String activity Log = get Activity Log From Intent ( intent )  ;  if  ( activity Log != null )  {     error Details += ""\n User actions: \n"" ;      error Details += activity Log ;  } return error Details ; }"
6439,"public com . anychart . core . axismarkers .  Gantt Range fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
6440,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
6441,"public com . anychart . core . resource .  Grid bounds (  Number x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, height )  )  ;  return this ; }"
6442,"public  Vector3 rotate Y ( double angle ) { double cos RY =  Math . cos ( angle )  ;  double sin RY =  Math . sin ( angle )  ;  if  ( m Tmp Vector3 == null )  {     m Tmp Vector3 = new  Vector3 ( this )  ;  } else {     m Tmp Vector3 . set All ( x, y, z )  ;  } x = m Tmp Vector3 . x * cos RY + m Tmp Vector3 . z * sin RY ;  z = m Tmp Vector3 . x * -sin RY + m Tmp Vector3 . z * cos RY ;  return this ; }"
6443,"public com . anychart . charts .  Heat Map a11y (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . a11y ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6444,"public static boolean has Annotations Annotated With (  Element element,  Class Name sub Annotation ) { return !get Annotations Annotated With ( element, sub Annotation )  . is Empty (  )  ; }"
6445,public  String [  ]  get Titles ( int index ) { return m Titles . get ( index )  ; }
6446,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
6447,"public  Checkable Dialog Builder add Items (  Char Sequence [  ]  items,  On Click Listener listener ) { for  ( final  Char Sequence item : items )  {     add Item ( new  Item View Factory (  )  {         @ Override         public QMUI Dialog Menu Item View create Item View (  Context context )  {             return new QMUI Dialog Menu Item View .  Mark Item View ( context, item )  ;          }     }, listener )  ;  } return this ; }"
6448,"public void set Session Succeeds ( int session Id ) { set Session Finishes ( session Id, true )  ; }"
6449,"public com . anychart . charts .  Gantt padding (  Number value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
6450,public int get Relay (  ) { return m Relay ; }
6451,"public com . anychart . core . cartesian . series .  Line3d connect Missing Points (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . connect Missing Points ( %s )  ; "", enabled )  )  ;  return this ; }"
6452,"public void test Get My Proc Stat (  )  throws  Proc Stat Util .  Parse Exception{  String cat Path = ""/proc/"" +  Process . my Pid (  )  + ""/stat"" ;   String cat =  Battery Canary Util . cat ( cat Path )  ;   Assert . assert False (  Text Utils . is Empty ( cat )  )  ;   Proc Stat Util .  Proc Stat stat = parse Jiffies Info With Splits For Path ( cat Path )  ;   Assert . assert Not Null ( stat . comm )  ;   Assert . assert True ( stat . utime >= 0 )  ;   Assert . assert True ( stat . stime >= 0 )  ;   Assert . assert True ( stat . cutime >= 0 )  ;   Assert . assert True ( stat . cstime >= 0 )  ;  long jiffies = stat . utime + stat . stime + stat . cutime + stat . cstime ;   Assert . assert True ( jiffies >= 0 )  ;   Proc Stat Util .  Proc Stat stat New =  Proc Stat Util . current Pid (  )  ;   Assert . assert Not Null ( stat New )  ;   Assert . assert Equals ( stat . comm, stat New . comm )  ;   Assert . assert True ( stat New . utime >= stat . utime )  ;   Assert . assert True ( stat New . stime >= stat . stime )  ;   Assert . assert True ( stat New . cutime >= stat . cutime )  ;   Assert . assert True ( stat New . cstime >= stat . cstime )  ;   Assert . assert True ( stat New . get Jiffies (  )  >= stat . get Jiffies (  )  )  ; }"
6453,"public  Date get Date ( @ Non Null  String field, @ Non Null  Server Timestamp Behavior server Timestamp Behavior ) { check Not Null ( field, "" Provided field path must not be null . "" )  ;  check Not Null ( server Timestamp Behavior, "" Provided server Timestamp Behavior value must not be null . "" )  ;  @ Nullable  Timestamp timestamp = get Timestamp ( field, server Timestamp Behavior )  ;  return timestamp != null ? timestamp . to Date (  )  : null ; }"
6454,"public com . anychart . charts .  Sunburst palette (  String [  ]  settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . palette ( %s )  ; "", array To String Wrap Quotes ( settings )  )  )  ;  return this ; }"
6455,public final boolean is Class Init (  ) { return get Nat (  )  . is Class Init (  )  ; }
6456,"public com . anychart . charts .  Pie labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6457,"public static  String encode Base64 URL Safe String ( byte [  ]  binary Data ) { return  String Utils . new String Utf8 ( encode Base64 ( binary Data, false, true )  )  ; }"
6458,static  Trace start Trace ( @ Non Null  String trace Name ) {  Trace trace = trace Name To Trace Map . get ( trace Name )  ;  if  ( trace != null )  {     trace . start (  )  ;  } return trace ; }
6459,public static  String With Macros of Constant String (  String single Part ) { if  ( single Part . is Empty (  )  )  {     return  Constant . EMPTY ;  } else {     return new  Constant ( single Part )  ;  }}
6460,"static void populate Multiset (  Multiset<E> multiset,  Object Input Stream stream, int distinct Elements )  throws IO Exception,  Class Not Found Exception{ for  ( int i = 0 ;  i < distinct Elements ;  i++ )  {     // reading data stored by write Multiset     @ Suppress Warnings ( ""unchecked"" )  E element =  ( E )  stream . read Object (  )  ;      int count = stream . read Int (  )  ;      multiset . add ( element, count )  ;  }}"
6461,"private void notify On App Deleted (  ) { for  (  Firebase App Lifecycle Listener listener : lifecycle Listeners )  {     listener . on Deleted ( name, options )  ;  }}"
6462,"public com . anychart . core . stock . scrollerseries .  Hilo max Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
6463,public void set Enabled ( boolean enabled ) { m Paused = !enabled ; }
6464,"public void set Padding (  View v ) { if  (  (  (  Check Box )  v )  . is Checked (  )  )  {     m Baidu Map . set Padding ( padding Left, padding Top, padding Right, padding Bottom )  ;      add View ( m Map View )  ;  } else {     m Baidu Map . set Padding ( 0, 0, 0, 0 )  ;      m Map View . remove View ( m Text View )  ;  }}"
6465,public int get Device Key (  )  throws  Illegal State Exception{ check Connection (  )  ;  return USB Monitor . get Device Key ( m Weak Device . get (  )  )  ; }
6466,"Memory Pooled Byte Buffer new Byte Buf (  Input Stream input Stream,  Memory Pooled Byte Buffer Output Stream output Stream )  throws IO Exception{ m Pooled Byte Streams . copy ( input Stream, output Stream )  ;  return output Stream . to Byte Buffer (  )  ; }"
6467,"public  Primitive cast To Type (  Class to Type, int operation )  throws  Util Eval Error{ return cast Primitive ( to Type, get Type (  ) , /*from Type*/ this, /*from Value*/ false, /*check Only*/ operation )  ; }"
6468,"public  Local Item get Local Item (  ) { return  Local Item . make ( name, signature )  ; }"
6469,"private void do Copy ( final int offset, final  Memory Chunk other, final int other Offset, final int count ) { if  ( ! ( other instanceof  Native Memory Chunk )  )  {     throw new  Illegal Argument Exception ( "" Cannot copy two incompatible  Memory Chunks"" )  ;  }  Preconditions . check State ( !is Closed (  )  )  ;   Preconditions . check State ( !other . is Closed (  )  )  ;   Memory Chunk Util . check Bounds ( offset, other . get Size (  ) , other Offset, count, m Size )  ;  native Memcpy ( other . get Native Ptr (  )  + other Offset, m Native Ptr + offset, count )  ; }"
6470,"public com . anychart . core . cartesian . series .  Continuous Range Base labels (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", settings )  )  ;  return this ; }"
6471,"public com . anychart . core . annotations .  Andrews Pitchfork bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
6472,"private static  Method find Closest Getter On Abstract Class Or Interface (  Method setter ) {  Iterable< Class<?>> super Classes =  Iterables . skip (  Types . get Supertypes ( setter . get Declaring Class (  )  . get Enclosing Class (  )  ) , 1 )  ;   Immutable List< String> getter Names = get Getter Names ( setter )  ;  for  (  Class<?> clazz : super Classes )  {     for  (  String getter Name : getter Names )  {         try {             return clazz . get Declared Method ( getter Name )  ;          } catch  (  No Such Method Exception e )  {         //  Handled below         }     } } throw new  Illegal State Exception (  String . format ( "" Couldn't find declared getter for %s#%s .   Tried parent classes %s methods: %s"", setter . get Declaring Class (  ) , setter . get Name (  ) , super Classes, getter Names )  )  ; }"
6473,"public  String to Json String (  ) { JSON Object json = json Serialize Params (  )  ;  for  (  Map .  Entry< String,  String> param : additional Parameters . entry Set (  )  )  {      Json Util . put ( json, param . get Key (  ) , param . get Value (  )  )  ;  } return json . to String (  )  ; }"
6474,"private static void create Controller For Object Id And Type (  String object Id,  Like View .  Object Type object Type,  Creation Callback callback ) { //  Check again to see if the controller was created before attempting to deserialize/create // one .   Need to check this in the case where multiple  Like Views are looking for a controller // for the same object and all got queued up to create one .   We only want the first one to go // through with the creation, and the rest should get the same instance from the // object-cache .   Like Action Controller controller For Object = get Controller From In Memory Cache ( object Id )  ;  if  ( controller For Object != null )  {     //  Direct object-cache hit     verify Controller And Invoke Callback ( controller For Object, object Type, callback )  ;      return ;  } //  Try deserialize from disk controller For Object = deserialize From Disk Synchronously ( object Id )  ;  if  ( controller For Object == null )  {     controller For Object = new  Like Action Controller ( object Id, object Type )  ;      serialize To Disk Async ( controller For Object )  ;  } //  Update object-cache .  put Controller In Memory Cache ( object Id, controller For Object )  ;  //  Refresh the controller on the  Main thread .  final  Like Action Controller controller To Refresh = controller For Object ;  handler . post ( new  Runnable (  )  {     @ Override     public void run (  )  {         controller To Refresh . refresh Status Async (  )  ;      } } )  ;  invoke Callback With Controller ( callback, controller To Refresh, null )  ; }"
6475,"protected  Object3 D read G Code (  Buffered Input Stream buffer )  throws IO Exception{  Raj Log . i ( ""G Code Paser: reading file"" )  ;   Object3 D ret = new  Object3 D (  )  ;   String code Line ;  //  Read the facet  Supported Commands cmd = null ;  G Code Line motion = null, prev Motion = null ;  G Code Layer current Layer = new G Code Layer (  )  ;  float last Z Pos = 0, last Extrude Z = 0, x, y ;  @ Suppress Warnings ( ""unused"" )  float // default for millis units = 1 F ;  boolean relative = false ;  prev Motion = new G Code Line (  )  ;  prev Motion . set X ( 0 . 0f )  ;  prev Motion . set Y ( 0 . 0f )  ;  prev Motion . set Z ( 0 . 0f )  ;  prev Motion . set E ( 0 . 0f )  ;  prev Motion . set F ( 0 . 0f )  ;   String Builder ln Builder = new  String Builder ( 1024 )  ;  int line Num = 0 ;  while  ( buffer . available (  )  > 0 )  {     byte b =  ( byte )  buffer . read (  )  ;      if  ( b != '\n' )  {         ln Builder . append (  ( char )  b )  ;          continue ;      } else {         code Line = ln Builder . to String (  )  ;          ln Builder . delete ( 0, ln Builder . length (  )  )  ;      }     // while  (  ( codeline = buffer . read Line (  )  )  != null )  {     if  ( code Line . starts With ( "" ; "" )  )  {         continue ;      }      String [  ]  tokens = code Line . split ( "" "" )  ;      if  ( null == tokens || tokens . length == 0 )  {         continue ;      }     try {         cmd =  Supported Commands . from String ( tokens [ 0 ]  )  ;      } catch  (  Illegal Argument Exception e )  {          Raj Log . w ( ""encountered unsupported gcode:"" + tokens [ 0 ]  )  ;          continue ;      }     switch ( cmd )  {         case G1:             motion = new G Code Line ( code Line )  ;              motion . set Origin ( prev Motion )  ;              // TODO color lines based on travel and speed             if  ( motion . get X (  )  == 0x FFFFFFFF && motion . get Y (  )  == 0x FFFFFFFF && motion . get Z (  )  == 0x FFFFFFFF )  {                 // extrusion or speed setting                 continue ;              }             x = motion . get X (  )  == 0x FFFFFFFF ? 0 : motion . get X (  )  ;              y = motion . get Y (  )  == 0x FFFFFFFF ? 0 : motion . get Y (  )  ;              if  ( motion . get Z (  )  != 0x FFFFFFFF )  {                 last Z Pos = motion . get Z (  )  ;                  if  ( x == 0 && y == 0 )  {                     continue ;                  }             }             current Layer . get Points (  )  . add ( new  Vector3 ( x, y, last Z Pos )  )  ;              if  ( motion . get E (  )  != 0x FFFFFFFF )  {                 float delta ;                  if  ( relative )  {                     delta = motion . get E (  )  - prev Motion . get E (  )  ;                  } else {                     delta = motion . get E (  )  ;                      if  ( delta == 0x FFFFFFFF )  {                         delta = 0 ;                      }                 }                 if  ( delta > 0 )  {                     // check if extruding at new Z                     if  ( last Z Pos > last Extrude Z )  {                         // || layers . empty (  )                          last Extrude Z = last Z Pos ;                          ret . add Child ( new  Line3 D ( current Layer . get Points (  ) , 1f,  Color . argb ( 255, 0x55, 0x11, 0x EF )  )  )  ;                          current Layer = new G Code Layer (  )  ;                      }                 }             }             prev Motion = motion ;              break ;          case G21:             // G21:  Set  Units to  Millimeters             //  Example: G21             units = 1 F ;              break ;          case G90:             // G90:  Set to  Absolute  Positioning             //  Example: G90             relative = false ;              break ;          case G91:             // G91:  Set to  Relative  Positioning             //  Example: G91             relative = true ;              break ;          case G92:             // G92:  Set  Position             //  Example: G92 E0             motion = new G Code Line ( code Line )  ;              if  ( motion . get X (  )  != -0x FFFFFFFF )  {                 prev Motion . set X ( motion . get X (  )  )  ;              }             if  ( motion . get Y (  )  != -0x FFFFFFFF )  {                 prev Motion . set Y ( motion . get Y (  )  )  ;              }             if  ( motion . get Z (  )  != -0x FFFFFFFF )  {                 prev Motion . set Z ( motion . get Z (  )  )  ;              }             if  ( motion . get E (  )  != -0x FFFFFFFF )  {                 prev Motion . set E ( motion . get E (  )  )  ;              }             break ;          case M82:             // no-op, so long as M83 is not supported .              break ;          case M84:             // no-op             break ;      } //  Raj Log . d ( ""gcode parser parsed line #"" + line Num++ )  ;  } return ret ; }"
6476,"private boolean is Allowed To Dispatch (  Perf Metric perf Metric ) { if  ( !config Resolver . is Performance Monitoring Enabled (  )  )  {     logger . info ( "" Performance collection is not enabled, dropping %s"", get Logcat Msg ( perf Metric )  )  ;      return false ;  } if  ( !perf Metric . get Application Info (  )  . has App Instance Id (  )  )  {     logger . warn ( "" App  Instance ID is null or empty, dropping %s"", get Logcat Msg ( perf Metric )  )  ;      return false ;  } if  ( ! Perf Metric Validator . is Valid ( perf Metric, app Context )  )  {     logger . warn ( "" Unable to process the  Perf Metric  ( %s )  due to missing or invalid values . "" + ""  See earlier log statements for additional information on the specific"" + "" missing/invalid values . "", get Logcat Msg ( perf Metric )  )  ;      return false ;  } if  ( !rate Limiter . check ( perf Metric )  )  {     increment Drop Count ( perf Metric )  ;      if  ( perf Metric . has Trace Metric (  )  )  {         logger . info ( "" Rate  Limited - %s"", get Logcat Msg ( perf Metric . get Trace Metric (  )  )  )  ;      } else if  ( perf Metric . has Network Request Metric (  )  )  {         logger . info ( "" Rate  Limited - %s"", get Logcat Msg ( perf Metric . get Network Request Metric (  )  )  )  ;      }     return false ;  } return true ; }"
6477,protected boolean pre Animate Remove Impl ( final  View Holder holder ) { return true ; }
6478,"public final  Object Id insert (  Tag Builder builder )  throws IO Exception{ return insert (  Constants . OBJ_TAG, builder . build (  )  )  ; }"
6479,"private  Register Spec Set get Starts0 ( int index ) { try {     return block Starts [ index ]  ;  } catch  (  Array Index Out Of Bounds Exception ex )  {     //  Translate the exception .      throw new  Illegal Argument Exception ( ""bogus index"" )  ;  }}"
6480,"private static  String decrypt (  String crypt Algorithm,  String cipher Text,  Key Pair key Pair RSA,  Secret Key secret Key AES, byte [  ]  initialization Vector ) { try {      Cipher cipher = return Cipher ( crypt Algorithm,  Cipher . DECRYPT_MODE, key Pair RSA, secret Key AES, initialization Vector )  ;      byte [  ]  cipher Array =  Base64 . decode ( cipher Text,  Base64 . DEFAULT )  ;      byte [  ]  plain Text = cipher . do Final ( cipher Array )  ;      return new  String ( plain Text )  ;  } catch  (  No Such Algorithm Exception |  No Such Padding Exception |  Invalid Key Exception |  Invalid Algorithm Parameter Exception |  Illegal Block Size Exception |  Bad Padding Exception exception )  {     return null ;  }}"
6481,public final  Iterable<N> depth First Post Order (  Iterable<? extends N> start Nodes ) { final  Immutable Set<N> validated = validate ( start Nodes )  ;  return new  Iterable<N> (  )  {     @ Override     public  Iterator<N> iterator (  )  {         return new Traversal (  )  . post Order ( validated . iterator (  )  )  ;      } } ; }
6482,"static boolean delete Realm ( final  Realm Configuration configuration ) { final  Atomic Boolean realm Deleted = new  Atomic Boolean ( true )  ;  boolean callback Executed =  Os Object Store . call With Lock ( configuration, new  Runnable (  )  {     @ Override     public void run (  )  {          String canonical Path = configuration . get Path (  )  ;           File realm Folder = configuration . get Realm Directory (  )  ;           String realm File Name = configuration . get Realm File Name (  )  ;          realm Deleted . set (  Util . delete Realm ( canonical Path, realm Folder, realm File Name )  )  ;      } } )  ;  if  ( !callback Executed )  {     throw new  Illegal State Exception ( "" It's not allowed to delete the file associated with an open  Realm .  "" + "" Remember to close (  )  all the instances of the  Realm before deleting its file: "" + configuration . get Path (  )  )  ;  } return realm Deleted . get (  )  ; }"
6483,"public short get Range Shift (  ) { double pow2 =  Math . floor (  Math . log ( get Num Tables (  )  )  /  Math . log ( 2 )  )  ;  double max Power =  Math . pow ( 2, pow2 )  ;  return  ( short )   (  ( max Power * 16 )  - get Search Range (  )  )  ; }"
6484,"public com . anychart . core . series .  Rendering Settings rendering (  ) { return new com . anychart . core . series .  Rendering Settings ( js Base + "" . rendering (  ) "" )  ; }"
6485,public static int parse E Ac3 Syncframe Audio Sample Count (  Byte Buffer buffer ) { //  See ETSI TS 102 366 subsection E . 1 . 2 . 2 .  int fscod =  ( buffer . get ( buffer . position (  )  + 4 )  & 0x C0 )  >> 6 ;  return AUDIO_SAMPLES_PER_AUDIO_BLOCK *  ( fscod == 0x03 ? 6 : BLOCKS_PER_SYNCFRAME_BY_NUMBLKSCOD [  ( buffer . get ( buffer . position (  )  + 4 )  & 0x30 )  >> 4 ]  )  ; }
6486,"public  Completable write (  Abstract Message Lite message Lite ) { return  Completable . from Callable (  (  )  -> {     // reads / writes are synchronized per client instance     synchronized  ( this )  {         try  (  File Output Stream output = application . open File Output ( file Name, MODE_PRIVATE )  )  {             output . write ( message Lite . to Byte Array (  )  )  ;              return message Lite ;          }     } } )  ; }"
6487,"public com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Screen Layout Long get Screen Layout Long (  ) { @ Suppress Warnings ( ""deprecation"" )  com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Screen Layout Long result = com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Screen Layout Long . value Of ( screen Layout Long_ )  ;  return result == null ? com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Screen Layout Long . UNRECOGNIZED : result ; }"
6488,"Code Block get Expression During Initialization (  Component Requirement component Requirement,  Class Name requesting Class ) { return get Expression ( component Requirement )  . get Expression During Initialization ( requesting Class )  ; }"
6489,"public static  String word Wrap (  String str, int width,  String delim,  String split ) { return word Wrap ( str, width, delim, split, true )  ; }"
6490,public static  Immutable List< String> get File Extensions (  ) { return  Stream . of (  Archive Format . values (  )  )  . map (  Archive Format::get Extension )  . collect (  Immutable List . to Immutable List (  )  )  ; }
6491,"public void layout Diffing_multiple State Updates In Parallel With Should Update False_mount Content Is Not Remounted (  ) { final  Simple State Update Emulator Spec .  Caller state Updater = new  Simple State Update Emulator Spec .  Caller (  )  ;  final  Array List< Lifecycle Step> operations = new  Array List<> (  )  ;  final  Object first Object For Should Update = new  Object (  )  ;  m Litho View Rule . set Root ( create Root Component With State Updater ( m Litho View Rule . get Context (  ) , first Object For Should Update, operations, state Updater )  )  . set Size Px ( 100, 100 )  . measure (  )  . layout (  )  . attach To Window (  )  ;  assert That ( operations )  . described As ( "" Test setup, there should be an initial mount"" )  . contains Exactly (  Lifecycle Step . ON_MOUNT )  ;  operations . clear (  )  ;  //  Do two state updates sequentially without draining the main thread queue state Updater . increment Async (  )  ;  m Background Layout Looper Rule . run To End Of Tasks Sync (  )  ;  state Updater . increment Async (  )  ;  m Background Layout Looper Rule . run To End Of Tasks Sync (  )  ;  //  Now drain the main thread queue and mount the result  Shadow Looper . idle Main Looper (  )  ;  m Litho View Rule . layout (  )  ;  assert That ( operations )  . is Empty (  )  ; }"
6492,"public void test Directory Is Not Nuked (  )  throws  Exception{  Assert . assert Equals ( 0, m Directory . list Files (  )  . length )  ;  final  Default Disk Storage storage = get Storage Supplier ( 1 )  . get (  )  ;  final  String resource Id = ""file1"" ;  final byte [  ]  CONTENT = ""content"" . get Bytes ( ""UTF-8"" )  ;  // create a file so we know version directory really exists  Disk Storage .  Inserter inserter = storage . insert ( resource Id, null )  ;  write To Resource ( inserter, CONTENT )  ;  inserter . commit ( null )  ;  // assign some previous date to the ""now"" used for file creation long last Modified = m Directory . last Modified (  )  - 1000 ;   Assert . assert True ( m Directory . set Last Modified ( last Modified )  )  ;  // check it was changed  Assert . assert Equals ( last Modified, m Directory . last Modified (  )  )  ;  // create again, it shouldn't delete the directory get Storage Supplier ( 1 )  . get (  )  ;  // m Directory exists .  .  .   Assert . assert True ( m Directory . exists (  )  )  ;  // and it's the same as before  Assert . assert Equals ( last Modified, m Directory . last Modified (  )  )  ; }"
6493,"public com . anychart . core . annotations .  Fibonacci Timezones y Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
6494,public static boolean can Show (  ) { return true ; }
6495,"public final int get File Offset (  ) { if  ( file Offset < 0 )  {     throw new  Runtime Exception ( ""file Offset not set"" )  ;  } return file Offset ; }"
6496,"public void test Tree Props Propagated (  ) { final  Tree Prop Test Result prop A Leaf1 = new  Tree Prop Test Result (  )  ;  final  Tree Prop Test Result prop B Leaf1 = new  Tree Prop Test Result (  )  ;  final  Tree Prop Test Result prob B Leaf2 = new  Tree Prop Test Result (  )  ;  final  Tree Prop Test Result prop A Mount = new  Tree Prop Test Result (  )  ;  final  Tree Prop Number Type tree Prop A = new  Tree Prop Number Type ( 9 )  ;  final  Tree Prop String Type tree Prop B = new  Tree Prop String Type ( ""prop B"" )  ;  final  Tree Prop String Type tree Prop B Changed = new  Tree Prop String Type ( ""prop B_changed"" )  ;   Component component =  Tree Prop Test Parent . create ( m Context )  . prop A ( tree Prop A )  . prop B ( tree Prop B )  . result Prop A Leaf1 ( prop A Leaf1 )  . result Prop B Leaf1 ( prop B Leaf1 )  . result Prop B Leaf2 ( prob B Leaf2 )  . result Prop A Mount ( prop A Mount )  . build (  )  ;   Litho View litho View = new  Litho View ( m Context )  ;  litho View . set Component ( component )  ;  litho View . measure ( make Measure Spec ( 1000, EXACTLY ) , make Measure Spec ( 0, UNSPECIFIED )  )  ;  assert That ( prop A Leaf1 . m Prop )  . is Equal To ( tree Prop A )  ;  //  Tree Prop Test Middle Spec modifies ""prop B"" .  assert That ( prop B Leaf1 . m Prop )  . is Equal To ( tree Prop B Changed )  ;  //  The second  Leaf Spec does not see the modification to ""prop B"" // because its not a descendant of  Middle Spec .  assert That ( prob B Leaf2 . m Prop )  . is Equal To ( tree Prop B )  ;  assert That ( prop A Mount . m Prop )  . is Equal To ( tree Prop A )  ; }"
6497,public void on Stop Tracking Touch (  Seek Bar seek Bar ) {}
6498,"public void for Each Block Depth First ( boolean reverse,  Ssa Basic Block .  Visitor v ) {  Bit Set visited = new  Bit Set ( blocks . size (  )  )  ;  //  We push the parent first, then the child on the stack .   Stack< Ssa Basic Block> stack = new  Stack< Ssa Basic Block> (  )  ;   Ssa Basic Block root Block = reverse ? get Exit Block (  )  : get Entry Block (  )  ;  if  ( root Block == null )  {     // in the case there's no exit block     return ;  } //  Start with null parent .  stack . add ( null )  ;  stack . add ( root Block )  ;  while  ( stack . size (  )  > 0 )  {      Ssa Basic Block cur = stack . pop (  )  ;       Ssa Basic Block parent = stack . pop (  )  ;      if  ( !visited . get ( cur . get Index (  )  )  )  {          Bit Set children = reverse ? cur . get Predecessors (  )  : cur . get Successors (  )  ;          for  ( int i = children . next Set Bit ( 0 )  ;  i >= 0 ;  i = children . next Set Bit ( i + 1 )  )  {             stack . add ( cur )  ;              stack . add ( blocks . get ( i )  )  ;          }         visited . set ( cur . get Index (  )  )  ;          v . visit Block ( cur, parent )  ;      } }}"
6499,"public com . anychart . charts .  Mekko x Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
6500,"public com . anychart . core . axismarkers .  Gantt Text use Html (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . use Html ( %s )  ; "", enabled )  )  ;  return this ; }"
6501,public int get Item Text Resource (  ) { return item Text Resource Id ; }
6502,"public static  Object Animator of Property Values Holder (  Object target,  Property Values Holder .  .  .  values ) {  Object Animator anim = new  Object Animator (  )  ;  anim . m Target = target ;  anim . set Values ( values )  ;  return anim ; }"
6503,"private static int get Or Create Id (  Object type ) { synchronized  ( s Type Id By Component Type )  {     if  ( !s Type Id By Component Type . contains Key ( type )  )  {         s Type Id By Component Type . put ( type, s Component Type Id . increment And Get (  )  )  ;      }     //noinspection  Constant Conditions     return s Type Id By Component Type . get ( type )  ;  }}"
6504,public double mean (  ) { check State ( count != 0 )  ;  return mean ; }
6505,private  Name Space get Non Block Parent (  ) {  Name Space parent = super . get Parent (  )  ;  if  ( parent instanceof  Block Name Space )      return  (  (  Block Name Space )  parent )  . get Non Block Parent (  )  ;  else     return parent ; }
6506,"public void test Unique Index Null Key (  ) {  List< String> one String List =  Lists . new Array List ( ""foo"" )  ;  try {      Maps . unique Index ( one String List,  Functions . constant ( null )  )  ;      fail (  )  ;  } catch  (  Null Pointer Exception expected )  { }}"
6507,public void set Origin ( @ Nullable  Exception exception ) { this . exception = exception ; }
6508,"public static  Event Trigger< Click Event> on Click Event Trigger Trigger (  Component Context c,  String key ) { int method Id = -830639048 ;  return new Event Trigger ( c, key, method Id )  ; }"
6509,"private static  Android Debug Bridge create Adb (  Android Platform Target android Platform Target,  Execution Context context, int adb Timeout )  throws  Interrupted Exception{  Ddm Preferences . set Time Out ( adb Timeout )  ;  try {      Android Debug Bridge . init ( /* client Support */     false )  ;  } catch  (  Illegal State Exception ex )  { // ADB was already initialized, we're fine, so just ignore .  }  String adb Executable = android Platform Target . get Adb Executable (  )  . to String (  )  ;  log . debug ( "" Using %s to create  Android Debug Bridge"", adb Executable )  ;   Android Debug Bridge adb =  Android Debug Bridge . create Bridge ( adb Executable, false )  ;  if  ( adb == null )  {     context . get Console (  )  . print Build Failure ( "" Failed to connect to adb .   Make sure adb server is running . "" )  ;      return null ;  } long start =  System . current Time Millis (  )  ;  while  ( !is Adb Initialized ( adb )  )  {     long time Left = start + ADB_CONNECT_TIMEOUT_MS -  System . current Time Millis (  )  ;      if  ( time Left <= 0 )  {         break ;      }      Thread . sleep ( ADB_CONNECT_TIME_STEP_MS )  ;  } return is Adb Initialized ( adb )  ? adb : null ; }"
6510,"public com . anychart . core . annotations .  Fibonacci Fan bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
6511,"public com . anychart . core . ui .  Paginator margin (  Number space Or Top Or Top And Bottom,  Number right Or Right And Left,  String bottom,  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", space Or Top Or Top And Bottom, right Or Right And Left, wrap Quotes ( bottom ) , left )  )  ;  return this ; }"
6512,public  Complete Builder observes Tables ( @ Non Null  Collection< String> tables ) { if  ( observes Tables == null )  {     observes Tables = new  Hash Set< String> ( tables . size (  )  )  ;  } else {     observes Tables . clear (  )  ;  } observes Tables . add All ( tables )  ;  return this ; }
6513,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
6514,"private boolean is Typed Time Fully Legal (  ) { if  ( m Is24 Hour View )  {     //  For 24-hour mode, the time is legal if the hours and minutes are each legal .   Note:     // get Entered Time (  )  will ONLY call is Typed Time Fully Legal (  )  when NOT in 24hour mode .      int [  ]  values = get Entered Time ( null )  ;      return  ( values [ 0 ]  >= 0 && values [ 1 ]  >= 0 && values [ 1 ]  < 60 )  ;  } else {     // legally added at specific times based on the tree's algorithm .      return  ( m Typed Times . contains ( get Am Or Pm Key Code ( AM )  )  || m Typed Times . contains ( get Am Or Pm Key Code ( PM )  )  )  ;  }}"
6515,"public boolean is Valid Perf Metric (  ) { if  ( !is Valid Application Info (  )  )  {     logger . warn ( "" Application Info is invalid"" )  ;      return false ;  } return true ; }"
6516,"public com . anychart . core . annotations .  Fibonacci Fan z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
6517,public void reset (  ) { reset ( false )  ; }
6518,"protected boolean close ( int code,  Object data, boolean mask )  throws  Exception{ debug ( TAG, ""close, code:"" + code + "",data:"" + data + "",mask:"" + mask )  ;  if  ( code > 0 )  {     if  ( ! Error Codes . is Valid Error Code ( code )  )          throw new  Exception ( ""first argument must be a valid error code number"" )  ;  } code = code > 0 ? code : 1000 ;  ///var data Buffer = new  Buffer ( 2 +  ( data ?  Buffer . byte Length ( data )  : 0 )  )  ;   Byte Buffer data Buffer =  Byte Buffer . allocate ( 2 +  ( data != null ?  Util . chunk Byte Length ( data, ""utf8"" )  : 0 )  )  ;  ///write U Int16 BE . call ( data Buffer, code, 0 )  ;  data Buffer . order (  Byte Order . BIG_ENDIAN )  . put Short ( 0,  ( short )   ( code & 0xffff )  )  ;  // TBD .  .  .  if  ( data Buffer . capacity (  )  > 2 )       Buffer Util . fast Copy ( data Buffer . capacity (  )  - 2,  Util . chunk To Buffer ( data, ""utf8"" ) , data Buffer, 2 )  ;  return this . frame And Send ( 0x8, data Buffer, true, mask, null )  ; }"
6519,"public URL find (  String classname ) {  String cname = classname . replace ( ' . ', '/' )  + "" . class"" ;   Class Loader cl = clref . get (  )  ;  if  ( cl == null )      // not found     return null ;  URL url = cl . get Resource ( cname )  ;  return url ; }"
6520,"public com . anychart . core . axismarkers .  Gantt Text value (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . value ( %s )  ; "", value )  )  ;  return this ; }"
6521,public  String get String ( int index )  throws IO Exception{ return input Stream To String ( get Input Stream ( index )  )  ; }
6522,"public void connect To Device (  String address, boolean secure ) { //  Get the  Bluetooth Device object  Bluetooth Device device = m Bluetooth Adapter . get Remote Device ( address )  ;  //  Attempt to connect to the device m Chat Service . connect ( device, secure )  ; }"
6523,"protected  Class Handler create Class Handler (  Shadow Map shadow Map,  Sandbox sandbox ) { int api Level =  (  (  Android Sandbox )  sandbox )  . get Sdk (  )  . get Api Level (  )  ;   Android Sdk Shadow Matcher shadow Matcher = new  Android Sdk Shadow Matcher ( api Level )  ;  return class Handler Builder . build ( shadow Map, shadow Matcher, get Interceptors (  )  )  ; }"
6524,public  String get Id (  ) { return user Id ; }
6525,"public void save As Pdf (  String paper Size,  Boolean landscape,  Number x,  Number y ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Pdf ( %s, %s, %s, %s )  ; "", wrap Quotes ( paper Size ) , landscape, x, y )  )  ; }"
6526,"public  Data Source< Closeable Reference< Closeable Image>> fetch Decoded Image (  Image Request image Request,  Object caller Context,  Image Request .  Request Level lowest Permitted Request Level On Submit, @ Nullable  Request Listener request Listener, @ Nullable  String ui Component Id ) { try {      Producer< Closeable Reference< Closeable Image>> producer Sequence = m Producer Sequence Factory . get Decoded Image Producer Sequence ( image Request )  ;      return submit Fetch Request ( producer Sequence, image Request, lowest Permitted Request Level On Submit, caller Context, request Listener, ui Component Id )  ;  } catch  (  Exception exception )  {     return  Data Sources . immediate Failed Data Source ( exception )  ;  }}"
6527,"public com . anychart . core . ui .  Chart Scroller allow Range Change (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . allow Range Change ( %s )  ; "", enabled )  )  ;  return this ; }"
6528,public  Ref first Exact Ref (  String .  .  .  refs )  throws IO Exception{ for  (  String name : refs )  {      Ref ref = exact Ref ( name )  ;      if  ( ref != null )  {         return ref ;      } } return null ; }
6529,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
6530,"public void top (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . top (  )  ; "" )  ; }"
6531,public int top (  ) { return get ( size - 1 )  ; }
6532,"public static void create Table (  Database db, boolean if Not Exists ) {  String constraint = if Not Exists ? ""IF NOT EXISTS "" : """" ;  db . exec SQL ( // ""CREATE TABLE "" + constraint + ""\""CUSTOM_TYPE_ENTITY\""  ( "" + // 0: id ""\""_id\"" INTEGER PRIMARY KEY ,"" + // 1: my Custom Timestamp ""\""MY_CUSTOM_TIMESTAMP\"" INTEGER )  ; "" )  ; }"
6533,public void set Bar Width ( float width ) { m Bar Width = width ; }
6534,public  Polygon Options to Polygon Options (  ) {  Polygon Options polygon Options = new  Polygon Options (  )  ;  polygon Options . fill Color ( m Polygon Options . get Fill Color (  )  )  ;  polygon Options . geodesic ( m Polygon Options . is Geodesic (  )  )  ;  polygon Options . stroke Color ( m Polygon Options . get Stroke Color (  )  )  ;  polygon Options . stroke Joint Type ( m Polygon Options . get Stroke Joint Type (  )  )  ;  polygon Options . stroke Pattern ( m Polygon Options . get Stroke Pattern (  )  )  ;  polygon Options . stroke Width ( m Polygon Options . get Stroke Width (  )  )  ;  polygon Options . visible ( m Polygon Options . is Visible (  )  )  ;  polygon Options . z Index ( m Polygon Options . get Z Index (  )  )  ;  polygon Options . clickable ( m Polygon Options . is Clickable (  )  )  ;  return polygon Options ; }
6535,"public static void init Recycler View SV (  Context context,  Recycler View view, boolean is Divided,  Recycler View .  Adapter adapter, int column ) {  Staggered Grid Layout Manager layout Manager = new  Staggered Grid Layout Manager ( column,  Staggered Grid Layout Manager . VERTICAL )  ;  view . set Layout Manager ( layout Manager )  ;  view . set Item Animator ( new  Default Item Animator (  )  )  ;  if  ( is Divided )  {     view . add Item Decoration ( new  Divider Item Decoration ( context,  Divider Item Decoration . VERTICAL_LIST )  )  ;  } view . set Adapter ( adapter )  ; }"
6536,"public com . anychart . core . gantt .  Data Grid Button text Overflow (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Overflow ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
6537,"public com . anychart . core . stock . scrollerseries .  Step Area y Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6538,"public int copy ( int n,  Const Pool dest,  Map< String,  String> classnames ) { if  ( n == 0 )      return 0 ;   Const Info info = get Item ( n )  ;  return info . copy ( this, dest, classnames )  ; }"
6539,public void on Sign In Succeeded (  ) { set Sign In Button Visibility ( false )  ; }
6540,"public  Type as Uninitialized ( int new At ) { if  ( new At < 0 )  {     throw new  Illegal Argument Exception ( ""new At < 0"" )  ;  } if  ( !is Reference (  )  )  {     throw new  Illegal Argument Exception ( ""not a reference type: "" + descriptor )  ;  } if  ( is Uninitialized (  )  )  {     /*          *  Dealing with uninitialized types as a starting point is          * a pain, and it's not clear that it'd ever be used, so          * just disallow it .           */     throw new  Illegal Argument Exception ( ""already uninitialized: "" + descriptor )  ;  } /*      *  Create a new descriptor that is unique and shouldn't conflict      * with ""normal"" type descriptors      */  String new Desc = 'N' +  Hex . u2 ( new At )  + descriptor ;   Type result = new  Type ( new Desc, BT_OBJECT, new At )  ;  result . initialized Type = this ;  return put Intern ( result )  ; }"
6541,public  Api Gateway Response Builder base64 Encoded (  Boolean is Base64 Encoded ) { this . is Base64 Encoded = is Base64 Encoded ;  return this ; }
6542,public boolean filter Set Visibility ( final int visibility ) { if  ( visibility ==  View . VISIBLE )  {     this . m Is Hide = false ;  } if  ( visibility == panel Layout . get Visibility (  )  )  {     return true ;  } //noinspection  Redundant If Statement if  ( is Keyboard Showing (  )  && visibility ==  View . VISIBLE )  {     return true ;  } return false ; }
6543,"public  Rev Commit commit (  Rev Commit .  .  .  parents )  throws  Exception{ return commit ( 1, tree (  ) , parents )  ; }"
6544,public  Volume Control get Volume Control (  ) { return this ; }
6545,public  Request get Request (  ) { return request ; }
6546,public  Log Command all (  )  throws IO Exception{ for  (  Ref ref : get Repository (  )  . get Ref Database (  )  . get Refs (  )  )  {     if  ( !ref . is Peeled (  )  )          ref = get Repository (  )  . get Ref Database (  )  . peel ( ref )  ;       Object Id object Id = ref . get Peeled Object Id (  )  ;      if  ( object Id == null )          object Id = ref . get Object Id (  )  ;       Rev Commit commit = null ;      try {         commit = walk . parse Commit ( object Id )  ;      } catch  (  Missing Object Exception |  Incorrect Object Type Exception e )  {     }     if  ( commit != null )          add ( commit )  ;  } return this ; }
6547,public int get Key (  ) { return  ( usage Index << 8 )  +  ( unit & 0x FF )  ; }
6548,"public void consume (  Parsable Byte Array data )  throws  Parser Exception{ data . read Bytes ( pes Scratch . data, 0, 3 )  ;  pes Scratch . set Position ( 0 )  ;  parse Header (  )  ;  data . read Bytes ( pes Scratch . data, 0, extended Header Length )  ;  pes Scratch . set Position ( 0 )  ;  parse Header Extension (  )  ;  pes Payload Reader . packet Started ( time Us,  Ts Payload Reader . FLAG_DATA_ALIGNMENT_INDICATOR )  ;  pes Payload Reader . consume ( data )  ;  //  We always have complete PES packets with program stream .  pes Payload Reader . packet Finished (  )  ; }"
6549,"public com . anychart . math .  Rect get Pixel Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . get Pixel Bounds (  ) "" )  ; }"
6550,"public com . anychart . charts .  Venn select (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ;  return this ; }"
6551,"public  Dfs Garbage Collector set Reftable Initial Max Update Index ( long u ) { reftable Initial Max Update Index =  Math . max ( 0, u )  ;  return this ; }"
6552,"public com . anychart . core . annotations .  Fibonacci Fan bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
6553,"public com . anychart . core . stock . scrollerseries .  Spline Area bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
6554,"public O Auth Session exchange Code (  String code,  Http Url redirect Url )  throws IO Exception{  Http Url url = base Url . new Builder ( ""oauth . access"" )  . add Query Parameter ( ""client_id"", client Id )  . add Query Parameter ( ""client_secret"", client Secret )  . add Query Parameter ( ""code"", code )  . add Query Parameter ( ""redirect_uri"", redirect Url . to String (  )  )  . build (  )  ;   Request request = new  Request .  Builder (  )  . url ( url )  . build (  )  ;   Call call = http Client . new Call ( request )  ;  try  (  Response response = call . execute (  )  )  {      Json Adapter<O Auth Session> json Adapter = moshi . adapter ( O Auth Session . class )  ;      return json Adapter . from Json ( response . body (  )  . source (  )  )  ;  }}"
6555,"public com . anychart . core .  Series Base unhover (  Number index Or Indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unhover ( %s )  ; "", index Or Indexes )  )  ;  return this ; }"
6556,"public static  Mutable Document new Unknown Document (  Document Key document Key,  Snapshot Version version ) { return new  Mutable Document ( document Key )  . convert To Unknown Document ( version )  ; }"
6557,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
6558,"public com . anychart . core . cartesian . series .  Base With Markers bounds (  String x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
6559,"public void play ( boolean create New Next Track ) { int status = m Audio Manager . request Audio Focus ( m Audio Focus Listener,  Audio Manager . STREAM_MUSIC,  Audio Manager . AUDIOFOCUS_GAIN )  ;  if  ( D )       Log . d ( TAG, "" Starting playback: audio focus request status = "" + status )  ;  if  ( status !=  Audio Manager . AUDIOFOCUS_REQUEST_GRANTED )  {     return ;  } final  Intent intent = new  Intent (  Audio Effect . ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION )  ;  intent . put Extra (  Audio Effect . EXTRA_AUDIO_SESSION, get Audio Session Id (  )  )  ;  intent . put Extra (  Audio Effect . EXTRA_PACKAGE_NAME, get Package Name (  )  )  ;  send Broadcast ( intent )  ;  m Audio Manager . register Media Button Event Receiver ( new  Component Name ( get Package Name (  ) ,  Media Button Intent Receiver . class . get Name (  )  )  )  ;  if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . LOLLIPOP )      m Session . set Active ( true )  ;  if  ( create New Next Track )  {     //重新产生m Next Play Pos     set Next Track (  )  ;  } else {     //不重新产生m Next Play Pos     set Next Track ( m Next Play Pos )  ;  } if  ( m Player . is Initialized (  )  )  {     final long duration = m Player . duration (  )  ;      if  ( m Repeat Mode != REPEAT_CURRENT && duration > 2000 && m Player . position (  )  >= duration - 2000 )  {         goto Next ( true )  ;      }     m Player . start (  )  ;      m Player Handler . remove Messages ( FADEDOWN )  ;      //组件调到正常音量     m Player Handler . send Empty Message ( FADEUP )  ;      set Is Supposed To Be Playing ( true, true )  ;      cancel Shutdown (  )  ;      update Notification (  )  ;      notify Change ( META_CHANGED )  ;  } else if  ( m Playlist . size (  )  <= 0 )  {     set Shuffle Mode ( SHUFFLE_AUTO )  ;  }}"
6560,public boolean get Credential Flag (  ) { return credential Flag ; }
6561,"public void select Marquee Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . select Marquee Fill (  )  ; "" )  ; }"
6562,"public void set Terminal ID (  String terminal ID ) { this . terminal ID = terminal ID ;  if  ( terminal ID . equals ( ""scoansi"" )  )  {      Function Key [ 1 ]  = "" [ M"" ;       Function Key [ 2 ]  = "" [ N"" ;       Function Key [ 3 ]  = "" [ O"" ;       Function Key [ 4 ]  = "" [ P"" ;       Function Key [ 5 ]  = "" [ Q"" ;       Function Key [ 6 ]  = "" [ R"" ;       Function Key [ 7 ]  = "" [ S"" ;       Function Key [ 8 ]  = "" [ T"" ;       Function Key [ 9 ]  = "" [ U"" ;       Function Key [ 10 ]  = "" [ V"" ;       Function Key [ 11 ]  = "" [ W"" ;       Function Key [ 12 ]  = "" [ X"" ;       Function Key [ 13 ]  = "" [ Y"" ;       Function Key [ 14 ]  = ""?"" ;       Function Key [ 15 ]  = "" [ a"" ;       Function Key [ 16 ]  = "" [ b"" ;       Function Key [ 17 ]  = "" [ c"" ;       Function Key [ 18 ]  = "" [ d"" ;       Function Key [ 19 ]  = "" [ e"" ;       Function Key [ 20 ]  = "" [ f"" ;       Prev Scn [ 0 ]  =  Prev Scn [ 1 ]  =  Prev Scn [ 2 ]  =  Prev Scn [ 3 ]  = "" [ I"" ;       Next Scn [ 0 ]  =  Next Scn [ 1 ]  =  Next Scn [ 2 ]  =  Next Scn [ 3 ]  = "" [ G"" ;  // more theoretically .  }}"
6563,"public com . anychart . charts .  Sunburst interactivity (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . interactivity ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6564,"public com . anychart . charts .  Tree Map bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
6565,"public void sort (  Rev Sort s, boolean use ) { assert Not Started (  )  ;  if  ( use )      sorting . add ( s )  ;  else     sorting . remove ( s )  ;  if  ( sorting . size (  )  > 1 )      sorting . remove (  Rev Sort . NONE )  ;  else if  ( sorting . is Empty (  )  )      sorting . add (  Rev Sort . NONE )  ; }"
6566,"public  Realm get Realm (  ) { base Realm . check If Valid (  )  ;  if  ( ! ( base Realm instanceof  Realm )  )  {     throw new  Illegal State Exception ( "" This method is only available for typed  Realms"" )  ;  } return  (  Realm )  base Realm ; }"
6567,public  String get Database Name (  ) { return m Name ; }
6568,"public com . anychart . core . stock . scrollerseries .  Spline Area max Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", width )  )  ;  return this ; }"
6569,"public void hide Progress (  ) { m Search Progress . set Visibility (  View . GONE )  ;  m Left Action . set Alpha ( 0 . 0f )  ;  m Left Action . set Visibility (  View . VISIBLE )  ;   Object Animator . of Float ( m Left Action, ""alpha"", 0 . 0f, 1 . 0f )  . start (  )  ; }"
6570,public void test Weekly No Update (  ) {  Date date = new  Date (  System . current Time Millis (  )  -  ( 5 * DAY_IN_MILLISECONDS )  )  ;  boolean should Update =  Update Policy . WEEKLY . should Update ( date )  ;  assert False ( should Update )  ; }
6571,"Immutable Map< Path,  Path> public Header Map Entries (  ) { return  Immutable Map . of (  )  ; }"
6572,private boolean journal Rebuild Required (  ) { final int redundant Op Compact Threshold = 2000 ;  return // redundant Op Count >= redundant Op Compact Threshold && redundant Op Count >= lru Entries . size (  )  ; }
6573,"private void assert Contains (  Mutable Document expected ) {  Document actual = local Store . read Document ( expected . get Key (  )  )  ;  assert Equals ( expected, actual )  ; }"
6574,"protected final  Register Spec insert Move Before (  Ssa Insn insn,  Register Spec reg ) {  Ssa Basic Block block = insn . get Block (  )  ;   Array List< Ssa Insn> insns = block . get Insns (  )  ;  int insn Index = insns . index Of ( insn )  ;  if  ( insn Index < 0 )  {     throw new  Illegal Argument Exception ( ""specified insn is not in this block"" )  ;  } if  ( insn Index != insns . size (  )  - 1 )  {     /*          *  Presently, the interference updater only works when          * adding before the last insn, and the last insn must have no          * result          */     throw new  Illegal Argument Exception ( "" Adding move here not supported:"" + insn . to Human (  )  )  ;  } /*      *  Get new register and make new move instruction .       */ //  The new result must not have an associated local variable .   Register Spec new Reg Spec =  Register Spec . make ( ssa Meth . make New Ssa Reg (  ) , reg . get Type Bearer (  )  )  ;   Ssa Insn to Add =  Ssa Insn . make From Rop ( new  Plain Insn (  Rops . op Move ( new Reg Spec . get Type (  )  ) ,  Source Position . NO_INFO, new Reg Spec,  Register Spec List . make ( reg )  ) , block )  ;  insns . add ( insn Index, to Add )  ;  int new Reg = new Reg Spec . get Reg (  )  ;  /*      *  Adjust interference graph based on what's live out of the current      * block and what's used by the final instruction .       */  Int Set live Out = block . get Live Out Regs (  )  ;   Int Iterator live Out Iter = live Out . iterator (  )  ;  while  ( live Out Iter . has Next (  )  )  {     interference . add ( new Reg, live Out Iter . next (  )  )  ;  } //  Everything that's a source in the last insn interferes .   Register Spec List sources = insn . get Sources (  )  ;  int sz Sources = sources . size (  )  ;  for  ( int i = 0 ;  i < sz Sources ;  i++ )  {     interference . add ( new Reg, sources . get ( i )  . get Reg (  )  )  ;  } ssa Meth . on Insns Changed (  )  ;  return new Reg Spec ; }"
6575,"public static void set Properties (  Interpretation Context ic,  Properties props,  Scope scope ) { switch ( scope )  {     case LOCAL:         ic . add Substitution Properties ( props )  ;          break ;      case CONTEXT:          Context Util cu = new  Context Util ( ic . get Context (  )  )  ;          cu . add Properties ( props )  ;          break ;      case SYSTEM:          Option Helper . set System Properties ( ic, props )  ;  }}"
6576,"public V call In Tx No Exception (  Callable<V> callable ) { db . begin Transaction (  )  ;  try {     V result ;      try {         result = callable . call (  )  ;      } catch  (  Exception e )  {         throw new  Dao Exception ( "" Callable failed"", e )  ;      }     db . set Transaction Successful (  )  ;      return result ;  } finally {     db . end Transaction (  )  ;  }}"
6577,"public static void init ( boolean use Ref Counting, boolean logging ) {  Bullet . use Ref Counting = use Ref Counting ;   Bullet . enable Logging = logging ;  new  Shared Library Loader (  )  . load ( ""gdx-bullet"" )  ;  final int version =  Linear Math . bt Get Version (  )  ;  if  ( version != VERSION )      throw new  Gdx Runtime Exception ( "" Bullet binaries version  ( "" + version + "" )  does not match source version  ( "" + VERSION + "" ) "" )  ; }"
6578,"public com . anychart . core . cartesian . series .  Base falling Hatch Fill ( com . anychart . graphics . vector . hatchfill .  Hatch Fill Type type,  String color,  Number thickness,  Number size ) { return new com . anychart . core . cartesian . series .  Base (  String . format (  Locale . US, js Base + "" . falling Hatch Fill ( %s, %s, %s, %s ) "",  ( type != null )  ? type . get Js Base (  )  : null, wrap Quotes ( color ) , thickness, size )  )  ; }"
6579,boolean is Does Not Affect Abi (  ) { return false ; }
6580,"private void bind Caller Data ( SQ Lite Statement stmt,  Stack Trace Element [  ]  caller Data Array )  throws SQL Exception{ if  ( caller Data Array != null && caller Data Array . length > 0 )  {      Stack Trace Element caller Data = caller Data Array [ 0 ]  ;      if  ( caller Data != null )  {         bind String ( stmt, CALLER_FILENAME_INDEX, caller Data . get File Name (  )  )  ;          bind String ( stmt, CALLER_CLASS_INDEX, caller Data . get Class Name (  )  )  ;          bind String ( stmt, CALLER_METHOD_INDEX, caller Data . get Method Name (  )  )  ;          bind String ( stmt, CALLER_LINE_INDEX,  Integer . to String ( caller Data . get Line Number (  )  )  )  ;      } }}"
6581,public  String get Api Key (  ) { return api Key ; }
6582,public void set Avoid First Last Clipping ( boolean enabled ) { m Avoid First Last Clipping = enabled ; }
6583,public  String get Broker Signature (  ) { return com . microsoft . identity . common . adal . internal .  Authentication Settings . INSTANCE . get Broker Signature (  )  ; }
6584,public static boolean is On Foreground (  ) { return  Qiscus Core . is On Foreground (  )  ; }
6585,boolean has Receiver For Intent (  Intent intent ) { synchronized  ( registered Receivers )  {     for  (  Wrapper wrapper : registered Receivers )  {         if  ( wrapper . intent Filter . match Action ( intent . get Action (  )  )  )  {             return true ;          }     } } return false ; }
6586,public  Mail find Mail ( int id ) { if  ( items == null )  {     return null ;  } for  (  Mail m : items )  {     if  ( m . get Id (  )  == id )  {         return m ;      } } return null ; }
6587,protected int [  ]  get Context Hub Handles (  ) { int [  ]  handles = new int [ context Hub Info List . size (  )  ]  ;  for  ( int i = 0 ;  i < handles . length ;  i++ )  {     handles [ i ]  = i ;  } return handles ; }
6588,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
6589,"public  Input Stream open Latest File (  Context context,  String filename ) { return  Package Files Util . open Latest Input File ( context, filename )  ; }"
6590,private void on Scrolled Changed Callback (  ) {}
6591,public void on Request Event Beat (  ) { m Event Dispatcher . dispatch All Events (  )  ; }
6592,Ftp Channel get Ftp Channel (  ) { return null ; }
6593,"public void annotation (  String type, int num Member Value Pairs )  throws IO Exception{ annotation ( pool . add Utf8 Info ( type ) , num Member Value Pairs )  ; }"
6594,"public  Config Set Builder add External Test Runner (  ) { ensure Section ( ""test"" )  ;  config Set . get ( ""test"" )  . put ( ""external_runner"", ""python simple_test_runner . py"" )  ;  return this ; }"
6595,public int get Worker Size Value (  ) { return worker Size_ ; }
6596,public void set Enabled Input Method Info List (  List< Input Method Info> input Method Info List ) { this . input Method Info List = input Method Info List ; }
6597,public  Api Gateway Response Builder body ( T body ) { this . body = body ;  return this ; }
6598,"protected void add Constructor (  ) {  Method Spec .  Builder constructor =  Method Spec . constructor Builder (  )  . add Modifiers ( PRIVATE )  ;  component Implementation . creator Component Fields (  )  . for Each (  field -> {     field Names . claim ( field . name )  ;      class Builder . add Field ( field )  ;      constructor . add Parameter ( field . type, field . name )  ;      constructor . add Statement ( ""this . $1 N = $1 N"", field )  ;  } )  ;  class Builder . add Method ( constructor . build (  )  )  ; }"
6599,"private  Runner Builder create Runner Builder (  ) { J Unit4 Builder j Unit4 Runner Builder = new J Unit4 Builder (  )  {     @ Override     public  Runner runner For Class (  Class<?> test Class )  throws  Throwable {         return new  Buck Block J Unit4 Class Runner ( test Class, default Test Timeout Millis )  ;      } } ;  return new  All Default Possibilities Builder ( /* can Use Suite Method */ true )  {     @ Override     protected J Unit4 Builder junit4 Builder (  )  {         return j Unit4 Runner Builder ;      }     @ Override     protected  Annotated Builder annotated Builder (  )  {         // to do test selecting properly .          if  ( default Test Timeout Millis <= 0 || is Dry Run || !test Selector List . is Empty (  )  )  {             return super . annotated Builder (  )  ;          }         return new  Annotated Builder ( this )  {             @ Override             public  Runner build Runner (  Class<? extends  Runner> runner Class,  Class<?> test Class )  throws  Exception {                  Runner original Runner = super . build Runner ( runner Class, test Class )  ;                  return new  Delegate Runner With Timeout ( original Runner, default Test Timeout Millis )  ;              }         } ;      } } ; }"
6600,public boolean is Set ( _ Fields field ) { if  ( field == null )  {     throw new java . lang .  Illegal Argument Exception (  )  ;  } switch ( field )  {     case WAS_SUCCESSFUL:         return is Set Was Successful (  )  ;      case ERROR_MESSAGE:         return is Set Error Message (  )  ;      case TYPE:         return is Set Type (  )  ;      case DIAGNOSTIC_SERVER_INFO:         return is Set Diagnostic Server Info (  )  ;      case PAYLOADS:         return is Set Payloads (  )  ;      case FETCH_RESPONSE:         return is Set Fetch Response (  )  ;      case STORE_RESPONSE:         return is Set Store Response (  )  ;      case MULTI_FETCH_RESPONSE:         return is Set Multi Fetch Response (  )  ;      case DELETE_RESPONSE:         return is Set Delete Response (  )  ;      case MULTI_CONTAINS_RESPONSE:         return is Set Multi Contains Response (  )  ;      case MANIFEST_APPEND_RESPONSE:         return is Set Manifest Append Response (  )  ;      case MANIFEST_FETCH_RESPONSE:         return is Set Manifest Fetch Response (  )  ;      case MANIFEST_DELETE_RESPONSE:         return is Set Manifest Delete Response (  )  ;      case MANIFEST_SET_RESPONSE:         return is Set Manifest Set Response (  )  ;  } throw new java . lang .  Illegal State Exception (  )  ; }
6601,"public com . anychart . charts .  Mekko bounds (  Number x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
6602,"public com . anychart . charts .  Sparkline last Markers (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . last Markers ( %s )  ; "", settings )  )  ;  return this ; }"
6603,"private boolean scrub Incrementally ( long position Change ) { if  ( duration <= 0 )  {     return false ;  } long previous Position = scrubbing ? scrub Position : position ;  long scrub Position =  Util . constrain Value ( previous Position + position Change, 0, duration )  ;  if  ( scrub Position == previous Position )  {     return false ;  } if  ( !scrubbing )  {     start Scrubbing ( scrub Position )  ;  } else {     update Scrubbing ( scrub Position )  ;  } update (  )  ;  return true ; }"
6604,"public  Collection< String> call (  )  throws  Invalid Configuration Exception,  No Head Exception,  Concurrent Ref Update Exception,  Checkout Conflict Exception,  Invalid Merge Heads Exception,  Wrong Repository State Exception,  No Message Exception,  No Head Exception,  Ref Not Found Exception,  Git API Exception{ check Callable (  )  ;  try  (  Submodule Walk generator =  Submodule Walk . for Index ( repo )  )  {     if  ( !paths . is Empty (  )  )          generator . set Filter (  Path Filter Group . create From Strings ( paths )  )  ;       List< String> updated = new  Array List<> (  )  ;      while  ( generator . next (  )  )  {         //  Skip submodules not registered in  . gitmodules file         if  ( generator . get Modules Path (  )  == null )              continue ;          //  Skip submodules not registered in parent repository's config          String url = generator . get Config Url (  )  ;          if  ( url == null )              continue ;          try  (  Repository submodule Repo = get Or Clone Submodule ( generator, url )  ;               Rev Walk walk = new  Rev Walk ( submodule Repo )  )  {              Rev Commit commit = walk . parse Commit ( generator . get Object Id (  )  )  ;               String update = generator . get Config Update (  )  ;              if  (  Config Constants . CONFIG_KEY_MERGE . equals ( update )  )  {                  Merge Command merge = new  Merge Command ( submodule Repo )  ;                  merge . include ( commit )  ;                  merge . set Progress Monitor ( monitor )  ;                  merge . set Strategy ( strategy )  ;                  merge . call (  )  ;              } else if  (  Config Constants . CONFIG_KEY_REBASE . equals ( update )  )  {                  Rebase Command rebase = new  Rebase Command ( submodule Repo )  ;                  rebase . set Upstream ( commit )  ;                  rebase . set Progress Monitor ( monitor )  ;                  rebase . set Strategy ( strategy )  ;                  rebase . call (  )  ;              } else {                 //  Checkout commit referenced in parent repository's                 // index as a detached HEAD                  Dir Cache Checkout co = new  Dir Cache Checkout ( submodule Repo, submodule Repo . lock Dir Cache (  ) , commit . get Tree (  )  )  ;                  co . set Fail On Conflict ( true )  ;                  co . set Progress Monitor ( monitor )  ;                  co . checkout (  )  ;                   Ref Update ref Update = submodule Repo . update Ref (  Constants . HEAD, true )  ;                  ref Update . set New Object Id ( commit )  ;                  ref Update . force Update (  )  ;                  if  ( callback != null )  {                     callback . checking Out ( commit, generator . get Path (  )  )  ;                  }             }         }         updated . add ( generator . get Path (  )  )  ;      }     return updated ;  } catch  ( IO Exception e )  {     throw new J Git Internal Exception ( e . get Message (  ) , e )  ;  } catch  (  Config Invalid Exception e )  {     throw new  Invalid Configuration Exception ( e . get Message (  ) , e )  ;  }}"
6605,"public static void stream Output From Reader (  Reader reader,  Idb Result Callback result Callback ) { try {      Mapping Iterator< Immutable Map< String,  Object>> it =  Object Mappers . READER . for Type ( new  Type Reference< Immutable Map< String,  Object>> (  )  {     } )  . read Values ( reader )  ;      while  ( it . has Next (  )  )  {          Immutable Map< String,  Object> element ;          try {             element = it . next (  )  ;          } catch  (  Runtime Json Mapping Exception e )  {             LOG . warn ( e, "" Couldn't parse JSON object from idb"" )  ;              continue ;          }         LOG . debug ( "" Parsing the idb output %s"", element )  ;          result Callback . handle Test Result (  Object Mappers . convert Value ( element,  Immutable Idb Test Result . class )  )  ;      }     result Callback . handle End Of Tests (  )  ;  } catch  ( IO Exception e )  {     LOG . warn ( e, "" Couldn't parse idb JSON stream"" )  ;  }}"
6606,public static _ Fields find By Thrift Id ( int field Id ) { switch ( field Id )  {     case // MANIFEST     1:         return MANIFEST ;      default:         return null ;  }}
6607,"public com . anychart . core . stock . scrollerseries .  Base rising Fill (  String color,  Number opacity ) { return new com . anychart . core . stock . scrollerseries .  Base (  String . format (  Locale . US, js Base + "" . rising Fill ( %s, %s ) "", wrap Quotes ( color ) , opacity )  )  ; }"
6608,"protected void resolve Normal Video Show (  View old F,  View Group vp, GSY Video Player gsy Video Player ) { super . resolve Normal Video Show ( old F, vp, gsy Video Player )  ;  if  ( gsy Video Player != null )  {      Sample Control Video sample Video =  (  Sample Control Video )  gsy Video Player ;      m Source Position = sample Video . m Source Position ;      m Type = sample Video . m Type ;      m Transform Size = sample Video . m Transform Size ;      resolve Type UI (  )  ;  }}"
6609,"public  Bit Array get Row ( int y,  Bit Array row ) { if  ( row == null || row . get Size (  )  < width )  {     row = new  Bit Array ( width )  ;  } else {     row . clear (  )  ;  } int offset = y * row Size ;  for  ( int x = 0 ;  x < row Size ;  x++ )  {     row . set Bulk ( x * 32, bits [ offset + x ]  )  ;  } return row ; }"
6610,"private static int gallop Left (  Comparable< Object> key,  Object [  ]  a, int base, int len, int hint ) { if  ( DEBUG )      assert len > 0 && hint >= 0 && hint < len ;  int last Ofs = 0 ;  int ofs = 1 ;  if  ( key . compare To ( a [ base + hint ]  )  > 0 )  {     //  Gallop right until a [ base+hint+last Ofs ]  < key <= a [ base+hint+ofs ]      int max Ofs = len - hint ;      while  ( ofs < max Ofs && key . compare To ( a [ base + hint + ofs ]  )  > 0 )  {         last Ofs = ofs ;          ofs =  ( ofs << 1 )  + 1 ;          if  ( // int overflow         ofs <= 0 )              ofs = max Ofs ;      }     if  ( ofs > max Ofs )          ofs = max Ofs ;      //  Make offsets relative to base     last Ofs += hint ;      ofs += hint ;  } else {     // key <= a [ base + hint ]      //  Gallop left until a [ base+hint-ofs ]  < key <= a [ base+hint-last Ofs ]      final int max Ofs = hint + 1 ;      while  ( ofs < max Ofs && key . compare To ( a [ base + hint - ofs ]  )  <= 0 )  {         last Ofs = ofs ;          ofs =  ( ofs << 1 )  + 1 ;          if  ( // int overflow         ofs <= 0 )              ofs = max Ofs ;      }     if  ( ofs > max Ofs )          ofs = max Ofs ;      //  Make offsets relative to base     int tmp = last Ofs ;      last Ofs = hint - ofs ;      ofs = hint - tmp ;  } if  ( DEBUG )      assert -1 <= last Ofs && last Ofs < ofs && ofs <= len ;  /*		 *  Now a [ base+last Ofs ]  < key <= a [ base+ofs ] , so key belongs somewhere to the right of last Ofs but no farther right than ofs . 		 *  Do a binary search, with invariant a [ base + last Ofs - 1 ]  < key <= a [ base + ofs ]  . 		 */ last Ofs++ ;  while  ( last Ofs < ofs )  {     int m = last Ofs +  (  ( ofs - last Ofs )  >>> 1 )  ;      if  ( key . compare To ( a [ base + m ]  )  > 0 )          // a [ base + m ]  < key         last Ofs = m + 1 ;      else         // key <= a [ base + m ]          ofs = m ;  } // so a [ base + ofs - 1 ]  < key <= a [ base + ofs ]  if  ( DEBUG )      assert last Ofs == ofs ;  return ofs ; }"
6611,"static  Http Response execute ( final  Http Client client, final  Http Host target, final  Http Request request, final  Http Context context, final  Timer timer, final  Transport Manager transport Manager )  throws IO Exception{  Http Response response = null ;   Network Request Metric Builder builder =  Network Request Metric Builder . builder ( transport Manager )  ;  try {     builder . set Url ( target . to URI (  )  + request . get Request Line (  )  . get Uri (  )  )  . set Http Method ( request . get Request Line (  )  . get Method (  )  )  ;       Long request Content Length =  Network Request Metric Builder Util . get Apache Http Message Content Length ( request )  ;      if  ( request Content Length != null )  {         builder . set Request Payload Bytes ( request Content Length )  ;      }     //  Execute network  Request     timer . reset (  )  ;      builder . set Request Start Time Micros ( timer . get Micros (  )  )  ;      response = client . execute ( target, request, context )  ;      builder . set Time To Response Completed Micros ( timer . get Duration Micros (  )  )  ;      builder . set Http Response Code ( response . get Status Line (  )  . get Status Code (  )  )  ;       Long response Content Length =  Network Request Metric Builder Util . get Apache Http Message Content Length ( response )  ;      if  ( response Content Length != null )  {         builder . set Response Payload Bytes ( response Content Length )  ;      }      String content Type =  Network Request Metric Builder Util . get Apache Http Response Content Type ( response )  ;      if  ( content Type != null )  {         builder . set Response Content Type ( content Type )  ;      }     builder . build (  )  ;  } catch  ( IO Exception e )  {     builder . set Time To Response Completed Micros ( timer . get Duration Micros (  )  )  ;       Network Request Metric Builder Util . log Error ( builder )  ;      throw e ;  } return response ; }"
6612,"public static  Array List< Output OOB Action> parse Output Actions From Bit Mask ( final int output Action ) { final  Output OOB Action [  ]  output Actions = { BLINK, BEEP, VIBRATE, OUTPUT_NUMERIC, OUTPUT_ALPHA_NUMERIC } ;  final  Array List< Output OOB Action> supported Action Values = new  Array List<> (  )  ;  for  (  Output OOB Action action : output Actions )  {     if  (  ( output Action & action . output OOB Action )  == action . output OOB Action )  {         supported Action Values . add ( action )  ;           Log . v ( TAG, "" Supported output oob action type: "" + get Output OOB Action Description ( action )  )  ;      } } return supported Action Values ; }"
6613,public  Builder max Cache Size ( long max Size ) { this . disk Usage = new  Total Size Lru Disk Usage ( max Size )  ;  return this ; }
6614,public static  Firebase Ml Logger get Instance (  ) { return  Firebase App . get Instance (  )  . get (  Firebase Ml Logger . class )  ; }
6615,"public boolean is Modified (  Dir Cache Entry entry, boolean force Content Check,  Object Reader reader )  throws IO Exception{ if  ( entry == null )      return ! File Mode . MISSING . equals ( get Entry File Mode (  )  )  ;   Metadata Diff diff = compare Metadata ( entry )  ;  switch ( diff )  {     case DIFFER_BY_TIMESTAMP:         if  ( force Content Check )  {             // tell us about modification             return content Check ( entry, reader )  ;          }         //  We are told to assume a modification if timestamps differs         return true ;      case SMUDGED:         //  Lets do a content check         return content Check ( entry, reader )  ;      case EQUAL:         if  ( mode ==  File Mode . SYMLINK . get Bits (  )  )  {             return content Check ( entry, reader )  ;          }         return false ;      case DIFFER_BY_METADATA:         if  ( mode ==  File Mode . TREE . get Bits (  )  && entry . get File Mode (  )  . equals (  File Mode . GITLINK )  )  {             byte [  ]  id Buffer = id Buffer (  )  ;              int id Offset = id Offset (  )  ;              if  ( entry . get Object Id (  )  . compare To ( id Buffer, id Offset )  == 0 )  {                 return true ;              } else if  (  Object Id . zero Id (  )  . compare To ( id Buffer, id Offset )  == 0 )  {                  Path p = repository . get Work Tree (  )  . to Path (  )  . resolve ( entry . get Path String (  )  )  ;                  return  File Utils . has Files ( p )  ;              }             return false ;          } else if  ( mode ==  File Mode . SYMLINK . get Bits (  )  )              return content Check ( entry, reader )  ;          return true ;      default:         throw new  Illegal State Exception (  Message Format . format ( J Git Text . get (  )  . unexpected Compare Result, diff . name (  )  )  )  ;  }}"
6616,"public com . anychart . core . annotations .  Trend Channel z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
6617,"public static  Typeface ostrich Light (  Context context ) { return  Font Source Processor . process ( R . raw . ostrich_light, context )  ; }"
6618,public void test Version Code Policy Null (  ) {  Alert Dialog Notification notification = new  Alert Dialog Notification (  )  ;   Persistent Notification persistent Notification = new  Persistent Notification ( notification )  ;  boolean has To Be Shown = persistent Notification . has To Be Shown ( 1 )  ;  assert True ( has To Be Shown )  ; }
6619,"public void thread Assert Same (  Object x,  Object y ) { try {     assert Same ( x, y )  ;  } catch  (  Assertion Failed Error t )  {     thread Record Failure ( t )  ;      throw t ;  }}"
6620,"public com . anychart . core . stock . scrollerseries . OHLC falling Stroke (  String value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( value ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
6621,"public static boolean reboot2 Recovery (  ) {  Shell Utils .  Command Result result =  Shell Utils . exec Cmd ( ""reboot recovery"", true )  ;  return result . result == 0 ; }"
6622,public static  Nav Hidden value Of ( int value ) { return for Number ( value )  ; }
6623,"protected  Format get Output Format (  ) { return  Format . create Audio Sample Format ( null,  Mime Types . AUDIO_RAW, null,  Format . NO_VALUE,  Format . NO_VALUE, input Format . channel Count, input Format . sample Rate, C . ENCODING_PCM_16 BIT, null, null, 0, null )  ; }"
6624,"public  Completable as Rx Completable (  ) { return  Rx Java Utils . create Completable ( stor IOSQ Lite, this )  ; }"
6625,public void set Id3v1 Save Year ( boolean id3v1 Save Year ) { this . id3v1 Save Year = id3v1 Save Year ; }
6626,public int get Category (  ) { return type . get Type (  )  . get Category (  )  ; }
6627,"private static  Drawable create Arrow Icon (  Context context, int width, int height, int color,  Expand Direction expand Direction ) {  Bitmap canvas Bitmap =  Bitmap . create Bitmap ( width, height,  Bitmap .  Config . ARGB_8888 )  ;   Canvas canvas = new  Canvas ( canvas Bitmap )  ;   Paint paint = new  Paint (  )  ;  paint . set Style (  Paint .  Style . FILL_AND_STROKE )  ;  paint . set Stroke Width ( 1 )  ;  paint . set Color ( color )  ;  paint . set Anti Alias ( true )  ;   Path path = new  Path (  )  ;  path . set Fill Type (  Path .  Fill Type . EVEN_ODD )  ;  switch ( expand Direction )  {     case UP:         path . move To ( 0,  ( height / 3 )  * 2 )  ;          path . line To ( width,  ( height / 3 )  * 2 )  ;          path . line To ( width / 2, height / 3 )  ;          path . line To ( 0,  ( height / 3 )  * 2 )  ;          break ;      case DOWN:         path . move To ( 0, height / 3 )  ;          path . line To ( width, height / 3 )  ;          path . line To ( width / 2,  ( height / 3 )  * 2 )  ;          path . line To ( 0, height / 3 )  ;          break ;  } path . close (  )  ;  canvas . draw Path ( path, paint )  ;  return new  Bitmap Drawable ( context . get Resources (  ) , canvas Bitmap )  ; }"
6628,"public static  File Snapshot save ( long modified ) { final  Instant read =  Instant . now (  )  ;  return new  File Snapshot ( read,  Instant . of Epoch Milli ( modified ) , UNKNOWN_SIZE, FALLBACK_TIMESTAMP_RESOLUTION, MISSING_FILEKEY )  ; }"
6629,"public com . anychart . core .  Separate Chart a11y (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . a11y ( %s )  ; "", settings )  )  ;  return this ; }"
6630,"public void add Intent Filter For Service (  Component Name component Name,  Intent Filter filter )  throws  Name Not Found Exception{ add Intent Filter For Component ( component Name, filter, service Filters )  ; }"
6631,"public  Object Repository<T> get Repository (  String key,  Class<T> type ) { if  ( store != null )  {      String name = find Object Store Name ( key, type )  ;       Nitrite Map< Nitrite Id,  Document> map Store = store . open Map ( name )  ;       Nitrite Collection collection =  Collection Factory . open ( map Store, context )  ;       Object Repository<T> repository =  Repository Factory . open ( type, collection, context )  ;      context . get Repository Registry (  )  . put ( name, type )  ;      return repository ;  } else {     log . error ( "" Underlying store is null .   Nitrite has not been initialized properly . "" )  ;  } return null ; }"
6632,"public void max Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Width (  )  ; "" )  ; }"
6633,public void key Pressed (  Key Event e ) { switch ( e . get Key Code (  )  )  {     case  Key Event . VK_BACK_SPACE:     case  Key Event . VK_ENTER:     case  Key Event . VK_DELETE:     case  Key Event . VK_TAB:         e . consume (  )  ;          break ;  }}
6634,"protected void on Decoder Initialized (  String name, long initialized Timestamp Ms, long initialization Duration Ms ) { event Dispatcher . decoder Initialized ( name, initialized Timestamp Ms, initialization Duration Ms )  ; }"
6635,public int get Port (  ) { return port ; }
6636,public  Glide Request< Transcode Type> optional Center Inside (  ) { return  (  Glide Request< Transcode Type> )  super . optional Center Inside (  )  ; }
6637,public void set Skip Mounting If Not Visible ( boolean skip Mounting If Not Visible ) { assert Main Thread (  )  ;  m Skip Mounting If Not Visible = skip Mounting If Not Visible ; }
6638,public  Iterator< Map Object> iterator (  ) { return objects . iterator (  )  ; }
6639,"public void set Buf ( byte [  ]  yuv Image, int width, int pad, int height, int subsamp ) { if  ( yuv Image == null || width < 1 || pad < 1 ||  (  ( pad &  ( pad - 1 )  )  != 0 )  || height < 1 || subsamp < 0 || subsamp >= TJ . NUMSAMP )      throw new  Illegal Argument Exception ( "" Invalid argument in YUV Image::set Buf (  ) "" )  ;  if  ( yuv Image . length < TJ . buf Size YUV ( width, pad, height, subsamp )  )      throw new  Illegal Argument Exception ( ""YUV image buffer is not large enough"" )  ;  int nc =  ( subsamp == TJ . SAMP_GRAY ? 1 : 3 )  ;  byte [  ]  [  ]  planes = new byte [ nc ]  [  ]  ;  int [  ]  strides = new int [ nc ]  ;  int [  ]  offsets = new int [ nc ]  ;  planes [ 0 ]  = yuv Image ;  strides [ 0 ]  = PAD ( TJ . plane Width ( 0, width, subsamp ) , pad )  ;  if  ( subsamp != TJ . SAMP_GRAY )  {     strides [ 1 ]  = strides [ 2 ]  = PAD ( TJ . plane Width ( 1, width, subsamp ) , pad )  ;      planes [ 1 ]  = planes [ 2 ]  = yuv Image ;      offsets [ 1 ]  = offsets [ 0 ]  + strides [ 0 ]  * TJ . plane Height ( 0, height, subsamp )  ;      offsets [ 2 ]  = offsets [ 1 ]  + strides [ 1 ]  * TJ . plane Height ( 1, height, subsamp )  ;  } yuv Pad = pad ;  set Buf ( planes, offsets, width, strides, height, subsamp )  ; }"
6640,"public com . anychart . core .  State Settings hovered (  ) { return new com . anychart . core .  State Settings ( js Base + "" . hovered (  ) "" )  ; }"
6641,"private static boolean matches Service Uuids ( @ Nullable final  Parcel Uuid uuid, @ Nullable final  Parcel Uuid parcel Uuid Mask, @ Nullable final  List< Parcel Uuid> uuids ) { if  ( uuid == null )  {     return true ;  } if  ( uuids == null )  {     return false ;  } for  ( final  Parcel Uuid parcel Uuid : uuids )  {     final UUID uuid Mask = parcel Uuid Mask == null ? null : parcel Uuid Mask . get Uuid (  )  ;      if  ( matches Service Uuid ( uuid . get Uuid (  ) , uuid Mask, parcel Uuid . get Uuid (  )  )  )  {         return true ;      } } return false ; }"
6642,"public long delay (  Time Unit unit ) { return MILLISECONDS . convert ( delay Ms, unit )  ; }"
6643,public  Ranged Uri get Initialization (  Representation representation ) { return initialization ; }
6644,"public static void configure TLS ( SSL Socket socket ) { // 1 .   Enable all available TLS protocol versions  Set< String> enabled = new  Linked Hash Set<> (  Arrays . as List ( socket . get Enabled Protocols (  )  )  )  ;  for  (  String s : socket . get Supported Protocols (  )  )  {     if  ( s . starts With ( ""TLS"" )  )  {         //$NON-NLS-1$         enabled . add ( s )  ;      } } // 2 .   Respect the https . protocols system property  Set< String> configured = get Configured Protocols (  )  ;  if  ( !configured . is Empty (  )  )  {     enabled . retain All ( configured )  ;  } if  ( !enabled . is Empty (  )  )  {     socket . set Enabled Protocols ( enabled . to Array ( new  String [ 0 ]  )  )  ;  }}"
6645,public  Function< Void> get Invisible Handler (  ) { return m Invisible Handler ; }
6646,"public byte [  ]  get Bytes (  ) { final  Byte Array Output Stream result = new  Byte Array Output Stream (  )  ;  try {     write Into ( result, this . container Type )  ;  } catch  ( final IO Exception e )  {     LOGGER . warning ( e . get Message (  )  )  ;  } return result . to Byte Array (  )  ; }"
6647,public T unable Image Res ( int unable Image Res ) { if  ( this . unable Image Res != unable Image Res )  {     this . unable Image Res = unable Image Res ;       Boom Button button = button (  )  ;      if  ( button != null )  {         button . unable Image Res = unable Image Res ;          button . update Image (  )  ;      } } return  ( T )  this ; }
6648,"static  Path get Compressed Resources Apk Path (  Project Filesystem project Filesystem,  Build Target build Target,  Binary Type binary Type ) { return  Paths . get ( get Unsigned Apk Path ( project Filesystem, build Target, binary Type )  . replace All ( ""\\ . unsigned\\ . apk$"", "" . compressed . apk"" )  . replace All ( ""\\ . unsigned\\ . aab$"", "" . compressed . aab"" )  )  ; }"
6649,public int get First Rssi (  ) { return m First Rssi ; }
6650,public static  Git wrap (  Repository repo ) { return new  Git ( repo )  ; }
6651,public final  Action Mode Helper with Default Mode ( @ Mode int default Mode ) { if  ( default Mode ==  Mode . IDLE || default Mode ==  Mode . SINGLE )      this . default Mode = default Mode ;  return this ; }
6652,"public  String consume To Any ( final char .  .  .  chars ) { buffer Up (  )  ;  final int start = buf Pos ;  final int remaining = buf Length ;  final char [  ]  val = char Buf ;  OUTER: while  ( buf Pos < remaining )  {     for  ( char c : chars )  {         if  ( val [ buf Pos ]  == c )              break OUTER ;      }     buf Pos++ ;  } return buf Pos > start ? cache String ( char Buf, string Cache, start, buf Pos - start )  : """" ; }"
6653,"private void split (  ) { m Children = new  Array List< Point Quad Tree<T>> ( 4 )  ;  m Children . add ( new  Point Quad Tree<T> ( m Bounds . min X, m Bounds . mid X, m Bounds . min Y, m Bounds . mid Y, m Depth + 1 )  )  ;  m Children . add ( new  Point Quad Tree<T> ( m Bounds . mid X, m Bounds . max X, m Bounds . min Y, m Bounds . mid Y, m Depth + 1 )  )  ;  m Children . add ( new  Point Quad Tree<T> ( m Bounds . min X, m Bounds . mid X, m Bounds . mid Y, m Bounds . max Y, m Depth + 1 )  )  ;  m Children . add ( new  Point Quad Tree<T> ( m Bounds . mid X, m Bounds . max X, m Bounds . mid Y, m Bounds . max Y, m Depth + 1 )  )  ;   List<T> items = m Items ;  m Items = null ;  for  ( T item : items )  {     // re-insert items into child quads .      insert ( item . get Point (  )  . x, item . get Point (  )  . y, item )  ;  }}"
6654,public  Set< String> get Keys By Prefix ( @ Non Null  String prefix ) { return get Handler . get Keys By Prefix ( prefix )  ; }
6655,"void test Set Health (  ) { final var model = mock (  Giant Model . class )  ;  final var view = mock (  Giant View . class )  ;  final var controller = new  Giant Controller ( model, view )  ;  verify Zero Interactions ( model, view )  ;  for  ( final var health :  Health . values (  )  )  {     controller . set Health ( health )  ;      verify ( model )  . set Health ( health )  ;      verify Zero Interactions ( view )  ;  } controller . get Health (  )  ;  //noinspection  Result Of Method Call Ignored verify ( model )  . get Health (  )  ;  verify No More Interactions ( model, view )  ; }"
6656,"public static void propagate If Possible ( @ Nullable  Throwable throwable,  Class<X> declared Type )  throws X{ propagate If Instance Of ( throwable, declared Type )  ;  propagate If Possible ( throwable )  ; }"
6657,public void test Notification_no Ui Bg (  )  throws  Exception{ check No Ui Notification Only Does Analytics (  )  ; }
6658,public  Builder clear Engine Info (  ) { if  ( engine Info Builder_ == null )  {     engine Info_ = null ;      on Changed (  )  ;  } else {     engine Info_ = null ;      engine Info Builder_ = null ;  } return this ; }
6659,"private void adjust Bottom By Aspect Ratio (  Rect F rect, float aspect Ratio ) { rect . bottom = rect . top + rect . width (  )  / aspect Ratio ; }"
6660,"public void log In ( android . app .  Fragment fragment,  Collection< String> permissions ) { log In ( new  Fragment Wrapper ( fragment ) , permissions )  ; }"
6661,public  String get Node Name (  ) { return name ; }
6662,"public boolean set Value (  String key, long value ) { if  ( key == null )  {     logger . debug ( "" Key is null when setting long value on device cache . "" )  ;      return false ;  } if  ( shared Pref == null )  {     set Context ( get Firebase Application Context (  )  )  ;      if  ( shared Pref == null )  {         return false ;      } } shared Pref . edit (  )  . put Long ( key, value )  . apply (  )  ;  return true ; }"
6663,"public void polyline ( float [  ]  vertices, int offset, int count ) { if  ( count < 4 )      throw new  Illegal Argument Exception ( "" Polylines must contain at least 2 points . "" )  ;  if  ( count % 2 != 0 )      throw new  Illegal Argument Exception ( "" Polylines must have an even number of vertices . "" )  ;  check (  Shape Type .  Line, null, count )  ;  float color Bits = color . to Float Bits (  )  ;  for  ( int i = offset, n = offset + count - 2 ;  i < n ;  i += 2 )  {     float x1 = vertices [ i ]  ;      float y1 = vertices [ i + 1 ]  ;      float x2 ;      float y2 ;      x2 = vertices [ i + 2 ]  ;      y2 = vertices [ i + 3 ]  ;      renderer . color ( color Bits )  ;      renderer . vertex ( x1, y1, 0 )  ;      renderer . color ( color Bits )  ;      renderer . vertex ( x2, y2, 0 )  ;  }}"
6664,"public  Label get Label (  ) { return  Preconditions . check Not Null ( label, "" Tried to get label before function has been assigned to a variable and exported"" )  ; }"
6665,"public static boolean is Top Level Scroll Item ( @ Nullable  Accessibility Node Info Compat node, @ Nullable  View view ) { if  ( node == null || view == null )  {     return false ;  }  View parent =  (  View )   View Compat . get Parent For Accessibility ( view )  ;  if  ( parent == null )  {     return false ;  } if  ( node . is Scrollable (  )  )  {     return true ;  }  List action List = node . get Action List (  )  ;  if  ( action List . contains (  Accessibility Node Info Compat . ACTION_SCROLL_FORWARD )  || action List . contains (  Accessibility Node Info Compat . ACTION_SCROLL_BACKWARD )  )  {     return true ;  } // containers, but  Spinner is a special case .  if  ( parent instanceof  Spinner )  {     return false ;  } return parent instanceof  Adapter View || parent instanceof  Scroll View || parent instanceof  Horizontal Scroll View ; }"
6666,"public com . anychart . core . stock . scrollerseries .  Range Spline Area min Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
6667,public  Builder set Suffix Minute (  String suffix ) { this . suffix Minute = suffix ;  return this ; }
6668,"public static int dip2sp (  Context context, float sp ) { return  ( int )   Typed Value . apply Dimension (  Typed Value . COMPLEX_UNIT_SP, sp, context . get Resources (  )  . get Display Metrics (  )  )  ; }"
6669,"public static  Array List< String> get Months ( int year ) {  Array List< String> base Months = new  Array List<> (  )  ;  for  ( int i = 1 ;  i < n Str1 . length ;  i++ )  {     base Months . add ( n Str1 [ i ]  + ""月"" )  ;  } if  ( leap Month ( year )  != 0 )  {     base Months . add ( leap Month ( year ) , ""闰"" + n Str1 [ leap Month ( year )  ]  + ""月"" )  ;  } return base Months ; }"
6670,public void set Shape Renderer ( I Shape Renderer shape Renderer ) { m Shape Renderer = shape Renderer ; }
6671,"public void select Marquee Stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . select Marquee Stroke (  )  ; "" )  ; }"
6672,"public void perform Authorization Request ( @ Non Null  Authorization Request request, @ Non Null  Pending Intent completed Intent, @ Non Null  Custom Tabs Intent custom Tabs Intent ) { perform Authorization Request ( request, completed Intent, null, custom Tabs Intent )  ; }"
6673,"public void record Event ( final  String key, final  Map< String,  Object> segmentation, final int count ) { synchronized  ( _cly )  {     record Event ( key, segmentation, count, 0 )  ;  }}"
6674,public  String get As String (  ) { if  ( is Number (  )  )  {     return get As Number (  )  . to String (  )  ;  } else if  ( is Boolean (  )  )  {     return  (  (  Boolean )  value )  . to String (  )  ;  } else {     return  (  String )  value ;  }}
6675,"public  Ios Parameters .  Builder set App Store Id ( @ Non Null  String app Store Id ) { parameters . put String ( KEY_IOS_APP_STORE_ID, app Store Id )  ;  return this ; }"
6676,"public static void update User (  String name,  String avatar Url,  Qiscus Core .  Set User Listener listener ) {  Qiscus Core . update User ( name, avatar Url, listener )  ; }"
6677,public  String jvm Type Name (  ) { return to String (  )  ; }
6678,private static  Immutable Set< Relative File> compute Files ( @ Non Null  Directory Input directory Input ) {  File dir = directory Input . get File (  )  ;  assert dir . is Directory (  )  ;  return  Relative Files . from Directory ( dir )  ; }
6679,"public com . anychart . standalones .  Resource Timeline row Odd Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Odd Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
6680,"public com . anychart . core . polar . series .  Range Column left (  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", wrap Quotes ( left )  )  )  ;  return this ; }"
6681,private void init Skin Loader (  ) {  Skin Manager . get Instance (  )  . init ( this )  ;   Skin Manager . get Instance (  )  . load (  )  ; }
6682,public  Builder delay ( long delay Ms ) { current Delay Ms += delay Ms ;  return this ; }
6683,"public com . anychart . charts .  Cartesian3d select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
6684,"public long skip ( long byte Count ) {  Preconditions . check Argument ( byte Count >= 0 )  ;  int skipped =  Math . min (  ( int )  byte Count, available (  )  )  ;  m Offset += skipped ;  return skipped ; }"
6685,"public int record Return Type (  Ct Class type,  String cast Name,  String result Name,  Symbol Table tbl )  throws  Compile Error{ return Type = type ;  return Cast Name = cast Name ;  return Var Name = result Name ;  if  ( result Name == null )      return -1 ;  int var No = get Max Locals (  )  ;  int locals = var No + record Var ( type, result Name, var No, tbl )  ;  set Max Locals ( locals )  ;  return var No ; }"
6686,private static int get Winding Rule (  Path .  Fill Type type ) { switch ( type )  {     case WINDING:     case INVERSE_WINDING:         return  General Path . WIND_NON_ZERO ;      case EVEN_ODD:     case INVERSE_EVEN_ODD:         return  General Path . WIND_EVEN_ODD ;      default:         assert false ;          return  General Path . WIND_NON_ZERO ;  }}
6687,public  Builder add Inputs (  Iterable<? extends  Source Path> inputs ) { extra Inputs . add All ( inputs )  ;  return this ; }
6688,"public void point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . point Width (  )  ; "" )  ; }"
6689,"protected void setup Object List (  ) { object List . add ( new  Number Hash Map (  Data Types . OBJ_TEXT_ENCODING, this,  Text Encoding . TEXT_ENCODING_FIELD_SIZE )  )  ;  object List . add ( new  Text Encoded String Size Terminated (  Data Types . OBJ_TEXT, this )  )  ; }"
6690,"public com . anychart . core .  State Settings hovered (  ) { return new com . anychart . core .  State Settings ( js Base + "" . hovered (  ) "" )  ; }"
6691,"public com . anychart . core . cartesian . series .  Line3d width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", width )  )  ;  return this ; }"
6692,"public static int get MCU Height ( int subsamp )  throws  Exception{ if  ( subsamp < 0 || subsamp >= NUMSAMP )      throw new  Exception ( "" Invalid subsampling type"" )  ;  return mcu Height [ subsamp ]  ; }"
6693,public static void set Default Sms Subscription Id ( int id ) { default Sms Subscription Id = id ; }
6694,"public int remove ( K key, int default Value ) { int i = locate Key ( key )  ;  if  ( i < 0 )      return default Value ;  K [  ]  key Table = this . key Table ;  int [  ]  value Table = this . value Table ;  int old Value = value Table [ i ]  ;  int mask = this . mask, next = i + 1 & mask ;  while  (  ( key = key Table [ next ]  )  != null )  {     int placement = place ( key )  ;      if  (  ( next - placement & mask )  >  ( i - placement & mask )  )  {         key Table [ i ]  = key ;          value Table [ i ]  = value Table [ next ]  ;          i = next ;      }     next = next + 1 & mask ;  } key Table [ i ]  = null ;  size-- ;  return old Value ; }"
6695,public  String to String (  ) { return source . to String (  )  ; }
6696,static  Char Buffer create Buffer (  ) { return  Char Buffer . allocate ( DEFAULT_BUF_SIZE )  ; }
6697,protected final void public Api Only (  ) { visibility =  Visibility . PUBLIC ; }
6698,"public  Http Proxy Cache Server new Proxy (  Context context,  File file ) { if  ( !file . exists (  )  )  {     file . mkdirs (  )  ;  }  Http Proxy Cache Server .  Builder builder = new  Http Proxy Cache Server .  Builder ( context )  ;  builder . cache Directory ( file )  ;  if  ( DEFAULT_MAX_COUNT > 0 )  {     builder . max Cache Files Count ( DEFAULT_MAX_COUNT )  ;  } else {     builder . max Cache Size ( DEFAULT_MAX_SIZE )  ;  } builder . header Injector ( user Agent Headers Injector )  ;  builder . hostname Verifier ( v )  ;  builder . trust All Certs ( trust All Certs )  ;  if  ( file Name Generator != null )  {     builder . file Name Generator ( file Name Generator )  ;  } m Cache Dir = file ;  return builder . build (  )  ; }"
6699,"public void full Screen (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . full Screen (  )  ; "" )  ; }"
6700,public static boolean can Show Native Dialog (  ) { return false ; }
6701,public void add Accessory Custom View (  View view ) { if  ( m Accessory Type == ACCESSORY_TYPE_CUSTOM )  {     m Accessory View . add View ( view )  ;  }}
6702,void cancel Display Task For (  Image Aware image Aware ) { cache Keys For Image Awares . remove ( image Aware . get Id (  )  )  ; }
6703,public  Media Period Holder get Playing Period (  ) { return playing ; }
6704,public boolean is Wildcard (  ) { return wildcard ; }
6705,"public com . anychart . core . venn .  Intersections fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
6706,"public static void check Gl Error (  ) { int last Error = GLES20 . GL_NO_ERROR ;  int error ;  while  (  ( error = GLES20 . gl Get Error (  )  )  != GLES20 . GL_NO_ERROR )  {      Log . e ( TAG, ""gl Error "" + glu Error String ( last Error )  )  ;      last Error = error ;  } if  (  Exo Player Library Info . GL_ASSERTIONS_ENABLED && last Error != GLES20 . GL_NO_ERROR )  {     throw new  Runtime Exception ( ""gl Error "" + glu Error String ( last Error )  )  ;  }}"
6707,public static double compute Area (  List< Lat Lng> path ) { return abs ( compute Signed Area ( path )  )  ; }
6708,public  Builder set Cta ( final  String cta ) { this . cta = cta ;  return this ; }
6709,"public void set Generic Signature (  String sig ) { declaring Class . check Modify (  )  ;  method Info . add Attribute ( new  Signature Attribute ( method Info . get Const Pool (  ) , sig )  )  ; }"
6710,"public  Ref Cache put (  Ref ref ) {  Ref List< Ref> new Ids = this . ids . put ( ref )  ;   Ref List< Ref> new Sym = this . sym ;  if  ( ref . is Symbolic (  )  )  {     new Sym = new Sym . put ( ref )  ;  } else {     int p = new Sym . find ( ref . get Name (  )  )  ;      if  ( 0 <= p )          new Sym = new Sym . remove ( p )  ;  } return new  Ref Cache ( new Ids, new Sym )  ; }"
6711,"public int find Entry (  String path ) { final byte [  ]  p =  Constants . encode ( path )  ;  return find Entry ( p, p . length )  ; }"
6712,"public com . anychart . standalones .  Title margin (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
6713,"public void on Request Permissions Result ( int request Code, @ Non Null  String [  ]  permissions, @ Non Null int [  ]  grant Results ) { switch ( request Code )  {     case REQUEST_STORAGE_WRITE_ACCESS_PERMISSION:         if  ( grant Results [ 0 ]  ==  Package Manager . PERMISSION_GRANTED )  {             save Cropped Image (  )  ;          }         break ;      default:         super . on Request Permissions Result ( request Code, permissions, grant Results )  ;  }}"
6714,"public com . anychart . core .  Visual Base With Bounds z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
6715,public  Config get Config (  Method method ) { throw new  Unsupported Operation Exception (  )  ; }
6716,"public void set Drop Target Drawables (  Drawable background Drawable,  Drawable foreground Drawable ) { m Recycler View . set Drop Target Drawables ( background Drawable, foreground Drawable )  ; }"
6717,"public  Item2_ Relation relation Of Item2 (  ) { return new  Item2_ Relation ( connection,  Item2_ Schema . INSTANCE )  ; }"
6718,"public com . anychart . core . annotations .  Fibonacci Fan markers (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6719,"public  Set< Nitrite Id> find Equal With Index (  String field,  Object value ) { not Null ( field, error Message ( ""field can not be null"", VE_FIND_EQUAL_INDEX_NULL_FIELD )  )  ;  return indexed Search Service . find Equal ( field, value )  ; }"
6720,"protected void on Create (  Bundle saved Instance State ) { aty = this ;  KJ Activity Stack . create (  )  . add Activity ( this )  ;  KJ Loger . state ( this . get Class (  )  . get Name (  ) , ""---------on Creat "" )  ;  // 必须放在annotate之前调用 set Root View (  )  ;   Annotate Util . init Bind View ( this )  ;  initializer (  )  ;  register Broadcast (  )  ;  super . on Create ( saved Instance State )  ; }"
6721,"private void test Checkin (  Eol Stream Type stream Type Text,  Eol Stream Type stream Type With Binary Check,  String input,  String expected Conversion )  throws  Exception{ byte [  ]  input Bytes = input . get Bytes ( UTF_8 )  ;  byte [  ]  expected Conversion Bytes = expected Conversion . get Bytes ( UTF_8 )  ;  // test using input text and assuming it was declared TEXT try  (  Input Stream in =  Eol Stream Type Util . wrap Input Stream ( new  Byte Array Input Stream ( input Bytes ) , stream Type Text )  )  {     byte [  ]  b = new byte [ 1024 ]  ;      int len = IO . read Fully ( in, b, 0 )  ;      assert Array Equals ( expected Conversion Bytes,  Arrays . copy Of ( b, len )  )  ;  } // detection try  (  Input Stream in =  Eol Stream Type Util . wrap Input Stream ( new  Byte Array Input Stream ( input Bytes ) , stream Type With Binary Check )  )  {     byte [  ]  b = new byte [ 1024 ]  ;      int len = IO . read Fully ( in, b, 0 )  ;      assert Array Equals ( expected Conversion Bytes,  Arrays . copy Of ( b, len )  )  ;  } // now pollute input text with some binary bytes input Bytes = extend With Binary Data ( input Bytes )  ;  expected Conversion Bytes = extend With Binary Data ( expected Conversion Bytes )  ;  // again, test using input text and assuming it was declared TEXT try  (  Input Stream in =  Eol Stream Type Util . wrap Input Stream ( new  Byte Array Input Stream ( input Bytes ) , stream Type Text )  )  {     byte [  ]  b = new byte [ 1024 ]  ;      int len = IO . read Fully ( in, b, 0 )  ;      assert Array Equals ( expected Conversion Bytes,  Arrays . copy Of ( b, len )  )  ;  } // detection try  (  Input Stream in =  Eol Stream Type Util . wrap Input Stream ( new  Byte Array Input Stream ( input Bytes ) , stream Type With Binary Check )  )  {     byte [  ]  b = new byte [ 1024 ]  ;      int len = IO . read Fully ( in, b, 0 )  ;      // expect no conversion     assert Array Equals ( input Bytes,  Arrays . copy Of ( b, len )  )  ;  }}"
6722,public void register Item Observer (  Item Observer< List Item Type> observer ) { observers . add ( observer )  ; }
6723,"public static  Note Map read Tree (  Object Reader reader,  Object Id tree Id )  throws  Missing Object Exception,  Incorrect Object Type Exception,  Corrupt Object Exception, IO Exception{  Note Map map = new  Note Map ( reader )  ;  map . load ( tree Id )  ;  return map ; }"
6724,"public com . anychart . core . stock . indicators . ATR atr ( com . anychart . data .  Table Mapping mapping,  Number period, com . anychart . enums .  Stock Series Type series Type ) { return new com . anychart . core . stock . indicators . ATR (  String . format (  Locale . US, js Base + "" . atr ( %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, period,  ( series Type != null )  ? series Type . get Js Base (  )  : null )  )  ; }"
6725,Transition Id get Global Id (  String reference ) { return m Global Ids . get ( reference )  ; }
6726,public static  Builder get Builder ( @ Non Null  Char Sequence text ) { return new  Builder ( text )  ; }
6727,"public void kill Particles ( int start Index, int count ) {}"
6728,public  String get Source Path (  ) { return out Candidate . source Path . get Path (  )  ; }
6729,public  Builder clear Screen Width Dp (  ) { screen Width Dp_ = 0 ;  on Changed (  )  ;  return this ; }
6730,"protected void pop Back Stack Inclusive (  Class<? extends QMUI Fragment> cls ) { if  ( check Pop Back (  )  )  {     get Parent Fragment Manager (  )  . pop Back Stack ( cls . get Simple Name (  ) ,  Fragment Manager . POP_BACK_STACK_INCLUSIVE )  ;  }}"
6731,"public void translate ( float x Amount, float y Amount ) { if  ( x Amount == 0 && y Amount == 0 )      return ;  if  ( integer )  {     x Amount =  Math . round ( x Amount )  ;      y Amount =  Math . round ( y Amount )  ;  } x += x Amount ;  y += y Amount ;  float [  ]  [  ]  page Vertices = this . page Vertices ;  for  ( int i = 0, n = page Vertices . length ;  i < n ;  i++ )  {     float [  ]  vertices = page Vertices [ i ]  ;      for  ( int ii = 0, nn = idx [ i ]  ;  ii < nn ;  ii += 5 )  {         vertices [ ii ]  += x Amount ;          vertices [ ii + 1 ]  += y Amount ;      } }}"
6732,protected void setup Shadow View (  ) { if  ( m Card != null && m Card . get Card Elevation (  )  != null )  {     this . set Card Elevation ( m Card . get Card Elevation (  )  )  ;  }}
6733,"static  String get Metrics ( final  Context context, final  Map< String,  String> metric Override ) { final JSON Object json = new JSON Object (  )  ;  fill JSON If Values Not Empty ( json, ""_device"", get Device (  ) , ""_os"", get OS (  ) , ""_os_version"", get OS Version (  ) , ""_carrier"", get Carrier ( context ) , ""_resolution"", get Resolution ( context ) , ""_density"", get Density ( context ) , ""_locale"", get Locale (  ) , ""_app_version"", get App Version ( context ) , ""_store"", get Store ( context ) , ""_deep_link"", deep Link, ""_manufacturer"", get Manufacturer (  ) , ""_device_type"", get Device Type ( context )  )  ;  //override metric values if  ( metric Override != null )  {     for  (  String k : metric Override . key Set (  )  )  {         if  ( k == null || k . length (  )  == 0 )  {              Countly . shared Instance (  )  . L . w ( "" Provided metric override key can't be null or empty"" )  ;              continue ;          }          String override Value = metric Override . get ( k )  ;          if  ( override Value == null )  {              Countly . shared Instance (  )  . L . w ( "" Provided metric override value can't be null, key: [ "" + k + "" ] "" )  ;              continue ;          }         try {             json . put ( k, override Value )  ;          } catch  (  Exception ex )  {              Countly . shared Instance (  )  . L . e ( "" Could not set metric override,  [ "" + ex + "" ] "" )  ;          }     } }  String result = json . to String (  )  ;  try {     result = java . net . URL Encoder . encode ( result, ""UTF-8"" )  ;  } catch  (  Unsupported Encoding Exception ignored )  { // should never happen because  Android guarantees UTF-8 support } return result ; }"
6734,"public boolean execute (  String action,  Cordova Args args,  Callback Context callback Context )  throws JSON Exception{ return false ; }"
6735,"public com . anychart . core . axismarkers .  Circular Range position (  String position Type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . position ( %s )  ; "", wrap Quotes ( position Type )  )  )  ;  return this ; }"
6736,"public com . anychart . core . gauge .  Cap stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
6737,"public void min Point Length (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Point Length (  )  ; "" )  ; }"
6738,"public com . anychart . core . axismarkers .  Gantt Line scale ( com . anychart . scales .  Gantt Date Time scale ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . scale ( %s )  ; "",  ( scale != null )  ? scale . get Js Base (  )  : null )  )  ;  return this ; }"
6739,"public static org . robolectric . android .  Attribute Set Builder build Attribute Set (  ) { if  ( use Legacy (  )  )  {     return new  Attribute Set Builder Impl ( new  Legacy Resource Resolver (  Runtime Environment . get Application (  ) ,  Runtime Environment . get Compile Time Resource Table (  )  )  )  {     } ;  } else {     return new  Attribute Set Builder Impl ( new  Arsc Resource Resolver (  Runtime Environment . get Application (  )  )  )  {     } ;  }}"
6740,public T get Tree (  Class<T> type ) { for  (  Abstract Tree Iterator tree : trees )  {     if  ( type . is Instance ( tree )  )  {         return type . cast ( tree )  ;      } } return null ; }
6741,"public static int px2dp (  Context context, int px ) { return  ( int )   ( px / get Density ( context )  + 0 . 5 )  ; }"
6742,"public com . anychart . core . resource .  Grid odd Fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . odd Fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
6743,"public static void rotate ( float [  ]  ray, int first, int new_first, int last ) { int next = new_first ;  while  ( next != first )  {     float temp = ray [ first ]  ;      ray [ first ]  = ray [ next ]  ;      ray [ next ]  = temp ;      first++ ;      next++ ;      if  ( next == last )  {         next = new_first ;      } else if  ( first == new_first )  {         new_first = next ;      } }}"
6744,"public com . anychart . core . cartesian . series .  Continuous Range Base bounds (  String x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
6745,"public com . anychart . core . annotations .  Vertical Line max Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", width )  )  ;  return this ; }"
6746,public URL get URL (  )  throws IO Exception{ return this . file . to URI (  )  . to URL (  )  ; }
6747,"public com . anychart . core . utils .  Quarter container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
6748,"private static EC Point decompress Key (  Big Integer x BN, boolean y Bit ) { X9 Integer Converter x9 = new X9 Integer Converter (  )  ;  byte [  ]  comp Enc = x9 . integer To Bytes ( x BN, 1 + x9 . get Byte Length ( CURVE . get Curve (  )  )  )  ;  comp Enc [ 0 ]  =  ( byte )   ( y Bit ? 0x03 : 0x02 )  ;  return CURVE . get Curve (  )  . decode Point ( comp Enc )  ; }"
6749,"public  Eol Stream Type get Eol Stream Type (  Operation Type op Type ) { if  ( attributes Node Provider == null || config == null )      return null ;  return  Eol Stream Type Util . detect Stream Type ( op Type != null ? op Type : operation Type, config . get (  Working Tree Options . KEY ) , get Attributes (  )  )  ; }"
6750,"public static boolean  Flyme Set Status Bar Light Mode (  Window window, boolean light ) { boolean result = false ;  if  ( window != null )  {      Android6 Set Status Bar Light Mode ( window, light )  ;      // 高版本调用这个出现不可预期的  Bug,官方文档也没有给出完整的高低版本兼容方案     if  ( QMUI Device Helper . is Flyme Lower Than ( 7 )  )  {         try {              Window Manager .  Layout Params lp = window . get Attributes (  )  ;               Field dark Flag =  Window Manager .  Layout Params . class . get Declared Field ( ""MEIZU_FLAG_DARK_STATUS_BAR_ICON"" )  ;               Field meizu Flags =  Window Manager .  Layout Params . class . get Declared Field ( ""meizu Flags"" )  ;              dark Flag . set Accessible ( true )  ;              meizu Flags . set Accessible ( true )  ;              int bit = dark Flag . get Int ( null )  ;              int value = meizu Flags . get Int ( lp )  ;              if  ( light )  {                 value |= bit ;              } else {                 value &= ~bit ;              }             meizu Flags . set Int ( lp, value )  ;              window . set Attributes ( lp )  ;              result = true ;          } catch  (  Exception ignored )  {         }     } else if  ( QMUI Device Helper . is Flyme (  )  )  {         result = true ;      } } return result ; }"
6751,"public  Alert Dialog get Dialog View (  Context cxt,  String title,  View view ) {  Alert Dialog dialog = new  Alert Dialog .  Builder ( cxt )  . create (  )  ;  dialog . set Message ( title )  ;  dialog . set View ( view )  ;  dialog . show (  )  ;  return dialog ; }"
6752,"public com . anychart . core . resource .  Conflicts enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
6753,public boolean is Empty (  ) { return size == 0 ; }
6754,public com . google . protobuf .  Byte String get Re Session Label Bytes (  ) { java . lang .  Object ref = re Session Label_ ;  if  ( ref instanceof  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      re Session Label_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
6755,"public final  Client Http Request create Request ( URI uri,  Http Method http Method )  throws IO Exception{ return create Request ( uri, http Method, request Factory )  ; }"
6756,"public com . anychart . core . gantt .  Time Line Header level (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . level ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
6757,public  Generic Drawee Hierarchy Builder set Placeholder Image ( int resource Id ) { m Placeholder Image = m Resources . get Drawable ( resource Id )  ;  return this ; }
6758,"public com . anychart . charts .  Waterfall margin (  String margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "", wrap Quotes ( margin )  )  )  ;  return this ; }"
6759,"public  Builder<K, V> order Values By (  Comparator<? super V> value Comparator ) { this . value Comparator = check Not Null ( value Comparator )  ;  return this ; }"
6760,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
6761,public  All Types Model View Model_ boolean Value ( boolean boolean Value ) { on Mutation (  )  ;  this . boolean Value_ Boolean = boolean Value ;  return this ; }
6762,"public com . anychart . core . annotations .  Fibonacci Fan bottom (  String bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", wrap Quotes ( bottom )  )  )  ;  return this ; }"
6763,"public void remove Value ( @ Nullable  Completion Listener listener ) { set Value ( null, listener )  ; }"
6764,"public com . anychart . charts .  Sankey tooltip (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . tooltip ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6765,public boolean is Raw Type (  ) { return declared Set Type (  )  . get Type Arguments (  )  . is Empty (  )  ; }
6766,public void add Legend (  List< Legend Model> _ Legend ) { m Legend List . add All ( _ Legend )  ;  on Legend Data Changed (  )  ; }
6767,"public void word Break (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . word Break (  )  ; "" )  ; }"
6768,"private synchronized void set State ( int state ) { if  ( D )       Log . d ( TAG, ""set State (  )  "" + m State + "" -> "" + state )  ;  m State = state ;  //  Give the new state to the  Handler so the UI  Activity can update m Handler . obtain Message (  Blue Tooth Server . MESSAGE_STATE_CHANGE, state, -1 )  . send To Target (  )  ; }"
6769,"public com . anychart . core . stock . indicators . CHO ma Type (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . ma Type ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
6770,public int get Max Zones (  ) { return this . max Zones & 0x FFFF ; }
6771,"public void select Marquee Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . select Marquee Fill (  )  ; "" )  ; }"
6772,"public static  Cst Float make ( int bits ) { /*      *  Note:  Javadoc notwithstanding, this implementation always      * allocates .       */ return new  Cst Float ( bits )  ; }"
6773,private static  Android Namespace Context get Default (  ) { return s This ; }
6774,"public com . anychart . core . cartesian . series .  Continuous Range Base series Type (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . series Type ( %s )  ; "", wrap Quotes ( type )  )  )  ;  return this ; }"
6775,public  Component Assert does Not Have Visible Drawable ( @ Drawable Res int drawable Res ) { assert That Litho View (  )  . does Not Have Visible Drawable ( drawable Res )  ;  return this ; }
6776,public  Builder show As Fragment ( boolean show As Fragment ) { this . show As Fragment = show As Fragment ;  return this ; }
6777,public void set Smsc Address Permission ( boolean smsc Address Permission ) { this . has Smsc Address Permission = smsc Address Permission ; }
6778,public  Network Event Reporter get Stetho Hook (  ) { return m Stetho Hook ; }
6779,public  Viewport get Visible Viewport (  ) { return current Viewport ; }
6780,"private  Default No Operation Message State toggle State ( @ Non Null final  Mesh Transport transport, @ Nullable final  Mesh Message mesh Message ) { final  Default No Operation Message State state = new  Default No Operation Message State ( mesh Message, transport, this )  ;  state . set Transport Callbacks ( m Internal Transport Callbacks )  ;  state . set Status Callbacks ( m Status Callbacks )  ;  return state ; }"
6781,"private boolean read Acknowledgments (  Fetch State V2 fetch State,  Packet Line In input,  Progress Monitor monitor )  throws IO Exception,  Cancelled Exception{  String line = input . read String (  )  ;  if  ( ! Git Protocol Constants . SECTION_ACKNOWLEDGMENTS . equals ( line )  )  {     throw new  Pack Protocol Exception (  Message Format . format ( J Git Text . get (  )  . expected Got,  Git Protocol Constants . SECTION_ACKNOWLEDGMENTS, line )  )  ;  }  Mutable Object Id returned Id = new  Mutable Object Id (  )  ;  line = input . read String (  )  ;  boolean got Ready = false ;  long n = 0 ;  while  ( ! Packet Line In . is End ( line )  && ! Packet Line In . is Delimiter ( line )  )  {      Ack Nack Result ack =  Packet Line In . parse AC Kv2 ( line, returned Id )  ;      // should be the last line anyway .  )      if  ( !got Ready )  {         if  ( ack ==  Ack Nack Result . ACK_COMMON )  {             // mark Common appends the object to the ""state""             mark Common ( walk . parse Any ( returned Id ) , ack, true )  ;              fetch State . haves Without Ack = 0 ;              fetch State . had Acks = true ;          } else if  ( ack ==  Ack Nack Result . ACK_READY )  {             got Ready = true ;          }     }     n++ ;      if  ( n % 10 == 0 && monitor . is Cancelled (  )  )  {         throw new  Cancelled Exception (  )  ;      }     line = input . read String (  )  ;  } if  ( got Ready )  {     if  ( ! Packet Line In . is Delimiter ( line )  )  {         throw new  Pack Protocol Exception (  Message Format . format ( J Git Text . get (  )  . expected Got, ""0001"", //$NON-NLS-1$         line )  )  ;      } } else if  ( ! Packet Line In . is End ( line )  )  {     throw new  Pack Protocol Exception (  Message Format . format ( J Git Text . get (  )  . expected Got, ""0000"", //$NON-NLS-1$     line )  )  ;  } return got Ready ; }"
6782,"public static void visible View By Alpha ( final  View view, long duration Millis, final  Animation Listener animation Listener ) { visible View By Alpha ( view, duration Millis, false, animation Listener )  ; }"
6783,public boolean renders View (  ) { return m Render Info . renders View (  )  ; }
6784,"public com . anychart . charts .  Radar margin (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
6785,public static  Siren get Instance (  Context context ) { siren Instance . m Application Context = context ;  return siren Instance ; }
6786,public  Normal Card set Additional Item ( @ Not Null  Option View Additional option ) { option View Additional = option ;  return this ; }
6787,public boolean is Expandable ( @ Nullable T item ) { return item instanceof I Expandable ; }
6788,public void set On Menu Item Click Listener (  On Menu Item Click Listener listener ) { m Menu Item Click Listener = listener ; }
6789,"private FTP File parse Line (  String line )  throws FTP List Parse Exception{ //  Divides facts and name .   Array List list = new  Array List (  )  ;   String Tokenizer st = new  String Tokenizer ( line, "" ; "" )  ;  while  ( st . has More Elements (  )  )  {      String aux = st . next Token (  )  . trim (  )  ;      if  ( aux . length (  )  > 0 )  {         list . add ( aux )  ;      } } if  ( list . size (  )  == 0 )  {     throw new FTP List Parse Exception (  )  ;  } //  Extracts the file name .   String name =  (  String )  list . remove ( list . size (  )  - 1 )  ;  //  Parses the facts .   Properties facts = new  Properties (  )  ;  for  (  Iterator i = list . iterator (  )  ;  i . has Next (  )  ;   )  {      String aux =  (  String )  i . next (  )  ;      int sep = aux . index Of ( '=' )  ;      if  ( sep == -1 )  {         throw new FTP List Parse Exception (  )  ;      }      String key = aux . substring ( 0, sep )  . trim (  )  ;       String value = aux . substring ( sep + 1, aux . length (  )  )  . trim (  )  ;      if  ( key . length (  )  == 0 || value . length (  )  == 0 )  {         throw new FTP List Parse Exception (  )  ;      }     facts . set Property ( key, value )  ;  } //  Type .  int type ;   String type String = facts . get Property ( ""type"" )  ;  if  ( type String == null )  {     throw new FTP List Parse Exception (  )  ;  } else if  ( ""file"" . equals Ignore Case ( type String )  )  {     type = FTP File . TYPE_FILE ;  } else if  ( ""dir"" . equals Ignore Case ( type String )  )  {     type = FTP File . TYPE_DIRECTORY ;  } else if  ( ""cdir"" . equals Ignore Case ( type String )  )  {     //  Current directory .   Skips .  .  .      return null ;  } else if  ( ""pdir"" . equals Ignore Case ( type String )  )  {     //  Parent directory .   Skips .  .  .      return null ;  } else {     //  Unknown .  .  .   ( link? )  .  .  .   Skips .  .  .      return null ;  } //  Last modification date .   Date modified Date = null ;   String modify String = facts . get Property ( ""modify"" )  ;  if  ( modify String != null )  {     modify String += "" +0000"" ;      try {         synchronized  ( MLSD_DATE_FORMAT_1 )  {             modified Date = MLSD_DATE_FORMAT_1 . parse ( modify String )  ;          }     } catch  (  Parse Exception e1 )  {         try {             synchronized  ( MLSD_DATE_FORMAT_2 )  {                 modified Date = MLSD_DATE_FORMAT_2 . parse ( modify String )  ;              }         } catch  (  Parse Exception e2 )  {              ;          }     } } //  Size .  long size = 0 ;   String size String = facts . get Property ( ""size"" )  ;  if  ( size String != null )  {     try {         size =  Long . parse Long ( size String )  ;      } catch  (  Number Format Exception e )  {          ;      }     if  ( size < 0 )  {         size = 0 ;      } } //  Done! FTP File ret = new FTP File (  )  ;  ret . set Type ( type )  ;  ret . set Modified Date ( modified Date )  ;  ret . set Size ( size )  ;  ret . set Name ( name )  ;  return ret ; }"
6790,"public static void vali Long Max Value ( long number, long max Value,  String object Name )  throws  Illegal Argument Exception{ if  ( ! ( number <= max Value )  )  {     throw new  Illegal Argument Exception ( "" Long object '"" + object Name + ""' is illegal!"" )  ;  }}"
6791,"public static  Stream<R> map With Index (  Stream<T> stream,  Function With Index<? super T, ? extends R> function ) { check Not Null ( stream )  ;  check Not Null ( function )  ;  boolean is Parallel = stream . is Parallel (  )  ;   Spliterator<T> from Spliterator = stream . spliterator (  )  ;  if  ( !from Spliterator . has Characteristics (  Spliterator . SUBSIZED )  )  {      Iterator<T> from Iterator =  Spliterators . iterator ( from Spliterator )  ;      return  Stream Support . stream ( new  Abstract Spliterator<R> ( from Spliterator . estimate Size (  ) , from Spliterator . characteristics (  )  &  (  Spliterator . ORDERED |  Spliterator . SIZED )  )  {         long index = 0 ;          @ Override         public boolean try Advance (  Consumer<? super R> action )  {             if  ( from Iterator . has Next (  )  )  {                 action . accept ( function . apply ( from Iterator . next (  ) , index++ )  )  ;                  return true ;              }             return false ;          }     }, is Parallel )  . on Close ( stream::close )  ;  } class  Splitr extends  Map With Index Spliterator< Spliterator<T>, R,  Splitr> implements  Consumer<T> {     @ Nullable     T holder ;       Splitr (  Spliterator<T> splitr, long index )  {         super ( splitr, index )  ;      }     @ Override     public void accept ( @ Nullable T t )  {         this . holder = t ;      }     @ Override     public boolean try Advance (  Consumer<? super R> action )  {         if  ( from Spliterator . try Advance ( this )  )  {             try {                 action . accept ( function . apply ( holder, index++ )  )  ;                  return true ;              } finally {                 holder = null ;              }         }         return false ;      }     @ Override      Splitr create Split (  Spliterator<T> from, long i )  {         return new  Splitr ( from, i )  ;      } } return  Stream Support . stream ( new  Splitr ( from Spliterator, 0 ) , is Parallel )  . on Close ( stream::close )  ; }"
6792,"public void write Header Part (  Annotated Output out ) { throw If Not Prepared (  )  ;  if  ( write Size == -1 )  {     throw new  Runtime Exception ( ""write size not yet set"" )  ;  } int sz = write Size ;  int offset =  ( sz == 0 )  ? 0 : get File Offset (  )  ;   String name = get Name (  )  ;  if  ( name == null )  {     name = ""<unnamed>"" ;  } int space Count = 15 - name . length (  )  ;  char [  ]  space Arr = new char [ space Count ]  ;   Arrays . fill ( space Arr, ' ' )  ;   String spaces = new  String ( space Arr )  ;  if  ( out . annotates (  )  )  {     out . annotate ( 4, name + ""_size:"" + spaces +  Hex . u4 ( sz )  )  ;      out . annotate ( 4, name + ""_off: "" + spaces +  Hex . u4 ( offset )  )  ;  } out . write Int ( sz )  ;  out . write Int ( offset )  ; }"
6793,"private  Register Spec List get Sources ( int opcode, int stack Pointer ) { int count = arg Count (  )  ;  if  ( count == 0 )  {     //  We get an easy out if there aren't any sources .      return  Register Spec List . EMPTY ;  } int local Index = get Local Index (  )  ;   Register Spec List sources ;  if  ( local Index >= 0 )  {     //  The instruction is operating on a local variable .      sources = new  Register Spec List ( 1 )  ;      sources . set ( 0,  Register Spec . make ( local Index, arg ( 0 )  )  )  ;  } else {     sources = new  Register Spec List ( count )  ;      int reg At = stack Pointer ;      for  ( int i = 0 ;  i < count ;  i++ )  {          Register Spec spec =  Register Spec . make ( reg At, arg ( i )  )  ;          sources . set ( i, spec )  ;          reg At += spec . get Category (  )  ;      }     switch ( opcode )  {         case  Byte Ops . IASTORE:             {                 /*                  *  The  Java argument order for array stores is                  *  ( array, index, value ) , but the rop argument                  * order is  ( value, array, index )  .   The following                  * code gets the right arguments in the right                  * places .                   */                 if  ( count != 3 )  {                     throw new  Runtime Exception ( ""shouldn't happen"" )  ;                  }                  Register Spec array = sources . get ( 0 )  ;                   Register Spec index = sources . get ( 1 )  ;                   Register Spec value = sources . get ( 2 )  ;                  sources . set ( 0, value )  ;                  sources . set ( 1, array )  ;                  sources . set ( 2, index )  ;                  break ;              }         case  Byte Ops . PUTFIELD:             {                 /*                  *  Similar to above:  The  Java argument order for                  * putfield is  ( object, value ) , but the rop                  * argument order is  ( value, object )  .                   */                 if  ( count != 2 )  {                     throw new  Runtime Exception ( ""shouldn't happen"" )  ;                  }                  Register Spec obj = sources . get ( 0 )  ;                   Register Spec value = sources . get ( 1 )  ;                  sources . set ( 0, value )  ;                  sources . set ( 1, obj )  ;                  break ;              }     } } sources . set Immutable (  )  ;  return sources ; }"
6794,"public com . anychart . core . ui .  Legend Item font Style ( com . anychart . graphics . vector . text .  Font Style style ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Style ( %s )  ; "",  ( style != null )  ? style . get Js Base (  )  : null )  )  ;  return this ; }"
6795,public void edit (  Cast c )  throws  Cannot Compile Exception{}
6796,"public com . anychart . core . gantt . elements .  Progress Element fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
6797,"public void to A11y Table (  String title,  Boolean as String ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to A11y Table ( %s, %s )  ; "", wrap Quotes ( title ) , as String )  )  ; }"
6798,"private void sort ( float [  ]  values, int count ) { int lower = 0 ;  int upper = count - 1 ;   Int Array stack = quicksort Stack ;  stack . add ( lower )  ;  stack . add ( upper - 1 )  ;  while  ( stack . size > 0 )  {     upper = stack . pop (  )  ;      lower = stack . pop (  )  ;      if  ( upper <= lower )          continue ;      int i = quicksort Partition ( values, lower, upper )  ;      if  ( i - lower > upper - i )  {         stack . add ( lower )  ;          stack . add ( i - 2 )  ;      }     stack . add ( i + 2 )  ;      stack . add ( upper )  ;      if  ( upper - i >= i - lower )  {         stack . add ( lower )  ;          stack . add ( i - 2 )  ;      } }}"
6799,public int get Http Version Major (  ) { return http Version Major ; }
6800,private static int adjust Target Density For Error ( double adjusted Scale Factor ) { int density Multiplier = get Density Multiplier ( adjusted Scale Factor )  ;  int target Density = round ( density Multiplier * adjusted Scale Factor )  ;  float scale Factor With Error = target Density /  ( float )  density Multiplier ;  double difference = adjusted Scale Factor / scale Factor With Error ;  return round ( difference * target Density )  ; }
6801,"protected void append Detail (  String Buffer buffer,  String field Name, double [  ]  array ) { buffer . append ( array Start )  ;  for  ( int i = 0 ;  i < array . length ;  i++ )  {     if  ( i > 0 )  {         buffer . append ( array Separator )  ;      }     append Detail ( buffer, field Name, array [ i ]  )  ;  } buffer . append ( array End )  ; }"
6802,"private static void apply Activity Info (  Activity activity,  Activity Info ai ) { //  Apply theme  ( 9 . 0 only )  if  (  Build . VERSION . SDK_INT >= 28 )  {      Reflect Accelerator . reset Resources And Theme ( activity, ai . get Theme Resource (  )  )  ;  } //  Apply window attributes  Window window = activity . get Window (  )  ;  window . set Soft Input Mode ( ai . soft Input Mode )  ;  activity . set Requested Orientation ( ai . screen Orientation )  ; }"
6803,public static  Comparator<double [  ] > lexicographical Comparator (  ) { return  Lexicographical Comparator . INSTANCE ; }
6804,"public com . anychart . core . cartesian . series .  Column3d min Point Length (  String length ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Point Length ( %s )  ; "", wrap Quotes ( length )  )  )  ;  return this ; }"
6805,public int get Item Count (  ) { return layout Manager == null ? 0 : layout Manager . get Item Count (  )  ; }
6806,"public com . anychart . core . gantt . elements .  Periods Element stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6807,"public  Data Source< Closeable Reference< Closeable Image>> fetch Decoded Image (  Image Request image Request,  Object caller Context,  Image Request .  Request Level lowest Permitted Request Level On Submit, @ Nullable  Request Listener request Listener ) { return fetch Decoded Image ( image Request, caller Context, lowest Permitted Request Level On Submit, request Listener, null )  ; }"
6808,"public static  String join (  List< String> list, char separator ) { return join ( list, new  String ( new char [  ]  { separator } )  )  ; }"
6809,public void set Object (  Object object ) { m Object = object ; }
6810,public long last Delta (  ) { return delta ; }
6811,"public com . anychart . charts .  Sparkline padding (  String value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, value4 )  )  ;  return this ; }"
6812,"public  List< File> print Config File (  File out Config File )  throws IO Exception{  List< String> configs =  Lists . new Array List (  )  ;   List< File> bundle Files =  Lists . new Array List (  )  ;  //awb Proguard for no lib, convenient for predex for  (  Awb Transform awb Transform : awb Transforms )  {      List< File> input Libraries =  Lists . new Array List (  )  ;       String name = awb Transform . get Awb Bundle (  )  . get Name (  )  ;       File obuscate Dir = new  File ( awb Obfuscated Dir, awb Transform . get Awb Bundle (  )  . get Name (  )  )  ;      obuscate Dir . mkdirs (  )  ;      if  ( null != awb Transform . get Input Dirs (  )  && awb Transform . get Input Dirs (  )  . size (  )  > 0 )  {         for  (  File dir : awb Transform . get Input Dirs (  )  )  {             if  ( dir . exists (  )  )  {                 configs . add ( INJARS_OPTION + "" "" + dir . get Absolute Path (  )  )  ;                   File obs Jar = new  File ( obuscate Dir, ""inputdir_"" + OBUSCATED_JAR )  ;                  input Libraries . add ( obs Jar )  ;                  configs . add ( OUTJARS_OPTION + "" "" + obs Jar . get Absolute Path (  )  )  ;              }         }     }      Set< String> class Names = new  Hash Set<> (  )  ;      for  (  File input Library : awb Transform . get Input Libraries (  )  )  {         configs . add ( INJARS_OPTION + "" "" + input Library . get Absolute Path (  )  )  ;          bundle Files . add ( input Library )  ;           String file Name = input Library . get Name (  )  ;          if  ( class Names . contains ( file Name )  )  {             file Name = ""a"" + class Names . size (  )  + ""_"" + file Name ;          }         class Names . add ( file Name )  ;           File obs Jar = new  File ( obuscate Dir, file Name )  ;          input Libraries . add ( obs Jar )  ;          configs . add ( OUTJARS_OPTION + "" "" + obs Jar . get Absolute Path (  )  )  ;      }     //            configs . add (  )  ;      awb Transform . set Input Files ( input Libraries )  ;      awb Transform . get Input Dirs (  )  . clear (  )  ;      awb Transform . get Input Libraries (  )  . clear (  )  ;      app Variant Output Context . get Awb Transform Map (  )  . put ( name, awb Transform )  ;  }  File Utils . write Lines ( out Config File, configs )  ;  return bundle Files ; }"
6813,"public com . anychart . core . cartesian . series .  Area3d error (  Number settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . error ( %s )  ; "", settings )  )  ;  return this ; }"
6814,"public com . anychart . core . grids .  Map palette ( com . anychart . palettes .  Distinct Colors settings ) { return new com . anychart . core . grids .  Map (  String . format (  Locale . US, js Base + "" . palette ( %s ) "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ; }"
6815,"public void send Reset Password Email (  String email )  throws  App Exception{  Util . check Empty ( email, ""email"" )  ;   Atomic Reference< App Exception> error = new  Atomic Reference<> ( null )  ;  call ( TYPE_SEND_RESET_PASSWORD_EMAIL, new  Os JNI Void Result Callback ( error ) , email )  ;   Result Handler . handle Result ( null, error )  ; }"
6816,"public int offset By Code Points ( int index, int code Point Offset ) { return  Character . offset By Code Points ( chars, 0, length, index, code Point Offset )  ; }"
6817,"private static  Optional< Path> get Cross Cell Path (  Path jar Absolute Path,  Cell Path Resolver resolver ) { // it doesn't have a mapping for :o for  (  Abs Path cell Root : resolver . get Known Roots (  )  )  {     if  ( jar Absolute Path . starts With ( cell Root . get Path (  )  )  )  {          Rel Path relative Path = cell Root . relativize ( jar Absolute Path )  ;           Optional< String> cell Name = resolver . get Canonical Cell Name ( cell Root )  ;          //  We use an absolute path to represent a path rooted in another cell          Abs Path cell Name Root = cell Root . get Root (  )  . resolve ( cell Name . or Else ( ROOT_CELL_IDENTIFIER )  )  ;          return  Optional . of ( cell Name Root . resolve ( relative Path )  . get Path (  )  )  ;      } } return  Optional . empty (  )  ; }"
6818,"public  Default Package Layout Pattern View Model_ on Bind (  On Model Bound Listener< Default Package Layout Pattern View Model_,  Default Package Layout Pattern View> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
6819,"public void append (  String Buffer buffer,  String field Name, byte [  ]  array,  Boolean full Detail ) { append Field Start ( buffer, field Name )  ;  if  ( array == null )  {     append Null Text ( buffer, field Name )  ;  } else if  ( is Full Detail ( full Detail )  )  {     append Detail ( buffer, field Name, array )  ;  } else {     append Summary ( buffer, field Name, array )  ;  } append Field End ( buffer, field Name )  ; }"
6820,"public com . anychart . charts .  Heat Map selected (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6821,"public static int get Permissions (  String file Path, int [  ]  out Permissions ) { try {     init Class (  )  ;      if  ( s Get Permission Method == null )  {         s Get Permission Method =  Reflect Utils . get Method ( s File Utils Class, ""get Permissions"",  String . class, int [  ]  . class )  ;      }      Object ret Obj = s Get Permission Method . invoke ( null, file Path, out Permissions )  ;      if  ( ret Obj != null && ret Obj instanceof  Integer )  {         return  ( int )  ret Obj ;      } } catch  (  Class Not Found Exception e )  {     e . print Stack Trace (  )  ;  } catch  (  Invocation Target Exception e )  {     e . print Stack Trace (  )  ;  } catch  (  Illegal Access Exception e )  {     e . print Stack Trace (  )  ;  } return -1 ; }"
6822,"public  Builder listener ( @ Non Null  Listener listener ) { check Not Null ( listener, ""listener == null"" )  ;  this . listener = listener ;  return this ; }"
6823,public  List< Abt Experiment Info> get All Experiments (  )  throws  Abt Exception{ throw Abt Exception If Analytics Is Null (  )  ;   List< Conditional User Property> experiments In Analytics = get All Experiments In Analytics (  )  ;   List< Abt Experiment Info> experiment Infos = new  Array List<> (  )  ;  for  (  Conditional User Property experiment In Analytics : experiments In Analytics )  {     experiment Infos . add (  Abt Experiment Info . from Conditional User Property ( experiment In Analytics )  )  ;  } return experiment Infos ; }
6824,"private void assert Read Nothing ( boolean format Required ) { clear Format Holder And Input Buffer (  )  ;  int result = sample Queue . read ( format Holder, input Buffer, format Required, false, 0 )  ;  assert That ( result )  . is Equal To ( RESULT_NOTHING_READ )  ;  // format Holder should not be populated .  assert That ( format Holder . format )  . is Null (  )  ;  // input Buffer should not be populated .  assert Input Buffer Contains No Sample Data (  )  ;  assert Input Buffer Has No Default Flags Set (  )  ; }"
6825,public void set Up (  )  throws  Exception{  Recording Logger . clear (  )  ;  log . clear (  )  ;  server . start (  )  ;  config . set Secure Port ( get Secure Port (  )  )  ;  if  ( secure Config != null )  {     secure Config . set Secure Port ( get Secure Port (  )  )  ;  }}
6826,private boolean can Refresh ( boolean from Touch ) { return !m Is Refreshing &&  ( !from Touch || m On Refresh Listener != null )  ; }
6827,"public static void add ( @ Non Null final  Fragment Manager fm, @ Non Null final  Fragment add, @ Id Res final int container Id, final  String tag, final boolean is Hide ) { add ( fm, add, container Id, tag, is Hide, false )  ; }"
6828,"final  Message parse Mesh Message ( @ Non Null final  Network Key key, @ Non Null final  Provisioned Mesh Node node, @ Non Null final byte [  ]  data, @ Non Null final byte [  ]  network Header, @ Non Null final byte [  ]  decrypted Network Payload, final int iv Index, @ Non Null final byte [  ]  sequence Number )  throws  Extended Invalid Cipher Text Exception{ m Mesh Node = node ;  final  Provisioner provisioner = m Network Layer Callbacks . get Provisioner (  )  ;  final int ctl Ttl = network Header [ 0 ]  ;  final int ctl =  ( ctl Ttl >> 7 )  & 0x01 ;  final int ttl = ctl Ttl & 0x7 F ;   Log . v ( TAG, ""TTL for received message: "" + ttl )  ;  final int src =  Mesh Parser Utils . unsigned Bytes To Int ( network Header [ 5 ] , network Header [ 4 ]  )  ;  if  ( ctl == 1 )  {     return parse Control Message ( key, provisioner . get Provisioner Address (  ) , data, network Header, decrypted Network Payload, src, sequence Number )  ;  } else {     return parse Access Message ( key, data, network Header, decrypted Network Payload, src, sequence Number, iv Index )  ;  }}"
6829,"private  Immutable Set< Element> safe Init By Callee Before (  Tree Path path To Read,  Visitor State state,  Tree Path enclosing Block Path ) {  Set< Element> safe Init Methods = new  Linked Hash Set<> (  )  ;   Tree enclosing Block Or Method = enclosing Block Path . get Leaf (  )  ;  if  ( enclosing Block Or Method instanceof  Variable Tree )  {     return  Immutable Set . of (  )  ;  }  Immutable Set .  Builder< Element> result Builder =  Immutable Set . builder (  )  ;   Block Tree block Tree = enclosing Block Or Method instanceof  Block Tree ?  (  Block Tree )  enclosing Block Or Method :  (  (  Method Tree )  enclosing Block Or Method )  . get Body (  )  ;   List<? extends  Statement Tree> statements = block Tree . get Statements (  )  ;   Tree read Expr Tree = path To Read . get Leaf (  )  ;  int read Start Pos = get Start Pos (  ( JC Tree )  read Expr Tree )  ;   Tree Path class Tree Path = enclosing Block Path ;  // look for the parent  Class Tree node, which represents the enclosing class / enum / interface while  ( ! ( class Tree Path . get Leaf (  )  instanceof  Class Tree )  )  {     class Tree Path = class Tree Path . get Parent Path (  )  ;      if  ( class Tree Path == null )  {         throw new  Illegal State Exception ( ""could not find enclosing class / enum / interface for "" + state . get Source For Node ( enclosing Block Path . get Leaf (  )  )  )  ;      } }  Symbol .  Class Symbol class Symbol = AST Helpers . get Symbol (  (  Class Tree )  class Tree Path . get Leaf (  )  )  ;  for  ( int i = 0 ;  i < statements . size (  )  ;  i++ )  {      Statement Tree cur Stmt = statements . get ( i )  ;      if  ( get Start Pos (  ( JC Tree )  cur Stmt )  <= read Start Pos )  {          Element priv Method Elem = get Invoke Of Safe Init Method ( cur Stmt, class Symbol, state )  ;          if  ( priv Method Elem != null )  {             safe Init Methods . add ( priv Method Elem )  ;          }         //  Hack:  Handling try{ .  .  . }finally{ .  .  . } statement, see get Safe Init Methods         if  ( cur Stmt . get Kind (  )  . equals (  Tree .  Kind . TRY )  )  {              Try Tree try Tree =  (  Try Tree )  cur Stmt ;              // that initialization?             if  ( try Tree . get Catches (  )  . size (  )  == 0 )  {                 if  ( try Tree . get Block (  )  != null )  {                     result Builder . add All ( safe Init By Callee Before ( path To Read, state, new  Tree Path ( enclosing Block Path, try Tree . get Block (  )  )  )  )  ;                  }                 if  ( try Tree . get Finally Block (  )  != null )  {                     result Builder . add All ( safe Init By Callee Before ( path To Read, state, new  Tree Path ( enclosing Block Path, try Tree . get Finally Block (  )  )  )  )  ;                  }             }         }     } } add Guaranteed Non Null From Invokes ( state, get Trees Instance ( state ) , safe Init Methods, get Nullness Analysis ( state ) , result Builder )  ;  return result Builder . build (  )  ; }"
6830,"public void hide (  ) { set Visibility ( GONE )  ;  set Loading Showing ( false )  ;  set Title Text ( null )  ;  set Detail Text ( null )  ;  set Button ( null, null )  ; }"
6831,public  Person Ident committer (  ) { return committer ; }
6832,"public static int get Pixel Size For Bitmap Config (  Bitmap .  Config bitmap Config ) { switch ( bitmap Config )  {     case ARGB_8888:         return ARGB_8888_BYTES_PER_PIXEL ;      case ALPHA_8:         return ALPHA_8_BYTES_PER_PIXEL ;      case ARGB_4444:         return ARGB_4444_BYTES_PER_PIXEL ;      case RGB_565:         return RGB_565_BYTES_PER_PIXEL ;      case RGBA_F16:         return RGBA_F16_BYTES_PER_PIXEL ;      case HARDWARE:         //  We assume ARGB_8888 is used underneath         return ARGB_8888_BYTES_PER_PIXEL ;  } throw new  Unsupported Operation Exception ( "" The provided  Bitmap .  Config is not supported"" )  ; }"
6833,public synchronized void server Request (  Request request ) { if  ( last Served Id >= SERVERS . size (  )  )  {     last Served Id = 0 ;  } var server = SERVERS . get ( last Served Id++ )  ;  server . serve ( request )  ; }
6834,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
6835,public static int get Trans Mic Length ( final int aszmic ) { if  ( aszmic == 0 )  {     //length ;      return 4 ;  } else {     //length     return 8 ;  }}
6836,void assign Coordinate From Padding (  ) { m Coordinate = m Layout From End ? m Orientation Helper . get End After Padding (  )  : m Orientation Helper . get Start After Padding (  )  ; }
6837,"public static void remove ( @ Non Null  String key ) { remove ( key, get Default Cache Double Utils (  )  )  ; }"
6838,"public void generate Awb Artifict ( final  Zip bundle Task,  Lib Variant Context lib Variant Output Data ) {  Project project = bundle Task . get Project (  )  ;  bundle Task . set Extension ( ""awb"" )  ;  if  ( bundle Task instanceof  Android Zip )  {      String file Name =  Filename Utils . get Base Name ( bundle Task . get Archive Name (  )  )  + "" . awb"" ;       (  (  Android Zip )  bundle Task )  . set Archive Name Supplier (  (  )  -> file Name )  ;  } bundle Task . set Destination Dir ( new  File ( bundle Task . get Destination Dir (  )  . get Parent File (  ) , ""awb"" )  )  ;   File dest Dir = lib Variant Output Data . get Scope (  )  . get Base Bundle Dir (  )  ;  bundle Task . do First (  task -> {      File bundle Base Info File = project . file ( ""bundle Base Info File . json"" )  ;       File custom Bundle Id File = project . file ( ""custom Package ID . txt"" )  ;      if  ( bundle Base Info File . exists (  )  )  {         project . get Logger (  )  . warn ( ""copy "" + bundle Base Info File . get Absolute Path (  )  + "" to awb"" )  ;          try {              File Utils . copy File To Directory ( bundle Base Info File, dest Dir )  ;          } catch  ( IO Exception e )  {             throw new  Gradle Exception ( e . get Message (  ) , e )  ;          }     }     if  ( custom Bundle Id File . exists (  )  )  {         try {              File Utils . copy File To Directory ( custom Bundle Id File, dest Dir )  ;          } catch  ( IO Exception e )  {             throw new  Gradle Exception ( e . get Message (  ) , e )  ;          }     } } )  ;  bundle Task . do Last (  task -> {      File output File = new  File ( bundle Task . get Destination Dir (  ) , bundle Task . get Archive Name (  )  )  ;      if  ( !output File . exists (  )  )  {         return ;      }     if  ( atlas Extension . get Bundle Config (  )  . is Awb Bundle (  )  )  {         try {              File Utils . copy File ( output File, new  File ( new  File ( bundle Task . get Destination Dir (  )  . get Parent File (  ) , ""aar"" ) ,  Filename Utils . get Base Name ( bundle Task . get Archive Name (  )  )  + "" . aar"" )  )  ;          } catch  ( IO Exception e )  {             e . print Stack Trace (  )  ;          }     } } )  ; }"
6839,public static int get Network Type (  Context context ) {  Connectivity Manager connectivity Manager =  (  Connectivity Manager )  context . get System Service (  Context . CONNECTIVITY_SERVICE )  ;   Network Info network Info = connectivity Manager == null ? null : connectivity Manager . get Active Network Info (  )  ;  return network Info == null ? -1 : network Info . get Type (  )  ; }
6840,"public  Single< Issue> refresh Issue (  Repository repository, int issue Number ) { return service . get Issue ( repository . owner (  )  . login (  ) , repository . name (  ) , issue Number )  . map (  response -> add Issue Or Throw ( repository, response, R . string . error_issue_load )  )  ; }"
6841,"public com . anychart . core . stock .  Plot data Area (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . data Area ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
6842,"public  Int List label To Predecessors ( int label ) { if  ( exit Predecessors == null )  {     calc Predecessors (  )  ;  }  Int List result = predecessors [ label ]  ;  if  ( result == null )  {     throw new  Runtime Exception ( ""no such block: "" +  Hex . u2 ( label )  )  ;  } return result ; }"
6843,"public com . anychart . core . stock . scrollerseries . OHLC min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
6844,"public static  Thrift Response read From Stream (  Data Input Stream raw Body Stream,  Thrift Protocol protocol,  Hybrid Thrift Response Handler< Thrift Response> response Handler )  throws IO Exception{  Thrift Response thrift Response = response Handler . get Response (  )  ;  int thrift Data Size Bytes = raw Body Stream . read Int (  )  ;   Preconditions . check State ( thrift Data Size Bytes >= 0, "" Field thrift Data Size Bytes must be non-negative .   Found  [ %d ]  . "", thrift Data Size Bytes )  ;  //  Byte Streams . limit (  .  .  )  closes the inner stream but we do not want that as we want to first // read/parse the metadata thrift, then read each of the individual payloads, never closing the // underlying raw Body Stream .   Input Stream body Stream = non Closeable Stream ( raw Body Stream )  ;   Thrift Util . deserialize ( protocol,  Byte Streams . limit ( non Closeable Stream ( body Stream ) , thrift Data Size Bytes ) , thrift Response )  ;  response Handler . on Response Parsed (  )  ;  int payload Count = response Handler . get Total Payloads (  )  ;  for  ( int i = 0 ;  i < payload Count ;  ++i )  {     long payload Size Bytes = response Handler . get Payload Size Bytes ( i )  ;       Preconditions . check State ( payload Size Bytes > 0, "" All  Hybrid Thrift payloads must have a positive number of bytes instead of  [ %d bytes ]  . "", payload Size Bytes )  ;      try  (  Output Stream out Stream = response Handler . get Stream For Payload ( i )  )  {          Byte Streams . copy (  Byte Streams . limit ( body Stream, payload Size Bytes ) , out Stream )  ;      } } return thrift Response ; }"
6845,public  Drawable get Current Drawable (  ) { return view . get Drawable (  )  ; }
6846,public  Builder set Quote Color ( @ Color Int int color ) { this . quote Color = color ;  return this ; }
6847,public long get Count Of Bitmap Index Misses (  ) { return count Of Bitmap Index Misses ; }
6848,"protected  Bitmap alloc ( int size ) { return  Bitmap . create Bitmap ( 1,  ( int )   Math . ceil ( size /  ( double )   Bitmap Util . RGB_565_BYTES_PER_PIXEL ) ,  Bitmap .  Config . RGB_565 )  ; }"
6849,"public static void consume ( long presentation Time Us,  Parsable Byte Array sei Buffer,  Track Output [  ]  outputs ) { while  ( sei Buffer . bytes Left (  )  > 1 )  /* last byte will be rbsp_trailing_bits */ {     int payload Type = read Non255 Terminated Value ( sei Buffer )  ;      int payload Size = read Non255 Terminated Value ( sei Buffer )  ;      int next Payload Position = sei Buffer . get Position (  )  + payload Size ;      //  Process the payload .      if  ( payload Size == -1 || payload Size > sei Buffer . bytes Left (  )  )  {         //  This might occur if we're trying to read an encrypted SEI NAL unit .           Log . w ( TAG, "" Skipping remainder of malformed SEI NAL unit . "" )  ;          next Payload Position = sei Buffer . limit (  )  ;      } else if  ( payload Type == PAYLOAD_TYPE_CC && payload Size >= 8 )  {         int country Code = sei Buffer . read Unsigned Byte (  )  ;          int provider Code = sei Buffer . read Unsigned Short (  )  ;          int user Identifier = 0 ;          if  ( provider Code == PROVIDER_CODE_ATSC )  {             user Identifier = sei Buffer . read Int (  )  ;          }         int user Data Type Code = sei Buffer . read Unsigned Byte (  )  ;          if  ( provider Code == PROVIDER_CODE_DIRECTV )  {             // user_data_length .              sei Buffer . skip Bytes ( 1 )  ;          }         boolean message Is Supported Cea Caption = country Code == COUNTRY_CODE &&  ( provider Code == PROVIDER_CODE_ATSC || provider Code == PROVIDER_CODE_DIRECTV )  && user Data Type Code == USER_DATA_TYPE_CODE_MPEG_CC ;          if  ( provider Code == PROVIDER_CODE_ATSC )  {             message Is Supported Cea Caption &= user Identifier == USER_DATA_IDENTIFIER_GA94 ;          }         if  ( message Is Supported Cea Caption )  {             consume Cc Data ( presentation Time Us, sei Buffer, outputs )  ;          }     }     sei Buffer . set Position ( next Payload Position )  ;  }}"
6850,View Manager get View Manager If Exists (  String class Name ) {  View Manager view Manager = m View Managers . get ( class Name )  ;  if  ( view Manager != null )  {     return view Manager ;  } if  ( m View Manager Resolver != null )  {     return get View Manager From Resolver ( class Name )  ;  } return null ; }
6851,"public com . anychart . core . stock . scrollerseries .  Candlestick rising Hatch Fill (  String rising Hatch Fill Function ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rising Hatch Fill ( %s )  ; "", wrap Quotes ( rising Hatch Fill Function )  )  )  ;  return this ; }"
6852,public void set Version ( int version ) { this . version = version ; }
6853,"private void perform Acquire Token Request ( final  Callback Handler callback Handle, final I Window Component activity, final boolean use Dialog, final  Authentication Request authentication Request )  throws  Authentication Exception{ // try Acquire Token Silent will: // 1 )  throw  Authentication Exception if //    a )   No access token is returned from local flow and no prompt is allowed //    b )   Server error or network errors when sending post request to token endpoint with grant_type //       as refresh_token in local flow or with grant type as assertion //    c )   Broker returns ERROR_CODE_BAD_ARGUMENTS, ACCOUNT_MANAGER_ERROR_CODE_BAD_AUTHENTICATION //       or ERROR_CODE_UNSUPPORTED_OPERATION // 2 )   Non-null  Authentication Result if we could try silent request, and silent request either successfully //    return the token back or returns the  Authentication Result containing oauth error // 3 )   Null  Authentication Result if //    a )  we cannot try silent request //    b )  silent request returns a null result .   Broker will return a null result if 1 )  no matching account in //       broker 2 )  broker doesn't return any token back .  final  String method Name = "":perform Acquire Token Request"" ;  final  Authentication Result authentication Result From Silent Request = try Acquire Token Silent ( authentication Request )  ;  if  ( is Access Token Returned ( authentication Result From Silent Request )  )  {     m API Event . set Was Api Call Successful ( true, null )  ;      m API Event . set Correlation Id ( authentication Request . get Correlation Id (  )  . to String (  )  )  ;      m API Event . set Id Token ( authentication Result From Silent Request . get Id Token (  )  )  ;      m API Event . stop Telemetry And Flush (  )  ;      callback Handle . on Success ( authentication Result From Silent Request )  ;      return ;  }  Logger . d ( TAG + method Name, "" Trying to acquire token interactively . "" )  ;  acquire Token Interactive Flow ( callback Handle, activity, use Dialog, authentication Request )  ; }"
6854,public static boolean is Pull Request ( final  Issue issue ) { return issue != null && issue . pull Request (  )  != null && ! Text Utils . is Empty ( issue . pull Request (  )  . html Url (  )  )  ; }
6855,public T get Or Throw (  ) { try {     return get (  )  ;  } catch  (  Interrupted Exception |  Execution Exception e )  {     throw new  Runtime Exception ( e )  ;  }}
6856,"public void twitter (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . twitter (  )  ; "" )  ; }"
6857,"protected void handle Flow_ First Load (  ) { synchronized  ( web Response Lock )  {     pending Web Resource Stream = server . get Response Stream ( was Intercept Invoked )  ;  } if  ( null == pending Web Resource Stream )  {      Sonic Utils . log ( TAG,  Log . ERROR, ""session ( "" + s Id + "" )  handle Flow_ First Load error:server . get Response Stream is null!"" )  ;      return ;  }  Message msg = main Handler . obtain Message ( CLIENT_MSG_NOTIFY_RESULT )  ;  msg . arg1 = msg . arg2 = SONIC_RESULT_CODE_FIRST_LOAD ;   String html String = server . get Response Data ( false )  ;  if  ( ! Text Utils . is Empty ( html String )  )  {     try {         msg . arg2 = SONIC_RESULT_CODE_HIT_CACHE ;           Sonic Utils . log ( TAG,  Log . INFO, ""session ( "" + s Id + "" )  handle Flow_ First Load:oh yeah, first load hit 304 . "" )  ;      } catch  (  Throwable e )  {         synchronized  ( web Response Lock )  {             pending Web Resource Stream = null ;          }          Sonic Utils . log ( TAG,  Log . ERROR, ""session ( "" + s Id + "" )  handle Flow_ First Load error:"" + e . get Message (  )  + "" . "" )  ;      } } is Cache Pending Stream . set ( false )  ;  main Handler . send Message ( msg )  ;  for  (  Weak Reference< Sonic Session Callback> ref : session Callback List )  {      Sonic Session Callback callback = ref . get (  )  ;      if  ( callback != null )  {         callback . on Session First Load ( html String )  ;      } } boolean has Cache Data = ! Text Utils . is Empty ( html String )  ;   Sonic Utils . log ( TAG,  Log . INFO, ""session ( "" + s Id + "" )  handle Flow_ First Load:has Cache Data="" + has Cache Data + "" . "" )  ;   String cache Offline = server . get Response Header Field (  Sonic Session Connection . CUSTOM_HEAD_FILED_CACHE_OFFLINE )  ;  if  (  Sonic Utils . need Save Data ( config . SUPPORT_CACHE_CONTROL, cache Offline, server . get Response Header Fields (  )  )  )  {     if  ( has Cache Data )  {         switch State ( STATE_RUNNING, STATE_READY, true )  ;          post Task To Save Sonic Cache ( html String )  ;      } } else {      Sonic Utils . log ( TAG,  Log . INFO, ""session ( "" + s Id + "" )  handle Flow_ First Load:offline->"" + cache Offline + "" , so do not need cache to file . "" )  ;  }}"
6858,private void clear Streak (  ) { current Streak Type = null ;  current Streak Length = 0 ; }
6859,"private static  String resolve Field Numbers (  Optional< Descriptor> opt Descriptor,  String fmt,  Iterable< Integer> field Numbers ) { if  ( opt Descriptor . is Present (  )  )  {      Descriptor descriptor = opt Descriptor . get (  )  ;       List< String> strings =  Lists . new Array List (  )  ;      for  ( int field Number : field Numbers )  {          Field Descriptor field = descriptor . find Field By Number ( field Number )  ;          strings . add ( field != null ? field . to String (  )  :  String . format ( ""%d  ( ? ) "", field Number )  )  ;      }     return  String . format ( fmt, join ( strings )  )  ;  } else {     return  String . format ( fmt, join ( field Numbers )  )  ;  }}"
6860,byte [  ]  get Bytes Internal (  ) { return as Bytes (  )  ; }
6861,"public com . anychart . core . gantt . elements .  Milestones Element milestones (  ) { return new com . anychart . core . gantt . elements .  Milestones Element ( js Base + "" . milestones (  ) "" )  ; }"
6862,"public void align Maximum (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . align Maximum (  )  ; "" )  ; }"
6863,"private void add New Class Loader To System Class Loader With Base Dex (  Dex Class Loader new Class Loader,  Path Class Loader system Class Loader )  throws  No Such Field Exception,  Illegal Access Exception{  Object current Elements Array = get Dex Elements Array ( get Dex Path List ( system Class Loader )  )  ;   Object new Elements Array = get Dex Elements Array ( get Dex Path List ( new Class Loader )  )  ;   Object merged Elements Array = merge Arrays ( current Elements Array, new Elements Array )  ;  set Dex Elements Array ( get Dex Path List ( system Class Loader ) , merged Elements Array )  ; }"
6864,"public boolean add New Shard ( final  Shard shard ) { var shard Id = shard . get Id (  )  ;  if  ( !shard Map . contains Key ( shard Id )  )  {     shard Map . put ( shard Id, shard )  ;      return true ;  } else {     return false ;  }}"
6865,"public com . anychart . core . resource .  Grid even Holiday Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . even Holiday Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
6866,"public static void replace ( @ Non Null final  Fragment Manager fm, @ Non Null final  Fragment fragment, @ Id Res final int container Id, final boolean is Add Stack, @ Animator Res @ Anim Res final int enter Anim, @ Animator Res @ Anim Res final int exit Anim, @ Animator Res @ Anim Res final int pop Enter Anim, @ Animator Res @ Anim Res final int pop Exit Anim ) { replace ( fm, fragment, container Id, null, is Add Stack, enter Anim, exit Anim, pop Enter Anim, pop Exit Anim )  ; }"
6867,"public com . anychart . scales .  Ordinal names (  String names ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . names ( %s )  ; "", wrap Quotes ( names )  )  )  ;  return this ; }"
6868,public synchronized  Default Extractors Factory set Constant Bitrate Seeking Enabled ( boolean constant Bitrate Seeking Enabled ) { this . constant Bitrate Seeking Enabled = constant Bitrate Seeking Enabled ;  return this ; }
6869,public  String get Event Callback Path String (  Service service ) { return decoded Path + get Service Path ( service )  + EVENTS + CALLBACK_FILE ; }
6870,"public void import Package (  Context cx,  Scriptable this Obj,  Object [  ]  args,  Function fun Obj ) { js_import Package ( args )  ; }"
6871,"public static  Immutable Sorted Set< Path> list Matching Paths (  Path path To Glob,  String glob Pattern,  Path Modified Time Fetcher path Modified Time Fetcher )  throws IO Exception{ return list Matching Paths With Filters ( path To Glob, glob Pattern, path Modified Time Fetcher,  Filter Mode . INCLUDE,  Optional Int . empty (  ) ,  Optional . empty (  )  )  ; }"
6872,"public com . anychart . graphics . vector .  Circle circle (  Number cx,  Number cy,  Number radius ) { return new com . anychart . graphics . vector .  Circle (  String . format (  Locale . US, js Base + "" . circle ( %s, %s, %s ) "", cx, cy, radius )  )  ; }"
6873,public void set First Scene ( final int first Scene ) { this . first Scene = first Scene ; }
6874,public void set Drag Edges (  Drag Edge .  .  .  m Drag Edges ) { clear Drag Edge (  )  ;  set Drag Edges (  Arrays . as List ( m Drag Edges )  )  ; }
6875,"private int [  ]  pick Forced Local Address (  ) { int [  ]  ret = null ;   String aux =  System . get Property ( FTP Keys . ACTIVE_DT_HOST_ADDRESS )  ;  if  ( aux != null )  {     boolean valid = false ;       String Tokenizer st = new  String Tokenizer ( aux, "" . "" )  ;      if  ( st . count Tokens (  )  == 4 )  {         valid = true ;          int [  ]  arr = new int [ 4 ]  ;          for  ( int i = 0 ;  i < 4 ;  i++ )  {              String tk = st . next Token (  )  ;              try {                 arr [ i ]  =  Integer . parse Int ( tk )  ;              } catch  (  Number Format Exception e )  {                 arr [ i ]  = -1 ;              }             if  ( arr [ i ]  < 0 || arr [ i ]  > 255 )  {                 valid = false ;                  break ;              }         }         if  ( valid )  {             ret = arr ;          }     }     if  ( !valid )  {         // warning to the developer          System . err . println ( ""WARNING: invalid value \"""" + aux + ""\"" for the "" + FTP Keys . ACTIVE_DT_HOST_ADDRESS + "" system property .   The value should "" + ""be in the x . x . x . x form . "" )  ;      } } return ret ; }"
6876,public void set Orientation Option (  Orientation Option orientation Option ) { this . m Orientation Option = orientation Option ; }
6877,"private boolean sort Activities If Needed (  ) { if  ( m Activity Sorter != null && m Intent != null && !m Activities . is Empty (  )  && !m Historical Records . is Empty (  )  )  {     m Activity Sorter . sort ( m Intent, m Activities,  Collections . unmodifiable List ( m Historical Records )  )  ;      return true ;  } return false ; }"
6878,"public com . anychart . charts .  Linear Gauge height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
6879,"public com . anychart . core . polar . series .  Continuous Base parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
6880,"protected void on Codec Initialized (  String name, long initialized Timestamp Ms, long initialization Duration Ms ) {//  Do nothing . }"
6881,public void clear Was Invalidated (  ) { was Invalidated = false ; }
6882,"public SSL Context build (  ) { try {      Certificate Factory certificate Factory =  Certificate Factory . get Instance ( ""X . 509"" )  ;       Trust Manager Factory trust Manager Factory =  Trust Manager Factory . get Instance (  Trust Manager Factory . get Default Algorithm (  )  )  ;       Key Store key Store =  Key Store . get Instance (  Key Store . get Default Type (  )  )  ;      //  Use a null input stream + password to create an empty key store .      key Store . load ( null, null )  ;      //  Decode the certificates and add 'em to the key store .      int next Name = 1 ;      for  (  String certificate Base64 : certificate Base64s )  {          Buffer certificate Buffer = new  Buffer (  )  . write (  Byte String . decode Base64 ( certificate Base64 )  )  ;          X509 Certificate certificate =  ( X509 Certificate )  certificate Factory . generate Certificate ( certificate Buffer . input Stream (  )  )  ;          key Store . set Certificate Entry (  Integer . to String ( next Name++ ) , certificate )  ;      }     //  Create an SSL context that uses these certificates as its trust store .      trust Manager Factory . init ( key Store )  ;      SSL Context ssl Context = SSL Context . get Instance ( ""TLS"" )  ;      ssl Context . init ( null, trust Manager Factory . get Trust Managers (  ) , null )  ;      return ssl Context ;  } catch  (  General Security Exception e )  {     logger . e ( TAG, e . get Message (  ) , e )  ;  } catch  ( IO Exception e )  {     logger . e ( TAG, e . get Message (  ) , e )  ;  } return null ; }"
6883,"public  String translate Namespace Prefix To Uri (  String prefix ) { if  ( ""xml"" . equals ( prefix )  )  {     return ""http://www . w3 . org/XML/1998/namespace"" ;  }  Namespace Context context = get Namespace Context (  )  ;  if  ( context != null )  {     return context . translate Namespace Prefix To Uri ( prefix )  ;  } return null ; }"
6884,public static  Mutable Repository<T> mutable Repository ( @ Non Null final T object ) { return new  Simple Repository<> ( object )  ; }
6885,public long get Decode Position (  ) { return flac Get Decode Position ( native Decoder Context )  ; }
6886,"public void start (  ) { m Vibrator =  (  Vibrator )  m Context . get System Service (  Service . VIBRATOR_SERVICE )  ;  //  Setup a listener for changes in haptic feedback settings m Is Globally Enabled = check Global Setting ( m Context )  ;  m Has Permissions = check App Permissions ( m Context )  ;   Uri uri =  Settings .  System . get Uri For (  Settings .  System . HAPTIC_FEEDBACK_ENABLED )  ;  m Context . get Content Resolver (  )  . register Content Observer ( uri, false, m Content Observer )  ; }"
6887,"public com . anychart . core . annotations .  Trend Channel bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
6888,public final void set Priority ( @ Priority int priority ) { if  ( this . priority == priority )  {     return ;  } switch ( priority )  {     case  Notification Compat . PRIORITY_DEFAULT:     case  Notification Compat . PRIORITY_MAX:     case  Notification Compat . PRIORITY_HIGH:     case  Notification Compat . PRIORITY_LOW:     case  Notification Compat . PRIORITY_MIN:         this . priority = priority ;          break ;      default:         throw new  Illegal Argument Exception (  )  ;  } invalidate (  )  ; }
6889,public UUID get Uuid (  ) { return uuid ; }
6890,"public void on Channel Read Event (  Abstract Nio Channel channel,  Object read Object,  Selection Key key ) { /*  *  Calls the associated handler to notify the read event where application specific code  * resides .   */ channel . get Handler (  )  . handle Channel Read ( channel, read Object, key )  ; }"
6891,public synchronized void recycle (  ) { decoder Lock . write Lock (  )  . lock (  )  ;  try {     if  ( decoder Pool != null )  {         decoder Pool . recycle (  )  ;          decoder Pool = null ;          context = null ;          uri = null ;      } } finally {     decoder Lock . write Lock (  )  . unlock (  )  ;  }}
6892,public void set Fill After ( final boolean fill After ) { this . fill After = fill After ; }
6893,"public com . anychart . core .  State Settings median Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . median Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6894,public  Annotations get Annotations (  ) { return annotations . get Annotations (  )  ; }
6895,"public static int [  ]  get Int Array Value (  Annotation Mirror annotation,  String value Name ) { return get Annotation Values ( get Annotation Value ( annotation, value Name )  )  . stream (  )  . map To Int (  it ->  ( int )  it . get Value (  )  )  . to Array (  )  ; }"
6896,public  Text Prop Default View Model_ nullable Text With Default ( @ String Res int string Res ) { on Mutation (  )  ;  nullable Text With Default_ String Attribute Data . set Value ( string Res )  ;  return this ; }
6897,private void dispatch On Subscriptions Changed (  ) { for  (  On Subscriptions Changed Listener listener : listeners )  {     listener . on Subscriptions Changed (  )  ;  }}
6898,"public void fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . fill (  )  ; "" )  ; }"
6899,"public static  Contribution Type from Binding Element (  Element element ) { // TODO ( bcorso ) :  Replace these class references with  Class Name .  if  ( is Annotation Present ( element,  Into Map . class )  )  {     return  Contribution Type . MAP ;  } else if  ( is Annotation Present ( element,  Into Set . class )  )  {     return  Contribution Type . SET ;  } else if  ( is Annotation Present ( element,  Elements Into Set . class )  )  {     return  Contribution Type . SET_VALUES ;  } return  Contribution Type . UNIQUE ; }"
6900,"public void set Replacement (  String pkg,  String type,  String name,  Object replacement ) { int id = get Identifier ( name, type, pkg )  ;  if  ( id == 0 )      throw new  Not Found Exception ( pkg + "":"" + type + ""/"" + name )  ;  set Replacement ( id, replacement, this )  ; }"
6901,"private static  Class Name get Component Name (  Binding Graph graph,  Optional< Component Implementation> parent,  Component Names component Names ) { if  ( !parent . is Present (  )  )  {     return  Component Names . get Root Component Class Name ( graph . component Descriptor (  )  )  ;  }  Component Descriptor parent Descriptor = parent . get (  )  . graph . component Descriptor (  )  ;   Component Descriptor child Descriptor = graph . component Descriptor (  )  ;  check Argument ( parent Descriptor . child Components (  )  . contains ( child Descriptor ) , ""%s is not a child component of %s"", child Descriptor . type Element (  ) , parent Descriptor . type Element (  )  )  ;  // TODO ( erichang ) :  Hacky fix to shorten the suffix if we're too deeply // nested to save on file name length .  2 chosen arbitrarily .   String suffix = parent . get (  )  . name (  )  . simple Names (  )  . size (  )  > 2 ? ""I"" : "" Impl"" ;  return parent . get (  )  . name (  )  . nested Class ( component Names . get ( child Descriptor )  + suffix )  ; }"
6902,public int get Src (  ) { return m Message . get Src (  )  ; }
6903,public int get Transition Steps (  ) { return m Transition Steps ; }
6904,"public com . anychart . core . stock . scrollerseries .  Hilo parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
6905,"protected  Data Subscriber< Object> verify Get And Subscribe (  Supplier< Data Source< Object>> data Source Supplier,  Data Source< Object> underlying Data Source, boolean expect More Interactions ) { m In Order . verify ( data Source Supplier )  . get (  )  ;   Argument Captor< Data Subscriber> captor =  Argument Captor . for Class (  Data Subscriber . class )  ;  m In Order . verify ( underlying Data Source )  . subscribe ( captor . capture (  ) , any (  Executor . class )  )  ;  if  ( !expect More Interactions )  {     verify No More Interactions All (  )  ;  } return captor . get Value (  )  ; }"
6906,boolean is Component Builder (  ) { return !is Component (  )  ; }
6907,public  File user Home (  ) {  Holder< File> p = user Home ;  if  ( p == null )  {     p = new  Holder<> ( safe User Home Impl (  )  )  ;      user Home = p ;  } return p . value ; }
6908,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
6909,"public com . anychart . charts .  Sparkline select Marquee Stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
6910,public boolean has Playing Period (  ) { return playing != null ; }
6911,public  Root Host get Root Host (  ) { if  ( root Host == null )  {     root Host = new  Root Host View ( context )  ;  } return root Host ; }
6912,public void set Allow Touch Interception While Zoomed ( boolean allow Touch Interception While Zoomed ) { m Allow Touch Interception While Zoomed = allow Touch Interception While Zoomed ; }
6913,"public void add Network (  Network network,  Network Info network Info ) {  Shadow Network shadow Network =  Shadow . extract ( network )  ;  int net Id = shadow Network . get Net Id (  )  ;  net Id To Network . put ( net Id, network )  ;  net Id To Network Info . put ( net Id, network Info )  ; }"
6914,public final  Mat22 add Local ( final  Mat22 B ) { // ex . add Local ( B . ex )  ;  // col2 . add Local ( B . ey )  ;  ex . x += B . ex . x ;  ex . y += B . ex . y ;  ey . x += B . ey . x ;  ey . y += B . ey . y ;  return this ; }
6915,"public com . anychart . core . gantt . elements .  Grouping Tasks Element stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
6916,"public com . anychart . core . ui .  Label label (  Number index ) { return new com . anychart . core . ui .  Label (  String . format (  Locale . US, js Base + "" . label ( %s ) "", index )  )  ; }"
6917,public  Collection< Dfs Pack Description> get Source Packs (  ) {  Set< Dfs Pack Description> src = new  Hash Set<> (  )  ;  for  (  Dfs Pack File pack : src Packs )  {     src . add ( pack . get Pack Description (  )  )  ;  } for  (  Dfs Reftable table : src Reftables )  {     src . add ( table . get Pack Description (  )  )  ;  } return src ; }
6918,"public void set Decimal128 (  String field Name, @ Nullable  Decimal128 value ) { check Non Empty Field Name ( field Name )  ;  base Realm . check If Valid And In Transaction (  )  ;  field Name = map Field Name To Internal Name ( field Name )  ;  check Type ( field Name,  Realm Field Type . DECIMAL128 )  ;  os Results . set Decimal128 ( field Name, value )  ; }"
6919,public final void set Zero (  ) { x = 0 . 0f ;  y = 0 . 0f ; }
6920,public  Animation Builder with Duration ( long duration ) { this . duration = duration ;  return this ; }
6921,public  Ct Method [  ]  get Methods (  ) { return new  Ct Method [ 0 ]  ; }
6922,"private void save File (  String name,  Bitmap b, int quality ) {  File Output Stream fos = null ;   String file Name = get File Name ( name )  ;   File directory = new  File ( config . screenshot Save Path )  ;  directory . mkdir (  )  ;   File file To Save = new  File ( directory, file Name )  ;  try {     fos = new  File Output Stream ( file To Save )  ;      if  ( config . screenshot File Type ==  Screenshot File Type . JPEG )  {         if  ( b . compress (  Bitmap .  Compress Format . JPEG, quality, fos )  == false )  {              Log . d ( LOG_TAG, "" Compress/ Write failed"" )  ;          }     } else {         if  ( b . compress (  Bitmap .  Compress Format . PNG, quality, fos )  == false )  {              Log . d ( LOG_TAG, "" Compress/ Write failed"" )  ;          }     }     fos . flush (  )  ;      fos . close (  )  ;  } catch  (  Exception e )  {      Log . d ( LOG_TAG, "" Can't save the screenshot!  Requires write permission  ( android . permission . WRITE_EXTERNAL_STORAGE )  in  Android Manifest . xml of the application under test . "" )  ;      e . print Stack Trace (  )  ;  }}"
6923,"public void setup Inner View Elements (  View Group parent,  View view ) { // Add simple title to expand area if  ( view != null )  {      Text View m Title View =  (  Text View )  view . find View By Id ( R . id . card_expand_inner_simple_title )  ;      if  ( m Title View != null )          m Title View . set Text ( m Title )  ;  }}"
6924,"public  Model create Sphere ( float width, float height, float depth, int divisions U, int divisions V, final  Material material, final long attributes ) { return create Sphere ( width, height, depth, divisions U, divisions V, GL20 . GL_TRIANGLES, material, attributes )  ; }"
6925,public void hide (  ) { if  ( is Visible (  )  )  {     set Visibility ( GONE )  ;      if  ( visibility Listener != null )  {         visibility Listener . on Visibility Change ( get Visibility (  )  )  ;      }     remove Callbacks ( update Progress Action )  ;      remove Callbacks ( hide Action )  ;      hide At Ms = C . TIME_UNSET ;  }}
6926,"public static  Immutable List< String> get String Array Annotation Value (  Annotation Value value ) { return value . accept ( new  Simple Annotation Value Visitor7< Immutable List< String>,  Void> (  )  {     @ Override     public  Immutable List< String> default Action (  Object o,  Void unused )  {         throw new  Illegal State Exception ( "" Expected an array, got instead: "" + o )  ;      }     @ Override     public  Immutable List< String> visit Array (  List<? extends  Annotation Value> values,  Void unused )  {          Immutable List .  Builder< String> builder =  Immutable List . builder (  )  ;          for  (  Annotation Value value : values )  {             builder . add ( get String Annotation Value ( value )  )  ;          }         return builder . build (  )  ;      } }, /* unused accumulator */ null )  ; }"
6927,"public void min Point Length (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Point Length (  )  ; "" )  ; }"
6928,"public static  Vector2 polygon Centroid ( float [  ]  polygon, int offset, int count,  Vector2 centroid ) { if  ( count < 6 )      throw new  Illegal Argument Exception ( ""A polygon must have 3 or more coordinate pairs . "" )  ;  float area = 0, x = 0, y = 0 ;  int last = offset + count - 2 ;  float x1 = polygon [ last ] , y1 = polygon [ last + 1 ]  ;  for  ( int i = offset ;  i <= last ;  i += 2 )  {     float x2 = polygon [ i ] , y2 = polygon [ i + 1 ]  ;      float a = x1 * y2 - x2 * y1 ;      area += a ;      x +=  ( x1 + x2 )  * a ;      y +=  ( y1 + y2 )  * a ;      x1 = x2 ;      y1 = y2 ;  } if  ( area == 0 )  {     centroid . x = 0 ;      centroid . y = 0 ;  } else {     area *= 0 . 5f ;      centroid . x = x /  ( 6 * area )  ;      centroid . y = y /  ( 6 * area )  ;  } return centroid ; }"
6929,"final void unmask Bit Matrix (  Bit Matrix bits, int dimension ) { for  ( int i = 0 ;  i < dimension ;  i++ )  {     for  ( int j = 0 ;  j < dimension ;  j++ )  {         if  ( is Masked ( i, j )  )  {             bits . flip ( j, i )  ;          }     } }}"
6930,"private static int choose Next Selection ( int [  ]  all Required, int required From, int required To, int from, int to ) { if  ( required From == required To )  {     // only one thing to choose, so choose it     return required From ;  } //  Find the center and round down .   The true center is either center Floor or halfway between // center Floor and center Floor + 1 .  int center Floor =  ( from + to )  >>> 1 ;  //  Do a binary search until we're down to the range of two which encloses center Floor  ( unless // all values are lower or higher than center Floor, in which case we find the two highest or // lowest respectively )  .   If center Floor is in all Required, we will definitely find it .   If not, // but center Floor + 1 is, we'll definitely find that .   The closest value to the true  ( unrounded )  // center will be at either low or high .  int low = required From ;  int high = required To ;  while  ( high > low + 1 )  {     int mid =  ( low + high )  >>> 1 ;      if  ( all Required [ mid ]  > center Floor )  {         high = mid ;      } else if  ( all Required [ mid ]  < center Floor )  {         low = mid ;      } else {         // all Required [ mid ]  = center Floor, so we can't get closer than that         return mid ;      } } //  Now pick the closest of the two candidates .   Note that there is no rounding here .  if  ( from + to - all Required [ low ]  - all Required [ high ]  > 0 )  {     return high ;  } else {     return low ;  }}"
6931,"public boolean remove Net Key ( @ Non Null final  Network Key network Key )  throws  Illegal Argument Exception{ if  ( !is Key In Use ( network Key )  )  {     if  ( net Keys . remove ( network Key )  )  {         notify Net Key Deleted ( network Key )  ;          return true ;      } else {         throw new  Illegal Argument Exception ( "" Key does not exist . "" )  ;      } } throw new  Illegal Argument Exception ( "" Unable to delete a network key that's already in use . "" )  ; }"
6932,"public com . anychart . core . gauge . pointers .  Base id (  String id ) { return new com . anychart . core . gauge . pointers .  Base (  String . format (  Locale . US, js Base + "" . id ( %s ) "", wrap Quotes ( id )  )  )  ; }"
6933,public boolean contains Value ( int value ) { K [  ]  key Table = this . key Table ;  int [  ]  value Table = this . value Table ;  for  ( int i = value Table . length - 1 ;  i >= 0 ;  i-- )  if  ( key Table [ i ]  != null && value Table [ i ]  == value )      return true ;  return false ; }
6934,public URI expand (  Object .  .  .  uri Variable Values ) {  Uri Components expanded Components = this . uri Components . expand ( uri Variable Values )  ;   Uri Components encoded Components = expanded Components . encode (  )  ;  return encoded Components . to Uri (  )  ; }
6935,"public com . anychart . core . gantt . edit .  Element Edit stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6936,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
6937,public void set Multi Choice Mode Listener (  Abs List View .  Multi Choice Mode Listener multi Choice Mode Listener ) { m Multi Choice Mode Listener = multi Choice Mode Listener ; }
6938,"public  Audio Recording Configuration create Active Recording Configuration ( int session Id, int audio Source,  String client Package Name ) {  Parcel p =  Parcel . obtain (  )  ;  // m Session Id p . write Int ( session Id )  ;  // m Client Source p . write Int ( audio Source )  ;  // m Client Format write Mono16 Bit Audio Format To Parcel ( p )  ;  // m Device Format write Mono16 Bit Audio Format To Parcel ( p )  ;  // m Patch Handle p . write Int ( INVALID_PATCH_HANDLE )  ;  // m Client Package Name p . write String ( client Package Name )  ;  // m Client Uid p . write Int ( 0 )  ;  p . set Data Position ( 0 )  ;   Audio Recording Configuration configuration =  Audio Recording Configuration . CREATOR . create From Parcel ( p )  ;  p . recycle (  )  ;  return configuration ; }"
6939,public java . lang .  String get Tenant Id (  ) { java . lang .  Object ref = tenant Id_ ;  if  ( ref instanceof java . lang .  String )  {     return  ( java . lang .  String )  ref ;  } else {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      tenant Id_ = s ;      return s ;  }}
6940,"public static  Offline License Helper< Framework Media Crypto> new Widevine Instance (  String default License Url, boolean force Default License Url,  Factory http Data Source Factory )  throws  Unsupported Drm Exception{ return new Widevine Instance ( default License Url, force Default License Url, http Data Source Factory, null )  ; }"
6941,public  String get Phone Type (  ) { return android . os .  Build . MODEL ; }
6942,"public static  Multiset .  Entry<E> immutable Entry ( @ Nullable E e, int n ) { return new  Immutable Entry<E> ( e, n )  ; }"
6943,"public com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Ui Mode Type get Ui Mode Type (  ) { @ Suppress Warnings ( ""deprecation"" )  com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Ui Mode Type result = com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Ui Mode Type . value Of ( ui Mode Type_ )  ;  return result == null ? com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Ui Mode Type . UNRECOGNIZED : result ; }"
6944,public  String get Name (  ) { return m Field Name ; }
6945,"public com . anychart . core . cartesian . series .  Range Bar bounds ( com . anychart . utils .  Rect Obj bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
6946,"public com . anychart . charts .  Sankey height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
6947,"public static  String normalise (  String ens Name ) { try {     return IDN . to ASCII ( ens Name, IDN . USE_STD3_ASCII_RULES )  . to Lower Case (  )  ;  } catch  (  Illegal Argument Exception e )  {     throw new  Ens Resolution Exception ( "" Invalid ENS name provided: "" + ens Name )  ;  }}"
6948,public  List< Stored Entry> get Compressed Bitmaps (  ) { while  ( !bitmaps To Write Xor Buffer . is Empty (  )  )  {     bitmaps To Write . add ( generate Stored Entry ( bitmaps To Write Xor Buffer . poll First (  )  )  )  ;  }  Collections . reverse ( bitmaps To Write )  ;  return bitmaps To Write ; }
6949,"private boolean is View Collected (  ) { if  ( image Aware . is Collected (  )  )  {     L . d ( LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED, memory Cache Key )  ;      return true ;  } return false ; }"
6950,"public T get Value ( @ Non Null  Generic Type Indicator<T> t ) {  Object value = node . get Node (  )  . get Value (  )  ;  return  Custom Class Mapper . convert To Custom Class ( value, t )  ; }"
6951,public int get Int Bits (  ) { return 0 ; }
6952,public  Map With Proto Values Fluent Assertion<M> ignoring Repeated Field Order Of Field Descriptors For Values (  Iterable< Field Descriptor> field Descriptors ) { return using Config ( config . ignoring Repeated Field Order Of Field Descriptors ( field Descriptors )  )  ; }
6953,protected  String [  ]  get Parameters (  ) { return new  String [ 0 ]  ; }
6954,"public com . anychart . scales .  Ordinal start Auto Calc (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . start Auto Calc (  )  ; "" )  ;  return this ; }"
6955,"public boolean is Genrule Sandbox Enabled (  ) { return get Delegate (  )  . get Boolean Value ( SANDBOX_CONFIG_SECTION, ""genrule_sandbox_enabled"", false )  ; }"
6956,private static int snap Prefer30s ( int degrees ) { if  ( SNAP_PREFER_30 S_MAP == null )  {     return -1 ;  } return SNAP_PREFER_30 S_MAP [ degrees ]  ; }
6957,"public com . anychart . core . stock . series .  Base k Series (  ) { return new com . anychart . core . stock . series .  Base ( js Base + "" . k Series (  ) "" )  ; }"
6958,private static  Display Metrics get Metrics On Miui (  Resources resources ) { if  (  Auto Size Config . get Instance (  )  . is Miui (  )  &&  Auto Size Config . get Instance (  )  . get Tmp Metrics Field (  )  != null )  {     try {         return  (  Display Metrics )   Auto Size Config . get Instance (  )  . get Tmp Metrics Field (  )  . get ( resources )  ;      } catch  (  Exception e )  {         return null ;      } } return null ; }
6959,"public static byte [  ]  decode From File (  String filename )  throws java . io . IO Exception{ byte [  ]  decoded Data = null ;   Base64 .  Input Stream bis = null ;  try {     //  Set up some useful variables     java . io .  File file = new java . io .  File ( filename )  ;      byte [  ]  buffer = null ;      int length = 0 ;      int num Bytes = 0 ;      //  Check for size of file     if  ( file . length (  )  >  Integer . MAX_VALUE )  {         throw new java . io . IO Exception ( "" File is too big for this convenience method  ( "" + file . length (  )  + "" bytes )  . "" )  ;      }     // end if: file too big for int index     buffer = new byte [  ( int )  file . length (  )  ]  ;      //  Open a stream     bis = new  Base64 .  Input Stream ( new java . io .  Buffered Input Stream ( new java . io .  File Input Stream ( file )  ) ,  Base64 . DECODE )  ;      //  Read until done     while  (  ( num Bytes = bis . read ( buffer, length, 4096 )  )  >= 0 )  {         length += num Bytes ;      }     // end while     //  Save in a variable to return     decoded Data = new byte [ length ]  ;       System . arraycopy ( buffer, 0, decoded Data, 0, length )  ;  }// end try  catch  ( java . io . IO Exception e )  {     //  Catch and release to execute finally{}     throw e ;  } finally // end catch: java . io . IO Exception {     try {         bis . close (  )  ;      } catch  (  Exception e )  {     } } return decoded Data ; }"
6960,public boolean has Overlapping Rendering (  ) { return false ; }
6961,"public static void set Status (  String pn, int ver, int status ) { // 若要设置状态为“OK”，不管版本为何，都需删除此插件的状态记录（解禁） if  ( status == STATUS_OK )  {     if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, ""P Status C . set Status (  ) :  Status is OK,  Clear .  pn="" + pn + "" ;  ver="" + ver )  ;      }     remove Status To Pref ( s App Context, pn )  ;      return ;  }  Plugin Status ps = new  Plugin Status ( pn, ver, status )  ;  add Status To Pref ( s App Context, pn, ps . to Json String (  )  )  ;  if  ( LOG )  {      Log Debug . d ( PLUGIN_TAG, ""P Status C . set Status (  ) :  Set  Status, pn="" + pn + "" ;  ver="" + ver + "" ;  st="" + status )  ;  }}"
6962,"private static  String get Drawn View Description (  View view ) { final  Canvas canvas = new  Canvas (  )  ;  view . draw ( canvas )  ;  final  Shadow Canvas shadow Canvas =  Shadows . shadow Of ( canvas )  ;  if  ( !shadow Canvas . get Description (  )  . is Empty (  )  )  {     return shadow Canvas . get Description (  )  ;  } try {      Method on Draw = get On Draw Method ( view . get Class (  )  )  ;      if  ( on Draw == null )  {         throw new  Runtime Exception ( view . get Class (  )  . get Canonical Name (  )  + "" has no implementation of  View . on Draw (  ) , which should be impossible"" )  ;      }     on Draw . invoke ( view, canvas )  ;      final  Shadow Canvas shadow Canvas2 =  Shadows . shadow Of ( canvas )  ;      return shadow Canvas2 . get Description (  )  ;  } catch  (  Illegal Access Exception |  Invocation Target Exception e )  {     throw new  Runtime Exception ( e )  ;  }}"
6963,public UB Json Writer value ( short value )  throws IO Exception{ check Name (  )  ;  out . write Byte ( 'I' )  ;  out . write Short ( value )  ;  return this ; }
6964,"public com . anychart . core . stock . scrollerseries .  Range Area low Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
6965,"public void on Exceeded Database Quota (  String url,  String database Identifier, long current Quota, long estimated Size, long total Used Quota,  Web Storage .  Quota Updater quota Updater ) { LOG . d ( LOG_TAG, ""on Exceeded Database Quota estimated Size: %d  current Quota: %d  total Used Quota: %d"", estimated Size, current Quota, total Used Quota )  ;  quota Updater . update Quota ( MAX_QUOTA )  ; }"
6966,"public  Equals Builder append ( double [  ]  lhs, double [  ]  rhs ) { if  ( is Equals == false )  {     return this ;  } if  ( lhs == rhs )  {     return this ;  } if  ( lhs == null || rhs == null )  {     this . set Equals ( false )  ;      return this ;  } if  ( lhs . length != rhs . length )  {     this . set Equals ( false )  ;      return this ;  } for  ( int i = 0 ;  i < lhs . length && is Equals ;  ++i )  {     append ( lhs [ i ] , rhs [ i ]  )  ;  } return this ; }"
6967,"public void test No Crash If Analytics Is Missing At Runtime (  )  throws  Exception{ //  Remove the  Firebase  Component  Discovery to simulate  Analytics SDK not being built in the app .  context . get Package Manager (  )  . get Service Info ( new  Component Name (  Application Provider . get Application Context (  ) ,  Component Discovery Service . class ) ,  Package Manager . GET_META_DATA )  . meta Data . clear (  )  ;  //  Re  Init  Firebase set Up (  )  ;  //  Confirm that  Analytics and  Firelog are NOT available assert That (  Firebase App . get Instance (  )  . get (  Transport Factory . class )  )  . is Null (  )  ;  assert That (  Firebase App . get Instance (  )  . get (  Analytics Connector . class )  )  . is Null (  )  ;  //  Calling  Log Event methods should not crash the app  Intent intent = new  Intent (  )  ;  intent . put Extra ( ANALYTICS_COMPOSER_ID, ""composer_key"" )  ;   Messaging Analytics . log Notification Received ( intent )  ;   Messaging Analytics . log Notification Open ( intent )  ;   Messaging Analytics . log Notification Dismiss ( intent )  ; //  No  Exception is thrown = no crash, yeah}"
6968,"public static boolean write File From Bytes By Channel ( final  File file, final byte [  ]  bytes, final boolean is Force ) { return write File From Bytes By Channel ( file, bytes, false, is Force )  ; }"
6969,"public boolean breakpoint ( int line, boolean value ) { if  ( !breakable Line ( line )  )  {     throw new  Illegal Argument Exception (  String . value Of ( line )  )  ;  } boolean changed ;  synchronized  ( breakpoints )  {     if  ( breakpoints [ line ]  != value )  {         breakpoints [ line ]  = value ;          changed = true ;      } else {         changed = false ;      } } return changed ; }"
6970,public  String get Footer Default Text (  ) { return footer Default Text ; }
6971,"public com . anychart . core . lineargauge . pointers .  Tank fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
6972,"boolean select Drawable ( int index ) { if  ( index == m Cur Index )  {     return false ;  } final long now =  System Clock . uptime Millis (  )  ;  if  ( DEBUG )  {     android . util .  Log . i ( TAG, to String (  )  + "" from "" + m Cur Index + "" to "" + index + "": exit="" + m Drawable Container State . m Exit Fade Duration + "" enter="" + m Drawable Container State . m Enter Fade Duration )  ;  } if  ( m Drawable Container State . m Exit Fade Duration > 0 )  {     if  ( m Last Drawable != null )  {         m Last Drawable . set Visible ( false, false )  ;      }     if  ( m Curr Drawable != null )  {         m Last Drawable = m Curr Drawable ;          m Last Index = m Cur Index ;          m Exit Animation End = now + m Drawable Container State . m Exit Fade Duration ;      } else {         m Last Drawable = null ;          m Last Index = -1 ;          m Exit Animation End = 0 ;      } } else if  ( m Curr Drawable != null )  {     m Curr Drawable . set Visible ( false, false )  ;  } if  ( index >= 0 && index < m Drawable Container State . m Num Children )  {     final  Drawable d = m Drawable Container State . get Child ( index )  ;      m Curr Drawable = d ;      m Cur Index = index ;      if  ( d != null )  {         if  ( m Drawable Container State . m Enter Fade Duration > 0 )  {             m Enter Animation End = now + m Drawable Container State . m Enter Fade Duration ;          }         initialize Drawable For Display ( d )  ;      } } else {     m Curr Drawable = null ;      m Cur Index = -1 ;  } if  ( m Enter Animation End != 0 || m Exit Animation End != 0 )  {     if  ( m Animation Runnable == null )  {         m Animation Runnable = new  Runnable (  )  {             @ Override             public void run (  )  {                 animate ( true )  ;                  invalidate Self (  )  ;              }         } ;      } else {         unschedule Self ( m Animation Runnable )  ;      }     //  Compute first frame and schedule next animation .      animate ( true )  ;  } invalidate Self (  )  ;  return true ; }"
6973,"public com . anychart . core .  Chart padding (  Number value1,  String value2,  String value3,  String value4 ) { return new com . anychart . core .  Chart (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s ) "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ; }"
6974,"public com . anychart . core . cartesian . series .  Range Bar unselect (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unselect ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ;  return this ; }"
6975,public UI Config<T> set Interface Adapter (  Class<? extends  Interface Adapter> interface Adapter ) { this . interface Adapter = interface Adapter ;  return this ; }
6976,public  Model View Extending Super Class Model_ sub Class Value ( int sub Class Value ) { on Mutation (  )  ;  this . sub Class Value_ Int = sub Class Value ;  return this ; }
6977,public float get Max Scale Factor (  ) { return m Max Scale Factor ; }
6978,"public com . anychart . core . annotations .  Fibonacci Arc bounds (  Number x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
6979,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
6980,public static  String get Cache Path (  Context context ) { return context . get Cache Dir (  )  . get Absolute Path (  )  + AGENTWEB_CACHE_PATCH ; }
6981,"public  Credit Card set Card Radius ( float radius ) { if  ( radius <= 0 )  {      Log . e ( "" Card Radius"", "" Impossible to set  Card  Radius lower than 0!  Please  Check it"" )  ;  } else {     m Card Radius = radius ;  } return this ; }"
6982,private void update Sample Indices ( long time Us ) { for  (  Mp4 Track track : tracks )  {      Track Sample Table sample Table = track . sample Table ;      int sample Index = sample Table . get Index Of Earlier Or Equal Synchronization Sample ( time Us )  ;      if  ( sample Index == C . INDEX_UNSET )  {         //  Handle the case where the requested time is before the first synchronization sample .          sample Index = sample Table . get Index Of Later Or Equal Synchronization Sample ( time Us )  ;      }     track . sample Index = sample Index ;  }}
6983,"public static boolean is A Values Directory (  String directory Name ) { if  ( directory Name == null )  {     throw new  Null Pointer Exception ( ""directory Name can not be null"" )  ;  } return directory Name . equals ( ""values"" )  || directory Name . starts With ( ""values-"" )  ; }"
6984,public static void set Log Iml (  Share Tinker Log .  Tinker Log Imp imp ) {  Share Tinker Log . set Tinker Log Imp ( imp )  ; }
6985,public  Gif Error get Error (  ) { return  Gif Error . from Code ( m Native Info Handle . get Native Error Code (  )  )  ; }
6986,"public  Closing Future<V> call Async ( final  Async Combining Callable<V> combining Callable,  Executor executor ) {  Async Callable<V> async Callable = new  Async Callable<V> (  )  {     @ Override     public  Listenable Future<V> call (  )  throws  Exception {         return new  Peeker ( inputs )  . call Async ( combining Callable, closeables )  ;      }     @ Override     public  String to String (  )  {         return combining Callable . to String (  )  ;      } } ;   Closing Future<V> derived = new  Closing Future<> ( future Combiner (  )  . call Async ( async Callable, executor )  )  ;  derived . closeables . add ( closeables, direct Executor (  )  )  ;  return derived ; }"
6987,public void set On Prepared Listener ( I Media Player .  On Prepared Listener l ) { m On Prepared Listener = l ; }
6988,"public static  Annotation make Enclosing Method (  Cst Method Ref method ) {  Annotation result = new  Annotation ( ENCLOSING_METHOD_TYPE, SYSTEM )  ;  result . put ( new  Name Value Pair ( VALUE_STRING, method )  )  ;  result . set Immutable (  )  ;  return result ; }"
6989,"public static F setup Fragment ( F fragment,  Class<? extends  Fragment Activity> fragment Activity Class,  Bundle bundle ) { return  Support Fragment Controller . of ( fragment, fragment Activity Class )  . create ( bundle )  . start (  )  . resume (  )  . visible (  )  . get (  )  ; }"
6990,"public com . anychart . core . cartesian . series .  Column3d is Vertical (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . is Vertical ( %s )  ; "", enabled )  )  ;  return this ; }"
6991,public void set Progress Tint List ( @ Nullable  Color State List tint ) { log Progress Bar Tint Warning (  )  ;  set Support Progress Tint List ( tint )  ; }
6992,"void create Pinned Shadow ( int position ) { // try to recycle shadow  Pinned Section pinned Shadow = m Recycle Section ;  m Recycle Section = null ;  // create new shadow, if needed if  ( pinned Shadow == null )      pinned Shadow = new  Pinned Section (  )  ;  // request new view using recycled view, if such  View pinned View = get Adapter (  )  . get View ( position, pinned Shadow . view,  Pinned Section List View . this )  ;  // read layout parameters  View Group .  Layout Params layout Params = pinned View . get Layout Params (  )  ;  if  ( layout Params == null )  {     layout Params = generate Default Layout Params (  )  ;      pinned View . set Layout Params ( layout Params )  ;  } int height Mode =  Measure Spec . get Mode ( layout Params . height )  ;  int height Size =  Measure Spec . get Size ( layout Params . height )  ;  if  ( height Mode ==  Measure Spec . UNSPECIFIED )      height Mode =  Measure Spec . EXACTLY ;  int max Height = get Height (  )  - get List Padding Top (  )  - get List Padding Bottom (  )  ;  if  ( height Size > max Height )      height Size = max Height ;  // measure & layout int ws =  Measure Spec . make Measure Spec ( get Width (  )  - get List Padding Left (  )  - get List Padding Right (  ) ,  Measure Spec . EXACTLY )  ;  int hs =  Measure Spec . make Measure Spec ( height Size, height Mode )  ;  pinned View . measure ( ws, hs )  ;  pinned View . layout ( 0, 0, pinned View . get Measured Width (  ) , pinned View . get Measured Height (  )  )  ;  m Translate Y = 0 ;  // initialize pinned shadow pinned Shadow . view = pinned View ;  pinned Shadow . position = position ;  pinned Shadow . id = get Adapter (  )  . get Item Id ( position )  ;  // store pinned shadow m Pinned Section = pinned Shadow ; }"
6993,public  Find Iterable< Document T> find (  ) { return os Mongo Collection . find (  )  ; }
6994,"public static  Default Cell Path Resolver create (  Path root ) { return create ( root,  Immutable Map . of (  )  )  ; }"
6995,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
6996,"static final I Binder proxy Fetch Host Binder (  Context context ) { return proxy Fetch Host Binder ( context, SELECTION_MAIN_BINDER )  ; }"
6997,"private static int move To Tiff Entry With Tag (  Input Stream is, int length, boolean is Little Endian, int tag To Find )  throws IO Exception{ if  ( length < 14 )  {     return 0 ;  } // read the number of entries and go through all of them // each IFD entry has length of 12 bytes and is composed of // {TAG  [ 2 ] , TYPE  [ 2 ] , COUNT  [ 4 ] , VALUE/OFFSET  [ 4 ] } int num Entries =  Stream Processor . read Packed Int ( is, 2, is Little Endian )  ;  length -= 2 ;  while  ( num Entries-- > 0 && length >= 12 )  {     int tag =  Stream Processor . read Packed Int ( is, 2, is Little Endian )  ;      length -= 2 ;      if  ( tag == tag To Find )  {         return length ;      }     is . skip ( 10 )  ;      length -= 10 ;  } return 0 ; }"
6998,public  Place Search Request Params build (  ) { return new  Place Search Request Params ( this )  ; }
6999,"public com . anychart . charts .  Sankey select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
7000,public void reboom Immediately (  ) { inner Reboom ( true )  ; }
7001,public void set Exception (  Exception exception ) { check Not Set (  )  ;  m Exception = exception ;  m Ready Latch . count Down (  )  ; }
7002,"public com . anychart . charts .  Polar title (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . title ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7003,"public com . anychart . core . resource . resourcelist .  Text Settings margin (  String value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
7004,"public void put ( @ Non Null final  String key, final  Parcelable value, final int save Time ) { m Cache Memory Utils . put ( key, value, save Time )  ;  m Cache Disk Utils . put ( key, value, save Time )  ; }"
7005,"public com . anychart . core . stock . scrollerseries .  Jump Line bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
7006,"public void share With Facebook (  String caption Or Options,  String link,  String name,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Facebook ( %s, %s, %s, %s )  ; "", wrap Quotes ( caption Or Options ) , wrap Quotes ( link ) , wrap Quotes ( name ) , wrap Quotes ( description )  )  )  ; }"
7007,"public com . anychart . core . gantt . elements .  Grouping Tasks Element height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
7008,public int bytes Left (  ) { return limit - position ; }
7009,"public void set Animation Handler ( @ Non Null  Animation Handler animation Handler ) { if  ( m Running )  {     throw new  Android Runtime Exception ( "" Animations are still running and the animation"" + ""handler should not be set at this timming"" )  ;  } m Animation Handler = animation Handler ; }"
7010,public com . google . protobuf .  Byte String get Auxiliary Build Tag Bytes (  ) { java . lang .  Object ref = auxiliary Build Tag_ ;  if  ( ref instanceof java . lang .  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      auxiliary Build Tag_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
7011,"public static  String get Resource Package Name (  Context context ) { //  The return value should be cached as it cannot change during app execution, // but it would require a major refactor to be testable .   We should consider it for the // upcoming SDK rewrite .   String resource Package Name ;  //  Pick a resource that is likely to exist: the app's icon .  final int icon Id = context . get Application Context (  )  . get Application Info (  )  . icon ;  if  ( icon Id > 0 )  {     try {         resource Package Name = context . get Resources (  )  . get Resource Package Name ( icon Id )  ;          // which is definitely not what we want .   Default to context . get Package Name (  )  .          if  ( ""android"" . equals ( resource Package Name )  )  {             resource Package Name = context . get Package Name (  )  ;          }     } catch  (  Resources .  Not Found Exception e )  {         //  If we get here, the app has a valid icon, but it isn't in the resources for this         // context .   This can happen if the app uses a default system icon, for example .          //  In this case, we'll hope that context . get Package Name (  )  is accurate .          //  (  See b/122825635 for a note about whether or not this check makes sense for         // future versions of the SDK, or if we should just use context . get Package Name (  )          // in all cases .  )   Logging info or a warning here would be nice, but this method is         // invoked many times throughout application startup .          resource Package Name = context . get Package Name (  )  ;      } } else {     //  If there's no icon, or something went wrong with the one we found, we'll hope that     // context . get Package Name (  )  is sufficient for this app .      resource Package Name = context . get Package Name (  )  ;  } return resource Package Name ; }"
7012,"public com . anychart . core . stock . scrollerseries .  Jump Line stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7013,"public void save As Xlsx (  String chart Data Export Mode,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Xlsx ( %s, %s )  ; "", wrap Quotes ( chart Data Export Mode ) , wrap Quotes ( filename )  )  )  ; }"
7014,private int px ( int px ) { return  ( int )   ( density * px )  ; }
7015,public void set Flags ( short flags ) { this . flags = flags ; }
7016,"public static void check Dialog ( final  Context context, final  Video Info data ) {  String msg ;  if  ( data . get Download Status (  )  ==  Download Status . COMPLETE )  {     msg = ""任务已缓存，点击查看"" ;  } else {     msg = ""任务正在缓存，点击查看"" ;  }  Alert Dialog .  Builder builder = new  Alert Dialog .  Builder ( context )  ;  builder . set Title ( ""提示"" )  . set Message ( msg )  . set Negative Button ( ""取消"", null )  . set Positive Button ( ""查看任务"", new  Dialog Interface .  On Click Listener (  )  {     @ Override     public void on Click (  Dialog Interface dialog Interface, int i )  {         if  ( data . get Download Status (  )  ==  Download Status . COMPLETE )  {              Download Activity . launch ( context, 0 )  ;          } else {              Download Activity . launch ( context, 1 )  ;          }     } } )  ;  builder . create (  )  . show (  )  ; }"
7017,"public com . anychart . charts .  Pie hatch Fill ( com . anychart . graphics . vector .  Hatch Fill settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
7018,public  Rich Path find First Rich Path (  ) { return rich Path Drawable == null ? null : rich Path Drawable . find First Rich Path (  )  ; }
7019,"public static  Drawable get Drawable ( @ Non Null final  String key ) { return get Drawable ( key, get Default Cache Double Utils (  )  )  ; }"
7020,"public void anchor (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . anchor (  )  ; "" )  ; }"
7021,"public void set Minimum Scale Y ( float y Scale ) { if  ( y Scale < 1f )      y Scale = 1f ;  m Min Scale Y = y Scale ;  limit Trans And Scale ( m Matrix Touch, m Content Rect )  ; }"
7022,"public com . anychart . core . annotations .  Andrews Pitchfork bottom (  Number bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", bottom )  )  ;  return this ; }"
7023,"public static boolean check Mime Type (  Context context,  String min Type ) { boolean is Picture =  Text Utils . is Empty ( min Type )  ? false : "" . jpg| . gif| . png| . bmp| . jpeg| . webp|"" . contains ( min Type . to Lower Case (  )  )  ? true : false ;  if  ( !is Picture )  {      Toast . make Text ( context, context . get Resources (  )  . get Text ( org . devio . takephoto . R . string . tip_type_not_image ) ,  Toast . LENGTH_SHORT )  . show (  )  ;  } return is Picture ; }"
7024,"public static  Set<?> key Set (  Object root Object,  String path ) { JSON Path jsonpath = compile ( path )  ;   Object result = jsonpath . eval ( root Object )  ;  return jsonpath . eval Key Set ( result )  ; }"
7025,public static  Abstract PBX Object Factory  Default Factory (  ) { return new  Default PBX Object Factory (  )  ; }
7026,"public QMUI Alpha Image Button add Left Image Button ( int drawable Res Id, boolean follow Tint Color, int view Id, int icon Width, int icon Height ) { QMUI Alpha Image Button left Button = generate Top Bar Image Button ( drawable Res Id, follow Tint Color )  ;  this . add Left View ( left Button, view Id, generate Top Bar Image Button Layout Params ( icon Width, icon Height )  )  ;  return left Button ; }"
7027,"public  String get Speed With Binary And Flush (  ) { return human Readable Speed ( get Instant Bytes Per Second And Flush (  ) , false )  ; }"
7028,"public synchronized  Countly set Consent Feature Group (  String group Name, boolean is Consent Given ) { L . v ( "" [  Countly ]   Setting consent for feature group:  [ "" + group Name + "" ]  with value:  [ "" + is Consent Given + "" ] "" )  ;  if  ( !is Initialized (  )  )  {     L . w ( "" [  Countly ]   Calling 'set Consent Feature Group' before initialising the SDK is deprecated!"" )  ;  } if  ( !grouped Features . contains Key ( group Name )  )  {     L . d ( "" [  Countly ]   Trying to set consent for a unknown feature group:  [ "" + group Name + "" ] "" )  ;      return this ;  } set Consent Internal ( grouped Features . get ( group Name ) , is Consent Given )  ;  return this ; }"
7029,"public static  Listenable Future<O> submit (  Callable<O> callable,  Executor executor ) {  Trusted Listenable Future Task<O> task =  Trusted Listenable Future Task . create ( callable )  ;  executor . execute ( task )  ;  return task ; }"
7030,"public long clear Old Entries ( long cache Expiration Ms ) { long oldest Remaining Entry Age Ms = 0 L ;  synchronized  ( m Lock )  {     try {         long now = m Clock . now (  )  ;           Collection< Disk Storage .  Entry> all Entries = m Storage . get Entries (  )  ;          final long cache Size Before Clearance = m Cache Stats . get Size (  )  ;          int items Removed Count = 0 ;          long items Removed Size = 0 L ;          for  (  Disk Storage .  Entry entry : all Entries )  {             // entry age of zero is disallowed .              long entry Age Ms =  Math . max ( 1,  Math . abs ( now - entry . get Timestamp (  )  )  )  ;              if  ( entry Age Ms >= cache Expiration Ms )  {                 long entry Removed Size = m Storage . remove ( entry )  ;                  m Resource Index . remove ( entry . get Id (  )  )  ;                  if  ( entry Removed Size > 0 )  {                     items Removed Count++ ;                      items Removed Size += entry Removed Size ;                       Settable Cache Event cache Event =  Settable Cache Event . obtain (  )  . set Resource Id ( entry . get Id (  )  )  . set Eviction Reason (  Cache Event Listener .  Eviction Reason . CONTENT_STALE )  . set Item Size ( entry Removed Size )  . set Cache Size ( cache Size Before Clearance - items Removed Size )  ;                      m Cache Event Listener . on Eviction ( cache Event )  ;                      cache Event . recycle (  )  ;                  }             } else {                 oldest Remaining Entry Age Ms =  Math . max ( oldest Remaining Entry Age Ms, entry Age Ms )  ;              }         }         m Storage . purge Unexpected Resources (  )  ;          if  ( items Removed Count > 0 )  {             maybe Update File Cache Size (  )  ;              m Cache Stats . increment ( -items Removed Size, -items Removed Count )  ;          }     } catch  ( IO Exception ioe )  {         m Cache Error Logger . log Error (  Cache Error Logger .  Cache Error Category . EVICTION, TAG, ""clear Old Entries: "" + ioe . get Message (  ) , ioe )  ;      } } return oldest Remaining Entry Age Ms ; }"
7031,"public void remove View In Layout (  View view ) { throw new  Unsupported Operation Exception ( "" Removing  Views manually within  Litho Views is not supported"" )  ; }"
7032,public void set ( T value ) { if  ( m Value == value ||  ( m Value != null && m Value . equals ( value )  )  )  {     return ;  } m Value = value ;  for  (  On Value Change Listener<T> listener : m Listeners )  {     listener . on Value Change ( this )  ;  }}
7033,public void set Gradient (  Gradient gradient ) { m Gradient = gradient ;  m Color Map = gradient . generate Color Map ( m Opacity )  ; }
7034,"public static  Lunar solar2 Lunar ( final  Solar solar ) {  Lunar lunar = new  Lunar (  )  ;  int index = solar . solar Year - SOLAR_1_1 [ 0 ]  ;  int data =  ( solar . solar Year << 9 )  |  ( solar . solar Month << 5 )  |  ( solar . solar Day )  ;  int solar11 = 0 ;  if  ( SOLAR_1_1 [ index ]  > data )  {     index-- ;  } solar11 = SOLAR_1_1 [ index ]  ;  int y = get Bit Int ( solar11, 12, 9 )  ;  int m = get Bit Int ( solar11, 4, 5 )  ;  int d = get Bit Int ( solar11, 5, 0 )  ;  long offset = solar To Int ( solar . solar Year, solar . solar Month, solar . solar Day )  - solar To Int ( y, m, d )  ;  int days = LUNAR_MONTH_DAYS [ index ]  ;  int leap = get Bit Int ( days, 4, 13 )  ;  int lunar Y = index + SOLAR_1_1 [ 0 ]  ;  int lunar M = 1 ;  int lunar D = 1 ;  offset += 1 ;  for  ( int i = 0 ;  i < 13 ;  i++ )  {     int dm = get Bit Int ( days, 1, 12 - i )  == 1 ? 30 : 29 ;      if  ( offset > dm )  {         lunar M++ ;          offset -= dm ;      } else {         break ;      } } lunar D =  ( int )   ( offset )  ;  lunar . lunar Year = lunar Y ;  lunar . lunar Month = lunar M ;  lunar . is Leap = false ;  if  ( leap != 0 && lunar M > leap )  {     lunar . lunar Month = lunar M - 1 ;      if  ( lunar M == leap + 1 )  {         lunar . is Leap = true ;      } } lunar . lunar Day = lunar D ;  return lunar ; }"
7035,public void set Auto Rotation ( boolean auto Rotation ) { this . auto Rotation = auto Rotation ; }
7036,"public static boolean param Has Nullable Annotation (  Symbol .  Method Symbol symbol, int param Ind,  Config config ) { return has Nullable Annotation (  Nullability Util . get All Annotations For Parameter ( symbol, param Ind ) , config )  ; }"
7037,"public static bt Dbvt Node internal Temp ( long c Ptr, boolean own ) { temp . reset ( c Ptr, own )  ;  return temp ; }"
7038,"public static double calculate Accuracy ( final int tx Power, final double rssi ) { if  ( rssi == 0 )  {     // if we cannot determine accuracy, return -1 .      return -1 . 0 ;  } final double ratio = rssi * 1 . 0 / tx Power ;  if  ( ratio < 1 . 0 )  {     return  Math . pow ( ratio, 10 )  ;  } else {     return  ( 0 . 89976 )  *  Math . pow ( ratio, 7 . 7095 )  + 0 . 111 ;  }}"
7039,"public static void on Click Event Trigger (  Event Trigger trigger,  View view ) {  Click Event _event State = new  Click Event (  )  ;  _event State . view = view ;  trigger . dispatch On Trigger ( _event State, new  Object [  ]  {} )  ; }"
7040,public  String get Text (  ) { return m Result . get Text (  )  ; }
7041,public synchronized void reset Children (  ) { children = null ; }
7042,public  String [  ]  get (  ) { return usernames ; }
7043,public  String get Preview Image Url (  ) { return preview Image Url ; }
7044,"public  Object on Message (  String id,  Object data ) { return null ; }"
7045,"public void close (  ) { try {     this . writer . close (  )  ;  } catch  ( IO Exception e )  {     logger . warn ( e, "" Could not close rule Key Logger"" )  ;  }}"
7046,"public void dynamic Show (  Dynamic Config dynamic Config ) { if  ( null == dynamic Config )      return ;  boolean is Re Layout = false ;  boolean is Invalidate = false ;   Float time Text Size = dynamic Config . get Time Text Size (  )  ;  if  ( null != time Text Size )  {     m Countdown . set Time Text Size ( time Text Size )  ;      is Re Layout = true ;  }  Float suffix Text Size = dynamic Config . get Suffix Text Size (  )  ;  if  ( null != suffix Text Size )  {     m Countdown . set Suffix Text Size ( suffix Text Size )  ;      is Re Layout = true ;  }  Integer time Text Color = dynamic Config . get Time Text Color (  )  ;  if  ( null != time Text Color )  {     m Countdown . set Time Text Color ( time Text Color )  ;      is Invalidate = true ;  }  Integer suffix Text Color = dynamic Config . get Suffix Text Color (  )  ;  if  ( null != suffix Text Color )  {     m Countdown . set Suffix Text Color ( suffix Text Color )  ;      is Invalidate = true ;  }  Boolean is Time Text Bold = dynamic Config . is Time Text Bold (  )  ;  if  ( null != is Time Text Bold )  {     m Countdown . set Time Text Bold ( is Time Text Bold )  ;      is Re Layout = true ;  }  Boolean is Suffix Time Text Bold = dynamic Config . is Suffix Time Text Bold (  )  ;  if  ( null != is Suffix Time Text Bold )  {     m Countdown . set Suffix Text Bold ( is Suffix Time Text Bold )  ;      is Re Layout = true ;  } // suffix text  ( all )   String suffix = dynamic Config . get Suffix (  )  ;  if  ( ! Text Utils . is Empty ( suffix )  )  {     m Countdown . set Suffix ( suffix )  ;      is Re Layout = true ;  } // suffix text  String suffix Day = dynamic Config . get Suffix Day (  )  ;   String suffix Hour = dynamic Config . get Suffix Hour (  )  ;   String suffix Minute = dynamic Config . get Suffix Minute (  )  ;   String suffix Second = dynamic Config . get Suffix Second (  )  ;   String suffix Millisecond = dynamic Config . get Suffix Millisecond (  )  ;  if  ( m Countdown . set Suffix ( suffix Day, suffix Hour, suffix Minute, suffix Second, suffix Millisecond )  )  {     is Re Layout = true ;  } // suffix margin  ( all )   Float suffix LR Margin = dynamic Config . get Suffix LR Margin (  )  ;  if  ( null != suffix LR Margin )  {     m Countdown . set Suffix LR Margin ( suffix LR Margin )  ;      is Re Layout = true ;  } // suffix margin  Float suffix Day Left Margin = dynamic Config . get Suffix Day Left Margin (  )  ;   Float suffix Day Right Margin = dynamic Config . get Suffix Day Right Margin (  )  ;   Float suffix Hour Left Margin = dynamic Config . get Suffix Hour Left Margin (  )  ;   Float suffix Hour Right Margin = dynamic Config . get Suffix Hour Right Margin (  )  ;   Float suffix Minute Left Margin = dynamic Config . get Suffix Minute Left Margin (  )  ;   Float suffix Minute Right Margin = dynamic Config . get Suffix Minute Right Margin (  )  ;   Float suffix Second Left Margin = dynamic Config . get Suffix Second Left Margin (  )  ;   Float suffix Second Right Margin = dynamic Config . get Suffix Second Right Margin (  )  ;   Float suffix Millisecond Right Margin = dynamic Config . get Suffix Millisecond Left Margin (  )  ;  if  ( m Countdown . set Suffix Margin ( suffix Day Left Margin, suffix Day Right Margin, suffix Hour Left Margin, suffix Hour Right Margin, suffix Minute Left Margin, suffix Minute Right Margin, suffix Second Left Margin, suffix Second Right Margin, suffix Millisecond Right Margin )  )  {     is Re Layout = true ;  }  Integer suffix Gravity = dynamic Config . get Suffix Gravity (  )  ;  if  ( null != suffix Gravity )  {     m Countdown . set Suffix Gravity ( suffix Gravity )  ;      is Re Layout = true ;  } // judgement time show  Boolean temp Is Show Day = dynamic Config . is Show Day (  )  ;   Boolean temp Is Show Hour = dynamic Config . is Show Hour (  )  ;   Boolean temp Is Show Minute = dynamic Config . is Show Minute (  )  ;   Boolean temp Is Show Second = dynamic Config . is Show Second (  )  ;   Boolean temp Is Show Millisecond = dynamic Config . is Show Millisecond (  )  ;  if  ( null != temp Is Show Day || null != temp Is Show Hour || null != temp Is Show Minute || null != temp Is Show Second || null != temp Is Show Millisecond )  {     boolean is Show Day = m Countdown . is Show Day ;      if  ( null != temp Is Show Day )  {         is Show Day = temp Is Show Day ;          m Countdown . m Has Set Is Show Day = true ;      } else {         m Countdown . m Has Set Is Show Day = false ;      }     boolean is Show Hour = m Countdown . is Show Hour ;      if  ( null != temp Is Show Hour )  {         is Show Hour = temp Is Show Hour ;          m Countdown . m Has Set Is Show Hour = true ;      } else {         m Countdown . m Has Set Is Show Hour = false ;      }     boolean is Show Minute = null != temp Is Show Minute ? temp Is Show Minute : m Countdown . is Show Minute ;      boolean is Show Second = null != temp Is Show Second ? temp Is Show Second : m Countdown . is Show Second ;      boolean is Show Millisecond = null != temp Is Show Millisecond ? temp Is Show Millisecond : m Countdown . is Show Millisecond ;      boolean is Mod Countdown Interval = m Countdown . ref Time Show ( is Show Day, is Show Hour, is Show Minute, is Show Second, is Show Millisecond )  ;      // judgement modify countdown interval     if  ( is Mod Countdown Interval )  {         start ( m Remain Time )  ;      }     is Re Layout = true ;  }  Dynamic Config .  Background Info background Info = dynamic Config . get Background Info (  )  ;  if  ( !is Hide Time Background && null != background Info )  {      Background Countdown background Countdown =  (  Background Countdown )  m Countdown ;       Float size = background Info . get Size (  )  ;      if  ( null != size )  {         background Countdown . set Time Bg Size ( size )  ;          is Re Layout = true ;      }      Integer color = background Info . get Color (  )  ;      if  ( null != color )  {         background Countdown . set Time Bg Color ( color )  ;          is Invalidate = true ;      }      Float radius = background Info . get Radius (  )  ;      if  ( null != radius )  {         background Countdown . set Time Bg Radius ( radius )  ;          is Invalidate = true ;      }      Boolean is Show Time Bg Division Line = background Info . is Show Time Bg Division Line (  )  ;      if  ( null != is Show Time Bg Division Line )  {         background Countdown . set Is Show Time Bg Division Line ( is Show Time Bg Division Line )  ;          if  ( is Show Time Bg Division Line )  {              Integer division Line Color = background Info . get Division Line Color (  )  ;              if  ( null != division Line Color )  {                 background Countdown . set Time Bg Division Line Color ( division Line Color )  ;              }              Float division Line Size = background Info . get Division Line Size (  )  ;              if  ( null != division Line Size )  {                 background Countdown . set Time Bg Division Line Size ( division Line Size )  ;              }         }         is Invalidate = true ;      }      Boolean is Show Time Bg Border = background Info . is Show Time Bg Border (  )  ;      if  ( null != is Show Time Bg Border )  {         background Countdown . set Is Show Time Bg Border ( is Show Time Bg Border )  ;          if  ( is Show Time Bg Border )  {              Integer border Color = background Info . get Border Color (  )  ;              if  ( null != border Color )  {                 background Countdown . set Time Bg Border Color ( border Color )  ;              }              Float border Size = background Info . get Border Size (  )  ;              if  ( null != border Size )  {                 background Countdown . set Time Bg Border Size ( border Size )  ;              }              Float border Radius = background Info . get Border Radius (  )  ;              if  ( null != border Radius )  {                 background Countdown . set Time Bg Border Radius ( border Radius )  ;              }         }         is Re Layout = true ;      } }  Boolean temp Is Convert Days To Hours = dynamic Config . is Convert Days To Hours (  )  ;  if  ( null != temp Is Convert Days To Hours && m Countdown . set Convert Days To Hours ( temp Is Convert Days To Hours )  )  {     re Set Time ( get Remain Time (  )  )  ;      is Re Layout = true ;  } if  ( is Re Layout )  {     re Layout (  )  ;  } else if  ( is Invalidate )  {     invalidate (  )  ;  }}"
7047,public void set Ssl ( SSL Configuration ssl ) { this . ssl = ssl ; }
7048,"public com . anychart . core .  State Settings normal (  ) { return new com . anychart . core .  State Settings ( js Base + "" . normal (  ) "" )  ; }"
7049,public int get GL Type (  ) { return pixmap . get GL Type (  )  ; }
7050,"private final void do Registration Or Refresh ( boolean force Refresh ) {  Persisted Installation Entry prefs = get Prefs With Generated Id Multi Process Safe (  )  ;  // prefs we are working with, so the following steps know a new token is required .  if  ( force Refresh )  {     prefs = prefs . with Cleared Auth Token (  )  ;  } trigger On State Reached ( prefs )  ;  //  Execute network calls  (  Create Installations or  Generate Auth Token )  to the FIS  Servers on // a separate executor i . e network Executor network Executor . execute (  (  )  -> do Network Call If Necessary ( force Refresh )  )  ; }"
7051,"public static void initialize (  Context context, @ Nullable  Image Pipeline Config image Pipeline Config, @ Nullable  Drawee Config drawee Config ) { initialize ( context, image Pipeline Config, drawee Config, true )  ; }"
7052,"public JSON Array get JSON Array ( @ Non Null final  String key ) { return get JSON Array ( key, null )  ; }"
7053,public float get Space Max (  ) { return m Space Max ; }
7054,public  Codec Capabilities Builder set Profile Levels (  Codec Profile Level [  ]  profile Levels ) { this . profile Levels =  Preconditions . check Not Null ( profile Levels )  ;  return this ; }
7055,"public com . anychart . charts .  Cartesian3d select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
7056,"public  Android Parameters .  Builder set Minimum Version ( int minimum Version ) { parameters . put Int ( KEY_ANDROID_MIN_VERSION_CODE, minimum Version )  ;  return this ; }"
7057,"public void set Caret Position (  Like Box Count View Caret Position caret Position ) { this . caret Position = caret Position ;  // some padding  ( equal to caret Height )  in that same direction switch ( caret Position )  {     case LEFT:         set Additional Text Padding ( additional Text Padding, 0, 0, 0 )  ;          break ;      case TOP:         set Additional Text Padding ( 0, additional Text Padding, 0, 0 )  ;          break ;      case RIGHT:         set Additional Text Padding ( 0, 0, additional Text Padding, 0 )  ;          break ;      case BOTTOM:         set Additional Text Padding ( 0, 0, 0, additional Text Padding )  ;          break ;  }}"
7058,"public  Point F get Distance Point (  View Group parent,  List< View> children ) {  Point F distance Point = new  Point F ( 0, 0 )  ;  return translate ( distance Point, children )  ; }"
7059,"private void add Blocking View (  ) { if  ( m Blocking View == null )  {     m Blocking View = new  View ( this )  ;       Relative Layout .  Layout Params lp = new  Relative Layout .  Layout Params (  View Group .  Layout Params . MATCH_PARENT,  View Group .  Layout Params . MATCH_PARENT )  ;      lp . add Rule (  Relative Layout . BELOW, R . id . toolbar )  ;      m Blocking View . set Layout Params ( lp )  ;      m Blocking View . set Clickable ( true )  ;  }  (  (  Relative Layout )  find View By Id ( R . id . ucrop_photobox )  )  . add View ( m Blocking View )  ; }"
7060,"public com . anychart . core . stock . scrollerseries .  Stick min Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", width )  )  ;  return this ; }"
7061,"public synchronized void kill (  ) { LOGGER . info ( ""{} {} has been slayed!"", type, name )  ;  for  (  Lockable lockable : instruments )  {     lockable . unlock ( this )  ;  } this . instruments . clear (  )  ; }"
7062,"private  List< Mesh Model> deserialize Models ( final  Json Deserialization Context context, final  Json Object json ) {  Type models List = new  Type Token< List< Mesh Model>> (  )  { } . get Type (  )  ;  return context . deserialize ( json . get As Json Array ( ""models"" ) , models List )  ; }"
7063,private  Rev Commit next For Iterator (  ) { try {     return next (  )  ;  } catch  ( IO Exception e )  {     throw new  Rev Walk Exception ( e )  ;  }}
7064,"public com . anychart . core . annotations .  Fibonacci Retracement normal (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . normal ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7065,"public void get Selected Points (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Selected Points (  )  ; "" )  ; }"
7066,"public  Builder add Exported Symbol ( int index, com . didiglobal . booster . aapt2 .  Resources Internal .  Compiled File .  Symbol value ) { if  ( exported Symbol Builder_ == null )  {     if  ( value == null )  {         throw new  Null Pointer Exception (  )  ;      }     ensure Exported Symbol Is Mutable (  )  ;      exported Symbol_ . add ( index, value )  ;      on Changed (  )  ;  } else {     exported Symbol Builder_ . add Message ( index, value )  ;  } return this ; }"
7067,"public  Object call (  Context context,  List args )  throws  Function Call Exception{ if  ( args . size (  )  == 0 )  {     return evaluate ( context )  ;  } throw new  Function Call Exception ( ""position (  )  does not take any arguments . "" )  ; }"
7068,"private static  Hash Map< String,  Object> read Amf Ecma Array (  Parsable Byte Array data ) { int count = data . read Unsigned Int To Int (  )  ;   Hash Map< String,  Object> array = new  Hash Map<> ( count )  ;  for  ( int i = 0 ;  i < count ;  i++ )  {      String key = read Amf String ( data )  ;      int type = read Amf Type ( data )  ;      array . put ( key, read Amf Data ( data, type )  )  ;  } return array ; }"
7069,public  Key Sanitizer get Key Sanitizer (  ) { return key Sanitizer ; }
7070,"public  File download Bundle Resource From Url Sync ( final  String resource Path, final  File output File ) { final  String resource URL = create Resource URL ( m Settings . get Packager Connection Settings (  )  . get Debug Server Host (  ) , resource Path )  ;  final  Request request = new  Request .  Builder (  )  . url ( resource URL )  . build (  )  ;  try  (  Response response = m Client . new Call ( request )  . execute (  )  )  {     if  ( !response . is Successful (  )  )  {         return null ;      }      Sink output = null ;      try {         output =  Okio . sink ( output File )  ;           Okio . buffer ( response . body (  )  . source (  )  )  . read All ( output )  ;      } finally {         if  ( output != null )  {             output . close (  )  ;          }     }     return output File ;  } catch  (  Exception ex )  {     F Log . e (  React Constants . TAG, "" Failed to fetch resource synchronously - resource Path: \""%s\"", output File: \""%s\"""", resource Path, output File . get Absolute Path (  ) , ex )  ;      return null ;  }}"
7071,protected  String get Voice Mail Number (  ) { return voice Mail Number ; }
7072,"public void toggle Item Checked ( int position,  Base View Holder holder ) { boolean is Checked = m Sparse Item Checked . get ( position )  ;   Logger . d ( position + """" + !is Checked )  ;  holder . set Checked ( R . id . cb_delete, !is Checked )  ;  _handle Checked Changed ( position, !is Checked )  ; // 如果用 notify Item Changed (  ) ，会有一闪的情况//        notify Item Changed ( position )  ; }"
7073,"public void share With Linked In (  String caption Or Options,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Linked In ( %s, %s )  ; "", wrap Quotes ( caption Or Options ) , wrap Quotes ( description )  )  )  ; }"
7074,public  Factory set Stream Keys (  List< Stream Key> stream Keys ) {  Assertions . check State ( !is Create Called )  ;  this . stream Keys = stream Keys ;  return this ; }
7075,"public com . anychart . charts .  Gantt select Marquee Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7076,"protected  Set Value Request set Descriptor Value ( @ Nullable final  Bluetooth Gatt Descriptor server Descriptor, @ Nullable final byte [  ]  data ) { return  Request . new Set Value Request ( server Descriptor, data )  . set Request Handler ( request Handler )  ; }"
7077,"public  Ok Http Client .  Builder with (  Ok Http Client .  Builder builder ) { check Not Null ( builder, ""builder cannot be null"" )  ;  return builder . add Network Interceptor ( m Interceptor )  ; }"
7078,"public void set Hierarchy ( @ Nullable  Drawee Hierarchy hierarchy ) { if  ( F Log . is Loggable ( F Log . VERBOSE )  )  {     F Log . v ( TAG, ""controller %x %s: set Hierarchy: %s"",  System . identity Hash Code ( this ) , m Id, hierarchy )  ;  } m Event Tracker . record Event (  ( hierarchy != null )  ?  Event . ON_SET_HIERARCHY :  Event . ON_CLEAR_HIERARCHY )  ;  // force release in case request was submitted if  ( m Is Request Submitted )  {     m Deferred Releaser . cancel Deferred Release ( this )  ;      release (  )  ;  } // clear the existing hierarchy if  ( m Settable Drawee Hierarchy != null )  {     m Settable Drawee Hierarchy . set Controller Overlay ( null )  ;      m Settable Drawee Hierarchy = null ;  } // set the new hierarchy if  ( hierarchy != null )  {      Preconditions . check Argument ( hierarchy instanceof  Settable Drawee Hierarchy )  ;      m Settable Drawee Hierarchy =  (  Settable Drawee Hierarchy )  hierarchy ;      m Settable Drawee Hierarchy . set Controller Overlay ( m Controller Overlay )  ;  } if  ( m Logging Listener != null )  {     set Up Logging Listener (  )  ;  }}"
7079,public int get Vertical Padding (  ) { return m Padding Top + m Padding Bottom ; }
7080,public boolean is Exposure Enabled (  ) { return exposure Enabled ; }
7081,"public com . anychart . core . stock . scrollerseries .  Range Spline Area width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
7082,public  String get Pusher (  ) { return pusher . get Raw (  )  ; }
7083,"public com . anychart . core . stock . eventmarkers .  Controller event Markers (  ) { return new com . anychart . core . stock . eventmarkers .  Controller ( js Base + "" . event Markers (  ) "" )  ; }"
7084,"public com . anychart . core . stock . scrollerseries .  Candlestick max Point Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Point Width ( %s )  ; "", width )  )  ;  return this ; }"
7085,"private void set Row Spacing (  View row View, int position ) { final int top Padding = get Row Spacing (  )  ;  final int bottom Padding ;  // 0 based positions boolean is Last Row =  ( position == get Count (  )  - 1 )  ;  if  ( is Last Row == true )  {     bottom Padding = top Padding ;  } else {     bottom Padding = 0 ;  } row View . set Padding ( 0, top Padding, 0, bottom Padding )  ; }"
7086,"public void test Info Log Level (  ) { final  Public Client Application Configuration config = load Config ( R . raw . test_pcaconfig_log_info )  ;  assert Not Null ( config )  ;  assert Not Null ( config . get Logger Configuration (  )  )  ;  assert Equals (  Logger .  Log Level . INFO, config . get Logger Configuration (  )  . get Log Level (  )  )  ; }"
7087,"public  String get Method Accessor (  String name,  String desc,  String acc Desc,  Method Info orig )  throws  Compile Error{  String key = name + "":"" + desc ;   String acc Name =  (  String )  accessors . get ( key )  ;  if  ( acc Name != null )      // already exists .      return acc Name ;  // turn on the modified flag .    Class File cf = clazz . get Class File (  )  ;  acc Name = find Accessor Name ( cf )  ;  try {      Const Pool cp = cf . get Const Pool (  )  ;       Class Pool pool = clazz . get Class Pool (  )  ;       Method Info minfo = new  Method Info ( cp, acc Name, acc Desc )  ;      minfo . set Access Flags (  Access Flag . STATIC )  ;      minfo . add Attribute ( new  Synthetic Attribute ( cp )  )  ;       Exceptions Attribute ea = orig . get Exceptions Attribute (  )  ;      if  ( ea != null )          minfo . add Attribute ( ea . copy ( cp, null )  )  ;       Ct Class [  ]  params =  Descriptor . get Parameter Types ( acc Desc, pool )  ;      int regno = 0 ;       Bytecode code = new  Bytecode ( cp )  ;      for  ( int i = 0 ;  i < params . length ;  ++i )  regno += code . add Load ( regno, params [ i ]  )  ;      code . set Max Locals ( regno )  ;      if  ( desc == acc Desc )          code . add Invokestatic ( clazz, name, desc )  ;      else         code . add Invokevirtual ( clazz, name, desc )  ;      code . add Return (  Descriptor . get Return Type ( desc, pool )  )  ;      minfo . set Code Attribute ( code . to Code Attribute (  )  )  ;      cf . add Method ( minfo )  ;  } catch  (  Cannot Compile Exception e )  {     throw new  Compile Error ( e )  ;  } catch  (  Not Found Exception e )  {     throw new  Compile Error ( e )  ;  } accessors . put ( key, acc Name )  ;  return acc Name ; }"
7088,public  Charset get Charset (  ) { return this . fast Json Config . get Charset (  )  ; }
7089,public static  String get Readable Source (  Scope scope ) { return strip Common Type Prefixes ( scope . to String (  )  )  ; }
7090,"int locate Key ( K key ) { if  ( key == null )      throw new  Illegal Argument Exception ( ""key cannot be null . "" )  ;  K [  ]  key Table = this . key Table ;  for  ( int i = place ( key )  ;   ;  i = i + 1 & mask )  {     K other = key Table [ i ]  ;      //  Empty space is available .      if  ( other == null )          return - ( i + 1 )  ;      //  Same key was found .      if  ( other . equals ( key )  )          return i ;  }}"
7091,public  Status Command status (  ) { return new  Status Command ( repo )  ; }
7092,public final boolean is Finished Layouting (  ) { return finishing Criteria . is Finished Layouting ( this )  ; }
7093,"public static void add Http Response Rule (  String uri,  Http Response response ) { get Fake Http Layer (  )  . add Http Response Rule ( uri, response )  ; }"
7094,"public void set Cell ( int x, int y,  Cell cell ) { if  ( x < 0 || x >= width )      return ;  if  ( y < 0 || y >= height )      return ;  cells [ x ]  [ y ]  = cell ; }"
7095,public void reload All Classes (  )  throws  Util Eval Error{ throw cm Unavailable (  )  ; }
7096,"public com . anychart . core . stock . scrollerseries .  Step Line stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7097,"public com . anychart . core . stock . scrollerseries .  Candlestick right (  Number right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", right )  )  ;  return this ; }"
7098,"private void process Noisy (  Byte Buffer input Buffer ) { int limit = input Buffer . limit (  )  ;  //  Check if there's any noise within the maybe silence buffer duration .  input Buffer . limit (  Math . min ( limit, input Buffer . position (  )  + maybe Silence Buffer . length )  )  ;  int noise Limit = find Noise Limit ( input Buffer )  ;  if  ( noise Limit == input Buffer . position (  )  )  {     //  The buffer contains the start of possible silence .      state = STATE_MAYBE_SILENT ;  } else {     input Buffer . limit ( noise Limit )  ;      output ( input Buffer )  ;  } //  Restore the limit .  input Buffer . limit ( limit )  ; }"
7099,"public static  Shape Drawable create Oval Shape Drawable ( @ Color Int int color ) { return create Shape Drawable ( color, new  Oval Shape (  )  )  ; }"
7100,"public static void clone Theme (  Intent source Intent,  Intent intent ) {  Theme Manager . clone Theme ( source Intent, intent, false )  ; }"
7101,"public static double v3 Dot ( double [  ]  a, double [  ]  b ) { return a [ 0 ]  * b [ 0 ]  + a [ 1 ]  * b [ 1 ]  + a [ 2 ]  * b [ 2 ]  ; }"
7102,public double get Min X (  ) { return m Min X ; }
7103,"public com . anychart . core . gantt . edit .  Element Edit stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7104,public void on Resume (  ) { if  ( m Show View != null )      m Show View . on Render Resume (  )  ; }
7105,void on Audio Input Format Changed (  Format format ) {}
7106,Rel Path normalize (  ) { return of ( get Path (  )  . normalize (  )  )  ; }
7107,"public com . anychart . charts .  Gantt row Selected Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
7108,"public com . anychart . charts .  Circular Gauge circular Padding (  String padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . circular Padding ( %s )  ; "", wrap Quotes ( padding )  )  )  ;  return this ; }"
7109,public boolean is Valid (  ) { return  Languages . get Instance Of (  )  . get Value For Id ( get First Text Value (  )  )  != null ; }
7110,"private static boolean codec Needs Discard Channels Workaround (  String codec Name ) { //  The workaround applies to  Samsung  Galaxy S6 and  Samsung  Galaxy S7 .  return  Util . SDK_INT < 24 && ""OMX . SEC . aac . dec"" . equals ( codec Name )  && ""samsung"" . equals (  Util . MANUFACTURER )  &&  (  Util . DEVICE . starts With ( ""zeroflte"" )  ||  Util . DEVICE . starts With ( ""herolte"" )  ||  Util . DEVICE . starts With ( ""heroqlte"" )  )  ; }"
7111,"protected void on Inactive (  ) { super . on Inactive (  )  ;  T object = get Value (  )  ;  if  ( object != null &&  Realm Object . is Valid ( object )  )  {      Realm Object . remove Change Listener ( object, listener )  ;  }}"
7112,"public void layout (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . layout (  )  ; "" )  ; }"
7113,"public  Custom Model Download Conditions build (  ) { return new  Custom Model Download Conditions ( is Charging Required, is Wifi Required, is Device Idle Required )  ; }"
7114,"public void execute (  Runnable runnable ) { if  ( runnable == null )  {     throw new  Null Pointer Exception ( ""runnable parameter is null"" )  ;  } if  ( !m Work Queue . offer ( runnable )  )  {     throw new  Rejected Execution Exception ( m Name + "" queue is full, size="" + m Work Queue . size (  )  )  ;  } final int queue Size = m Work Queue . size (  )  ;  final int max Size = m Max Queue Size . get (  )  ;  if  (  ( queue Size > max Size )  && m Max Queue Size . compare And Set ( max Size, queue Size )  )  {     F Log . v ( TAG, ""%s: max pending work in queue = %d"", m Name, queue Size )  ;  } // else, there was a race and another thread updated and logged the max queue size start Worker If Needed (  )  ; }"
7115,public void set Log Cleaner ( SQ Lite Log Cleaner log Cleaner ) { this . log Cleaner = log Cleaner ; }
7116,"public static  String get Graph Api Version (  ) {  Utility . logd ( TAG,  String . format ( ""get Graph Api Version: %s"", graph Api Version )  )  ;  return graph Api Version ; }"
7117,"public void on Save Instance State (  Bundle out State ) { out State . put Int ( SAVED_ORIENTATION_LOCK, this . orientation Lock )  ; }"
7118,public com . google . protobuf .  Byte String get Edge Id Bytes (  ) { java . lang .  Object ref = edge Id_ ;  if  ( ref instanceof  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      edge Id_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
7119,protected  String get Params Encoding (  ) { return DEFAULT_PARAMS_ENCODING ; }
7120,"public com . anychart . charts .  Sparkline negative Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . negative Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
7121,"public com . anychart . core . stock . scrollerseries .  Step Area bounds (  String x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
7122,"public com . anychart . graphics . vector .  Path path (  ) { return new com . anychart . graphics . vector .  Path ( js Base + "" . path (  ) "" )  ; }"
7123,"public void report Active Experiment (  Abt Experiment Info active Experiment )  throws  Abt Exception{ throw Abt Exception If Analytics Is Null (  )  ;  validate Abt Experiment Info ( active Experiment )  ;   Array List< Abt Experiment Info> active Experiment List = new  Array List<> (  )  ;  //  Remove trigger event if it exists, this sets the experiment to active .   Map< String,  String> active Experiment Map = active Experiment . to String Map (  )  ;  active Experiment Map . remove (  Abt Experiment Info . TRIGGER_EVENT_KEY )  ;  //  Add experiment to GA active Experiment List . add (  Abt Experiment Info . from Map ( active Experiment Map )  )  ;  add Experiments ( active Experiment List )  ; }"
7124,private void skip Image Data (  ) { // lzw Min Code Size read (  )  ;  // data sub-blocks skip (  )  ; }
7125,"public com . anychart . charts .  Sparkline min Hatch Fill (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Hatch Fill ( %s )  ; "", enabled )  )  ;  return this ; }"
7126,"public com . anychart . charts .  Cartesian bounds (  String x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, height )  )  ;  return this ; }"
7127,"public com . anychart . core . utils .  Bounds bounds (  ) { return new com . anychart . core . utils .  Bounds ( js Base + "" . bounds (  ) "" )  ; }"
7128,public void set Click Enabled ( boolean enabled ) { m Click Enabled = enabled ; }
7129,"public void x Anchor (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . x Anchor (  )  ; "" )  ; }"
7130,"private  Includes Data load Include (  Load Import load Import )  throws IO Exception,  Build File Parse Exception,  Interrupted Exception{  Label label = load Import . get Label (  )  ;  com . google . devtools . build . lib . vfs .  Path file Path = get Import Path ( label, load Import . get Import (  )  )  ;   Build File AST file Ast = parse Skylark File ( file Path, load Import . get Containing Label (  ) ,  File Kind . BZL )  ;   Immutable List< Includes Data> dependencies = file Ast . get Imports (  )  . is Empty (  )  ?  Immutable List . of (  )  : load Includes ( label, file Ast . get Imports (  )  )  ;  return  Immutable Includes Data . of ( file Path, dependencies, to Included Paths ( file Path . to String (  ) , dependencies, null )  )  ; }"
7131,"public boolean is Connected (  ) {  Connection State connection State =  Connection State . from Native Value ( native Get Connection State ( app Native Pointer, configuration . get Path (  )  )  )  ;   State session State = get State (  )  ;  return  ( session State ==  State . ACTIVE || session State ==  State . DYING )  && connection State ==  Connection State . CONNECTED ; }"
7132,"public  Cursor query ( SQ Lite Database db,  String [  ]  columns,  String order By ) { return query ( db, columns, null, null, order By, null )  ; }"
7133,"public com . anychart . core . gantt . elements .  Baselines Element fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
7134,"public com . anychart . core . resource .  Logo corners (  Number top Left,  Number top Right,  String bottom Right,  String bottom Left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . corners ( %s, %s, %s, %s )  ; "", top Left, top Right, wrap Quotes ( bottom Right ) , wrap Quotes ( bottom Left )  )  )  ;  return this ; }"
7135,"static void force Expand Segment (  Cache<K, V> cache, K key ) { check Not Null ( cache )  ;  check Not Null ( key )  ;   Local Cache<K, V> map = to Local Cache ( cache )  ;  int hash = map . hash ( key )  ;   Segment<K, V> segment = map . segment For ( hash )  ;  segment . expand (  )  ; }"
7136,public boolean is Set Manifest Key (  ) { return this . manifest Key != null ; }
7137,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_FILE_OWNER ; }
7138,"public void remove Range ( int start, int end ) { int n = size ;  if  ( end >= n )      throw new  Index Out Of Bounds Exception ( ""end can't be >= size: "" + end + "" >= "" + size )  ;  if  ( start > end )      throw new  Index Out Of Bounds Exception ( ""start can't be > end: "" + start + "" > "" + end )  ;  int count = end - start + 1, last Index = n - count ;  if  ( ordered )       System . arraycopy ( items, start + count, items, start, n -  ( start + count )  )  ;  else {     int i =  Math . max ( last Index, end + 1 )  ;       System . arraycopy ( items, i, items, start, n - i )  ;  } size = n - count ; }"
7139,"public static void save (  Context context,  String query ) { suggestions ( context )  . save Recent Query ( query, null )  ; }"
7140,public static boolean is Abi Target (  Build Target target ) { return is Class Abi Target ( target )  || is Source Abi Target ( target )  || is Source Only Abi Target ( target )  || is Verified Source Abi Target ( target )  ; }
7141,"public void test Consistent Hash_linear Congruential Generator Compatibility (  ) { int [  ]  golden100 = { 0, 55, 62, 8, 45, 59, 86, 97, 82, 59, 73, 37, 17, 56, 86, 21, 90, 37, 38, 83 } ;  for  ( int i = 0 ;  i < golden100 . length ;  i++ )  {     assert Equals ( golden100 [ i ] ,  Hashing . consistent Hash ( i, 100 )  )  ;  } assert Equals ( 6,  Hashing . consistent Hash ( 10863919174838991 L, 11 )  )  ;  assert Equals ( 3,  Hashing . consistent Hash ( 2016238256797177309 L, 11 )  )  ;  assert Equals ( 5,  Hashing . consistent Hash ( 1673758223894951030 L, 11 )  )  ;  assert Equals ( 80343,  Hashing . consistent Hash ( 2, 100001 )  )  ;  assert Equals ( 22152,  Hashing . consistent Hash ( 2201, 100001 )  )  ;  assert Equals ( 15018,  Hashing . consistent Hash ( 2202, 100001 )  )  ; }"
7142,"public static void touch (  Path path )  throws IO Exception{ check Not Null ( path )  ;  try {      Files . set Last Modified Time ( path,  File Time . from Millis (  System . current Time Millis (  )  )  )  ;  } catch  (  No Such File Exception e )  {     try {          Files . create File ( path )  ;      } catch  (  File Already Exists Exception ignore )  {     //  The file didn't exist when we called set Last Modified Time, but it did when we called     // create File, so something else created the file in between .   The end result is     // what we wanted: a new file that probably has its last modified time set to approximately     // now .   Or it could have an arbitrary last modified time set by the creator, but that's no     // different than if another process set its last modified time to something else after we     // created it here .      } }}"
7143,"public com . anychart . graphics . vector .  Pattern Fill empty Hatch Fill (  ) { return new com . anychart . graphics . vector .  Pattern Fill ( js Base + "" . empty Hatch Fill (  ) "" )  ; }"
7144,"public com . anychart . core .  State Settings grid (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . grid ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7145,"public void test Notification_fg Callback Analytics (  )  throws  Exception{ mock App Foreground ( true )  ;   Remote Message Builder builder = new  Remote Message Builder (  )  ;  builder . add Data ( ""gcm . n . e"", ""1"" )  ;   Analytics Test Helper . add Analytics Extras ( builder )  ;  start Service Via Receiver ( builder . build Intent (  )  )  ;  verify ( service )  . on Message Received ( arg That ( builder . build Matcher (  )  )  )  ;   List< Analytics Validator .  Logged Event> events = analytics Validator . get Logged Events (  )  ;  assert That ( events )  . has Size ( 2 )  ;   Analytics Validator .  Logged Event receive Event = events . get ( 0 )  ;  assert That ( receive Event . get Origin (  )  )  . is Equal To (  Analytics . ORIGIN_FCM )  ;  assert That ( receive Event . get Name (  )  )  . is Equal To (  Analytics . EVENT_NOTIFICATION_RECEIVE )  ;  assert That ( receive Event . get Params (  )  . get String (  Analytics . PARAM_MESSAGE_ID )  )  . is Equal To ( ""composer_key"" )  ;  assert That ( receive Event . get Params (  )  . get String (  Analytics . PARAM_MESSAGE_NAME )  )  . is Equal To ( ""composer_label"" )  ;  assert That ( receive Event . get Params (  )  . get Int (  Analytics . PARAM_MESSAGE_TIME )  )  . is Equal To ( 1234567890 )  ;  assert That ( receive Event . get Params (  )  . contains Key (  Analytics . PARAM_TOPIC )  )  . is False (  )  ;   Analytics Validator .  Logged Event foreground Event = events . get ( 1 )  ;  assert That ( foreground Event . get Origin (  )  )  . is Equal To (  Analytics . ORIGIN_FCM )  ;  assert That ( foreground Event . get Name (  )  )  . is Equal To (  Analytics . EVENT_NOTIFICATION_FOREGROUND )  ;   Bundles . assert Equals ( foreground Event . get Params (  ) , receive Event . get Params (  )  )  ; }"
7146,public float convert To Kb ( long val In Bytes ) { return  ( float )  val In Bytes / BYTEFACTOR ; }
7147,"public void word Break (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . word Break (  )  ; "" )  ; }"
7148,protected boolean is Pull Loading (  ) { return  ( m Pull Up State ==  State . REFRESHING )  ; }
7149,"public final void collide Circles (  Manifold manifold, final  Circle Shape circle1, final  Transform xf A, final  Circle Shape circle2, final  Transform xf B ) { manifold . point Count = 0 ;  // before inline: //  Transform . mul To Out ( xf A, circle1 . m_p, p A )  ;  //  Transform . mul To Out ( xf B, circle2 . m_p, p B )  ;  // d . set ( p B )  . sub Local ( p A )  ;  // float dist Sqr = d . x * d . x + d . y * d . y ;  // after inline:  Vec2 circle1p = circle1 . m_p ;   Vec2 circle2p = circle2 . m_p ;  float p Ax =  ( xf A . q . c * circle1p . x - xf A . q . s * circle1p . y )  + xf A . p . x ;  float p Ay =  ( xf A . q . s * circle1p . x + xf A . q . c * circle1p . y )  + xf A . p . y ;  float p Bx =  ( xf B . q . c * circle2p . x - xf B . q . s * circle2p . y )  + xf B . p . x ;  float p By =  ( xf B . q . s * circle2p . x + xf B . q . c * circle2p . y )  + xf B . p . y ;  float dx = p Bx - p Ax ;  float dy = p By - p Ay ;  float dist Sqr = dx * dx + dy * dy ;  // end inline final float radius = circle1 . m_radius + circle2 . m_radius ;  if  ( dist Sqr > radius * radius )  {     return ;  } manifold . type =  Manifold Type . CIRCLES ;  manifold . local Point . set ( circle1p )  ;  manifold . local Normal . set Zero (  )  ;  manifold . point Count = 1 ;  manifold . points [ 0 ]  . local Point . set ( circle2p )  ;  manifold . points [ 0 ]  . id . zero (  )  ; }"
7150,"public  Model Data load Model Data ( final  File Handle file Handle ) { return load Model Data ( file Handle, null )  ; }"
7151,private  String build Key (  Artifact artifact ) { return artifact . get Group Id (  )  + ':' + artifact . get Artifact Id (  )  + ':' + artifact . get Extension (  )  + ':' + artifact . get Classifier (  )  ; }
7152,"public  Push Command set Ref Lease Specs (  List< Ref Lease Spec> specs ) { check Callable (  )  ;  this . ref Lease Specs . clear (  )  ;  for  (  Ref Lease Spec spec : specs )  {     ref Lease Specs . put ( spec . get Ref (  ) , spec )  ;  } return this ; }"
7153,"public final int compare ( final  Attribute arg0, final  Attribute arg1 ) { return  ( int )   ( arg0 . type - arg1 . type )  ; }"
7154,"private  String unshorten Url ( final  String origin URL ) { if  ( !origin URL . starts With ( HTTP_PROTOCOL )  && !origin URL . starts With ( HTTPS_PROTOCOL )  )      return """" ;  URL Connection url Conn = connect URL ( origin URL )  ;  url Conn . get Header Fields (  )  ;  final URL final Url = url Conn . get URL (  )  ;  url Conn = connect URL ( final Url )  ;  url Conn . get Header Fields (  )  ;  final URL short URL = url Conn . get URL (  )  ;   String final Result = short URL . to String (  )  ;  while  ( !short URL . same File ( final Url )  )  {     boolean is Endlessly Redirecting = false ;      if  ( short URL . get Host (  )  . equals ( final Url . get Host (  )  )  )  {         if  ( short URL . get Path (  )  . equals ( final Url . get Path (  )  )  )  {             is Endlessly Redirecting = true ;          }     }     if  ( is Endlessly Redirecting )  {         break ;      } else {         final Result = unshorten Url ( short URL . to String (  )  )  ;      } } return final Result ; }"
7155,protected static boolean format Has No Language (  Format format ) { return string Defines No Language ( format . language )  ; }
7156,"public com . anychart . charts .  Sparkline range Marker (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . range Marker ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7157,"public void test Removed Untracked (  )  throws  Exception{  String path = ""file"" ;  try  (  Git git = new  Git ( db )  )  {     write Trash File ( path, ""content"" )  ;      git . add (  )  . add Filepattern ( path )  . call (  )  ;      git . commit (  )  . set Message ( ""commit"" )  . call (  )  ;  } remove From Index ( path )  ;   File Tree Iterator iterator = new  File Tree Iterator ( db )  ;   Index Diff diff = new  Index Diff ( db,  Constants . HEAD, iterator )  ;  diff . diff (  )  ;  assert True ( diff . get Removed (  )  . contains ( path )  )  ;  assert True ( diff . get Untracked (  )  . contains ( path )  )  ;  assert Equals (  Collections . EMPTY_SET, diff . get Untracked Folders (  )  )  ; }"
7158,"public void statement (  String pattern,  Object .  .  .  args )  throws IO Exception{ check In Method (  )  ;  indent (  )  ;  out . write (  String . format ( pattern, args )  )  ;  out . write ( "" ; \n"" )  ; }"
7159,"public void set On Date Picked Listener (  On Date Picked Listener on Date Picked Listener ) { if  ( month View . get DP Mode (  )  != DP Mode . SINGLE )  {     throw new  Runtime Exception ( "" Current DP Mode does not SINGLE!  Please call set Mode set DP Mode to SINGLE!"" )  ;  } month View . set On Date Picked Listener ( on Date Picked Listener )  ; }"
7160,"void test Counter Exceptions (  ) { for  ( var value : result )  {     assert Equals ( expected Counter Exceptions, value . get Exception List (  )  . size (  )  )  ;  }}"
7161,public final int compare To (  Mutable Realm Integer o ) {  Long this Value = get (  )  ;   Long other Value = o . get (  )  ;  return  ( this Value == null )  ?  (  ( other Value == null )  ? 0 : -1 )  :  (  ( other Value == null )  ? 1 : this Value . compare To ( other Value )  )  ; }
7162,public  Settings get Settings (  ) { return settings ; }
7163,public void set Prototype (  Scriptable m ) { prototype = m ; }
7164,"private static  String fix String Length (  String s, int target Len ) { if  ( s != null && target Len > 0 )  {     int len = s . length (  )  ;      if  ( len > target Len )  {         return s . substring ( 0, target Len )  ;      }      String Builder sb = new  String Builder ( s )  ;      while  ( len < target Len )  {         sb . append ( "" "" )  ;          len++ ;      }     return sb . to String (  )  ;  } return """" ; }"
7165,"public static  Builder builder ( int initial Capacity ) { check Argument ( initial Capacity >= 0, "" Invalid initial Capacity: %s"", initial Capacity )  ;  return new  Builder ( initial Capacity )  ; }"
7166,"public  Task< Boolean> activate (  ) {  Task< Config Container> fetched Configs Task = fetched Configs Cache . get (  )  ;   Task< Config Container> activated Configs Task = activated Configs Cache . get (  )  ;  return  Tasks . when All Complete ( fetched Configs Task, activated Configs Task )  . continue With Task ( executor,  (  unused List Of Completed Tasks )  -> {     if  ( !fetched Configs Task . is Successful (  )  || fetched Configs Task . get Result (  )  == null )  {         return  Tasks . for Result ( false )  ;      }      Config Container fetched Container = fetched Configs Task . get Result (  )  ;      //  If the activated configs exist, verify that the fetched configs are fresher .      if  ( activated Configs Task . is Successful (  )  )  {         @ Nullable  Config Container activated Container = activated Configs Task . get Result (  )  ;          if  ( !is Fetched Fresh ( fetched Container, activated Container )  )  {             return  Tasks . for Result ( false )  ;          }     }     return activated Configs Cache . put ( fetched Container )  . continue With ( executor, this::process Activate Put Task )  ;  } )  ; }"
7167,public void update (  ) { m Number Of Children With Z Index = 0 ;  for  ( int i = 0 ;  i < m View Group . get Child Count (  )  ;  i++ )  {     if  (  View Group Manager . get View Z Index ( m View Group . get Child At ( i )  )  != null )  {         m Number Of Children With Z Index++ ;      } } m Drawing Order Indices = null ; }
7168,protected void on Complete (  )  throws E{}
7169,public  Builder set Agent ( @ Nullable  String value ) { agent = value ;  return this ; }
7170,public  Type get Class Type (  ) { return type ; }
7171,protected void hide All After Model (  Epoxy Model<?> model ) { hide Models ( get All Models After ( model )  )  ; }
7172,public static  Immutable Long Array of (  ) { return EMPTY ; }
7173,protected  Observable< Event< List Data>> list Change On (  Path path ) { return  Fire . stream (  )  . get Firebase Service (  )  . core . list Change On ( path )  . observe On ( RX . main (  )  )  ; }
7174,"public com . anychart . core . ui .  Paginator text Settings (  String name,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Settings ( %s, %s )  ; "", wrap Quotes ( name ) , settings )  )  ;  return this ; }"
7175,public T get (  Class<T> an Interface ) { check Not Deleted (  )  ;  return component Runtime . get ( an Interface )  ; }
7176,"public static  Instruction get Instruction ( int value ) { for  ( var i = 0 ;  i <  Instruction . values (  )  . length ;  i++ )  {     if  (  Instruction . values (  )  [ i ]  . get Int Value (  )  == value )  {         return  Instruction . values (  )  [ i ]  ;      } } throw new  Illegal Argument Exception ( "" Invalid instruction value"" )  ; }"
7177,"public static  Update Description diff ( @ Nullable final  Bson Document before Document, @ Nullable final  Bson Document after Document ) { if  (  ( before Document == null )  ||  ( after Document == null )  )  {     return new  Update Description ( new  Bson Document (  ) , new  Hash Set<> (  )  )  ;  } return  Update Description . diff ( before Document, after Document, null, new  Bson Document (  ) , new  Hash Set<> (  )  )  ; }"
7178,"public void test Create Branch Event (  ) {  Create Payload payload =  Create Payload . builder (  )  . ref Type (  Reference Type .  Branch )  . ref ( ""b1"" )  . build (  )  ;   Git Hub Event event = create Event (  Git Hub Event Type .  Create Event, payload )  ;  update View ( event )  ;  verify ( ""user created branch b1 at user/repo"" )  ; }"
7179,"public com . anychart . scales .  Ordinal Color start Auto Calc (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . start Auto Calc (  )  ; "" )  ;  return this ; }"
7180,"void end Session ( final int duration ) { end Session ( duration, null )  ; }"
7181,public  Hilt Android Rule component Ready (  ) { rule . component Ready (  )  ;  return this ; }
7182,"public com . anychart . charts .  Pie radius (  String radius ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . radius ( %s )  ; "", wrap Quotes ( radius )  )  )  ;  return this ; }"
7183,"public void delete (  ) { if  ( my Dao == null )  {     throw new  Dao Exception ( "" Entity is detached from DAO context"" )  ;  } my Dao . delete ( this )  ; }"
7184,public  Bundle get Referer Data (  ) { if  ( argument Bundle != null )  {     return argument Bundle . get Bundle ( ARGUMENTS_REFERER_DATA_KEY )  ;  } return null ; }
7185,public boolean data Displayed (  ) { return this . data Displayed ; }
7186,"public void setup ( int digits ) { this . m Decimal Digits = digits ;   String Buffer b = new  String Buffer (  )  ;  for  ( int i = 0 ;  i < digits ;  i++ )  {     if  ( i == 0 )          b . append ( "" . "" )  ;      b . append ( ""0"" )  ;  } m Format = new  Decimal Format ( ""###,###,###,##0"" + b . to String (  )  )  ; }"
7187,"private void ensure Sequence Numbers (  ) { //  Get the current highest sequence number SQ Lite Persistence .  Query sequence Number Query = new SQ Lite Persistence .  Query ( db, ""SELECT highest_listen_sequence_number FROM target_globals LIMIT 1"" )  ;   Long boxed Sequence Number = sequence Number Query . first Value (  c -> c . get Long ( 0 )  )  ;  hard Assert ( boxed Sequence Number != null, "" Missing highest sequence number"" )  ;  long sequence Number = boxed Sequence Number ;  SQ Lite Statement tag Document = db . compile Statement ( ""INSERT INTO target_documents  ( target_id, path, sequence_number )  VALUES  ( 0, ?, ? ) "" )  ;  SQ Lite Persistence .  Query untagged Documents Query = new SQ Lite Persistence .  Query ( db, ""SELECT RD . path FROM remote_documents AS RD WHERE NOT EXISTS  ( "" + ""SELECT TD . path FROM target_documents AS TD "" + ""WHERE RD . path = TD . path AND TD . target_id = 0"" + "" )  LIMIT ?"" )  . binding ( SEQUENCE_NUMBER_BATCH_SIZE )  ;  boolean [  ]  results Remaining = new boolean [ 1 ]  ;  do {     results Remaining [ 0 ]  = false ;      untagged Documents Query . for Each (  row -> {         results Remaining [ 0 ]  = true ;          tag Document . clear Bindings (  )  ;          tag Document . bind String ( 1, row . get String ( 0 )  )  ;          tag Document . bind Long ( 2, sequence Number )  ;          hard Assert ( tag Document . execute Insert (  )  != -1, "" Failed to insert a sentinel row"" )  ;      } )  ;  } while  ( results Remaining [ 0 ]  )  ; }"
7188,"protected void configure (  Open Ssh Config .  Host hc,  Session session ) {//  No additional configuration required . }"
7189,"public  Book get ( long book Id )  throws  Book Not Found Exception{ if  ( !collection . contains Key ( book Id )  )  {     throw new  Book Not Found Exception ( "" Not found book with id: "" + book Id )  ;  } // return copy of the book return new  Book ( collection . get ( book Id )  )  ; }"
7190,public  Chat Activity Builder with Distinct Id (  String distinct Id ) { this . distinct Id = distinct Id ;  return this ; }
7191,public static  Plugin Info parse From Json Text (  String jo Text ) { JSON Object jo ;  try {     jo = new JSON Object ( jo Text )  ;  } catch  ( JSON Exception e )  {     if  ( LOG )  {         e . print Stack Trace (  )  ;      }     return null ;  } // 三个字段是必备的，其余均可 if  ( jo . has ( PI_PKGNAME )  && jo . has ( PI_TYPE )  && jo . has ( PI_VER )  )  {     return new  Plugin Info ( jo )  ;  } else {     return null ;  }}
7192,public  Serialize Filter [  ]  get Serialize Filters (  ) { return serialize Filters ; }
7193,public void start (  ) { synchronized  ( this )  {     if  ( m Is Running )  {         return ;      }     m Is Running = true ;  } final long last Frame Remainder = m Native Info Handle . restore Remainder (  )  ;  start Animation ( last Frame Remainder )  ; }
7194,public  Params set Delay Ms ( long delay Ms ) { this . delay Ms = delay Ms ;  return this ; }
7195,"public void end Local ( int address,  Register Spec ended Local,  Disposition disposition ) { if  ( DEBUG )  {      System . err . printf ( ""%04x end %s\n"", address, ended Local )  ;  } int reg Num = ended Local . get Reg (  )  ;  ended Local = filter Spec ( ended Local )  ;  about To Process ( address, reg Num )  ;  int end At = end Indices [ reg Num ]  ;  if  ( end At >= 0 )  {     /*              *  The local in the given register is already ended .               *  Silently return without adding anything to the result .               */     return ;  } //  Check for start and end at the same address .  if  ( check For Empty Range ( address, ended Local )  )  {     return ;  } add ( address, disposition, ended Local )  ; }"
7196,public float get Reference Angle (  ) { return jni Get Reference Angle ( addr )  ; }
7197,public  Object Id to Object Id (  ) { ensure Id (  )  ;  return id Buffer . to Object Id (  )  ; }
7198,"void init From Camera Parameters (  Open Camera camera ) {  Camera .  Parameters parameters = camera . get Camera (  )  . get Parameters (  )  ;   Window Manager manager =  (  Window Manager )  context . get System Service (  Context . WINDOW_SERVICE )  ;   Display display = manager . get Default Display (  )  ;  int display Rotation = display . get Rotation (  )  ;  int cw Rotation From Natural To Display ;  switch ( display Rotation )  {     case  Surface . ROTATION_0:         cw Rotation From Natural To Display = 0 ;          break ;      case  Surface . ROTATION_90:         cw Rotation From Natural To Display = 90 ;          break ;      case  Surface . ROTATION_180:         cw Rotation From Natural To Display = 180 ;          break ;      case  Surface . ROTATION_270:         cw Rotation From Natural To Display = 270 ;          break ;      default:         //  Have seen this return incorrect values like -90         if  ( display Rotation % 90 == 0 )  {             cw Rotation From Natural To Display =  ( 360 + display Rotation )  % 360 ;          } else {             throw new  Illegal Argument Exception ( "" Bad rotation: "" + display Rotation )  ;          } }  Log . i ( TAG, "" Display at: "" + cw Rotation From Natural To Display )  ;  int cw Rotation From Natural To Camera = camera . get Orientation (  )  ;   Log . i ( TAG, "" Camera at: "" + cw Rotation From Natural To Camera )  ;  //  Still not 100% sure about this .   But acts like we need to flip this: if  ( camera . get Facing (  )  ==  Camera Facing . FRONT )  {     cw Rotation From Natural To Camera =  ( 360 - cw Rotation From Natural To Camera )  % 360 ;       Log . i ( TAG, "" Front camera overriden to: "" + cw Rotation From Natural To Camera )  ;  } cw Rotation From Display To Camera =  ( 360 + cw Rotation From Natural To Camera - cw Rotation From Natural To Display )  % 360 ;   Log . i ( TAG, "" Final display orientation: "" + cw Rotation From Display To Camera )  ;  if  ( camera . get Facing (  )  ==  Camera Facing . FRONT )  {      Log . i ( TAG, "" Compensating rotation for front camera"" )  ;      cw Needed Rotation =  ( 360 - cw Rotation From Display To Camera )  % 360 ;  } else {     cw Needed Rotation = cw Rotation From Display To Camera ;  }  Log . i ( TAG, "" Clockwise rotation from display to camera: "" + cw Needed Rotation )  ;   Point the Screen Resolution = new  Point (  )  ;  display . get Size ( the Screen Resolution )  ;  screen Resolution = the Screen Resolution ;   Log . i ( TAG, "" Screen resolution in current orientation: "" + screen Resolution )  ;  camera Resolution =  Camera Configuration Utils . find Best Preview Size Value ( parameters, screen Resolution )  ;   Log . i ( TAG, "" Camera resolution: "" + camera Resolution )  ;  best Preview Size =  Camera Configuration Utils . find Best Preview Size Value ( parameters, screen Resolution )  ;   Log . i ( TAG, "" Best available preview size: "" + best Preview Size )  ;  boolean is Screen Portrait = screen Resolution . x < screen Resolution . y ;  boolean is Preview Size Portrait = best Preview Size . x < best Preview Size . y ;  if  ( is Screen Portrait == is Preview Size Portrait )  {     preview Size On Screen = best Preview Size ;  } else {     preview Size On Screen = new  Point ( best Preview Size . y, best Preview Size . x )  ;  }  Log . i ( TAG, "" Preview size on screen: "" + preview Size On Screen )  ; }"
7199,public void update Super Properties (  Super Property Update update ) { if  ( has Opted Out Tracking (  )  )      return ;  m Persistent Identity . update Super Properties ( update )  ; }
7200,"public void test Inherit Layout Direction (  ) { final  Simple Mount Spec Tester child1 =  Simple Mount Spec Tester . create ( m Context )  . build (  )  ;  final  Simple Mount Spec Tester child2 =  Simple Mount Spec Tester . create ( m Context )  . build (  )  ;  final  Litho View litho View = mount Component ( m Context, new  Inline Layout Spec (  )  {     @ Override     protected  Component on Create Layout (  Component Context c )  {         return  Row . create ( c )  . layout Direction ( RTL )  . child (  Row . create ( c )  . wrap In View (  )  . child (  Wrapper . create ( c )  . delegate ( child1 )  . width Px ( 10 )  . height Px ( 10 )  )  . child (  Wrapper . create ( c )  . delegate ( child2 )  . width Px ( 10 )  . height Px ( 10 )  )  )  . build (  )  ;      } }, 20, 10 )  ;  final  Component Host host =  (  Component Host )  litho View . get Child At ( 0 )  ;  final  Drawable drawable1 = host . get Drawables (  )  . get ( 0 )  ;  final  Drawable drawable2 = host . get Drawables (  )  . get ( 1 )  ;  assert That ( drawable1 . get Bounds (  )  )  . is Equal To ( new  Rect ( 10, 0, 20, 10 )  )  ;  assert That ( drawable2 . get Bounds (  )  )  . is Equal To ( new  Rect ( 0, 0, 10, 10 )  )  ; }"
7201,"public  Object Loader open (  Any Object Id object Id )  throws IO Exception{ return open ( object Id,  Object Reader . OBJ_ANY )  ; }"
7202,public  Selection Creator theme ( @ Style Res int theme Id ) { m Selection Spec . theme Id = theme Id ;  return this ; }
7203,public static void valid State ( final boolean expression ) { if  ( expression == false )  {     throw new  Illegal State Exception ( DEFAULT_VALID_STATE_EX_MESSAGE )  ;  }}
7204,"public  Object invoke Method (  String name,  Object [  ]  args )  throws  Eval Error{ // null callstack, one will be created for us  return invoke Method ( name, args, null, /*declaring Interpreter*/ null, null, false )  ; }"
7205,"public  Change Event< Document T> without Uncommitted Writes (  ) { return new  Change Event<> ( this . get Id (  ) , this . get Operation Type (  ) , this . get Full Document (  ) , this . get Namespace (  ) , this . get Document Key (  ) , this . get Update Description (  ) , false )  ; }"
7206,"public void test Incremental Mount Does Not Cause Multiple Updates (  ) { final  Test Component child1 = create ( m Context )  . build (  )  ;  final  Component root =  Column . create ( m Context )  . child (  Wrapper . create ( m Context )  . delegate ( child1 )  . width Px ( 10 )  . height Px ( 10 )  )  . build (  )  ;  m Litho View Rule . set Root ( root )  . attach To Window (  )  . set Size Specs ( make Size Spec ( 1000, EXACTLY ) , make Size Spec ( 1000, EXACTLY )  )  . measure (  )  . layout (  )  ;  final  Litho View litho View = m Litho View Rule . get Litho View (  )  ;  litho View . get Component Tree (  )  . mount Component ( new  Rect ( 0, -10, 10, -5 ) , true )  ;  assert That ( child1 . is Mounted (  )  )  . is False (  )  ;  assert That ( child1 . was On Unbind Called (  )  )  . is True (  )  ;  assert That ( child1 . was On Unmount Called (  )  )  . is True (  )  ;  litho View . get Component Tree (  )  . mount Component ( new  Rect ( 0, 0, 10, 5 ) , true )  ;  assert That ( child1 . is Mounted (  )  )  . is True (  )  ;  child1 . reset Interactions (  )  ;  litho View . get Component Tree (  )  . mount Component ( new  Rect ( 0, 5, 10, 15 ) , true )  ;  assert That ( child1 . is Mounted (  )  )  . is True (  )  ;  assert That ( child1 . was On Bind Called (  )  )  . is False (  )  ;  assert That ( child1 . was On Mount Called (  )  )  . is False (  )  ;  assert That ( child1 . was On Unbind Called (  )  )  . is False (  )  ;  assert That ( child1 . was On Unmount Called (  )  )  . is False (  )  ; }"
7207,"protected void drain (  ) { if  ( m Media Codec == null )      return ;   Byte Buffer [  ]  encoder Output Buffers = m Media Codec . get Output Buffers (  )  ;  int encoder Status, count = 0 ;  final  Media Muxer Wrapper muxer = m Weak Muxer . get (  )  ;  if  ( muxer == null )  {     //        	throw new  Null Pointer Exception ( ""muxer is unexpectedly null"" )  ;       Log . w ( TAG, ""muxer is unexpectedly null"" )  ;      return ;  } LOOP: while  ( m Is Capturing )  {     // get encoded data with maximum timeout duration of TIMEOUT_USEC ( =10 [ msec ]  )      encoder Status = m Media Codec . dequeue Output Buffer ( m Buffer Info, TIMEOUT_USEC )  ;      if  ( encoder Status ==  Media Codec . INFO_TRY_AGAIN_LATER )  {         // wait 5 counts ( =TIMEOUT_USEC x 5 = 50msec )  until data/EOS come         if  ( !m Is EOS )  {             if  ( ++count > 5 )                  // out of while                 break LOOP ;          }     } else if  ( encoder Status ==  Media Codec . INFO_OUTPUT_BUFFERS_CHANGED )  {         if  ( DEBUG )               Log . v ( TAG, ""INFO_OUTPUT_BUFFERS_CHANGED"" )  ;          // this shoud not come when encoding         encoder Output Buffers = m Media Codec . get Output Buffers (  )  ;      } else if  ( encoder Status ==  Media Codec . INFO_OUTPUT_FORMAT_CHANGED )  {         if  ( DEBUG )               Log . v ( TAG, ""INFO_OUTPUT_FORMAT_CHANGED"" )  ;          // and in that case, you should treat when  Media Codec . BUFFER_FLAG_CODEC_CONFIG come .          if  ( m Muxer Started )  {             // second time request is error             throw new  Runtime Exception ( ""format changed twice"" )  ;          }         // get output format from codec and pass them to muxer         // get Output Format should be called after INFO_OUTPUT_FORMAT_CHANGED otherwise crash .          // API >= 16         final  Media Format format = m Media Codec . get Output Format (  )  ;          m Track Index = muxer . add Track ( format )  ;          m Muxer Started = true ;          if  ( !muxer . start (  )  )  {             // we should wait until muxer is ready             synchronized  ( muxer )  {                 while  ( !muxer . is Started (  )  )  try {                     muxer . wait ( 100 )  ;                  } catch  ( final  Interrupted Exception e )  {                     break LOOP ;                  }             }         }     } else if  ( encoder Status < 0 )  {         // unexpected status         if  ( DEBUG )               Log . w ( TAG, ""drain:unexpected result from encoder#dequeue Output Buffer: "" + encoder Status )  ;      } else {         final  Byte Buffer encoded Data = encoder Output Buffers [ encoder Status ]  ;          if  ( encoded Data == null )  {             // this never should come .  .  . may be a  Media Codec internal error             throw new  Runtime Exception ( ""encoder Output Buffer "" + encoder Status + "" was null"" )  ;          }         if  (  ( m Buffer Info . flags &  Media Codec . BUFFER_FLAG_CODEC_CONFIG )  != 0 )  {             //  This sample is for API>=18 ( >= Android 4 . 3 ) , just ignore this flag here             if  ( DEBUG )                   Log . d ( TAG, ""drain:BUFFER_FLAG_CODEC_CONFIG"" )  ;              m Buffer Info . size = 0 ;          }         if  ( m Buffer Info . size != 0 )  {             // encoded data is ready, clear waiting counter             count = 0 ;              if  ( !m Muxer Started )  {                 // muxer is not ready .  .  . this will prrograming failure .                  throw new  Runtime Exception ( ""drain:muxer hasn't started"" )  ;              }             // write encoded data to muxer ( need to adjust presentation Time Us .              m Buffer Info . presentation Time Us = get PTS Us (  )  ;              muxer . write Sample Data ( m Track Index, encoded Data, m Buffer Info )  ;              prev Output PTS Us = m Buffer Info . presentation Time Us ;          }         // return buffer to encoder         m Media Codec . release Output Buffer ( encoder Status, false )  ;          if  (  ( m Buffer Info . flags &  Media Codec . BUFFER_FLAG_END_OF_STREAM )  != 0 )  {             // when EOS come .              m Muxer Started = m Is Capturing = false ;              // out of while             break ;          }     } }}"
7208,"public com . anychart . standalones .  Title line Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Height ( %s )  ; "", height )  )  ;  return this ; }"
7209,public void reset To Max (  ) { current Base Ms = next Max Delay Ms ; }
7210,"public void add Actor At ( int index,  Actor actor ) { throw new  Unsupported Operation Exception ( "" Use  Container#set Actor . "" )  ; }"
7211,"private void finish Init Synchronously (  Settings Data Provider settings Data Provider ) { final  Runnable runnable = new  Runnable (  )  {     @ Override     public void run (  )  {         do Background Initialization ( settings Data Provider )  ;      } } ;  final  Future<?> future = crash Handler Executor . submit ( runnable )  ;   Logger . get Logger (  )  . d ( "" Crashlytics detected incomplete initialization on previous app launch . "" + ""  Will initialize synchronously . "" )  ;  try {     future . get ( DEFAULT_MAIN_HANDLER_TIMEOUT_SEC,  Time Unit . SECONDS )  ;  } catch  (  Interrupted Exception e )  {      Logger . get Logger (  )  . e ( "" Crashlytics was interrupted during initialization . "", e )  ;  } catch  (  Execution Exception e )  {      Logger . get Logger (  )  . e ( "" Crashlytics encountered a problem during initialization . "", e )  ;  } catch  (  Timeout Exception e )  {      Logger . get Logger (  )  . e ( "" Crashlytics timed out during initialization . "", e )  ;  }}"
7212,"public com . anychart . core . resource . resourcelist .  Image Settings size (  String size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . size ( %s )  ; "", wrap Quotes ( size )  )  )  ;  return this ; }"
7213,"public com . anychart . core . annotations .  Fibonacci Arc x Scale ( com . anychart . scales .  Stock Scatter Date Time settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
7214,public void set Show Move Up Suggestion ( boolean show ) { m Show Move Up Suggestion = show ;  refresh Show Move Up Suggestion (  )  ; }
7215,"public void set Friction ( float friction ) { jni Set Friction ( addr, friction )  ; }"
7216,"public static  Object get Target Sdk Version ( @ Non Null I Abstract File manifest File )  throws  Stream Exception{  String result = get String Value ( manifest File, get Target Sdk Version X Path (  )  )  ;  try {     return  Integer . value Of ( result )  ;  } catch  (  Number Format Exception e )  {     return !result . is Empty (  )  ? result : null ;  }}"
7217,public  Glide Request< Transcode Type> dont Transform (  ) { return  (  Glide Request< Transcode Type> )  super . dont Transform (  )  ; }
7218,"public static void drop Table (  Database db, boolean if Exists ) {  String sql = ""DROP TABLE "" +  ( if Exists ? ""IF EXISTS "" : """" )  + ""\""KEEP_ENTITY\"""" ;  db . exec SQL ( sql )  ; }"
7219,"public boolean arrow Scroll ( int direction ) {  View current Focused = find Focus (  )  ;  if  ( current Focused == this )      current Focused = null ;   View next Focused =  Focus Finder . get Instance (  )  . find Next Focus ( this, current Focused, direction )  ;  final int max Jump X = get Max Scroll Amount X (  )  ;  final int max Jump Y = get Max Scroll Amount Y (  )  ;  if  ( next Focused != null && is Within Delta Of Screen X ( next Focused, max Jump X )  && is Within Delta Of Screen Y ( next Focused, max Jump Y )  )  {     //TODO     next Focused . get Drawing Rect ( m Temp Rect )  ;      offset Descendant Rect To My Coords ( next Focused, m Temp Rect )  ;      int scroll Delta X = compute Scroll Delta To Get Child Rect On Screen X ( m Temp Rect )  ;      do Scroll X ( scroll Delta X )  ;      int scroll Delta Y = compute Scroll Delta To Get Child Rect On Screen Y ( m Temp Rect )  ;      do Scroll Y ( scroll Delta Y )  ;      next Focused . request Focus ( direction )  ;  } else {     // no new focus     int scroll Delta X = max Jump X ;      int scroll Delta Y = max Jump Y ;      if  ( direction ==  View . FOCUS_UP && get Scroll X (  )  < scroll Delta X )  {         scroll Delta X = get Scroll X (  )  ;      } else if  ( direction ==  View . FOCUS_DOWN )  {         int da Right = get Child At ( get Child Count (  )  - 1 )  . get Right (  )  ;          int screen Right = get Scroll X (  )  + get Width (  )  ;          if  ( da Right - screen Right < max Jump X )  {             scroll Delta X = da Right - screen Right ;          }     }     if  ( direction ==  View . FOCUS_UP && get Scroll Y (  )  < scroll Delta Y )  {         scroll Delta Y = get Scroll Y (  )  ;      } else if  ( direction ==  View . FOCUS_DOWN )  {         int da Bottom = get Child At ( get Child Count (  )  - 1 )  . get Bottom (  )  ;          int screen Bottom = get Scroll Y (  )  + get Height (  )  ;          if  ( da Bottom - screen Bottom < max Jump Y )  {             scroll Delta Y = da Bottom - screen Bottom ;          }     }     if  ( scroll Delta X == 0 && scroll Delta Y == 0 )  {         return false ;      } else if  ( scroll Delta X == 0 )  {         do Scroll Y ( direction ==  View . FOCUS_DOWN ? scroll Delta Y : -scroll Delta Y )  ;      } else if  ( scroll Delta Y == 0 )  {         do Scroll X ( direction ==  View . FOCUS_DOWN ? scroll Delta X : -scroll Delta X )  ;      } } if  ( current Focused != null && current Focused . is Focused (  )  && is Off Screen ( current Focused )  )  {     // previously focused item still has focus and is off screen, give     // it up  ( take it back to ourselves )      //  ( also, need to temporarily force FOCUS_BEFORE_DESCENDANTS so we are     // sure to     // get it )      // save     final int descendant Focusability = get Descendant Focusability (  )  ;      set Descendant Focusability (  View Group . FOCUS_BEFORE_DESCENDANTS )  ;      request Focus (  )  ;      // restore     set Descendant Focusability ( descendant Focusability )  ;  } return true ; }"
7220,"protected void with Bind Holder (  Single Item Holder holder,  String data, int position ) { bindthis Inhere ( holder, data, position )  ; }"
7221,"private void check Throws (  ) { exception Superclass . check Throws (  Binding Method Validator . this, element, report )  ; }"
7222,"private void update Existing Row ( final SQ Lite Database database, final long id, boolean bump Count ) {  String string Id =  String . value Of ( id )  ;  // begin the transaction database . begin Transaction (  )  ;  // get the cursor of this content inside the transaction final  Cursor cursor = database . query (  Song Play Count Columns . NAME, null, WHERE_ID_EQUALS, new  String [  ]  { string Id }, null, null, null )  ;  // if we have a result if  ( cursor != null && cursor . move To First (  )  )  {     // figure how many weeks since we last updated     int last Updated Index = cursor . get Column Index (  Song Play Count Columns . LAST_UPDATED_WEEK_INDEX )  ;      int last Updated Week = cursor . get Int ( last Updated Index )  ;      int week Diff = m Number Of Weeks Since Epoch - last Updated Week ;      // if it's more than the number of weeks we track, delete it and create a new entry     if  (  Math . abs ( week Diff )  >= NUM_WEEKS )  {         // this entry needs to be dropped since it is too outdated         delete Entry ( database, string Id )  ;          if  ( bump Count )  {             create New Played Entry ( database, id )  ;          }     } else if  ( week Diff != 0 )  {         // else, shift the weeks         int [  ]  play Counts = new int [ NUM_WEEKS ]  ;          if  ( week Diff > 0 )  {             // time is shifted forwards             for  ( int i = 0 ;  i < NUM_WEEKS - week Diff ;  i++ )  {                 //所有周播放数后移week Diff列,【0】为0                 play Counts [ i + week Diff ]  = cursor . get Int ( get Column Index For Week ( i )  )  ;              }         } else if  ( week Diff < 0 )  {             // NUM_WEEKS +  ( -2 )  we set the new week i = old week i -  ( -2 )  or i+2             for  ( int i = 0 ;  i < NUM_WEEKS + week Diff ;  i++ )  {                 play Counts [ i ]  = cursor . get Int ( get Column Index For Week ( i - week Diff )  )  ;              }         }         // bump the count         if  ( bump Count )  {             //最近第一周播放次数加1             play Counts [ 0 ] ++ ;          }         float score = calculate Score ( play Counts )  ;          // if the score is non-existant, then delete it         if  ( score <  . 01f )  {             delete Entry ( database, string Id )  ;          } else {             // create the content values              Content Values values = new  Content Values ( NUM_WEEKS + 2 )  ;              values . put (  Song Play Count Columns . LAST_UPDATED_WEEK_INDEX, m Number Of Weeks Since Epoch )  ;              values . put (  Song Play Count Columns . PLAYCOUNTSCORE, score )  ;              for  ( int i = 0 ;  i < NUM_WEEKS ;  i++ )  {                 values . put ( get Column Name For Week ( i ) , play Counts [ i ]  )  ;              }             // update the entry             database . update (  Song Play Count Columns . NAME, values, WHERE_ID_EQUALS, new  String [  ]  { string Id } )  ;          }     } else if  ( bump Count )  {         // else no shifting, just update the scores          Content Values values = new  Content Values ( 2 )  ;          // increase the score by a single score amount         int score Index = cursor . get Column Index (  Song Play Count Columns . PLAYCOUNTSCORE )  ;          float score = cursor . get Float ( score Index )  + get Score Multiplier For Week ( 0 )  ;          values . put (  Song Play Count Columns . PLAYCOUNTSCORE, score )  ;          // increase the play count by 1         values . put ( get Column Name For Week ( 0 ) , cursor . get Int ( get Column Index For Week ( 0 )  )  + 1 )  ;          // update the entry         database . update (  Song Play Count Columns . NAME, values, WHERE_ID_EQUALS, new  String [  ]  { string Id } )  ;      }     cursor . close (  )  ;  } else if  ( bump Count )  {     // if we have no existing results, create a new one     create New Played Entry ( database, id )  ;  } database . set Transaction Successful (  )  ;  database . end Transaction (  )  ; }"
7223,"protected  Path write Link (  String link,  String target )  throws  Exception{ return J Git Test Util . write Link ( db, link, target )  ; }"
7224,public boolean is Empty (  ) { return  ( modified == null || modified . is Empty (  )  )  &&  ( deleted == null || deleted . is Empty (  )  )  ; }
7225,"private  String read Text (  Xml Pull Parser parser )  throws IO Exception,  Xml Pull Parser Exception{  String result = """" ;  if  ( parser . next (  )  ==  Xml Pull Parser . TEXT )  {     result = parser . get Text (  )  ;      parser . next Tag (  )  ;  } return result ; }"
7226,boolean was Interrupted (  ) { return get State (  )  == INTERRUPTED ; }
7227,"public com . anychart . core . axes .  Ticks minor Ticks (  ) { return new com . anychart . core . axes .  Ticks ( js Base + "" . minor Ticks (  ) "" )  ; }"
7228,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
7229,"public void anchor (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . anchor (  )  ; "" )  ; }"
7230,"public  Blame Generator reverse (  Any Object Id start,  Any Object Id end )  throws IO Exception{ return reverse ( start,  Collections . singleton ( end . to Object Id (  )  )  )  ; }"
7231,"public void build Finished (  Build Event .  Finished event ) { write To Log ( PREFIX_BUILD_FINISHED, event )  ; }"
7232,"public void zoom ( float scale X, float scale Y, float x, float y ) { m View Port Handler . zoom ( scale X, scale Y, x, -y, m Zoom Matrix Buffer )  ;  m View Port Handler . refresh ( m Zoom Matrix Buffer, this, false )  ;  //  Range might have changed, which means that Y-axis labels // could have changed in size, affecting Y-axis size .  //  So we need to recalculate offsets .  calculate Offsets (  )  ;  post Invalidate (  )  ; }"
7233,public void set Key ( @ Non Null final byte [  ]  key ) { if  ( valid ( key )  )  {     this . key = key ;  }}
7234,"private static float [  ]  insert ( float [  ]  array, int current Size, int index, float element ) { if  ( current Size + 1 <= array . length )  {      System . arraycopy ( array, index, array, index + 1, current Size - index )  ;      array [ index ]  = element ;      return array ;  } float [  ]  new Array = new float [ grow Size ( current Size )  ]  ;   System . arraycopy ( array, 0, new Array, 0, index )  ;  new Array [ index ]  = element ;   System . arraycopy ( array, index, new Array, index + 1, array . length - index )  ;  return new Array ; }"
7235,"private  View create View (  Layout Inflater inflater, @ Nullable  View header View, boolean fixed Header, @ Nullable  View footer View, boolean fixed Footer,  Base Adapter adapter ) {  View view = holder . get View ( inflater, root View )  ;  if  ( holder instanceof  View Holder )  {     assign Click Listener Recursively ( view )  ;  } if  ( header View != null )  {     assign Click Listener Recursively ( header View )  ;      holder . add Header ( header View, fixed Header )  ;  } if  ( footer View != null )  {     assign Click Listener Recursively ( footer View )  ;      holder . add Footer ( footer View, fixed Footer )  ;  } if  ( adapter != null && holder instanceof  Holder Adapter )  {      Holder Adapter holder Adapter =  (  Holder Adapter )  holder ;      holder Adapter . set Adapter ( adapter )  ;      holder Adapter . set On Item Click Listener ( new  On Holder Listener (  )  {         @ Override         public void on Item Click ( @ Non Null  Object item, @ Non Null  View view, int position )  {             if  ( on Item Click Listener == null )  {                 return ;              }             on Item Click Listener . on Item Click (  Dialog Plus . this, item, view, position )  ;          }     } )  ;  } return view ; }"
7236,public void set Clear Icon Tint ( int clear Icon Tint ) { this . clear Icon Tint = clear Icon Tint ;  setup Clear Icon Tint (  )  ; }
7237,"public static boolean is ID3v23 Frame Identifier (  String identifier ) { return identifier . length (  )  >= 4 && ID3v23 Frames . get Instance Of (  )  . get Id To Value Map (  )  . contains Key ( identifier . substring ( 0, 4 )  )  ; }"
7238,"public boolean is Match (  String relative Target, boolean is Directory ) { if  ( relative Target == null )      return false ;  if  ( relative Target . length (  )  == 0 )      return false ;  boolean match = matcher . matches ( relative Target, is Directory, true )  ;  return match ; }"
7239,"public  Object [  ]  convert To Args ( @ Non Null  Orma Connection conn, @ Non Null  Entry model, boolean without Auto Id ) {  Object [  ]  args = new  Object [ without Auto Id ? 2 : 3 ]  ;  if  ( model . resource Type != null )  {     args [ 0 ]  = model . resource Type ;  } else {     throw new  Illegal Argument Exception ( "" Entry . resource Type"" + "" must not be null, or use @ Nullable to declare it as NULL"" )  ;  } args [ 1 ]  = model . resource Id ;  if  ( !without Auto Id )  {     args [ 2 ]  = model . id ;  } return args ; }"
7240,public void set Threads ( int threads ) { this . threads = threads ; }
7241,"public com . anychart . charts .  Tree Map bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
7242,"public com . anychart . core . map . series .  Choropleth geo Id Field (  String id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . geo Id Field ( %s )  ; "", wrap Quotes ( id )  )  )  ;  return this ; }"
7243,private boolean has Flash (  ) { return get Application Context (  )  . get Package Manager (  )  . has System Feature (  Package Manager . FEATURE_CAMERA_FLASH )  ; }
7244,"Dependency Request for Synthetic Present Optional Binding (  Key request Key,  Request Kind kind ) {  Optional< Key> key = key Factory . unwrap Optional ( request Key )  ;  check Argument ( key . is Present (  ) , ""not a request for optional: %s"", request Key )  ;  return  Dependency Request . builder (  )  . kind ( kind )  . key ( key . get (  )  )  . is Nullable ( allows Null ( get Request Kind (  Optional Type . from ( request Key )  . value Type (  )  ) ,  Optional . empty (  )  )  )  . build (  )  ; }"
7245,public  String get App Version (  ) { return app Version ; }
7246,public boolean is Empty (  ) { return size == 0 ; }
7247,void loop Once (  )  throws  Interrupted Exception{ boolean completed One = false ;  while  ( !completed One )  {      Task Type task = take Task (  )  ;      completed One = eval ( task )  ;  }}
7248,protected final void once View Attached (  View Action<V> action ) { view Action Queue . add ( action )  ;  run Queued Actions (  )  ; }
7249,"public static void set Default Configuration (  Realm Configuration configuration ) { //noinspection  Constant Conditions if  ( configuration == null )  {     throw new  Illegal Argument Exception ( ""A non-null  Realm Configuration must be provided"" )  ;  } synchronized  ( default Configuration Lock )  {     default Configuration = configuration ;  }}"
7250,protected void on Choice Ended (  ) { if  ( swipe List View Listener != null )  {     swipe List View Listener . on Choice Ended (  )  ;  }}
7251,"public com . anychart . core . utils .  Padding padding (  ) { return new com . anychart . core . utils .  Padding ( js Base + "" . padding (  ) "" )  ; }"
7252,"private void draw Ticks (  Canvas canvas, double min, double max, double min Angle, double max Angle, int center X, int center Y, double long Radius, double short Radius, double ticks,  Paint paint, boolean labels ) { for  ( double i = min ;  i <= max ;  i += ticks )  {     double angle = get Angle For Value ( i, min Angle, max Angle, min, max )  ;      double sin Value =  Math . sin ( angle )  ;      double cos Value =  Math . cos ( angle )  ;      int x1 =  Math . round ( center X +  ( float )   ( short Radius * sin Value )  )  ;      int y1 =  Math . round ( center Y +  ( float )   ( short Radius * cos Value )  )  ;      int x2 =  Math . round ( center X +  ( float )   ( long Radius * sin Value )  )  ;      int y2 =  Math . round ( center Y +  ( float )   ( long Radius * cos Value )  )  ;      canvas . draw Line ( x1, y1, x2, y2, paint )  ;      if  ( labels )  {         paint . set Text Align (  Align . LEFT )  ;          if  ( x1 <= x2 )  {             paint . set Text Align (  Align . RIGHT )  ;          }          String text = i + """" ;          if  (  Math . round ( i )  ==  ( long )  i )  {             text =  ( long )  i + """" ;          }         canvas . draw Text ( text, x1, y1, paint )  ;      } }}"
7253,"public static final  Intent get Range Bar Chart Intent (  Context context, XY Multiple Series Dataset dataset, XY Multiple Series Renderer renderer,  Type type,  String activity Title ) { check Parameters ( dataset, renderer )  ;   Intent intent = new  Intent ( context,  Graphical Activity . class )  ;   Range Bar Chart chart = new  Range Bar Chart ( dataset, renderer, type )  ;  intent . put Extra ( CHART, chart )  ;  intent . put Extra ( TITLE, activity Title )  ;  return intent ; }"
7254,"public void get Drilldown Path (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Drilldown Path (  )  ; "" )  ; }"
7255,"public synchronized void measure ( int tag, int [  ]  output Buffer ) { if  ( DEBUG_MODE )  {     F Log . d ( TAG, ""measure [ %d ] "", tag )  ;  }  Ui Thread Util . assert On Ui Thread (  )  ;   View v = m Tags To Views . get ( tag )  ;  if  ( v == null )  {     throw new  No Such Native View Exception ( "" No native view for "" + tag + "" currently exists"" )  ;  }  View root View =  (  View )   Root View Util . get Root View ( v )  ;  // and has been removed by clipping if  ( root View == null )  {     throw new  No Such Native View Exception ( "" Native view "" + tag + "" is no longer on screen"" )  ;  } compute Bounding Box ( root View, output Buffer )  ;  int root X = output Buffer [ 0 ]  ;  int root Y = output Buffer [ 1 ]  ;  compute Bounding Box ( v, output Buffer )  ;  output Buffer [ 0 ]  -= root X ;  output Buffer [ 1 ]  -= root Y ; }"
7256,"public P Stream map (  Function< Item,  Item> item Converter ) { return this . transform (  Mappers . map Each Item ( item Converter )  )  ; }"
7257,"public com . anychart . charts .  Pie overlap Mode (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . overlap Mode ( %s )  ; "", value )  )  ;  return this ; }"
7258,"public com . anychart . core . gantt .  Time Line Header h Align ( com . anychart . graphics . vector . text . H Align align ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . h Align ( %s )  ; "",  ( align != null )  ? align . get Js Base (  )  : null )  )  ;  return this ; }"
7259,"public com . anychart . core . annotations .  Triangle stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7260,"public static  Collector<T, ?,  Immutable Map<K, V>> to Immutable Map (  Function<? super T, ? extends K> key Function,  Function<? super T, ? extends V> value Function ) { throw new  Unsupported Operation Exception (  )  ; }"
7261,public boolean is Running (  ) { return m Running ; }
7262,"public  Commit Builder add (  String path,  Rev Blob id )  throws  Exception{ return edit ( new  Path Edit ( path )  {     @ Override     public void apply (  Dir Cache Entry ent )  {         ent . set File Mode (  File Mode . REGULAR_FILE )  ;          ent . set Object Id ( id )  ;      } } )  ; }"
7263,private int get Count Phi Insns (  ) { int count Phi Insns ;  int sz = insns . size (  )  ;  for  ( count Phi Insns = 0 ;  count Phi Insns < sz ;  count Phi Insns++ )  {      Ssa Insn insn = insns . get ( count Phi Insns )  ;      if  ( ! ( insn instanceof  Phi Insn )  )  {         break ;      } } return count Phi Insns ; }
7264,public  Json Element remove ( int index ) { return elements . remove ( index )  ; }
7265,private void remove Delimiter And Node (  Delimiter delim ) {  Text node = delim . node ;  node . unlink (  )  ;  remove Delimiter ( delim )  ; }
7266,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
7267,"public byte [  ]  unwrap ( byte [  ]  message,  Public Key peer Public Key )  throws  Secure Message Wrap Exception{ if  ( null == peer Public Key )  {     throw new  Null Argument Exception ( "" Peer public key was not provided"" )  ;  } if  ( null == message )  {     throw new  Null Argument Exception ( "" No message was provided"" )  ;  } byte [  ]  unwrapped Message = process ( this . private Key . to Byte Array (  ) , peer Public Key . to Byte Array (  ) , message, SECURE_MESSAGE_DECRYPT )  ;  if  ( null == unwrapped Message )  {     throw new  Secure Message Wrap Exception (  )  ;  } return unwrapped Message ; }"
7268,public synchronized boolean set Read Position ( int sample Index ) { if  ( absolute First Index <= sample Index && sample Index <= absolute First Index + length )  {     read Position = sample Index - absolute First Index ;      return true ;  } return false ; }
7269,"public com . anychart . standalones . axes .  Radial inner Radius (  Number value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . inner Radius ( %s )  ; "", value )  )  ;  return this ; }"
7270,"public com . anychart . standalones .  Resource List draw (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . draw (  )  ; "" )  ;  return this ; }"
7271,"public  Attribute Info copy (  Const Pool new Cp,  Map< String,  String> classnames ) { int s = size (  )  ;   Const Pool cp = get Const Pool (  )  ;   String [  ]  names = new  String [ s ]  ;  int [  ]  flags = new int [ s ]  ;  for  ( int i = 0 ;  i < s ;  i++ )  {     names [ i ]  = cp . get Utf8 Info ( name ( i )  )  ;      flags [ i ]  = access Flags ( i )  ;  } return new  Method Parameters Attribute ( new Cp, names, flags )  ; }"
7272,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
7273,protected CV create Content View (  View view ) { return  ( CV )  view . find View By Id ( R . id . content View )  ; }
7274,"Immutable Sorted Map< Path,  Source Path> public Cxx Headers (  ) { return  Immutable Sorted Map . of (  )  ; }"
7275,"public com . anychart . charts .  Radar padding (  String value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
7276,"public int get Fingerprint Id ( int index ) { return  Reflection Helpers . call Instance Method ( get Enrolled Fingerprints (  )  . get ( index ) ,  Runtime Environment . get Api Level (  )  > P ? ""get Biometric Id"" : ""get Finger Id"" )  ; }"
7277,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
7278,"public static  Consuming Traverser<N> topologically Sorted (  Iterable<? extends N> start Nodes,  For Each Successor Function<N> successors ) { return new  Consuming Traverser<N> (  )  {     @ Override     public void for Each (  Consumer<N> consumer )  {          Set<N> visited = new  Hash Set<> (  )  ;           Hash Multiset<N> incoming Edges =  Hash Multiset . create (  )  ;           Queue<N> nodes To Process = new  Array Deque<> (  )  ;          //  Do an initial pass to count incoming edges .           Consumer<N> process Dep =  node -> {             incoming Edges . add ( node )  ;              nodes To Process . offer ( node )  ;          } ;          start Nodes . for Each ( nodes To Process::add )  ;          while  ( !nodes To Process . is Empty (  )  )  {             N node = nodes To Process . remove (  )  ;              if  ( visited . add ( node )  )  {                 successors . for Each Successor ( node, process Dep )  ;              }         }         //  Setup a consumer that we'll apply to all deps in the second pass .    This will decrement         // the incoming edges count and add it to the queue if it's zero .           Consumer<N> enqueue Deps =  node -> {             if  ( incoming Edges . remove ( node, 1 )  == 1 )  {                 nodes To Process . offer ( node )  ;              }         } ;          for  ( N node : start Nodes )  {             if  ( incoming Edges . count ( node )  == 0 )  {                 nodes To Process . add ( node )  ;              }         }         while  ( !nodes To Process . is Empty (  )  )  {             N node = nodes To Process . remove (  )  ;              if  ( visited . remove ( node )  )  {                 consumer . accept ( node )  ;                  successors . for Each Successor ( node, enqueue Deps )  ;              }         }         //  At this point, there should be no remaining edges to explore .           Preconditions . check State ( incoming Edges . is Empty (  ) , "" Cycle detected in graph"" )  ;      } } ; }"
7279,"public void mark Start (  Collection< Rev Commit> list )  throws  Missing Object Exception,  Incorrect Object Type Exception, IO Exception{ for  (  Rev Commit c : list )  mark Start ( c )  ; }"
7280,"public int insert At ( int line Num, boolean modify,  String src )  throws  Cannot Compile Exception{  Code Attribute ca = method Info . get Code Attribute (  )  ;  if  ( ca == null )      throw new  Cannot Compile Exception ( ""no method body"" )  ;   Line Number Attribute ainfo =  (  Line Number Attribute )  ca . get Attribute (  Line Number Attribute . tag )  ;  if  ( ainfo == null )      throw new  Cannot Compile Exception ( ""no line number info"" )  ;   Line Number Attribute .  Pc pc = ainfo . to Near Pc ( line Num )  ;  line Num = pc . line ;  int index = pc . index ;  if  ( !modify )      return line Num ;   Ct Class cc = declaring Class ;  cc . check Modify (  )  ;   Code Iterator iterator = ca . iterator (  )  ;   Javac jv = new  Javac ( cc )  ;  try {     jv . record Local Variables ( ca, index )  ;      jv . record Params ( get Parameter Types (  ) ,  Modifier . is Static ( get Modifiers (  )  )  )  ;      jv . set Max Locals ( ca . get Max Locals (  )  )  ;      jv . compile Stmnt ( src )  ;       Bytecode b = jv . get Bytecode (  )  ;      int locals = b . get Max Locals (  )  ;      int stack = b . get Max Stack (  )  ;      ca . set Max Locals ( locals )  ;      /*  We assume that there is no values in the operand stack          * at the position where the bytecode is inserted .           */     if  ( stack > ca . get Max Stack (  )  )          ca . set Max Stack ( stack )  ;      index = iterator . insert At ( index, b . get (  )  )  ;      iterator . insert ( b . get Exception Table (  ) , index )  ;      method Info . rebuild Stack Map If6 ( cc . get Class Pool (  ) , cc . get Class File2 (  )  )  ;      return line Num ;  } catch  (  Not Found Exception e )  {     throw new  Cannot Compile Exception ( e )  ;  } catch  (  Compile Error e )  {     throw new  Cannot Compile Exception ( e )  ;  } catch  (  Bad Bytecode e )  {     throw new  Cannot Compile Exception ( e )  ;  }}"
7281,public int id (  ) { return id ; }
7282,protected  Ct Member .  Cache has Member Cache (  ) { if  ( member Cache != null )      return member Cache . get (  )  ;  return null ; }
7283,"public  Runtime Exception rethrow (  Throwable e,  Class<X> declared Type )  throws IO Exception, X{ check Not Null ( e )  ;  thrown = e ;   Throwables . propagate If Possible ( e, IO Exception . class )  ;   Throwables . propagate If Possible ( e, declared Type )  ;  throw new  Runtime Exception ( e )  ; }"
7284,public void set Ok Color (  String color ) { m Ok Color =  Color . parse Color ( color )  ; }
7285,"public synchronized void load (  String file Name,  Class<T> type ) { load ( file Name, type, null )  ; }"
7286,"public com . anychart . core .  Separate Chart label (  String index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , settings )  )  ;  return this ; }"
7287,public static  Hash Function crc32 (  ) { return  Checksum Type . CRC_32 . hash Function ; }
7288,"protected  Database create Database (  ) { SQ Lite Database sq Lite Database ;  if  ( in Memory )  {     sq Lite Database = SQ Lite Database . create ( null )  ;  } else {     get Context (  )  . delete Database ( DB_NAME )  ;      sq Lite Database = get Context (  )  . open Or Create Database ( DB_NAME, 0, null )  ;  } return new  Standard Database ( sq Lite Database )  ; }"
7289,"public static void write JSON String (  Writer writer,  Object object,  Serializer Feature .  .  .  features ) { write JSON String ( writer, object, JSON . DEFAULT_GENERATE_FEATURE, features )  ; }"
7290,private static  Parameter Spec get Parameter Spec With Nullable (  Variable Element parameter ) {  Parameter Spec .  Builder builder =  Parameter Spec . get ( parameter )  . to Builder (  )  ;  get Nullable Annotation Spec ( parameter )  . if Present ( builder::add Annotation )  ;  return builder . build (  )  ; }
7291,"public void allow Point Settings (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . allow Point Settings (  )  ; "" )  ; }"
7292,"private  String safe (  String src ) {  String Buffer sb = new  String Buffer (  )  ;  for  ( int i = 0 ;  i < src . length (  )  ;  i++ )  {     char c = src . char At ( i )  ;      if  ( c >= 32 && c < 128 )  {         sb . append ( c )  ;      } else {         sb . append ( ""<"" +  ( int )  c + "">"" )  ;      } } return sb . to String (  )  ; }"
7293,"private void set ( int idx, float x, float y, float width, float height, float color ) { final float fx2 = x + width ;  final float fy2 = y + height ;  final float [  ]  vertices = this . vertices ;  vertices [ idx ]  = x ;  vertices [ idx + 1 ]  = y ;  vertices [ idx + 2 ]  = color ;  vertices [ idx + 5 ]  = x ;  vertices [ idx + 6 ]  = fy2 ;  vertices [ idx + 7 ]  = color ;  vertices [ idx + 10 ]  = fx2 ;  vertices [ idx + 11 ]  = fy2 ;  vertices [ idx + 12 ]  = color ;  vertices [ idx + 15 ]  = fx2 ;  vertices [ idx + 16 ]  = y ;  vertices [ idx + 17 ]  = color ; }"
7294,public static void add Gms Core Package Info (  ) {  Package Manager pm =  Application Provider . get Application Context (  )  . get Package Manager (  )  ;   Package Info gms Package Info = new  Package Info (  )  ;  gms Package Info . package Name = GOOGLE_PLAY_SERVICES_PACKAGE ;  gms Package Info . application Info = new  Application Info (  )  ;  gms Package Info . application Info . package Name = gms Package Info . package Name ;  gms Package Info . requested Permissions = new  String [  ]  { GMSCORE_SEND_PERMISSION } ;  shadow Of ( pm )  . add Package ( gms Package Info )  ; }
7295,"public com . anychart . charts .  Mekko margin (  String margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "", wrap Quotes ( margin )  )  )  ;  return this ; }"
7296,"int copy ( int src Index ) { return src Pool . copy ( src Index, dest Pool, classnames )  ; }"
7297,public void set Abbreviation Length ( int count ) { if  ( count < 0 )      throw new  Illegal Argument Exception ( J Git Text . get (  )  . abbreviation Length Must Be Non Negative )  ;  abbreviation Length = count ; }
7298,"public  Parcelable on Save Instance State (  ) { if  ( is In Edit Mode )      return null ;   Parcelable super State = delegate Callback . super On Save Instance State (  )  ;  if  ( keep Presenter During Screen Orientation Change )  {     return new  Mosby Saved State ( super State, mosby View Id )  ;  } else {     return super State ;  }}"
7299,"public static  String make Session Id (  String url, boolean is Account Related ) { return get Instance (  )  . get Runtime (  )  . make Session Id ( url, is Account Related )  ; }"
7300,"public static void put View State ( @ Non Null  Activity activity, @ Non Null  String view Id, @ Non Null  Object view State ) { if  ( activity == null )  {     throw new  Null Pointer Exception ( "" Activity is null"" )  ;  }  Activity Scoped Cache scoped Cache = get Or Create Activity Scoped Cache ( activity )  ;  scoped Cache . put View State ( view Id, view State )  ; }"
7301,"public static  Comparator< Dfs Pack Description> object Lookup Comparator (  Comparator< Pack Source> pack Source Comparator ) { return  Comparator . comparing (  Dfs Pack Description::get Pack Source, pack Source Comparator )  . then Comparing (  (  a,  b )  -> {      Pack Source as = a . get Pack Source (  )  ;       Pack Source bs = b . get Pack Source (  )  ;      // compression, placing less demand on the  Dfs Block Cache .      if  ( as == bs && is GC ( as )  )  {         int cmp =  Long . signum ( a . get File Size ( PACK )  - b . get File Size ( PACK )  )  ;          if  ( cmp != 0 )  {             return cmp ;          }     }     //  Newer packs should sort first .      int cmp =  Long . signum ( b . get Last Modified (  )  - a . get Last Modified (  )  )  ;      if  ( cmp != 0 )  {         return cmp ;      }     // big historical packs to the end of the list, due to more objects .      return  Long . signum ( a . get Object Count (  )  - b . get Object Count (  )  )  ;  } )  ; }"
7302,"public com . anychart . core . utils .  Legend Item Settings disabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . disabled ( %s )  ; "", enabled )  )  ;  return this ; }"
7303,"protected long log Event (  String event Type, JSON Object event Properties, JSON Object api Properties, JSON Object user Properties, JSON Object groups, JSON Object group Properties, long timestamp, boolean out Of Session ) { logger . d ( TAG, "" Logged event to  Amplitude: "" + event Type )  ;  if  ( opt Out )  {     return -1 ;  } // skip session check if logging start_session or end_session events boolean logging Session Event = tracking Session Events &&  ( event Type . equals ( START_SESSION_EVENT )  || event Type . equals ( END_SESSION_EVENT )  )  ;  if  ( !logging Session Event && !out Of Session )  {     // default case + corner case when async log Event between on Pause and on Resume     if  ( !in Foreground )  {         start New Session If Needed ( timestamp )  ;      } else {         refresh Session Time ( timestamp )  ;      } } long result = -1 ;  JSON Object event = new JSON Object (  )  ;  try {     event . put ( ""event_type"", replace With JSON Null ( event Type )  )  ;      event . put ( ""timestamp"", timestamp )  ;      event . put ( ""user_id"", replace With JSON Null ( user Id )  )  ;      event . put ( ""device_id"", replace With JSON Null ( device Id )  )  ;      event . put ( ""session_id"", out Of Session ? -1 : session Id )  ;      event . put ( ""uuid"", UUID . random UUID (  )  . to String (  )  )  ;      event . put ( ""sequence_number"", get Next Sequence Number (  )  )  ;      if  ( applied Tracking Options . should Track Version Name (  )  )  {         event . put ( ""version_name"", replace With JSON Null ( device Info . get Version Name (  )  )  )  ;      }     if  ( applied Tracking Options . should Track Os Name (  )  )  {         event . put ( ""os_name"", replace With JSON Null ( device Info . get Os Name (  )  )  )  ;      }     if  ( applied Tracking Options . should Track Os Version (  )  )  {         event . put ( ""os_version"", replace With JSON Null ( device Info . get Os Version (  )  )  )  ;      }     if  ( applied Tracking Options . should Track Api Level (  )  )  {         event . put ( ""api_level"", replace With JSON Null (  Build . VERSION . SDK_INT )  )  ;      }     if  ( applied Tracking Options . should Track Device Brand (  )  )  {         event . put ( ""device_brand"", replace With JSON Null ( device Info . get Brand (  )  )  )  ;      }     if  ( applied Tracking Options . should Track Device Manufacturer (  )  )  {         event . put ( ""device_manufacturer"", replace With JSON Null ( device Info . get Manufacturer (  )  )  )  ;      }     if  ( applied Tracking Options . should Track Device Model (  )  )  {         event . put ( ""device_model"", replace With JSON Null ( device Info . get Model (  )  )  )  ;      }     if  ( applied Tracking Options . should Track Carrier (  )  )  {         event . put ( ""carrier"", replace With JSON Null ( device Info . get Carrier (  )  )  )  ;      }     if  ( applied Tracking Options . should Track Country (  )  )  {         event . put ( ""country"", replace With JSON Null ( device Info . get Country (  )  )  )  ;      }     if  ( applied Tracking Options . should Track Language (  )  )  {         event . put ( ""language"", replace With JSON Null ( device Info . get Language (  )  )  )  ;      }     if  ( applied Tracking Options . should Track Platform (  )  )  {         event . put ( ""platform"", platform )  ;      }     JSON Object library = new JSON Object (  )  ;      library . put ( ""name"", this . library Name == null ?  Constants . LIBRARY_UNKNOWN : this . library Name )  ;      library . put ( ""version"", this . library Version == null ?  Constants . VERSION_UNKNOWN : this . library Version )  ;      event . put ( ""library"", library )  ;      api Properties =  ( api Properties == null )  ? new JSON Object (  )  : api Properties ;      if  ( api Properties Tracking Options != null && api Properties Tracking Options . length (  )  > 0 )  {         api Properties . put ( ""tracking_options"", api Properties Tracking Options )  ;      }     if  ( applied Tracking Options . should Track Lat Lng (  )  )  {          Location location = device Info . get Most Recent Location (  )  ;          if  ( location != null )  {             JSON Object location JSON = new JSON Object (  )  ;              location JSON . put ( ""lat"", location . get Latitude (  )  )  ;              location JSON . put ( ""lng"", location . get Longitude (  )  )  ;              api Properties . put ( ""location"", location JSON )  ;          }     }     if  ( applied Tracking Options . should Track Adid (  )  && device Info . get Advertising Id (  )  != null )  {         api Properties . put ( ""android ADID"", device Info . get Advertising Id (  )  )  ;      }     api Properties . put ( ""limit_ad_tracking"", device Info . is Limit Ad Tracking Enabled (  )  )  ;      api Properties . put ( ""gps_enabled"", device Info . is Google Play Services Enabled (  )  )  ;      event . put ( ""api_properties"", api Properties )  ;      event . put ( ""event_properties"",  ( event Properties == null )  ? new JSON Object (  )  : truncate ( event Properties )  )  ;      event . put ( ""user_properties"",  ( user Properties == null )  ? new JSON Object (  )  : truncate ( user Properties )  )  ;      event . put ( ""groups"",  ( groups == null )  ? new JSON Object (  )  : truncate ( groups )  )  ;      event . put ( ""group_properties"",  ( group Properties == null )  ? new JSON Object (  )  : truncate ( group Properties )  )  ;      result = save Event ( event Type, event )  ;  } catch  ( JSON Exception e )  {     logger . e ( TAG,  String . format ( ""JSON  Serialization of event type %s failed, skipping: %s"", event Type, e . to String (  )  )  )  ;  } return result ; }"
7304,"protected void add Precision Qualifier (  Data Type data Type,  Precision precision ) { m Precision Qualifier . put ( data Type . get Type String (  ) , precision )  ; }"
7305,"public void submit List ( @ Nullable final  List<? extends  Epoxy Model<?>> new List ) { final int run Generation ;  @ Nullable final  List<? extends  Epoxy Model<?>> previous List ;  synchronized  ( this )  {     //  Incrementing generation means any currently-running diffs are discarded when they finish     //  We synchronize to guarantee list object and generation number are in sync     run Generation = generation Tracker . increment And Get Next Scheduled (  )  ;      previous List = list ;  } if  ( new List == previous List )  {     // nothing to do     on Run Completed ( run Generation, new List,  Diff Result . no Op ( previous List )  )  ;      return ;  } if  ( new List == null || new List . is Empty (  )  )  {     // fast simple clear all      Diff Result result = null ;      if  ( previous List != null && !previous List . is Empty (  )  )  {         result =  Diff Result . clear ( previous List )  ;      }     on Run Completed ( run Generation, null, result )  ;      return ;  } if  ( previous List == null || previous List . is Empty (  )  )  {     // fast simple first insert     on Run Completed ( run Generation, new List,  Diff Result . inserted ( new List )  )  ;      return ;  } final  Diff Callback wrapped Callback = new  Diff Callback ( previous List, new List, diff Callback )  ;  executor . execute ( new  Runnable (  )  {     @ Override     public void run (  )  {          Diff Util .  Diff Result result =  Diff Util . calculate Diff ( wrapped Callback )  ;          on Run Completed ( run Generation, new List,  Diff Result . diff ( previous List, new List, result )  )  ;      } } )  ; }"
7306,"public com . anychart . core .  Separate Chart parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
7307,"public  Flavor Domain< Haskell Platform> get Platforms (  Flavor Domain< Unresolved Cxx Platform> cxx Platforms ) { // from the underlying c++ platform's flavor this will continue to work correctly .  return cxx Platforms . convert ( "" Haskell platform"",  cxx Platform -> cxx Platform . get Flavor (  )  . equals (  Default Cxx Platforms . FLAVOR )  ? get Platform ( haskell Buck Config . get Default Section (  ) , cxx Platform )  : get Platform ( haskell Buck Config . get Section For Platform ( cxx Platform ) , cxx Platform )  )  ; }"
7308,"public void on Attached To Recycler View ( @ Non Null  Recycler View recycler View ) { super . on Attached To Recycler View ( recycler View )  ;  log . v ( "" Attached  Adapter to  Recycler View"" )  ;  if  ( m Sticky Headers Enabled )  {     this . set Sticky Headers Helper ( true )  ;  }}"
7309,"public com . anychart . charts .  Pie bounds (  Number x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
7310,"private  Object Id insert ( int type, byte [  ]  data, int off, int len, boolean create Duplicate )  throws IO Exception{  Object Id id = id For ( type, data, off, len )  ;  if  ( !create Duplicate && db . has ( id )  )  {     return id ;  }  File tmp = to Temp ( type, data, off, len )  ;  return insert One Object ( tmp, id, create Duplicate )  ; }"
7311,public  Billing Status check Billing Supported (  ) { return  Billing Controller . check Billing Supported ( get Activity (  )  )  ; }
7312,"public com . anychart . standalones . axes .  Radial draw Last Label (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . draw Last Label ( %s )  ; "", enabled )  )  ;  return this ; }"
7313,public void set Remove Trailing Terminator On Write ( boolean remove Trailing Terminator On Write ) { this . remove Trailing Terminator On Write = remove Trailing Terminator On Write ; }
7314,"public com . anychart . core .  Chart padding (  String value1,  Number value2,  Number value3,  Number value4 ) { return new com . anychart . core .  Chart (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s ) "", wrap Quotes ( value1 ) , value2, value3, value4 )  )  ; }"
7315,public void show Layer Immediately ( int index ) { m Is Layer On [ index ]  = true ;  m Alphas [ index ]  = 255 ;  if  ( index == m Actual Image Layer )  {     m On Fade Listener Show Immediately = true ;  } invalidate Self (  )  ; }
7316,"public  Input Stream get Input Stream (  Context context,  String file Name )  throws IO Exception{  Input Stream is ;  if  ( is Assets File )      is = context . get Assets (  )  . open ( file Name )  ;  else     is = new  File Input Stream ( file Name )  ;  return is ; }"
7317,"public static  Image Type get Type ( @ Non Null  List< Image Header Parser> parsers, @ Nullable final  Byte Buffer buffer )  throws IO Exception{ if  ( buffer == null )  {     return  Image Type . UNKNOWN ;  } return get Type Internal ( parsers, new  Type Reader (  )  {     @ Override     public  Image Type get Type (  Image Header Parser parser )  throws IO Exception {         return parser . get Type ( buffer )  ;      } } )  ; }"
7318,"public static  Callable get Elem Function And This (  Object obj,  Object elem,  Context cx ) {  String s = to String Id Or Index ( cx, elem )  ;  if  ( s != null )  {     return get Prop Function And This ( obj, s, cx )  ;  } int index = last Index Result ( cx )  ;   Scriptable this Obj = to Object Or Null ( cx, obj )  ;  if  ( this Obj == null )  {     throw undef Call Error ( obj,  String . value Of ( index )  )  ;  }  Object value ;  for  (  ;   ;   )  {     //  Ignore XML lookup as required by ECMA 357, 11 . 2 . 2 . 1     value =  Scriptable Object . get Property ( this Obj, index )  ;      if  ( value !=  Scriptable . NOT_FOUND )  {         break ;      }     if  ( ! ( this Obj instanceof XML Object )  )  {         break ;      }     XML Object xml Object =  ( XML Object )  this Obj ;       Scriptable extra = xml Object . get Extra Method Source ( cx )  ;      if  ( extra == null )  {         break ;      }     this Obj = extra ;  } if  ( ! ( value instanceof  Callable )  )  {     throw not Function Error ( value, elem )  ;  } store Scriptable ( cx, this Obj )  ;  return  (  Callable )  value ; }"
7319,"public void save As Json (  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Json ( %s )  ; "", wrap Quotes ( filename )  )  )  ; }"
7320,"public void add Range Style ( int start, int end,  Grid Range Style range Style ) { m Range Style . add Child Range Style ( start, end, range Style )  ; }"
7321,protected void on Success ( @ Nullable T result ) {}
7322,"public com . anychart . core . gantt . edit .  Element Edit enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
7323,public int get Extra (  ) { return m Layout State . m Extra ; }
7324,"public static void add Test Page Set Entity (  Page Set Adapter page Set Adapter,  Context context ) {  Page Set Entity page Set Entity = new  Page Set Entity .  Builder (  )  . add Page Entity ( new  Page Entity ( new  Simple Apps Grid View ( context )  )  )  . set Icon Uri (  Image Base .  Scheme . DRAWABLE . to Uri ( ""icon_kaomoji"" )  )  . set Show Indicator ( false )  . build (  )  ;  page Set Adapter . add ( page Set Entity )  ; }"
7325,"public void update (  ) { final  Stor IOSQ Lite stor IOSQ Lite = mock (  Stor IOSQ Lite . class )  ;  final  Stor IOSQ Lite .  Low Level low Level = mock (  Stor IOSQ Lite .  Low Level . class )  ;  // item with some id, should be updated final  Test Item test Item = new  Test Item ( null )  ;  when ( stor IOSQ Lite . low Level (  )  )  . then Return ( low Level )  ;  final  Query expected Query =  Query . builder (  )  . table (  Test Item . TABLE )  . where (  Test Item . COLUMN_ID + "" = ?"" )  . where Args ( test Item . get Id (  )  )  . build (  )  ;  final  Cursor cursor = mock (  Cursor . class )  ;  when ( low Level . query ( eq ( expected Query )  )  )  . then Return ( cursor )  ;  when ( cursor . get Count (  )  )  . then Return ( //  Some rows already in db -> update should be performed 1 )  ;  final  Integer expected Number Of Rows Updated = 1 ;  when ( low Level . update ( any (  Update Query . class ) , any (  Content Values . class )  )  )  . then Return ( expected Number Of Rows Updated )  ;  final  Set< String> tags = singleton ( ""test_tag"" )  ;  final  Update Query expected Update Query =  Update Query . builder (  )  . table (  Test Item . TABLE )  . affects Tags ( tags )  . where (  Test Item . COLUMN_ID + "" = ?"" )  . where Args ( test Item . get Id (  )  )  . build (  )  ;  final  Put Resolver< Test Item> put Resolver = new  Default Put Resolver< Test Item> (  )  {     @ Non Null     @ Override     protected  Insert Query map To Insert Query ( @ Non Null  Test Item object )  {         fail ( "" Should not be called"" )  ;          return null ;      }     @ Non Null     @ Override     protected  Update Query map To Update Query ( @ Non Null  Test Item object )  {         return expected Update Query ;      }     @ Non Null     @ Override     protected  Content Values map To Content Values ( @ Non Null  Test Item object )  {         return  Test Item . MAP_TO_CONTENT_VALUES . apply ( object )  ;      } } ;  final  Content Values expected Content Values =  Test Item . MAP_TO_CONTENT_VALUES . apply ( test Item )  ;  //  Performing  Put that should ""update"" final  Put Result put Result = put Resolver . perform Put ( stor IOSQ Lite, test Item )  ;  verify ( low Level )  . begin Transaction (  )  ;  verify ( low Level )  . set Transaction Successful (  )  ;  verify ( low Level )  . end Transaction (  )  ;  // checks that it asks db for results verify ( low Level )  . query ( eq ( expected Query )  )  ;  // checks that cursor was closed verify ( cursor )  . close (  )  ;  // only one query should occur verify ( low Level )  . query ( any (  Query . class )  )  ;  // checks that required update was performed verify ( low Level )  . update ( eq ( expected Update Query ) , eq ( expected Content Values )  )  ;  // only one update should occur verify ( low Level )  . update ( any (  Update Query . class ) , any (  Content Values . class )  )  ;  // no inserts should occur verify ( low Level, never (  )  )  . insert ( any (  Insert Query . class ) , any (  Content Values . class )  )  ;  // put result checks assert That ( put Result . was Inserted (  )  )  . is False (  )  ;  assert That ( put Result . was Updated (  )  )  . is True (  )  ;  assert That ( put Result . number Of Rows Updated (  )  )  . is Equal To ( expected Number Of Rows Updated )  ;  assert That ( put Result . inserted Id (  )  )  . is Null (  )  ;  assert That ( put Result . affected Tables (  )  )  . contains Exactly (  Test Item . TABLE )  ;  assert That ( put Result . affected Tags (  )  )  . is Equal To ( tags )  ; }"
7326,"public com . anychart . core . stock . scrollerseries .  Spline color Scale (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7327,"public static void wait For Connected ( long timeout,  String service Intent )  throws  Interrupted Exception{ get Instance (  )  . wait For Service Connected ( timeout, service Intent )  ; }"
7328,"public  Dispatch Mode get Dispatch Mode (  ) { if  ( m Dispatch Mode == null )  {      String raw = get Preferences (  )  . get String ( PREF_KEY_DISPATCHER_MODE, null )  ;      m Dispatch Mode =  Dispatch Mode . from String ( raw )  ;      if  ( m Dispatch Mode == null )          m Dispatch Mode =  Dispatch Mode . ALWAYS ;  } return m Dispatch Mode ; }"
7329,public  String get Description (  ) { return description ; }
7330,"public com . anychart . core . stock . indicators . KDJ kdj ( com . anychart . data .  Table Mapping mapping,  Number k Period,  Number k MA Period,  Number d Period,  String k MA Type, com . anychart . enums .  Moving Average Type d MA Type,  Number k Multiplier,  Number d Multiplier, com . anychart . enums .  Stock Series Type k Series Type, com . anychart . enums .  Stock Series Type d Series Type, com . anychart . enums .  Stock Series Type j Series Type ) { return new com . anychart . core . stock . indicators . KDJ (  String . format (  Locale . US, js Base + "" . kdj ( %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, k Period, k MA Period, d Period, wrap Quotes ( k MA Type ) ,  ( d MA Type != null )  ? d MA Type . get Js Base (  )  : null, k Multiplier, d Multiplier,  ( k Series Type != null )  ? k Series Type . get Js Base (  )  : null,  ( d Series Type != null )  ? d Series Type . get Js Base (  )  : null,  ( j Series Type != null )  ? j Series Type . get Js Base (  )  : null )  )  ; }"
7331,"protected static  Value Animator create Slide Animator ( final  Card View Native card View, int start, int end ) {  Value Animator animator =  Value Animator . of Int ( start, end )  ;  animator . add Update Listener ( new  Value Animator .  Animator Update Listener (  )  {     @ Override     public void on Animation Update (  Value Animator value Animator )  {         int value =  (  Integer )  value Animator . get Animated Value (  )  ;           View Group .  Layout Params layout Params = card View . m Internal Expand Layout . get Layout Params (  )  ;          layout Params . height = value ;          card View . m Internal Expand Layout . set Layout Params ( layout Params )  ;      } } )  ;  return animator ; }"
7332,public  Animator Set Builder listener Start ( final  Animator Builder .  Listener Start listener Start ) { this . listener Start = listener Start ;  if  ( path View Animator Listener == null )  {     path View Animator Listener = new  Path View Animator Listener (  )  ;      animator Set . add Listener ( path View Animator Listener )  ;  } return this ; }
7333,"void generate Static Initializer (  Class Writer cw ) {  Code Visitor cv = cw . visit Method ( ACC_STATIC, ""<clinit>"", "" (  ) V"", null )  ;  //  Generate code to invoke the  Class Generator Util init Static (  )  method //  Push the class name as a constant cv . visit Ldc Insn ( fq Class Name )  ;  //  Invoke  Class . for Name (  )  to get our class .  //  We do this here, as opposed to in the bsh static init helper method // in order to be sure to capture the correct classloader .  cv . visit Method Insn ( INVOKESTATIC, ""java/lang/ Class"", ""for Name"", "" (  Ljava/lang/ String ;  )  Ljava/lang/ Class ; "" )  ;  // invoke the init Static (  )  method cv . visit Method Insn ( INVOKESTATIC, ""bsh/ Class Generator Util"", ""init Static"", "" (  Ljava/lang/ Class ;  ) V"" )  ;  cv . visit Insn ( RETURN )  ;  // values here are ignored, computed automatically by  Class Writer cv . visit Maxs ( 0, 0 )  ; }"
7334,"public  Script Engine get Engine By Name (  String short Name ) { if  ( short Name == null )      throw new  Null Pointer Exception (  )  ;  //look for registered name first  Object obj ;  if  ( null !=  ( obj = name Associations . get ( short Name )  )  )  {      Script Engine Factory spi =  (  Script Engine Factory )  obj ;      try {          Script Engine engine = spi . get Script Engine (  )  ;          engine . set Bindings ( get Bindings (  ) ,  Script Context . GLOBAL_SCOPE )  ;          return engine ;      } catch  (  Exception exp )  {         if  ( DEBUG )              exp . print Stack Trace (  )  ;      } } for  (  Script Engine Factory spi : engine Spis )  {      List< String> names = null ;      try {         names = spi . get Names (  )  ;      } catch  (  Exception exp )  {         if  ( DEBUG )              exp . print Stack Trace (  )  ;      }     if  ( names != null )  {         for  (  String name : names )  {             if  ( short Name . equals ( name )  )  {                 try {                      Script Engine engine = spi . get Script Engine (  )  ;                      engine . set Bindings ( get Bindings (  ) ,  Script Context . GLOBAL_SCOPE )  ;                      return engine ;                  } catch  (  Exception exp )  {                     if  ( DEBUG )                          exp . print Stack Trace (  )  ;                  }             }         }     } } return null ; }"
7335,"public com . anychart . standalones .  Resource Timeline row Hover Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Hover Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
7336,"private static  File create Reserve Disk Cache Dir (  Context context ) {  File cache Dir =  Storage Utils . get Cache Directory ( context, false )  ;   File individual Dir = new  File ( cache Dir, ""uil-images"" )  ;  if  ( individual Dir . exists (  )  || individual Dir . mkdir (  )  )  {     cache Dir = individual Dir ;  } return cache Dir ; }"
7337,void on Drm Session Released (  ) {}
7338,public  Tree Filter negate (  ) { return  Not Tree Filter . create ( this )  ; }
7339,"public static void w (  React Context context,  String message ) { RN Log . log Internal ( context, message, WARN )  ;  F Log . w (  React Constants . TAG, message )  ; }"
7340,public  Bitmap get Bitmap (  String url ) { return cache . get ( url )  ; }
7341,"public void clean Directories Exactly (  )  throws  Exception{  Path archive = filesystem . resolve ( ""archive . tar"" )  ;   Abs Path out Dir = filesystem . get Root Path (  )  ;   List< String> to Leave =  Immutable List . of ( ""BUCK"", ""buck-out/gen/pkg1/rule1 . jar"", ""buck-out/gen/pkg1/rule1#foo/lib . so"", ""buck-out/gen/pkg2/rule . jar"", ""buck-out/gen/pkg2/rule#foo/lib . so"" )  ;   List< String> to Delete =  Immutable List . of ( ""buck-out/gen/pkg1/rule2#foo/lib . so"" )  ;  for  (  String s : concat ( to Delete, to Leave )  )  {      Path path = filesystem . resolve ( s )  ;      filesystem . create Parent Dirs ( path )  ;      filesystem . write Contents To Path ( """", path )  ;  } //  Write test archive .  try  (  Tar Archive Output Stream stream = new  Tar Archive Output Stream ( new  Buffered Output Stream ( filesystem . new File Output Stream ( archive )  )  )  )  {     stream . put Archive Entry ( new  Tar Archive Entry ( ""buck-out/gen/pkg1/rule2#foo/"" )  )  ;      stream . put Archive Entry ( new  Tar Archive Entry ( ""buck-out/gen/pkg1/rule2 . jar"" )  )  ;      stream . close Archive Entry (  )  ;  } //  Untar test archive .   Untar . tar Unarchiver (  )  . extract Archive ( archive, filesystem, out Dir . get Path (  ) ,  Optional . empty (  ) ,  Existing File Mode . OVERWRITE_AND_CLEAN_DIRECTORIES )  ;  //  Assert expected file existence .  for  (  String s : to Delete )  {      Assert . assert False (  String . format ( "" Expected file %s to be deleted, but it wasn't"", s ) , filesystem . exists ( filesystem . resolve ( s )  )  )  ;  } for  (  String s : to Leave )  {      Assert . assert True (  String . format ( "" Expected file %s to not be deleted, but it was"", s ) , filesystem . exists ( filesystem . resolve ( s )  )  )  ;  }}"
7342,"public boolean on Touch (  View view,  Motion Event motion Event ) { if  ( !is Swipe Enabled (  )  )  {     return false ;  } if  ( view Width < 2 )  {     view Width = swipe List View . get Width (  )  ;  } switch (  Motion Event Compat . get Action Masked ( motion Event )  )  {     case  Motion Event . ACTION_DOWN:         {             if  ( paused && down Position !=  List View . INVALID_POSITION )  {                 return false ;              }             swipe Current Action =  Swipe List View . SWIPE_ACTION_NONE ;              int child Count = swipe List View . get Child Count (  )  ;              int [  ]  list View Coords = new int [ 2 ]  ;              swipe List View . get Location On Screen ( list View Coords )  ;              int x =  ( int )  motion Event . get Raw X (  )  - list View Coords [ 0 ]  ;              int y =  ( int )  motion Event . get Raw Y (  )  - list View Coords [ 1 ]  ;               View child ;              for  ( int i = 0 ;  i < child Count ;  i++ )  {                 child = swipe List View . get Child At ( i )  ;                  child . get Hit Rect ( rect )  ;                  int child Position = swipe List View . get Child Position ( child )  ;                  // dont allow swiping if this is on the header or footer or IGNORE_ITEM_VIEW_TYPE or enabled is false on the adapter                 //boolean allow Swipe = swipe List View . get Adapter (  )  . is Enabled ( child Position )  && swipe List View . get Adapter (  )  . get Item View Type ( child Position )  >= 0 ;                  boolean allow Swipe = true ;                  if  ( allow Swipe && rect . contains ( x, y )  )  {                     set Parent View ( child )  ;                      set Front View ( child . find View By Id ( swipe Front View ) , child Position )  ;                      down X = motion Event . get Raw X (  )  ;                      down Position = child Position ;                      front View . set Clickable ( !opened . get ( down Position )  )  ;                      front View . set Long Clickable ( !opened . get ( down Position )  )  ;                      velocity Tracker =  Velocity Tracker . obtain (  )  ;                      velocity Tracker . add Movement ( motion Event )  ;                      if  ( swipe Back View > 0 )  {                         set Back View ( child . find View By Id ( swipe Back View )  )  ;                      }                     break ;                  }             }             view . on Touch Event ( motion Event )  ;              return true ;          }     case  Motion Event . ACTION_UP:         {             if  ( velocity Tracker == null || !swiping || down Position ==  List View . INVALID_POSITION )  {                 break ;              }             float delta X = motion Event . get Raw X (  )  - down X ;              velocity Tracker . add Movement ( motion Event )  ;              velocity Tracker . compute Current Velocity ( 1000 )  ;              float velocity X =  Math . abs ( velocity Tracker . get X Velocity (  )  )  ;              if  ( !opened . get ( down Position )  )  {                 if  ( swipe Mode ==  Swipe List View . SWIPE_MODE_LEFT && velocity Tracker . get X Velocity (  )  > 0 )  {                     velocity X = 0 ;                  }                 if  ( swipe Mode ==  Swipe List View . SWIPE_MODE_RIGHT && velocity Tracker . get X Velocity (  )  < 0 )  {                     velocity X = 0 ;                  }             }             float velocity Y =  Math . abs ( velocity Tracker . get Y Velocity (  )  )  ;              boolean swap = false ;              boolean swap Right = false ;              if  ( min Fling Velocity <= velocity X && velocity X <= max Fling Velocity && velocity Y * 2 < velocity X )  {                 swap Right = velocity Tracker . get X Velocity (  )  > 0 ;                  if  (  Swipe List View . DEBUG )  {                      Log . d (  Swipe List View . TAG, ""swap Right: "" + swap Right + "" - swiping Right: "" + swiping Right )  ;                  }                 if  ( swap Right != swiping Right && swipe Action Left != swipe Action Right )  {                     swap = false ;                  } else if  ( opened . get ( down Position )  && opened Right . get ( down Position )  && swap Right )  {                     swap = false ;                  } else if  ( opened . get ( down Position )  && !opened Right . get ( down Position )  && !swap Right )  {                     swap = false ;                  } else {                     swap = true ;                  }             } else if  (  Math . abs ( delta X )  > view Width / 2 )  {                 swap = true ;                  swap Right = delta X > 0 ;              }             generate Animate ( front View, swap, swap Right, down Position )  ;              if  ( swipe Current Action ==  Swipe List View . SWIPE_ACTION_CHOICE )  {                 swap Choice State ( down Position )  ;              }             velocity Tracker . recycle (  )  ;              velocity Tracker = null ;              down X = 0 ;              // change clickable front view             //                if  ( swap )  {             //                    front View . set Clickable ( opened . get ( down Position )  )  ;              //                    front View . set Long Clickable ( opened . get ( down Position )  )  ;              //                }             swiping = false ;              break ;          }     case  Motion Event . ACTION_MOVE:         {             if  ( velocity Tracker == null || paused || down Position ==  List View . INVALID_POSITION )  {                 break ;              }             velocity Tracker . add Movement ( motion Event )  ;              velocity Tracker . compute Current Velocity ( 1000 )  ;              float velocity X =  Math . abs ( velocity Tracker . get X Velocity (  )  )  ;              float velocity Y =  Math . abs ( velocity Tracker . get Y Velocity (  )  )  ;              float delta X = motion Event . get Raw X (  )  - down X ;              float delta Mode =  Math . abs ( delta X )  ;              int swipe Mode = this . swipe Mode ;              int change Swipe Mode = swipe List View . change Swipe Mode ( down Position )  ;              if  ( change Swipe Mode >= 0 )  {                 swipe Mode = change Swipe Mode ;              }             if  ( swipe Mode ==  Swipe List View . SWIPE_MODE_NONE )  {                 delta Mode = 0 ;              } else if  ( swipe Mode !=  Swipe List View . SWIPE_MODE_BOTH )  {                 if  ( opened . get ( down Position )  )  {                     if  ( swipe Mode ==  Swipe List View . SWIPE_MODE_LEFT && delta X < 0 )  {                         delta Mode = 0 ;                      } else if  ( swipe Mode ==  Swipe List View . SWIPE_MODE_RIGHT && delta X > 0 )  {                         delta Mode = 0 ;                      }                 } else {                     if  ( swipe Mode ==  Swipe List View . SWIPE_MODE_LEFT && delta X > 0 )  {                         delta Mode = 0 ;                      } else if  ( swipe Mode ==  Swipe List View . SWIPE_MODE_RIGHT && delta X < 0 )  {                         delta Mode = 0 ;                      }                 }             }             if  ( delta Mode > slop && swipe Current Action ==  Swipe List View . SWIPE_ACTION_NONE && velocity Y < velocity X )  {                 swiping = true ;                  swiping Right =  ( delta X > 0 )  ;                  if  (  Swipe List View . DEBUG )  {                      Log . d (  Swipe List View . TAG, ""delta X: "" + delta X + "" - swiping Right: "" + swiping Right )  ;                  }                 if  ( opened . get ( down Position )  )  {                     swipe List View . on Start Close ( down Position, swiping Right )  ;                      swipe Current Action =  Swipe List View . SWIPE_ACTION_REVEAL ;                  } else {                     if  ( swiping Right && swipe Action Right ==  Swipe List View . SWIPE_ACTION_DISMISS )  {                         swipe Current Action =  Swipe List View . SWIPE_ACTION_DISMISS ;                      } else if  ( !swiping Right && swipe Action Left ==  Swipe List View . SWIPE_ACTION_DISMISS )  {                         swipe Current Action =  Swipe List View . SWIPE_ACTION_DISMISS ;                      } else if  ( swiping Right && swipe Action Right ==  Swipe List View . SWIPE_ACTION_CHOICE )  {                         swipe Current Action =  Swipe List View . SWIPE_ACTION_CHOICE ;                      } else if  ( !swiping Right && swipe Action Left ==  Swipe List View . SWIPE_ACTION_CHOICE )  {                         swipe Current Action =  Swipe List View . SWIPE_ACTION_CHOICE ;                      } else {                         swipe Current Action =  Swipe List View . SWIPE_ACTION_REVEAL ;                      }                     swipe List View . on Start Open ( down Position, swipe Current Action, swiping Right )  ;                  }                 swipe List View . request Disallow Intercept Touch Event ( true )  ;                   Motion Event cancel Event =  Motion Event . obtain ( motion Event )  ;                  cancel Event . set Action (  Motion Event . ACTION_CANCEL |  (  Motion Event Compat . get Action Index ( motion Event )  <<  Motion Event Compat . ACTION_POINTER_INDEX_SHIFT )  )  ;                  swipe List View . on Touch Event ( cancel Event )  ;                  if  ( swipe Current Action ==  Swipe List View . SWIPE_ACTION_CHOICE )  {                     back View . set Visibility (  View . GONE )  ;                  }             }             if  ( swiping && down Position !=  List View . INVALID_POSITION )  {                 if  ( opened . get ( down Position )  )  {                     delta X += opened Right . get ( down Position )  ? view Width - right Offset : -view Width + left Offset ;                  }                 move ( delta X )  ;                  return true ;              }             break ;          } } if  ( only One Opened When Swipe )  {     close Other Opened Items (  )  ;      view . on Touch Event ( motion Event )  ;      return true ;  } return false ; }"
7343,"public void is Empty (  ) { if  ( actual == null )  {     fail With Actual ( simple Fact ( ""expected empty optional"" )  )  ;  } else if  ( actual . is Present (  )  )  {     fail Without Actual ( simple Fact ( ""expected to be empty"" ) , fact ( ""but was present with value"", actual . get As Double (  )  )  )  ;  }}"
7344,public  Xml Document get Document (  ) { return m Document ; }
7345,"public void height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . height (  )  ; "" )  ; }"
7346,public void set Contrast ( float contrast ) { this . contrast = contrast ; }
7347,"public float get Error Percentage ( long now Millis, int time Range Millis ) { int error Count = 0 ;  int request Count = 0 ;  long initial Millis = now Millis - time Range Millis ;  synchronized  ( requests )  {      List Iterator< Request Sample> iterator = requests . list Iterator ( requests . size (  )  )  ;      while  ( iterator . has Previous (  )  )  {          Request Sample sample = iterator . previous (  )  ;          long request Millis = sample . get Epoch Millis (  )  ;          if  ( request Millis >= initial Millis && request Millis <= now Millis )  {             if  ( !sample . was Successful (  )  )  {                 ++error Count ;              }             ++request Count ;          }     } } last Reported Samples = request Count ;  last Reported Error Percentage =  ( request Count == 0 || request Count < min Samples To Report Error )  ? 0 :  ( error Count /  (  ( float )  request Count )  )  ;  return last Reported Error Percentage ; }"
7348,"public synchronized int read (  Format Holder format Holder,  Decoder Input Buffer buffer, boolean format Required, boolean loading Finished,  Format downstream Format,  Sample Extras Holder extras Holder ) { if  ( !has Next Sample (  )  )  {     if  ( loading Finished || is Last Sample Queued )  {         buffer . set Flags ( C . BUFFER_FLAG_END_OF_STREAM )  ;          return C . RESULT_BUFFER_READ ;      } else if  ( upstream Format != null &&  ( format Required || upstream Format != downstream Format )  )  {         format Holder . format = upstream Format ;          return C . RESULT_FORMAT_READ ;      } else {         return C . RESULT_NOTHING_READ ;      } } int relative Read Index = get Relative Index ( read Position )  ;  if  ( format Required || formats [ relative Read Index ]  != downstream Format )  {     format Holder . format = formats [ relative Read Index ]  ;      return C . RESULT_FORMAT_READ ;  } buffer . set Flags ( flags [ relative Read Index ]  )  ;  buffer . time Us = times Us [ relative Read Index ]  ;  if  ( buffer . is Flags Only (  )  )  {     return C . RESULT_BUFFER_READ ;  } extras Holder . size = sizes [ relative Read Index ]  ;  extras Holder . offset = offsets [ relative Read Index ]  ;  extras Holder . crypto Data = crypto Datas [ relative Read Index ]  ;  read Position++ ;  return C . RESULT_BUFFER_READ ; }"
7349,"public com . anychart . core . stock . scrollerseries .  Hilo bounds (  Number x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, height )  )  ;  return this ; }"
7350,"public void get Absolute X (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Absolute X (  )  ; "" )  ; }"
7351,"protected static  Error no Class Def Found (  String class Name,  Error e ) { return new  No Class Def Found Error ( ""A class required by class: "" + class Name + "" could not be loaded:\n"" + e . to String (  )  )  ; }"
7352,"public com . anychart . core . stock . scrollerseries .  Spline Area parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
7353,"protected static void RGB To HSV ( int red, int green, int blue, float [  ]  hsv ) { java . awt .  Color . RG Bto HSB ( red, green, blue, hsv )  ;  hsv [ 0 ]  = hsv [ 0 ]  * 360 ; }"
7354,"public void test Next Tag (  )  throws  Exception{  Set< Integer> acceptable Tags = new  Hash Set<> (  )  ;  acceptable Tags . add (  Xml Resource Parser . START_TAG )  ;  acceptable Tags . add (  Xml Resource Parser . END_TAG )  ;  forge And Open Document ( ""<foo><bar/><text>message</text></foo>"" )  ;  int evt ;  do {     evt = parser . next (  )  ;      assert True ( acceptable Tags . contains ( evt )  )  ;  } while  ( evt ==  Xml Resource Parser . END_TAG && ""foo"" . equals ( parser . get Name (  )  )  )  ; }"
7355,protected static int get Default Sms Subscription Id (  ) { return default Sms Subscription Id ; }
7356,public void stop Scanner (  ) { camera . stop Camera (  )  ; }
7357,"private void draw Player (  Canvas canvas ) { m Btn Bound = new  Rect ( m Default Margin,  ( int )   ( get Measured Height (  )  * 0 . 5f - m Btn Width * 0 . 5f ) , m Btn Width + m Default Margin,  ( int )   ( get Measured Height (  )  * 0 . 5f + m Btn Width * 0 . 5f )  )  ;   Path path = new  Path (  )  ;  float radio = m Btn Bound . width (  )  * 0 . 3f ;  float value =  ( float )   Math . sqrt (  Math . pow ( radio, 2 )  -  Math . pow ( radio * 0 . 5f, 2 )  )  ;  path . move To ( m Btn Bound . center X (  )  - radio * 0 . 5f, m Btn Bound . center Y (  )  - value )  ;  path . line To ( m Btn Bound . center X (  )  - radio * 0 . 5f, m Btn Bound . center Y (  )  + value )  ;  path . line To ( m Btn Bound . center X (  )  + radio, m Btn Bound . center Y (  )  )  ;  path . line To ( m Btn Bound . center X (  )  - radio * 0 . 5f, m Btn Bound . center Y (  )  - value )  ;  m Btn Paint . set Alpha ( 128 )  ;  // 绘制播放按钮的三角形 canvas . draw Path ( path, m Btn Paint )  ;  // 绘制圆环 canvas . draw Circle ( m Btn Bound . center X (  ) , m Btn Bound . center Y (  ) , m Btn Bound . width (  )  * 0 . 48f, m Btn Paint )  ; }"
7358,"public void analytics Message Timestamp (  ) {  Intent intent = new  Intent (  )  ;  intent . put Extra (  Constants .  Analytics Keys . ENABLED, ""1"" )  ;  intent . put Extra ( ANALYTICS_COMPOSER_ID, ""campaign_id"" )  ;  intent . put Extra ( ANALYTICS_MESSAGE_TIMESTAMP, ""1234"" )  ;  //  Notification with a valid timestamp  Messaging Analytics . log Notification Received ( intent )  ;   List< Analytics Validator .  Logged Event> events = analytics Validator . get Logged Events (  )  ;  assert That ( events )  . has Size ( 1 )  ;   Analytics Validator .  Logged Event event = events . get ( 0 )  ;  assert That ( event . get Origin (  )  )  . is Equal To (  Scion Analytics . ORIGIN_FCM )  ;  assert That ( event . get Name (  )  )  . is Equal To (  Scion Analytics . EVENT_NOTIFICATION_RECEIVE )  ;  assert That ( event . get Params (  )  . get Int (  Scion Analytics . PARAM_MESSAGE_TIME )  )  . is Equal To ( 1234 )  ; }"
7359,"public  Time Picker Builder set Text X Offset ( int x_offset_year, int x_offset_month, int x_offset_day, int x_offset_hours, int x_offset_minutes, int x_offset_seconds ) { m Picker Options . x_offset_year = x_offset_year ;  m Picker Options . x_offset_month = x_offset_month ;  m Picker Options . x_offset_day = x_offset_day ;  m Picker Options . x_offset_hours = x_offset_hours ;  m Picker Options . x_offset_minutes = x_offset_minutes ;  m Picker Options . x_offset_seconds = x_offset_seconds ;  return this ; }"
7360,public  Point F get Actual Image Focus Point (  ) { return m Actual Image Focus Point ; }
7361,protected void on Clear (  Layout Manager Helper helper ) {}
7362,public boolean is Persistence Enabled (  ) { return persistence Enabled ; }
7363,public  Axis Value set Label (  String label ) { this . label = label . to Char Array (  )  ;  return this ; }
7364,"public com . anychart . core . annotations .  Fibonacci Base trend (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . trend ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7365,"public static T valid Index ( final T collection, final int index ) { return valid Index ( collection, index, DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE,  Integer . value Of ( index )  )  ; }"
7366,"private void visit Subcomponent Factory Method (  Component Node parent Component,  Component Node current Component,  Executable Element factory Method ) { network . add Edge ( parent Component, current Component, new  Child Factory Method Edge Impl ( factory Method )  )  ; }"
7367,public int get Next Opcode (  ) { return next Opcode ; }
7368,"public  Builder icon Button ( @ Drawable Res int .  .  .  icon ) { if  ( icon . length > 3 )  {      Log . e ( "" Text Color Button"", "" Impossible to set  Icon  Button value more than 3!  Please  Check it"" )  ;      throw new  Illegal Argument Exception ( "" Impossible to set  Icon  Button value more than 3!  Please  Check it"" )  ;  } if  ( icon . length > 0 )  {     if  ( icon [ 0 ]  == 0 )  {          Log . e ( "" Icon"", "" Impossible to set  Icon to 0!  Please  Check it"" )  ;      } else {         m Icon Btn1 = icon [ 0 ]  ;          is Icon Btn1 = true ;      } } if  ( icon . length > 1 )  {     if  ( icon [ 1 ]  == 0 )  {          Log . e ( "" Icon"", "" Impossible to set  Icon to 0!  Please  Check it"" )  ;      } else {         m Icon Btn2 = icon [ 1 ]  ;          is Icon Btn2 = true ;      } } if  ( icon . length > 2 )  {     if  ( icon [ 2 ]  == 0 )  {          Log . e ( "" Icon"", "" Impossible to set  Icon to 0!  Please  Check it"" )  ;      } else {         m Icon Btn3 = icon [ 2 ]  ;          is Icon Btn3 = true ;      } } return this ; }"
7369,"public void set User Restriction (  User Handle user Handle,  String restriction Key, boolean value ) { set User Restriction ( restriction Key, value, user Handle )  ; }"
7370,public static P Stream Transformation shuffle (  ) { return new  Stream Shuffler (  )  ; }
7371,public  Activity get Activity (  ) { return m Activity ; }
7372,"public void notify Resource Loaded ( int res Id, boolean success ) { boolean sound Is Known = false ;  for  ( int res Idx = 0 ;  res Idx < id To Res . size (  )  ;  ++res Idx )  {     if  ( id To Res . value At ( res Idx )  == res Id )  {         if  ( listener != null )  {             listener . on Load Complete ( real Object, id To Res . key At ( res Idx ) , success ? 0 : 1 )  ;          }         sound Is Known = true ;      } } if  ( !sound Is Known )  {     throw new  Illegal Argument Exception ( "" Unknown sound .   You need to call load (  )  first"" )  ;  }}"
7373,"public static  Ct Method make (  Ct Class return Type,  String mname,  Ct Class [  ]  parameters,  Ct Class [  ]  exceptions,  String body,  Ct Class declaring )  throws  Cannot Compile Exception{ return make (  Modifier . PUBLIC, return Type, mname, parameters, exceptions, body, declaring )  ; }"
7374,"public static boolean is Visibility Bridge Method Pair (  Method bridge Method,  Method bridged Method ) { if  ( bridge Method == bridged Method )  {     return true ;  } return  Arrays . equals ( bridge Method . get Parameter Types (  ) , bridged Method . get Parameter Types (  )  )  && bridge Method . get Return Type (  )  . equals ( bridged Method . get Return Type (  )  )  ; }"
7375,"public void test Resiliency Token Return Extended Lifetime Onwithout Retry (  )  throws  Package Manager .  Name Not Found Exception, IO Exception,  Interrupted Exception, JSON Exception{ // make sure AT's expires_in is expired and ext_expires_in is not expired final I Token Cache Store cache Store = get Token Cache ( get Expire Date ( -MINUS_MINUTE ) , false, false, get Expire Date ( EXTEND_MINUS_MINUTE )  )  ;  final  File Mock Context mock Context = create Mock Context (  )  ;  final  Authentication Context auth Context = new  Authentication Context ( mock Context, VALID_AUTHORITY, false, cache Store )  ;  auth Context . set Extended Lifetime Enabled ( true )  ;  //mock http response final  Http URL Connection mocked Connection =  Mockito . mock (  Http URL Connection . class )  ;   Http Url Connection Factory . set Mocked Http Url Connection ( mocked Connection )  ;   Util . prepare Mocked Url Connection ( mocked Connection )  ;   Mockito . when ( mocked Connection . get Output Stream (  )  )  . then Return (  Mockito . mock (  Output Stream . class )  )  ;   Mockito . when ( mocked Connection . get Input Stream (  )  )  . then Return (  Util . create Input Stream (  Util . get Error Response Body ( ""HTTP_CONFLICT"" )  )  )  ;   Mockito . when ( mocked Connection . get Response Code (  )  )  . then Return ( //status code 600 MAX_RESILIENCY_ERROR_CODE + 1 )  ;  try {     auth Context . acquire Token Silent Sync ( ""resource"", ""clientid"", TEST_USERID )  ;      fail ( "" Expect an exception"" )  ;  } catch  ( final  Authentication Exception exception )  {     verify ( mocked Connection, times ( 1 )  )  . get Input Stream (  )  ;      assert Not Null ( exception )  ;      assert Same ( exception . get Code (  ) , ADAL Error . AUTH_FAILED_NO_TOKEN )  ;      assert True ( exception . get Cause (  )  instanceof  Authentication Exception )  ;      assert Same (  (  (  Authentication Exception )  exception . get Cause (  )  )  . get Code (  ) , ADAL Error . SERVER_ERROR )  ;  } finally {     cache Store . remove All (  )  ;  }}"
7376,"public  Affine2 shear ( float shear X, float shear Y ) { float tmp0 = m00 + shear Y * m01 ;  float tmp1 = m01 + shear X * m00 ;  m00 = tmp0 ;  m01 = tmp1 ;  tmp0 = m10 + shear Y * m11 ;  tmp1 = m11 + shear X * m10 ;  m10 = tmp0 ;  m11 = tmp1 ;  return this ; }"
7377,"public void test Click Action And Link (  ) {  Bundle data = new  Bundle (  )  ;  data . put String ( KEY_LINK, ""https://www . google . com"" )  ;  data . put String ( KEY_CLICK_ACTION, ""action"" )  ;   Intent intent = verify Notification Launched Activity ( data )  ;  assert That ( intent . get Action (  ) , is ( ""action"" )  )  ;  assert Null ( intent . get Data (  )  )  ; }"
7378,"public com . anychart . charts .  Stock plot (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . plot ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
7379,public  Unsigned Integer minus (  Unsigned Integer val ) { return from Int Bits ( value - check Not Null ( val )  . value )  ; }
7380,"public  Test Field Prop Null On Recycle Option View Model_ value ( @ Nullable final  On Model Click Listener< Test Field Prop Null On Recycle Option View Model_,  Test Field Prop Null On Recycle Option View> value ) { on Mutation (  )  ;  if  ( value == null )  {     this . value_ On Click Listener = null ;  } else {     this . value_ On Click Listener = new  Wrapped Epoxy Model Click Listener ( value )  ;  } return this ; }"
7381,public float get Chart Values Spacing (  ) { return m Chart Values Spacing ; }
7382,"public void test Clone And Fetch With Session Limit (  )  throws  Exception{ MAX_CONCURRENT_SESSIONS . set ( server . get Property Resolver (  ) ,  Integer . value Of ( 2 )  )  ;   File local Clone = clone With ( ""ssh://localhost/doesntmatter"", // default Clone Dir, // null, // "" Host localhost"", // "" Host Name localhost"", // "" Port "" + test Port, // "" User "" + TEST_USER, "" Identity File "" + private Key1 . get Absolute Path (  )  )  ;  //  Fetch a couple of times try  (  Git git =  Git . open ( local Clone )  )  {     git . fetch (  )  . call (  )  ;      git . fetch (  )  . call (  )  ;  }}"
7383,"public  Object Builder add Object (  String field Name,  Object Builder builder ) { try {     get Generator (  )  . write Field Name ( field Name )  ;      write Nested ( builder )  ;  } catch  ( IO Exception e )  {     throw to Assertion Error ( e )  ;  } return this ; }"
7384,"private static void set Value (  Postcard postcard,  Integer type Def,  String key,  String value ) { if  (  Text Utils . is Empty ( key )  ||  Text Utils . is Empty ( value )  )  {     return ;  } try {     if  ( null != type Def )  {         if  ( type Def ==  Type Kind . BOOLEAN . ordinal (  )  )  {             postcard . with Boolean ( key,  Boolean . parse Boolean ( value )  )  ;          } else if  ( type Def ==  Type Kind . BYTE . ordinal (  )  )  {             postcard . with Byte ( key,  Byte . parse Byte ( value )  )  ;          } else if  ( type Def ==  Type Kind . SHORT . ordinal (  )  )  {             postcard . with Short ( key,  Short . parse Short ( value )  )  ;          } else if  ( type Def ==  Type Kind . INT . ordinal (  )  )  {             postcard . with Int ( key,  Integer . parse Int ( value )  )  ;          } else if  ( type Def ==  Type Kind . LONG . ordinal (  )  )  {             postcard . with Long ( key,  Long . parse Long ( value )  )  ;          } else if  ( type Def ==  Type Kind . FLOAT . ordinal (  )  )  {             postcard . with Float ( key,  Float . parse Float ( value )  )  ;          } else if  ( type Def ==  Type Kind . DOUBLE . ordinal (  )  )  {             postcard . with Double ( key,  Double . parse Double ( value )  )  ;          } else if  ( type Def ==  Type Kind . STRING . ordinal (  )  )  {             postcard . with String ( key, value )  ;          } else if  ( type Def ==  Type Kind . PARCELABLE . ordinal (  )  )  {         // TODO :  How to description parcelable value with string?         } else if  ( type Def ==  Type Kind . OBJECT . ordinal (  )  )  {             postcard . with String ( key, value )  ;          } else {             //  Compatible compiler sdk 1 . 0 . 3, in that version, the string type = 18             postcard . with String ( key, value )  ;          }     } else {         postcard . with String ( key, value )  ;      } } catch  (  Throwable ex )  {     logger . warning (  Consts . TAG, "" Logistics Center set Value failed! "" + ex . get Message (  )  )  ;  }}"
7385,"public com . anychart . charts .  Heat Map auto Redraw (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . auto Redraw ( %s )  ; "", enabled )  )  ;  return this ; }"
7386,"public void to Xml (  Boolean as Xml Node ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Xml ( %s )  ; "", as Xml Node )  )  ; }"
7387,"public com . anychart . standalones .  Color Range ticks (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . ticks ( %s )  ; "", settings )  )  ;  return this ; }"
7388,"public void on Child Item Pinned ( int group Position, int child Position ) { final  Dialog Fragment dialog =  Expandable Item Pinned Message Dialog Fragment . new Instance ( group Position, child Position )  ;  get Support Fragment Manager (  )  . begin Transaction (  )  . add ( dialog, FRAGMENT_TAG_ITEM_PINNED_DIALOG )  . commit (  )  ; }"
7389,public final double get Value (  ) { return value ; }
7390,public double get Gradient Stop Value (  ) { return m Gradient Stop Value ; }
7391,"public void on Upgrade ( SQ Lite Database db, int old Version, int new Version ) { on Upgrade ( wrap ( db ) , old Version, new Version )  ; }"
7392,"public static  Firebase Storage get Instance ( @ Non Null  Firebase App app ) { // noinspection  Constant Conditions  Preconditions . check Argument ( app != null, "" Null is not a valid value for the  Firebase App . "" )  ;   String storage Bucket = app . get Options (  )  . get Storage Bucket (  )  ;  if  ( storage Bucket == null )  {     return get Instance Impl ( app, null )  ;  } else {     try {         return get Instance Impl ( app,  Util . normalize ( app, ""gs://"" + app . get Options (  )  . get Storage Bucket (  )  )  )  ;      } catch  (  Unsupported Encoding Exception e )  {          Log . e ( TAG, "" Unable to parse bucket:"" + storage Bucket, e )  ;          throw new  Illegal Argument Exception ( STORAGE_URI_PARSE_EXCEPTION )  ;      } }}"
7393,"private static  Media Load Data get Clipping Media Source Media Load Data ( long clipping Start Us, long clipping End Us, final long event Start Us, final long event End Us )  throws IO Exception{  Timeline timeline = new  Single Period Timeline ( TEST_PERIOD_DURATION_US, /* is Seekable= */ true, /* is Dynamic= */ false )  ;   Fake Media Source fake Media Source = new  Fake Media Source ( timeline, /* manifest= */ null )  {     @ Override     protected  Fake Media Period create Fake Media Period (  Media Period Id id,  Track Group Array track Group Array,  Allocator allocator,  Event Dispatcher event Dispatcher, @ Nullable  Transfer Listener transfer Listener )  {         event Dispatcher . downstream Format Changed ( new  Media Load Data ( C . DATA_TYPE_MEDIA, C . TRACK_TYPE_UNKNOWN, /* track Format= */         null, C . SELECTION_REASON_UNKNOWN, /* track Selection Data= */         null, C . us To Ms ( event Start Us ) , C . us To Ms ( event End Us )  )  )  ;          return super . create Fake Media Period ( id, track Group Array, allocator, event Dispatcher, transfer Listener )  ;      } } ;  final  Clipping Media Source clipping Media Source = new  Clipping Media Source ( fake Media Source, clipping Start Us, clipping End Us )  ;   Media Source Test Runner test Runner = new  Media Source Test Runner ( clipping Media Source, /* allocator= */ null )  ;  final  Media Load Data [  ]  reported Media Load Data = new  Media Load Data [ 1 ]  ;  try {     test Runner . run On Playback Thread (  (  )  -> clipping Media Source . add Event Listener ( new  Handler (  ) , new  Default Media Source Event Listener (  )  {         @ Override         public void on Downstream Format Changed ( int window Index, @ Nullable  Media Period Id media Period Id,  Media Load Data media Load Data )  {             reported Media Load Data [ 0 ]  = media Load Data ;          }     } )  )  ;      test Runner . prepare Source (  )  ;      //  Create period to send the test event configured above .      test Runner . create Period ( new  Media Period Id ( timeline . get Uid Of Period ( /* period Index= */     0 ) , /* window Sequence Number= */     0 )  )  ;      assert That ( reported Media Load Data [ 0 ]  )  . is Not Null (  )  ;  } finally {     test Runner . release (  )  ;  } return reported Media Load Data [ 0 ]  ; }"
7394,"public com . anychart . core . stock . scrollerseries . OHLC rising Stroke (  String value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rising Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( value ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7395,"public static void set Http Client (  Http Client http Client ) {  Options . set Option (  Option . HTTPCLIENT, http Client )  ; }"
7396,"public void destroy Joint (  Joint joint ) { joint . set User Data ( null )  ;  joints . remove ( joint . addr )  ;  joint . joint Edge A . other . joints . remove Value ( joint . joint Edge B, true )  ;  joint . joint Edge B . other . joints . remove Value ( joint . joint Edge A, true )  ;  jni Destroy Joint ( addr, joint . addr )  ; }"
7397,private static synchronized  String format Date As Time (  Date d ) { return format Time In . format ( d )  ; }
7398,private boolean is Synchronized (  ) { int access Flags = method . get Access Flags (  )  ;  return  ( access Flags &  Access Flags . ACC_SYNCHRONIZED )  != 0 ; }
7399,"private static  Immutable Map< Path,  Source Path> parse All Platform Headers (  Build Target build Target,  Source Path Resolver Adapter source Path Resolver Adapter,  Project Filesystem filesystem,  Immutable List< Source Sorted Set> platform Headers, boolean export,  Cxx Library Description .  Common Arg args ) {  Immutable Map .  Builder< String,  Source Path> parsed =  Immutable Map . builder (  )  ;   String parameter Name =  ( export )  ? ""exported_platform_headers"" : ""platform_headers"" ;  //  Include all platform specific headers .  for  (  Source Sorted Set source List : platform Headers )  {     parsed . put All ( source List . to Name Map ( build Target, source Path Resolver Adapter, parameter Name,  path -> true,  path -> path )  )  ;  } return  Cxx Preprocessables . resolve Header Map ( args . get Header Namespace (  )  . map (  Paths::get )  . or Else ( build Target . get Cell Relative Base Path (  )  . get Path (  )  . to Path ( filesystem . get File System (  )  )  ) , parsed . build (  )  )  ; }"
7400,"public com . anychart . charts .  Gantt bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
7401,"public  Double get As Double (  String key ) {  Object value = m Values . get ( key )  ;  try {     return value != null ?  (  (  Number )  value )  . double Value (  )  : null ;  } catch  (  Class Cast Exception e )  {     if  ( value instanceof  Char Sequence )  {         try {             return  Double . value Of ( value . to String (  )  )  ;          } catch  (  Number Format Exception e2 )  {              Log . e ( TAG, "" Cannot parse  Double value for "" + value + "" at key "" + key )  ;              return null ;          }     } else {          Log . e ( TAG, "" Cannot cast value for "" + key + "" to a  Double: "" + value, e )  ;          return null ;      } }}"
7402,"protected void on Size Changed ( int w, int h, int oldw, int oldh ) { if  ( ready Sent )  {     set Scale And Center ( get Scale (  ) , get Center (  )  )  ;  }}"
7403,public float [  ]  get Model View Matrix (  ) { return m Model View Matrix ; }
7404,public  Menu Builder get Root Menu (  ) { return this ; }
7405,"public static int [  ]  measure View ( final  View view ) {  View Group .  Layout Params lp = view . get Layout Params (  )  ;  if  ( lp == null )  {     lp = new  View Group .  Layout Params (  View Group .  Layout Params . MATCH_PARENT,  View Group .  Layout Params . WRAP_CONTENT )  ;  } int width Spec =  View Group . get Child Measure Spec ( 0, 0, lp . width )  ;  int lp Height = lp . height ;  int height Spec ;  if  ( lp Height > 0 )  {     height Spec =  View .  Measure Spec . make Measure Spec ( lp Height,  View .  Measure Spec . EXACTLY )  ;  } else {     height Spec =  View .  Measure Spec . make Measure Spec ( 0,  View .  Measure Spec . UNSPECIFIED )  ;  } view . measure ( width Spec, height Spec )  ;  return new int [  ]  { view . get Measured Width (  ) , view . get Measured Height (  )  } ; }"
7406,"public  Transform Task add Inject Transform Before Transform (  Class<? extends  Transform> transform Clazz, T inject Transform, @ Non Null  Variant Scope scope ) {  Task Collection< Default Android Task> android Tasks = project . get Tasks (  )  . with Type (  Default Android Task . class )  ;   Sorted Map< String,  Default Android Task> android Task Sorted Map = android Tasks . get As Map (  )  ;  //  The task to be inserted  Transform Task opr Transform Task = null ;  for  (  String task Name : android Task Sorted Map . key Set (  )  )  {      Default Android Task android Task = android Task Sorted Map . get ( task Name )  ;      if  ( variant Name . equals ( android Task . get Variant Name (  )  )  )  {         if  ( android Task instanceof  Transform Task &&  (  (  Transform Task )  android Task )  . get Transform (  )  . get Class (  )  . equals ( transform Clazz )  )  {             opr Transform Task =  (  Transform Task )  android Task ;              break ;          }     } } if  ( null == opr Transform Task )  {     throw new  Stop Execution Exception ( "" Transform Task with transfrom type:"" + transform Clazz . get Name (  )  + "" can not found!"" )  ;  } transforms . add ( inject Transform )  ;  // Determines whether the two  Transform dependencies are correct, that is, the output type is consistent with the next input type check Transform Config ( opr Transform Task . get Transform (  ) , inject Transform )  ;   String task Name = scope . get Task Name ( get Task Name Prefix ( inject Transform )  )  ;  try {      Intermediate Stream output Stream = get Output Stream ( inject Transform, scope, task Name )  ;      //  Configuration  Transform Task      Transform Task Param transform Task Param = get Transform Param ( opr Transform Task )  ;       Transform Task .  Config Action<T> config Action = new  Transform Task .  Config Action<T> ( variant Name, task Name, inject Transform, transform Task Param . consumed Input Streams, transform Task Param . referenced Input Streams, output Stream,  Thread Recorder . get (  ) , null )  ;       Transform Task inject Transform Task = project . get Tasks (  )  . create ( config Action . get Name (  ) , config Action . get Type (  )  )  ;      opr Transform Task . depends On ( inject Transform Task )  ;      for  (  Transform Stream transform Stream : transform Task Param . consumed Input Streams )  {         if  ( null != transform Stream . get File Collection (  )  )  {             inject Transform Task . depends On ( transform Stream . get File Collection (  )  )  ;          }     }     if  ( transform Task List . size (  )  > 0 )  {         inject Transform Task . depends On ( transform Task List . get ( transform Task List . size (  )  - 1 )  )  ;      }     transform Task List . add ( task Name )  ;      config Action . execute ( inject Transform Task )  ;      // Modify the input of the opr Transform Task     if  ( inject Transform . update Next Transform Input (  )  )  {          Collection< Transform Stream> new Input Stream =  Lists . new Array List (  )  ;          new Input Stream . add ( output Stream )  ;          update Transform Task Config ( opr Transform Task, new Input Stream, transform Task Param . referenced Input Streams, transform Task Param . output Stream )  ;      }     return inject Transform Task ;  } catch  (  Illegal Access Exception e )  {     throw new  Stop Execution Exception ( e . get Message (  )  )  ;  }}"
7407,public static  Linear Transformation vertical ( double x ) { check Argument ( is Finite ( x )  )  ;  return new  Vertical Linear Transformation ( x )  ; }
7408,"public void item At (  Number index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . item At ( %s )  ; "", index )  )  ; }"
7409,public boolean is Valid ID3v2 Frame Identifier (  String identifier ) {  Matcher m = ID3v24 Frame . valid Frame Identifier . matcher ( identifier )  ;  return m . matches (  )  ; }
7410,public void set Zoom In Limit Y ( double zoom In Limit Y ) { this . m Zoom In Limit Y = zoom In Limit Y ; }
7411,protected int get Rating Type (  ) { return rating Type ; }
7412,public int index Of (  Format format ) { for  ( int i = 0 ;  i < formats . length ;  i++ )  {     if  ( format == formats [ i ]  )  {         return i ;      } } return C . INDEX_UNSET ; }
7413,public  React Instance Manager Builder set Application (  Application application ) { m Application = application ;  return this ; }
7414,public void set Auto Adapt Strategy (  Auto Adapt Strategy auto Adapt Strategy ) { m Auto Adapt Strategy = auto Adapt Strategy ; }
7415,"External Test Spec get External Test Runner Spec (  Execution Context execution Context,  Test Running Options test Running Options,  Build Context build Context ) { return  Immutable External Runner Test Protocol . of ( get Build Target (  ) , get Specs (  ) , build Context . get Source Path Resolver (  )  )  ; }"
7416,public void set Neutral Button Text (  String neutral Button Text ) { this . neutral Button Text = neutral Button Text ; }
7417,"public com . anychart . standalones .  Data Grid row Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
7418,public  Iterator< Tiled Map Tile> iterator (  ) { return tiles . values (  )  . iterator (  )  ; }
7419,"public static  Uri get Pick Image Result Uri ( @ Non Null  Context context, @ Nullable  Intent data ) { boolean is Camera = true ;  if  ( data != null && data . get Data (  )  != null )  {      String action = data . get Action (  )  ;      is Camera = action != null && action . equals (  Media Store . ACTION_IMAGE_CAPTURE )  ;  } return is Camera || data . get Data (  )  == null ? get Capture Image Output Uri ( context )  : data . get Data (  )  ; }"
7420,"public int table Length (  ) { return  Byte Array . read U16bit ( info, 0 )  ; }"
7421,"private  Data Source .  Factory get Data Source Factory (  Context context, boolean preview,  String uer Agent ) { return new  Default Data Source Factory ( context, preview ? null : new  Default Bandwidth Meter .  Builder ( context )  . build (  ) , get Http Data Source Factory ( context, preview, uer Agent )  )  ; }"
7422,public boolean is Group (  ) { return  ( m Flags &  Expandable Item Constants . STATE_FLAG_IS_GROUP )  != 0 ; }
7423,"public void test Only Newlines (  )  throws IO Exception{ compare Styled ( ""\n\n\n"" )  ; }"
7424,"public static  String encode Bytes ( byte [  ]  source, int off, int len, int options )  throws java . io . IO Exception{ byte [  ]  encoded = encode Bytes To Bytes ( source, off, len, options )  ;  //  Return value according to relevant encoding .  try {     return new  String ( encoded, PREFERRED_ENCODING )  ;  }// end try  catch  ( java . io .  Unsupported Encoding Exception uue )  {     return new  String ( encoded )  ;  }// end catch}"
7425,public static int get Encoded Width (  Byte Buffer header ) { return  ( 0x FFFF & header . get Short ( ETC2_PKM_ENCODED_WIDTH_OFFSET )  )  ; }
7426,"public void it Does Not Add Line Breaks_when String Bigger Than Buffer (  )  throws IO Exception{  Byte Array Input Stream input Stream = new  Byte Array Input Stream ( generate Random Byte String ( 10000 )  )  ;  assert False ( invoke Conversion ( input Stream )  . contains ( ""\n"" )  )  ; }"
7427,"public com . anychart . standalones .  Data Grid row Fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
7428,public UI Config<T> set Location Messages Enabled ( boolean value ) { this . location Messages Enabled = value ;  return this ; }
7429,"public void should Verify That Transaction Was Executed (  ) {  Dog Repository dog Repo = new  Dog Repository Impl (  )  ;  dog Repo . create Dog ( "" Spot"" )  ;  //  Verify that the begin transaction was called only once verify ( mock Realm, times ( 1 )  )  . execute Transaction (  Mockito . any (  Realm .  Transaction . class )  )  ;  //  Verify that the  Realm was closed only once .  verify ( mock Realm, times ( 1 )  )  . close (  )  ; }"
7430,"private void update Target Position (  ) {  Matrix . set Identity M ( model Target, 0 )  ;   Matrix . translate M ( model Target, 0, target Position [ 0 ] , target Position [ 1 ] , target Position [ 2 ]  )  ;  //  Update the sound location to match it with the new target position .  if  ( source Id !=  Gvr Audio Engine . INVALID_ID )  {     gvr Audio Engine . set Sound Object Position ( source Id, target Position [ 0 ] , target Position [ 1 ] , target Position [ 2 ]  )  ;  }  Util . check Gl Error ( ""update Target Position"" )  ; }"
7431,"public  Matrix4 set All ( @ Non Null  Vector3 x Axis, @ Non Null  Vector3 y Axis, @ Non Null  Vector3 z Axis, @ Non Null  Vector3 pos ) { // @formatter:off m [ M00 ]  = x Axis . x ;  m [ M01 ]  = y Axis . x ;  m [ M02 ]  = z Axis . x ;  m [ M03 ]  = pos . x ;  m [ M10 ]  = x Axis . y ;  m [ M11 ]  = y Axis . y ;  m [ M12 ]  = z Axis . y ;  m [ M13 ]  = pos . y ;  m [ M20 ]  = x Axis . z ;  m [ M21 ]  = y Axis . z ;  m [ M22 ]  = z Axis . z ;  m [ M23 ]  = pos . z ;  m [ M30 ]  = 0 ;  m [ M31 ]  = 0 ;  m [ M32 ]  = 0 ;  m [ M33 ]  = 1 ;  return this ; // @formatter:on}"
7432,public boolean is Set Type (  ) { return this . type != null ; }
7433,"public void get All Keys ( final  Callback callback ) { new  Guarded Async Task< Void,  Void> ( get React Application Context (  )  )  {     @ Override     protected void do In Background Guarded (  Void .  .  .  params )  {         if  ( !ensure Database (  )  )  {             callback . invoke (  Async Storage Error Util . get DB Error ( null ) , null )  ;              return ;          }          Writable Array data =  Arguments . create Array (  )  ;           String [  ]  columns = { KEY_COLUMN } ;           Cursor cursor = m React Database Supplier . get (  )  . query ( TABLE_CATALYST, columns, null, null, null, null, null )  ;          try {             if  ( cursor . move To First (  )  )  {                 do {                     data . push String ( cursor . get String ( 0 )  )  ;                  } while  ( cursor . move To Next (  )  )  ;              }         } catch  (  Exception e )  {             F Log . w (  React Constants . TAG, e . get Message (  ) , e )  ;              callback . invoke (  Async Storage Error Util . get Error ( null, e . get Message (  )  ) , null )  ;              return ;          } finally {             cursor . close (  )  ;          }         callback . invoke ( null, data )  ;      } } . execute On Executor ( executor )  ; }"
7434,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
7435,protected  Silent Authentication Callback successful Silent Callback ( final  Count Down Latch latch ) { return new  Silent Authentication Callback (  )  {     @ Override     public void on Success ( I Authentication Result authentication Result )  {          Assert . assert False (  String Util . is Empty ( authentication Result . get Access Token (  )  )  )  ;          m Account = authentication Result . get Account (  )  ;          latch . count Down (  )  ;      }     @ Override     public void on Error (  Msal Exception exception )  {          Assert . fail ( exception . get Message (  )  )  ;          latch . count Down (  )  ;      } } ; }
7436,"public com . anychart . charts .  Pert select Marquee Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7437,"public void word Wrap (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . word Wrap (  )  ; "" )  ; }"
7438,"public com . anychart . charts .  Waterfall top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
7439,"protected boolean set Wallpaper Component (  Component Name wallpaper Service )  throws IO Exception,  Xml Pull Parser Exception{ enforce Wallpaper Component Permission (  )  ;   Intent wallpaper Service Intent = new  Intent (  )  . set Component ( wallpaper Service )  ;   List< Resolve Info> resolve Info List =  Runtime Environment . get Application (  )  . get Package Manager (  )  . query Intent Services ( wallpaper Service Intent,  Package Manager . GET_META_DATA )  ;  if  ( resolve Info List . size (  )  != 1 )  {     throw new  Illegal Argument Exception ( "" Can't locate the given wallpaper service: "" + wallpaper Service )  ;  } wallpaper Info = new  Wallpaper Info (  Runtime Environment . get Application (  ) , resolve Info List . get ( 0 )  )  ;  lock Screen Image = null ;  home Screen Image = null ;  return true ; }"
7440,public  Matrix get Created From Matrix (  ) { return created From Matrix ; }
7441,public short get Entry Selector (  ) { int sr2 = get Search Range (  )  / 2 ;  return  ( short )   (  Math . log ( sr2 )  /  Math . log ( 2 )  )  ; }
7442,public  File Type get File Type (  ) { return file Type ; }
7443,static final boolean is Process Alive ( final  String name ) { if  (  Text Utils . is Empty ( name )  )  {     return false ;  } return read Process Client Lock ( new  Action< Boolean> (  )  {     @ Override     public  Boolean call (  )  {          Process Client Record r = ALL . get ( name )  ;          return is Binder Alive ( r )  ;      } } )  ; }
7444,public void size By ( float size ) { if  ( size != 0 )  {     width += size ;      height += size ;      size Changed (  )  ;  }}
7445,"public  Group Prop Multiple Supported Attribute Different Name Model View Model_ on Visibility State Changed (  On Model Visibility State Changed Listener< Group Prop Multiple Supported Attribute Different Name Model View Model_,  Group Prop Multiple Supported Attribute Different Name Model View> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
7446,public static  List< Double> as List ( double .  .  .  backing Array ) { if  ( backing Array . length == 0 )  {     return  Collections . empty List (  )  ;  } return new  Double Array As List ( backing Array )  ; }
7447,"public  Postcard with Short ( @ Nullable  String key, short value ) { m Bundle . put Short ( key, value )  ;  return this ; }"
7448,public void set Uri (  String uri ) { this . uri = uri ; }
7449,"public  String get Long Name (  ) { return get Declaring Class (  )  . get Name (  )  +  ( is Constructor (  )  ?  Descriptor . to String ( get Signature (  )  )  :  ( "" . "" +  Method Info . name Clinit + "" (  ) "" )  )  ; }"
7450,"public void set Value ( T node, float value ) { float old Value = node . value ;  node . value = value ;  if  ( value < old Value ^ is Max Heap )      up ( node . index )  ;  else     down ( node . index )  ; }"
7451,"public void add Pointer (  String [  ]  var_args ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . add Pointer ( %s )  ; "", array To String Wrap Quotes ( var_args )  )  )  ; }"
7452,"public void get Type (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Type (  )  ; "" )  ; }"
7453,public void request Render (  ) { if  ( surface Type == SURFACE_TYPE_SURFACE_VIEW )  {     if  ( gl Surface View != null )  {         gl Surface View . request Render (  )  ;      } } else if  ( surface Type == SURFACE_TYPE_TEXTURE_VIEW )  {     if  ( gl Texture View != null )  {         gl Texture View . request Render (  )  ;      } }}
7454,"public  List< Tag Field> get Genre (  ) { if  ( get First (  Field Key . GENRE )  . length (  )  > 0 )  {     ID3v1 Tag Field field = new ID3v1 Tag Field ( ID3v1 Field Key . GENRE . name (  ) , get First (  Field Key . GENRE )  )  ;      return return Field To List ( field )  ;  } else {     return new  Array List< Tag Field> (  )  ;  }}"
7455,"protected  Path write Link (  String link,  String target )  throws  Exception{ return J Git Test Util . write Link ( db, link, target )  ; }"
7456,"public com . anychart . core . ui .  Timeline row Selected Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode )  )  )  ;  return this ; }"
7457,public boolean on Intercept Touch Event (  Motion Event event ) { on Touch Event ( event )  ;  return false ; }
7458,"public boolean enter Interruptibly (  Duration time )  throws  Interrupted Exception{ return enter Interruptibly ( to Nanos Saturated ( time ) ,  Time Unit . NANOSECONDS )  ; }"
7459,"public com . anychart . core . ui .  Circular Labels Factory line Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . line Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
7460,"public void dispatch Destroy ( boolean finishing ) { final int N = m Activity Array . size (  )  ;  for  ( int i = 0 ;  i < N ;  i++ )  {      Local Activity Record r = m Activity Array . get ( i )  ;      if  ( local LOGV )           Log . v ( TAG, r . id + "": destroying"" )  ;      //            m Activity Thread . perform Destroy Activity ( r, finishing )  ;      try {         if  (  Build . VERSION . SDK_INT >= 28 )  {              Activity Thread_perform Destroy Activity . invoke ( m Activity Thread, r, finishing, 0, false, ""destroy"" )  ;          } else {              Activity Thread_perform Destroy Activity . invoke ( m Activity Thread, r, finishing )  ;          }     } catch  (  Invocation Target Exception e )  {         throw new  Runtime Exception ( e . get Target Exception (  )  )  ;      } } m Activities . clear (  )  ;  m Activity Array . clear (  )  ; }"
7461,public static  Predicate<T> always True (  ) { return  Object Predicate . ALWAYS_TRUE . with Narrowed Type (  )  ; }
7462,public boolean was Not Deleted ( @ Non Null T object ) { return !was Deleted ( object )  ; }
7463,"static T execute ( final  Http Client client, final  Http Host target, final  Http Request request, final  Response Handler<? extends T> response Handler, final  Timer timer, final  Transport Manager transport Manager )  throws IO Exception{  Network Request Metric Builder builder =  Network Request Metric Builder . builder ( transport Manager )  ;  try {     builder . set Url ( target . to URI (  )  + request . get Request Line (  )  . get Uri (  )  )  . set Http Method ( request . get Request Line (  )  . get Method (  )  )  ;       Long request Content Length =  Network Request Metric Builder Util . get Apache Http Message Content Length ( request )  ;      if  ( request Content Length != null )  {         builder . set Request Payload Bytes ( request Content Length )  ;      }     //  Execute network  Request     timer . reset (  )  ;      builder . set Request Start Time Micros ( timer . get Micros (  )  )  ;      return client . execute ( target, request, new  Instrument Apache Http Response Handler<T> ( response Handler, timer, builder )  )  ;  } catch  ( IO Exception e )  {     builder . set Time To Response Completed Micros ( timer . get Duration Micros (  )  )  ;       Network Request Metric Builder Util . log Error ( builder )  ;      throw e ;  }}"
7464,"public  Request<T> add (  Request<T> request ) { //  Tag the request as belonging to this queue and add it to the set of current requests .  request . set Request Queue ( this )  ;  synchronized  ( m Current Requests )  {     m Current Requests . add ( request )  ;  } //  Process requests in the order they are added .  request . set Sequence ( get Sequence Number (  )  )  ;  request . add Marker ( ""add-to-queue"" )  ;  send Request Event ( request,  Request Event . REQUEST_QUEUED )  ;  begin Request ( request )  ;  return request ; }"
7465,public long get Connect Timeout In Seconds (  ) { return connect Timeout In Seconds ; }
7466,public boolean is Open (  ) { return response . is Open (  )  ; }
7467,"public static  Field Scope allowing Fields ( int first Field Number, int .  .  .  rest ) { return  Field Scope Impl . create Allowing Fields ( as List ( first Field Number, rest )  )  ; }"
7468,"private void generate Prologue (  ) { if  ( in Direct Call Function )  {     int direct Parameter Count = script Or Fn . get Param Count (  )  ;      // 3 is reserved for script 'this'     if  ( first Free Local != 4 )           Kit . code Bug (  )  ;      for  ( int i = 0 ;  i != direct Parameter Count ;  ++i )  {         var Registers [ i ]  = first Free Local ;          // 3 is 1 for  Object parm and 2 for double parm         first Free Local += 3 ;      }     if  ( !fn Current . get Parameter Number Context (  )  )  {         // make sure that all parameters are objects         its Forced Object Parameters = true ;          for  ( int i = 0 ;  i != direct Parameter Count ;  ++i )  {             short reg = var Registers [ i ]  ;              cfw . add A Load ( reg )  ;              cfw . add (  Byte Code . GETSTATIC, ""java/lang/ Void"", ""TYPE"", "" Ljava/lang/ Class ; "" )  ;              int is Object Label = cfw . acquire Label (  )  ;              cfw . add (  Byte Code . IF_ACMPNE, is Object Label )  ;              cfw . add D Load ( reg + 1 )  ;              add Double Wrap (  )  ;              cfw . add A Store ( reg )  ;              cfw . mark Label ( is Object Label )  ;          }     } } if  ( fn Current != null && !in Direct Call Function &&  ( !compiler Env . is Use Dynamic Scope (  )  || fn Current . fnode . get Ignore Dynamic Scope (  )  )  )  {     //  Unless we're either in a direct call or using dynamic scope,     // use the enclosing scope of the function as our variable object .      cfw . add A Load ( fun Obj Local )  ;      cfw . add Invoke (  Byte Code . INVOKEINTERFACE, ""org/mozilla/javascript/ Scriptable"", ""get Parent Scope"", "" (  )  Lorg/mozilla/javascript/ Scriptable ; "" )  ;      cfw . add A Store ( variable Object Local )  ;  } // reserve 'args [  ] ' args Local = first Free Local++ ;  locals Max = first Free Local ;  //  Generate  Generator specific prelude if  ( is Generator )  {     // reserve 'args [  ] '     operation Local = first Free Local++ ;      locals Max = first Free Local ;      //  Local 3 is a reference to a  Generator State object .   The rest     // of codegen expects local 3 to be a reference to the this Obj .      //  So move the value in local 3 to generator State Local, and load     // the saved this Obj from the  Generator State object .      cfw . add A Load ( this Obj Local )  ;      generator State Local = first Free Local++ ;      locals Max = first Free Local ;      cfw . add (  Byte Code . CHECKCAST,  Opt Runtime .  Generator State . CLASS_NAME )  ;      cfw . add (  Byte Code . DUP )  ;      cfw . add A Store ( generator State Local )  ;      cfw . add (  Byte Code . GETFIELD,  Opt Runtime .  Generator State . CLASS_NAME,  Opt Runtime .  Generator State . this Obj_NAME,  Opt Runtime .  Generator State . this Obj_TYPE )  ;      cfw . add A Store ( this Obj Local )  ;      if  ( epilogue Label == -1 )  {         epilogue Label = cfw . acquire Label (  )  ;      }      Array List< Node> targets =  (  (  Function Node )  script Or Fn )  . get Resumption Points (  )  ;      if  ( targets != null )  {         // get resumption point         generate Get Generator Resumption Point (  )  ;          // generate dispatch table         generator Switch = cfw . add Table Switch ( 0, targets . size (  )  + GENERATOR_START )  ;          generate Check For Throw Or Close ( -1, false, GENERATOR_START )  ;      } } if  ( fn Current == null )  {     //  See comments in case  Token . REGEXP     if  ( script Or Fn . get Regexp Count (  )  != 0 )  {         script Regexp Local = get New Word Local (  )  ;          codegen . push Reg Exp Array ( cfw, script Or Fn, context Local, variable Object Local )  ;          cfw . add A Store ( script Regexp Local )  ;      } } if  ( compiler Env . is Generate Observer Count (  )  )      save Current Code Offset (  )  ;  if  ( has Vars In Regs )  {     //  No need to create activation .   Pad arguments if need be .      int parm Count = script Or Fn . get Param Count (  )  ;      if  ( parm Count > 0 && !in Direct Call Function )  {         //  Set up args array         // check length of arguments, pad if need be         cfw . add A Load ( args Local )  ;          cfw . add (  Byte Code . ARRAYLENGTH )  ;          cfw . add Push ( parm Count )  ;          int label = cfw . acquire Label (  )  ;          cfw . add (  Byte Code . IF_ICMPGE, label )  ;          cfw . add A Load ( args Local )  ;          cfw . add Push ( parm Count )  ;          add Script Runtime Invoke ( ""pad Arguments"", "" (  [  Ljava/lang/ Object ; I"" + "" )  [  Ljava/lang/ Object ; "" )  ;          cfw . add A Store ( args Local )  ;          cfw . mark Label ( label )  ;      }     int param Count = fn Current . fnode . get Param Count (  )  ;      int var Count = fn Current . fnode . get Param And Var Count (  )  ;      boolean [  ]  const Declarations = fn Current . fnode . get Param And Var Const (  )  ;      // REMIND - only need to initialize the vars that don't get a value     // before the next call and are used in the function     short first Undef Var = -1 ;      for  ( int i = 0 ;  i != var Count ;  ++i )  {         short reg = -1 ;          if  ( i < param Count )  {             if  ( !in Direct Call Function )  {                 reg = get New Word Local (  )  ;                  cfw . add A Load ( args Local )  ;                  cfw . add Push ( i )  ;                  cfw . add (  Byte Code . AALOAD )  ;                  cfw . add A Store ( reg )  ;              }         } else if  ( fn Current . is Number Var ( i )  )  {             reg = get New Word Pair Local ( const Declarations [ i ]  )  ;              cfw . add Push ( 0 . 0 )  ;              cfw . add D Store ( reg )  ;          } else {             reg = get New Word Local ( const Declarations [ i ]  )  ;              if  ( first Undef Var == -1 )  {                  Codegen . push Undefined ( cfw )  ;                  first Undef Var = reg ;              } else {                 cfw . add A Load ( first Undef Var )  ;              }             cfw . add A Store ( reg )  ;          }         if  ( reg >= 0 )  {             if  ( const Declarations [ i ]  )  {                 cfw . add Push ( 0 )  ;                  cfw . add I Store ( reg +  ( fn Current . is Number Var ( i )  ? 2 : 1 )  )  ;              }             var Registers [ i ]  = reg ;          }         //  Add debug table entry if we're generating debug info         if  ( compiler Env . is Generate Debug Info (  )  )  {              String name = fn Current . fnode . get Param Or Var Name ( i )  ;               String type = fn Current . is Number Var ( i )  ? ""D"" : "" Ljava/lang/ Object ; "" ;              int start PC = cfw . get Current Code Offset (  )  ;              if  ( reg < 0 )  {                 reg = var Registers [ i ]  ;              }             cfw . add Variable Descriptor ( name, type, start PC, reg )  ;          }     }     //  Skip creating activation object .      return ;  } // in generate Generator (  )  .  if  ( is Generator )      return ;   String debug Variable Name ;  if  ( fn Current != null )  {     debug Variable Name = ""activation"" ;      cfw . add A Load ( fun Obj Local )  ;      cfw . add A Load ( variable Object Local )  ;      cfw . add A Load ( args Local )  ;      add Script Runtime Invoke ( ""create Function Activation"", "" (  Lorg/mozilla/javascript/ Native Function ; "" + "" Lorg/mozilla/javascript/ Scriptable ; "" + "" [  Ljava/lang/ Object ; "" + "" )  Lorg/mozilla/javascript/ Scriptable ; "" )  ;      cfw . add A Store ( variable Object Local )  ;      cfw . add A Load ( context Local )  ;      cfw . add A Load ( variable Object Local )  ;      add Script Runtime Invoke ( ""enter Activation Function"", "" (  Lorg/mozilla/javascript/ Context ; "" + "" Lorg/mozilla/javascript/ Scriptable ; "" + "" ) V"" )  ;  } else {     debug Variable Name = ""global"" ;      cfw . add A Load ( fun Obj Local )  ;      cfw . add A Load ( this Obj Local )  ;      cfw . add A Load ( context Local )  ;      cfw . add A Load ( variable Object Local )  ;      // false to indicate it is not eval script     cfw . add Push ( 0 )  ;      add Script Runtime Invoke ( ""init Script"", "" (  Lorg/mozilla/javascript/ Native Function ; "" + "" Lorg/mozilla/javascript/ Scriptable ; "" + "" Lorg/mozilla/javascript/ Context ; "" + "" Lorg/mozilla/javascript/ Scriptable ; "" + ""Z"" + "" ) V"" )  ;  } enter Area Start Label = cfw . acquire Label (  )  ;  epilogue Label = cfw . acquire Label (  )  ;  cfw . mark Label ( enter Area Start Label )  ;  generate Nested Function Inits (  )  ;  // default is to generate debug info if  ( compiler Env . is Generate Debug Info (  )  )  {     cfw . add Variable Descriptor ( debug Variable Name, "" Lorg/mozilla/javascript/ Scriptable ; "", cfw . get Current Code Offset (  ) , variable Object Local )  ;  } if  ( fn Current == null )  {     // OPT: use dataflow to prove that this assignment is dead     popv Local = get New Word Local (  )  ;       Codegen . push Undefined ( cfw )  ;      cfw . add A Store ( popv Local )  ;      int linenum = script Or Fn . get End Lineno (  )  ;      if  ( linenum != -1 )          cfw . add Line Number Entry (  ( short )  linenum )  ;  } else {     if  ( fn Current . its Contains Calls0 )  {         its Zero Arg Array = get New Word Local (  )  ;          cfw . add (  Byte Code . GETSTATIC, ""org/mozilla/javascript/ Script Runtime"", ""empty Args"", "" [  Ljava/lang/ Object ; "" )  ;          cfw . add A Store ( its Zero Arg Array )  ;      }     if  ( fn Current . its Contains Calls1 )  {         its One Arg Array = get New Word Local (  )  ;          cfw . add Push ( 1 )  ;          cfw . add (  Byte Code . ANEWARRAY, ""java/lang/ Object"" )  ;          cfw . add A Store ( its One Arg Array )  ;      } }}"
7469,public  String get Name (  ) { if  ( constructor != null )  {     return constructor . get Name (  )  ;  } else {     return method . get Name (  )  ;  }}
7470,"public  Entry next (  ) { if  ( !has Next )      throw new  No Such Element Exception (  )  ;  if  ( !valid )      throw new  Gdx Runtime Exception ( ""#iterator (  )  cannot be used nested . "" )  ;  int [  ]  key Table = map . key Table ;  if  ( next Index == INDEX_ZERO )  {     entry . key = 0 ;      entry . value = map . zero Value ;  } else {     entry . key = key Table [ next Index ]  ;      entry . value = map . value Table [ next Index ]  ;  } current Index = next Index ;  find Next Index (  )  ;  return entry ; }"
7471,"protected  Map< Selectable,  Object> find Matching Conditions (  Selectable Configuration Context configuration Context,  Selector<T> selector,  Dependency Stack dependency Stack ) {  Map< Selectable,  Object> matching Conditions = new  Linked Hash Map<> (  )  ;  for  (  Map .  Entry< Selector Key, T> entry : selector . get Conditions (  )  . entry Set (  )  )  {     handle Selector ( configuration Context, matching Conditions, entry . get Key (  ) , entry . get Value (  ) , dependency Stack )  ;  } for  (  Selector Key selector Key : selector . get Null Conditions (  )  )  {     handle Selector ( configuration Context, matching Conditions, selector Key, NULL_VALUE, dependency Stack )  ;  } return matching Conditions ; }"
7472,public  Epoxy Model<T> show ( boolean show ) { on Mutation (  )  ;  shown = show ;  return this ; }
7473,"private void add New Frame Or Add Field (  List< Tag Field> list,  Hash Map frame Map,  Abstract ID3v2 Frame existing Frame,  Abstract ID3v2 Frame frame ) {  Array List< Tag Field> merged List = new  Array List< Tag Field> (  )  ;  if  ( existing Frame != null )  {     merged List . add ( existing Frame )  ;  } else {     merged List . add All ( list )  ;  } /**     *  If the frame is a TXXX frame then we add an extra string to the existing frame     * if same description otherwise we create a new frame     */ if  ( frame . get Body (  )  instanceof  Frame Body TXXX )  {      Frame Body TXXX frame Body =  (  Frame Body TXXX )  frame . get Body (  )  ;      boolean match = false ;       Iterator< Tag Field> i = merged List . list Iterator (  )  ;      while  ( i . has Next (  )  )  {          Frame Body TXXX existing Frame Body =  (  Frame Body TXXX )   (  (  Abstract ID3v2 Frame )  i . next (  )  )  . get Body (  )  ;          if  ( frame Body . get Description (  )  . equals ( existing Frame Body . get Description (  )  )  )  {             existing Frame Body . add Text Value ( frame Body . get Text (  )  )  ;              match = true ;              break ;          }     }     if  ( !match )  {         add New Frame To Map ( list, frame Map, existing Frame, frame )  ;      } } else if  ( frame . get Body (  )  instanceof  Frame Body WXXX )  {      Frame Body WXXX frame Body =  (  Frame Body WXXX )  frame . get Body (  )  ;      boolean match = false ;       Iterator< Tag Field> i = merged List . list Iterator (  )  ;      while  ( i . has Next (  )  )  {          Frame Body WXXX existing Frame Body =  (  Frame Body WXXX )   (  (  Abstract ID3v2 Frame )  i . next (  )  )  . get Body (  )  ;          if  ( frame Body . get Description (  )  . equals ( existing Frame Body . get Description (  )  )  )  {             existing Frame Body . add Url Link ( frame Body . get Url Link (  )  )  ;              match = true ;              break ;          }     }     if  ( !match )  {         add New Frame To Map ( list, frame Map, existing Frame, frame )  ;      } } else if  ( frame . get Body (  )  instanceof  Abstract Frame Body Text Info )  {      Abstract Frame Body Text Info frame Body =  (  Abstract Frame Body Text Info )  frame . get Body (  )  ;       Abstract Frame Body Text Info existing Frame Body =  (  Abstract Frame Body Text Info )  existing Frame . get Body (  )  ;      existing Frame Body . add Text Value ( frame Body . get Text (  )  )  ;  } else if  ( frame . get Body (  )  instanceof  Frame Body IPLS )  {      Frame Body IPLS frame Body =  (  Frame Body IPLS )  frame . get Body (  )  ;       Frame Body IPLS existing Frame Body =  (  Frame Body IPLS )  existing Frame . get Body (  )  ;      existing Frame Body . add Pair ( frame Body . get Text (  )  )  ;  } else if  ( frame . get Body (  )  instanceof  Frame Body TIPL )  {      Frame Body TIPL frame Body =  (  Frame Body TIPL )  frame . get Body (  )  ;       Frame Body TIPL existing Frame Body =  (  Frame Body TIPL )  existing Frame . get Body (  )  ;      existing Frame Body . add Pair ( frame Body . get Text (  )  )  ;  } else if  ( frame . get Body (  )  instanceof  Frame Body TRCK )  {      Frame Body TRCK frame Body =  (  Frame Body TRCK )  frame . get Body (  )  ;       Frame Body TRCK existing Frame Body =  (  Frame Body TRCK )  existing Frame . get Body (  )  ;      if  ( frame Body . get Track No (  )  != null && frame Body . get Track No (  )  > 0 )  {         existing Frame Body . set Track No ( frame Body . get Track No As Text (  )  )  ;      }     if  ( frame Body . get Track Total (  )  != null && frame Body . get Track Total (  )  > 0 )  {         existing Frame Body . set Track Total ( frame Body . get Track Total As Text (  )  )  ;      } } else if  ( frame . get Body (  )  instanceof  Frame Body TPOS )  {      Frame Body TPOS frame Body =  (  Frame Body TPOS )  frame . get Body (  )  ;       Frame Body TPOS existing Frame Body =  (  Frame Body TPOS )  existing Frame . get Body (  )  ;      if  ( frame Body . get Disc No (  )  != null && frame Body . get Disc No (  )  > 0 )  {         existing Frame Body . set Disc No ( frame Body . get Disc No As Text (  )  )  ;      }     if  ( frame Body . get Disc Total (  )  != null && frame Body . get Disc Total (  )  > 0 )  {         existing Frame Body . set Disc Total ( frame Body . get Disc Total As Text (  )  )  ;      } } else {     add New Frame To Map ( list, frame Map, existing Frame, frame )  ;  }}"
7474,public void set Size ( int size ) { this . size = size ; }
7475,"public void test Sublist Concurrent Modification Exception (  ) {  List Multimap< String,  Integer> multimap = create (  )  ;  multimap . put All ( ""foo"", as List ( 1, 2, 3, 4, 5 )  )  ;   List< Integer> list = multimap . get ( ""foo"" )  ;  assert That ( multimap . get ( ""foo"" )  )  . contains Exactly ( 1, 2, 3, 4, 5 )  . in Order (  )  ;   List< Integer> sublist = list . sub List ( 0, 5 )  ;  assert That ( sublist )  . contains Exactly ( 1, 2, 3, 4, 5 )  . in Order (  )  ;  sublist . clear (  )  ;  assert True ( sublist . is Empty (  )  )  ;  multimap . put ( ""foo"", 6 )  ;  try {     sublist . is Empty (  )  ;      fail ( "" Expected  Concurrent Modification Exception"" )  ;  } catch  (  Concurrent Modification Exception expected )  { }}"
7476,"public static void load Arm V7 Library (  Context context,  String lib Name ) { if  ( lib Name == null || lib Name . is Empty (  )  || context == null )  {     throw new  Tinker Runtime Exception ( ""lib Name or context is null!"" )  ;  }  Tinker tinker =  Tinker . with ( context )  ;  if  ( tinker . is Enabled For Native Lib (  )  )  {     if  (  Tinker Load Library . load Library From Tinker ( context, ""lib/armeabi-v7a"", lib Name )  )  {         return ;      } }  System . load Library ( lib Name )  ; }"
7477,"protected boolean use View Stub Layout Params (  Epoxy Model<?> model, int model Position ) { return true ; }"
7478,public static  Builder builder (  ) { return new  Builder (  )  ; }
7479,public  Request Creator tag ( @ Non Null  Object tag ) { data . tag ( tag )  ;  return this ; }
7480,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_COMPOSER_SORT_ORDER_ITUNES ; }
7481,public void set Menu Fragment (  Fragment f ) { m Delegate . set Menu Fragment ( f )  ; }
7482,"private boolean scroll To Child Rect (  Rect rect, boolean immediate ) { final int delta X = compute Scroll Delta To Get Child Rect On Screen X ( rect )  ;  final int delta Y = compute Scroll Delta To Get Child Rect On Screen Y ( rect )  ;  final boolean scroll = delta X != 0 || delta Y != 0 ;  if  ( scroll )  {     if  ( immediate )  {         scroll By ( delta X, delta Y )  ;      } else {         smooth Scroll By ( delta X, delta Y )  ;      } } return scroll ; }"
7483,"public void triangle Up (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . triangle Up (  )  ; "" )  ; }"
7484,"public com . anychart . core . annotations .  Fibonacci Retracement stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7485,"public float limit Value ( float a, float b ) { float valve = 0 ;  final float min =  Math . min ( a, b )  ;  final float max =  Math . max ( a, b )  ;  valve = valve > min ? valve : min ;  valve = valve < max ? valve : max ;  return valve ; }"
7486,"public void test Set Min Max (  ) { update Count = 0 ;  final  Spruce Spring Animation anim = new  Spruce Spring Animation ( m View1,  Spruce Dynamics . SCALE_X, 0 . 0f )  ;  anim . set Min Value ( 0 . 0f )  ;  anim . set Max Value ( 1 . 0f )  ;  anim . get Spring (  )  . set Stiffness (  Spring Force . STIFFNESS_HIGH )  . set Damping Ratio (  Spring Force . DAMPING_RATIO_HIGH_BOUNCY )  ;  final  Spruce Dynamics .  On Animation Update Listener mock Update Listener =  (  animation,  value,  velocity )  -> update Count += 1 ;  final  Spruce Dynamics .  On Animation End Listener mock End Listener =  (  animation,  canceled,  value,  velocity )  -> {     assert Equals ( anim . hash Code (  ) , animation . hash Code (  )  )  ;      assert False ( canceled )  ;      assert Equals ( 0f, value, 0 . 0 )  ;      assert Equals ( 0f, velocity, 0 . 0 )  ;  } ;  final  Spruce Dynamics .  On Animation Update Listener update Listener =  (  animation,  value,  velocity )  -> {     assert True ( value >= 0 . 0f )  ;      assert True ( value <= 1 . 0f )  ;  } ;   Instrumentation Registry . get Instrumentation (  )  . run On Main Sync (  (  )  -> anim . set Start Value ( 1 . 0f )  . set Start Velocity ( 8000f )  . add End Listener ( mock End Listener )  . add Update Listener ( mock Update Listener )  . add Update Listener ( update Listener )  . start (  )  )  ;  try {      Thread . sleep ( 2000 )  ;  } catch  (  Interrupted Exception e )  {     e . print Stack Trace (  )  ;  } assert True ( update Count >= 2 )  ; }"
7487,"public final  Unmodifiable Iterator<N> iterator (  ) { return  Iterators . for Array ( node U, node V )  ; }"
7488,"public  Closeable Reference<V> reuse ( K key ) {  Preconditions . check Not Null ( key )  ;   Closeable Reference<V> client Ref = null ;  boolean removed = false ;   Entry<K, V> old Exclusive = null ;  synchronized  ( this )  {     old Exclusive = m Least Frequently Used Exclusive Entries . remove ( key )  ;      if  ( old Exclusive == null )  {         old Exclusive = m Most Frequently Used Exclusive Entries . remove ( key )  ;      }     if  ( old Exclusive != null )  {          Entry<K, V> entry = m Cached Entries . remove ( key )  ;           Preconditions . check Not Null ( entry )  ;           Preconditions . check State ( entry . client Count == 0 )  ;          // optimization: instead of cloning and then closing the original reference,         // we just do a move         client Ref = entry . value Ref ;          removed = true ;      } } if  ( removed )  {     maybe Notify Exclusive Entry Removal ( old Exclusive )  ;  } return client Ref ; }"
7489,"private int read Sample (  Extractor Input input,  Position Holder position Holder )  throws IO Exception,  Interrupted Exception{ long input Position = input . get Position (  )  ;  if  ( sample Track Index == C . INDEX_UNSET )  {     sample Track Index = get Track Index Of Next Read Sample ( input Position )  ;      if  ( sample Track Index == C . INDEX_UNSET )  {         return RESULT_END_OF_INPUT ;      }     is Ac4 Header Required =  Mime Types . AUDIO_AC4 . equals ( tracks [ sample Track Index ]  . track . format . sample Mime Type )  ;  }  Mp4 Track track = tracks [ sample Track Index ]  ;   Track Output track Output = track . track Output ;  int sample Index = track . sample Index ;  long position = track . sample Table . offsets [ sample Index ]  ;  int sample Size = track . sample Table . sizes [ sample Index ]  ;  long skip Amount = position - input Position + sample Bytes Written ;  if  ( skip Amount < 0 || skip Amount >= RELOAD_MINIMUM_SEEK_DISTANCE )  {     position Holder . position = position ;      return RESULT_SEEK ;  } if  ( track . track . sample Transformation ==  Track . TRANSFORMATION_CEA608_CDAT )  {     //  The sample information is contained in a cdat atom .   The header must be discarded for     // committing .      skip Amount +=  Atom . HEADER_SIZE ;      sample Size -=  Atom . HEADER_SIZE ;  } input . skip Fully (  ( int )  skip Amount )  ;  if  ( track . track . nal Unit Length Field Length != 0 )  {     //  Zero the top three bytes of the array that we'll use to decode nal unit lengths, in case     // they're only 1 or 2 bytes long .      byte [  ]  nal Length Data = nal Length . data ;      nal Length Data [ 0 ]  = 0 ;      nal Length Data [ 1 ]  = 0 ;      nal Length Data [ 2 ]  = 0 ;      int nal Unit Length Field Length = track . track . nal Unit Length Field Length ;      int nal Unit Length Field Length Diff = 4 - track . track . nal Unit Length Field Length ;      // start codes as we encounter them .      while  ( sample Bytes Written < sample Size )  {         if  ( sample Current Nal Bytes Remaining == 0 )  {             //  Read the NAL length so that we know where we find the next one .              input . read Fully ( nal Length Data, nal Unit Length Field Length Diff, nal Unit Length Field Length )  ;              nal Length . set Position ( 0 )  ;              int nal Length Int = nal Length . read Int (  )  ;              if  ( nal Length Int < 0 )  {                 throw new  Parser Exception ( "" Invalid NAL length"" )  ;              }             sample Current Nal Bytes Remaining = nal Length Int ;              //  Write a start code for the current NAL unit .              nal Start Code . set Position ( 0 )  ;              track Output . sample Data ( nal Start Code, 4 )  ;              sample Bytes Written += 4 ;              sample Size += nal Unit Length Field Length Diff ;          } else {             //  Write the payload of the NAL unit .              int written Bytes = track Output . sample Data ( input, sample Current Nal Bytes Remaining, false )  ;              sample Bytes Written += written Bytes ;              sample Current Nal Bytes Remaining -= written Bytes ;          }     } } else {     if  ( is Ac4 Header Required )  {          Ac4 Util . get Ac4 Sample Header ( sample Size, scratch )  ;          int length = scratch . limit (  )  ;          track Output . sample Data ( scratch, length )  ;          sample Size += length ;          sample Bytes Written += length ;          is Ac4 Header Required = false ;      }     while  ( sample Bytes Written < sample Size )  {         int written Bytes = track Output . sample Data ( input, sample Size - sample Bytes Written, false )  ;          sample Bytes Written += written Bytes ;          sample Current Nal Bytes Remaining -= written Bytes ;      } } track Output . sample Metadata ( track . sample Table . timestamps Us [ sample Index ] , track . sample Table . flags [ sample Index ] , sample Size, 0, null )  ;  track . sample Index++ ;  sample Track Index = C . INDEX_UNSET ;  sample Bytes Written = 0 ;  sample Current Nal Bytes Remaining = 0 ;  return RESULT_CONTINUE ; }"
7490,public  Model upsert ( @ Non Null final  Model model ) { class  Ref<T> {     T value ;  } final  Ref< Model> model Ref = new  Ref<> (  )  ;  conn . transaction Sync ( new  Runnable (  )  {     @ Override     public void run (  )  {         model Ref . value = upsert Without Transaction ( model )  ;      } } )  ;  return model Ref . value ; }
7491,public X509 Certificate [  ]  get Accepted Issuers (  ) { return m Standard Trust Manager . get Accepted Issuers (  )  ; }
7492,"public static  Plugin Info parse From Package Info (  Package Info pi,  String path ) {  Application Info ai = pi . application Info ;   String pn = pi . package Name ;   String alias = null ;  int low = 0 ;  int high = 0 ;  int ver = 0 ;   Bundle meta Data = ai . meta Data ;  // 优先读取 Meta Data中的内容（如有），并覆盖上面的默认值 if  ( meta Data != null )  {     // 获取插件别名（如有），如无则将""包名""当做插件名     alias = meta Data . get String ( ""com . qihoo360 . plugin . name"" )  ;      // 获取最低/最高协议版本（默认为应用的最小支持版本，以保证一定能在宿主中运行）     low = meta Data . get Int ( ""com . qihoo360 . plugin . version . low"" )  ;      high = meta Data . get Int ( ""com . qihoo360 . plugin . version . high"" )  ;      // 获取插件的版本号。优先从meta Data中读取，如无则使用插件的 Version Code     ver = meta Data . get Int ( ""com . qihoo360 . plugin . version . ver"" )  ;  } // 针对有问题的字段做除错处理 if  ( low <= 0 )  {     low =  Constant . ADAPTER_COMPATIBLE_VERSION ;  } if  ( high <= 0 )  {     high =  Constant . ADAPTER_COMPATIBLE_VERSION ;  } if  ( ver <= 0 )  {     ver = pi . version Code ;  }  Plugin Info pli = new  Plugin Info ( pn, alias, low, high, ver, path,  Plugin Info . TYPE_NOT_INSTALL )  ;  // 获取插件的框架版本号 pli . set Framework Version By Meta ( meta Data )  ;  return pli ; }"
7493,"void test Change Strategy (  ) { final var initial Strategy = mock (  Dragon Slaying Strategy . class )  ;  final var dragon Slayer = new  Dragon Slayer ( initial Strategy )  ;  dragon Slayer . go To Battle (  )  ;  verify ( initial Strategy )  . execute (  )  ;  final var new Strategy = mock (  Dragon Slaying Strategy . class )  ;  dragon Slayer . change Strategy ( new Strategy )  ;  dragon Slayer . go To Battle (  )  ;  verify ( new Strategy )  . execute (  )  ;  verify No More Interactions ( initial Strategy, new Strategy )  ; }"
7494,public static  String get Local Ip By3 G (  ) { try {     for  (  Enumeration< Network Interface> en =  Network Interface . get Network Interfaces (  )  ;  en . has More Elements (  )  ;   )  {          Network Interface intf = en . next Element (  )  ;          for  (  Enumeration< Inet Address> enum Ip Addr = intf . get Inet Addresses (  )  ;  enum Ip Addr . has More Elements (  )  ;   )  {              Inet Address inet Address = enum Ip Addr . next Element (  )  ;              if  ( !inet Address . is Loopback Address (  )  && inet Address instanceof  Inet4 Address )  {                 // instanceof  Inet6 Address )  {                 return inet Address . get Host Address (  )  . to String (  )  ;              }         }     } } catch  (  Exception e )  {     e . print Stack Trace (  )  ;  } return null ; }
7495,"public  React Instance Manager build (  ) {  Assertions . assert Not Null ( m Application, "" Application property has not been set with this builder"" )  ;  if  ( m Initial Lifecycle State ==  Lifecycle State . RESUMED )  {      Assertions . assert Not Null ( m Current Activity, "" Activity needs to be set if initial lifecycle state is resumed"" )  ;  }  Assertions . assert Condition ( m Use Developer Support || m JS Bundle Asset Url != null || m JS Bundle Loader != null, ""JS  Bundle  File or  Asset URL has to be provided when dev support is disabled"" )  ;   Assertions . assert Condition ( m JS Main Module Path != null || m JS Bundle Asset Url != null || m JS Bundle Loader != null, "" Either  Main Module Path or JS  Bundle  File needs to be provided"" )  ;  if  ( m UI Implementation Provider == null )  {     // create default UI Implementation Provider if the provided one is null .      m UI Implementation Provider = new UI Implementation Provider (  )  ;  } //  We use the name of the device and the app for debugging & metrics //noinspection  Constant Conditions  String app Name = m Application . get Package Name (  )  ;   String device Name = get Friendly Device Name (  )  ;  return new  React Instance Manager ( m Application, m Current Activity, m Default Hardware Back Btn Handler, m Java Script Executor Factory == null ? get Default JS Executor Factory ( app Name, device Name, m Application . get Application Context (  )  )  : m Java Script Executor Factory,  ( m JS Bundle Loader == null && m JS Bundle Asset Url != null )  ? JS Bundle Loader . create Asset Loader ( m Application, m JS Bundle Asset Url, false )  : m JS Bundle Loader, m JS Main Module Path, m Packages, m Use Developer Support, m Bridge Idle Debug Listener,  Assertions . assert Not Null ( m Initial Lifecycle State, "" Initial lifecycle state was not set"" ) , m UI Implementation Provider, m Native Module Call Exception Handler, m Red Box Handler, m Lazy View Managers Enabled, m Dev Bundle Download Listener, m Min Num Shakes, m Min Time Left In Frame For Non Batched Operation Ms, m JSI Modules Package, m Custom Packager Command Handlers, m TMM Delegate Builder )  ; }"
7496,public boolean is Reuse Validating Objects (  ) { return reuse Validate ; }
7497,public boolean was Deleted (  ) {  Ref r = get Ref (  )  ;  return r . get Storage (  )  ==  Ref .  Storage . NEW && r . get Object Id (  )  == null ; }
7498,"public static  Function< Item,  Boolean> contains Field ( final  String field To Check ) { return new  Contains Field Predicate ( field To Check )  ; }"
7499,public  Checkout Command set Progress Monitor (  Progress Monitor monitor ) { if  ( monitor == null )  {     monitor =  Null Progress Monitor . INSTANCE ;  } this . monitor = monitor ;  return this ; }
7500,"public com . anychart . core . axismarkers .  Circular Range fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
7501,"private static boolean is Codec Usable Decoder ( android . media .  Media Codec Info info,  String name, boolean secure Decoders Explicit,  String requested Mime Type ) { if  ( info . is Encoder (  )  ||  ( !secure Decoders Explicit && name . ends With ( "" . secure"" )  )  )  {     return false ;  } //  Work around broken audio decoders .  if  (  Util . SDK_INT < 21 &&  ( ""CIPAAC Decoder"" . equals ( name )  || ""CIPMP3 Decoder"" . equals ( name )  || ""CIP Vorbis Decoder"" . equals ( name )  || ""CIPAMRNB Decoder"" . equals ( name )  || ""AAC Decoder"" . equals ( name )  || ""MP3 Decoder"" . equals ( name )  )  )  {     return false ;  } // https://github . com/google/ Exo Player/issues/3171 .  if  (  Util . SDK_INT < 18 && ""OMX . MTK . AUDIO . DECODER . AAC"" . equals ( name )  &&  ( ""a70"" . equals (  Util . DEVICE )  ||  ( "" Xiaomi"" . equals (  Util . MANUFACTURER )  &&  Util . DEVICE . starts With ( ""HM"" )  )  )  )  {     return false ;  } // platform API version 16 fails .  if  (  Util . SDK_INT == 16 && ""OMX . qcom . audio . decoder . mp3"" . equals ( name )  &&  ( // HTC  Butterfly ""dlxu"" . equals (  Util . DEVICE )  || // HTC  Desire X ""protou"" . equals (  Util . DEVICE )  || // HTC  One S ""ville"" . equals (  Util . DEVICE )  || ""villeplus"" . equals (  Util . DEVICE )  || ""villec2"" . equals (  Util . DEVICE )  || // LGE  Optimus G  Util . DEVICE . starts With ( ""gee"" )  || //  Sony  Xperia Z ""C6602"" . equals (  Util . DEVICE )  || ""C6603"" . equals (  Util . DEVICE )  || ""C6606"" . equals (  Util . DEVICE )  || ""C6616"" . equals (  Util . DEVICE )  || ""L36h"" . equals (  Util . DEVICE )  || ""SO-02 E"" . equals (  Util . DEVICE )  )  )  {     return false ;  } //  Work around an issue where large timestamps are not propagated correctly .  if  (  Util . SDK_INT == 16 && ""OMX . qcom . audio . decoder . aac"" . equals ( name )  &&  ( //  Sony  Xperia E ""C1504"" . equals (  Util . DEVICE )  || ""C1505"" . equals (  Util . DEVICE )  || //  Sony  Xperia E dual ""C1604"" . equals (  Util . DEVICE )  || ""C1605"" . equals (  Util . DEVICE )  )  )  {     return false ;  } //  Work around https://github . com/google/ Exo Player/issues/3249 .  if  (  Util . SDK_INT < 24 &&  ( ""OMX . SEC . aac . dec"" . equals ( name )  || ""OMX .  Exynos . AAC .  Decoder"" . equals ( name )  )  && ""samsung"" . equals (  Util . MANUFACTURER )  &&  ( //  Galaxy S6  Util . DEVICE . starts With ( ""zeroflte"" )  || //  Galaxy S6  Edge  Util . DEVICE . starts With ( ""zerolte"" )  || //  Galaxy S6  Edge+  Util . DEVICE . starts With ( ""zenlte"" )  || //  Galaxy S6 ""SC-05 G"" . equals (  Util . DEVICE )  || //  Galaxy S6  Active ""marinelteatt"" . equals (  Util . DEVICE )  || //  Galaxy S6  Edge ""404 SC"" . equals (  Util . DEVICE )  || ""SC-04 G"" . equals (  Util . DEVICE )  || ""SCV31"" . equals (  Util . DEVICE )  )  )  {     return false ;  } // VP8 decoder on  Samsung  Galaxy S3/S4/S4  Mini/ Tab 3/ Note 2 does not render video .  if  (  Util . SDK_INT <= 19 && ""OMX . SEC . vp8 . dec"" . equals ( name )  && ""samsung"" . equals (  Util . MANUFACTURER )  &&  (  Util . DEVICE . starts With ( ""d2"" )  ||  Util . DEVICE . starts With ( ""serrano"" )  ||  Util . DEVICE . starts With ( ""jflte"" )  ||  Util . DEVICE . starts With ( ""santos"" )  ||  Util . DEVICE . starts With ( ""t0"" )  )  )  {     return false ;  } // VP8 decoder on  Samsung  Galaxy S4 cannot be queried .  if  (  Util . SDK_INT <= 19 &&  Util . DEVICE . starts With ( ""jflte"" )  && ""OMX . qcom . video . decoder . vp8"" . equals ( name )  )  {     return false ;  } // MTK E-AC3 decoder doesn't support decoding JOC streams in 2-D .   See  [  Internal: b/69400041 ]  .  if  (  Mime Types . AUDIO_E_AC3_JOC . equals ( requested Mime Type )  && ""OMX . MTK . AUDIO . DECODER . DSPAC3"" . equals ( name )  )  {     return false ;  } return true ; }"
7502,"private static  String get Config Value For Key (  String key,  Map< String,  String> appended Settings,  String prefix,  Optional< String> containing String,  List< String> cxx Flags ) { //  If the value exists in append Settings, get it, remove it from append Settings and return .   String value = appended Settings . get ( key )  ;  if  ( value != null )  {     appended Settings . remove ( key )  ;      return value ;  } //  If the value doesn't exist, look within cxx Flags int index Of Cxx Library Spec = -1 ;  for  (  String item : cxx Flags )  {     if  ( containing String . is Present (  )  && !item . contains ( containing String . get (  )  )  )  {         continue ;      }     if  ( item . starts With ( prefix )  )  {         index Of Cxx Library Spec = cxx Flags . index Of ( item )  ;          value = item . substring ( item . index Of ( '=' )  + 1 )  ;          break ;      } } if  ( index Of Cxx Library Spec != -1 )  {     cxx Flags . remove ( index Of Cxx Library Spec )  ;  } else {     LOG . debug ( "" Cannot determine value of %s"", key )  ;  } return value ; }"
7503,public int get Rotation (  ) { return rotation ; }
7504,"private static int do Parse Trie To Builder (  Deque< Char Sequence> stack,  Char Sequence encoded, int start,  Immutable Map .  Builder< String,  Public Suffix Type> builder ) { int encoded Len = encoded . length (  )  ;  int idx = start ;  char c = '\0' ;  //  Read all of the characters for this node .  for  (  ;  idx < encoded Len ;  idx++ )  {     c = encoded . char At ( idx )  ;      if  ( c == '&' || c == '?' || c == '!' || c == ':' || c == ',' )  {         break ;      } } stack . push ( reverse ( encoded . sub Sequence ( start, idx )  )  )  ;  if  ( c == '!' || c == '?' || c == ':' || c == ',' )  {     // '!' represents an interior node that represents a REGISTRY entry in the map .      // '?' represents a leaf node, which represents a REGISTRY entry in map .      // ':' represents an interior node that represents a private entry in the map     // ',' represents a leaf node, which represents a private entry in the map .       String domain = PREFIX_JOINER . join ( stack )  ;      if  ( domain . length (  )  > 0 )  {         builder . put ( domain,  Public Suffix Type . from Code ( c )  )  ;      } } idx++ ;  if  ( c != '?' && c != ',' )  {     while  ( idx < encoded Len )  {         //  Read all the children         idx += do Parse Trie To Builder ( stack, encoded, idx, builder )  ;          if  ( encoded . char At ( idx )  == '?' || encoded . char At ( idx )  == ',' )  {             //  An extra '?' or ',' after a child node indicates the end of all children of this node .              idx++ ;              break ;          }     } } stack . pop (  )  ;  return idx - start ; }"
7505,"public com . anychart . palettes .  Hatch Fills items ( com . anychart . graphics . vector .  Hatch Fill hatch Fill, com . anychart . graphics . vector . hatchfill .  Hatch Fill Type var_args ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . items ( %s, %s )  ; "",  ( hatch Fill != null )  ? hatch Fill . get Js Base (  )  : null,  ( var_args != null )  ? var_args . get Js Base (  )  : null )  )  ;  return this ; }"
7506,"public com . anychart . core . utils .  Margin margin (  ) { return new com . anychart . core . utils .  Margin ( js Base + "" . margin (  ) "" )  ; }"
7507,"public com . anychart . core . polar . series .  Continuous Base bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
7508,public  Confetti Manager set Emission Rate ( float emission Rate ) { this . emission Rate = emission Rate / 1000f ;  this . emission Rate Inverse = 1f / this . emission Rate ;  return this ; }
7509,public void set Force Replace Inner Layout ( boolean force Replace Inner Layout ) { this . m Force Replace Inner Layout = force Replace Inner Layout ; }
7510,"private  Response do Http Post (  Http Post http Post )  throws IO Exception{ //  Execute HTTP  Post  Request final  Http Response response = get Http Client (  )  . execute ( http Post )  ;  return new com . alexgilleran . icesoap . request . impl .  Http Response ( response . get Entity (  )  . get Content (  ) , response . get Status Line (  )  . get Status Code (  ) , new com . alexgilleran . icesoap . request . impl .  Http Response .  Connection (  )  {     @ Override     public void close (  )  throws IO Exception {         response . get Entity (  )  . consume Content (  )  ;      } } )  ; }"
7511,"public  Base Model View Model_ on Unbind (  On Model Unbound Listener< Base Model View Model_,  Base Model View> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
7512,public  Set<UR Iish Field> get Required Fields (  ) { return  Collections . unmodifiable Set (  Enum Set . of ( UR Iish Field . PATH )  )  ; }
7513,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
7514,public  Event Bus Builder log No Subscriber Messages ( boolean log No Subscriber Messages ) { this . log No Subscriber Messages = log No Subscriber Messages ;  return this ; }
7515,public int ref Block Size (  ) { return ref Block Size ; }
7516,"public void show Hide Fragment ( I Support Fragment show Fragment, I Support Fragment hide Fragment ) { m Transaction Delegate . show Hide Fragment ( get Child Fragment Manager (  ) , show Fragment, hide Fragment )  ; }"
7517,"public static  Scenario make Type A Scenario ( int len ) {  Scenario scenario = new  Scenario (  )  ;   ;  for  ( int i = 0 ;  i < len ;  i++ )  {      String logger Name =  Scenario Random Util . random Logger Name ( AVERAGE_LOGGER_DEPTH, LOGGER_DEPT_DEV )  ;      scenario . add ( new  Create Logger ( logger Name )  )  ;  } return scenario ; }"
7518,"public com . anychart . charts .  Venn margin (  Number value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
7519,public  Builder play (  Animator anim ) { if  ( anim != null )  {     m Needs Sort = true ;      return new  Builder ( anim )  ;  } return null ; }
7520,"public com . anychart . charts .  Cartesian labels (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", settings )  )  ;  return this ; }"
7521,"public com . anychart . core . utils .  Series A11y a11y (  ) { return new com . anychart . core . utils .  Series A11y ( js Base + "" . a11y (  ) "" )  ; }"
7522,public boolean has Overlapping Rendering (  ) { return false ; }
7523,"public com . anychart . core .  Series Base container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
7524,public T7 get Value7 (  ) { return value7 ; }
7525,"public com . anychart . charts .  Pareto animation (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . animation ( %s )  ; "", settings )  )  ;  return this ; }"
7526,public int get Size (  ) { return size ; }
7527,protected boolean set ( @ Nullable V value ) { boolean result = sync . set ( value )  ;  if  ( result )  {     execution List . execute (  )  ;  } return result ; }
7528,"public boolean log Gauge Metadata (  String session Id,  Application Process State app State ) { if  ( gauge Metadata Manager != null )  {      Gauge Metric gauge Metric =  Gauge Metric . new Builder (  )  . set Session Id ( session Id )  . set Gauge Metadata ( get Gauge Metadata (  )  )  . build (  )  ;      transport Manager . log ( gauge Metric, app State )  ;      return true ;  } return false ; }"
7529,"public void get Y Scales (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Y Scales (  )  ; "" )  ; }"
7530,"public static void inject (  Content Provider content Provider ) { check Not Null ( content Provider, ""content Provider"" )  ;   Application application =  (  Application )  content Provider . get Context (  )  . get Application Context (  )  ;  if  ( ! ( application instanceof  Has Android Injector )  )  {     throw new  Runtime Exception (  String . format ( ""%s does not implement %s"", application . get Class (  )  . get Canonical Name (  ) ,  Has Android Injector . class . get Canonical Name (  )  )  )  ;  } inject ( content Provider,  (  Has Android Injector )  application )  ; }"
7531,"public void trigger Registered App Usage Observer ( int observer Id, long time Used In Millis ) {  App Usage Observer observer = app Usage Observers By Id . remove ( observer Id )  ;  long time Limit In Millis = observer . get Time Unit (  )  . to Millis ( observer . get Time Limit (  )  )  ;   Intent intent = new  Intent (  )  . put Extra (  Usage Stats Manager . EXTRA_OBSERVER_ID, observer Id )  . put Extra (  Usage Stats Manager . EXTRA_TIME_LIMIT, time Limit In Millis )  . put Extra (  Usage Stats Manager . EXTRA_TIME_USED, time Used In Millis )  ;  try {     observer . get Callback Intent (  )  . send (  Runtime Environment . get Application (  ) , 0, intent )  ;  } catch  (  Canceled Exception e )  {     throw new  Runtime Exception ( e )  ;  }}"
7532,public QMUIQQ Face View set Sub Title (  Char Sequence sub Title ) { QMUIQQ Face View sub Title View = ensure Sub Title View (  )  ;  sub Title View . set Text ( sub Title )  ;  if  ( QMUI Lang Helper . is Null Or Empty ( sub Title )  )  {     sub Title View . set Visibility ( GONE )  ;  } else {     sub Title View . set Visibility ( VISIBLE )  ;  } // 更新 title View 的样式（因为有没有 sub Title 会影响 title View 的样式） update Title View Style (  )  ;  return sub Title View ; }
7533,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
7534,public static P Stream Provider as Updates ( int sensor Delay ) { return new  Rotation Vector Updates Provider ( sensor Delay )  ; }
7535,public  String get Card Holder Name (  ) { return card Holder Name ; }
7536,public static  Reservoir<T> reservoir (  ) { return reservoir ( new  Array Deque<T> (  )  )  ; }
7537,"public void get (  String field Name ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get ( %s )  ; "", wrap Quotes ( field Name )  )  )  ; }"
7538,"public com . anychart . charts .  Pareto parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
7539,"private void add Dependency Edges (  Node source,  Dependency Request dependency Request ) {  Resolved Bindings dependencies = resolved Dependencies ( source, dependency Request )  ;  if  ( dependencies . is Empty (  )  )  {     add Dependency Edge ( source, dependency Request, missing Binding Node ( dependencies )  )  ;  } else {     for  (  Binding Node dependency : binding Nodes ( dependencies )  )  {         add Dependency Edge ( source, dependency Request, dependency )  ;      } }}"
7540,public  String get Description (  ) { return  (  String )  get Object Value (  Data Types . OBJ_DESCRIPTION )  ; }
7541,"public void allow Point Settings (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . allow Point Settings (  )  ; "" )  ; }"
7542,"public static void set Transparent For Drawer Layout (  Activity activity,  Drawer Layout drawer Layout ) { if  (  Build . VERSION . SDK_INT <  Build . VERSION_CODES . KITKAT )  {     return ;  } if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . LOLLIPOP )  {     activity . get Window (  )  . add Flags (  Window Manager .  Layout Params . FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS )  ;      activity . get Window (  )  . clear Flags (  Window Manager .  Layout Params . FLAG_TRANSLUCENT_STATUS )  ;      activity . get Window (  )  . set Status Bar Color (  Color . TRANSPARENT )  ;  } else {     activity . get Window (  )  . add Flags (  Window Manager .  Layout Params . FLAG_TRANSLUCENT_STATUS )  ;  }  View Group content Layout =  (  View Group )  drawer Layout . get Child At ( 0 )  ;  // 内容布局不是  Linear Layout 时,设置padding top if  ( ! ( content Layout instanceof  Linear Layout )  && content Layout . get Child At ( 1 )  != null )  {     content Layout . get Child At ( 1 )  . set Padding ( 0, get Status Bar Height ( activity ) , 0, 0 )  ;  } // 设置属性 set Drawer Layout Property ( drawer Layout, content Layout )  ; }"
7543,protected  Observable< Event< Sendable>> messages On (  ) { return messages On ( null )  ; }
7544,"public void on Channel Read Event (  Abstract Nio Channel channel,  Object read Object,  Selection Key key ) { executor Service . execute (  (  )  -> channel . get Handler (  )  . handle Channel Read ( channel, read Object, key )  )  ; }"
7545,"public com . anychart . standalones .  Title padding (  Number value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
7546,"public com . anychart . charts .  Heat Map select Marquee Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7547,public void set Hide Action Bar ( boolean hide Action Bar ) { this . hide Action Bar = hide Action Bar ; }
7548,"public void test Standard Sample3 (  )  throws  Format Exception{ PDF417 Result Metadata result Metadata = new PDF417 Result Metadata (  )  ;  int [  ]  sample Codes = { 7, 928, 111, 100, 100, 200, 300, //  Final dummy ECC codeword required to avoid  Array Index Out Of Bounds 0 } ;   Decoded Bit Stream Parser . decode Macro Block ( sample Codes, 2, result Metadata )  ;  assert Equals ( 0, result Metadata . get Segment Index (  )  )  ;  assert Equals ( ""100200300"", result Metadata . get File Id (  )  )  ;  assert False ( result Metadata . is Last Segment (  )  )  ;  assert Equals ( -1, result Metadata . get Segment Count (  )  )  ;  assert Null ( result Metadata . get Addressee (  )  )  ;  assert Null ( result Metadata . get Sender (  )  )  ;  assert Null ( result Metadata . get Optional Data (  )  )  ;  //  Check that symbol containing no data except  Macro is accepted  ( see note in  Annex H . 2 )   Decoder Result decoder Result =  Decoded Bit Stream Parser . decode ( sample Codes, ""0"" )  ;  assert Equals ( """", decoder Result . get Text (  )  )  ;  assert Not Null ( decoder Result . get Other (  )  )  ; }"
7549,"public void reset (  ) { F Log . v ( TAG, ""reset"" )  ;  m Gesture Detector . reset (  )  ;  m Previous Transform . reset (  )  ;  m Active Transform . reset (  )  ;  on Transform Changed (  )  ; }"
7550,void eval (  ) { push Double (  Math . ceil ( pop Double (  )  )  )  ; }
7551,"private void safe Move Camera ( final  Google Map map, final  Camera Update camera Update ) { try {     map . move Camera ( camera Update )  ;  } catch  (  Illegal State Exception e )  {     map . set On Map Loaded Callback ( new  Google Map .  On Map Loaded Callback (  )  {         @ Override         public void on Map Loaded (  )  {             map . move Camera ( camera Update )  ;          }     } )  ;  }}"
7552,"public boolean is Set Last Store Epoch Seconds (  ) { return org . apache . thrift .  Encoding Utils . test Bit ( __isset_bitfield, __LASTSTOREEPOCHSECONDS_ISSET_ID )  ; }"
7553,"public void local To Global (  Number x Coord,  Number y Coord ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . local To Global ( %s, %s )  ; "", x Coord, y Coord )  )  ; }"
7554,"public int expand ( T item ) { return expand ( get Global Position Of ( item ) , false, false, true )  ; }"
7555,public  Integer get Queue Count (  ) { if  ( queue Count != null )  {     return queue Count ;  } else {     return queue Map . size (  )  ;  }}
7556,"public com . anychart . core . stock . series .  Base max Labels (  Boolean settings ) { return new com . anychart . core . stock . series .  Base (  String . format (  Locale . US, js Base + "" . max Labels ( %s ) "", settings )  )  ; }"
7557,"protected  String elements Into Set Raw Set Message (  ) { return binding Elements ( ""annotated with @ Elements Into Set cannot %s a raw  Set"", binding Element Type Verb (  )  )  ; }"
7558,"public void sweep Angle (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . sweep Angle (  )  ; "" )  ; }"
7559,"public com . anychart . core . utils .  Quarter stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7560,public void record Empty Change (  )  throws  Max Differences Exception{ differ State . increment Difference Count (  )  ;  print Header (  )  ; }
7561,"public com . anychart . core . ui .  Labels Factory labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . labels (  ) "" )  ; }"
7562,public void on Restore Instance State ( @ Nullable final  Parcelable parcelable ) { if  ( parcelable instanceof  Bundle )  {      Bundle bundle =  (  Bundle )  parcelable ;      m First Animated Position = bundle . get Int ( SAVEDINSTANCESTATE_FIRSTANIMATEDPOSITION )  ;      m Last Animated Position = bundle . get Int ( SAVEDINSTANCESTATE_LASTANIMATEDPOSITION )  ;      m Should Animate = bundle . get Boolean ( SAVEDINSTANCESTATE_SHOULDANIMATE )  ;  }}
7563,public static void set Is Debug Enabled ( boolean enabled ) { is Debug Enabled = enabled ; }
7564,"public static void set Data (  Map< String,  String> data ) { if  ( data . contains Key ( NAME_KEY )  )  {     name = data . get ( NAME_KEY )  ;  } if  ( data . contains Key ( USERNAME_KEY )  )  {     username = data . get ( USERNAME_KEY )  ;  } if  ( data . contains Key ( EMAIL_KEY )  )  {     email = data . get ( EMAIL_KEY )  ;  } if  ( data . contains Key ( ORG_KEY )  )  {     org = data . get ( ORG_KEY )  ;  } if  ( data . contains Key ( PHONE_KEY )  )  {     phone = data . get ( PHONE_KEY )  ;  } if  ( data . contains Key ( PICTURE_PATH_KEY )  )  {     picture Path = data . get ( PICTURE_PATH_KEY )  ;  } if  ( picture Path != null )  {      File source File = new  File ( picture Path )  ;      if  ( !source File . is File (  )  )  {          Countly . shared Instance (  )  . L . w ( "" [  User Data ]   Provided  Picture path file  [ "" + picture Path + "" ]  can not be opened"" )  ;          picture Path = null ;      } } if  ( data . contains Key ( PICTURE_KEY )  )  {     picture = data . get ( PICTURE_KEY )  ;  } if  ( data . contains Key ( GENDER_KEY )  )  {     gender = data . get ( GENDER_KEY )  ;  } if  ( data . contains Key ( BYEAR_KEY )  )  {     try {         byear =  Integer . parse Int ( data . get ( BYEAR_KEY )  )  ;      } catch  (  Number Format Exception e )  {          Countly . shared Instance (  )  . L . w ( "" [  User Data ]   Incorrect byear number format"" )  ;          byear = 0 ;      } } is Synced = false ; }"
7565,"public void import From (  Reader reader ) {  Json Parser parser ;  try {     parser = json Factory . create Parser ( reader )  ;  } catch  ( IO Exception ioe )  {     throw new  Nitrite IO Exception ( IMPORT_READER_ERROR, ioe )  ;  } if  ( parser != null )  {      Nitrite Json Importer json Importer = new  Nitrite Json Importer ( db )  ;      json Importer . set Parser ( parser )  ;      try {         json Importer . import Data (  )  ;      } catch  ( IO Exception |  Class Not Found Exception e )  {         throw new  Nitrite IO Exception ( IMPORT_READ_ERROR, e )  ;      } }}"
7566,Bitmap .  Config get Config (  ) { return config ; }
7567,protected void clear (  ) { group List . clear (  )  ;  group Pool . free All ( used Groups )  ;  used Groups . clear (  )  ; }
7568,public boolean is Actually Merged (  ) { return get Soname (  )  . is Present (  )  ; }
7569,public void set Value ( float value ) { m Interpolating Value = value ; }
7570,public int get Num Components (  ) { return 4 ; }
7571,"public com . anychart . charts .  Mekko bottom (  Number bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", bottom )  )  ;  return this ; }"
7572,"public int drain To (  Collection<? super E> c, int max Elements ) { if  ( c == null )      throw new  Null Pointer Exception (  )  ;  if  ( c == this )      throw new  Illegal Argument Exception (  )  ;  if  ( max Elements <= 0 )      return 0 ;  final E [  ]  items = this . items ;  final  Monitor monitor = this . monitor ;  monitor . enter (  )  ;  try {     int i = take Index ;      int n = 0 ;      int max =  ( max Elements < count )  ? max Elements : count ;      while  ( n < max )  {         c . add ( items [ i ]  )  ;          items [ i ]  = null ;          i = inc ( i )  ;          ++n ;      }     if  ( n > 0 )  {         count -= n ;          take Index = i ;      }     return n ;  } finally {     monitor . leave (  )  ;  }}"
7573,private boolean is Any Parent Fragment Removing (  ) {  Fragment fragment = get Parent Fragment (  )  ;  while  ( fragment != null )  {     if  ( fragment . is Removing (  )  )          return true ;      fragment = fragment . get Parent Fragment (  )  ;  } return false ; }
7574,"private  Http URL Connection make Connection ( URL url, @ Http Method int http Method, @ Nullable byte [  ]  http Body, long position, long length, boolean allow Gzip, boolean follow Redirects,  Map< String,  String> request Parameters )  throws IO Exception{  Http URL Connection connection ;  if  ( url . get Protocol (  )  . ends With ( ""https"" )  )  {     /**去除证书限制**/     connection =  (  Https URL Connection )  url . open Connection (  )  ;       (  (  Https URL Connection )  connection )  . set Hostname Verifier ( new  Hostname Verifier (  )  {         @ Override         public boolean verify (  String hostname, SSL Session session )  {             return true ;          }     } )  ;      //  Create a trust manager that does not validate certificate chains     final  Trust Manager [  ]  trust All Certs = new  Trust Manager [  ]  { new X509 Trust Manager (  )  {         @ Override         public void check Client Trusted ( java . security . cert . X509 Certificate [  ]  chain,  String auth Type )  throws  Certificate Exception {         }         @ Override         public void check Server Trusted ( java . security . cert . X509 Certificate [  ]  chain,  String auth Type )  throws  Certificate Exception {         }         @ Override         public java . security . cert . X509 Certificate [  ]  get Accepted Issuers (  )  {             return null ;          }     } } ;      //  Install the all-trusting trust manager     final SSL Context ssl Context ;      try {         ssl Context = SSL Context . get Instance ( ""SSL"" )  ;          ssl Context . init ( null, trust All Certs, new java . security .  Secure Random (  )  )  ;          //  Create an ssl socket factory with our all-trusting manager         final SSL Socket Factory ssl Socket Factory = ssl Context . get Socket Factory (  )  ;           (  (  Https URL Connection )  connection )  . set SSL Socket Factory ( ssl Socket Factory )  ;           (  (  Https URL Connection )  connection )  . set Hostname Verifier ( new  Hostname Verifier (  )  {             @ Override             public boolean verify (  String hostname, SSL Session session )  {                 return true ;              }         } )  ;      } catch  (  No Such Algorithm Exception e )  {         e . print Stack Trace (  )  ;      } catch  (  Key Management Exception e )  {         e . print Stack Trace (  )  ;      } /**去除证书限制**/ } else {     connection =  (  Http URL Connection )  url . open Connection (  )  ;  } connection . set Connect Timeout ( connect Timeout Millis )  ;  connection . set Read Timeout ( read Timeout Millis )  ;   Map< String,  String> request Headers = new  Hash Map<> (  )  ;  if  ( default Request Properties != null )  {     request Headers . put All ( default Request Properties . get Snapshot (  )  )  ;  } request Headers . put All ( request Properties . get Snapshot (  )  )  ;  request Headers . put All ( request Parameters )  ;  for  (  Map .  Entry< String,  String> property : request Headers . entry Set (  )  )  {     connection . set Request Property ( property . get Key (  ) , property . get Value (  )  )  ;  } if  ( ! ( position == 0 && length == C . LENGTH_UNSET )  )  {      String range Request = ""bytes="" + position + ""-"" ;      if  ( length != C . LENGTH_UNSET )  {         range Request +=  ( position + length - 1 )  ;      }     connection . set Request Property ( "" Range"", range Request )  ;  } connection . set Request Property ( "" User- Agent"", user Agent )  ;  connection . set Request Property ( "" Accept- Encoding"", allow Gzip ? ""gzip"" : ""identity"" )  ;  connection . set Instance Follow Redirects ( follow Redirects )  ;  connection . set Do Output ( http Body != null )  ;  connection . set Request Method (  Data Spec . get String For Http Method ( http Method )  )  ;  if  ( http Body != null )  {     connection . set Fixed Length Streaming Mode ( http Body . length )  ;      connection . connect (  )  ;       Output Stream os = connection . get Output Stream (  )  ;      os . write ( http Body )  ;      os . close (  )  ;  } else {     connection . connect (  )  ;  } return connection ; }"
7575,"public  Realm Query<E> sort (  String field Name ) { realm . check If Valid (  )  ;  return sort ( field Name,  Sort . ASCENDING )  ; }"
7576,"public com . anychart . core . cartesian . series .  Column3d min Labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7577,"public static byte [  ]  get Comment Header Data UTF8 (  ) { byte [  ]  comment Header Data = new byte [ COMMENT_HEADER_WITH_UTF8 . length ]  ;   System . arraycopy ( COMMENT_HEADER_WITH_UTF8, 0, comment Header Data, 0, COMMENT_HEADER_WITH_UTF8 . length )  ;  return comment Header Data ; }"
7578,public void set Telephony Display Info (  Object telephony Display Info ) {  Preconditions . check Not Null ( telephony Display Info )  ;  this . telephony Display Info = telephony Display Info ;  for  (  Phone State Listener listener : get Listeners For Flags (  Phone State Listener . LISTEN_DISPLAY_INFO_CHANGED )  )  {     listener . on Display Info Changed (  (  Telephony Display Info )  telephony Display Info )  ;  }}
7579,public void set Enabled ( boolean enabled ) { this . enabled = enabled ; }
7580,"public static double mean Of ( int .  .  .  values ) { check Argument ( values . length > 0 )  ;  double mean = values [ 0 ]  ;  for  ( int index = 1 ;  index < values . length ;  index++ )  {     double value = values [ index ]  ;      if  ( is Finite ( value )  && is Finite ( mean )  )  {         //  Art of  Computer  Programming vol .  2,  Knuth, 4 . 2 . 2,  ( 15 )          mean +=  ( value - mean )  /  ( index + 1 )  ;      } else {         mean = calculate New Mean Non Finite ( mean, value )  ;      } } return mean ; }"
7581,"public  Map< String,  String> get Attributes (  ) { return new  Hash Map<> ( m Custom Attributes )  ; }"
7582,"public static  String get Package X Path (  ) { return ""/"" + NODE_MANIFEST + ""/@"" + ATTRIBUTE_PACKAGE ; }"
7583,public  Color get Color (  ) { return color ; }
7584,void add Caller Block ( int label ) { caller Blocks . set ( label )  ; }
7585,"void with Recycled Cache (  Buck Event Bus buck Event Bus,  Settings Affecting Cache current Settings,  Consumer< Tracked Rule Key Cache<V>> func ) { try  (  Rule Key Cache Scope<V> scope = with Recycled Cache ( buck Event Bus, current Settings )  )  {     func . accept ( scope . get Cache (  )  )  ;  }}"
7586,"private  Rect get Clip Rect For Header (  Recycler View recycler View,  View header ) {  Rect header Margins = m Dimension Calculator . get Margins ( header )  ;  if  ( m Orientation Provider . get Orientation ( recycler View )  ==  Linear Layout . VERTICAL )  {     return new  Rect ( recycler View . get Padding Left (  ) , recycler View . get Padding Top (  ) , recycler View . get Width (  )  - recycler View . get Padding Right (  )  - header Margins . right, recycler View . get Height (  )  - recycler View . get Padding Bottom (  )  )  ;  } else {     return new  Rect ( recycler View . get Padding Left (  ) , recycler View . get Padding Top (  ) , recycler View . get Width (  )  - recycler View . get Padding Right (  ) , recycler View . get Height (  )  - recycler View . get Padding Bottom (  )  - header Margins . bottom )  ;  }}"
7587,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
7588,"public static  Cache Disk Utils get Instance (  String cache Name, final long max Size, final int max Count ) { if  (  Utils Bridge . is Space ( cache Name )  )      cache Name = ""cache Utils"" ;   File file = new  File (  Utils . get App (  )  . get Cache Dir (  ) , cache Name )  ;  return get Instance ( file, max Size, max Count )  ; }"
7589,"public void set On Bottom Listener (  On Click Listener on Bottom Listener ) { if  ( !is Drop Down Style )  {     throw new  Runtime Exception ( ""is Drop Down Style is false, cannot call set On Bottom Listener, you can call set Drop Down Style ( true )  at fitst . "" )  ;  } footer Button . set On Click Listener ( on Bottom Listener )  ; }"
7590,"private byte [  ]  calculate U Value ( byte [  ]  general Key, byte [  ]  first Doc Id Value, int revision )  throws  General Security Exception,  Encryption Unsupported By Product Exception{ if  ( revision == 2 )  {     //  Algorithm 3 . 4:  Computing the encryption dictionaryâs U  ( user     // password )  value  (  Revision 2 )      //  Step 1 is provided to us as the parameter general Key:     //   Create an encryption key based on the user password string, as     //  described in  Algorithm 3 . 2     //  Step 2:  Encrypt the 32-byte padding string shown in step 1 of     //  Algorithm 3 . 2, using an RC4 encryption function with the     // encryption key from the preceding step .       Cipher rc4 = create RC4 Cipher (  )  ;       Secret Key key = create RC4 Key ( general Key )  ;      init Encryption ( rc4, key )  ;      return crypt ( rc4, PW_PADDING )  ;  } else if  ( revision >= 3 )  {     //  Algorithm 3 . 5:  Computing the encryption dictionaryâs U  ( user     // password )  value  (  Revision 3 or greater )      //  Step 1 is provided to us as the parameter general Key:     //   Create an encryption key based on the user password string, as     //  described in  Algorithm 3 . 2     //  Step 2:  Initialize the MD5 hash function and pass the 32-byte     // padding string shown in step 1 of  Algorithm 3 . 2 as input to this     // function      Message Digest md5 = create MD5 Digest (  )  ;      md5 . update ( PW_PADDING )  ;      // finish the hash .   (  See implementation note 26 in  Appendix H .  )      if  ( first Doc Id Value != null )  {         md5 . update ( first Doc Id Value )  ;      }     final byte [  ]  hash = md5 . digest (  )  ;      //  Step 4:  Encrypt the 16-byte result of the hash, using an RC4     // encryption function with the encryption key from step 1 .       Cipher rc4 = create RC4 Cipher (  )  ;       Secret Key key = create RC4 Key ( general Key )  ;      init Encryption ( rc4, key )  ;      final byte [  ]  v = crypt ( rc4, hash )  ;      //  Step 5:  Do the following 19 times:  Take the output from the     // previous invocation of the RC4 function and pass it as input to     // a new invocation of the function ;  use an encryption key generated     // by taking each byte of the original encryption key  ( obtained in     // step 1 )  and performing an XOR  ( exclusive or )  operation between     // that byte and the single-byte value of the iteration counter     //  ( from 1 to 19 )  .      rc4shuffle ( v, general Key, rc4 )  ;      // result as the value of the U entry in the encryption dictionary .      assert v . length == 16 ;      final byte [  ]  entry Value = new byte [ 32 ]  ;       System . arraycopy ( v, 0, entry Value, 0, v . length )  ;       System . arraycopy ( v, 0, entry Value, 16, v . length )  ;      return entry Value ;  } else {     throw new  Encryption Unsupported By Product Exception ( "" Unsupported standard security handler revision "" + revision )  ;  }}"
7591,"public com . anychart . core . grids .  Map Settings minor Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . minor Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7592,public static  String get Uri Prefix (  String authority ) {  Soft Reference< Stream Provider> ref = INSTANCES . get ( authority )  ;   String result = null ;  if  ( ref != null )  {     result = ref . get (  )  . get Uri Prefix (  )  ;  } return  ( result )  ; }
7593,"public synchronized void on Load Failed ( @ Nullable  Drawable error Drawable ) {//  Ignored, synchronized for backwards compatibility . }"
7594,"public com . anychart . charts .  Tag Cloud id (  String id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . id ( %s )  ; "", wrap Quotes ( id )  )  )  ;  return this ; }"
7595,"public com . anychart . core . stock . scrollerseries .  Range Spline Area allow Point Settings (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . allow Point Settings ( %s )  ; "", enabled )  )  ;  return this ; }"
7596,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
7597,"public com . anychart . charts .  Sunburst margin (  String value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
7598,"public void add To ( QMUI Group List View group List View ) { if  ( m Title View == null )  {     if  ( m Use Default Title If None )  {         set Title ( "" Section "" + group List View . get Section Count (  )  )  ;      } else if  ( m Use Title View For Section Space )  {         set Title ( """" )  ;      } } if  ( m Title View != null )  {     group List View . add View ( m Title View )  ;  } final int item View Count = m Item Views . size (  )  ;  QMUI Common List Item View .  Layout Param Config left Icon Lp Config = new QMUI Common List Item View .  Layout Param Config (  )  {     @ Override     public  Constraint Layout .  Layout Params on Config (  Constraint Layout .  Layout Params lp )  {         lp . width = m Left Icon Width ;          lp . height = m Left Icon Height ;          return lp ;      } } ;  QMUI Skin Value Builder builder = QMUI Skin Value Builder . acquire (  )  ;   String skin = builder . background ( m Bg Attr )  . top Separator ( m Separator Color Attr )  . bottom Separator ( m Separator Color Attr )  . build (  )  ;  QMUI Skin Value Builder . release ( builder )  ;  int separator Color = QMUI Res Helper . get Attr Color ( group List View . get Context (  ) , m Separator Color Attr )  ;  for  ( int i = 0 ;  i < item View Count ;  i++ )  {     QMUI Common List Item View item View = m Item Views . get ( i )  ;       Drawable bg = QMUI Skin Helper . get Skin Drawable ( group List View, m Bg Attr )  ;      QMUI View Helper . set Background Keeping Padding ( item View, bg == null ? null : bg . mutate (  )  )  ;      QMUI Skin Helper . set Skin Value ( item View, skin )  ;      if  ( !m Handle Separator Custom && m Show Separator )  {         if  ( item View Count == 1 )  {             item View . update Top Divider ( 0, 0, 1, separator Color )  ;              item View . update Bottom Divider ( 0, 0, 1, separator Color )  ;          } else if  ( i == 0 )  {             if  ( !m Only Show Middle Separator )  {                 item View . update Top Divider ( 0, 0, 1, separator Color )  ;              }             if  ( !m Only Show Start End Separator )  {                 item View . update Bottom Divider ( m Middle Separator Inset Left, m Middle Separator Inset Right, 1, separator Color )  ;              }         } else if  ( i == item View Count - 1 )  {             if  ( !m Only Show Middle Separator )  {                 item View . update Bottom Divider ( 0, 0, 1, separator Color )  ;              }         } else if  ( !m Only Show Start End Separator )  {             item View . update Bottom Divider ( m Middle Separator Inset Left, m Middle Separator Inset Right, 1, separator Color )  ;          }     }     item View . update Image View Lp ( left Icon Lp Config )  ;      group List View . add View ( item View )  ;  } if  ( m Description View != null )  {     group List View . add View ( m Description View )  ;  } group List View . add Section ( this )  ; }"
7599,"public  To String Helper add (  String name, int value ) { return add Unconditional Holder ( name,  String . value Of ( value )  )  ; }"
7600,"public void set (  Any Object Id note On,  String note Data,  Object Inserter ins )  throws IO Exception{  Object Id data Id ;  if  ( note Data != null )  {     byte [  ]  data UTF8 =  Constants . encode ( note Data )  ;      data Id = ins . insert (  Constants . OBJ_BLOB, data UTF8 )  ;  } else {     data Id = null ;  } set ( note On, data Id )  ; }"
7601,"private boolean handle Touch Event (  Motion Event ev ) { int action = ev . get Action (  )  ;  int x =  ( int )  ev . get X (  )  ;  int y =  ( int )  ev . get Y (  )  ;  switch ( action )  {     case  Motion Event . ACTION_DOWN:         //  Keep track of the down positions         m Down X = x ;          m Down Y = m Last Y = y ;          m Scrollbar . handle Touch Event ( ev, m Down X, m Down Y, m Last Y, m State Change Listener )  ;          break ;      case  Motion Event . ACTION_MOVE:         m Last Y = y ;          m Scrollbar . handle Touch Event ( ev, m Down X, m Down Y, m Last Y, m State Change Listener )  ;          break ;      case  Motion Event . ACTION_UP:     case  Motion Event . ACTION_CANCEL:         m Scrollbar . handle Touch Event ( ev, m Down X, m Down Y, m Last Y, m State Change Listener )  ;          break ;  } return m Scrollbar . is Dragging (  )  ; }"
7602,public void is Equivalent According To Compare To (  Big Decimal expected ) { compare Values ( expected )  ; }
7603,public  Interpreter get Interpreter For Script (  String script Name ) { int dot Index = script Name . last Index Of ( ' . ' )  ;  if  ( dot Index == -1 )  {     return null ;  }  String ext = script Name . substring ( dot Index )  ;  for  (  Interpreter i : m Interpreter Set )  {     if  ( i . get Extension (  )  . equals ( ext )  )  {         return i ;      } } return null ; }
7604,public int get Membercnttd (  ) { return membercnttd ; }
7605,"public static  Method get Declared Method (  Class c,  String name,  Class .  .  .  parameter Types )  throws  Reflection Exception{ try {     return new  Method ( c . get Declared Method ( name, parameter Types )  )  ;  } catch  (  Security Exception e )  {     throw new  Reflection Exception ( "" Security violation while getting method: "" + name + "", for class: "" + c . get Name (  ) , e )  ;  } catch  (  No Such Method Exception e )  {     throw new  Reflection Exception ( "" Method not found: "" + name + "", for class: "" + c . get Name (  ) , e )  ;  }}"
7606,public void set Id3v1 Save Artist ( boolean id3v1 Save Artist ) { this . id3v1 Save Artist = id3v1 Save Artist ; }
7607,"public static  Immutable Set< Element> get Elements Annotated With (  Round Environment round Env,  Class<? extends  Annotation> .  .  .  annotations ) {  Immutable Set .  Builder< Element> builder =  Immutable Set . builder (  )  ;  for  (  Class<? extends  Annotation> annotation : annotations )  {     builder . add All ( round Env . get Elements Annotated With ( annotation )  )  ;  } return builder . build (  )  ; }"
7608,"private void merge (  Field Number Tree other ) { for  (  Sub Scope Id sub Scope Id : other . children . key Set (  )  )  {      Field Number Tree value = other . children . get ( sub Scope Id )  ;      if  ( !this . children . contains Key ( sub Scope Id )  )  {         this . children . put ( sub Scope Id, value )  ;      } else {         this . children . get ( sub Scope Id )  . merge ( value )  ;      } }}"
7609,public void set Bind Device Admin Target Users (  List< User Handle> bind Device Admin Target Users ) { this . bind Device Admin Target Users = bind Device Admin Target Users ; }
7610,"public com . anychart . charts .  Heat Map width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", width )  )  ;  return this ; }"
7611,"public  String get Type (  ) { if  ( !this . task Type . equals (  Task Type . MESSAGING )  )  {     return this . task Type . to String (  )  ;  } else {     if  ( this . message Type == 0 )  {         return "" Payment  Failure  Message"" ;      } else if  ( this . message Type == 1 )  {         return "" Payment  Error  Message"" ;      } else {         return "" Payment  Success  Message"" ;      } }}"
7612,"protected void pull Header To Zoom ( int new Scroll Value ) {  Log . d ( TAG, ""pull Header To Zoom --> new Scroll Value = "" + new Scroll Value )  ;   Log . d ( TAG, ""pull Header To Zoom --> m Header Height = "" + m Header Height )  ;  if  ( m Scaling Runnable != null && !m Scaling Runnable . is Finished (  )  )  {     m Scaling Runnable . abort Animation (  )  ;  }  View Group .  Layout Params local Layout Params = m Header Container . get Layout Params (  )  ;  local Layout Params . height =  Math . abs ( new Scroll Value )  + m Header Height ;  m Header Container . set Layout Params ( local Layout Params )  ; }"
7613,public  Container Atom get Container Atom Of Type ( int type ) { int children Size = container Children . size (  )  ;  for  ( int i = 0 ;  i < children Size ;  i++ )  {      Container Atom atom = container Children . get ( i )  ;      if  ( atom . type == type )  {         return atom ;      } } return null ; }
7614,"public static QMUI Popup list Popup (  Context context, int width, int max Height,  Base Adapter adapter,  Adapter View .  On Item Click Listener on Item Click Listener ) {  List View list View = new QMUI Wrap Content List View ( context, max Height )  ;  list View . set Adapter ( adapter )  ;  list View . set Vertical Scroll Bar Enabled ( false )  ;  list View . set On Item Click Listener ( on Item Click Listener )  ;  list View . set Divider ( null )  ;  return popup ( context, width )  . view ( list View )  ; }"
7615,"public com . anychart . charts .  Polar select Marquee Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
7616,"public void transform Y (  String value,  Number sub Range Ratio ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . transform Y ( %s, %s )  ; "", wrap Quotes ( value ) , sub Range Ratio )  )  ; }"
7617,"public static void load Arm Library Without Tinker Installed (  Application Like app Like,  String lib Name ) { if  ( lib Name == null || lib Name . is Empty (  )  || app Like == null )  {     throw new  Tinker Runtime Exception ( ""lib Name or app Like is null!"" )  ;  } if  (  Tinker Application Helper . is Tinker Enable For Native Lib ( app Like )  )  {     if  (  Tinker Application Helper . load Library From Tinker ( app Like, ""lib/armeabi"", lib Name )  )  {         return ;      } }  System . load Library ( lib Name )  ; }"
7618,"public synchronized void put (  String key,  Entry entry ) { // so putting entries which are just below the threshold may still cause this churn .  if  ( m Total Size + entry . data . length > m Max Cache Size In Bytes && entry . data . length > m Max Cache Size In Bytes * HYSTERESIS_FACTOR )  {     return ;  }  File file = get File For Key ( key )  ;  try {      Buffered Output Stream fos = new  Buffered Output Stream ( create Output Stream ( file )  )  ;       Cache Header e = new  Cache Header ( key, entry )  ;      boolean success = e . write Header ( fos )  ;      if  ( !success )  {         fos . close (  )  ;           Volley Log . d ( "" Failed to write header for %s"", file . get Absolute Path (  )  )  ;          throw new IO Exception (  )  ;      }     fos . write ( entry . data )  ;      fos . close (  )  ;      e . size = file . length (  )  ;      put Entry ( key, e )  ;      prune If Needed (  )  ;  } catch  ( IO Exception e )  {     boolean deleted = file . delete (  )  ;      if  ( !deleted )  {          Volley Log . d ( "" Could not clean up file %s"", file . get Absolute Path (  )  )  ;      }     initialize If Root Directory Deleted (  )  ;  }}"
7619,"public void opt In Tracking (  String distinct Id, JSON Object properties ) { m Persistent Identity . set Opt Out Tracking ( false, m Token )  ;  if  ( distinct Id != null )  {     identify ( distinct Id )  ;  } track ( ""$opt_in"", properties )  ; }"
7620,"void register Touch Expansion ( int index,  View view,  Mount Item item ) { m Delegates . put ( index, new  Inner Touch Delegate ( view, item )  )  ; }"
7621,public  Person Ident get Tagger (  ) { return get Author (  )  ; }
7622,"public com . anychart . standalones .  Resource List even Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . even Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
7623,"public  Node calc Complete Event Cache (  Path tree Path,  Node complete Server Cache ) { return this . calc Complete Event Cache ( tree Path, complete Server Cache, new  Array List< Long> (  )  )  ; }"
7624,"public synchronized void add (  Class<T> t, T l ) { if  ( l == null )  {     // something wrong     return ;  } if  ( !t . is Instance ( l )  )  {     throw new  Illegal Argument Exception ( "" Listener "" + l + "" is not of type "" + t )  ;  } if  ( listener List == NULL_ARRAY )  {     // if this is the first listener added,      // initialize the lists     listener List = new  Object [  ]  { t, l } ;  } else {     //  Otherwise copy the array and add the new listener     int i = listener List . length ;       Object [  ]  tmp = new  Object [ i + 2 ]  ;       System . arraycopy ( listener List, 0, tmp, 0, i )  ;      tmp [ i ]  = t ;      tmp [ i + 1 ]  = l ;      listener List = tmp ;  }}"
7625,public boolean is Check Eof After Pack Footer (  ) { return check Eof After Pack Footer ; }
7626,private boolean is Below Threshold Register ( int ssa Reg ) { return ssa Reg < threshold ; }
7627,"public com . anychart . core .  Separate Chart padding (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
7628,"public com . anychart . core . stock . scrollerseries .  Hilo container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
7629,"public void on Debugger Statement (  Context cx ) { dim . handle Breakpoint Hit ( this, cx )  ; }"
7630,"public com . anychart . core . lineargauge . pointers .  Tank fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
7631,"public  Custom Tabs Session create Session ( @ Nullable  Custom Tabs Callback callbacks, @ Nullable  Uri .  .  .  possible Uris ) {  Custom Tabs Client client = get Client (  )  ;  if  ( client == null )  {     return null ;  }  Custom Tabs Session session = client . new Session ( callbacks )  ;  if  ( session == null )  {      Logger . warn ( "" Failed to create custom tabs session through custom tabs client"" )  ;      return null ;  } if  ( possible Uris != null && possible Uris . length > 0 )  {      List< Bundle> additional Uris =  Uri Util . to Custom Tab Uri Bundle ( possible Uris, 1 )  ;      session . may Launch Url ( possible Uris [ 0 ] , null, additional Uris )  ;  } return session ; }"
7632,static boolean is XML Extender ( char c ) { // quick short circuit if  ( c < 0x00 B6 )      return false ;  //  Extenders                                if  ( c == 0x00 B7 )      return true ;  if  ( c == 0x02 D0 )      return true ;  if  ( c == 0x02 D1 )      return true ;  if  ( c == 0x0387 )      return true ;  if  ( c == 0x0640 )      return true ;  if  ( c == 0x0 E46 )      return true ;  if  ( c == 0x0 EC6 )      return true ;  if  ( c == 0x3005 )      return true ;  if  ( c < 0x3031 )      return false ;  if  ( c <= 0x3035 )      return true ;  if  ( c < 0x309 D )      return false ;  if  ( c <= 0x309 E )      return true ;  if  ( c < 0x30 FC )      return false ;  if  ( c <= 0x30 FE )      return true ;  return false ; }
7633,"private static int [  ]  get Format Support (  Renderer Capabilities renderer Capabilities,  Track Group group )  throws  Exo Playback Exception{ int [  ]  format Support = new int [ group . length ]  ;  for  ( int i = 0 ;  i < group . length ;  i++ )  {     format Support [ i ]  = renderer Capabilities . supports Format ( group . get Format ( i )  )  ;  } return format Support ; }"
7634,public  Time Zone get Time Zone (  ) { return  Time Zone . get Default (  )  ; }
7635,"public void to A11y Table (  String title,  Boolean as String ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to A11y Table ( %s, %s )  ; "", wrap Quotes ( title ) , as String )  )  ; }"
7636,"public static  File get Patch Directory (  Context context ) {  Application Info application Info = context . get Application Info (  )  ;  if  ( application Info == null )  {     //  Looks like running on a test  Context, so just return without patching .      return null ;  } final  String dir Name =  ( ""oppo"" . equals Ignore Case (  Build . MANUFACTURER )  &&  Build . VERSION . SDK_INT == 22 )  ?  Share Constants . PATCH_DIRECTORY_NAME_SPEC :  Share Constants . PATCH_DIRECTORY_NAME ;  return new  File ( application Info . data Dir, dir Name )  ; }"
7637,public void set Met Hint Text Color (  Color State List colors ) { text Color Hint State List = colors ;  reset Hint Text Color (  )  ; }
7638,"public  Map< String,  Object> get Data (  ) { return get Data (  Server Timestamp Behavior . DEFAULT )  ; }"
7639,public int get Setup Header Size (  ) { return setup Header Size ; }
7640,"public com . anychart . graphics . vector .  Hatch Fill add Child ( com . anychart . graphics . vector .  Element element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . add Child ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
7641,"public  Bounding Box calculate Bounding Box ( final  Bounding Box out, int offset, int count, final  Matrix4 transform ) { return extend Bounding Box ( out . inf (  ) , offset, count, transform )  ; }"
7642,"public com . anychart . core .  Separate Chart z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
7643,"public void on Save Instance State (  Bundle out State ) { out State . put Boolean ( "" Sliding Activity Helper . open"", m Sliding Menu . is Menu Showing (  )  )  ;  out State . put Boolean ( "" Sliding Activity Helper . secondary"", m Sliding Menu . is Secondary Menu Showing (  )  )  ; }"
7644,"public  String get Message (  ) { return  Nested Exception Utils . build Message ( super . get Message (  ) , get Cause (  )  )  ; }"
7645,"public com . anychart . core . lineargauge .  Scale Bar fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
7646,"public com . anychart . standalones .  Markers Factory fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
7647,"public com . anychart . core . lineargauge . pointers .  Led color Scale ( com . anychart . scales .  Linear Color color Scale ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( color Scale != null )  ? color Scale . get Js Base (  )  : null )  )  ;  return this ; }"
7648,private void setup Rounded Search Bar Enabled (  ) { if  ( rounded Search Bar Enabled &&  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . LOLLIPOP )  {     search Bar Card View . set Radius ( get Resources (  )  . get Dimension ( R . dimen . corner_radius_rounded )  )  ;  } else {     search Bar Card View . set Radius ( get Resources (  )  . get Dimension ( R . dimen . corner_radius_default )  )  ;  }}
7649,public  Object [  ]  parameters (  ) { return parameters ; }
7650,public void set Decoder Factory (  Decoder Factory decoder Factory ) {  Util . validate Main Thread (  )  ;  this . decoder Factory = decoder Factory ;  if  ( this . decoder Thread != null )  {     this . decoder Thread . set Decoder ( create Decoder (  )  )  ;  }}
7651,protected  String get Text Encoding Char Set (  ) { return  Text Encoding . CHARSET_ISO_8859_1 ; }
7652,public void set Excluded Protocols (  String protocols ) { this . excluded Protocols = protocols ; }
7653,"public DIDL Content parse (  String xml )  throws  Exception{ if  ( xml == null || xml . length (  )  == 0 )  {     throw new  Runtime Exception ( "" Null or empty XML"" )  ;  } DIDL Content content = new DIDL Content (  )  ;  create Root Handler ( content, this )  ;  log . fine ( "" Parsing DIDL XML content"" )  ;  parse ( new  Input Source ( new  String Reader ( xml )  )  )  ;  return content ; }"
7654,"public com . anychart . core . annotations .  Fibonacci Timezones right (  String right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", wrap Quotes ( right )  )  )  ;  return this ; }"
7655,public VS get View State ( @ Non Null  String view Id ) {  Presenter Holder holder = presenter Map . get ( view Id )  ;  return holder == null ? null :  ( VS )  holder . view State ; }
7656,"public static _ Fields find By Thrift Id Or Throw ( int field Id ) { _ Fields fields = find By Thrift Id ( field Id )  ;  if  ( fields == null )      throw new java . lang .  Illegal Argument Exception ( "" Field "" + field Id + "" doesn't exist!"" )  ;  return fields ; }"
7657,"public void set Telephony Manager For Handle (  Phone Account Handle handle,  Telephony Manager telephony Manager ) { phone Account To Telephony Managers . put ( handle, telephony Manager )  ; }"
7658,"public void add (  Runnable runnable ) { delta Queue . add ( tick Remaining, runnable )  ; }"
7659,"public com . anychart . charts .  Tag Cloud padding (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
7660,"public int get Is Touching Am Or Pm ( float x Coord, float y Coord ) { if  ( !m Draw Values Ready )  {     return -1 ;  } int squared Y Distance =  ( int )   (  ( y Coord - m Am Pm Y Center )  *  ( y Coord - m Am Pm Y Center )  )  ;  int distance To Am Center =  ( int )   Math . sqrt (  ( x Coord - m Am X Center )  *  ( x Coord - m Am X Center )  + squared Y Distance )  ;  if  ( distance To Am Center <= m Am Pm Circle Radius )  {     return AM ;  } int distance To Pm Center =  ( int )   Math . sqrt (  ( x Coord - m Pm X Center )  *  ( x Coord - m Pm X Center )  + squared Y Distance )  ;  if  ( distance To Pm Center <= m Am Pm Circle Radius )  {     return PM ;  } //  Neither was close enough .  return -1 ; }"
7661,Builder increment Objects Duplicated (  ) { num Objects Duplicated++ ;  return this ; }
7662,"public void clip (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . clip (  )  ; "" )  ; }"
7663,"public com . anychart . core . annotations .  Andrews Pitchfork bounds (  String x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, height )  )  ;  return this ; }"
7664,"public com . anychart . scales .  Linear Color color Scale (  ) { return new com . anychart . scales .  Linear Color ( js Base + "" . color Scale (  ) "" )  ; }"
7665,public static  String get Canonical Name ( @ Non Null  Inet Socket Address remote ) {  Inet Address address = resolve ( remote )  ;  if  ( address == null )  {     return remote . get Host String (  )  ;  } return address . get Canonical Host Name (  )  ; }
7666,"public  Builder corner Effect ( float radius ) { check Not Built (  )  ;  if  ( radius < 0f )  {     throw new  Illegal Argument Exception ( "" Can't have a negative radius value"" )  ;  } radius Px (  Math . round ( radius )  )  ;  return this ; }"
7667,"public void seek To Blocking ( @ Int Range ( from = 0, to =  Integer . MAX_VALUE )  final int position ) { if  ( position < 0 )  {     throw new  Illegal Argument Exception ( "" Position is not positive"" )  ;  } synchronized  ( m Native Info Handle )  {     m Native Info Handle . seek To Time ( position, m Buffer )  ;  } m Invalidation Handler . send Empty Message At Time ( MSG_TYPE_INVALIDATION, 0 )  ; }"
7668,"protected void on Exception Swallowed ( @ Non Null  Runtime Exception exception ) { global Exception Handler . on Exception ( this, exception )  ; }"
7669,"public  Quaternion set All (  Quaternion quat ) { return set All ( quat . w, quat . x, quat . y, quat . z )  ; }"
7670,private void maybe Update Stats (  ) { // with a frequency of once in RESTAT_INTERVAL_MS if  ( lock . try Lock (  )  )  {     try {         if  (  (  System Clock . uptime Millis (  )  - m Last Restat Time )  > RESTAT_INTERVAL_MS )  {             update Stats (  )  ;          }     } finally {         lock . unlock (  )  ;      } }}
7671,"public void clear (  ) { @ Suppress Warnings ( ""unchecked"" )   Sparse Array< Base Notification Item> clone Array =  (  Sparse Array< Base Notification Item> )  notification Array . clone (  )  ;  notification Array . clear (  )  ;  for  ( int i = 0 ;  i < clone Array . size (  )  ;  i++ )  {     final  Base Notification Item n = clone Array . get ( clone Array . key At ( i )  )  ;      n . cancel (  )  ;  }}"
7672,"public com . anychart . standalones .  Data Grid column (  Number index, com . anychart . core . ui . datagrid .  Column settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . column ( %s, %s )  ; "", index,  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
7673,"public final  Point F source To View Coord ( float sx, float sy ) { if  ( v Translate == null )  {     return null ;  } float vx =  ( sx * scale )  + v Translate . x ;  float vy =  ( sy * scale )  + v Translate . y ;  return new  Point F ( vx, vy )  ; }"
7674,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
7675,public  Closeable Reference< Closeable Image> get For Reuse (  ) { while  ( true )  {      Cache Key key = pop First Free Item Key (  )  ;      if  ( key == null )  {         return null ;      }      Closeable Reference< Closeable Image> image Ref = m Backing Cache . reuse ( key )  ;      if  ( image Ref != null )  {         return image Ref ;      } }}
7676,public  Completable remove Product (  Product product ) {  List< Product> updated Shopping Cart = new  Array List<> (  )  ;  updated Shopping Cart . add All ( items In Shopping Cart . get Value (  )  )  ;  updated Shopping Cart . remove ( product )  ;  items In Shopping Cart . on Next ( updated Shopping Cart )  ;  return  Completable . complete (  )  ; }
7677,long bit Size (  ) { return bits . bit Size (  )  ; }
7678,"public com . anychart . standalones . axismarkers .  Line container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
7679,public  String get Interface Methodref Type ( int index ) {  Memberref Info minfo =  (  Memberref Info )  get Item ( index )  ;  if  ( minfo == null )      return null ;   Name And Type Info n =  (  Name And Type Info )  get Item ( minfo . name And Type Index )  ;  if  ( n == null )      return null ;  return get Utf8 Info ( n . type Descriptor )  ; }
7680,"public void auto Redraw (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . auto Redraw (  )  ; "" )  ; }"
7681,"public  Builder set Additional Parameters ( @ Nullable  Map< String,  String> additional Parameters ) { m Additional Parameters = check Additional Params ( additional Parameters, BUILT_IN_PARAMS )  ;  return this ; }"
7682,public static final  Rev Filter before (  Date ts ) { return before ( ts . get Time (  )  )  ; }
7683,"private void resize Me Maybe ( int new Size ) { int entries Size = entries . length ;  if  ( new Size > entries Size )  {     // 1 . 5x but round up to nearest odd  ( this is optimal for memory consumption on  Android )      int new Capacity =  Math . min (  Compact Hashing . MAX_SIZE,  ( entries Size +  Math . max ( 1, entries Size >>> 1 )  )  | 1 )  ;      if  ( new Capacity != entries Size )  {         resize Entries ( new Capacity )  ;      } }}"
7684,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
7685,"public com . anychart . core .  State Settings rising Hatch Fill (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rising Hatch Fill ( %s )  ; "", enabled )  )  ;  return this ; }"
7686,"public com . anychart . core . gantt . elements .  Progress Element stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7687,"public com . anychart . core . stock . scrollerseries .  Range Step Area high Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . high Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7688,public static boolean has Marshmallow (  ) { return  Build . VERSION . SDK_INT >= VERSION_CODES . M ; }
7689,public float get Y Min (  ) { return m Y Min ; }
7690,"public static boolean check File For Packaging (  String file Name,  String extension ) { // ignore hidden files and backup files if  ( file Name . char At ( 0 )  == ' . ' || file Name . char At ( file Name . length (  )  - 1 )  == '~' )  {     return false ;  } return //  Aidl files !""aidl"" . equals Ignore Case ( extension )  && //  Render Script files !""rs"" . equals Ignore Case ( extension )  && //  Filter Script files !""fs"" . equals Ignore Case ( extension )  && //  Render Script header files !""rsh"" . equals Ignore Case ( extension )  && //  Dependency files !""d"" . equals Ignore Case ( extension )  && //  Java files !""java"" . equals Ignore Case ( extension )  && //  Scala files !""scala"" . equals Ignore Case ( extension )  && //  Java class files !""class"" . equals Ignore Case ( extension )  && //  Visual Source Safe !""scc"" . equals Ignore Case ( extension )  && // vi swap file !""swp"" . equals Ignore Case ( extension )  && // image index file !""thumbs . db"" . equals Ignore Case ( file Name )  && // image index file !""picasa . ini"" . equals Ignore Case ( file Name )  && //  Javadoc !""package . html"" . equals Ignore Case ( file Name )  && //  Javadoc !""overview . html"" . equals Ignore Case ( file Name )  ; }"
7691,public  Object [  ]  get Annotations (  )  throws  Class Not Found Exception{ return new  Object [ 0 ]  ; }
7692,"public static ETC1 Data encode Image (  Pixmap pixmap ) { int pixel Size = get Pixel Size ( pixmap . get Format (  )  )  ;   Byte Buffer compressed Data = encode Image ( pixmap . get Pixels (  ) , 0, pixmap . get Width (  ) , pixmap . get Height (  ) , pixel Size )  ;   Buffer Utils . new Unsafe Byte Buffer ( compressed Data )  ;  return new ETC1 Data ( pixmap . get Width (  ) , pixmap . get Height (  ) , compressed Data, 0 )  ; }"
7693,public  String get Body Localization Key (  ) { return body Loc Key ; }
7694,"public com . anychart . core . utils .  Legend Item Settings icon Marker Stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . icon Marker Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7695,"public com . anychart . graphics . vector .  Unmanaged Layer rotate By Anchor (  Number degrees,  String anchor ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rotate By Anchor ( %s, %s )  ; "", degrees, wrap Quotes ( anchor )  )  )  ;  return this ; }"
7696,"public com . anychart . core . stock .  Plot range Marker (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . range Marker ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
7697,"public static  Litho View create (  Context context,  Component component ) { return create ( context, component, null )  ; }"
7698,static boolean is XML Digit ( char c ) { if  ( c < 0x0030 )      return false ;  if  ( c <= 0x0039 )      return true ;  if  ( c < 0x0660 )      return false ;  if  ( c <= 0x0669 )      return true ;  if  ( c < 0x06 F0 )      return false ;  if  ( c <= 0x06 F9 )      return true ;  if  ( c < 0x0966 )      return false ;  if  ( c <= 0x096 F )      return true ;  if  ( c < 0x09 E6 )      return false ;  if  ( c <= 0x09 EF )      return true ;  if  ( c < 0x0 A66 )      return false ;  if  ( c <= 0x0 A6 F )      return true ;  if  ( c < 0x0 AE6 )      return false ;  if  ( c <= 0x0 AEF )      return true ;  if  ( c < 0x0 B66 )      return false ;  if  ( c <= 0x0 B6 F )      return true ;  if  ( c < 0x0 BE7 )      return false ;  if  ( c <= 0x0 BEF )      return true ;  if  ( c < 0x0 C66 )      return false ;  if  ( c <= 0x0 C6 F )      return true ;  if  ( c < 0x0 CE6 )      return false ;  if  ( c <= 0x0 CEF )      return true ;  if  ( c < 0x0 D66 )      return false ;  if  ( c <= 0x0 D6 F )      return true ;  if  ( c < 0x0 E50 )      return false ;  if  ( c <= 0x0 E59 )      return true ;  if  ( c < 0x0 ED0 )      return false ;  if  ( c <= 0x0 ED9 )      return true ;  if  ( c < 0x0 F20 )      return false ;  if  ( c <= 0x0 F29 )      return true ;  return false ; }
7699,public int get Transition Count (  ) { return m Transitions . size (  )  ; }
7700,"public static  String encrypt MD5 To String ( final  String data, final  String salt ) { if  ( data == null && salt == null )      return """" ;  if  ( salt == null )      return  Utils Bridge . bytes2 Hex String ( encrypt MD5 ( data . get Bytes (  )  )  )  ;  if  ( data == null )      return  Utils Bridge . bytes2 Hex String ( encrypt MD5 ( salt . get Bytes (  )  )  )  ;  return  Utils Bridge . bytes2 Hex String ( encrypt MD5 (  ( data + salt )  . get Bytes (  )  )  )  ; }"
7701,"public static final  Component Name load Plugin Activity (  Intent intent,  String plugin,  String target, int process ) { return s Plugin Manager . load Plugin Activity ( intent, plugin, target, process )  ; }"
7702,public  Litho View Rule set Root (  Component component ) { get Component Tree (  )  . set Root ( component )  ;  return this ; }
7703,"public void show Pending Notifications To User ( boolean show All ) { if  ( notification Update Running . get (  )  )  {      Log . w ( TAG, "" Notification update running, scheduling show event"" )  ;      scheduled Show Event . set ( true )  ;      // store passed parameter     scheduled Show Event Parameter = show All ;      return ;  }  Set< Persistent Notification> persistent Notifications = preference Store . get Persistent Notifications (  )  ;   Set< Persistent Notification> update Notifications = new  Hash Set<> (  )  ;  for  (  Persistent Notification persistent Notification : persistent Notifications )  {     if  ( persistent Notification . has To Be Shown ( app Version Code )  )  {         //notification Consumer . show ( context, persistent Notification . get Notification (  )  )  ;          persistent Notification . get Notification (  )  . show ( context )  ;          persistent Notification . set Last Shown ( new  Date (  )  )  ;          persistent Notification . set Shown Counter ( persistent Notification . get Shown Counter (  )  + 1 )  ;          update Notifications . add ( persistent Notification )  ;          if  ( !show All )  {             break ;          }     } } if  ( !update Notifications . is Empty (  )  )  {     preference Store . update Persistent Notification ( update Notifications )  ;  }}"
7704,"public com . anychart . charts .  Polar max Point Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Point Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
7705,public  Image Request Builder set Cache Choice (  Image Request .  Cache Choice cache Choice ) { m Cache Choice = cache Choice ;  return this ; }
7706,"Optional< Native Link Target Group> get Native Link Target (  Cxx Platform cxx Platform,  Action Graph Builder graph Builder ) { if  ( this instanceof  Native Link Target Group )  {     return  Optional . of (  (  Native Link Target Group )  this )  ;  } return  Optional . empty (  )  ; }"
7707,"public  Short Buffer put ( short [  ]  src, int off, int len ) { int length = src . length ;  if  ( off < 0 || len < 0 ||  ( long )  off +  ( long )  len > length )  {     throw new  Index Out Of Bounds Exception (  )  ;  } if  ( len > remaining (  )  )  {     throw new  Buffer Overflow Exception (  )  ;  } for  ( int i = off ;  i < off + len ;  i++ )  {     put ( src [ i ]  )  ;  } return this ; }"
7708,"public void test Https Uri With Owner And Name (  ) {  Repository repo =  Repository Uri Matcher . get Repository (  Uri . parse ( ""https://github . com/mojombo/jekyll"" )  )  ;  assert Not Null ( repo )  ;  assert Equals ( ""jekyll"", repo . name (  )  )  ;  assert Not Null ( repo . owner (  )  )  ;  assert Equals ( ""mojombo"", repo . owner (  )  . login (  )  )  ; }"
7709,"static void attempt Retry On Exception ( final  Request<?> request, final  Retry Info retry Info )  throws  Volley Error{ final  Retry Policy retry Policy = request . get Retry Policy (  )  ;  final int old Timeout = request . get Timeout Ms (  )  ;  try {     retry Policy . retry ( retry Info . error To Retry )  ;  } catch  (  Volley Error e )  {     request . add Marker (  String . format ( ""%s-timeout-giveup  [ timeout=%s ] "", retry Info . log Prefix, old Timeout )  )  ;      throw e ;  } request . add Marker (  String . format ( ""%s-retry  [ timeout=%s ] "", retry Info . log Prefix, old Timeout )  )  ; }"
7710,"private void init Card (  ) { // Init an array of  Cards  Array List< Card> cards = new  Array List< Card> (  )  ;  for  ( int i = 0 ;  i < 25 ;  i++ )  {      Color Card card = new  Color Card ( this . get Activity (  )  )  ;      // Only for test scope, use different titles and colors     card . set Title ( ""A simple colored card "" + i )  ;      card . set Count ( i )  ;      switch ( i % 5 )  {         case 0:             card . set Background Resource Id ( R . drawable . demoextra_card_selector_color1 )  ;              break ;          case 1:             card . set Background Resource Id ( R . drawable . demoextra_card_selector_color2 )  ;              break ;          case 2:             card . set Background Resource Id ( R . drawable . demoextra_card_selector_color3 )  ;              break ;          case 3:             card . set Background Resource Id ( R . drawable . demoextra_card_selector_color4 )  ;              break ;          case 4:             card . set Background Resource Id ( R . drawable . demoextra_card_selector_color5 )  ;              break ;      }     cards . add ( card )  ;  } // Set the adapter  Card Array Adapter m Card Array Adapter = new  Card Array Adapter ( get Activity (  ) , cards )  ;  if  ( list View != null )  {     list View . set Adapter ( m Card Array Adapter )  ;  }}"
7711,"public com . anychart . core . stock . scrollerseries .  Candlestick falling Stroke ( com . anychart . graphics . vector .  Colored Fill value,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7712,protected void clear Reuse As Is (  ) { flags &= ~REUSE_AS_IS ; }
7713,public  Object Upload Listener set Callback (  Callback callback ) { this . callback = callback ;  return this ; }
7714,"public  Ct Class make Subclass (  Class Pool pool,  Ct Class type )  throws  Cannot Compile Exception,  Not Found Exception, IO Exception{  Ct Class vec = pool . make Class ( make Class Name ( type )  )  ;  vec . set Superclass ( pool . get ( ""java . util .  Vector"" )  )  ;   Ct Class c = pool . get ( ""sample . vector .  Sample"" )  ;   Ct Method addmethod = c . get Declared Method ( ""add"" )  ;   Ct Method atmethod = c . get Declared Method ( ""at"" )  ;   Class Map map = new  Class Map (  )  ;  map . put ( ""sample . vector . X"", type . get Name (  )  )  ;  vec . add Method (  Ct New Method . copy ( addmethod, ""add"", vec, map )  )  ;  vec . add Method (  Ct New Method . copy ( atmethod, ""at"", vec, map )  )  ;  vec . write File (  )  ;  return vec ; }"
7715,public void set Full View Container (  View Group full View Container ) { this . full View Container = full View Container ; }
7716,"public com . anychart . core . gantt . edit .  Thumb stroke ( com . anychart . graphics . vector .  Stroke value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7717,"public void set Filter (  Texture Filter min Filter,  Texture Filter mag Filter ) { this . min Filter = min Filter ;  this . mag Filter = mag Filter ;  bind (  )  ;   Gdx . gl . gl Tex Parameteri ( gl Target, GL20 . GL_TEXTURE_MIN_FILTER, min Filter . get GL Enum (  )  )  ;   Gdx . gl . gl Tex Parameteri ( gl Target, GL20 . GL_TEXTURE_MAG_FILTER, mag Filter . get GL Enum (  )  )  ; }"
7718,"public com . anychart . charts .  Radar padding (  String padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "", wrap Quotes ( padding )  )  )  ;  return this ; }"
7719,private void set Foreground Lollipop ( @ Nullable  Drawable new Foreground ) { if  ( m Foreground != new Foreground )  {     if  ( m Foreground != null )  {         m Foreground . set Callback ( null )  ;          unschedule Drawable ( m Foreground )  ;      }     m Foreground = new Foreground ;      if  ( new Foreground != null )  {         new Foreground . set Callback ( this )  ;          if  ( new Foreground . is Stateful (  )  )  {             new Foreground . set State ( get Drawable State (  )  )  ;          }     }     invalidate (  )  ;  }}
7720,"public com . anychart . core . ui .  Scroll Bar background Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . background Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7721,public void set Beacon (  Beacon beacon ) { m Beacon = beacon ; }
7722,"private void init Card (  ) { // Init an array of  Cards  Array List< Card> cards = new  Array List< Card> (  )  ;  for  ( int i = 0 ;  i < 25 ;  i++ )  {      Color Card card = new  Color Card ( this . get Activity (  )  )  ;      // Only for test scope, use different titles and colors     card . set Title ( ""A simple colored card "" + i )  ;      card . set Count ( i )  ;      switch ( i % 5 )  {         case 0:             card . set Background Resource Id ( R . drawable . demoextra_card_selector_color1 )  ;              break ;          case 1:             card . set Background Resource Id ( R . drawable . demoextra_card_selector_color2 )  ;              break ;          case 2:             card . set Background Resource Id ( R . drawable . demoextra_card_selector_color3 )  ;              break ;          case 3:             card . set Background Resource Id ( R . drawable . demoextra_card_selector_color4 )  ;              break ;          case 4:             card . set Background Resource Id ( R . drawable . demoextra_card_selector_color5 )  ;              break ;      }     cards . add ( card )  ;  } // Set the adapter m Card Array Adapter = new  Card Array Adapter ( get Activity (  ) , cards )  ;  m List View =  (  Card List View )  get Activity (  )  . find View By Id ( R . id . carddemo_extra_list_viewanimations )  ;  if  ( m List View != null )  {     set Alpha Adapter (  )  ;  }}"
7723,"public static  Note Map read (  Object Reader reader,  Rev Tree tree )  throws  Missing Object Exception,  Incorrect Object Type Exception,  Corrupt Object Exception, IO Exception{ return read Tree ( reader, tree )  ; }"
7724,"public com . anychart . core . ui .  Background background (  ) { return new com . anychart . core . ui .  Background ( js Base + "" . background (  ) "" )  ; }"
7725,"public com . anychart . charts .  Waterfall label (  Number index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", index, wrap Quotes ( settings )  )  )  ;  return this ; }"
7726,protected  Wait For Value Changed Request wait For Indication ( @ Nullable final  Bluetooth Gatt Characteristic characteristic ) { return  Request . new Wait For Indication Request ( characteristic )  . set Request Handler ( request Handler )  ; }
7727,public  Object Type [  ]  get Exception Types (  ) { return exceptions ; }
7728,"public com . anychart . scales .  Date Time With Calendar align Minimum (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . align Minimum ( %s )  ; "", enabled )  )  ;  return this ; }"
7729,public void annotate (  Exception With Context ex ) { locals . annotate ( ex )  ;  stack . annotate ( ex )  ; }
7730,public void add Image (  Lyrics3 Image image ) { images . add ( image )  ; }
7731,public static  Path Suffix Filter create (  String path ) { if  ( path . length (  )  == 0 )      throw new  Illegal Argument Exception ( J Git Text . get (  )  . empty Path Not Permitted )  ;  return new  Path Suffix Filter ( path )  ; }
7732,"protected final void set Added Net Key Index ( final int index ) { if  ( ! Mesh Parser Utils . is Node Key Exists ( m Added Net Keys, index )  )  {     m Added Net Keys . add ( new  Node Key ( index )  )  ;  }}"
7733,public static byte [  ]  hex (  String hex ) { if  ( hex == null )      return null ;  int len = hex . length (  )  ;  if  ( len % 2 != 0 )      return null ;  char [  ]  chars = hex . to Char Array (  )  ;  byte [  ]  bytes = new byte [ len / 2 ]  ;  for  ( int i = 0 ;  i < bytes . length ;  i++ )  {     char c0 = chars [ i * 2 ]  ;      char c1 = chars [ i * 2 + 1 ]  ;      int b0 = c0 -  ( c0 <= 57 ? 48 : 55 )  ;      int b1 = c1 -  ( c1 <= 57 ? 48 : 55 )  ;      bytes [ i ]  =  ( byte )   (  ( b0 << 4 )  | b1 )  ;  } return bytes ; }
7734,"public com . anychart . core . cartesian . series .  Bar3d markers (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", settings )  )  ;  return this ; }"
7735,"public int insert Ex Gap ( int pos, int length )  throws  Bad Bytecode{ return insert Gap At ( pos, length, true )  . length ; }"
7736,public void has Size ( int expected Size ) { check (  )  . that ( actual List )  . has Size ( expected Size )  ; }
7737,"public static  Module Annotation module Annotation (  Annotation Mirror annotation ) { check Argument ( is Module Annotation ( annotation ) , ""%s is not a  Module or  Producer Module annotation"", annotation )  ;  return new  Auto Value_ Module Annotation ( annotation )  ; }"
7738,"public com . anychart . standalones .  Title v Align (  String align ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . v Align ( %s )  ; "", wrap Quotes ( align )  )  )  ;  return this ; }"
7739,"public com . anychart . scales .  Linear align Minimum (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . align Minimum ( %s )  ; "", enabled )  )  ;  return this ; }"
7740,"public void max Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Width (  )  ; "" )  ; }"
7741,"public com . anychart . core . gantt . elements .  Tasks Element edit (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . edit ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7742,public  Tap Target description Text Color ( @ Color Res int color ) { this . description Text Color Res = color ;  return this ; }
7743,"protected static void inject Fields (  Abstract Build Rule rule,  Project Filesystem filesystem,  Build Target target ) { set Field ( ""project Filesystem"", rule, filesystem )  ;  set Field ( ""build Target"", rule, target )  ;  set Field ( ""type Supplier"", rule,  More Suppliers . memoize ( rule::get Type For Class )  )  ;  set Field ( ""hash Code"", rule, rule . compute Hash Code (  )  )  ; }"
7744,public static  Authorization Exception by String (  String error ) {  Authorization Exception ex = STRING_TO_EXCEPTION . get ( error )  ;  if  ( ex != null )  {     return ex ;  } return OTHER ; }
7745,public boolean has Worker Requirements (  ) { return worker Requirements Builder_ != null || worker Requirements_ != null ; }
7746,public boolean add On Tutorial Page Change Listener ( @ Non Null  On Tutorial Page Change Listener listener ) { return m Tutorial . add On Tutorial Page Change Listener ( listener )  ; }
7747,"public void set Slope ( float slope ) { this . slope = slope ;  set Float ( slope Location, slope )  ; }"
7748,"protected  String get Video String (  ) {  Format format = player . get Video Format (  )  ;   Decoder Counters decoder Counters = player . get Video Decoder Counters (  )  ;  if  ( format == null || decoder Counters == null )  {     return """" ;  } return ""\n"" + format . sample Mime Type + "" ( id:"" + format . id + "" r:"" + format . width + ""x"" + format . height + get Pixel Aspect Ratio String ( format . pixel Width Height Ratio )  + get Decoder Counters Buffer Count String ( decoder Counters )  + "" ) "" ; }"
7749,"public static void generate Parameter Reifier Code (  String [  ]  param Types, boolean is Static, final  Code Visitor cv ) { cv . visit Int Insn ( SIPUSH, param Types . length )  ;  cv . visit Type Insn ( ANEWARRAY, ""java/lang/ Object"" )  ;  int local Var Index = is Static ? 0 : 1 ;  for  ( int i = 0 ;  i < param Types . length ;  ++i )  {      String param = param Types [ i ]  ;      cv . visit Insn ( DUP )  ;      cv . visit Int Insn ( SIPUSH, i )  ;      if  ( is Primitive ( param )  )  {         int opcode ;          if  ( param . equals ( ""F"" )  )  {             opcode = FLOAD ;          } else if  ( param . equals ( ""D"" )  )  {             opcode = DLOAD ;          } else if  ( param . equals ( ""J"" )  )  {             opcode = LLOAD ;          } else {             opcode = ILOAD ;          }          String type = ""bsh/ Primitive"" ;          cv . visit Type Insn ( NEW, type )  ;          cv . visit Insn ( DUP )  ;          cv . visit Var Insn ( opcode, local Var Index )  ;          // ok?          String desc = param ;          cv . visit Method Insn ( INVOKESPECIAL, type, ""<init>"", "" ( "" + desc + "" ) V"" )  ;      } else {         //  Technically incorrect here - we need to wrap null values         // as bsh .  Primitive . NULL .    However the  This . invoke Method (  )          // will do that much for us .          //  We need to generate a conditional here to test for null         // and return  Primitive . NULL         cv . visit Var Insn ( ALOAD, local Var Index )  ;      }     cv . visit Insn ( AASTORE )  ;      local Var Index +=  (  ( param . equals ( ""D"" )  || param . equals ( ""J"" )  )  ? 2 : 1 )  ;  }}"
7750,"public com . anychart . core . utils .  Quarter margin (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
7751,"public void open (  ) { open ( true, true )  ; }"
7752,public void set Drawing Mode ( int drawing Mode ) { this . m Drawing Mode = drawing Mode ; }
7753,"public  Object call (  Context context,  List args )  throws  Function Call Exception{ if  ( args . size (  )  == 3 )  {     return evaluate ( args . get ( 0 ) , args . get ( 1 ) , args . get ( 2 ) , context . get Navigator (  )  )  ;  } throw new  Function Call Exception ( ""translate (  )  requires three arguments . "" )  ; }"
7754,public boolean should Use Legacy Fix Script (  ) { return !get Fix Script (  )  . is Present (  )  ; }
7755,"public static  String get Atom Type String ( int type ) { return """" +  ( char )   (  ( type >> 24 )  & 0x FF )  +  ( char )   (  ( type >> 16 )  & 0x FF )  +  ( char )   (  ( type >> 8 )  & 0x FF )  +  ( char )   ( type & 0x FF )  ; }"
7756,"public static  Network Info new Instance (  Network Info .  Detailed State detailed State, int type, int sub Type, boolean is Available, boolean is Connected ) { return new Instance ( detailed State, type, sub Type, is Available, is Connected ?  Network Info .  State . CONNECTED :  Network Info .  State . DISCONNECTED )  ; }"
7757,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
7758,"public com . anychart . standalones .  Color Range length (  String length ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . length ( %s )  ; "", wrap Quotes ( length )  )  )  ;  return this ; }"
7759,"private static double interpolate ( double lower, double upper, double remainder, double scale ) { if  ( lower == NEGATIVE_INFINITY )  {     if  ( upper == POSITIVE_INFINITY )  {         //  Return  Na N when lower == NEGATIVE_INFINITY and upper == POSITIVE_INFINITY:         return  Na N ;      }     //  Return NEGATIVE_INFINITY when NEGATIVE_INFINITY == lower <= upper < POSITIVE_INFINITY:     return NEGATIVE_INFINITY ;  } if  ( upper == POSITIVE_INFINITY )  {     //  Return POSITIVE_INFINITY when NEGATIVE_INFINITY < lower <= upper == POSITIVE_INFINITY:     return POSITIVE_INFINITY ;  } return lower +  ( upper - lower )  * remainder / scale ; }"
7760,"public void start For Result ( I Support Fragment to Fragment, int request Code ) { m Transaction Delegate . dispatch Start Transaction ( get Support Fragment Manager (  ) , get Top Fragment (  ) , to Fragment, request Code, I Support Fragment . STANDARD,  Transaction Delegate . TYPE_ADD_RESULT )  ; }"
7761,"void parse Header Item (  )  throws IO Exception{ m Header Item = new  Header Item (  )  ;  seek ( 0 )  ;  byte [  ]  magic = new byte [ 8 ]  ;  read Bytes ( magic )  ;  if  ( !verify Magic ( magic )  )  {      System . err . println ( "" Magic number is wrong -- are you sure "" + ""this is a DEX file?"" )  ;      throw new  Dex Data Exception (  )  ;  } /*      *  Read the endian tag, so we properly swap things as we read      * them from here on .       */ seek ( 8 + 4 + 20 + 4 + 4 )  ;  m Header Item . endian Tag = read Int (  )  ;  if  ( m Header Item . endian Tag ==  Header Item . ENDIAN_CONSTANT )  { /* do nothing */ } else if  ( m Header Item . endian Tag ==  Header Item . REVERSE_ENDIAN_CONSTANT )  {     /* file is big-endian  ( ! ) , reverse future reads */     is Big Endian = true ;  } else {      System . err . println ( "" Endian constant has unexpected value "" +  Integer . to Hex String ( m Header Item . endian Tag )  )  ;      throw new  Dex Data Exception (  )  ;  } // magic, checksum, signature seek ( 8 + 4 + 20 )  ;  m Header Item . file Size = read Int (  )  ;  m Header Item . header Size = read Int (  )  ;  /*m Header Item . endian Tag =*/ read Int (  )  ;  /*m Header Item . link Size =*/ read Int (  )  ;  /*m Header Item . link Off =*/ read Int (  )  ;  /*m Header Item . map Off =*/ read Int (  )  ;  m Header Item . string Ids Size = read Int (  )  ;  m Header Item . string Ids Off = read Int (  )  ;  m Header Item . type Ids Size = read Int (  )  ;  m Header Item . type Ids Off = read Int (  )  ;  m Header Item . proto Ids Size = read Int (  )  ;  m Header Item . proto Ids Off = read Int (  )  ;  m Header Item . field Ids Size = read Int (  )  ;  m Header Item . field Ids Off = read Int (  )  ;  m Header Item . method Ids Size = read Int (  )  ;  m Header Item . method Ids Off = read Int (  )  ;  m Header Item . class Defs Size = read Int (  )  ;  m Header Item . class Defs Off = read Int (  )  ;  /*m Header Item . data Size =*/ read Int (  )  ;  /*m Header Item . data Off =*/ read Int (  )  ; }"
7762,public void test Authority Set In Manifest Get Token Failed (  ) {//TODO: to be replaced with  Robolectric}
7763,private void process Event ( SV Event e ) { last X Move = e . x ;  last Y Move = e . y ;   Scroll View . add Message ( e )  ;  timer . restart (  )  ; }
7764,public static  Request Manager with ( @ Non Null  Fragment Activity activity ) { return get Retriever ( activity )  . get ( activity )  ; }
7765,"public static void shake (  View view, float cycles, final boolean is Ban Click ) { translate ( view, 0 . 0f, 10 . 0f, 0 . 0f, 0 . 0f, cycles, 700, is Ban Click )  ; }"
7766,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
7767,"public com . anychart . core . stock . scrollerseries .  Step Line y Scale ( com . anychart . scales .  Scatter Base settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
7768,"public void exclude Point (  Number [  ]  indexes ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . exclude Point ( %s )  ; "",  Arrays . to String ( indexes )  )  )  ; }"
7769,public static void set Radio Version (  String radio Version ) { radio Version Override = radio Version ; }
7770,public static int get Platform Version (  String qualifiers ) {  Matcher m = VERSION_QUALIFIER_PATTERN . matcher ( qualifiers )  ;  if  ( m . find (  )  )  {     return  Integer . parse Int ( m . group ( 2 )  )  ;  } return -1 ; }
7771,"public com . anychart . core . ui .  Outline outline (  ) { return new com . anychart . core . ui .  Outline ( js Base + "" . outline (  ) "" )  ; }"
7772,"private boolean calculate Bounds (  Rect F rect ) { float left =  Bitmap Utils . get Rect Left ( m Bounds Points )  ;  float top =  Bitmap Utils . get Rect Top ( m Bounds Points )  ;  float right =  Bitmap Utils . get Rect Right ( m Bounds Points )  ;  float bottom =  Bitmap Utils . get Rect Bottom ( m Bounds Points )  ;  if  ( !is Non Straight Angle Rotated (  )  )  {     m Calc Bounds . set ( left, top, right, bottom )  ;      return false ;  } else {     float x0 = m Bounds Points [ 0 ]  ;      float y0 = m Bounds Points [ 1 ]  ;      float x2 = m Bounds Points [ 4 ]  ;      float y2 = m Bounds Points [ 5 ]  ;      float x3 = m Bounds Points [ 6 ]  ;      float y3 = m Bounds Points [ 7 ]  ;      if  ( m Bounds Points [ 7 ]  < m Bounds Points [ 1 ]  )  {         if  ( m Bounds Points [ 1 ]  < m Bounds Points [ 3 ]  )  {             x0 = m Bounds Points [ 6 ]  ;              y0 = m Bounds Points [ 7 ]  ;              x2 = m Bounds Points [ 2 ]  ;              y2 = m Bounds Points [ 3 ]  ;              x3 = m Bounds Points [ 4 ]  ;              y3 = m Bounds Points [ 5 ]  ;          } else {             x0 = m Bounds Points [ 4 ]  ;              y0 = m Bounds Points [ 5 ]  ;              x2 = m Bounds Points [ 0 ]  ;              y2 = m Bounds Points [ 1 ]  ;              x3 = m Bounds Points [ 2 ]  ;              y3 = m Bounds Points [ 3 ]  ;          }     } else if  ( m Bounds Points [ 1 ]  > m Bounds Points [ 3 ]  )  {         x0 = m Bounds Points [ 2 ]  ;          y0 = m Bounds Points [ 3 ]  ;          x2 = m Bounds Points [ 6 ]  ;          y2 = m Bounds Points [ 7 ]  ;          x3 = m Bounds Points [ 0 ]  ;          y3 = m Bounds Points [ 1 ]  ;      }     float a0 =  ( y3 - y0 )  /  ( x3 - x0 )  ;      float a1 = -1f / a0 ;      float b0 = y0 - a0 * x0 ;      float b1 = y0 - a1 * x0 ;      float b2 = y2 - a0 * x2 ;      float b3 = y2 - a1 * x2 ;      float c0 =  ( rect . center Y (  )  - rect . top )  /  ( rect . center X (  )  - rect . left )  ;      float c1 = -c0 ;      float d0 = rect . top - c0 * rect . left ;      float d1 = rect . top - c1 * rect . right ;      left =  Math . max ( left,  ( d0 - b0 )  /  ( a0 - c0 )  < rect . right ?  ( d0 - b0 )  /  ( a0 - c0 )  : left )  ;      left =  Math . max ( left,  ( d0 - b1 )  /  ( a1 - c0 )  < rect . right ?  ( d0 - b1 )  /  ( a1 - c0 )  : left )  ;      left =  Math . max ( left,  ( d1 - b3 )  /  ( a1 - c1 )  < rect . right ?  ( d1 - b3 )  /  ( a1 - c1 )  : left )  ;      right =  Math . min ( right,  ( d1 - b1 )  /  ( a1 - c1 )  > rect . left ?  ( d1 - b1 )  /  ( a1 - c1 )  : right )  ;      right =  Math . min ( right,  ( d1 - b2 )  /  ( a0 - c1 )  > rect . left ?  ( d1 - b2 )  /  ( a0 - c1 )  : right )  ;      right =  Math . min ( right,  ( d0 - b2 )  /  ( a0 - c0 )  > rect . left ?  ( d0 - b2 )  /  ( a0 - c0 )  : right )  ;      top =  Math . max ( top,  Math . max ( a0 * left + b0, a1 * right + b1 )  )  ;      bottom =  Math . min ( bottom,  Math . min ( a1 * left + b3, a0 * right + b2 )  )  ;      m Calc Bounds . left = left ;      m Calc Bounds . top = top ;      m Calc Bounds . right = right ;      m Calc Bounds . bottom = bottom ;      return true ;  }}"
7773,"private  Finder Pattern [  ]  select Best Patterns (  )  throws  Not Found Exception{ int start Size = possible Centers . size (  )  ;  if  ( start Size < 3 )  {     //  Couldn't find enough finder patterns     throw  Not Found Exception . get Not Found Instance (  )  ;  } possible Centers . sort ( module Comparator )  ;  double distortion =  Double . MAX_VALUE ;   Finder Pattern [  ]  best Patterns = new  Finder Pattern [ 3 ]  ;  for  ( int i = 0 ;  i < possible Centers . size (  )  - 2 ;  i++ )  {      Finder Pattern fpi = possible Centers . get ( i )  ;      float min Module Size = fpi . get Estimated Module Size (  )  ;      for  ( int j = i + 1 ;  j < possible Centers . size (  )  - 1 ;  j++ )  {          Finder Pattern fpj = possible Centers . get ( j )  ;          double squares0 = squared Distance ( fpi, fpj )  ;          for  ( int k = j + 1 ;  k < possible Centers . size (  )  ;  k++ )  {              Finder Pattern fpk = possible Centers . get ( k )  ;              float max Module Size = fpk . get Estimated Module Size (  )  ;              if  ( max Module Size > min Module Size * 1 . 4f )  {                 // module size is not similar                 continue ;              }             double a = squares0 ;              double b = squared Distance ( fpj, fpk )  ;              double c = squared Distance ( fpi, fpk )  ;              // sorts ascending - inlined             if  ( a < b )  {                 if  ( b > c )  {                     if  ( a < c )  {                         double temp = b ;                          b = c ;                          c = temp ;                      } else {                         double temp = a ;                          a = c ;                          c = b ;                          b = temp ;                      }                 }             } else {                 if  ( b < c )  {                     if  ( a < c )  {                         double temp = a ;                          a = b ;                          b = temp ;                      } else {                         double temp = a ;                          a = b ;                          b = c ;                          c = temp ;                      }                 } else {                     double temp = a ;                      a = c ;                      c = temp ;                  }             }             // a^2 + b^2 = c^2  (  Pythagorean theorem ) , and a = b  ( isosceles triangle )  .              //  Since any right triangle satisfies the formula c^2 - b^2 - a^2 = 0,             // we need to check both two equal sides separately .              //  The value of |c^2 - 2 * b^2| + |c^2 - 2 * a^2| increases as dissimilarity             // from isosceles right triangle .              double d =  Math . abs ( c - 2 * b )  +  Math . abs ( c - 2 * a )  ;              if  ( d < distortion )  {                 distortion = d ;                  best Patterns [ 0 ]  = fpi ;                  best Patterns [ 1 ]  = fpj ;                  best Patterns [ 2 ]  = fpk ;              }         }     } } if  ( distortion ==  Double . MAX_VALUE )  {     throw  Not Found Exception . get Not Found Instance (  )  ;  } return best Patterns ; }"
7774,"public void unbind ( @ Non Null  Beacon Consumer consumer ) { if  ( !is Ble Available Or Simulated (  )  )  {      Log Manager . w ( TAG, "" Method invocation will be ignored . "" )  ;      return ;  } synchronized  ( consumers )  {     if  ( consumers . contains Key ( consumer )  )  {          Log Manager . d ( TAG, "" Unbinding"" )  ;          if  ( m Scheduled Scan Jobs Enabled )  {              Log Manager . d ( TAG, "" Not unbinding from scanning service as we are using scan jobs . "" )  ;          } else {             consumer . unbind Service ( consumers . get ( consumer )  . beacon Service Connection )  ;          }          Log Manager . d ( TAG, "" Before unbind, consumer count is "" + consumers . size (  )  )  ;          consumers . remove ( consumer )  ;           Log Manager . d ( TAG, "" After unbind, consumer count is "" + consumers . size (  )  )  ;          if  ( consumers . size (  )  == 0 )  {             //  If this is the last consumer to disconnect, the service will exit             // release the service Messenger .              service Messenger = null ;              //  If we are using scan jobs, we cancel the active scan job             if  ( m Scheduled Scan Jobs Enabled )  {                 if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . LOLLIPOP )  {                      Log Manager . i ( TAG, "" Cancelling scheduled jobs after unbind of last consumer . "" )  ;                       Scan Job Scheduler . get Instance (  )  . cancel Schedule ( m Context )  ;                  }             }         }     } else {          Log Manager . d ( TAG, "" This consumer is not bound to: %s"", consumer )  ;           Log Manager . d ( TAG, "" Bound consumers: "" )  ;           Set< Map .  Entry< Beacon Consumer,  Consumer Info>> consumers = this . consumers . entry Set (  )  ;          for  (  Map .  Entry< Beacon Consumer,  Consumer Info> consumer Entry : consumers )  {              Log Manager . d ( TAG,  String . value Of ( consumer Entry . get Value (  )  )  )  ;          }     } }}"
7775,public final int get Frame Count (  ) { return frame Count ; }
7776,"public void constrain Viewport ( float left, float top, float right, float bottom ) { if  ( right - left < min Viewport Width )  {     //  Minimum width - constrain horizontal zoom!     right = left + min Viewport Width ;      if  ( left < max Viewport . left )  {         left = max Viewport . left ;          right = left + min Viewport Width ;      } else if  ( right > max Viewport . right )  {         right = max Viewport . right ;          left = right - min Viewport Width ;      } } if  ( top - bottom < min Viewport Height )  {     //  Minimum height - constrain vertical zoom!     bottom = top - min Viewport Height ;      if  ( top > max Viewport . top )  {         top = max Viewport . top ;          bottom = top - min Viewport Height ;      } else if  ( bottom < max Viewport . bottom )  {         bottom = max Viewport . bottom ;          top = bottom + min Viewport Height ;      } } current Viewport . left =  Math . max ( max Viewport . left, left )  ;  current Viewport . top =  Math . min ( max Viewport . top, top )  ;  current Viewport . right =  Math . min ( max Viewport . right, right )  ;  current Viewport . bottom =  Math . max ( max Viewport . bottom, bottom )  ;  viewport Change Listener . on Viewport Changed ( current Viewport )  ; }"
7777,private synchronized void handle Parent Level Change (  Level new Parent Level ) { // null if  ( level == null )  {     effective Level = new Parent Level ;      // propagate the parent level Int change to this logger's children     if  ( children Map != null )  {         for  (  Iterator<H Logger> i = children Map . values (  )  . iterator (  )  ;  i . has Next (  )  ;   )  {             H Logger child =  ( H Logger )  i . next (  )  ;              // tell child to handle parent level Int change             child . handle Parent Level Change ( effective Level )  ;          }     } }}
7778,"protected void notify State Change ( int old State, int new State,  Bundle extra Data ) {  Callback callback ;  for  (  Weak Reference< Callback> callback Weak Ref : state Changed Callback List )  {     callback = callback Weak Ref . get (  )  ;      if  ( null != callback )  {         callback . on Session State Change ( this, old State, new State, extra Data )  ;      } }}"
7779,"public static void refresh Monitored List (  ) {  Array List< String> permissions = get Granted Permissions (  )  ;   Set< String> set = new  Hash Set< String> (  )  ;  for  (  String perm : permissions )  {     set . add ( perm )  ;  } shared Preferences . edit (  )  . put String Set ( KEY_PREV_PERMISSIONS, set )  . apply (  )  ; }"
7780,"public  Identify remove (  String property,  String value ) { add To User Properties (  Constants . AMP_OP_REMOVE, property, value )  ;  return this ; }"
7781,"public static void init ( @ Non Null  Context context, @ Non Null  Glide Builder builder ) {  Glide . init ( context, builder )  ; }"
7782,"public static  Immutable Set< Posix File Permission> add Execute Permissions If Readable (  Set< Posix File Permission> permissions ) {  Immutable Set .  Builder< Posix File Permission> new Permissions =  Immutable Set . builder (  )  ;  //  The new permissions are a superset of the current ones .  new Permissions . add All ( permissions )  ;  // execute permission .  for  (  Immutable Map .  Entry< Posix File Permission,  Posix File Permission> ent : READ_TO_EXECUTE_MAP . entry Set (  )  )  {     if  ( permissions . contains ( ent . get Key (  )  )  )  {         new Permissions . add ( ent . get Value (  )  )  ;      } } return new Permissions . build (  )  ; }"
7783,void enter Rule Context (  ) { this . in Rule Context = true ; }
7784,"private static void get Purchase Information (  Context context,  String notify Id ) { final long nonce =  Security . generate Nonce (  )  ;   Billing Service . get Purchase Information ( context, new  String [  ]  { notify Id }, nonce )  ; }"
7785,"public com . anychart . core .  State Settings median Stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . median Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7786,"public static  String get Output OOB Action Description ( final  Output OOB Action type ) { switch ( type )  {     case NO_OUTPUT:         return "" Not  Supported"" ;      case BLINK:         return "" Blink"" ;      case BEEP:         return "" Beep"" ;      case VIBRATE:         return "" Vibrate"" ;      case OUTPUT_NUMERIC:         return "" Output  Numeric"" ;      case OUTPUT_ALPHA_NUMERIC:         return "" Output  Alpha  Numeric"" ;      default:         return "" Unknown"" ;  }}"
7787,"public final void is In Order (  ) { throw new  Class Cast Exception ( "" Protos do not implement  Comparable, so you must supply a  Comparator . "" )  ; }"
7788,"protected static void write (  Annotated Output out, short c0, short c1, short c2, short c3 ) { out . write Short ( c0 )  ;  out . write Short ( c1 )  ;  out . write Short ( c2 )  ;  out . write Short ( c3 )  ; }"
7789,public  Share Open Graph Action get Action (  ) { return this . action ; }
7790,"public void share With Linked In (  String caption Or Options,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Linked In ( %s, %s )  ; "", wrap Quotes ( caption Or Options ) , wrap Quotes ( description )  )  )  ; }"
7791,"public void put (  Push Certificate cert,  Person Ident ident,  Collection< Receive Command> matching ) { pending . add ( new  Pending Cert ( cert, ident, matching )  )  ; }"
7792,"public int get Orientation (  )  throws IO Exception{ final int magic Number = reader . get U Int16 (  )  ;  if  ( !handles ( magic Number )  )  {     if  (  Log . is Loggable ( TAG,  Log . DEBUG )  )  {          Log . d ( TAG, "" Parser doesn't handle magic number: "" + magic Number )  ;      }     return UNKNOWN_ORIENTATION ;  } else {     int exif Segment Length = move To Exif Segment And Get Length (  )  ;      if  ( exif Segment Length == -1 )  {         if  (  Log . is Loggable ( TAG,  Log . DEBUG )  )  {              Log . d ( TAG, "" Failed to parse exif segment length, or exif segment not found"" )  ;          }         return UNKNOWN_ORIENTATION ;      }     byte [  ]  exif Data = new byte [ exif Segment Length ]  ;      return parse Exif Segment ( exif Data, exif Segment Length )  ;  }}"
7793,"public com . anychart . core .  State Settings normal (  ) { return new com . anychart . core .  State Settings ( js Base + "" . normal (  ) "" )  ; }"
7794,"private  View fill From Top ( int next Top ) { m First Position =  Math . min ( m First Position, m Item Count - 1 )  ;  if  ( m First Position < 0 )  {     m First Position = 0 ;  } return fill Down ( m First Position, next Top )  ; }"
7795,"public  Identify unset (  String property ) { add To User Properties (  Constants . AMP_OP_UNSET, property, ""-"" )  ;  return this ; }"
7796,public void set Is Touch Wiget Full ( boolean is Touch Wiget Full ) { this . m Is Touch Wiget Full = is Touch Wiget Full ; }
7797,private boolean is Battery Level Characteristic ( @ Nullable final  Bluetooth Gatt Characteristic characteristic ) { return characteristic != null &&  Ble Manager . BATTERY_LEVEL_CHARACTERISTIC . equals ( characteristic . get Uuid (  )  )  ; }
7798,"public com . anychart . core . venn .  Intersections stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7799,public int get Selected Item Count (  ) { return selected Photos . size (  )  ; }
7800,protected boolean should Start Gesture (  ) { return true ; }
7801,public boolean get Save Cookies (  ) { return save Cookies ; }
7802,public boolean has Child ( @ Non Null  String path ) { if  ( query . get Parent (  )  == null )  {      Validation . validate Root Path String ( path )  ;  } else {      Validation . validate Path String ( path )  ;  } return !node . get Node (  )  . get Child ( new  Path ( path )  )  . is Empty (  )  ; }
7803,"public com . anychart . charts .  Circular Gauge bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
7804,"public  Basic Model With Attribute_ on Visibility Changed (  On Model Visibility Changed Listener< Basic Model With Attribute_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
7805,"Listenable Future< Immutable List< Target Node Maybe Incompatible>> get All Requested Target Nodes Job (  Cell cell,  Abs Path build File,  Optional< Target Configuration> global Target Configuration ) {  Settable Future< Immutable List< Target Node Maybe Incompatible>> future =  Settable Future . create (  )  ;   Pair< Abs Path,  Optional< Target Configuration>> path Cache Key = new  Pair<> ( build File, global Target Configuration )  ;   Listenable Future< Immutable List< Target Node Maybe Incompatible>> cached Future = all Node Cache . put If Absent ( path Cache Key, future )  ;  if  ( cached Future != null )  {     return cached Future ;  } try {      Listenable Future< List< Target Node Maybe Incompatible>> all Nodes List Job =  Futures . transform Async ( unconfigured Target Node Pipeline . get All Nodes Job ( cell, build File ) ,  all To Convert -> {         if  ( shutting Down (  )  )  {             return  Futures . immediate Cancelled Future (  )  ;          }          Immutable List .  Builder< Listenable Future< Target Node Maybe Incompatible>> all Node Jobs =  Immutable List . builder With Expected Size ( all To Convert . size (  )  )  ;          for  (  Unconfigured Target Node from : all To Convert )  {              Listenable Future< Target Node Maybe Incompatible> target Node = configure Requested Target ( cell, from . get Build Target (  ) , global Target Configuration, from )  ;              all Node Jobs . add ( target Node )  ;          }         return  Futures . all As List ( all Node Jobs . build (  )  )  ;      }, executor Service )  ;      future . set Future (  Futures . transform ( all Nodes List Job,  Immutable List::copy Of, executor Service )  )  ;  } catch  (  Throwable t )  {     future . set Exception ( t )  ;  } return future ; }"
7806,public static  Immutable Set< Class<? extends  Annotation>> annotations For (  Iterable< Component Kind> kinds ) { return stream ( kinds )  . map (  Component Kind::annotation )  . collect ( to Immutable Set (  )  )  ; }
7807,"int find Min ( int index, int len ) { if  ( index >= size )  {     return -1 ;  } check State ( index > 0 )  ;  int limit =  Math . min ( index, size - len )  + len ;  int min Index = index ;  for  ( int i = index + 1 ;  i < limit ;  i++ )  {     if  ( compare Elements ( i, min Index )  < 0 )  {         min Index = i ;      } } return min Index ; }"
7808,public  String get Text Content (  ) { return m Component . get Text Content (  )  ; }
7809,"public  Immersion Bar status Bar Alpha ( @ Float Range ( from = 0f, to = 1f )  float status Alpha ) { m Bar Params . status Bar Alpha = status Alpha ;  m Bar Params . status Bar Temp Alpha = status Alpha ;  return this ; }"
7810,"public static void show Tooltip On Root Component (  Component Context c,  Litho Tooltip litho Tooltip, int x Offset, int y Offset ) { show Tooltip ( c, litho Tooltip, null, x Offset, y Offset )  ; }"
7811,public static synchronized void remove Listener ( I Listener listener ) { if  ( listener == null )  {     return ;  } s Listeners . remove ( listener )  ;  check Un Hook (  )  ; }
7812,"public  Map< String,  Integer> get Value To Key (  ) { return value To Key ; }"
7813,"public void set Surface Texture (  Surface Texture surface Texture ) { throw new  Unsupported Operation Exception ( "" Changing  Surface Texture is not supported"" )  ; }"
7814,"public static  First Want from Line (  String line )  throws  Pack Protocol Exception{  String want Line ;   Set< String> capabilities ;   String agent = null ;  if  ( line . length (  )  > 45 )  {      String opt = line . substring ( 45 )  ;      if  ( !opt . starts With ( "" "" )  )  {         //$NON-NLS-1$         throw new  Pack Protocol Exception ( J Git Text . get (  )  . want No Space With Capabilities )  ;      }     opt = opt . substring ( 1 )  ;       Hash Set< String> opts = new  Hash Set<> (  )  ;      for  (  String client Capability : opt . split ( "" "" )  )  {         //$NON-NLS-1$         if  ( client Capability . starts With ( AGENT_PREFIX )  )  {             agent = client Capability . substring ( AGENT_PREFIX . length (  )  )  ;          } else {             opts . add ( client Capability )  ;          }     }     want Line = line . substring ( 0, 45 )  ;      capabilities =  Collections . unmodifiable Set ( opts )  ;  } else {     want Line = line ;      capabilities =  Collections . empty Set (  )  ;  } return new  First Want ( want Line, capabilities, agent )  ; }"
7815,"public void test Get Receiver Type Of Static Is Null (  )  throws IO Exception{ compile (  Joiner . on ( '\n' )  . join ( ""class  Foo {"", ""  static void foo (  )  { }"", ""}"" )  )  ;   Executable Element element = find Method ( ""foo"", elements . get Type Element ( "" Foo"" )  )  ;   Type Mirror receiver Type = element . get Receiver Type (  )  ;  assert Null ( receiver Type )  ; }"
7816,"public static int get Real Position ( boolean is Increase, int position, int real Count ) { if  ( !is Increase )  {     return position ;  } int real Position ;  if  ( position == 0 )  {     real Position = real Count - 1 ;  } else if  ( position == real Count + 1 )  {     real Position = 0 ;  } else {     real Position = position - 1 ;  } return real Position ; }"
7817,public static int get Action Bar Height ( @ Non Null  Activity activity ) {  Bar Config config = new  Bar Config ( activity )  ;  return config . get Action Bar Height (  )  ; }
7818,"public  Mesh Part set ( final  String id, final  Mesh mesh, final int offset, final int size, final int type ) { this . id = id ;  this . mesh = mesh ;  this . offset = offset ;  this . size = size ;  this . primitive Type = type ;  this . center . set ( 0, 0, 0 )  ;  this . half Extents . set ( 0, 0, 0 )  ;  this . radius = -1f ;  return this ; }"
7819,"private long get Page Size (  ) { return query ( ""PRAGMA page_size"" )  . first Value (  row -> row . get Long ( 0 )  )  ; }"
7820,"public com . anychart . core . cartesian . series .  Column3d stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
7821,"public final void contains Key ( @ Nullable  Object key ) { check ( ""key Set (  ) "" )  . that ( actual . key Set (  )  )  . contains ( key )  ; }"
7822,"public void get Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Index (  )  ; "" )  ; }"
7823,"public void choose ( T item ) { if  ( item == null )      throw new  Illegal Argument Exception ( ""item cannot be null . "" )  ;  if  ( is Disabled )      return ;  snapshot (  )  ;  try {     if  (  ( toggle || UI Utils . ctrl (  )  )  && selected . contains ( item )  )  {         if  ( required && selected . size == 1 )              return ;          selected . remove ( item )  ;          last Selected = null ;      } else {         boolean modified = false ;          if  ( !multiple ||  ( !toggle && !UI Utils . ctrl (  )  )  )  {             if  ( selected . size == 1 && selected . contains ( item )  )                  return ;              modified = selected . size > 0 ;              selected . clear ( 8 )  ;          }         if  ( !selected . add ( item )  && !modified )              return ;          last Selected = item ;      }     if  ( fire Change Event (  )  )          revert (  )  ;      else         changed (  )  ;  } finally {     cleanup (  )  ;  }}"
7824,"public static int reflection Compare (  Object lhs,  Object rhs, boolean compare Transients,  Class<?> reflect Up To Class,  String .  .  .  exclude Fields ) { if  ( lhs == rhs )  {     return 0 ;  } if  ( lhs == null || rhs == null )  {     throw new  Null Pointer Exception (  )  ;  }  Class<?> lhs Clazz = lhs . get Class (  )  ;  if  ( !lhs Clazz . is Instance ( rhs )  )  {     throw new  Class Cast Exception (  )  ;  }  Compare To Builder compare To Builder = new  Compare To Builder (  )  ;  reflection Append ( lhs, rhs, lhs Clazz, compare To Builder, compare Transients, exclude Fields )  ;  while  ( lhs Clazz . get Superclass (  )  != null && lhs Clazz != reflect Up To Class )  {     lhs Clazz = lhs Clazz . get Superclass (  )  ;      reflection Append ( lhs, rhs, lhs Clazz, compare To Builder, compare Transients, exclude Fields )  ;  } return compare To Builder . to Comparison (  )  ; }"
7825,"protected  Optional< Pre Include> get Pre Include (  ) { if  ( get Prefix Header (  )  . is Present (  )  )  {     return  Optional . of (  (  Cxx Prefix Header )  get Action Graph Builder (  )  . compute If Absent ( get Base Build Target (  )  . with Appended Flavors (  Cxx Prefix Header . FLAVOR ) ,  prefix Target -> new  Cxx Prefix Header ( prefix Target, get Project Filesystem (  ) ,  Immutable Sorted Set . of (  ) , get Prefix Header (  )  . get (  ) , get Path Resolver (  )  . get Absolute Path ( get Prefix Header (  )  . get (  )  )  )  )  )  ;  } if  ( get Precompiled Header (  )  . is Present (  )  )  {      Preconditions . check State ( get Precompiled Header (  )  . get (  )  instanceof  Build Target Source Path )  ;       Build Target Source Path header Path =  (  Build Target Source Path )  get Precompiled Header (  )  . get (  )  ;       Build Rule rule = get Action Graph Builder (  )  . require Rule ( header Path . get Target (  )  )  ;       Preconditions . check Argument ( rule instanceof  Cxx Precompiled Header Template )  ;      return  Optional . of (  (  Cxx Precompiled Header Template )  rule )  ;  } return  Optional . empty (  )  ; }"
7826,public void write (  Byte Array Output Stream tag Buffer ) { if  ( ! (  (  Paired Text Encoded String Null Terminated )  get Object (  Data Types . OBJ_TEXT )  )  . can Be Encoded (  )  )  {     this . set Text Encoding (  Text Encoding . UTF_16 )  ;  } super . write ( tag Buffer )  ; }
7827,public void set Messages Suppressed ( @ Non Null  Boolean are Messages Suppressed ) { this . are Messages Suppressed = are Messages Suppressed ; }
7828,"public static void e (  String msg ) { if  ( s Is Log Enabled )  {      Log . e ( s Application Tag, get Content ( get Current Stack Trace Element (  )  )  + ""\n>"" + msg )  ;  }}"
7829,"void setup Setter (  Class target Class ) { m Setter = setup Setter Or Getter ( target Class, s Setter Property Map, ""set"", m Value Type )  ; }"
7830,"protected final  Type Bearer result ( int n ) { if  ( n >= result Count )  {     throw new  Illegal Argument Exception ( ""n >= result Count"" )  ;  } try {     return results [ n ]  ;  } catch  (  Array Index Out Of Bounds Exception ex )  {     //  Translate the exception .      throw new  Illegal Argument Exception ( ""n < 0"" )  ;  }}"
7831,"public  Tree Node [  ]  get Path To Root (  Tree Node a Node ) { return get Path To Root ( a Node, 0 )  ; }"
7832,"public  Realm Async Task call Function Async (  String name,  List<?> args,  Class<T> result Class,  App .  Callback<T> callback ) { return call Function Async ( name, args, result Class, default Codec Registry, callback )  ; }"
7833,public  View get Footer View (  ) { return holder . get Footer (  )  ; }
7834,"public void write To Parcel (  Parcel out, int flags ) { out . write Int ( m Identifiers . size (  )  )  ;  for  (  Identifier identifier : m Identifiers )  {     out . write String ( identifier == null ? null : identifier . to String (  )  )  ;  } out . write Double ( get Distance (  )  )  ;  out . write Int ( m Rssi )  ;  out . write Int ( m Tx Power )  ;  out . write String ( m Bluetooth Address )  ;  out . write Int ( m Beacon Type Code )  ;  out . write Int ( m Service Uuid )  ;  out . write Int ( m Data Fields . size (  )  )  ;  for  (  Long data Field : m Data Fields )  {     out . write Long ( data Field )  ;  } out . write Int ( m Extra Data Fields . size (  )  )  ;  for  (  Long data Field : m Extra Data Fields )  {     out . write Long ( data Field )  ;  } out . write Int ( m Manufacturer )  ;  out . write String ( m Bluetooth Name )  ;  out . write String ( m Parser Identifier )  ;  out . write Byte (  ( byte )   ( m Multi Frame Beacon ? 1 : 0 )  )  ;  out . write Value ( m Running Average Rssi )  ;  out . write Int ( m Rssi Measurement Count )  ;  out . write Int ( m Packet Count )  ;  out . write Long ( m First Cycle Detection Timestamp )  ;  out . write Long ( m Last Cycle Detection Timestamp )  ; }"
7835,public void contains Any Of ( float [  ]  expected ) { contains Any In (  Floats . as List ( expected )  )  ; }
7836,"public static  Set Options merge Field Paths ( @ Non Null  List< Field Path> fields ) {  Set<com . google . firebase . firestore . model .  Field Path> field Paths = new  Hash Set<> (  )  ;  for  (  Field Path field : fields )  {     field Paths . add ( field . get Internal Path (  )  )  ;  } return new  Set Options ( true,  Field Mask . from Set ( field Paths )  )  ; }"
7837,public final void set TSUID (  String tsuid ) { this . tsuid = tsuid ; }
7838,"private byte [  ]  get Object Salted Decryption Key ( int obj Num, int obj Gen )  throws PDF Parse Exception{ byte [  ]  decryption Key Bytes ;  final  Message Digest md5 ;  try {     md5 = create MD5 Digest (  )  ;  } catch  (  No Such Algorithm Exception e )  {     // unexpected, as we will already have tested availability     throw new PDF Parse Exception ( "" Unable to get MD5 digester"", e )  ;  } md5 . update ( this . general Key Bytes )  ;  md5 . update (  ( byte )  obj Num )  ;  md5 . update (  ( byte )   ( obj Num >> 8 )  )  ;  md5 . update (  ( byte )   ( obj Num >> 16 )  )  ;  md5 . update (  ( byte )  obj Gen )  ;  md5 . update (  ( byte )   ( obj Gen >> 8 )  )  ;  if  ( encryption Algorithm ==  Encryption Algorithm . AESV2 )  {     md5 . update ( AESV2_SALT )  ;  } final byte [  ]  hash = md5 . digest (  )  ;  final int key Len = get Salted Content Key Byte Length (  )  ;  decryption Key Bytes = new byte [ key Len ]  ;   System . arraycopy ( hash, 0, decryption Key Bytes, 0, key Len )  ;  return decryption Key Bytes ; }"
7839,public static  String get String Value (  Buck Term Expression term Expression ) { return  Optional . of ( term Expression )  . map (  Buck Term Expression::get Factor Expression List )  . filter (  list -> list . size (  )  == 1 )  . map (  list -> list . get ( 0 )  )  . map (  Buck Psi Impl Util::get String Value )  . or Else ( null )  ; }
7840,private boolean is Measured (  ) { return m Is Measured . get (  )  && !m Requires Remeasure . get (  )  ; }
7841,"public  Builder set Max Views In Row ( @ Int Range ( from = 1 )  int max Views In Row ) { if  ( max Views In Row < 1 )      throw new  Illegal Argument Exception ( ""max Views In Row should be positive, but is = "" + max Views In Row )  ;   Chips Layout Manager . this . max Views In Row = max Views In Row ;  return this ; }"
7842,"public  Equivalence Tester<T> add Equivalence Group ( T first, T .  .  .  rest ) { add Equivalence Group (  Lists . as List ( first, rest )  )  ;  return this ; }"
7843,"public static byte [  ]  get Bytes From Stream (  Input Stream input Stream, int hint )  throws IO Exception{ //  Subclass  Byte Array Output Stream to avoid an extra byte [  ]  allocation and copy  Byte Array Output Stream byte Output = new  Byte Array Output Stream ( hint )  {     @ Override     public byte [  ]  to Byte Array (  )  {         //  Otherwise we have no choice but to copy .          if  ( count == buf . length )  {             return buf ;          } else {             return super . to Byte Array (  )  ;          }     } } ;   Byte Streams . copy ( input Stream, byte Output )  ;  return byte Output . to Byte Array (  )  ; }"
7844,public int download (  ) { on Start (  )  ;  int result Code = m Conn . connect (  )  ;  if  (  Sonic Constants . ERROR_CODE_SUCCESS != result Code )  {     on Error ( result Code )  ;      // error case     return result Code ;  } int response Code = m Conn . get Response Code (  )  ;  if  ( response Code != HTTP_OK )  {     on Error ( response Code )  ;      return response Code ;  } m Task . m Rsp Headers = m Conn . get Response Header Fields (  )  ;  if  ( get Response Stream ( m Task . m Was Intercept Invoked )  )  {     return  Sonic Constants . ERROR_CODE_SUCCESS ;  } return  Sonic Constants . ERROR_CODE_UNKNOWN ; }
7845,public  String get Signature (  ) { int index = iterator . u16bit At ( current Pos + 1 )  ;  return get Const Pool (  )  . get Fieldref Type ( index )  ; }
7846,public  Speculative Parsing get Speculative Parsing (  ) { return  Speculative Parsing . DISABLED ; }
7847,"public void write ( char [  ]  c, int off, int len ) { if  ( // off < 0 || // off > c . length || // len < 0 || // off + len > c . length || off + len < 0 )  {     throw new  Index Out Of Bounds Exception (  )  ;  } else if  ( len == 0 )  {     return ;  } int newcount = count + len ;  if  ( newcount > buf . length )  {     if  ( writer == null )  {         expand Capacity ( newcount )  ;      } else {         do {             int rest = buf . length - count ;               System . arraycopy ( c, off, buf, count, rest )  ;              count = buf . length ;              flush (  )  ;              len -= rest ;              off += rest ;          } while  ( len > buf . length )  ;          newcount = len ;      } }  System . arraycopy ( c, off, buf, count, len )  ;  count = newcount ; }"
7848,public static boolean is Insert Primary Key (  ) { return insert Primary Key ; }
7849,public final int get Build Version SDK (  ) { return  Build . VERSION . SDK_INT ; }
7850,"public void test To String (  ) {  Atomic Double Array aa = new  Atomic Double Array ( VALUES )  ;  assert Equals (  Arrays . to String ( VALUES ) , aa . to String (  )  )  ;  assert Equals ( "" [  ] "", new  Atomic Double Array ( 0 )  . to String (  )  )  ;  assert Equals ( "" [  ] "", new  Atomic Double Array ( new double [ 0 ]  )  . to String (  )  )  ; }"
7851,public boolean delivery Metrics Export To Big Query Enabled (  ) { return is Delivery Metrics Export To Big Query Enabled (  )  ; }
7852,"public com . anychart . charts .  Cartesian select Marquee Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7853,"public void adjust Font Size (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . adjust Font Size (  )  ; "" )  ; }"
7854,"public static  Tree Filter create (  Tree Filter a,  Tree Filter b ) { if  ( a == ALL )      return b ;  if  ( b == ALL )      return a ;  return new  Binary ( a, b )  ; }"
7855,public void add (  Leaf Atom atom ) { leaf Children . add ( atom )  ; }
7856,"protected synchronized  Path get Outline ( int glyph Id, float width ) { // find the glyph itself  Glyf Table glyf =  (  Glyf Table )  font . get Table ( ""glyf"" )  ;   Glyf g = glyf . get Glyph ( glyph Id )  ;   Path gp = null ;  if  ( g instanceof  Glyf Simple )  {     gp = render Simple Glyph (  (  Glyf Simple )  g )  ;  } else if  ( g instanceof  Glyf Compound )  {     gp = render Compound Glyph ( glyf,  (  Glyf Compound )  g )  ;  } else {     gp = new  Path (  )  ;  } // calculate the advance  Hmtx Table hmtx =  (  Hmtx Table )  font . get Table ( ""hmtx"" )  ;  float advance =  ( float )  hmtx . get Advance ( glyph Id )  /  ( float )  units Per Em ;  // scale the glyph to match the desired advance float widthfactor = width / advance ;  // the base transform scales the glyph to 1x1  Matrix at = new  Matrix (  )  ;  at . set Scale ( 1 / units Per Em, 1 / units Per Em )  ;   Matrix tmp = new  Matrix (  )  ;  tmp . set Scale ( widthfactor, 1 )  ;  at . pre Concat ( tmp )  ;  gp . transform ( at )  ;  return gp ; }"
7857,"public com . anychart . core . axes .  Stock Date Time labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7858,"public void get Pixel Point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Pixel Point Width (  )  ; "" )  ; }"
7859,"public static  Typeface ostrich Black (  Context context ) { return  Font Source Processor . process ( R . raw . ostrich_black, context )  ; }"
7860,"public void render Axis Labels (  Canvas c ) { if  ( !m Y Axis . is Enabled (  )  || !m Y Axis . is Draw Labels Enabled (  )  )      return ;  float [  ]  positions = get Transformed Positions (  )  ;  m Axis Label Paint . set Typeface ( m Y Axis . get Typeface (  )  )  ;  m Axis Label Paint . set Text Size ( m Y Axis . get Text Size (  )  )  ;  m Axis Label Paint . set Color ( m Y Axis . get Text Color (  )  )  ;  m Axis Label Paint . set Text Align (  Align . CENTER )  ;  float base Y Offset =  Utils . convert Dp To Pixel ( 2 . 5f )  ;  float text Height =  Utils . calc Text Height ( m Axis Label Paint, ""Q"" )  ;   Axis Dependency dependency = m Y Axis . get Axis Dependency (  )  ;  Y Axis Label Position label Position = m Y Axis . get Label Position (  )  ;  float y Pos = 0f ;  if  ( dependency ==  Axis Dependency . LEFT )  {     if  ( label Position == Y Axis Label Position . OUTSIDE_CHART )  {         y Pos = m View Port Handler . content Top (  )  - base Y Offset ;      } else {         y Pos = m View Port Handler . content Top (  )  - base Y Offset ;      } } else {     if  ( label Position == Y Axis Label Position . OUTSIDE_CHART )  {         y Pos = m View Port Handler . content Bottom (  )  + text Height + base Y Offset ;      } else {         y Pos = m View Port Handler . content Bottom (  )  + text Height + base Y Offset ;      } } draw Y Labels ( c, y Pos, positions, m Y Axis . get Y Offset (  )  )  ; }"
7861,"private int [  ]  get Entered Time (  Boolean [  ]  entered Zeros ) { int am Or Pm = -1 ;  int start Index = 1 ;  if  ( !m Is24 Hour Mode && is Typed Time Fully Legal (  )  )  {     int key Code = m Typed Times . get ( m Typed Times . size (  )  - 1 )  ;      if  ( key Code == get Am Or Pm Key Code ( AM )  )  {         am Or Pm = AM ;      } else if  ( key Code == get Am Or Pm Key Code ( PM )  )  {         am Or Pm = PM ;      }     start Index = 2 ;  } int minute = -1 ;  int hour = -1 ;  for  ( int i = start Index ;  i <= m Typed Times . size (  )  ;  i++ )  {     int val = get Val From Key Code ( m Typed Times . get ( m Typed Times . size (  )  - i )  )  ;      if  ( i == start Index )  {         minute = val ;      } else if  ( i == start Index + 1 )  {         minute += 10 * val ;          if  ( entered Zeros != null && val == 0 )  {             entered Zeros [ 1 ]  = true ;          }     } else if  ( i == start Index + 2 )  {         hour = val ;      } else if  ( i == start Index + 3 )  {         hour += 10 * val ;          if  ( entered Zeros != null && val == 0 )  {             entered Zeros [ 0 ]  = true ;          }     } } int [  ]  ret = { hour, minute, am Or Pm } ;  return ret ; }"
7862,public static long create Row (  Table table ) { return native Create Row ( table . get Native Ptr (  )  )  ; }
7863,"public com . anychart . core . resource .  Grid horizontal Stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . horizontal Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7864,"public void show (  User selected Assignee ) { assignee Single . subscribe (  collaborators -> {     int checked = -1 ;      if  ( selected Assignee != null )  {         for  ( int i = 0 ;  i < collaborators . size (  )  ;  i++ )  {             if  ( selected Assignee . login (  )  . equals ( collaborators . get ( i )  . login (  )  )  )  {                 checked = i ;              }         }     }      Assignee Dialog Fragment . show ( activity, request Code, activity . get String ( R . string . select_assignee ) , null, new  Array List<> ( collaborators ) , checked )  ;  },  error -> {      Log . d ( TAG, "" Exception loading collaborators"", error )  ;       Toast Utils . show ( activity, R . string . error_collaborators_load )  ;  } )  ; }"
7865,"private synchronized void update State (  Loading State new State ) { if  ( m Ignore Loading Updates )  {     return ;  } if  ( m Last State != new State )  {     m Last State = new State ;       Recycler Collection Component . update Loading State Async ( m Component Context, new State )  ;  }}"
7866,"public com . anychart . graphics . vector .  Pattern Fill icon Hatch Fill (  ) { return new com . anychart . graphics . vector .  Pattern Fill ( js Base + "" . icon Hatch Fill (  ) "" )  ; }"
7867,"private void lazy Init (  ) { if  ( lazy Inited . compare And Set ( false, true )  && file Length <  Long . MAX_VALUE )  {     debug ( "" Starting lazy init of additional decoders"" )  ;       Thread thread = new  Thread (  )  {         @ Override         public void run (  )  {             while  ( decoder Pool != null && allow Additional Decoder ( decoder Pool . size (  ) , file Length )  )  {                 // them being initialised while the pool is being recycled .                  try {                     if  ( decoder Pool != null )  {                         long start =  System . current Time Millis (  )  ;                          debug ( "" Starting decoder"" )  ;                          initialise Decoder (  )  ;                          long end =  System . current Time Millis (  )  ;                          debug ( "" Started decoder, took "" +  ( end - start )  + ""ms"" )  ;                      }                 } catch  (  Exception e )  {                     // A decoder has already been successfully created so we can ignore this                     debug ( "" Failed to start decoder: "" + e . get Message (  )  )  ;                  }             }         }     } ;      thread . start (  )  ;  }}"
7868,"public long get Sessions Cpu Capture Frequency Foreground Ms (  ) { //  Order of precedence is: // 1 .   If the value exists in  Android  Manifest, return this value .  // 2 .   If the value exists through  Firebase  Remote  Config, cache and return this value .  // 3 .   If the value exists in device cache, return this value .  // 4 .   Otherwise, return default value .   Sessions Cpu Capture Frequency Foreground Ms config =  Sessions Cpu Capture Frequency Foreground Ms . get Instance (  )  ;  // 1 .   Reads value in  Android  Manifest  ( it is set by developers during build time )  .   Optional< Long> metadata Value = get Metadata Long ( config )  ;  if  ( metadata Value . is Available (  )  && is Gauge Capture Frequency Ms Valid ( metadata Value . get (  )  )  )  {     return metadata Value . get (  )  ;  } // 2 .   Reads value from  Firebase  Remote  Config, saves this value in cache layer if valid .   Optional< Long> rc Value = get Remote Config Long ( config )  ;  if  ( rc Value . is Available (  )  && is Gauge Capture Frequency Ms Valid ( rc Value . get (  )  )  )  {     device Cache Manager . set Value ( config . get Device Cache Flag (  ) , rc Value . get (  )  )  ;      return rc Value . get (  )  ;  } // 3 .   Reads value from cache layer .   Optional< Long> device Cache Value = get Device Cache Long ( config )  ;  if  ( device Cache Value . is Available (  )  && is Gauge Capture Frequency Ms Valid ( device Cache Value . get (  )  )  )  {     return device Cache Value . get (  )  ;  } // 4 .   Returns default value if there is no valid value from above approaches .  return config . get Default (  )  ; }"
7869,RULE_KEY get From Cache (  Build Engine Action action ) { return null ; }
7870,"public void save (  )  throws IO Exception,  Tag Exception{ save ( this . file )  ; }"
7871,"public void write Split Source Buffer Left (  ) { int write Size = SEGMENT_SIZE / 2 + 1 ;   Buffer sink = new  Buffer (  )  ;  sink . write Utf8 ( repeat ( ""b"", SEGMENT_SIZE - 10 )  )  ;   Buffer source = new  Buffer (  )  ;  source . write Utf8 ( repeat ( ""a"", SEGMENT_SIZE * 2 )  )  ;  sink . write ( source, write Size )  ;  assert Equals ( as List ( SEGMENT_SIZE - 10, write Size ) , segment Sizes ( sink )  )  ;  assert Equals ( as List ( SEGMENT_SIZE - write Size, SEGMENT_SIZE ) , segment Sizes ( source )  )  ; }"
7872,"public void initialize (  Body body A,  Body body B,  Vector2 anchor ) { this . body A = body A ;  this . body B = body B ;  local Anchor A . set ( body A . get Local Point ( anchor )  )  ;  local Anchor B . set ( body B . get Local Point ( anchor )  )  ; }"
7873,"public static void clear ( final boolean is Commit ) { clear ( is Commit, get Default SP Utils (  )  )  ; }"
7874,"private  Array List< Rect> calculate All Bounds (  Paint paint ) {  Array List< Rect> list = new  Array List< Rect> (  )  ;  //  For each views  (  If no values then add a fake one )  int count =  ( view Flow != null && view Flow . get Adapter (  )  != null )  ? view Flow . get Adapter (  )  . get Count (  )  : 1 ;  for  ( int i Loop = 0 ;  i Loop < count ;  i Loop++ )  {      Rect bounds = calc Bounds ( i Loop, paint )  ;      int w =  ( bounds . right - bounds . left )  ;      int h =  ( bounds . bottom - bounds . top )  ;      bounds . left =  ( get Width (  )  / 2 )  -  ( w / 2 )  - current Scroll +  ( i Loop * get Width (  )  )  ;      bounds . right = bounds . left + w ;      bounds . top = 0 ;      bounds . bottom = h ;      list . add ( bounds )  ;  } return list ; }"
7875,"public com . anychart . charts .  Heat Map x Axis (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Axis ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
7876,public  Provider Info [  ]  get Providers (  ) { return m Providers By Name . values (  )  . to Array ( new  Provider Info [ 0 ]  )  ; }
7877,"public boolean max Value ( int value, int max ) { return  ( value <= max )  ; }"
7878,"private int find End Of First Ts Packet In Buffer (  )  throws  Parser Exception{ int search Start = ts Packet Buffer . get Position (  )  ;  int limit = ts Packet Buffer . limit (  )  ;  int sync Byte Position =  Ts Util . find Sync Byte Position ( ts Packet Buffer . data, search Start, limit )  ;  //  Discard all bytes before the sync byte .  //  If sync byte is not found, this means discard the whole buffer .  ts Packet Buffer . set Position ( sync Byte Position )  ;  int end Of Packet = sync Byte Position + TS_PACKET_SIZE ;  if  ( end Of Packet > limit )  {     bytes Since Last Sync += sync Byte Position - search Start ;      if  ( mode == MODE_HLS && bytes Since Last Sync > TS_PACKET_SIZE * 2 )  {         throw new  Parser Exception ( "" Cannot find sync byte .   Most likely not a  Transport  Stream . "" )  ;      } } else {     //  We have found a packet within the buffer .      bytes Since Last Sync = 0 ;  } return end Of Packet ; }"
7879,protected void on Audio Session Id ( int audio Session Id ) {//  Do nothing . }
7880,public  Class<?> [  ]  get Target Implements (  ) { return target Implements == null ? null :  (  Class [  ]  )  target Implements . clone (  )  ; }
7881,"public  List<T> peek ( int max )  throws IO Exception{ int end =  Math . min ( max, size (  )  )  ;   List<T> sub List = new  Array List<T> ( end )  ;   Iterator<T> iterator = iterator (  )  ;  for  ( int i = 0 ;  i < end ;  i++ )  {     sub List . add ( iterator . next (  )  )  ;  } return  Collections . unmodifiable List ( sub List )  ; }"
7882,"public void add Request Listener (  String url,  Progress Listener listener ) { check Not Null ( url, ""url cannot be null"" )  ;  check Not Null ( listener, ""listener cannot be null"" )  ;   List< Progress Listener> progress Listeners ;  synchronized  (  Progress Manager . class )  {     progress Listeners = m Request Listeners . get ( url )  ;      if  ( progress Listeners == null )  {         progress Listeners = new  Linked List<> (  )  ;          m Request Listeners . put ( url, progress Listeners )  ;      } } progress Listeners . add ( listener )  ; }"
7883,"public int count Ready Jobs (  ) { assert Not In Main Thread (  )  ;  assert Not In Job Manager Thread ( "" Cannot call count Ready Jobs sync method on  Job Manager's thread"" )  ;   Public Query Message message = message Factory . obtain (  Public Query Message . class )  ;  message . set (  Public Query Message . COUNT_READY, null )  ;  return new  Int Query Future<> ( message Queue, message )  . get Safe (  )  ; }"
7884,"public void test Conflict At End (  )  throws IO Exception{ assert Equals ( t ( ""abcdefghi<Z=Y>"" ) , merge ( ""abcdefghij"", ""abcdefghi Z"", ""abcdefghi Y"" )  )  ; }"
7885,"public void test Set Splash Activities (  ) { final  String splash Activities = ""com . tencent . matrix .  Splash Activity1 ; com . tencent . matrix .  Splash Activity2"" ;  // 设置  Trace Config config = new  Trace Config .  Builder (  )  . dynamic Config ( new  Mock Dynamic Config (  )  {     @ Override     public  String get (  String key,  String def Str )  {         if  ( I Dynamic Config .  Expt Enum . clicfg_matrix_trace_care_scene_set . name (  )  . equals Ignore Case ( key )  )  {             return splash Activities ;          }         return super . get ( key, def Str )  ;      } } )  . build (  )  ;   Set< String> activities = config . get Splash Activities (  )  ;  assert Not Null ( activities )  ;  assert Equals ( 2, activities . size (  )  )  ;  assert True ( activities . contains ( ""com . tencent . matrix .  Splash Activity1"" )  )  ;  assert True ( activities . contains ( ""com . tencent . matrix .  Splash Activity2"" )  )  ; }"
7886,public void set Icon Max Width ( int width ) { max Icon Width = width ; }
7887,public int get Result Code (  ) { return result Code ; }
7888,"public static  Fluent Iterable<T> concat (  Iterable<? extends T> .  .  .  inputs ) { return concat No Defensive Copy (  Arrays . copy Of ( inputs, inputs . length )  )  ; }"
7889,"static  Optional Int get Valid Web Server Port (  Buck Config config ) { //  Enable the web httpserver if it is given by command line parameter or specified in //  . buckconfig .   The presence of a nonnegative port number is sufficient .   Optional< String> server Port =  Optional . of Nullable (  System . get Property ( ""buck . httpserver . port"" )  )  ;  if  ( !server Port . is Present (  )  )  {     server Port = config . get Value ( ""httpserver"", ""port"" )  ;  } if  ( !server Port . is Present (  )  || server Port . get (  )  . is Empty (  )  )  {     return  Optional Int . empty (  )  ;  }  String raw Port = server Port . get (  )  ;  int port ;  try {     port =  Integer . parse Int ( raw Port, 10 )  ;  } catch  (  Number Format Exception e )  {     LOG . error ( "" Could not parse port for httpserver: %s . "", raw Port )  ;      return  Optional Int . empty (  )  ;  } return port >= 0 ?  Optional Int . of ( port )  :  Optional Int . empty (  )  ; }"
7890,public long get Cancelled Requests (  ) { return m Cancelled Requests ; }
7891,"public void test Invoke Any Impl (  )  throws  Exception{  Listening Executor Service e = new Direct Executor Service (  )  ;  try {      List< Callable< String>> l = new  Array List<> (  )  ;      l . add ( new  String Task (  )  )  ;      l . add ( new  String Task (  )  )  ;       String result = invoke Any Impl ( e, l, false, 0,  Time Unit . NANOSECONDS )  ;      assert Same ( TEST_STRING, result )  ;  } finally {     join Pool ( e )  ;  }}"
7892,public static void set Flush Behavior (  Flush Behavior flush Behavior ) {  App Events Logger Impl . set Flush Behavior ( flush Behavior )  ; }
7893,"private static void assert Close ( float expected, float actual ) { assert Equals ( expected, actual, expected * 0 . 01f )  ; }"
7894,final boolean advance (  ) { check State ( !successor Iterator . has Next (  )  )  ;  if  ( !node Iterator . has Next (  )  )  {     return false ;  } node = node Iterator . next (  )  ;  successor Iterator = graph . successors ( node )  . iterator (  )  ;  return true ; }
7895,"public static  String encode High Level (  String msg,  Symbol Shape Hint shape,  Dimension min Size,  Dimension max Size ) { //the codewords 0 .  . 255 are encoded as  Unicode characters  Encoder [  ]  encoders = { new ASCII Encoder (  ) , new C40 Encoder (  ) , new  Text Encoder (  ) , new X12 Encoder (  ) , new  Edifact Encoder (  ) , new  Base256 Encoder (  )  } ;   Encoder Context context = new  Encoder Context ( msg )  ;  context . set Symbol Shape ( shape )  ;  context . set Size Constraints ( min Size, max Size )  ;  if  ( msg . starts With ( MACRO_05_HEADER )  && msg . ends With ( MACRO_TRAILER )  )  {     context . write Codeword ( MACRO_05 )  ;      context . set Skip At End ( 2 )  ;      context . pos += MACRO_05_HEADER . length (  )  ;  } else if  ( msg . starts With ( MACRO_06_HEADER )  && msg . ends With ( MACRO_TRAILER )  )  {     context . write Codeword ( MACRO_06 )  ;      context . set Skip At End ( 2 )  ;      context . pos += MACRO_06_HEADER . length (  )  ;  } // Default mode int encoding Mode = ASCII_ENCODATION ;  while  ( context . has More Characters (  )  )  {     encoders [ encoding Mode ]  . encode ( context )  ;      if  ( context . get New Encoding (  )  >= 0 )  {         encoding Mode = context . get New Encoding (  )  ;          context . reset Encoder Signal (  )  ;      } } int len = context . get Codeword Count (  )  ;  context . update Symbol Info (  )  ;  int capacity = context . get Symbol Info (  )  . get Data Capacity (  )  ;  if  ( len < capacity && encoding Mode != ASCII_ENCODATION && encoding Mode != BASE256_ENCODATION && encoding Mode != EDIFACT_ENCODATION )  {     // Unlatch  ( 254 )      context . write Codeword ( 'þ' )  ;  } // Padding  String Builder codewords = context . get Codewords (  )  ;  if  ( codewords . length (  )  < capacity )  {     codewords . append ( PAD )  ;  } while  ( codewords . length (  )  < capacity )  {     codewords . append ( randomize253 State ( codewords . length (  )  + 1 )  )  ;  } return context . get Codewords (  )  . to String (  )  ; }"
7896,public boolean is Empty (  ) { return fields . size (  )  <= 1 ; }
7897,"public static int fetch Resource Id By Name (  String plugin Name,  String res Type And Name ) {  Package Info pi = fetch Package Info ( plugin Name )  ;  if  ( pi == null )  {     // 插件没有找到     if  (  Log Debug . LOG )  {          Log Debug . e ( TAG, ""fetch Resource Id By Name:  Plugin not found .  pn="" + plugin Name + "" ;  res Name="" + res Type And Name )  ;      }     return 0 ;  }  Resources res = fetch Resources ( plugin Name )  ;  if  ( res == null )  {     // 不太可能出现此问题，同样为插件没有找到     if  (  Log Debug . LOG )  {          Log Debug . e ( TAG, ""fetch Resource Id By Name:  Plugin not found  ( fetch Resources )  .  pn="" + plugin Name + "" ;  res Name="" + res Type And Name )  ;      }     return 0 ;  } //  Identifier的第一个参数想要的是： //  [ 包名 ] : [ 类型名 ] / [ 资源名 ] 。其中 [ 类型名 ] / [ 资源名 ] 就是 res Type And Name 参数 // 例如：com . qihoo360 . replugin . sample . demo2:layout/from_demo1  String id Key = pi . package Name + "":"" + res Type And Name ;  return res . get Identifier ( id Key, null, null )  ; }"
7898,public void on Resume (  ) { super . on Resume (  )  ;  _master Frag . observe Results ( _stored Ints Flowable )  ; }
7899,"public void resume (  ) { //  This must be safe to call multiple times  Util . validate Main Thread (  )  ;   Log . d ( TAG, ""resume (  ) "" )  ;  // init Camera (  )  does nothing if called twice, but does log a warning init Camera (  )  ;  if  ( current Surface Size != null )  {     //  The activity was paused but not stopped, so the surface still exists .   Therefore     // surface Created (  )  won't be called, so init the camera here .      start Preview If Ready (  )  ;  } else if  ( surface View != null )  {     //  Install the callback and wait for surface Created (  )  to init the camera .      surface View . get Holder (  )  . add Callback ( surface Callback )  ;  } else if  ( texture View != null )  {     if  ( texture View . is Available (  )  )  {         surface Texture Listener (  )  . on Surface Texture Available ( texture View . get Surface Texture (  ) , texture View . get Width (  ) , texture View . get Height (  )  )  ;      } else {         texture View . set Surface Texture Listener ( surface Texture Listener (  )  )  ;      } } //  To trigger surface Sized again request Layout (  )  ;  rotation Listener . listen ( get Context (  ) , rotation Callback )  ; }"
7900,"public com . anychart . core . lineargauge . pointers .  Tank unhover (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . unhover (  )  ; "" )  ;  return this ; }"
7901,"public void deviation (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . deviation (  )  ; "" )  ; }"
7902,"public com . anychart . core . cartesian . series .  Area3d bounds (  String x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
7903,public int get Mask Color (  ) { return m Mask Color ; }
7904,public  List< Wifi Usability Score> get Usability Scores (  ) { synchronized  ( usability Scores )  {     return  Immutable List . copy Of ( usability Scores )  ;  }}
7905,"public static  Immutable Sorted Set<E> of ( E e1, E e2, E e3, E e4 ) { throw new  Unsupported Operation Exception (  )  ; }"
7906,"public com . anychart . core . annotations .  Triangle color (  String color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color ( %s )  ; "", wrap Quotes ( color )  )  )  ;  return this ; }"
7907,"private void reset With Hole (  ) {  List<E> container = new  Array List<E> (  )  ;  container . add All (  Collections . n Copies ( a . get Count (  ) , a . get Element (  )  )  )  ;  container . add All (  Collections . n Copies ( c . get Count (  ) , c . get Element (  )  )  )  ;  super . reset Container ( get Subject Generator (  )  . create ( container . to Array (  )  )  )  ;  sorted Multiset =  (  Sorted Multiset<E> )  get Multiset (  )  ; }"
7908,protected int get View Type (  ) { return 0 ; }
7909,"Authentication Result get Access Token (  )  throws  Authentication Exception{ //  If m Token Cache Accessor is null, won't handle with token cache lookup .  final  String method Name = "":get Access Token"" ;  if  ( m Token Cache Accessor == null )  {     return null ;  } //  Check for if there is valid access token item in the cache .  final  Token Cache Item access Token Item = m Token Cache Accessor . get AT From Cache ( m Auth Request . get Resource (  ) , m Auth Request . get Client Id (  ) , m Auth Request . get User From Request (  )  )  ;  //  If access Token is null or if the user requested force refresh or if claims challenge is present then get a new access token using local refresh tokens if  ( access Token Item == null || m Auth Request . get Force Refresh (  )  || m Auth Request . is Claims Challenge Present (  )  )  {      Logger . v ( TAG + method Name, "" No valid access token exists, try with refresh token . "" )  ;      return try RT (  )  ;  }  Logger . v ( TAG + method Name, "" Return AT from cache . "" )  ;  return  Authentication Result . create Result ( access Token Item )  ; }"
7910,protected void set Column Model ( final  Table Column Model column Model ) { this . column Model = column Model ; }
7911,"public void high Stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . high Stroke (  )  ; "" )  ; }"
7912,public synchronized void stop (  ) { process . destroy (  )  ; }
7913,"public com . anychart . core . gauge . pointers .  Needle stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7914,public boolean is Drawing Views (  ) { return draw Views ; }
7915,static int choose Table Size ( int set Size ) { if  ( set Size == 1 )  {     return 2 ;  } //  Correct the size for open addressing to match desired load factor .  //  Round up to the next highest power of 2 .  int table Size =  Integer . highest One Bit ( set Size - 1 )  << 1 ;  while  ( table Size * DESIRED_LOAD_FACTOR < set Size )  {     table Size <<= 1 ;  } return table Size ; }
7916,"public com . anychart . core . stock .  Plot price Indicator (  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . price Indicator ( %s )  ; "", value )  )  ;  return this ; }"
7917,"public  Container<T> max Size ( float width, float height ) { max Size (  Fixed . value Of ( width ) ,  Fixed . value Of ( height )  )  ;  return this ; }"
7918,"public static  Collection< Virtual File> get All Gradle File (  Project project ) {  Collection< Virtual File> collection =  Filename Index . get Virtual Files By Name ( project,  Gradle Constants . DEFAULT_SCRIPT_NAME,  Global Search Scope . all Scope ( project )  )  ;  return collection == null ?  Collections . EMPTY_LIST : collection ; }"
7919,public static  Object bar (  ) { return foo ( null )  ; }
7920,public  Container Type get Container Type (  ) { return this . container Type ; }
7921,"public static  Pair< Integer,  Integer> decode Dimensions (  Input Stream is ) {  Preconditions . check Not Null ( is )  ;   Byte Buffer byte Buffer = DECODE_BUFFERS . acquire (  )  ;  if  ( byte Buffer == null )  {     byte Buffer =  Byte Buffer . allocate ( DECODE_BUFFER_SIZE )  ;  }  Bitmap Factory .  Options options = new  Bitmap Factory .  Options (  )  ;  options . in Just Decode Bounds = true ;  try {     options . in Temp Storage = byte Buffer . array (  )  ;       Bitmap Factory . decode Stream ( is, null, options )  ;      return  ( options . out Width == -1 || options . out Height == -1 )  ? null : new  Pair<> ( options . out Width, options . out Height )  ;  } finally {     DECODE_BUFFERS . release ( byte Buffer )  ;  }}"
7922,"public static void generate Mip Map (  Pixmap pixmap, int texture Width, int texture Height ) { generate Mip Map ( GL20 . GL_TEXTURE_2 D, pixmap, texture Width, texture Height )  ; }"
7923,public final  List< Potion> get Top Shelf (  ) { return  List . copy Of ( this . top Shelf )  ; }
7924,public long get Request Timeout Ms (  ) { return request Timeout Ms ; }
7925,"private void internal Parse Meta Data (  ) { final  Image Format image Format =  Image Format Checker . get Image Format_ Wrap IO Exception ( get Input Stream (  )  )  ;  m Image Format = image Format ;  //  Bitmap Util . decode Dimensions has a bug where it will return 100x100 for some  Web Ps even though // those are not its actual dimensions final  Pair< Integer,  Integer> dimensions ;  if  (  Default Image Formats . is Webp Format ( image Format )  )  {     dimensions = read Web P Image Size (  )  ;  } else {     dimensions = read Image Meta Data (  )  . get Dimensions (  )  ;  } if  ( image Format ==  Default Image Formats . JPEG && m Rotation Angle == UNKNOWN_ROTATION_ANGLE )  {     //  Load the JPEG rotation angle only if we have the dimensions     if  ( dimensions != null )  {         m Exif Orientation =  Jfif Util . get Orientation ( get Input Stream (  )  )  ;          m Rotation Angle =  Jfif Util . get Auto Rotate Angle From Orientation ( m Exif Orientation )  ;      } } else if  ( image Format ==  Default Image Formats . HEIF && m Rotation Angle == UNKNOWN_ROTATION_ANGLE )  {     m Exif Orientation =  Heif Exif Util . get Orientation ( get Input Stream (  )  )  ;      m Rotation Angle =  Jfif Util . get Auto Rotate Angle From Orientation ( m Exif Orientation )  ;  } else if  ( m Rotation Angle == UNKNOWN_ROTATION_ANGLE )  {     m Rotation Angle = 0 ;  }}"
7926,"public com . anychart . core . ui .  Timeline header (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . header ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
7927,public  Builder layout Thread Handler ( @ Nullable  Litho Handler handler ) { layout Thread Handler = handler ;  return this ; }
7928,"public  Set< Nitrite Id> find Lesser Equal With Index (  String field,  Comparable value ) { not Null ( field, error Message ( ""field can not be null"", VE_FIND_LTE_INDEX_NULL_FIELD )  )  ;  not Null ( value, error Message ( ""value can not be null"", VE_FIND_LTE_INDEX_NULL_VALUE )  )  ;  return indexed Search Service . find Lesser Equal ( field, value )  ; }"
7929,public void delete Unsent Reports (  ) { core . delete Unsent Reports (  )  ; }
7930,public int hash Code (  ) { return as Map (  )  . hash Code (  )  ; }
7931,"public void set Custom User Data (  Map< String,  String> customdata ) { if  ( customdata != null )  {      User Data . set Custom Data ( customdata )  ;  }}"
7932,public  Nitrite Builder text Indexing Service (  Text Indexing Service text Indexing Service ) { this . text Indexing Service = text Indexing Service ;  return this ; }
7933,public int get Num Inputs (  ) { return  ( domain . length / 2 )  ; }
7934,public long get Cache Disk Size (  ) { return m Cache Disk Utils . get Cache Size (  )  ; }
7935,"protected boolean get Pos Tan ( float distance, float [  ]  pos, float [  ]  tan ) { if  (  ( pos != null && pos . length < 2 )  ||  ( tan != null && tan . length < 2 )  )  {     throw new  Array Index Out Of Bounds Exception (  )  ;  } //  This is not mathematically correct, but the simulation keeps the support library happy .  if  ( get Length (  )  > 0 )  {     pos [ 0 ]  = round ( distance / get Length (  ) , 4 )  ;      pos [ 1 ]  = round ( distance / get Length (  ) , 4 )  ;  } return true ; }"
7936,"public com . anychart . scales .  Geo minimum Y (  Number minimum Y ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . minimum Y ( %s )  ; "", minimum Y )  )  ;  return this ; }"
7937,public int get Position (  ) { return this . position ; }
7938,"public void get Stat ( com . anychart . enums .  Statistics key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Stat ( %s )  ; "",  ( key != null )  ? key . get Js Base (  )  : null )  )  ; }"
7939,"public int get Y Offset (  String text ) { if  ( text == null )      throw new  Illegal Argument Exception ( ""text cannot be null . "" )  ;  if  ( render Type ==  Render Type .  Free Type && bitmap Font != null )      return  ( int )  bitmap Font . get Ascent (  )  ;  int index = text . index Of ( '\n' )  ;  if  ( index != -1 )      text = text . substring ( 0, index )  ;  char [  ]  chars = text . to Char Array (  )  ;   Glyph Vector vector = font . layout Glyph Vector (  Glyph Page . render Context, chars, 0, chars . length,  Font . LAYOUT_LEFT_TO_RIGHT )  ;  int y Offset = ascent + vector . get Pixel Bounds ( null, 0, 0 )  . y ;  return y Offset ; }"
7940,"public void run Updates ( long frame Time Nanos ) {  Ui Thread Util . assert On Ui Thread (  )  ;  boolean has Finished Animations = false ;  for  ( int i = 0 ;  i < m Updated Nodes . size (  )  ;  i++ )  {      Animated Node node = m Updated Nodes . value At ( i )  ;      m Run Update Node List . add ( node )  ;  } //  Clean m Updated Nodes queue m Updated Nodes . clear (  )  ;  for  ( int i = 0 ;  i < m Active Animations . size (  )  ;  i++ )  {      Animation Driver animation = m Active Animations . value At ( i )  ;      animation . run Animation Step ( frame Time Nanos )  ;       Animated Node value Node = animation . m Animated Value ;      m Run Update Node List . add ( value Node )  ;      if  ( animation . m Has Finished )  {         has Finished Animations = true ;      } } update Nodes ( m Run Update Node List )  ;  m Run Update Node List . clear (  )  ;  // finished, then resize `m Active Animations` .  if  ( has Finished Animations )  {     for  ( int i = m Active Animations . size (  )  - 1 ;  i >= 0 ;  i-- )  {          Animation Driver animation = m Active Animations . value At ( i )  ;          if  ( animation . m Has Finished )  {             if  ( animation . m End Callback != null )  {                  Writable Map end Callback Response =  Arguments . create Map (  )  ;                  end Callback Response . put Boolean ( ""finished"", true )  ;                  animation . m End Callback . invoke ( end Callback Response )  ;              }             m Active Animations . remove At ( i )  ;          }     } }}"
7941,"private void fetch User Info (  ) { display Loading ( "" Fetching user info"" )  ;  m State Manager . get Current (  )  . perform Action With Fresh Tokens ( m Auth Service, this::fetch User Info )  ; }"
7942,public T get Parameter Annotation (  Class<T> annotation Type ) {  Annotation [  ]  anns = get Parameter Annotations (  )  ;  for  (  Annotation ann : anns )  {     if  ( annotation Type . is Instance ( ann )  )  {         return  ( T )  ann ;      } } return null ; }
7943,public void remove Change Listener (  Realm Change Listener< Dynamic Realm> listener ) { remove Listener ( listener )  ; }
7944,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
7945,"public void type Text_phone (  )  throws  Exception{ on View ( with Id ( R . id . edit_text_phone )  )  . perform ( type Text ( ""411"" )  )  ;  on View ( with Id ( R . id . edit_text_phone )  )  . check ( matches ( with Text ( ""411"" )  )  )  ; }"
7946,"public void read (  Byte Buffer byte Buffer )  throws  Invalid Tag Exception{ byte [  ]  buffer = new byte [ 6 ]  ;  // lets scan for a non-zero byte ;  long file Pointer ;  byte b ;  do {     b = byte Buffer . get (  )  ;  } while  ( b == 0 )  ;  byte Buffer . position ( byte Buffer . position (  )  - 1 )  ;  // read the 3 character ID byte Buffer . get ( buffer, 0, 3 )  ;   String identifier = new  String ( buffer, 0, 3 )  ;  // is this a valid identifier? if  ( ! Lyrics3v2 Fields . is Lyrics3v2 Field Identifier ( identifier )  )  {     throw new  Invalid Tag Exception ( identifier + "" is not a valid ID3v2 . 4 frame"" )  ;  } frame Body = read Body ( identifier, byte Buffer )  ; }"
7947,"public static final  Graphical View get Dial Chart View (  Context context,  Category Series dataset,  Dial Renderer renderer ) { check Parameters ( dataset, renderer )  ;   Dial Chart chart = new  Dial Chart ( dataset, renderer )  ;  return new  Graphical View ( context, chart )  ; }"
7948,public  High Light Guide View set High Lisght Padding ( int high Lisght Padding ) { this . high Lisght Padding = high Lisght Padding ;  return this ; }
7949,"public com . anychart . core . annotations .  Infinite Line container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
7950,"public static  String hash (  Target Configuration target Configuration ) {  Optional< Build Target> configuration Target = target Configuration . get Configuration Target (  )  ;   String key = configuration Target . is Present (  )  ? configuration Target . get (  )  . get Fully Qualified Name (  )  : target Configuration . get Class (  )  . get Name (  )  ;  return m Cache . compute If Absent ( key,  k -> {      Hasher hasher =  Hashing . murmur3_32 (  )  . new Hasher (  )  ;      hasher . put Bytes ( k . get Bytes (  )  )  ;      return hasher . hash (  )  . to String (  )  ;  } )  ; }"
7951,"public com . anychart . core . utils .  Quarter fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
7952,public static void close IO ( final  Closeable .  .  .  closeables ) { if  ( closeables == null )      return ;  for  (  Closeable closeable : closeables )  {     if  ( closeable != null )  {         try {             closeable . close (  )  ;          } catch  ( IO Exception e )  {             e . print Stack Trace (  )  ;          }     } }}
7953,"public void request Child Focus (  View child,  View focused ) { if  ( focused != null && !m Paging Enabled )  {     scroll To Child ( focused )  ;  } super . request Child Focus ( child, focused )  ; }"
7954,"public static void main (  String [  ]  args )  throws  Exception{  String work Dir =  System . get Property ( ""git_work_tree"" )  ;  if  ( work Dir == null )  {     work Dir = "" . "" ;       System . out . println ( "" System property 'git_work_tree' not specified, using current directory: "" + new  File ( work Dir )  . get Absolute Path (  )  )  ;  } try  (  Repository db = new  File Repository ( work Dir + ""/ . git"" )  )  {     for  (  String cmd : args )  {          List< String> result = execute ( cmd, db )  ;          for  (  String line : result )  {              System . out . println ( line )  ;          }     } }}"
7955,"public com . anychart . core . ui .  Labels Factory min Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . min Labels (  ) "" )  ; }"
7956,public boolean is Swipe To Dismiss (  ) { return is Swipe Left Right ; }
7957,"public com . anychart . core . gantt . timelineheader .  Level Wrapper stroke ( com . anychart . graphics . vector .  Stroke settings,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7958,"public void save As Png (  Number width,  Number height,  Number quality,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Png ( %s, %s, %s, %s )  ; "", width, height, quality, wrap Quotes ( filename )  )  )  ; }"
7959,void change Drag View Position (  ) { transformer . update X Position ( get Vertical Drag Offset (  )  )  ;  transformer . update Y Position ( get Vertical Drag Offset (  )  )  ; }
7960,public  Optional< String> get Buildozer Executable Override (  ) { return  Optional . of Nullable ( state . buildozer Executable )  ; }
7961,"public  Object convert To Pojo (  Object parser Obj ) { // if none of user transformers matched, apply default transformations for  ( int i = transformers . size (  )  - 1 ;  i >= 0 ;  i-- )  {      Pojo Transformer transformer = transformers . get ( i )  ;      if  ( transformer . get Clazz (  )  . is Instance ( parser Obj )  )  {         return transformer . get Transform Function (  )  . apply ( parser Obj )  ;      } } throw new  Illegal Argument Exception ( this . get Class (  )  . to String (  )  + "" is unable to cast an object of type "" + parser Obj . get Class (  )  . to String (  )  )  ; }"
7962,public boolean is Granularity Enabled (  ) { return m Granularity Enabled ; }
7963,protected void apply Value Text Style ( I Data Set set ) { m Value Paint . set Typeface ( set . get Value Typeface (  )  )  ;  m Value Paint . set Text Size ( set . get Value Text Size (  )  )  ; }
7964,"public static  Forwarding Build Target Source Path of (  Build Target With Outputs target,  Source Path delegate ) { return of ( target, delegate,  Optional . empty (  )  )  ; }"
7965,public final boolean is Zoom Enabled (  ) { return zoom Enabled ; }
7966,"public static void put ( @ Non Null final  String key, @ Nullable final  String value, @ Non Null final  Cache Disk Utils cache Disk Utils ) { cache Disk Utils . put ( key, value )  ; }"
7967,public boolean is Initiate On Long Press Enabled (  ) { return m Initiate On Long Press ; }
7968,"public  Complete Builder<T> with Query ( @ Non Null  Query query ) { check Not Null ( query, "" Please specify query"" )  ;  return new  Complete Builder<T> ( stor IOSQ Lite, type, query )  ; }"
7969,"public void on Item Range Changed ( int position Start, int item Count ) { final  Subscriber subscriber = m Ref Subscriber . get (  )  ;  final  Recycler View .  Adapter source = m Ref Source Holder . get (  )  ;  if  ( subscriber != null && source != null )  {     subscriber . on Bridged Adapter Item Range Changed ( source, m Tag, position Start, item Count )  ;  }}"
7970,public static X509 Certificate [  ]  get Builtin Trusted C As (  ) { return builtin Trusted C As . get (  )  ; }
7971,"public  Rect scale Preview (  Size preview Size,  Size viewfinder Size ) { //  We avoid scaling if feasible .   Size scaled Preview = preview Size . scale Fit ( viewfinder Size )  ;   Log . i ( TAG, "" Preview: "" + preview Size + "" ;   Scaled: "" + scaled Preview + "" ;   Want: "" + viewfinder Size )  ;  int dx =  ( scaled Preview . width - viewfinder Size . width )  / 2 ;  int dy =  ( scaled Preview . height - viewfinder Size . height )  / 2 ;  return new  Rect ( -dx, -dy, scaled Preview . width - dx, scaled Preview . height - dy )  ; }"
7972,"private static  Appendable wrap As Generic Appendable ( final  Appendable a ) { return new  Appendable (  )  {     @ Override     public  Appendable append (  Char Sequence csq )  throws IO Exception {         a . append ( csq )  ;          return this ;      }     @ Override     public  Appendable append (  Char Sequence csq, int start, int end )  throws IO Exception {         a . append ( csq, start, end )  ;          return this ;      }     @ Override     public  Appendable append ( char c )  throws IO Exception {         a . append ( c )  ;          return this ;      } } ; }"
7973,"public com . anychart . core . utils .  Unbound Regions Settings stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
7974,"public static void start Pick Image Activity ( @ Non Null  Context context, @ Non Null  Fragment fragment ) { fragment . start Activity For Result ( get Pick Image Chooser Intent ( context ) , PICK_IMAGE_CHOOSER_REQUEST_CODE )  ; }"
7975,public void send Sensor Event To Listeners (  Sensor Event event ) { for  (  Sensor Event Listener listener : get Listeners (  )  )  {     listener . on Sensor Changed ( event )  ;  }}
7976,"private int get Exif Orientation (  Context context,  String source Uri ) { int exif Orientation = ORIENTATION_0 ;  if  ( source Uri . starts With (  Content Resolver . SCHEME_CONTENT )  )  {      Cursor cursor = null ;      try {          String [  ]  columns = {  Media Store .  Images .  Media . ORIENTATION } ;          cursor = context . get Content Resolver (  )  . query (  Uri . parse ( source Uri ) , columns, null, null, null )  ;          if  ( cursor != null )  {             if  ( cursor . move To First (  )  )  {                 int orientation = cursor . get Int ( 0 )  ;                  if  ( VALID_ORIENTATIONS . contains ( orientation )  && orientation != ORIENTATION_USE_EXIF )  {                     exif Orientation = orientation ;                  } else {                      Log . w ( TAG, "" Unsupported orientation: "" + orientation )  ;                  }             }         }     } catch  (  Exception e )  {          Log . w ( TAG, "" Could not get orientation of image from media store"" )  ;      } finally {         if  ( cursor != null )  {             cursor . close (  )  ;          }     } } else if  ( source Uri . starts With (  Image Source . FILE_SCHEME )  && !source Uri . starts With (  Image Source . ASSET_SCHEME )  )  {     try {          Exif Interface exif Interface = new  Exif Interface ( source Uri . substring (  Image Source . FILE_SCHEME . length (  )  - 1 )  )  ;          int orientation Attr = exif Interface . get Attribute Int (  Exif Interface . TAG_ORIENTATION,  Exif Interface . ORIENTATION_NORMAL )  ;          if  ( orientation Attr ==  Exif Interface . ORIENTATION_NORMAL || orientation Attr ==  Exif Interface . ORIENTATION_UNDEFINED )  {             exif Orientation = ORIENTATION_0 ;          } else if  ( orientation Attr ==  Exif Interface . ORIENTATION_ROTATE_90 )  {             exif Orientation = ORIENTATION_90 ;          } else if  ( orientation Attr ==  Exif Interface . ORIENTATION_ROTATE_180 )  {             exif Orientation = ORIENTATION_180 ;          } else if  ( orientation Attr ==  Exif Interface . ORIENTATION_ROTATE_270 )  {             exif Orientation = ORIENTATION_270 ;          } else {              Log . w ( TAG, "" Unsupported EXIF orientation: "" + orientation Attr )  ;          }     } catch  (  Exception e )  {          Log . w ( TAG, "" Could not get EXIF orientation of image"" )  ;      } } return exif Orientation ; }"
7977,"public com . anychart . core . ui .  Markers Factory outlier Markers (  ) { return new com . anychart . core . ui .  Markers Factory ( js Base + "" . outlier Markers (  ) "" )  ; }"
7978,"public void text Overflow (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . text Overflow (  )  ; "" )  ; }"
7979,"public void set Content (  Input Stream content Stream, long content Length ) { this . content Stream = content Stream ;  this . content Length = content Length ; }"
7980,public  Code Address get End (  Basic Block block ) { return ends [ block . get Label (  )  ]  ; }
7981,"public com . anychart . core . utils .  Chart A11y a11y (  ) { return new com . anychart . core . utils .  Chart A11y ( js Base + "" . a11y (  ) "" )  ; }"
7982,"private static boolean is32 Bit Jvm (  ) {  Integer bits =  Integer . get Integer ( ""sun . arch . data . model"" )  ;  return bits != null && bits == 32 ; }"
7983,"public com . anychart . core . utils .  Quarter bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
7984,protected  List get Full Path (  ) {  List list = new  Array List (  )  ;  if  ( comp Paths != null )  {     for  ( int i = 0 ;  i < comp Paths . size (  )  ;  i++ )  {          List l =  (  (  Bsh Class Path )  comp Paths . get ( i )  )  . get Full Path (  )  ;          // take care to remove dups         // wish we had an ordered set collection          Iterator it = l . iterator (  )  ;          while  ( it . has Next (  )  )  {              Object o = it . next (  )  ;              if  ( !list . contains ( o )  )                  list . add ( o )  ;          }     } } list . add All ( path )  ;  return list ; }
7985,"private  Attribute inner Classes (  Direct Class File cf, int offset, int length,  Parse Observer observer ) { if  ( length < 2 )  {     return throw Severely Truncated (  )  ;  }  Byte Array bytes = cf . get Bytes (  )  ;   Constant Pool pool = cf . get Constant Pool (  )  ;  // number_of_classes int count = bytes . get Unsigned Short ( offset )  ;  if  ( observer != null )  {     observer . parsed ( bytes, offset, 2, ""number_of_classes: "" +  Hex . u2 ( count )  )  ;  } offset += 2 ;  length -= 2 ;  if  ( length !=  ( count * 8 )  )  {     throw Bad Length (  ( count * 8 )  + 2 )  ;  }  Inner Class List list = new  Inner Class List ( count )  ;  for  ( int i = 0 ;  i < count ;  i++ )  {     int inner Class Idx = bytes . get Unsigned Short ( offset )  ;      int outer Class Idx = bytes . get Unsigned Short ( offset + 2 )  ;      int name Idx = bytes . get Unsigned Short ( offset + 4 )  ;      int access Flags = bytes . get Unsigned Short ( offset + 6 )  ;       Cst Type inner Class =  (  Cst Type )  pool . get ( inner Class Idx )  ;       Cst Type outer Class =  (  Cst Type )  pool . get0 Ok ( outer Class Idx )  ;       Cst String name =  (  Cst String )  pool . get0 Ok ( name Idx )  ;      list . set ( i, inner Class, outer Class, name, access Flags )  ;      if  ( observer != null )  {         observer . parsed ( bytes, offset, 2, ""inner_class: "" +  Direct Class File . string Or None ( inner Class )  )  ;          observer . parsed ( bytes, offset + 2, 2, ""  outer_class: "" +  Direct Class File . string Or None ( outer Class )  )  ;          observer . parsed ( bytes, offset + 4, 2, ""  name: "" +  Direct Class File . string Or None ( name )  )  ;          observer . parsed ( bytes, offset + 6, 2, ""  access_flags: "" +  Access Flags . inner Class String ( access Flags )  )  ;      }     offset += 8 ;  } list . set Immutable (  )  ;  return new  Att Inner Classes ( list )  ; }"
7986,"public void log In With Publish Permissions ( android . app .  Fragment fragment,  Collection< String> permissions ) { log In With Publish Permissions ( new  Fragment Wrapper ( fragment ) , permissions )  ; }"
7987,protected void on New Intent (  Intent intent ) { super . on New Intent ( intent )  ;  // Forward to plugins if  ( this . app View != null )      this . app View . on New Intent ( intent )  ; }
7988,"public  Data Binding Model With All Field Types No Validation_ on Bind (  On Model Bound Listener< Data Binding Model With All Field Types No Validation_,  Data Binding Epoxy Model .  Data Binding Holder> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
7989,"public int get Uniform Location (  String name ) { return uniforms . get ( name, -1 )  ; }"
7990,"private  View create Custom View Internal (  View parent,  View view,  String name,  Context view Context,  Attribute Set attrs ) { //  If  Custom View Creation is off skip this .  if  ( ! Calligraphy Config . get (  )  . is Custom View Creation (  )  )      return view ;  if  ( view == null && name . index Of ( ' . ' )  > -1 )  {     if  ( m Constructor Args == null )          m Constructor Args =  Reflection Utils . get Field (  Layout Inflater . class, ""m Constructor Args"" )  ;      final  Object [  ]  m Constructor Args Arr =  (  Object [  ]  )   Reflection Utils . get Value ( m Constructor Args, this )  ;      final  Object last Context = m Constructor Args Arr [ 0 ]  ;      //  The  Layout Inflater actually finds out the correct context to use .   We just need to set     // it on the m Constructor for the internal method .      //  Set the constructor ars up for the create View, not sure why we can't pass these in .      m Constructor Args Arr [ 0 ]  = view Context ;       Reflection Utils . set Value ( m Constructor Args, this, m Constructor Args Arr )  ;      try {         view = create View ( name, null, attrs )  ;      } catch  (  Class Not Found Exception ignored )  {     } finally {         m Constructor Args Arr [ 0 ]  = last Context ;           Reflection Utils . set Value ( m Constructor Args, this, m Constructor Args Arr )  ;      } } return view ; }"
7991,"public com . anychart . core . stock . scrollerseries .  Candlestick min Labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
7992,"public com . anychart . data . tree .  Data Item get Node (  ) { return new com . anychart . data . tree .  Data Item ( js Base + "" . get Node (  ) "" )  ; }"
7993,"public static void append Timezone (  String Builder r, int offset ) { final char sign ;  final int offset Hours ;  final int offset Mins ;  if  ( offset < 0 )  {     sign = '-' ;      offset = -offset ;  } else {     sign = '+' ;  } offset Hours = offset / 60 ;  offset Mins = offset % 60 ;  r . append ( sign )  ;  if  ( offset Hours < 10 )  {     r . append ( '0' )  ;  } r . append ( offset Hours )  ;  if  ( offset Mins < 10 )  {     r . append ( '0' )  ;  } r . append ( offset Mins )  ; }"
7994,"public  Task< List Result> list ( int max Results, @ Non Null  String page Token ) {  Preconditions . check Argument ( max Results > 0, ""max Results must be greater than zero"" )  ;   Preconditions . check Argument ( max Results <= 1000, ""max Results must be at most 1000"" )  ;   Preconditions . check Argument ( page Token != null, ""page Token must be non-null to resume a previous list (  )  operation"" )  ;  return list Helper ( max Results, page Token )  ; }"
7995,"protected static  Haskell Compiler Flags create Compile Flags (  Action Graph Builder graph Builder,  Immutable Set< Build Rule> deps,  Haskell Platform platform,  Linker .  Linkable Dep Type dep Type, boolean hs Profile,  Immutable List< String> additional Flags ) {  Haskell Compiler Flags .  Builder builder =  Haskell Compiler Flags . builder (  )  ;  builder . add All Additional Flags ( additional Flags )  ;   Cxx Platform cxx Platform = platform . get Cxx Platform (  )  ;   Collection< Cxx Preprocessor Input> cxx Preprocessor Inputs =  Cxx Preprocessables . get Transitive Cxx Preprocessor Input From Deps ( cxx Platform, graph Builder, deps )  ;   Explicit Cxx Tool Flags .  Builder preprocessor Flags Builder =  Cxx Tool Flags . explicit Builder (  )  ;  preprocessor Flags Builder . set Platform Flags (  Cxx Source Types . get Platform Preprocess Flags ( cxx Platform,  Cxx Source .  Type . C )  )  ;  for  (  Cxx Preprocessor Input preprocessor Input : cxx Preprocessor Inputs )  {     builder . add All Includes ( preprocessor Input . get Includes (  )  )  . add All Framework Paths ( preprocessor Input . get Frameworks (  )  )  ;      preprocessor Flags Builder . add All Rule Flags ( preprocessor Input . get Preprocessor Flags (  )  . get (  Cxx Source .  Type . C )  )  ;  } builder . set Additional Preprocessor Flags ( preprocessor Flags Builder . build (  )  )  ;  new  Abstract Breadth First Traversal< Build Rule> ( deps )  {     @ Override     public  Iterable< Build Rule> visit (  Build Rule rule )  {          Immutable Set .  Builder< Build Rule> traverse =  Immutable Set . builder (  )  ;          if  ( rule instanceof  Haskell Compile Dep )  {              Haskell Compile Dep haskell Compile Dep =  (  Haskell Compile Dep )  rule ;              traverse . add All ( haskell Compile Dep . get Compile Deps ( platform )  )  ;               Haskell Haddock Input haddock Input = haskell Compile Dep . get Haddock Input ( platform )  ;              builder . add All Haddock Interfaces ( haddock Input . get Interfaces (  )  )  ;               Haskell Compile Input compile Input = haskell Compile Dep . get Compile Input ( platform, dep Type, hs Profile )  ;               Haskell Package pkg = compile Input . get Package (  )  ;              builder . put Package Exported Flags ( pkg . get Identifier (  ) , compile Input . get Flags (  )  )  ;              if  ( deps . contains ( rule )  )  {                 builder . put Exposed Packages ( pkg . get Identifier (  ) , pkg )  ;              } else {                 builder . put Packages ( pkg . get Identifier (  ) , pkg )  ;              }         }         return traverse . build (  )  ;      } } . start (  )  ;  return builder . build (  )  ; }"
7996,public void init Encryption Data ( int length ) { if  ( sample Encryption Data == null || sample Encryption Data . limit (  )  < length )  {     sample Encryption Data = new  Parsable Byte Array ( length )  ;  } sample Encryption Data Length = length ;  defines Encryption Data = true ;  sample Encryption Data Needs Fill = true ; }
7997,"public com . anychart . charts .  Venn hatch Fill ( com . anychart . graphics . vector .  Pattern Fill pattern Fill ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "",  ( pattern Fill != null )  ? pattern Fill . get Js Base (  )  : null )  )  ;  return this ; }"
7998,"public com . anychart . charts .  Mekko x Axis (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Axis ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
7999,"public com . anychart . core . annotations .  Fibonacci Base container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
8000,public  List< String> get To Be Deleted (  ) { return to Be Deleted ; }
8001,"protected  View default View (  ) {  Linear Layout result = new  Linear Layout ( get Activity (  )  )  ;  result . set Orientation (  Linear Layout . VERTICAL )  ;   Text View text = new  Text View ( get Activity (  )  )  ;  text . set Text ( "" Sample  Layout"" )  ;  result . add View ( text,  Layout Params . FILL_PARENT,  Layout Params . WRAP_CONTENT )  ;   Button b = new  Button ( get Activity (  )  )  ;  b . set Text ( ""OK"" )  ;  result . add View ( b,  Layout Params . FILL_PARENT,  Layout Params . WRAP_CONTENT )  ;  return result ; }"
8002,"public static boolean has Nullable Annotation (  Symbol symbol,  Config config ) { return has Nullable Annotation (  Nullability Util . get All Annotations ( symbol ) , config )  ; }"
8003,"public static boolean check Permission (  String permission Name ) { if  ( context == null )  {     throw new  Runtime Exception ( "" Before comparing permissions you need to call  Nammu . init ( context ) "" )  ;  } return  Package Manager . PERMISSION_GRANTED == context . check Self Permission ( permission Name )  ; }"
8004,"public static void initialize Lib (  Context context,  String application Id ) {  App Events Logger Impl . initialize Lib ( context, application Id )  ; }"
8005,public  String get Promotion Text (  ) { return promo Text ; }
8006,"public com . anychart . core . radar . series .  Base get Series (  Number id ) { return new com . anychart . core . radar . series .  Base (  String . format (  Locale . US, js Base + "" . get Series ( %s ) "", id )  )  ; }"
8007,"public void mouse Clicked ( P Input Event e ) { if  ( e . is Popup Trigger (  )  )  {     show Popup ( e )  ;  } else {     process Event ( new SV Event ( SV Event Type . SVET_CLICK, sv Window,  ( int )  e . get Position (  )  . get X (  ) ,  ( int )  e . get Position (  )  . get Y (  ) , 0, 0, null )  )  ;  }}"
8008,"public com . anychart . core . ui .  Data Area parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
8009,public synchronized void start Preview (  ) { if  ( m Ctrl Block != null )  {     native Start Preview ( m Native Ptr )  ;  }}
8010,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
8011,protected  Cordova Web View make Web View (  ) { return new  Cordova Web View Impl ( make Web View Engine (  )  )  ; }
8012,"public com . anychart . core . utils .  Legend Item Settings legend Item (  ) { return new com . anychart . core . utils .  Legend Item Settings ( js Base + "" . legend Item (  ) "" )  ; }"
8013,"public com . anychart . core . resource .  Grid even Hatch Fill ( com . anychart . graphics . vector .  Pattern Fill pattern Fill ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . even Hatch Fill ( %s )  ; "",  ( pattern Fill != null )  ? pattern Fill . get Js Base (  )  : null )  )  ;  return this ; }"
8014,public void set Max Check Count ( int max Check Count ) { if  ( max Check Count == 0 )      max Check Count = -1 ;  this . max Check Count = max Check Count ; }
8015,public  Process Chain pause For ( long duration Ms ) { set Paused ( true )  ;   Callback Process unpause = new  Callback Process (  )  {     @ Override     public void update Logic ( float delta Ms )  {         set Paused ( false )  ;      } } ;  return new  Wait Process ( duration Ms )  . then ( unpause )  ; }
8016,"public  Ct Class make Class (  Input Stream classfile )  throws IO Exception,  Runtime Exception{ return make Class ( classfile, true )  ; }"
8017,public static _ Fields find By Thrift Id ( int field Id ) { switch ( field Id )  {     case // RESULTS     1:         return RESULTS ;      case // STORES_LOOKED_UP     2:         return STORES_LOOKED_UP ;      default:         return null ;  }}
8018,"public com . anychart . charts .  Radar margin (  String value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
8019,public void claim (  Char Sequence name ) { unique Names . add ( name . to String (  )  )  ; }
8020,public final boolean is Cancelled (  ) { return cancelled ; }
8021,"public void test Unchanged Complex (  )  throws IO Exception,  Git API Exception{ write Trash File ( ""a . b"", ""a . b"" )  ;  write Trash File ( ""a . c"", ""a . c"" )  ;  write Trash File ( ""a/b . b/b"", ""a/b . b/b"" )  ;  write Trash File ( ""a/b"", ""a/b"" )  ;  write Trash File ( ""a/c"", ""a/c"" )  ;  write Trash File ( ""a=c"", ""a=c"" )  ;  write Trash File ( ""a=d"", ""a=d"" )  ;  try  (  Git git = new  Git ( db )  )  {     git . add (  )  . add Filepattern ( ""a . b"" )  . add Filepattern ( ""a . c"" )  . add Filepattern ( ""a/b . b/b"" )  . add Filepattern ( ""a/b"" )  . add Filepattern ( ""a/c"" )  . add Filepattern ( ""a=c"" )  . add Filepattern ( ""a=d"" )  . call (  )  ;  } // got the hash id'd from the data using echo -n a . b|git hash-object -t blob --stdin  Tree Formatter bb = new  Tree Formatter (  )  ;  bb . append ( ""b"",  File Mode . REGULAR_FILE,  Object Id . from String ( ""8d840bd4e2f3a48ff417c8e927d94996849933fd"" )  )  ;   Tree Formatter a = new  Tree Formatter (  )  ;  a . append ( ""b"",  File Mode . REGULAR_FILE,  Object Id . from String ( ""db89c972fc57862eae378f45b74aca228037d415"" )  )  ;  a . append ( ""b . b"",  File Mode . TREE, insert Tree ( bb )  )  ;  a . append ( ""c"",  File Mode . REGULAR_FILE,  Object Id . from String ( ""52ad142a008aeb39694bafff8e8f1be75ed7f007"" )  )  ;   Tree Formatter tree = new  Tree Formatter (  )  ;  tree . append ( ""a . b"",  File Mode . REGULAR_FILE,  Object Id . from String ( ""f6f28df96c2b40c951164286e08be7c38ec74851"" )  )  ;  tree . append ( ""a . c"",  File Mode . REGULAR_FILE,  Object Id . from String ( ""6bc0e647512d2a0bef4f26111e484dc87df7f5ca"" )  )  ;  tree . append ( ""a"",  File Mode . TREE, insert Tree ( a )  )  ;  tree . append ( ""a=c"",  File Mode . REGULAR_FILE,  Object Id . from String ( ""06022365ddbd7fb126761319633bf73517770714"" )  )  ;  tree . append ( ""a=d"",  File Mode . REGULAR_FILE,  Object Id . from String ( ""fa6414df3da87840700e9eeb7fc261dd77ccd5c2"" )  )  ;   Object Id tree Id = insert Tree ( tree )  ;   File Tree Iterator iterator = new  File Tree Iterator ( db )  ;   Index Diff diff = new  Index Diff ( db, tree Id, iterator )  ;  diff . diff (  )  ;  assert Equals ( 0, diff . get Changed (  )  . size (  )  )  ;  assert Equals ( 0, diff . get Added (  )  . size (  )  )  ;  assert Equals ( 0, diff . get Removed (  )  . size (  )  )  ;  assert Equals ( 0, diff . get Missing (  )  . size (  )  )  ;  assert Equals ( 0, diff . get Modified (  )  . size (  )  )  ;  assert Equals (  Collections . EMPTY_SET, diff . get Untracked Folders (  )  )  ; }"
8022,"public com . anychart . core . resource .  Logo top (  Number top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", top )  )  ;  return this ; }"
8023,"public void add Rule (  String rule Expression, T result If Matched ) { m Rule Map . add ( new  Mime Matcher Rule ( rule Expression, result If Matched )  )  ; }"
8024,"private boolean is Group In Use ( @ Non Null final  Provisioned Mesh Node node, @ Non Null final  Group group ) { for  ( final  Element element : node . get Elements (  )  . values (  )  )  {     for  ( final  Mesh Model model : element . get Mesh Models (  )  . values (  )  )  {         if  ( model . get Publication Settings (  )  . get Publish Address (  )  == group . get Address (  )  || model . get Subscribed Addresses (  )  . contains (  (  Integer )  group . get Address (  )  )  )  {             return true ;          }     } } return false ; }"
8025,public  String get Raw (  ) { return raw ; }
8026,public void on Drop Down (  ) { if  ( current Header Status != HEADER_STATUS_LOADING && is Drop Down Style && on Drop Down Listener != null )  {     on Drop Down Begin (  )  ;      on Drop Down Listener . on Drop Down (  )  ;  }}
8027,public void clear (  ) { m Categories . clear (  )  ;  m Titles . clear (  )  ;  m Values . clear (  )  ; }
8028,"public static  Stub wrap Stub To Send Metadata (  Stub grpc Stub,  Remote Execution Metadata metadata ) {  Metadata extra Headers = new  Metadata (  )  ;  extra Headers . put ( REMOTE_EXECUTION_METADATA_KEY, metadata . to Byte Array (  )  )  ;  return  Metadata Utils . attach Headers ( grpc Stub, extra Headers )  ; }"
8029,public void disable View Pager ( boolean disable ) { is View Pager Disabled = disable ; }
8030,"public int add Item To Section ( @ Non Null I Sectionable sectionable, @ Nullable I Header header, @ Nullable  Comparator<I Flexible> comparator ) { int index ;  if  ( header != null && !header . is Hidden (  )  )  {      List<I Sectionable> section Items = get Section Items ( header )  ;      section Items . add ( sectionable )  ;      //  Sort the list for new position      Collections . sort ( section Items, comparator )  ;      //  Get the new position     index = section Items . index Of ( sectionable )  ;  } else {     index = calculate Position For ( sectionable, comparator )  ;  } return add Item To Section ( sectionable, header, index )  ; }"
8031,public final void set Volume Type (  Volume Type v Type ) { m Volume Type = v Type ; }
8032,public  Context get Themed Context (  ) { return null ; }
8033,public void set Circle Fill Ratio ( float fill Ratio ) { pie Chart Renderer . set Circle Fill Ratio ( fill Ratio )  ;   View Compat . post Invalidate On Animation ( this )  ; }
8034,public final boolean is Handle Drag Enabled (  ) { return m Item Touch Helper Callback != null && m Item Touch Helper Callback . is Handle Drag Enabled (  )  ; }
8035,public  Type Mirror get Underlying Type (  ) { if  ( return Type (  )  . get Kind (  )  !=  Type Kind . ARRAY )  {     return return Type (  )  ;  } return  (  (  Array Type )  return Type (  )  )  . get Component Type (  )  ; }
8036,"public static  String get Meta Data In Activity ( @ Non Null final  Class<? extends  Activity> clz, @ Non Null final  String key ) {  String value = """" ;   Package Manager pm =  Utils . get App (  )  . get Package Manager (  )  ;   Component Name component Name = new  Component Name (  Utils . get App (  ) , clz )  ;  try {      Activity Info ai = pm . get Activity Info ( component Name,  Package Manager . GET_META_DATA )  ;      value =  String . value Of ( ai . meta Data . get ( key )  )  ;  } catch  (  Package Manager .  Name Not Found Exception e )  {     e . print Stack Trace (  )  ;  } return value ; }"
8037,"public com . anychart . core . stock . scrollerseries .  Range Area rendering (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rendering ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8038,private int get Non Existing Customer Id (  ) { return 999 ; }
8039,"public void draw Rectangle ( int x, int y, int width, int height ) { pixmap . draw Rect ( x, y, width, height, color )  ; }"
8040,"public com . anychart . core . ui .  Labels Factory max Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . max Labels (  ) "" )  ; }"
8041,"public  String get Header Value (  ) { byte [  ]  bytes =  String . format ( ""%s:%s"", username, password )  . get Bytes (  )  ;  return  String . format ( "" Basic %s"",  Base64 Utils . encode To String ( bytes )  )  ; }"
8042,public void enable Animations (  ) { m Should Animate = true ; }
8043,public void set Debug ( boolean enabled ) { native Set Debug ( enabled )  ; }
8044,"protected int guess Unknown Ppi (  ) { int ppi ;  if  ( UI Device . get Current Device (  )  . get User Interface Idiom (  )  == UI User Interface Idiom .  Pad )      ppi = 132 *  ( int )  pixels Per Point ;  else     ppi = 164 *  ( int )  pixels Per Point ;  error ( ""IOS Application"", "" Device PPI unknown .  PPI value has been guessed to "" + ppi + "" but may be wrong"" )  ;  return ppi ; }"
8045,"private  Point get Max Bitmap Dimensions (  Canvas canvas ) { return new  Point (  Math . min ( canvas . get Maximum Bitmap Width (  ) , max Tile Width ) ,  Math . min ( canvas . get Maximum Bitmap Height (  ) , max Tile Height )  )  ; }"
8046,public static  Uri get Uri For File (  File file ) { return  Uri . from File ( file )  ; }
8047,"public boolean get Project WMO (  ) { return delegate . get Boolean Value ( SECTION_NAME, PROJECT_WMO, false )  ; }"
8048,public boolean get Lazy (  ) { return lazy Init ; }
8049,"public void const Value Index ( float value )  throws IO Exception{ const Value Index ( 'F', pool . add Float Info ( value )  )  ; }"
8050,public  String get Content Language (  ) { return m Metadata . m Content Language . get Value (  )  ; }
8051,"private  List< Allocated Group Range> deserialize Allocated Group Range ( @ Non Null final  Json Deserialization Context context, @ Non Null final  Json Object json ) { final  Type group Range List = new  Type Token< List< Allocated Group Range>> (  )  { } . get Type (  )  ;  return context . deserialize ( json . get As Json Array ( ""allocated Group Range"" ) , group Range List )  ; }"
8052,"private static  Input Stream get Input Stream (  String lib Path )  throws IO Exception{  Preconditions . check Argument (  ( lib Path . ends With ( "" . jar"" )  || lib Path . ends With ( "" . aar"" )  )  &&  Files . exists (  Paths . get ( lib Path )  ) , ""invalid library path! "" + lib Path )  ;  LOG ( VERBOSE, "" Info"", ""opening library: "" + lib Path + "" .  .  . "" )  ;   Input Stream jar IS = null ;  if  ( lib Path . ends With ( "" . jar"" )  )  {     jar IS = new  File Input Stream ( lib Path )  ;  } else if  ( lib Path . ends With ( "" . aar"" )  )  {      Zip File aar = new  Zip File ( lib Path )  ;       Zip Entry jar Entry = aar . get Entry ( ""classes . jar"" )  ;      jar IS =  ( jar Entry == null ? null : aar . get Input Stream ( jar Entry )  )  ;  } return jar IS ; }"
8053,"public com . anychart . charts .  Mekko container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
8054,"public com . anychart . core . stock . scrollerseries .  Candlestick rising Hatch Fill (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rising Hatch Fill ( %s )  ; "", enabled )  )  ;  return this ; }"
8055,"public  Base Slider View get Current Slider (  ) { if  ( get Real Adapter (  )  == null )      throw new  Illegal State Exception ( "" You did not set a slider adapter"" )  ;  int count = get Real Adapter (  )  . get Count (  )  ;  int real Count = m View Pager . get Current Item (  )  % count ;  return get Real Adapter (  )  . get Slider View ( real Count )  ; }"
8056,"public static  Token Cache Item create FRRT Token Cache Item ( final  String authority, final  Authentication Result auth Result ) { return new  Token Cache Item ( authority, auth Result )  ; }"
8057,public void set Is Touch Wiget ( boolean is Touch Wiget ) { this . m Is Touch Wiget = is Touch Wiget ; }
8058,"public com . anychart . charts .  Radar margin (  Number value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
8059,"public static  String to String ( double val ) { return number To String ( val, 10 )  ; }"
8060,"public com . anychart . core . gantt .  Data Grid Button padding (  Number value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
8061,"public  Point F compute Scroll Vector For Position ( int target Position ) { final int first Child Pos = layout Manager . find First Completely Visible Item Position (  )  ;  final int direction = target Position < first Child Pos ? -1 : 1 ;  if  ( layout Manager . get Orientation (  )  ==  Orientation Helper . HORIZONTAL )  {     vector Position . set ( direction, 0 )  ;      return vector Position ;  } else {     vector Position . set ( 0, direction )  ;      return vector Position ;  }}"
8062,"public static  Ion get Instance (  Context context,  String name ) { if  ( context == null )      throw new  Null Pointer Exception ( "" Can not pass null context in to retrieve ion instance"" )  ;   Ion instance = instances . get ( name )  ;  if  ( instance == null )      instances . put ( name, instance = new  Ion ( context, name )  )  ;  return instance ; }"
8063,"public int get Int ( int key, int default Value ) { if  ( key < 0 )       Kit . code Bug (  )  ;  int index = find Index ( key )  ;  if  ( 0 <= index )  {     if  ( ivalues Shift != 0 )  {         return keys [ ivalues Shift + index ]  ;      }     return 0 ;  } return default Value ; }"
8064,public static  Option with ( android . app .  Fragment fragment ) { return new  Boot ( new  Fragment Source ( fragment )  )  ; }
8065,"private static  String get Config Value For Key (  String key,  List< String> cxx Flags,  String prefix,  Optional< String> containment String,  Map< String,  String> appended Config ) {  String value = appended Config . get ( key )  ;  if  ( value == null )  {     int index Of Cxx Library Spec = -1 ;      for  (  String item : cxx Flags )  {         if  ( containment String . is Present (  )  && !item . contains ( containment String . get (  )  )  )  {             continue ;          }         if  ( item . starts With ( prefix )  )  {             index Of Cxx Library Spec = cxx Flags . index Of ( item )  ;              value = item . substring ( item . index Of ( '=' )  + 1 )  ;              break ;          }     }     if  ( index Of Cxx Library Spec != -1 )  {         cxx Flags . remove ( index Of Cxx Library Spec )  ;      } else {         LOG . debug ( "" Cannot determine value of %s"", key )  ;      } } return value ; }"
8066,"public static void fetch From Url ( @ Non Null  Uri open Id Connect Discovery Uri, @ Non Null  Retrieve Configuration Callback callback, @ Non Null  Connection Builder connection Builder ) { check Not Null ( open Id Connect Discovery Uri, ""open ID Connect Discovery Uri cannot be null"" )  ;  check Not Null ( callback, ""callback cannot be null"" )  ;  check Not Null ( connection Builder, ""connection Builder must not be null"" )  ;  new  Configuration Retrieval Async Task ( open Id Connect Discovery Uri, connection Builder, callback )  . execute (  )  ; }"
8067,public int get Redirections Count (  ) { return m Last Location + 1 ; }
8068,public void set Upload Pack Factory (  Upload Pack Factory< Http Servlet Request> f ) { assert Not Initialized (  )  ;  this . upload Pack Factory = f != null ? f :  (  Upload Pack Factory< Http Servlet Request> )   Upload Pack Factory . DISABLED ; }
8069,"public  String get Current User Account (  ) { return ""sonic-demo-master"" ; }"
8070,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
8071,public void set Append Transients ( boolean append Transients ) { this . append Transients = append Transients ; }
8072,"public static void emit Message (  Log Level level,  String category Key,  String message, int sampling Frequency, @ Nullable  Map< String,  Object> metadata ) {  Error Reporter . get Instance (  )  . report ( map ( level ) , category Key, message, sampling Frequency, metadata )  ; }"
8073,public  Container<T> size ( float size ) { size (  Fixed . value Of ( size )  )  ;  return this ; }
8074,"private void write Header ( int file Length, int element Count, int first Position, int last Position )  throws IO Exception{ write Ints ( buffer, file Length, element Count, first Position, last Position )  ;  raf . seek ( 0 )  ;  raf . write ( buffer )  ; }"
8075,"public static  String get MD5 (  String info ) { try {      Message Digest md5 =  Message Digest . get Instance ( ""MD5"" )  ;      md5 . update ( info . get Bytes ( ""UTF-8"" )  )  ;      byte [  ]  encryption = md5 . digest (  )  ;       String Buffer str Buf = new  String Buffer (  )  ;      for  ( int i = 0 ;  i < encryption . length ;  i++ )  {         if  (  Integer . to Hex String ( 0xff & encryption [ i ]  )  . length (  )  == 1 )  {             str Buf . append ( ""0"" )  . append (  Integer . to Hex String ( 0xff & encryption [ i ]  )  )  ;          } else {             str Buf . append (  Integer . to Hex String ( 0xff & encryption [ i ]  )  )  ;          }     }     return str Buf . to String (  )  ;  } catch  (  No Such Algorithm Exception e )  {     return """" ;  } catch  (  Unsupported Encoding Exception e )  {     return """" ;  }}"
8076,"public  Long Buffer put ( long [  ]  src, int off, int len ) { int length = src . length ;  if  ( off < 0 || len < 0 ||  ( long )  len +  ( long )  off > length )  {     throw new  Index Out Of Bounds Exception (  )  ;  } if  ( len > remaining (  )  )  {     throw new  Buffer Overflow Exception (  )  ;  } for  ( int i = off ;  i < off + len ;  i++ )  {     put ( src [ i ]  )  ;  } return this ; }"
8077,"public static  Immutable List< Source Path> source Paths For Compiled Sources (  Build Target base Build Target,  Project Filesystem project Filesystem,  Build Rule Params base Params,  Action Graph Builder graph Builder,  Cxx Platform cxx Platform, D Buck Config d Buck Config,  Immutable List< String> compiler Flags,  Source Sorted Set sources, D Includes includes ) {  Immutable List .  Builder< Source Path> source Paths =  Immutable List . builder (  )  ;  for  (  Map .  Entry< String,  Source Path> source : sources . to Name Map ( base Build Target, graph Builder . get Source Path Resolver (  ) , ""srcs"" )  . entry Set (  )  )  {      Build Target compile Target = create D Compile Build Target ( base Build Target, source . get Key (  ) , cxx Platform )  ;       Build Rule rule = require Build Rule ( compile Target, base Build Target, project Filesystem, base Params, graph Builder, d Buck Config, compiler Flags, source . get Key (  ) , source . get Value (  ) , includes )  ;      source Paths . add ( rule . get Source Path To Output (  )  )  ;  } return source Paths . build (  )  ; }"
8078,public void rotate ( float degrees ) { rotation += degrees ;  dirty = true ; }
8079,"public boolean auto Refresh ( int delayed ) { return auto Refresh ( delayed, m Rebound Duration,  ( m Header Max Drag Rate + m Header Trigger Rate )  / 2, false )  ; }"
8080,"public com . anychart . standalones .  Resource Timeline markers (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
8081,"public static  Fragment get Top In Stack ( @ Non Null final  Fragment Manager fm ) { return get Top Is In Stack ( fm, null, true )  ; }"
8082,"public com . anychart . charts .  Sparkline hatch Fill ( com . anychart . graphics . vector .  Hatch Fill settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
8083,public T get (  ) { return m Value ; }
8084,"public static _ Fields find By Thrift Id Or Throw ( int field Id ) { _ Fields fields = find By Thrift Id ( field Id )  ;  if  ( fields == null )      throw new java . lang .  Illegal Argument Exception ( "" Field "" + field Id + "" doesn't exist!"" )  ;  return fields ; }"
8085,private static final  String get Date Time String (  ) { final  Gregorian Calendar now = new  Gregorian Calendar (  )  ;  return m Date Time Format . format ( now . get Time (  )  )  ; }
8086,"public  Ct Class make Class (  Class File classfile )  throws  Runtime Exception{ return make Class ( classfile, true )  ; }"
8087,public  Auth Dialog Builder set Is Rerequest ( boolean is Rerequest ) { return this ; }
8088,public  Identifier get Identifier ( int i ) { return m Identifiers . get ( i )  ; }
8089,"private void stop Gif (  ) { loading View . set Visibility (  View . VISIBLE )  ;  m Gif Create Helper . stop Gif ( new  File (  File Utils . get Path (  ) , ""GSY-Z-"" +  System . current Time Millis (  )  + "" . gif"" )  )  ; }"
8090,"public com . anychart . charts .  Pie margin (  String value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
8091,public  List< String> get Modified List (  ) { return modified List ; }
8092,"public com . anychart . core .  State Settings stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8093,public int get Mode (  ) { return m View Behind . get Mode (  )  ; }
8094,"public static  String get Base Filename (  File file ) { int index = file . get Name (  )  . to Lower Case (  )  . last Index Of ( "" . "" )  ;  if  ( index > 0 )  {     return file . get Name (  )  . substring ( 0, index )  ;  } return file . get Name (  )  ; }"
8095,"private static int gallop Left ( T key, T [  ]  a, int base, int len, int hint,  Comparator<? super T> c ) { if  ( DEBUG )      assert len > 0 && hint >= 0 && hint < len ;  int last Ofs = 0 ;  int ofs = 1 ;  if  ( c . compare ( key, a [ base + hint ]  )  > 0 )  {     //  Gallop right until a [ base+hint+last Ofs ]  < key <= a [ base+hint+ofs ]      int max Ofs = len - hint ;      while  ( ofs < max Ofs && c . compare ( key, a [ base + hint + ofs ]  )  > 0 )  {         last Ofs = ofs ;          ofs =  ( ofs << 1 )  + 1 ;          if  ( // int overflow         ofs <= 0 )              ofs = max Ofs ;      }     if  ( ofs > max Ofs )          ofs = max Ofs ;      //  Make offsets relative to base     last Ofs += hint ;      ofs += hint ;  } else {     // key <= a [ base + hint ]      //  Gallop left until a [ base+hint-ofs ]  < key <= a [ base+hint-last Ofs ]      final int max Ofs = hint + 1 ;      while  ( ofs < max Ofs && c . compare ( key, a [ base + hint - ofs ]  )  <= 0 )  {         last Ofs = ofs ;          ofs =  ( ofs << 1 )  + 1 ;          if  ( // int overflow         ofs <= 0 )              ofs = max Ofs ;      }     if  ( ofs > max Ofs )          ofs = max Ofs ;      //  Make offsets relative to base     int tmp = last Ofs ;      last Ofs = hint - ofs ;      ofs = hint - tmp ;  } if  ( DEBUG )      assert -1 <= last Ofs && last Ofs < ofs && ofs <= len ;  /*		 *  Now a [ base+last Ofs ]  < key <= a [ base+ofs ] , so key belongs somewhere to the right of last Ofs but no farther right than ofs . 		 *  Do a binary search, with invariant a [ base + last Ofs - 1 ]  < key <= a [ base + ofs ]  . 		 */ last Ofs++ ;  while  ( last Ofs < ofs )  {     int m = last Ofs +  (  ( ofs - last Ofs )  >>> 1 )  ;      if  ( c . compare ( key, a [ base + m ]  )  > 0 )          // a [ base + m ]  < key         last Ofs = m + 1 ;      else         // key <= a [ base + m ]          ofs = m ;  } // so a [ base + ofs - 1 ]  < key <= a [ base + ofs ]  if  ( DEBUG )      assert last Ofs == ofs ;  return ofs ; }"
8096,public void set Transparent ( boolean is Transparent ) { m Is Transparent = is Transparent ; }
8097,public void dispose (  ) { deflater . end (  )  ; }
8098,public void set Local (  ) { throw If Immutable (  )  ;  local [ stack Ptr ]  = true ; }
8099,public  String get Image Url (  ) { return image Url ; }
8100,"public static synchronized void set Default (  Locale locale ) { if  ( locale == null )  {     throw new  Null Pointer Exception ( ""locale == null"" )  ;  } default Locale = locale ; }"
8101,"public JSON Array truncate ( JSON Array array )  throws JSON Exception{ if  ( array == null )  {     return new JSON Array (  )  ;  } for  ( int i = 0 ;  i < array . length (  )  ;  i++ )  {      Object value = array . get ( i )  ;      if  ( value . get Class (  )  . equals (  String . class )  )  {         array . put ( i, truncate (  (  String )  value )  )  ;      } else if  ( value . get Class (  )  . equals ( JSON Object . class )  )  {         array . put ( i, truncate (  ( JSON Object )  value )  )  ;      } else if  ( value . get Class (  )  . equals ( JSON Array . class )  )  {         array . put ( i, truncate (  ( JSON Array )  value )  )  ;      } } return array ; }"
8102,private static boolean is Integral (  Json Primitive primitive ) { if  ( primitive . value instanceof  Number )  {      Number number =  (  Number )  primitive . value ;      return number instanceof  Big Integer || number instanceof  Long || number instanceof  Integer || number instanceof  Short || number instanceof  Byte ;  } return false ; }
8103,"public com . anychart . core . stock . scrollerseries .  Discrete Base max Point Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Point Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
8104,private void build Vertices (  ) { vertices . clear (  )  ;  for  ( int i = 0 ;  i < parts . size ;  i++ )  {     float [  ]  verts = parts . get ( i )  ;      if  ( verts == null )          continue ;      float [  ]  full Verts = new float [ 5 * verts . length / 2 ]  ;      int idx = 0 ;      int col = i / rows ;      int row = i % rows ;      for  ( int j = 0 ;  j < verts . length ;  j += 2 )  {         full Verts [ idx++ ]  = verts [ j ]  + offset . x + x ;          full Verts [ idx++ ]  = verts [ j + 1 ]  + offset . y + y ;          full Verts [ idx++ ]  = color . to Float Bits (  )  ;          float u =  ( verts [ j ]  % grid Width )  / grid Width ;          float v =  ( verts [ j + 1 ]  % grid Height )  / grid Height ;          if  ( verts [ j ]  == col * grid Width )              u = 0f ;          if  ( verts [ j ]  ==  ( col + 1 )  * grid Width )              u = 1f ;          if  ( verts [ j + 1 ]  == row * grid Height )              v = 0f ;          if  ( verts [ j + 1 ]  ==  ( row + 1 )  * grid Height )              v = 1f ;          u = region . get U (  )  +  ( region . get U2 (  )  - region . get U (  )  )  * u ;          v = region . get V (  )  +  ( region . get V2 (  )  - region . get V (  )  )  * v ;          full Verts [ idx++ ]  = u ;          full Verts [ idx++ ]  = v ;      }     vertices . add ( full Verts )  ;  } dirty = false ; }
8105,"private static  Tree maybe Make Lambda Body (  Method Tree compare Method,  Visitor State state ) {  Expression Tree comparison = return Expression ( compare Method )  ;  if  ( comparison != null )  {     // compare (  )  is defined as simply `return something ; ` .   Create a lambda .      return comparison ;  } /*  * compare (  )  has multiple statements .   Let's keep it as a method  ( though we might change its  * modifiers, name, and location )  and construct the  Correspondence with a method reference .  .  .   *  *  .  .  . unless it relies on parameters from the enclosing method, in which case extracting a  * method isn't going to work because it won't be able to access those parameters .   */  Method Tree enclosing Method = state . find Enclosing (  Method Tree . class )  ;  if  ( enclosing Method == null )  {     //  No enclosing method, so we're presumably not closing over anything .   Safe to extract method .      return null ;  }  Immutable Set< Symbol> params Of Enclosing Method = enclosing Method . get Parameters (  )  . stream (  )  . map (  p -> get Declared Symbol ( p )  )  . collect ( to Immutable Set (  )  )  ;  boolean [  ]  reference Found = new boolean [ 1 ]  ;  new  Tree Scanner< Void,  Void> (  )  {     @ Override     public  Void scan (  Tree node,  Void a Void )  {         if  ( params Of Enclosing Method . contains ( get Symbol ( node )  )  )  {             reference Found [ 0 ]  = true ;          }         return super . scan ( node, a Void )  ;      } } . scan ( state . get Path (  )  . get Leaf (  ) , null )  ;  if  ( !reference Found [ 0 ]  )  {     //  No references to anything from the enclosing method .   Probably safe to extract a method .      return null ;  } /*  * compare (  )  both:  *  * - uses a parameter from the enclosing method and  *  * - has multiple statements  *  *  So we create a block lambda .   */ return compare Method . get Body (  )  ; }"
8106,public synchronized void register Listener (  Listener lynx Presenter ) { listeners . add ( lynx Presenter )  ; }
8107,"public boolean populate (  Extractor Input input, boolean quiet )  throws IO Exception,  Interrupted Exception{ scratch . reset (  )  ;  reset (  )  ;  boolean has Enough Bytes = input . get Length (  )  == C . LENGTH_UNSET || input . get Length (  )  - input . get Peek Position (  )  >= EMPTY_PAGE_HEADER_SIZE ;  if  ( !has Enough Bytes || !input . peek Fully ( scratch . data, 0, EMPTY_PAGE_HEADER_SIZE, true )  )  {     if  ( quiet )  {         return false ;      } else {         throw new EOF Exception (  )  ;      } } if  ( scratch . read Unsigned Int (  )  != TYPE_OGGS )  {     if  ( quiet )  {         return false ;      } else {         throw new  Parser Exception ( ""expected  Ogg S capture pattern at begin of page"" )  ;      } } revision = scratch . read Unsigned Byte (  )  ;  if  ( revision != 0x00 )  {     if  ( quiet )  {         return false ;      } else {         throw new  Parser Exception ( ""unsupported bit stream revision"" )  ;      } } type = scratch . read Unsigned Byte (  )  ;  granule Position = scratch . read Little Endian Long (  )  ;  stream Serial Number = scratch . read Little Endian Unsigned Int (  )  ;  page Sequence Number = scratch . read Little Endian Unsigned Int (  )  ;  page Checksum = scratch . read Little Endian Unsigned Int (  )  ;  page Segment Count = scratch . read Unsigned Byte (  )  ;  header Size = EMPTY_PAGE_HEADER_SIZE + page Segment Count ;  // calculate total size of header including laces scratch . reset (  )  ;  input . peek Fully ( scratch . data, 0, page Segment Count )  ;  for  ( int i = 0 ;  i < page Segment Count ;  i++ )  {     laces [ i ]  = scratch . read Unsigned Byte (  )  ;      body Size += laces [ i ]  ;  } return true ; }"
8108,"public  Identify add (  String property, JSON Object values ) { add To User Properties (  Constants . AMP_OP_ADD, property, values )  ;  return this ; }"
8109,public void unlock Position (  ) { m Position Locked = false ;  m Locked Point = null ; }
8110,"public com . anychart . charts .  Pert padding (  Number value1,  Number value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, value2, wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
8111,public void add Pie Slice (  Pie Model _ Slice ) { highlight Slice ( _ Slice )  ;  m Pie Data . add ( _ Slice )  ;  m Total Value += _ Slice . get Value (  )  ;  on Data Changed (  )  ; }
8112,"public  Builder add Item Decorations ( @ Non Null  Recycler View .  Item Decoration .  .  .  item Decorations ) {  Collections . add All ( this . m Item Decoration, item Decorations )  ;  return this ; }"
8113,"public void before Mount ( final  Extension State< State> extension State, final  Input input, @ Nullable final  Rect local Visible Rect ) {}"
8114,"private P create View Id And Presenter (  ) { P presenter = delegate Callback . create Presenter (  )  ;  if  ( presenter == null )  {     throw new  Null Pointer Exception ( "" Presenter returned from create Presenter (  )  is null .   Fragment is "" + fragment )  ;  } if  ( keep Presenter Instance During Screen Orientation Changes )  {     mosby View Id = UUID . random UUID (  )  . to String (  )  ;       Presenter Manager . put Presenter ( get Activity (  ) , mosby View Id, presenter )  ;  } return presenter ; }"
8115,"public com . anychart . core . ui . scroller .  Thumbs stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8116,"public  Task< Void> clear Persistence (  ) { final  Task Completion Source< Void> source = new  Task Completion Source<> (  )  ;  async Queue . enqueue And Forget Even After Shutdown (  (  )  -> {     try {         if  ( client != null && !client . is Terminated (  )  )  {             throw new  Firebase Firestore Exception ( "" Persistence cannot be cleared while the firestore instance is running . "",  Code . FAILED_PRECONDITION )  ;          }         SQ Lite Persistence . clear Persistence ( context, database Id, persistence Key )  ;          source . set Result ( null )  ;      } catch  (  Firebase Firestore Exception e )  {         source . set Exception ( e )  ;      } } )  ;  return source . get Task (  )  ; }"
8117,"public  String inner Text (  ) {  Char Sequence text = real Text View . get Text (  )  ;  return  ( text == null || real Text View . get Visibility (  )  !=  View . VISIBLE )  ? """" : text . to String (  )  ; }"
8118,"public com . anychart . core . lineargauge . pointers .  Thermometer fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
8119,"public static byte [  ]  patch Fast (  Input Stream old Input Stream, int oldsize, byte [  ]  diff Bytes, int ext Len )  throws IO Exception{ //  Read in old file  ( file to be patched )  to old Buf byte [  ]  old Buf = new byte [ oldsize ]  ;  BS Util . read From Stream ( old Input Stream, old Buf, 0, oldsize )  ;  old Input Stream . close (  )  ;  return BS Patch . patch Fast ( old Buf, oldsize, diff Bytes, diff Bytes . length, ext Len )  ; }"
8120,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
8121,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
8122,"private static boolean is Visible ( int mod,  String from,  Member meth ) { if  (  ( mod &  Modifier . PRIVATE )  != 0 )      return false ;  else if  (  ( mod &  (  Modifier . PUBLIC |  Modifier . PROTECTED )  )  != 0 )      return true ;  else {      String p = get Package Name ( from )  ;       String q = get Package Name ( meth . get Declaring Class (  )  . get Name (  )  )  ;      if  ( p == null )          return q == null ;      return p . equals ( q )  ;  }}"
8123,public int get Missing Width (  ) { return this . missing Width ; }
8124,public  Component Descriptor component Descriptor (  ) { return graph . component Descriptor (  )  ; }
8125,public void set Disabled ( boolean is Disabled ) { this . is Disabled = is Disabled ; }
8126,public T get Last Selected (  ) { if  ( last Selected != null )  {     return last Selected ;  } else if  ( selected . size > 0 )  {     return selected . first (  )  ;  } return null ; }
8127,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
8128,"public  Push Command add (  String name Or Spec ) { if  ( 0 <= name Or Spec . index Of ( ':' )  )  {     ref Specs . add ( new  Ref Spec ( name Or Spec )  )  ;  } else {      Ref src ;      try {         src = repo . find Ref ( name Or Spec )  ;      } catch  ( IO Exception e )  {         throw new J Git Internal Exception ( J Git Text . get (  )  . exception Caught During Execution Of Push Command, e )  ;      }     if  ( src != null )          add ( src )  ;  } return this ; }"
8129,"public com . anychart . core . cartesian . series .  Line3d color Scale ( com . anychart . enums .  Scale Types settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . color Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
8130,static boolean is Simple Type (  Type type ) { if  ( type instanceof  Class )  {      Class<?> raw Class =  Primitives . wrap (  (  Class<?> )  type )  ;      //  These types need no processing for     return raw Class . equals (  String . class )  || raw Class . equals (  Character . class )  || raw Class . equals (  Boolean . class )  || raw Class . equals (  Byte . class )  || raw Class . equals (  Short . class )  || raw Class . equals (  Integer . class )  || raw Class . equals (  Long . class )  || raw Class . equals (  Float . class )  || raw Class . equals (  Double . class )  || raw Class . equals (  Optional Int . class )  ;  } else if  ( type instanceof  Wildcard Type )  {      Wildcard Type wildcard Type =  (  Wildcard Type )  type ;       Type [  ]  upper Bounds = wildcard Type . get Upper Bounds (  )  ;       Preconditions . check State ( upper Bounds . length == 1 )  ;      return false ;  } return false ; }
8131,public void set Component Tree (  Component Tree component Tree ) { final  Litho View litho View = new  Litho View ( this )  ;  litho View . set Component Tree ( component Tree )  ;  set Content View ( litho View )  ; }
8132,public T skip Memory Cache ( boolean skip ) { if  ( is Auto Clone Enabled )  {     return clone (  )  . skip Memory Cache ( true )  ;  } this . is Cacheable = !skip ;  fields |= IS_CACHEABLE ;  return self Or Throw If Locked (  )  ; }
8133,"public void clear Break Point ( int line ) { if  ( source Info . breakable Line ( line )  )  {     boolean changed = source Info . breakpoint ( line, false )  ;      if  ( changed )  {         file Header . repaint (  )  ;      } }}"
8134,"public void remove Node From Parent (  Mutable Tree Node node ) {  Mutable Tree Node parent =  (  Mutable Tree Node )  node . get Parent (  )  ;  if  ( parent == null )      throw new  Illegal Argument Exception ( ""node does not have a parent . "" )  ;  int [  ]  child Index = new int [ 1 ]  ;   Object [  ]  removed Array = new  Object [ 1 ]  ;  child Index [ 0 ]  = parent . get Index ( node )  ;  parent . remove ( child Index [ 0 ]  )  ;  removed Array [ 0 ]  = node ;  nodes Were Removed ( parent, child Index, removed Array )  ; }"
8135,"public void test Last Ditch Settings Load (  )  throws  Exception{ when ( mock Settings Spi Call . invoke ( any (  Settings Request . class ) , eq ( true )  )  )  . then Return ( null )  ;  final JSON Object expired Cached Settings Json = new JSON Object (  )  ;  when ( mock Cached Settings Io . read Cached Settings (  )  )  . then Return ( expired Cached Settings Json )  ;  when ( mock Current Time Provider . get Current Time Millis (  )  )  . then Return (  Long . value Of ( EXPIRED_CURRENT_TIME_MILLIS )  )  ;  final  Settings Data expired Cached Settings = new  Test Settings Data (  )  ;  when ( mock Settings Json Parser . parse Settings Json ( expired Cached Settings Json )  )  . then Return ( expired Cached Settings )  ;   Task Completion Source< Void> data Collection Permission = new  Task Completion Source<> (  )  ;  when ( mock Data Collection Arbiter . wait For Data Collection Permission (  )  )  . then Return ( data Collection Permission . get Task (  )  )  ;  final  Settings Request request Data = build Settings Request (  )  ;  final  Settings Controller controller = new Settings Controller ( request Data, mock Current Time Provider, mock Settings Json Parser, mock Cached Settings Io, mock Settings Spi Call, mock Data Collection Arbiter, false )  ;   Task< Void> load Finished = controller . load Settings Data (  Settings Cache Behavior . SKIP_CACHE_LOOKUP, network Executor )  ;  assert Equals ( expired Cached Settings, controller . get Settings (  )  )  ;  assert Equals ( expired Cached Settings . app Data, await ( controller . get App Settings (  )  )  )  ;  data Collection Permission . try Set Result ( null )  ;  await ( load Finished )  ;  assert Equals ( expired Cached Settings . app Data, await ( controller . get App Settings (  )  )  )  ;  assert Equals ( expired Cached Settings, controller . get Settings (  )  )  ;  verify ( mock Settings Spi Call )  . invoke ( any (  Settings Request . class ) , eq ( true )  )  ;  verify ( mock Cached Settings Io )  . read Cached Settings (  )  ;  verify ( mock Settings Json Parser )  . parse Settings Json ( expired Cached Settings Json )  ;  verify ( mock Current Time Provider, times ( 2 )  )  . get Current Time Millis (  )  ; }"
8136,"public com . anychart . core . annotations .  Andrews Pitchfork min Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
8137,"public static float lerp ( float a, float b, float t ) { return a +  ( b - a )  * t ; }"
8138,"public  File get Native Libs Dir (  ) { // 必须使用宿主的 Context对象，防止出现“目录定位到插件内”的问题  Context context =  Re Plugin Internal . get App Context (  )  ;   File dir ;  if  ( is Pn Plugin (  )  )  {     dir = context . get Dir (  Constant . LOCAL_PLUGIN_DATA_LIB_DIR, 0 )  ;  } else if  ( get Is Pending Cover (  )  )  {     dir = context . get Dir (  Constant . LOCAL_PLUGIN_APK_COVER_DIR, 0 )  ;  } else {     dir = context . get Dir (  Constant . LOCAL_PLUGIN_APK_LIB_DIR, 0 )  ;  } return new  File ( dir, make Installed File Name (  )  )  ; }"
8139,"private  Annotations parse Annotations (  Annotation Visibility visibility )  throws IO Exception{ int count = input . read Unsigned Short (  )  ;  if  ( observer != null )  {     parsed ( 2, ""num_annotations: "" +  Hex . u2 ( count )  )  ;  }  Annotations annotations = new  Annotations (  )  ;  for  ( int i = 0 ;  i < count ;  i++ )  {     if  ( observer != null )  {         parsed ( 0, ""annotations [ "" + i + "" ] :"" )  ;          change Indent ( 1 )  ;      }      Annotation annotation = parse Annotation ( visibility )  ;      annotations . add ( annotation )  ;      if  ( observer != null )  {         observer . change Indent ( -1 )  ;      } } annotations . set Immutable (  )  ;  return annotations ; }"
8140,"public  Mesh copy ( boolean is Static ) { return copy ( is Static, false, null )  ; }"
8141,"public  Complete Builder table ( @ Non Null  String table ) { check Not Empty ( table, "" Table name is null or empty"" )  ;  this . table = table ;  return this ; }"
8142,"public  Map< String,  String> get Effective Converter Map (  ) {  Map< String,  String> effective Map = new  Hash Map< String,  String> (  )  ;  // add the least specific map fist  Map< String,  String> default Map = get Default Converter Map (  )  ;  if  ( default Map != null )  {     effective Map . put All ( default Map )  ;  } // context Map is more specific than the default map  Context context = get Context (  )  ;  if  ( context != null )  {     @ Suppress Warnings ( ""unchecked"" )   Map< String,  String> context Map =  (  Map< String,  String> )  context . get Object (  Core Constants . PATTERN_RULE_REGISTRY )  ;      if  ( context Map != null )  {         effective Map . put All ( context Map )  ;      } } // set the most specific map last effective Map . put All ( instance Converter Map )  ;  return effective Map ; }"
8143,public void set Filter (  Tree Filter filter ) { this . filter = filter ; }
8144,public byte map ( byte src ) { char c = map (  ( char )  src )  ;  if  ( c <  Byte . MIN_VALUE || c >  Byte . MAX_VALUE )  {     // out of range     return 0 ;  } return  ( byte )  c ; }
8145,public  Set< Android Library> get All Awb Librarys (  ) {  Set< Android Library> sets = new  Hash Set<> (  )  ;  for  (  Awb Bundle awb Bundle : get Awb Bundles (  )  )  {     sets . add ( awb Bundle . get Android Library (  )  )  ;  } return sets ; }
8146,public int size (  ) { return 1 ; }
8147,"public static void translate Cxx Platform Flags (  Cxx Platform .  Builder cxx Platform Builder,  Cxx Platform cxx Platform,  Immutable Map< String,  Arg> flag Macros ) {  Function< Arg,  Arg> translate Function = new  Cxx Flags .  Translate Macros Args Function (  Immutable Sorted Map . copy Of ( flag Macros )  )  ;   Function< Immutable List< Arg>,  Immutable List< Arg>> expand Macros =  flags -> flags . stream (  )  . map ( translate Function )  . collect (  Immutable List . to Immutable List (  )  )  ;  cxx Platform Builder . set Asflags ( expand Macros . apply ( cxx Platform . get Asflags (  )  )  )  ;  cxx Platform Builder . set Asppflags ( expand Macros . apply ( cxx Platform . get Asppflags (  )  )  )  ;  cxx Platform Builder . set Cflags ( expand Macros . apply ( cxx Platform . get Cflags (  )  )  )  ;  cxx Platform Builder . set Cxxflags ( expand Macros . apply ( cxx Platform . get Cxxflags (  )  )  )  ;  cxx Platform Builder . set Cppflags ( expand Macros . apply ( cxx Platform . get Cppflags (  )  )  )  ;  cxx Platform Builder . set Cxxppflags ( expand Macros . apply ( cxx Platform . get Cxxppflags (  )  )  )  ;  cxx Platform Builder . set Cudappflags ( expand Macros . apply ( cxx Platform . get Cudappflags (  )  )  )  ;  cxx Platform Builder . set Cudaflags ( expand Macros . apply ( cxx Platform . get Cudaflags (  )  )  )  ;  cxx Platform Builder . set Hipppflags ( expand Macros . apply ( cxx Platform . get Hipppflags (  )  )  )  ;  cxx Platform Builder . set Hipflags ( expand Macros . apply ( cxx Platform . get Hipflags (  )  )  )  ;  cxx Platform Builder . set Asmppflags ( expand Macros . apply ( cxx Platform . get Asmppflags (  )  )  )  ;  cxx Platform Builder . set Asmflags ( expand Macros . apply ( cxx Platform . get Asmflags (  )  )  )  ;  cxx Platform Builder . set Ldflags ( expand Macros . apply ( cxx Platform . get Ldflags (  )  )  )  ;  cxx Platform Builder . set Strip Flags ( expand Macros . apply ( cxx Platform . get Strip Flags (  )  )  )  ;  cxx Platform Builder . set Arflags ( expand Macros . apply ( cxx Platform . get Arflags (  )  )  )  ;  cxx Platform Builder . set Ranlibflags ( expand Macros . apply ( cxx Platform . get Ranlibflags (  )  )  )  ; }"
8148,public short get Y Coord ( int point Index ) { return y Coords [ point Index ]  ; }
8149,public void set Parameters (  Parameters Builder parameters Builder ) { set Parameters ( parameters Builder . build (  )  )  ; }
8150,"public com . anychart . charts .  Pert title (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . title ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8151,"public void set Is Pending Cover ( boolean cover Info ) { m Is Pending Cover = cover Info ;  if  ( cover Info )  {     put ( PI_COVER, true )  ;  } else {     m Json . remove ( PI_COVER )  ;  }}"
8152,"private void parse Header (  ) { header Scratch Bits . set Position ( 0 )  ;   Sync Frame Info frame Info =  Ac4 Util . parse Ac4 Syncframe Info ( header Scratch Bits )  ;  if  ( format == null || frame Info . channel Count != format . channel Count || frame Info . sample Rate != format . sample Rate || ! Mime Types . AUDIO_AC4 . equals ( format . sample Mime Type )  )  {     format =  Format . create Audio Sample Format ( track Format Id,  Mime Types . AUDIO_AC4, /* codecs= */     null, /* bitrate= */      Format . NO_VALUE, /* max Input Size= */      Format . NO_VALUE, frame Info . channel Count, frame Info . sample Rate, /* initialization Data= */     null, /* drm Init Data= */     null, /* selection Flags= */     0, language )  ;      output . format ( format )  ;  } sample Size = frame Info . frame Size ;  //  In this class a sample is an AC-4 sync frame, but  Format#sample Rate specifies the number of // PCM audio samples per second .  sample Duration Us = C . MICROS_PER_SECOND * frame Info . sample Count / format . sample Rate ; }"
8153,"public void stack Mode (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stack Mode (  )  ; "" )  ; }"
8154,"public com . anychart . core . mekko . series .  Mekko get Series At (  Number index ) { return new com . anychart . core . mekko . series .  Mekko (  String . format (  Locale . US, js Base + "" . get Series At ( %s ) "", index )  )  ; }"
8155,"public static  Boolean update Component (  String [  ]  path,  Field field,  Object o, @ Nullable final  Set Data Operations .  Flipper Value Hint hint,  Flipper Dynamic dynamic ) {  Editor Value edit = parse Editor Value ( hint, dynamic )  ;  //  Strip  Props/ State with -1 and the field name with > 1 for  ( int i = path . length - 1 ;  i > 1 ;  i-- )  {      Hash Map< String,  Editor Value> content = new  Hash Map<> (  )  ;      content . put ( path [ i ] , edit )  ;      edit =  Editor Value . shape ( content )  ;  } return  Editor Registry . write ( field . get Type (  ) , field, o, edit )  ; }"
8156,public PDF Object get Font File2 (  ) { return this . font File2 ; }
8157,public  String get Email Address (  ) { return email Address ; }
8158,"public  Rev Flag new Flag (  String name ) { final int m = alloc Flag (  )  ;  return new  Rev Flag ( this, name, m )  ; }"
8159,"public void zoom To Point ( float scale,  Point F image Point,  Point F view Point ) { F Log . v ( TAG, ""zoom To Point"" )  ;  calculate Zoom To Point Transform ( m Active Transform, scale, image Point, view Point, LIMIT_ALL )  ;  on Transform Changed (  )  ; }"
8160,public static void set Is Present ( boolean value ) { is Present = value ; }
8161,public  Builder use Cancelable Layout Futures ( boolean is Enabled ) { this . use Cancelable Layout Futures = is Enabled ;  return this ; }
8162,"public com . anychart . charts .  Scatter bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
8163,"public  On Visibility Changed View Model_ on Bind (  On Model Bound Listener< On Visibility Changed View Model_,  On Visibility Changed View> listener ) { on Mutation (  )  ;  this . on Model Bound Listener_epoxy Generated Model = listener ;  return this ; }"
8164,public byte [  ]  get Cache (  String url ) {  Cache cache =  Http Config . m Cache ;  cache . initialize (  )  ;   Cache .  Entry entry = cache . get ( url )  ;  if  ( entry != null )  {     return entry . data ;  } else {     return new byte [ 0 ]  ;  }}
8165,public final boolean cancel ( boolean may Interrupt If Running ) { m Cancelled . set ( true )  ;  return m Future . cancel ( may Interrupt If Running )  ; }
8166,"public com . anychart . scales .  Scatter Base y Scale (  ) { return new com . anychart . scales .  Scatter Base ( js Base + "" . y Scale (  ) "" )  ; }"
8167,public boolean is Set From Node (  ) { return this . from Node != null ; }
8168,"private  Byte Window get Or Load (  Pack pack, long position )  throws IO Exception{ final int slot = slot ( pack, position )  ;  final  Entry e1 = table . get ( slot )  ;   Byte Window v = scan ( e1, pack, position )  ;  if  ( v != null )  {     stats Recorder . record Hits ( 1 )  ;      return v ;  } synchronized  ( lock ( pack, position )  )  {      Entry e2 = table . get ( slot )  ;      if  ( e2 != e1 )  {         v = scan ( e2, pack, position )  ;          if  ( v != null )  {             stats Recorder . record Hits ( 1 )  ;              return v ;          }     }     v = load ( pack, position )  ;      final  Page Ref< Byte Window> ref = create Ref ( pack, position, v )  ;      hit ( ref )  ;      for  (  ;   ;   )  {         final  Entry n = new  Entry ( clean ( e2 ) , ref )  ;          if  ( table . compare And Set ( slot, e2, n )  )              break ;          e2 = table . get ( slot )  ;      } } if  ( evict Lock . try Lock (  )  )  {     try {         gc (  )  ;          evict (  )  ;      } finally {         evict Lock . unlock (  )  ;      } } return v ; }"
8169,"public  Filter get Filter Data (  ) { if  ( dirty Filter )  {     jni Get Filter Data ( addr, tmp )  ;      filter . mask Bits = tmp [ 0 ]  ;      filter . category Bits = tmp [ 1 ]  ;      filter . group Index = tmp [ 2 ]  ;      dirty Filter = false ;  } return filter ; }"
8170,public  Cell set Flip Horizontally ( boolean flip Horizontally ) { this . flip Horizontally = flip Horizontally ;  return this ; }
8171,"public void test Pull Uri (  ) {  Issue issue =  Issue Uri Matcher . get Issue (  Uri . parse ( ""https://github . com/defunkt/resque/pull/3"" )  )  ;  assert Not Null ( issue )  ;  assert Equals ( 3, issue . number (  )  . int Value (  )  )  ;  assert Not Null ( issue . repository (  )  )  ;  assert Equals ( ""resque"", issue . repository (  )  . name (  )  )  ;  assert Not Null ( issue . repository (  )  . owner (  )  )  ;  assert Equals ( ""defunkt"", issue . repository (  )  . owner (  )  . login (  )  )  ; }"
8172,public void set Value Unit (  String _value Unit ) { m Value Unit = _value Unit == null ? DEF_VALUE_UNIT : _value Unit ; }
8173,"public  Object get ( int index ) { if  ( index == 0 )  {     return element ;  } throw new  Index Out Of Bounds Exception ( index + "" != 0"" )  ; }"
8174,"private float ccw ( float p3x, float p3y ) {  Float Array hull = this . hull ;  int size = hull . size ;  float p1x = hull . get ( size - 4 )  ;  float p1y = hull . get ( size - 3 )  ;  float p2x = hull . get ( size - 2 )  ;  float p2y = hull . peek (  )  ;  return  ( p2x - p1x )  *  ( p3y - p1y )  -  ( p2y - p1y )  *  ( p3x - p1x )  ; }"
8175,public static boolean is Gps Enabled (  Context context ) {  Location Manager alm =  (  Location Manager )  context . get System Service (  Context . LOCATION_SERVICE )  ;  if  ( !alm . is Provider Enabled (  Location Manager . GPS_PROVIDER )  )  {     return false ;  } return true ; }
8176,"public com . anychart . core . utils .  Connector stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8177,"public final  Json Element to Json Tree ( T value ) { try {      Json Tree Writer json Writer = new  Json Tree Writer (  )  ;      write ( json Writer, value )  ;      return json Writer . get (  )  ;  } catch  ( IO Exception e )  {     throw new  Json IO Exception ( e )  ;  }}"
8178,public  Map With Proto Values Fluent Assertion<M> ignoring Field Absence Of Field Descriptors For Values (  Iterable< Field Descriptor> field Descriptors ) { return using Config ( config . ignoring Field Absence Of Field Descriptors ( field Descriptors )  )  ; }
8179,public  File Mode get New Mode (  ) { return new Mode ; }
8180,public  Byte Buffer get Stream Buffer (  )  throws IO Exception{ if  ( type == INDIRECT )  {     return dereference (  )  . get Stream Buffer (  )  ;  } else if  ( type == STREAM && stream != null )  {     synchronized  ( stream )  {          Byte Buffer stream Buf = decode Stream (  )  ;          //  Byte Buffer stream Buf = stream ;          return stream Buf . duplicate (  )  ;      } } else if  ( type == STRING )  {      String src = get String Value (  )  ;      return  Byte Buffer . wrap ( src . get Bytes (  )  )  ;  } // wrong type return null ; }
8181,"public com . anychart . core . annotations .  Triangle min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
8182,public  String get Key For Id ( int id ) { return id To Key . get ( id )  ; }
8183,"public void share With Facebook (  String caption Or Options,  String link,  String name,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Facebook ( %s, %s, %s, %s )  ; "", wrap Quotes ( caption Or Options ) , wrap Quotes ( link ) , wrap Quotes ( name ) , wrap Quotes ( description )  )  )  ; }"
8184,public void handle Stop (  ) { abandon Audio Focus ( /* force Abandon= */ true )  ; }
8185,"public C Map get C Map ( short platform ID, short platform Specific ID ) {  Cmap Subtable key = new  Cmap Subtable ( platform ID, platform Specific ID )  ;  return  ( C Map )  subtables . get ( key )  ; }"
8186,"public static byte [  ]  create Vendor Op Code ( final int op Code, final int company Identifier ) { final byte [  ]  op Codes = new byte [ 3 ]  ;  op Codes [ 0 ]  =  ( byte )   ( op Code | 0x C0 )  ;  op Codes [ 1 ]  =  ( byte )   ( company Identifier & 0x FF )  ;  op Codes [ 2 ]  =  ( byte )   (  ( company Identifier >> 8 )  & 0x FF )  ;  return op Codes ; }"
8187,"protected  Immutable List< Build Rule> resolve (  Build Rule Resolver resolver,  Immutable List< Build Target> input )  throws  Macro Exception{ return  Fluent Iterable . from ( super . resolve ( resolver, input )  )  . filter (  Cxx Preprocessor Dep . class::is Instance )  . to List (  )  ; }"
8188,"public static boolean concatenate Files (  Path dest,  Iterable< Path> paths To Concatenate )  throws IO Exception{ //  Concatenate all the logs to a temp file, then atomically rename it to the // passed-in concatenated Path if any log data was collected .   String temp Filename = "" . "" + dest . get File Name (  )  + "" . tmp . "" + UUID . random UUID (  )  ;   Path temp Path = dest . resolve Sibling ( temp Filename )  ;  try {     long bytes Collected = 0 ;      try  (  Output Stream os =  Files . new Output Stream ( temp Path,  Standard Open Option . CREATE,  Standard Open Option . TRUNCATE_EXISTING,  Standard Open Option . WRITE )  )  {         for  (  Path path : paths To Concatenate )  {             try  (  Input Stream is =  Files . new Input Stream ( path )  )  {                 bytes Collected +=  Byte Streams . copy ( is, os )  ;              } catch  (  No Such File Exception e )  {                 continue ;              }         }     }     if  ( bytes Collected > 0 )  {          Files . move ( temp Path, dest,  Standard Copy Option . REPLACE_EXISTING,  Standard Copy Option . ATOMIC_MOVE )  ;          return true ;      } else {         return false ;      } } finally {      Files . delete If Exists ( temp Path )  ;  }}"
8189,"public  String table Create Statement (  Type<T> type,  Table Creation Mode mode ) {  String table Name = type . get Name (  )  ;   Query Builder qb = create Query Builder (  )  ;  qb . keyword ( CREATE )  ;  if  ( type . get Table Create Attributes (  )  != null )  {     for  (  String attribute : type . get Table Create Attributes (  )  )  {         qb . append ( attribute, true )  ;      } } qb . keyword ( TABLE )  ;  if  ( mode ==  Table Creation Mode . CREATE_NOT_EXISTS )  {     qb . keyword ( IF, NOT, EXISTS )  ;  } qb . table Name ( table Name )  ;  qb . open Parenthesis (  )  ;  int index = 0 ;  // columns to define first  Predicate< Attribute> filter = new  Predicate< Attribute> (  )  {     @ Override     public boolean test (  Attribute value )  {         if  ( value . is Version (  )  && !platform . version Column Definition (  )  . create Column (  )  )  {             return false ;          }         if  ( platform . supports Inline Foreign Key Reference (  )  )  {             return !value . is Foreign Key (  )  && !value . is Association (  )  ;          } else {             return value . is Foreign Key (  )  || !value . is Association (  )  ;          }     } } ;   Set< Attribute<T, ?>> attributes = type . get Attributes (  )  ;  for  (  Attribute attribute : attributes )  {     if  ( filter . test ( attribute )  )  {         if  ( index > 0 )  {             qb . comma (  )  ;          }         create Column ( qb, attribute )  ;          index++ ;      } } // foreign keys for  (  Attribute attribute : attributes )  {     if  ( attribute . is Foreign Key (  )  )  {         if  ( index > 0 )  {             qb . comma (  )  ;          }         create Foreign Key Column ( qb, attribute, true, false )  ;          index++ ;      } } // composite primary key if  ( type . get Key Attributes (  )  . size (  )  > 1 )  {     if  ( index > 0 )  {         qb . comma (  )  ;      }     qb . keyword ( PRIMARY, KEY )  ;      qb . open Parenthesis (  )  ;      qb . comma Separated ( type . get Key Attributes (  ) , new  Query Builder .  Appender< Attribute<T, ?>> (  )  {         @ Override         public void append (  Query Builder qb,  Attribute<T, ?> value )  {             qb . attribute ( value )  ;          }     } )  ;      qb . close Parenthesis (  )  ;  } qb . close Parenthesis (  )  ;  return qb . to String (  )  ; }"
8190,"public com . anychart . core . polar . series .  Range Column hatch Fill (  String type,  String color,  Number thickness,  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s, %s, %s, %s )  ; "", wrap Quotes ( type ) , wrap Quotes ( color ) , thickness, size )  )  ;  return this ; }"
8191,"public static void main (  String [  ]  args ) {  System . out . println ( "" Javassist version "" +  Ct Class . version )  ;   System . out . println ( "" Copyright  ( C )  1999-2021  Shigeru  Chiba . "" + ""  All  Rights  Reserved . "" )  ; }"
8192,"private void set Target Offset Top And Bottom ( int offset, boolean requires Update ) { //bring To Front (  ) 该方法会调用request Layout (  ) 和invalidate (  ) 把view放到前面 //已经重写了get Child Drawing Order方法，所以没有必要再调用该方法了，我个人认为 .  .  .  //可通过手动调用invalidate (  ) 来代替它 //        m Circle View . bring To Front (  )  ;  m Circle View . offset Top And Bottom ( offset )  ;  m Current Target Offset Top = m Circle View . get Top (  )  ;  if  ( requires Update )  /*&& android . os .  Build . VERSION . SDK_INT < 11*/ {     invalidate (  )  ;  }}"
8193,"public com . anychart . core . stock . indicators . PSAR psar ( com . anychart . data .  Table Mapping mapping,  Number acceleration Factor Start,  Number acceleration Factor Increment,  Number acceleration Factor Maximum,  String series Type ) { return new com . anychart . core . stock . indicators . PSAR (  String . format (  Locale . US, js Base + "" . psar ( %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, acceleration Factor Start, acceleration Factor Increment, acceleration Factor Maximum, wrap Quotes ( series Type )  )  )  ; }"
8194,"private void init Segmented Control Acknowledgement Timer ( final int seq Zero, final int ttl, final int src, final int dst, final int seg N ) { if  ( !m Segmented Control Acknowledgement Timer Started )  {     m Segmented Control Acknowledgement Timer Started = true ;      final int duration = BLOCK_ACK_TIMER +  ( 50 * ttl )  ;      m Duration =  System . current Time Millis (  )  + duration ;      m Handler . post Delayed (  (  )  -> send Block Ack ( seq Zero, ttl, src, dst, seg N ) , duration )  ;  }}"
8195,"public void save As Jpg (  String width,  Number height,  Number quality,  Boolean force Transparent White,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Jpg ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( width ) , height, quality, force Transparent White, wrap Quotes ( filename )  )  )  ; }"
8196,public void set Start Scan Succeeds ( boolean succeeds ) { this . start Scan Succeeds = succeeds ; }
8197,"protected boolean standard Equals ( @ Nullable  Object object ) { return  Sets . equals Impl ( this, object )  ; }"
8198,"public  Realm Query<E> between (  String field Name,  Decimal128 from,  Decimal128 to ) { realm . check If Valid (  )  ;   Field Descriptor fd = schema . get Field Descriptors ( field Name,  Realm Field Type . DECIMAL128 )  ;  this . query . between ( fd . get Column Keys (  ) , from, to )  ;  return this ; }"
8199,public  Optional< File> find Buck File (  File file ) { return buck Target Locator . find Buck File For Path ( file . to Path (  )  )  . map (  Path::to File )  ; }
8200,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
8201,"public  Deploy Result publish (  List< Artifact> to Publish )  throws  Deployment Exception{  Repository System repo Sys =  Objects . require Non Null ( locator . get Service (  Repository System . class )  )  ;   Default Repository System Session session =  Maven Repository System Utils . new Session (  )  ;  session . set Local Repository Manager ( repo Sys . new Local Repository Manager ( session, local Repo )  )  ;  session . set Read Only (  )  ;   Deploy Request deploy Request = create Deploy Request ( to Publish )  ;  if  ( dry Run )  {     return new  Deploy Result ( deploy Request )  . set Artifacts ( to Publish )  . set Metadata ( deploy Request . get Metadata (  )  )  ;  } else {     return repo Sys . deploy ( session, deploy Request )  ;  }}"
8202,"public void test Acquire Token Multi Resource Token User Id (  )  throws IO Exception,  Interrupted Exception{ final  File Mock Context mock Context = new  File Mock Context ( get Instrumentation (  )  . get Context (  )  )  ;  final  String token To Test = ""access Token="" + UUID . random UUID (  )  ;  final  String expected AT = ""accesstoken"" ;   String resource = "" Resource"" + UUID . random UUID (  )  ;  I Token Cache Store mock Cache = new  Default Token Cache Store ( mock Context )  ;  mock Cache . remove All (  )  ;   Test Cache Item new Item = new  Test Cache Item (  )  ;  new Item . set Token ( token To Test )  ;  new Item . set Refresh Token ( ""refresh Token Normal"" )  ;  new Item . set Authority ( VALID_AUTHORITY )  ;  new Item . set Resource ( resource )  ;  new Item . set Client Id ( "" Clien Tid"" )  ;  new Item . set User Id ( TEST_IDTOKEN_USERID )  ;  new Item . set Name ( ""name"" )  ;  new Item . set Family Name ( ""family Name"" )  ;  new Item . set Display Id ( TEST_IDTOKEN_UPN )  ;  new Item . set Tenant Id ( ""tenant Id"" )  ;  new Item . set Multi Resource ( false )  ;  add Item To Cache ( mock Cache, new Item )  ;  new Item = new  Test Cache Item (  )  ;  new Item . set Token ( """" )  ;  new Item . set Refresh Token ( ""refresh Token Multi Resource"" )  ;  new Item . set Authority ( VALID_AUTHORITY )  ;  new Item . set Resource ( resource )  ;  new Item . set Client Id ( "" Clien Tid"" )  ;  new Item . set User Id ( TEST_IDTOKEN_USERID )  ;  new Item . set Name ( ""name"" )  ;  new Item . set Family Name ( ""family Name"" )  ;  new Item . set Display Id ( TEST_IDTOKEN_UPN )  ;  new Item . set Tenant Id ( ""tenant Id"" )  ;  new Item . set Multi Resource ( true )  ;  add Item To Cache ( mock Cache, new Item )  ;  // only one MRRT for same user, client, authority final  Authentication Context context = new  Authentication Context ( mock Context, VALID_AUTHORITY, false, mock Cache )  ;  final  String response = ""{\""access_token\"":\""accesstoken"" + ""\"",\""token_type\"":\"" Bearer\"",\""expires_in\"":\""29344\"",\""expires_on\"":\""1368768616\"","" + ""\""resource\"":1,"" + ""\""refresh_token\"":\"""" + ""refresh Token"" + ""\"",\""scope\"":\""*\"",\""id_token\"":\"""" + TEST_IDTOKEN + ""\"", \""client_info\"":\"""" +  Util . TEST_CLIENT_INFO + ""\""}"" ;  final  Http URL Connection mocked Connection =  Mockito . mock (  Http URL Connection . class )  ;   Http Url Connection Factory . set Mocked Http Url Connection ( mocked Connection )  ;   Util . prepare Mocked Url Connection ( mocked Connection )  ;   Mockito . when ( mocked Connection . get Output Stream (  )  )  . then Return (  Mockito . mock (  Output Stream . class )  )  ;   Mockito . when ( mocked Connection . get Input Stream (  )  )  . then Return (  Util . create Input Stream ( response ) ,  Util . create Input Stream ( response )  )  ;   Mockito . when ( mocked Connection . get Response Code (  )  )  . then Return (  Http URL Connection . HTTP_OK )  ;  final int request Wait Ms = 200000 ;   Count Down Latch signal = new  Count Down Latch ( 1 )  ;   Mock Activity test Activity = new  Mock Activity ( signal )  ;   Mock Authentication Callback callback = new  Mock Authentication Callback ( signal )  ;  // 1st token request, read from cache .  context . acquire Token ( test Activity . get Test Activity (  ) , resource, "" Clien Tid"", ""redirect Uri"", TEST_IDTOKEN_UPN, callback )  ;  signal . await ( request Wait Ms,  Time Unit . MILLISECONDS )  ;  assert Null ( "" Error is null"", callback . get Exception (  )  )  ;  assert Equals ( "" Same token in response as in cache"", token To Test, callback . get Authentication Result (  )  . get Access Token (  )  )  ;  // 2nd token request, use MRRT to refresh signal = new  Count Down Latch ( 1 )  ;  callback = new  Mock Authentication Callback ( signal )  ;  context . acquire Token ( test Activity . get Test Activity (  ) , ""dummy Resource2"", "" Clien Tid"", ""redirect Uri"", TEST_IDTOKEN_UPN, callback )  ;  signal . await ( request Wait Ms,  Time Unit . MILLISECONDS )  ;  assert Null ( "" Error is null"", callback . get Exception (  )  )  ;  assert Equals ( "" Same token as refresh token result"", expected AT, callback . get Authentication Result (  )  . get Access Token (  )  )  ;  // 3rd request, different resource with same userid signal = new  Count Down Latch ( 1 )  ;  test Activity = new  Mock Activity ( signal )  ;  callback = new  Mock Authentication Callback ( signal )  ;  context . acquire Token ( test Activity . get Test Activity (  ) , ""another Resource123"", "" Clien Tid"", ""redirect Uri"", TEST_IDTOKEN_UPN, callback )  ;  signal . await ( request Wait Ms,  Time Unit . MILLISECONDS )  ;  assert Equals ( "" Token is returned from refresh token request"", expected AT, callback . get Authentication Result (  )  . get Access Token (  )  )  ;  //  Same call again to use it from cache signal = new  Count Down Latch ( 1 )  ;  callback = new  Mock Authentication Callback ( signal )  ;  callback . set Authentication Result ( null )  ;   Http Url Connection Factory . set Mocked Http Url Connection ( null )  ;  context . acquire Token ( test Activity . get Test Activity (  ) , ""another Resource123"", "" Clien Tid"", ""redirect Uri"", TEST_IDTOKEN_UPN, callback )  ;  signal . await ( CONTEXT_REQUEST_TIME_OUT,  Time Unit . MILLISECONDS )  ;  assert Equals ( "" Same token in response as in cache for same call"", expected AT, callback . get Authentication Result (  )  . get Access Token (  )  )  ;  clear Cache ( context )  ; }"
8203,private synchronized void init Buckets (  ) { final  Sparse Int Array bucket Sizes = m Pool Params . bucket Sizes ;  // create the buckets if  ( bucket Sizes != null )  {     fill Buckets ( bucket Sizes )  ;      m Allow New Buckets = false ;  } else {     m Allow New Buckets = true ;  }}
8204,"public static  Fluent Iterable< Build Target> propagate Flavors In Domain If Not Present (  Flavor Domain<?> domain,  Build Target build Target,  Fluent Iterable< Build Target> deps ) { if  ( domain . contains Any Of ( build Target . get Flavors (  )  )  )  {      Fluent Iterable< Build Target> targets With Flavors Already = deps . filter ( contains Flavors ( domain ) ::test )  ;       Fluent Iterable< Build Target> targets Without Flavors = deps . filter ( contains Flavors ( domain )  . negate (  ) ::test )  ;      deps = targets With Flavors Already . append ( propagate Flavor Domains ( build Target,  Immutable Set . of ( domain ) , targets Without Flavors )  )  ;  } return deps ; }"
8205,"public com . anychart . graphics . vector .  Unmanaged Layer translate (  Number tx,  Number ty ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . translate ( %s, %s )  ; "", tx, ty )  )  ;  return this ; }"
8206,"Immutable List< String> get Swift Include Args (  Source Path Resolver Adapter resolver ) {  Immutable List .  Builder< String> args =  Immutable List . builder (  )  ;  //  Arg list can't simply be passed in since the current implementation of to Tool Flags drops the // dependency information .   Iterable< Arg> args From Deps = cxx Deps . to Tool Flags ( resolver,  Path Shortener . by Relativizing To Working Dir ( get Project Filesystem (  )  . get Root Path (  )  ) , framework Path To Search Path, c Preprocessor,  Optional . empty (  )  )  . get All Flags (  )  ;  args . add All (  Arg . stringify ( args From Deps, resolver )  )  ;  if  ( bridging Header . is Present (  )  )  {     for  (  Header Visibility header Visibility :  Header Visibility . values (  )  )  {         //  We should probably pass in the correct symlink trees instead of guessing .           Path header Path =  Cxx Description Enhancer . get Header Symlink Tree Path ( get Project Filesystem (  ) , get Build Target (  )  . with Flavors (  ) , header Visibility, flavor )  ;          args . add ( INCLUDE_FLAG . concat ( header Path . to String (  )  )  )  ;      } } return args . build (  )  ; }"
8207,public void set Expanded Title Typeface ( @ Nullable  Typeface typeface ) { m Collapsing Text Helper . set Expanded Typeface ( typeface )  ; }
8208,"private void read Encoding Data ( int base ) { if  ( base == 0 )  {     // this is the  Standard Encoding     //	     System . out . println ( ""**** STANDARD ENCODING!"" )  ;       System . arraycopy (  Font Support . standard Encoding, 0, encoding, 0,  Font Support . standard Encoding . length )  ;  } else if  ( base == 1 )  {     // this is the expert encoding      System . out . println ( ""**** EXPERT ENCODING!"" )  ;  // TODO: copy  Expert Encoding } else {     pos = base ;      int encodingtype = read Byte (  )  ;      if  (  ( encodingtype & 127 )  == 0 )  {         int ncodes = read Byte (  )  ;          for  ( int i = 1 ;  i < ncodes + 1 ;  i++ )  {             int idx = read Byte (  )  & 0xff ;              encoding [ idx ]  = i ;          }     } else if  (  ( encodingtype & 127 )  == 1 )  {         int nranges = read Byte (  )  ;          int p = 1 ;          for  ( int i = 0 ;  i < nranges ;  i++ )  {             int start = read Byte (  )  ;              int more = read Byte (  )  ;              for  ( int j = start ;  j < start + more + 1 ;  j++ )  {                 encoding [ j ]  = p++ ;              }         }     } else {          System . out . println ( "" Bad encoding type: "" + encodingtype )  ;      } // TODO: now check for supplemental encoding data }}"
8209,"public synchronized void set Session Persistence Key (  String session Key ) { assert Unfrozen (  )  ;  if  ( session Key == null || session Key . is Empty (  )  )  {     throw new  Illegal Argument Exception ( "" Session identifier is not allowed to be empty or null!"" )  ;  } this . persistence Key = session Key ; }"
8210,"private final  Class<?> load Provider Class (  String class Name ) { //  Plugin p = m Default Plugin ;  if  ( p == null )  {     if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, ""plugin provider loader: not found default plugin,  in="" + class Name )  ;      }     return null ;  }  Provider Info [  ]  providers = p . m Loader . m Package Info . providers ;  if  ( providers == null || providers . length <= 0 )  {     if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, ""plugin provider loader: manifest not item found"" )  ;      }     return null ;  }  String provider = providers [ 0 ]  . name ;   Class Loader cl = p . get Class Loader (  )  ;  if  ( LOG )  {      Log Debug . d ( PLUGIN_TAG, ""plugin provider loader: in="" + class Name + "" target="" + provider )  ;  }  Class<?> c = null ;  try {     c = cl . load Class ( provider )  ;  } catch  (  Throwable e )  {     if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, e . get Message (  ) , e )  ;      } } if  ( LOG )  {      Log Debug . d ( PLUGIN_TAG, ""plugin provider loader: c="" + c + "", loader="" + cl )  ;  } return c ; }"
8211,"public com . anychart . standalones .  Resource List right (  Number right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", right )  )  ;  return this ; }"
8212,"public  Nullness Store filter Access Paths (  Predicate< Access Path> pred ) { return new  Nullness Store ( contents . entry Set (  )  . stream (  )  . filter (  e -> pred . test ( e . get Key (  )  )  )  . collect (  Collectors . to Map (  Map .  Entry::get Key,  Map .  Entry::get Value )  )  )  ; }"
8213,"static  String make Message (  Immutable List< String> messages,  Immutable List< Fact> facts ) { int longest Key Length = 0 ;  boolean seen Newline In Value = false ;  for  (  Fact fact : facts )  {     if  ( fact . value != null )  {         longest Key Length = max ( longest Key Length, fact . key . length (  )  )  ;          // TODO ( cpovirk ) :  Look for other kinds of newlines .          seen Newline In Value |= fact . value . contains ( ""\n"" )  ;      } }  String Builder builder = new  String Builder (  )  ;  for  (  String message : messages )  {     builder . append ( message )  ;      builder . append ( '\n' )  ;  } /*  * * Usually* the first fact is printed at the beginning of a new line .   However, when this  * exception is the cause of another exception, that exception will print it starting after  * "" Caused by: "" on the same line .   The other exception sometimes also reuses this message as its  * own message .   In both of those scenarios, the first line doesn't start at column 0, so the  * horizontal alignment is thrown off .   *  *  There's not much we can do about this, short of always starting with a newline  ( which would  * leave a blank line at the beginning of the message in the normal case )  .   */ for  (  Fact fact : facts )  {     if  ( fact . value == null )  {         builder . append ( fact . key )  ;      } else if  ( seen Newline In Value )  {         builder . append ( fact . key )  ;          builder . append ( "":\n"" )  ;          builder . append ( indent ( fact . value )  )  ;      } else {         builder . append ( pad End ( fact . key, longest Key Length, ' ' )  )  ;          builder . append ( "": "" )  ;          builder . append ( fact . value )  ;      }     builder . append ( '\n' )  ;  } if  ( builder . length (  )  > 0 )  {     // remove trailing \n     builder . set Length ( builder . length (  )  - 1 )  ;  } return builder . to String (  )  ; }"
8214,"public static  String get Static Library Name (  Build Target target,  Optional< String> static Library Basename,  String extension,  String suffix, boolean unique Library Name Enabled ) {  String basename = static Library Basename . or Else Get (  (  )  -> get Static Library Basename ( target, suffix, unique Library Name Enabled )  )  ;  return  String . format ( ""lib%s . %s"", basename, extension )  ; }"
8215,public boolean contains Key (  String url ) { return get From Cache ( url )  != null ; }
8216,"public  Immutable List< String> get Rustc Library Flags (  String platform ) { return  Immutable List . < String>builder (  )  . add All ( get Rust Compiler Flags ( platform )  )  . add All ( get Compiler Flags ( platform, RUSTC_LIBRARY_FLAGS )  )  . build (  )  ; }"
8217,"public com . anychart . charts .  Pie start Angle (  String angle ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . start Angle ( %s )  ; "", wrap Quotes ( angle )  )  )  ;  return this ; }"
8218,"public static  Elf Shared Library Interface< Linker Based Elf Shared Library Impl> from (  Build Target target,  Project Filesystem project Filesystem,  Source Path Rule Finder rule Finder,  Tool objcopy,  String lib Name,  Linker linker,  Immutable List< Arg> args, boolean remove Undefined Symbols ) { return new  Elf Shared Library Interface<> ( target, project Filesystem, rule Finder, new  Linker Based Elf Shared Library Impl ( target, objcopy, lib Name, remove Undefined Symbols, linker, args )  )  ; }"
8219,"public com . anychart . charts .  Radar y Axis (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Axis ( %s )  ; "", settings )  )  ;  return this ; }"
8220,"public void test Pre With Spaces (  ) {  String html = ""a<pre> b</pre> c"" ;  assert Equals ( ""a<pre>&nbsp ; b</pre> c"", format ( html )  )  ; }"
8221,"public static void round Bitmap In Place (  Bitmap bitmap ) {  Preconditions . check Not Null ( bitmap )  ;  final int w = bitmap . get Width (  )  ;  final int h = bitmap . get Height (  )  ;  final int radius =  Math . min ( w, h )  / 2 ;  final int center X = w / 2 ;  final int center Y = h / 2 ;  //  Nothing to do if the radius is equal to 0 .  if  ( radius == 0 )  {     return ;  }  Preconditions . check Argument ( radius >= 1 )  ;   Preconditions . check Argument ( w > 0 && w <=  Bitmap Util . MAX_BITMAP_SIZE )  ;   Preconditions . check Argument ( h > 0 && h <=  Bitmap Util . MAX_BITMAP_SIZE )  ;   Preconditions . check Argument ( center X > 0 && center X < w )  ;   Preconditions . check Argument ( center Y > 0 && center Y < h )  ;  final int [  ]  pixels = new int [ w * h ]  ;  bitmap . get Pixels ( pixels, 0, w, 0, 0, w, h )  ;  int x = radius - 1 ;  int y = 0 ;  final int max X = center X + x ;  final int max Y = center Y + x ;  final int min X = center X - x ;  final int min Y = center Y - x ;   Preconditions . check Argument ( min X >= 0 && min Y >= 0 && max X < w && max Y < h )  ;  int dx = 1 ;  int dy = 1 ;  final int r Inc = -radius * 2 ;  final int [  ]  transparent Color = new int [ w ]  ;  int err = dx + r Inc ;  int c Xp X ;  int c Xm X ;  int c Xp Y ;  int c Xm Y ;  int c Yp X ;  int c Ym X ;  int c Yp Y ;  int c Ym Y ;  int off A ;  int off B ;  int off C ;  int off D ;  while  ( x >= y )  {     c Xp X = center X + x ;      c Xm X = center X - x ;      c Xp Y = center X + y ;      c Xm Y = center X - y ;      c Yp X = center Y + x ;      c Ym X = center Y - x ;      c Yp Y = center Y + y ;      c Ym Y = center Y - y ;       Preconditions . check Argument ( x >= 0 && c Xp Y < w && c Xm Y >= 0 && c Yp Y < h && c Ym Y >= 0 )  ;      off A = w * c Yp Y ;      off B = w * c Ym Y ;      off C = w * c Yp X ;      off D = w * c Ym X ;      //  Clear left      System . arraycopy ( transparent Color, 0, pixels, off A, c Xm X )  ;       System . arraycopy ( transparent Color, 0, pixels, off B, c Xm X )  ;       System . arraycopy ( transparent Color, 0, pixels, off C, c Xm Y )  ;       System . arraycopy ( transparent Color, 0, pixels, off D, c Xm Y )  ;      //  Clear right      System . arraycopy ( transparent Color, 0, pixels, off A + c Xp X, w - c Xp X )  ;       System . arraycopy ( transparent Color, 0, pixels, off B + c Xp X, w - c Xp X )  ;       System . arraycopy ( transparent Color, 0, pixels, off C + c Xp Y, w - c Xp Y )  ;       System . arraycopy ( transparent Color, 0, pixels, off D + c Xp Y, w - c Xp Y )  ;      if  ( err <= 0 )  {         y++ ;          dy += 2 ;          err += dy ;      }     if  ( err > 0 )  {         x-- ;          dx += 2 ;          err += dx + r Inc ;      } } //  Clear top / bottom if height > width for  ( int i = center Y - radius ;  i >= 0 ;  i-- )  {      System . arraycopy ( transparent Color, 0, pixels, i * w, w )  ;  } for  ( int i = center Y + radius ;  i < h ;  i++ )  {      System . arraycopy ( transparent Color, 0, pixels, i * w, w )  ;  } bitmap . set Pixels ( pixels, 0, w, 0, 0, w, h )  ; }"
8222,"protected boolean standard Equals ( @ Nullable  Object object ) { return  Lists . equals Impl ( this, object )  ; }"
8223,"public com . anychart . core . stock . scrollerseries . OHLC y Scale ( com . anychart . scales .  Scatter Base settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
8224,"public com . anychart . core . cartesian . series .  Stick stick ( com . anychart . data .  View data, com . anychart . data .  Text Parsing Settings csv Settings ) { return new com . anychart . core . cartesian . series .  Stick (  String . format (  Locale . US, js Base + "" . stick ( %s, %s ) "",  ( data != null )  ? data . get Js Base (  )  : null,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
8225,public  Label Style get Style (  ) { return style ; }
8226,protected void throw Exception ( SOAP Exception exception ) { caught Exception = exception ; }
8227,"public void set Signature (  String sig ) { int index = get Const Pool (  )  . add Utf8 Info ( sig )  ;   Byte Array . write16bit ( index, info, 0 )  ; }"
8228,public  Device Property get Property Id (  ) { return property Id ; }
8229,"public static  Buck Cell Arg of (  String input ) { int index = input . index Of ( ""//"" )  ;  if  ( index < 0 )  {     return of (  Optional . empty (  ) , input )  ;  } else if  ( index == 0 )  {     return of (  Optional . empty (  ) , input . substring ( 2 )  )  ;  } return of (  Optional . of ( input . substring ( 0, index )  ) , input . substring ( index + 2 )  )  ; }"
8230,"public void put (  String key, byte [  ]  value, int save Time ) { put ( key,  Utils . new Byte Array With Date Info ( save Time, value )  )  ; }"
8231,"public static  Download Helper for Dash (  Uri uri,  Data Source .  Factory data Source Factory,  Renderers Factory renderers Factory ) { return for Dash ( uri, data Source Factory, renderers Factory, /* drm Session Manager= */ null, DEFAULT_TRACK_SELECTOR_PARAMETERS )  ; }"
8232,public com . didiglobal . booster . aapt2 . legacy .  Resources Internal Legacy .  Config Description Or Builder get Config Or Builder (  ) { if  ( config Builder_ != null )  {     return config Builder_ . get Message Or Builder (  )  ;  } else {     return config_ == null ? com . didiglobal . booster . aapt2 . legacy .  Resources Internal Legacy .  Config Description . get Default Instance (  )  : config_ ;  }}
8233,public synchronized void wait For Finish (  )  throws  Interrupted Exception{ if  ( !finished )  {     wait (  )  ;  }}
8234,public  Web App Session Listener get Web App Session Listener (  ) { return web App Listener ; }
8235,"public com . anychart . core . resource .  Grid right (  String right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", wrap Quotes ( right )  )  )  ;  return this ; }"
8236,"public  Generic Drawee Hierarchy Builder set Failure Image ( int resource Id, @ Nullable  Scaling Utils .  Scale Type failure Image Scale Type ) { m Failure Image = m Resources . get Drawable ( resource Id )  ;  m Failure Image Scale Type = failure Image Scale Type ;  return this ; }"
8237,public boolean is Attached (  ) { return m Is Holder Attached ; }
8238,"public static T [  ]  concat ( @ Nullable T element, T [  ]  array ) { T [  ]  result = new Array ( array, array . length + 1 )  ;  result [ 0 ]  = element ;   System . arraycopy ( array, 0, result, 1, array . length )  ;  return result ; }"
8239,public  Litho View Assert does Not Have Visible Text ( @ String Res int resource Id ) { assert That View Tree (  )  . does Not Have Visible Text ( resource Id )  ;  return this ; }
8240,"static boolean exists Scrap Item At ( int index, T [  ]  scrap Items ) { return scrap Items != null && scrap Items [ index ]  != null ; }"
8241,"public static  Array List< Memory Card> get Game Cards ( int num Cards,  List< Integer> card Images,  List< Integer> card Cloaks ) {  Collections . shuffle ( card Images )  ;   Collections . shuffle ( card Cloaks )  ;   Array List< Memory Card> cards = new  Array List< Memory Card> (  )  ;  for  ( int i = 0 ;  i <  ( num Cards / 2 )  ;  i++ )  {     cards . add ( new  Memory Card ( card Images . get ( i ) , card Cloaks . get ( i )  )  )  ;      cards . add ( new  Memory Card ( card Images . get ( i ) , card Cloaks . get ( i )  )  )  ;  }  Collections . shuffle ( cards )  ;  return cards ; }"
8242,public  String get Id (  ) { return m Id ; }
8243,"public boolean add Light ( final A Light light ) {  Raj Log . d ( ""A Frame Task -  Adding light "" + light )  ;  final A Frame Task task = new A Frame Task (  )  {     @ Override     protected void do Task (  )  {         m Lights . add ( light )  ;          m Lights Dirty = true ;      } } ;  return internal Offer Task ( task )  ; }"
8244,public boolean equals (  Object obj ) { if  ( ! ( obj instanceof ID3v23 Tag )  )  {     return false ;  } ID3v23 Tag object =  ( ID3v23 Tag )  obj ;  if  ( this . crc32 != object . crc32 )  {     return false ;  } if  ( this . crc Data Flag != object . crc Data Flag )  {     return false ;  } if  ( this . experimental != object . experimental )  {     return false ;  } if  ( this . extended != object . extended )  {     return false ;  } return this . padding Size == object . padding Size && super . equals ( obj )  ; }
8245,"public static  Property Descriptor [  ]  get Property Descriptors (  Class<?> clazz ) { final  String SETTER_PREFIX = ""set"" ;  final  String GETTER_PREFIX = ""get"" ;  final int LEN_PREFIX = SETTER_PREFIX . length (  )  ;   Map< String,  Property Descriptor> map = new  Hash Map< String,  Property Descriptor> (  )  ;  for  (  Method m : clazz . get Methods (  )  )  {      Property Descriptor pd = null ;       String m Name = m . get Name (  )  ;      boolean is Get = m Name . starts With ( GETTER_PREFIX )  &&  ( m Name . length (  )  > LEN_PREFIX )  ;      boolean is Set = m Name . starts With ( SETTER_PREFIX )  &&  ( m Name . length (  )  > LEN_PREFIX )  ;      if  ( is Get || is Set )  {          String prop Name = decapitalize ( m Name . substring ( LEN_PREFIX )  )  ;          pd = map . get ( prop Name )  ;          if  ( pd == null )  {             pd = new  Property Descriptor ( prop Name )  ;              map . put ( prop Name, pd )  ;          }          Class<?> [  ]  parm Types = m . get Parameter Types (  )  ;          if  ( is Set )  {             if  ( parm Types . length == 1 )  {                 // we only want the single-parm setter                 pd . set Write Method ( m )  ;                  pd . set Property Type ( parm Types [ 0 ]  )  ;              }         } else if  ( is Get )  {             if  ( parm Types . length == 0 )  {                 // we only want the zero-parm getter                 pd . set Read Method ( m )  ;                  // let setter's type take priority                 if  ( pd . get Property Type (  )  == null )  {                     pd . set Property Type ( m . get Return Type (  )  )  ;                  }             }         }     } } return map . values (  )  . to Array ( new  Property Descriptor [ 0 ]  )  ; }"
8246,"public void to A11y Table (  String title,  Boolean as String ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to A11y Table ( %s, %s )  ; "", wrap Quotes ( title ) , as String )  )  ; }"
8247,"public void load Error (  Load Event Info load Event Info,  Media Load Data media Load Data, IO Exception error, boolean was Canceled ) { for  (  Listener And Handler listener And Handler : listener And Handlers )  {     final  Media Source Event Listener listener = listener And Handler . listener ;      post Or Run ( listener And Handler . handler,  (  )  -> listener . on Load Error ( window Index, media Period Id, load Event Info, media Load Data, error, was Canceled )  )  ;  }}"
8248,"public static void provide Width And Height Hints ( int resource Id, int width, int height ) { width And Height Map . put ( ""resource:"" +  Runtime Environment . get Application (  )  . get Resources (  )  . get Resource Name ( resource Id ) , new  Point ( width, height )  )  ; }"
8249,public  Ad Manager set Dialog Closeable ( boolean dialog Closeable ) { is Dialog Closeable = dialog Closeable ;  return this ; }
8250,void release ( boolean is Removed From Queue ) { if  ( release Manager . release ( is Removed From Queue )  )  {     release Internal (  )  ;  }}
8251,"public static  Dir Cache read (  Object Reader reader,  Any Object Id tree Id )  throws IO Exception{  Dir Cache d = new In Core (  )  ;   Dir Cache Builder b = d . builder (  )  ;  b . add Tree ( null,  Dir Cache Entry . STAGE_0, reader, tree Id )  ;  b . finish (  )  ;  return d ; }"
8252,public  File Header get File Header (  ) { return file ; }
8253,"public com . anychart . core . gantt . elements .  Periods Element fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
8254,"public  Builder<T Fragment> set Indicator Options ( @ Non Null  Indicator Options indicator Options ) { m Indicator Options =  Validation Util . check Not Null ( indicator Options, "" Indicator Options can't be null . "" )  ;  return this ; }"
8255,"public com . anychart . core . annotations .  Fibonacci Fan grid ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . grid ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8256,"public com . anychart . core . ui .  Timeline row Fill ( com . anychart . graphics . vector .  Gradient Key value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Fill ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
8257,public void on Bottom Btn Click (  ) {}
8258,"public  Short Array compute Triangles (  Float Array points, boolean sorted ) { return compute Triangles ( points . items, 0, points . size, sorted )  ; }"
8259,"public void remote Device Added (  Registry registry,  Remote Device device ) { device Added ( registry, device )  ; }"
8260,"public  Activity Info get Activity Info (  String plugin,  String activity,  Intent intent ) { // 获取插件对象  Plugin p = m Plugin Mgr . load App Plugin ( plugin )  ;  if  ( p == null )  {     if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, ""PACM: bind Activity: may be invalid plugin name or load plugin failed: plugin="" + p )  ;      }     return null ;  }  Activity Info ai = null ;  // activity 不为空时，从插件声明的  Activity 集合中查找 if  ( ! Text Utils . is Empty ( activity )  )  {     ai = p . m Loader . m Components . get Activity ( activity )  ;  } else {     // activity 为空时，根据  Intent 匹配     ai =  Intent Matcher Helper . get Activity Info ( m Context, plugin, intent )  ;  } return ai ; }"
8261,public float get Info Window Anchor V (  ) { return m Marker Options . get Info Window Anchor V (  )  ; }
8262,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
8263,public  Locals Array sub Array For Label ( int sub Label ) {  Locals Array result = get Secondary For Label ( sub Label )  ;  return result ; }
8264,public  Builder clear Smallest Screen Width Dp (  ) { smallest Screen Width Dp_ = 0 ;  on Changed (  )  ;  return this ; }
8265,"static  Metadata Value<T> with Default Value ( T value ) { return new  Metadata Value<T> ( value, false )  ; }"
8266,"public void create Buffer (  Buffer Info buffer Info,  Buffer Type type, int target ) { create Buffer ( buffer Info, type, target, buffer Info . usage )  ; }"
8267,public  Point F get ( @ Non Null T object ) { return null ; }
8268,"public com . anychart . core . ui .  Paginator margin (  Number [  ]  space Or Top Or Top And Bottom,  Number right Or Right And Left,  Number bottom,  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "",  Arrays . to String ( space Or Top Or Top And Bottom ) , right Or Right And Left, bottom, left )  )  ;  return this ; }"
8269,"public static  Output Stream wrap Output Stream (  Output Stream out,  Eol Stream Type conversion ) { switch ( conversion )  {     case TEXT_CRLF:         return new  Auto CRLF Output Stream ( out, false )  ;      case AUTO_CRLF:         return new  Auto CRLF Output Stream ( out, true )  ;      case TEXT_LF:         return new  Auto LF Output Stream ( out, false )  ;      case AUTO_LF:         return new  Auto LF Output Stream ( out, true )  ;      default:         return out ;  }}"
8270,"public com . anychart . charts .  Pareto remove Series At (  Number index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove Series At ( %s )  ; "", index )  )  ;  return this ; }"
8271,"private  Byte Buffer write Header To Buffer ( int padding, int size )  throws IO Exception{ // This would only be set if every frame in tag has been unsynchronized, I only unsychronize frames //that need it, in any case I have been advised not to set it even then .  unsynchronization = false ;  //  Flags,currently we never calculate the CRC // and if we dont calculate them cant keep orig values .   Tags are not // experimental and we never create extended header to keep things simple .  extended = false ;  experimental = false ;  footer = false ;  //  Create  Header  Buffer,allocate maximum possible size for the header  Byte Buffer header Buffer =  Byte Buffer . allocate ( TAG_HEADER_LENGTH )  ;  //TAGID header Buffer . put ( TAG_ID )  ;  // Major  Version header Buffer . put ( get Major Version (  )  )  ;  // Minor  Version header Buffer . put ( get Revision (  )  )  ;  // Flags byte flags Byte = 0 ;  if  ( is Unsynchronization (  )  )  {     flags Byte |= MASK_V24_UNSYNCHRONIZATION ;  } if  ( extended )  {     flags Byte |= MASK_V24_EXTENDED_HEADER ;  } if  ( experimental )  {     flags Byte |= MASK_V24_EXPERIMENTAL ;  } if  ( footer )  {     flags Byte |= MASK_V24_FOOTER_PRESENT ;  } header Buffer . put ( flags Byte )  ;  // Size  As  Recorded in  Header, don't include the main header length // Additional  Header  Size, ( for completeness we never actually write the extended header, or footer )  int additional Header Size = 0 ;  if  ( extended )  {     additional Header Size += TAG_EXT_HEADER_LENGTH ;      if  ( update Tag )  {         additional Header Size += TAG_EXT_HEADER_UPDATE_LENGTH ;      }     if  ( crc Data Flag )  {         additional Header Size += TAG_EXT_HEADER_CRC_LENGTH ;      }     if  ( tag Restriction )  {         additional Header Size += TAG_EXT_HEADER_RESTRICTION_LENGTH ;      } } // Size  As  Recorded in  Header, don't include the main header length header Buffer . put ( ID3 Sync Safe Integer . value To Buffer ( padding + size + additional Header Size )  )  ;  // Write  Extended  Header  Byte Buffer ext Header Buffer = null ;  if  ( extended )  {     // Write  Extended  Header  Size     int extended Size = TAG_EXT_HEADER_LENGTH ;      if  ( update Tag )  {         extended Size += TAG_EXT_HEADER_UPDATE_LENGTH ;      }     if  ( crc Data Flag )  {         extended Size += TAG_EXT_HEADER_CRC_LENGTH ;      }     if  ( tag Restriction )  {         extended Size += TAG_EXT_HEADER_RESTRICTION_LENGTH ;      }     ext Header Buffer =  Byte Buffer . allocate ( extended Size )  ;      ext Header Buffer . put Int ( extended Size )  ;      // Write  Number of flags  Byte     ext Header Buffer . put (  ( byte )  TAG_EXT_NUMBER_BYTES_DATA_LENGTH )  ;      // Write  Extended  Flags     byte ext Flag = 0 ;      if  ( update Tag )  {         ext Flag |= MASK_V24_TAG_UPDATE ;      }     if  ( crc Data Flag )  {         ext Flag |= MASK_V24_CRC_DATA_PRESENT ;      }     if  ( tag Restriction )  {         ext Flag |= MASK_V24_TAG_RESTRICTIONS ;      }     ext Header Buffer . put ( ext Flag )  ;      // Write  Update  Data     if  ( update Tag )  {         ext Header Buffer . put (  ( byte )  0 )  ;      }     // Write CRC  Data     if  ( crc Data Flag )  {         ext Header Buffer . put (  ( byte )  TAG_EXT_HEADER_CRC_DATA_LENGTH )  ;          ext Header Buffer . put (  ( byte )  0 )  ;          ext Header Buffer . put Int ( crc Data )  ;      }     // Write  Tag  Restriction     if  ( tag Restriction )  {         ext Header Buffer . put (  ( byte )  TAG_EXT_HEADER_RESTRICTION_DATA_LENGTH )  ;          //todo not currently setting restrictions         ext Header Buffer . put (  ( byte )  0 )  ;      } } if  ( ext Header Buffer != null )  {     ext Header Buffer . flip (  )  ;      header Buffer . put ( ext Header Buffer )  ;  } header Buffer . flip (  )  ;  return header Buffer ; }"
8272,"public com . anychart . core . stock . scrollerseries .  Hilo right (  Number right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", right )  )  ;  return this ; }"
8273,"Map< String,  Object> get Hook State (  ) { if  ( m Hook State == null )  {     m Hook State = new  Hash Map<> (  )  ;  } return m Hook State ; }"
8274,"public com . anychart . scales .  Ordinal Ticks ticks (  ) { return new com . anychart . scales .  Ordinal Ticks ( js Base + "" . ticks (  ) "" )  ; }"
8275,"public com . anychart . core . annotations .  Triangle stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8276,"private static  Pair< Integer,  Integer> get VP8 Dimension ( final  Input Stream is )  throws IO Exception{ //  We need to skip 7 bytes is . skip ( 7 )  ;  //  And then check the signature final short sign1 = get Short ( is )  ;  final short sign2 = get Short ( is )  ;  final short sign3 = get Short ( is )  ;  if  ( sign1 != 0x9 D || sign2 != 0x01 || sign3 != 0x2 A )  {     //  Signature error     return null ;  } //  We read the dimensions return new  Pair<> ( get2 Bytes As Int ( is ) , get2 Bytes As Int ( is )  )  ; }"
8277,public boolean is Detect Renames (  ) { return rename Detector != null ; }
8278,"public com . anychart . charts .  Sparkline last Fill (  String [  ]  keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . last Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, mode, opacity )  )  ;  return this ; }"
8279,public void set Context (  Script Context ctxt ) { context = ctxt ; }
8280,public boolean get Is Idle (  ) { return m Idle ; }
8281,"public void test Directory Deletion_directory Symlink Race (  )  throws IO Exception{ for  (  Directory Delete Method method :  Enum Set . all Of (  Directory Delete Method . class )  )  {     try  (  File System fs = new Test File System ( SECURE_DIRECTORY_STREAM )  )  {          Path dir To Delete = fs . get Path ( ""dir/b/i"" )  ;           Path changing File = dir To Delete . resolve ( ""j/l"" )  ;           Path symlink Target = fs . get Path ( ""/dontdelete"" )  ;           Executor Service executor =  Executors . new Single Thread Executor (  )  ;          start Directory Symlink Switching ( changing File, symlink Target, executor )  ;          try {             for  ( int i = 0 ;  i < 5000 ;  i++ )  {                 try {                      Files . create Directories ( changing File )  ;                       Files . create File ( dir To Delete . resolve ( ""j/k"" )  )  ;                  } catch  (  File Already Exists Exception expected )  {                 // if a file already exists, that's fine .  .  .  just continue                 }                 try {                     method . delete ( dir To Delete )  ;                  } catch  (  File System Exception expected )  {                 // the delete method may or may not throw an exception, but if it does that's fine                 // and expected                 }                 // this test is mainly checking that the contents of /dontdelete aren't deleted under                 // any circumstances                 assert Equals ( 3,  More Files . list Files ( symlink Target )  . size (  )  )  ;                   Thread . yield (  )  ;              }         } finally {             executor . shutdown Now (  )  ;          }     } }}"
8282,"protected void connected ( final  Base Download Task task, final  String etag, final boolean is Continue, final int so Far Bytes, final int total Bytes ) {}"
8283,"public static void set Delegate (  Producer<T> delegate Producer,  Producer<T> delegate ) { check Not Null ( delegate )  ;   Delegate Producer<T> as Delegate Producer =  (  Delegate Producer<T> )  delegate Producer ;  if  ( as Delegate Producer . delegate != null )  {     throw new  Illegal State Exception (  )  ;  } as Delegate Producer . delegate =  (  Cancellable Producer<T> )  delegate ; }"
8284,"protected void on Web Title (  Web View view,  String title ) { if  ( aty != null && m Web View != null )  {     // 必须做判断，由于webview加载属于耗时操作，可能会本 Activity已经关闭了才被调用     m Tv Title . set Text ( m Web View . get Title (  )  )  ;  }}"
8285,protected void update Tracking Ref (  Rev Walk walk )  throws IO Exception{ if  ( is Delete (  )  )      tracking Ref Update . set Result ( local Update . delete ( walk )  )  ;  else     tracking Ref Update . set Result ( local Update . update ( walk )  )  ; }
8286,public void set Zoom Enabled ( boolean enabled ) { m Zoom Enabled = enabled ; }
8287,"public X Path Record<T> get Full Record ( X Path Element key ) { //  Look for the set of elements with this name  Set<X Path Element> possible Elements Set = lookup Map . get ( key . get Name (  )  )  ;  if  ( possible Elements Set != null )  {     //  If there's a set of elements here, loop through them and return     // the most specific one that matches the passed X Path      List<X Path Element> possible Elements = new  Linked List<X Path Element> ( possible Elements Set )  ;       Collections . sort ( possible Elements, specificity Comparator )  ;      for  ( X Path Element poss Element : possible Elements )  {         // absolute, all-information-included xpath .          if  ( poss Element . matches ( key )  )  {             return new X Path Record<T> ( poss Element, value Map . get ( poss Element )  )  ;          }     } } return null ; }"
8288,"public  Builder base Url ( URL base Url ) {  Objects . require Non Null ( base Url, ""base Url == null"" )  ;  return base Url (  Http Url . get ( base Url . to String (  )  )  )  ; }"
8289,public void create Schema (  )  throws SQL Exception{ try  ( var connection =  Driver Manager . get Connection ( DB_URL )  ;      var statement = connection . create Statement (  )  )  {     statement . execute (  Room Schema Sql . DELETE_SCHEMA_SQL )  ;      statement . execute (  Room Schema Sql . CREATE_SCHEMA_SQL )  ;  }}
8290,"public com . anychart . graphics . vector .  Unmanaged Layer set Rotation By Anchor (  Number degrees, com . anychart . graphics . vector .  Anchor anchor ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set Rotation By Anchor ( %s, %s )  ; "", degrees,  ( anchor != null )  ? anchor . get Js Base (  )  : null )  )  ;  return this ; }"
8291,"public com . anychart . core . ui .  Paginator font Family (  String family ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Family ( %s )  ; "", wrap Quotes ( family )  )  )  ;  return this ; }"
8292,"public com . anychart . core . gantt .  Time Line Header padding (  String value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
8293,public boolean remove On Tutorial Page Change Listener ( @ Non Null  On Tutorial Page Change Listener listener ) { return m Tutorial . remove On Tutorial Page Change Listener ( listener )  ; }
8294,"public float get Group Width ( float group Space, float bar Space ) { return m Data Sets . size (  )  *  ( m Bar Width + bar Space )  + group Space ; }"
8295,public void set Position ( int position ) { //  It is fine for position to be at the end of the array .   Assertions . check Argument ( position >= 0 && position <= limit )  ;  this . position = position ; }
8296,"public com . anychart . core . ui .  Circular Labels Factory offset Y (  Number offset ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . offset Y ( %s )  ; "", offset )  )  ;  return this ; }"
8297,"public void bottom Stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . bottom Stroke (  )  ; "" )  ; }"
8298,"private  Generic Audio Header get Audio Header ( final  Asf Header header )  throws  Cannot Read Exception{ final  Generic Audio Header info = new  Generic Audio Header (  )  ;  if  ( header . get File Header (  )  == null )  {     throw new  Cannot Read Exception ( "" Invalid ASF/WMA file .   File header object not available . "" )  ;  } if  ( header . get Audio Stream Chunk (  )  == null )  {     throw new  Cannot Read Exception ( "" Invalid ASF/WMA file .   No audio stream contained . "" )  ;  } info . set Bitrate ( header . get Audio Stream Chunk (  )  . get Kbps (  )  )  ;  info . set Channel Number (  ( int )  header . get Audio Stream Chunk (  )  . get Channel Count (  )  )  ;  info . set Encoding Type ( ""ASF  ( audio ) : "" + header . get Audio Stream Chunk (  )  . get Codec Description (  )  )  ;  info . set Lossless ( header . get Audio Stream Chunk (  )  . get Compression Format (  )  ==  Audio Stream Chunk . WMA_LOSSLESS )  ;  info . set Precise Length ( header . get File Header (  )  . get Precise Duration (  )  )  ;  info . set Sampling Rate (  ( int )  header . get Audio Stream Chunk (  )  . get Sampling Rate (  )  )  ;  info . set Variable Bit Rate ( determine Variable Bitrate ( header )  )  ;  info . set Bits Per Sample ( header . get Audio Stream Chunk (  )  . get Bits Per Sample (  )  )  ;  return info ; }"
8299,"public void get Indices ( short [  ]  out, int dest Offset ) { if  ( attributes == null )      throw new  Gdx Runtime Exception ( "" Must be called in between #begin and #end"" )  ;  if  (  ( dest Offset < 0 )  ||  ( dest Offset > out . length - indices . size )  )      throw new  Gdx Runtime Exception ( "" Array too small or offset out of range"" )  ;   System . arraycopy ( indices . items, 0, out, dest Offset, indices . size )  ; }"
8300,"public static boolean equals ( final byte [  ]  first Buffer, final int fi, final byte [  ]  second Buffer, final int si ) { return first Buffer [ fi ]  == second Buffer [ si ]  && first Buffer [ fi + 1 ]  == second Buffer [ si + 1 ]  && first Buffer [ fi + 2 ]  == second Buffer [ si + 2 ]  && first Buffer [ fi + 3 ]  == second Buffer [ si + 3 ]  && first Buffer [ fi + 4 ]  == second Buffer [ si + 4 ]  && first Buffer [ fi + 5 ]  == second Buffer [ si + 5 ]  && first Buffer [ fi + 6 ]  == second Buffer [ si + 6 ]  && first Buffer [ fi + 7 ]  == second Buffer [ si + 7 ]  && first Buffer [ fi + 8 ]  == second Buffer [ si + 8 ]  && first Buffer [ fi + 9 ]  == second Buffer [ si + 9 ]  && first Buffer [ fi + 10 ]  == second Buffer [ si + 10 ]  && first Buffer [ fi + 11 ]  == second Buffer [ si + 11 ]  && first Buffer [ fi + 12 ]  == second Buffer [ si + 12 ]  && first Buffer [ fi + 13 ]  == second Buffer [ si + 13 ]  && first Buffer [ fi + 14 ]  == second Buffer [ si + 14 ]  && first Buffer [ fi + 15 ]  == second Buffer [ si + 15 ]  && first Buffer [ fi + 16 ]  == second Buffer [ si + 16 ]  && first Buffer [ fi + 17 ]  == second Buffer [ si + 17 ]  && first Buffer [ fi + 18 ]  == second Buffer [ si + 18 ]  && first Buffer [ fi + 19 ]  == second Buffer [ si + 19 ]  && first Buffer [ fi + 20 ]  == second Buffer [ si + 20 ]  && first Buffer [ fi + 21 ]  == second Buffer [ si + 21 ]  && first Buffer [ fi + 22 ]  == second Buffer [ si + 22 ]  && first Buffer [ fi + 23 ]  == second Buffer [ si + 23 ]  && first Buffer [ fi + 24 ]  == second Buffer [ si + 24 ]  && first Buffer [ fi + 25 ]  == second Buffer [ si + 25 ]  && first Buffer [ fi + 26 ]  == second Buffer [ si + 26 ]  && first Buffer [ fi + 27 ]  == second Buffer [ si + 27 ]  && first Buffer [ fi + 28 ]  == second Buffer [ si + 28 ]  && first Buffer [ fi + 29 ]  == second Buffer [ si + 29 ]  && first Buffer [ fi + 30 ]  == second Buffer [ si + 30 ]  && first Buffer [ fi + 31 ]  == second Buffer [ si + 31 ]  ; }"
8301,public  Calendar get Max Date (  ) { return m Max Date ; }
8302,protected void set Old Object Id (  Object Id old ) { old Value = old ; }
8303,"public com . anychart . core . cartesian . series .  Continuous Range Base bounds (  Number x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
8304,public void set Priority (  Priority priority ) {  Base Producer Context . call On Priority Changed ( set Priority No Callbacks ( priority )  )  ; }
8305,void reset Map For Testing (  ) { VIEW_TYPE_MAP . clear (  )  ; }
8306,"public A Transformable3 D rotate ( final  Vector3 axis, double angle ) { m Orientation . multiply ( m Tmp Orientation . from Angle Axis ( axis, angle )  )  ;  m Look At Valid = false ;  mark Model Matrix Dirty (  )  ;  return this ; }"
8307,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
8308,"public com . anychart . charts .  Heat Map fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
8309,static boolean is Possibly Malicious URI (  String uri ) { return !ALLOWED_URI_CHARS_PATTERN . matcher ( uri )  . matches (  )  || USER_IN_HOST . matcher ( uri )  . find (  )  ; }
8310,"public com . anychart . core . ui .  Paginator padding (  String [  ]  space Or Top Or Top And Bottom,  String right Or Right And Left,  String bottom,  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( space Or Top Or Top And Bottom ) , wrap Quotes ( right Or Right And Left ) , wrap Quotes ( bottom ) , left )  )  ;  return this ; }"
8311,public com . facebook . buck . remoteexecution . proto .  Worker Info Or Builder get Worker Info Or Builder (  ) { return get Worker Info (  )  ; }
8312,"public void log Event (  String event Type ) { log Event ( event Type, null )  ; }"
8313,"public void save As Jpg (  Number width,  Number height,  Number quality,  Boolean force Transparent White,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Jpg ( %s, %s, %s, %s, %s )  ; "", width, height, quality, force Transparent White, wrap Quotes ( filename )  )  )  ; }"
8314,public  String get Campaign Name (  ) { return campaign Name ; }
8315,"public void set Properties (  Map< String,  Object> props ) { properties . clear (  )  ;  properties . put All ( props )  ; }"
8316,"public com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Navigation get Navigation (  ) { @ Suppress Warnings ( ""deprecation"" )  com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Navigation result = com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Navigation . value Of ( navigation_ )  ;  return result == null ? com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Navigation . UNRECOGNIZED : result ; }"
8317,"public com . anychart . charts .  Heat Map title (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . title ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8318,"protected  Supplier< Data Source<IMAGE>> get Data Source Supplier For Request ( final  Drawee Controller controller,  String controller Id, REQUEST image Request ) { return get Data Source Supplier For Request ( controller, controller Id, image Request,  Cache Level . FULL_FETCH )  ; }"
8319,public  String get Subtitle (  ) { return subtitle ; }
8320,"public void close (  ) { close ( true, true )  ; }"
8321,public  List< String> get Unmerged Paths (  ) { return unmerged Paths ; }
8322,"public com . anychart . core . axes .  Linear y Axis (  Number index ) { return new com . anychart . core . axes .  Linear (  String . format (  Locale . US, js Base + "" . y Axis ( %s ) "", index )  )  ; }"
8323,public  Describe Command set Target (  Object Id target )  throws IO Exception{ this . target = w . parse Commit ( target )  ;  return this ; }
8324,"public void test Saturated File Expansion Moves Elements (  )  throws IO Exception{  Queue File queue = new Queue File (  )  ;  //  Create test data - 1016-byte blocks marked consecutively 1, 2, 3, 4, 5 and 6, // four of which perfectly fill the queue file, taking into account the file header // and the item headers .  //  Each item is of length //  (  Queue File . INITIAL_LENGTH - header Length )  / 4 - element_header_length // = 1016 bytes byte [  ]  [  ]  values = new byte [ 6 ]  [  ]  ;  for  ( int block Num = 0 ;  block Num < values . length ;  block Num++ )  {     values [ block Num ]  = new byte [  ( INITIAL_LENGTH - header Length )  / 4 -  Element . HEADER_LENGTH ]  ;      for  ( int i = 0 ;  i < values [ block Num ]  . length ;  i++ )  {         values [ block Num ]  [ i ]  =  ( byte )   ( block Num + 1 )  ;      } } //  Saturate the queue file queue . add ( values [ 0 ]  )  ;  queue . add ( values [ 1 ]  )  ;  queue . add ( values [ 2 ]  )  ;  queue . add ( values [ 3 ]  )  ;  //  Remove an element and add a new one so that the position of the start and // end of the queue are equal queue . remove (  )  ;  queue . add ( values [ 4 ]  )  ;  //  Cause the queue file to expand queue . add ( values [ 5 ]  )  ;  //  Make sure values are not corrupted for  ( int i = 1 ;  i < 6 ;  i++ )  {     assert That ( queue . peek (  )  )  . is Equal To ( values [ i ]  )  ;      queue . remove (  )  ;  } queue . close (  )  ; }"
8325,public static  Camera open ( int requested Id ) { int camera Id = get Camera Id ( requested Id )  ;  if  ( camera Id == -1 )  {     return null ;  } else {     return  Camera . open ( camera Id )  ;  }}
8326,"public com . anychart . charts .  Stock zoom Marquee Stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . zoom Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8327,"public  Single< Put Result> as Rx Single (  ) { return  Rx Java Utils . create Single ( stor IOSQ Lite, this )  ; }"
8328,public static  Awake Time Since Boot Clock get (  ) { return INSTANCE ; }
8329,public void check All GL Errors (  ) { m Builder Config |= GL Debug Helper . CONFIG_CHECK_GL_ERROR ; }
8330,public  View get Target (  ) { return target ; }
8331,"public void reload Classes (  String [  ]  class Names )  throws  Class Path Exception{ // init base class loader if there is none .  .  .  if  ( base Loader == null )      init Base Loader (  )  ;   Discrete Files Class Loader .  Class Source Map map = new  Discrete Files Class Loader .  Class Source Map (  )  ;  for  ( int i = 0 ;  i < class Names . length ;  i++ )  {      String name = class Names [ i ]  ;      // look in base Loader class path       Class Source class Source = base Class Path . get Class Source ( name )  ;      // look in user class path      if  ( class Source == null )  {          Bsh Class Path . get User Class Path (  )  . insure Initialized (  )  ;          class Source =  Bsh Class Path . get User Class Path (  )  . get Class Source ( name )  ;      }     if  ( class Source == null )          throw new  Class Path Exception ( "" Nothing known about class: "" + name )  ;      // to handle it .  .  .  since it is a URL Class Loader and can handle JA Rs     if  ( class Source instanceof  Jar Class Source )          throw new  Class Path Exception ( "" Cannot reload class: "" + name + "" from source: "" + class Source )  ;      map . put ( name, class Source )  ;  } //  Create classloader for the set of classes  Class Loader cl = new  Discrete Files Class Loader ( this, map )  ;  // map those classes the loader in the overlay map  Iterator it = map . key Set (  )  . iterator (  )  ;  while  ( it . has Next (  )  )  loader Map . put (  (  String )  it . next (  ) , cl )  ;  class Loader Changed (  )  ; }"
8332,public void add All (  Json Array array ) { elements . add All ( array . elements )  ; }
8333,"public void bind All Args As Strings (  String [  ]  bind Args ) { if  ( bind Args != null )  {     for  ( int i = bind Args . length ;  i != 0 ;  i-- )  {         bind String ( i, bind Args [ i - 1 ]  )  ;      } }}"
8334,public boolean is Fully Zoomed Out X (  ) { return ! ( m Scale X > m Min Scale X || m Min Scale X > 1f )  ; }
8335,"public synchronized void cleanup Automatic Events (  String token ) { cleanup Automatic Events (  Table . EVENTS, token )  ;  cleanup Automatic Events (  Table . PEOPLE, token )  ;  cleanup Automatic Events (  Table . GROUPS, token )  ; }"
8336,protected void on Perform Action (  ) {}
8337,private void set Series Widgets Enabled ( boolean enabled ) { m X . set Enabled ( enabled )  ;  m Y . set Enabled ( enabled )  ;  m Add . set Enabled ( enabled )  ; }
8338,"public com . anychart . core . ui .  Legend legend (  ) { return new com . anychart . core . ui .  Legend ( js Base + "" . legend (  ) "" )  ; }"
8339,"public  Class<?> to Class (  Class<?> neighbor )  throws  Cannot Compile Exception{ return get Class Pool (  )  . to Class ( this, neighbor )  ; }"
8340,"public final double get And Add ( int i, double delta ) { while  ( true )  {     long current = longs . get ( i )  ;      double current Val = long Bits To Double ( current )  ;      double next Val = current Val + delta ;      long next = double To Raw Long Bits ( next Val )  ;      if  ( longs . compare And Set ( i, current, next )  )  {         return current Val ;      } }}"
8341,"public com . anychart . core . annotations .  Fibonacci Fan stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8342,public int get Renderer Type ( int renderer Index ) { return renderer Track Types [ renderer Index ]  ; }
8343,"public boolean matches ( final  Usb Device device ) { if  ( m Vendor Id != -1 && device . get Vendor Id (  )  != m Vendor Id )  {     return false ;  } if  ( m Product Id != -1 && device . get Product Id (  )  != m Product Id )  {     return false ;  } // check device class/subclass/protocol if  ( matches ( device . get Device Class (  ) , device . get Device Subclass (  ) , device . get Device Protocol (  )  )  )  {     return true ;  } // if device doesn't match, check the interfaces final int count = device . get Interface Count (  )  ;  for  ( int i = 0 ;  i < count ;  i++ )  {     final  Usb Interface intf = device . get Interface ( i )  ;      if  ( matches ( intf . get Interface Class (  ) , intf . get Interface Subclass (  ) , intf . get Interface Protocol (  )  )  )  {         return true ;      } } return false ; }"
8344,public void set Build Output For Tests ( T build Output )  throws  Illegal State Exception{ this . build Output = build Output ; }
8345,public void for Each Phi Insn (  Phi Insn .  Visitor v ) { int sz = insns . size (  )  ;  for  ( int i = 0 ;  i < sz ;  i++ )  {      Ssa Insn insn = insns . get ( i )  ;      if  ( insn instanceof  Phi Insn )  {         v . visit Phi Insn (  (  Phi Insn )  insn )  ;      } else {         /*              *  Presently we assume  Phi Insn's are in a continuous              * block at the top of the list              */         break ;      } }}
8346,"public static boolean is Cr Lf Text ( byte [  ]  raw, int length ) { boolean has_crlf = false ;  for  ( int ptr = 0 ;  ptr < length - 1 ;  ptr++ )  {     if  ( raw [ ptr ]  == '\0' )  {         // binary         return false ;      } else if  ( raw [ ptr ]  == '\r' && raw [ ptr + 1 ]  == '\n' )  {         has_crlf = true ;      } } return has_crlf ; }"
8347,"public  Affine2 set To Trn Rot Scl (  Vector2 trn, float degrees,  Vector2 scale ) { return set To Trn Rot Scl ( trn . x, trn . y, degrees, scale . x, scale . y )  ; }"
8348,public boolean is Cancellation Requested (  ) { return token Source . is Cancellation Requested (  )  ; }
8349,"public com . anychart . charts .  Pie label (  String index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , settings )  )  ;  return this ; }"
8350,"public static void show Tooltip On Root Component (  Component Context c, final  Popup Window popup Window, int x Offset, int y Offset ) { show Tooltip ( c, popup Window, null, x Offset, y Offset )  ; }"
8351,public boolean apply ( C input ) { return contains ( input )  ; }
8352,"public com . anychart . graphics . vector .  Element scale (  Number sx,  Number sy,  Number cx,  Number cy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . scale ( %s, %s, %s, %s )  ; "", sx, sy, cx, cy )  )  ;  return this ; }"
8353,"public com . anychart . standalones .  Resource List even Fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . even Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
8354,"public  Iterator< Boolean Chunk> iterator (  ) { return new  Iterator< Boolean Chunk> (  )  {     private int current = length - 1 ;      @ Override     public boolean has Next (  )  {         return current >= 0 ;      }     @ Override     public  Boolean Chunk next (  )  {         long result = value &  (  ( byte )  1 << current )  ;           Boolean Chunk next = new  Boolean Chunk (  )  ;          next . is One = result == 0 ;          next . chunk Size =  ( int )   Math . pow ( 2, current )  ;          current-- ;          return next ;      }     @ Override     public void remove (  )  {     //  No-op     } } ; }"
8355,"public static  Immutable Sorted Map< String,  Source Path> convert Headers To Private Cxx Headers (  Build Target build Target,  Function< Source Path,  Path> path Resolver,  Path header Path Prefix,  Source Sorted Set private Source Set,  Source Sorted Set public Source Set ) { //  The private headers should contain exported headers with the private include style and // private // headers with both styles .   Immutable Sorted Map .  Builder< String,  Source Path> headers Map Builder =  Immutable Sorted Map . < String,  Source Path>natural Order (  )  . put All (  Stream . of (  Apple Descriptions . parse Apple Headers For Use From The Same Target ( build Target, path Resolver, private Source Set )  . entry Set (  )  . stream (  ) ,  Apple Descriptions . parse Apple Headers For Use From The Same Target ( build Target, path Resolver, public Source Set )  . entry Set (  )  . stream (  ) ,  Apple Descriptions . parse Apple Headers For Use From Other Targets ( build Target, path Resolver, header Path Prefix, private Source Set )  . entry Set (  )  . stream (  )  )  . reduce (  Stream::concat )  . or Else (  Stream . empty (  )  )  . distinct (  )  . collect (  Immutable Sorted Map . to Immutable Sorted Map (  Ordering . natural (  ) ,  Map .  Entry::get Key,  Map .  Entry::get Value )  )  )  ;  return headers Map Builder . build (  )  ; }"
8356,"public void insert (  Exception Table et, int offset ) { code Attr . get Exception Table (  )  . add ( 0, et, offset )  ; }"
8357,"public JSON Array get JSON Array ( @ Non Null final  String key ) { return get JSON Array ( key, null )  ; }"
8358,"public com . anychart . core . annotations .  Trend Channel top (  Number top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", top )  )  ;  return this ; }"
8359,"static T invoke Any Impl (  Listening Executor Service executor Service,  Collection<? extends  Callable<T>> tasks, boolean timed, long timeout,  Time Unit unit )  throws  Interrupted Exception,  Execution Exception,  Timeout Exception{ check Not Null ( executor Service )  ;  check Not Null ( unit )  ;  int ntasks = tasks . size (  )  ;  check Argument ( ntasks > 0 )  ;   List< Future<T>> futures =  Lists . new Array List With Capacity ( ntasks )  ;   Blocking Queue< Future<T>> future Queue =  Queues . new Linked Blocking Queue (  )  ;  long timeout Nanos = unit . to Nanos ( timeout )  ;  try {     //  Record exceptions so that if we fail to obtain any     // result, we can throw the last exception we got .       Execution Exception ee = null ;      long last Time = timed ?  System . nano Time (  )  : 0 ;       Iterator<? extends  Callable<T>> it = tasks . iterator (  )  ;      futures . add ( submit And Add Queue Listener ( executor Service, it . next (  ) , future Queue )  )  ;      --ntasks ;      int active = 1 ;      while  ( true )  {          Future<T> f = future Queue . poll (  )  ;          if  ( f == null )  {             if  ( ntasks > 0 )  {                 --ntasks ;                  futures . add ( submit And Add Queue Listener ( executor Service, it . next (  ) , future Queue )  )  ;                  ++active ;              } else if  ( active == 0 )  {                 break ;              } else if  ( timed )  {                 f = future Queue . poll ( timeout Nanos,  Time Unit . NANOSECONDS )  ;                  if  ( f == null )  {                     throw new  Timeout Exception (  )  ;                  }                 long now =  System . nano Time (  )  ;                  timeout Nanos -= now - last Time ;                  last Time = now ;              } else {                 f = future Queue . take (  )  ;              }         }         if  ( f != null )  {             --active ;              try {                 return f . get (  )  ;              } catch  (  Execution Exception eex )  {                 ee = eex ;              } catch  (  Runtime Exception rex )  {                 ee = new  Execution Exception ( rex )  ;              }         }     }     if  ( ee == null )  {         ee = new  Execution Exception ( null )  ;      }     throw ee ;  } finally {     for  (  Future<T> f : futures )  {         f . cancel ( true )  ;      } }}"
8360,public void skip Tree (  ) { if  ( curr Visit != null )  {     curr Visit . ptr = curr Visit . buf . length ;  }}
8361,public void set Prev Bitmap (  Bitmap prev Bitmap ) { this . prev Bitmap = prev Bitmap ; }
8362,protected final  String get File Path (  ) { return file Path ; }
8363,"public com . anychart . standalones .  Labels Factory use Html (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . use Html ( %s )  ; "", enabled )  )  ;  return this ; }"
8364,"public static int set Permissions (  String file Path, int mode, int uid, int gid ) { try {     init Class (  )  ;      if  ( s Set Permission Method == null )  {         s Set Permission Method =  Reflect Utils . get Method ( s File Utils Class, ""set Permissions"",  String . class,  Integer . TYPE,  Integer . TYPE,  Integer . TYPE )  ;      }      Object ret Obj = s Set Permission Method . invoke ( null, file Path, mode, uid, gid )  ;      if  ( ret Obj != null && ret Obj instanceof  Integer )  {         return  ( int )  ret Obj ;      } } catch  (  Class Not Found Exception e )  {     e . print Stack Trace (  )  ;  } catch  (  Invocation Target Exception e )  {     e . print Stack Trace (  )  ;  } catch  (  Illegal Access Exception e )  {     e . print Stack Trace (  )  ;  } return -1 ; }"
8365,"public com . anychart . core . cartesian . series .  Area3d container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
8366,"public void on Changed (  ) { final  Subscriber subscriber = m Ref Subscriber . get (  )  ;  final  Recycler View .  Adapter source = m Ref Source Holder . get (  )  ;  if  ( subscriber != null && source != null )  {     subscriber . on Bridged Adapter Changed ( source, m Tag )  ;  }}"
8367,public  String get Region (  ) { return region ; }
8368,"public boolean is Remote Movie Playing (  )  throws  Transient Network Disconnection Exception,  No Connection Exception{ check Connectivity (  )  ;  return m State ==  Media Status . PLAYER_STATE_BUFFERING || m State ==  Media Status . PLAYER_STATE_PLAYING ; }"
8369,"public  Dialog Plus Builder set Footer ( @ Non Null  View view ) { return set Footer ( view, false )  ; }"
8370,"static void check Expiration (  Cache<?, ?> cache ) { if  ( has Local Cache ( cache )  )  {     check Expiration ( to Local Cache ( cache )  )  ;  }}"
8371,public void nullability_managed (  ) { realm . begin Transaction (  )  ;   Mutable Realm Integer Types c1 = realm . create Object (  Mutable Realm Integer Types . class )  ;  realm . commit Transaction (  )  ;  realm . begin Transaction (  )  ;  test Nullability ( c1 )  ;  realm . commit Transaction (  )  ; }
8372,public  Factory set Load Error Handling Policy (  Load Error Handling Policy load Error Handling Policy ) {  Assertions . check State ( !is Create Called )  ;  this . load Error Handling Policy = load Error Handling Policy ;  return this ; }
8373,public void set ( byte [  ]  newinfo ) { info = newinfo ; }
8374,public  Refresh Layout set Scroll Boundary Decider (  Scroll Boundary Decider boundary ) { m Scroll Boundary Decider = boundary ;  if  ( m Refresh Content != null )  {     m Refresh Content . set Scroll Boundary Decider ( boundary )  ;  } return this ; }
8375,"public void refresh (  ) { if  ( my Dao == null )  {     throw new  Dao Exception ( "" Entity is detached from DAO context"" )  ;  } my Dao . refresh ( this )  ; }"
8376,public void set Met Text Color ( int color ) { text Color State List =  Color State List . value Of ( color )  ;  reset Text Color (  )  ; }
8377,"private boolean previous Period Better ( int min Diff, int max Diff ) { if  ( min Diff == 0 || prev Period == 0 )  {     return false ;  } if  ( max Diff > min Diff * 3 )  {     //  Got a reasonable match this period .      return false ;  } if  ( min Diff * 2 <= prev Min Diff * 3 )  {     //  Mismatch is not that much greater this period .      return false ;  } return true ; }"
8378,"public com . anychart . core . pert .  Milestones stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8379,"public static void pop To ( @ Non Null final  Fragment Manager fm, final  Class<? extends  Fragment> pop Clz, final boolean is Include Self, final boolean is Immediate ) { if  ( is Immediate )  {     fm . pop Back Stack Immediate ( pop Clz . get Name (  ) , is Include Self ?  Fragment Manager . POP_BACK_STACK_INCLUSIVE : 0 )  ;  } else {     fm . pop Back Stack ( pop Clz . get Name (  ) , is Include Self ?  Fragment Manager . POP_BACK_STACK_INCLUSIVE : 0 )  ;  }}"
8380,"public  String get To (  ) { return this . get Recipients (  )  != null ?  Text Utils . join ( "","", this . get Recipients (  )  )  : null ; }"
8381,"public com . anychart . core . polar . series .  Polygon polygon ( com . anychart . data .  Set data, com . anychart . enums .  Text Parsing Mode csv Settings ) { return new com . anychart . core . polar . series .  Polygon (  String . format (  Locale . US, js Base + "" . polygon ( %s, %s ) "",  ( data != null )  ? data . get Js Base (  )  : null,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
8382,public  Tv Show View Model get ( int i ) { return tv Shows . get ( i )  ; }
8383,"public static  String sanitize (  String name ) { return  Char Matcher . any Of ( ILLEGAL_FILE_NAME_CHARACTERS )  . replace From ( name, ""_"" )  ; }"
8384,public byte [  ]  get Lyrics (  ) { return  ( byte [  ]  )  this . get Object Value (  Data Types . OBJ_DATA )  ; }
8385,"public void check Merge Equal Trees In Core (  Merge Strategy strategy )  throws  Exception{  Git git =  Git . wrap ( db )  ;  write Trash File ( ""d/1"", ""orig"" )  ;  git . add (  )  . add Filepattern ( ""d/1"" )  . call (  )  ;   Rev Commit first = git . commit (  )  . set Message ( ""added d/1"" )  . call (  )  ;  write Trash File ( ""d/1"", ""modified"" )  ;   Rev Commit master Commit = git . commit (  )  . set All ( true )  . set Message ( ""modified d/1 on master"" )  . call (  )  ;  git . checkout (  )  . set Create Branch ( true )  . set Start Point ( first )  . set Name ( ""side"" )  . call (  )  ;  write Trash File ( ""d/1"", ""modified"" )  ;   Rev Commit side Commit = git . commit (  )  . set All ( true )  . set Message ( ""modified d/1 on side"" )  . call (  )  ;  git . rm (  )  . add Filepattern ( ""d/1"" )  . call (  )  ;  git . rm (  )  . add Filepattern ( ""d"" )  . call (  )  ;   Three Way Merger resolve Merger =  (  Three Way Merger )  strategy . new Merger ( db, true )  ;  boolean no Problems = resolve Merger . merge ( master Commit, side Commit )  ;  assert True ( no Problems )  ; }"
8386,"public  Flexible Adapter<T> set Permanent Delete ( boolean permanent Delete ) { log . i ( "" Set permanent Delete=%s"", permanent Delete )  ;  this . permanent Delete = permanent Delete ;  return this ; }"
8387,"public static  Immutable Set< Component Descriptor> get Component Descriptors (  Elements elements,  Element element ) {  Define Components define Components =  Define Components . create (  )  ;  return get Components ( elements, element )  . stream (  )  . map (  component -> elements . get Type Element ( component . canonical Name (  )  )  )  . map ( define Components::component Descriptor )  . collect ( to Immutable Set (  )  )  ; }"
8388,"public com . anychart . charts .  Tree Map interactivity (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . interactivity ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8389,public void clear (  ) { data = new  Fake Encoded Item [ 0 ]  ;  data Position = 0 ;  data Size = 0 ;  fail Next Read If Past End = false ; }
8390,public boolean has Positions (  ) { return  ( position Info !=  Position List . NONE )  && unprocessed Insns . has Any Position Info (  )  ; }
8391,"public boolean diff (  Repository Builder Factory factory )  throws IO Exception{ //$NON-NLS-1$ return diff ( null, 0, 0, """", factory )  ; }"
8392,public static _ Fields find By Thrift Id ( int field Id ) { switch ( field Id )  {     case // CACHED_INCLUDES     1:         return CACHED_INCLUDES ;      default:         return null ;  }}
8393,"public com . anychart . core . stock . scrollerseries .  Range Step Area fill (  String color,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s )  ; "", wrap Quotes ( color ) , opacity )  )  ;  return this ; }"
8394,"public boolean on Intercept Touch Event (  Motion Event ev ) { int action =  Motion Event Compat . get Action Masked ( ev )  ;  final float x = ev . get X (  )  ;  final float y = ev . get Y (  )  ;  if  ( is Enabled (  )  && touch Listener . is Swipe Enabled (  )  )  {     if  ( touch State == TOUCH_STATE_SCROLLING_X )  {         return touch Listener . on Touch ( this, ev )  ;      }     switch ( action )  {         case  Motion Event . ACTION_MOVE:             check In Moving ( x, y )  ;              return touch State == TOUCH_STATE_SCROLLING_Y ;          case  Motion Event . ACTION_DOWN:             super . on Intercept Touch Event ( ev )  ;              touch Listener . on Touch ( this, ev )  ;              touch State = TOUCH_STATE_REST ;              last Motion X = x ;              last Motion Y = y ;              return false ;          case  Motion Event . ACTION_CANCEL:             touch State = TOUCH_STATE_REST ;              break ;          case  Motion Event . ACTION_UP:             touch Listener . on Touch ( this, ev )  ;              return touch State == TOUCH_STATE_SCROLLING_Y ;          default:             break ;      } } return super . on Intercept Touch Event ( ev )  ; }"
8395,public  Task< Short Dynamic Link> build Short Dynamic Link (  ) { verify Api Key (  )  ;  return firebase Dynamic Links Impl . create Short Dynamic Link ( builder Parameters )  ; }
8396,public  Bson get Sort (  ) { return sort ; }
8397,public float get Rotation (  ) { return rotation ; }
8398,"public void set Failure Image (  Drawable drawable,  Scaling Utils .  Scale Type scale Type ) { set Child Drawable At Index ( FAILURE_IMAGE_INDEX, drawable )  ;  get Scale Type Drawable At Index ( FAILURE_IMAGE_INDEX )  . set Scale Type ( scale Type )  ; }"
8399,public void show Year Picker First ( boolean year Picker ) { m Default View = year Picker ? YEAR_VIEW : MONTH_AND_DAY_VIEW ; }
8400,"private boolean is RTL Forced (  Context context ) { return is Pref Set ( context, KEY_FOR_PREFS_FORCERTL, false )  ; }"
8401,public double get Current Value (  ) { return m Current State . position ; }
8402,"public com . anychart . core . utils .  Quarter top Stroke ( com . anychart . graphics . vector .  Colored Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top Stroke ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
8403,public boolean equals Identity (  Object o ) { if  ( this == o )      return true ;  if  ( o == null || ! ( o instanceof  Queue )  )      return false ;   Queue<?> q =  (  Queue<?> )  o ;  final int size = this . size ;  if  ( q . size != size )      return false ;  final T [  ]  my Values = this . values ;  final int my Backing Length = my Values . length ;  final  Object [  ]  its Values = q . values ;  final int its Backing Length = its Values . length ;  int my Index = head ;  int its Index = q . head ;  for  ( int s = 0 ;  s < size ;  s++ )  {     if  ( my Values [ my Index ]  != its Values [ its Index ]  )          return false ;      my Index++ ;      its Index++ ;      if  ( my Index == my Backing Length )          my Index = 0 ;      if  ( its Index == its Backing Length )          its Index = 0 ;  } return true ; }
8404,public static int set Private ( int mod ) { return  ( mod & ~ ( PROTECTED | PUBLIC )  )  | PRIVATE ; }
8405,"public void show Panel (  ) { if  ( m First Layout )  {     m Slide State =  Slide State . COLLAPSED ;  } else {     if  ( m Slideable View == null || m Slide State !=  Slide State . HIDDEN )          return ;      m Slideable View . set Visibility (  View . VISIBLE )  ;      request Layout (  )  ;      smooth Slide To ( 0, 0 )  ;  }}"
8406,"public static  Function< List< Item>,  Integer> count (  String field ) { return new  Field Counter ( field )  ; }"
8407,"public com . anychart . charts .  Venn fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
8408,"public void radius (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . radius (  )  ; "" )  ; }"
8409,"public  Immutable Sorted Map< Document Key,  Document> acknowledge Batch (  Mutation Batch Result batch Result ) { return persistence . run Transaction ( "" Acknowledge batch"",  (  )  -> {      Mutation Batch batch = batch Result . get Batch (  )  ;      mutation Queue . acknowledge Batch ( batch, batch Result . get Stream Token (  )  )  ;      apply Write To Remote Documents ( batch Result )  ;      mutation Queue . perform Consistency Check (  )  ;      return local Documents . get Documents ( batch . get Keys (  )  )  ;  } )  ; }"
8410,"public void save Key Store Encrypted Key ( @ Non Null  Secret Key unencrypted Key )  throws  General Security Exception, IO Exception{ return ; }"
8411,"private boolean fire Progress Event ( final int current, final int total ) { if  ( is Task Interrupted (  )  || is Task Not Actual (  )  )      return false ;  if  ( progress Listener != null )  {      Runnable r = new  Runnable (  )  {         @ Override         public void run (  )  {             progress Listener . on Progress Update ( uri, image Aware . get Wrapped View (  ) , current, total )  ;          }     } ;      run Task ( r, false, handler, engine )  ;  } return true ; }"
8412,"public com . anychart . core . grids .  Map Settings minor Stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . minor Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8413,public  List< String> get Sent Dialer Special Codes (  ) { return  Immutable List . copy Of ( sent Dialer Special Codes )  ; }
8414,"public static  Crouton make (  Activity activity,  View custom View, int view Group Res Id ) { return new  Crouton ( activity, custom View,  (  View Group )  activity . find View By Id ( view Group Res Id )  )  ; }"
8415,"public static  Padding dp ( @ Dimension ( unit =  Dimension . DP )  int padding Dp, @ Dimension ( unit =  Dimension . DP )  int item Spacing Dp ) { return new  Padding ( padding Dp, padding Dp, padding Dp, padding Dp, item Spacing Dp,  Padding Type . DP )  ; }"
8416,"public com . anychart . data . treeview .  Data Item add Child ( com . anychart . data . treeview .  Data Item child ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . add Child ( %s )  ; "",  ( child != null )  ? child . get Js Base (  )  : null )  )  ;  return this ; }"
8417,"public com . anychart . core . resource .  Logo top Stroke ( com . anychart . graphics . vector .  Stroke value,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top Stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8418,public void set Italic Text ( boolean italic ) { get Paint (  )  . set Text Skew X ( italic ? -0 . 25f : 0f )  ; }
8419,public int max Piece Number (  ) { switch ( this )  {     case  Share:     case  Custom:         return  Integer . MAX_VALUE ;      case  Unknown:         return 0 ;      default:         return -1 ;  }}
8420,public void set Tcp No Delay ( boolean tcp No Delay ) { this . tcp No Delay = tcp No Delay ; }
8421,"protected  Enumeration create Enumeration (  Object iterate Over Me ) { if  ( iterate Over Me == null )      throw new  Null Pointer Exception ( "" Object arguments passed to "" + ""the  Basic Bsh Iterator constructor cannot be null . "" )  ;  if  ( iterate Over Me instanceof  Enumeration )      return  (  Enumeration )  iterate Over Me ;  if  ( iterate Over Me instanceof  Vector )      return  (  (  Vector )  iterate Over Me )  . elements (  )  ;  if  ( iterate Over Me . get Class (  )  . is Array (  )  )  {     final  Object array = iterate Over Me ;      return new  Enumeration (  )  {         int index = 0, length =  Array . get Length ( array )  ;          public  Object next Element (  )  {             return  Array . get ( array, index++ )  ;          }         public boolean has More Elements (  )  {             return index < length ;          }     } ;  } if  ( iterate Over Me instanceof  String )      return create Enumeration (  (  (  String )  iterate Over Me )  . to Char Array (  )  )  ;  if  ( iterate Over Me instanceof  String Buffer )      return create Enumeration ( iterate Over Me . to String (  )  . to Char Array (  )  )  ;  throw new  Illegal Argument Exception ( "" Cannot enumerate object of type "" + iterate Over Me . get Class (  )  )  ; }"
8422,"public com . anychart . core . ui .  Legend Item text Settings (  String name,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Settings ( %s, %s )  ; "", wrap Quotes ( name ) , wrap Quotes ( settings )  )  )  ;  return this ; }"
8423,"public void row Hover Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . row Hover Fill (  )  ; "" )  ; }"
8424,public float get Scroll Width (  ) { return widget Area . width ; }
8425,public  Iterable Of Protos Fluent Assertion<M> ignoring Extra Repeated Field Elements Of Field Descriptors (  Iterable< Field Descriptor> field Descriptors ) { return using Config ( config . ignoring Extra Repeated Field Elements Of Field Descriptors ( field Descriptors )  )  ; }
8426,public int get Value Hash (  ) { return is Valid (  )  ?  System . identity Hash Code ( m Shared Reference . get (  )  )  : 0 ; }
8427,"public void test Lifecycle_F1_S2_C (  ) {  Data Source< Object> data Source = get And Subscribe (  )  ;   Data Subscriber< Object> subscriber1 = verify Get And Subscribe ( m Data Source Supplier1, m Src1 )  ;  set State ( m Src1, NOT_CLOSED, FINISHED, WITHOUT_RESULT, null, FAILED, mock (  Throwable . class )  )  ;  subscriber1 . on Failure ( m Src1 )  ;  m In Order . verify ( m Src1 )  . close (  )  ;   Data Subscriber< Object> subscriber2 = verify Get And Subscribe ( m Data Source Supplier2, m Src2 )  ;  verify State ( data Source, null, NOT_CLOSED, NOT_FINISHED, WITHOUT_RESULT, null, NOT_FAILED, null )  ;   Object val = mock (  Object . class )  ;  set State ( m Src2, NOT_CLOSED, FINISHED, WITH_RESULT, val, NOT_FAILED, null )  ;  subscriber2 . on New Result ( m Src2 )  ;  verify Subscriber ( data Source, m Src2, ON_NEW_RESULT )  ;  verify State ( data Source, m Src2, NOT_CLOSED, FINISHED, WITH_RESULT, val, NOT_FAILED, null )  ;  test Close ( data Source, m Src2 )  ;  verify State ( data Source, null, CLOSED, FINISHED, WITHOUT_RESULT, null, NOT_FAILED, null )  ; }"
8428,"public com . anychart . core . gantt . elements .  Timeline Element stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8429,public  Type Mirror type (  ) { return wrapped Type (  )  . get (  )  ; }
8430,"public com . anychart . core . venn .  Intersections fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
8431,"public void run Transaction ( @ Non Null final  Transaction .  Handler handler, final boolean fire Local Events ) { if  ( handler == null )  {     throw new  Null Pointer Exception ( "" Can't pass null for argument 'handler' in run Transaction (  ) "" )  ;  }  Validation . validate Writable Path ( get Path (  )  )  ;  repo . schedule Now ( new  Runnable (  )  {     @ Override     public void run (  )  {         repo . start Transaction ( get Path (  ) , handler, fire Local Events )  ;      } } )  ; }"
8432,public  Object Id [  ]  get Merged Commits (  ) { return merged Commits ; }
8433,"public com . anychart . core . annotations .  Fibonacci Fan height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . height ( %s )  ; "", height )  )  ;  return this ; }"
8434,"public boolean is Empty Connections (  ) { return preferences_ . get String ( CONNECTIONS_PREFERENCE, """" )  . length (  )  == 0 ; }"
8435,"public void id (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . id (  )  ; "" )  ; }"
8436,"public  Flowable< Put Result> as Rx Flowable ( @ Non Null  Backpressure Strategy backpressure Strategy ) { return  Rx Java Utils . create Flowable ( stor IOSQ Lite, this, backpressure Strategy )  ; }"
8437,public  Refresh Layout set Enable Nested Scroll ( boolean enabled ) { set Nested Scrolling Enabled ( enabled )  ;  return this ; }
8438,"public com . anychart . core . stock .  Plot max Point Width (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Point Width ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
8439,public final void set Observer (  Parse Observer observer ) { this . observer = observer ; }
8440,public void set Texture Coords ( final int texture Coord Buffer Handle ) { m Vertex Shader . set Texture Coords ( texture Coord Buffer Handle )  ; }
8441,public  Builder ignore By ( int size ) { this . m Least Compress Size = size ;  return this ; }
8442,"public void add Gumball ( float x, float y,  Gumball gumball, float density, float radius, float bounce, float friction,  Body Type body Type ) { //  Create  Shape with  Properties  Circle Shape circle Shape = new  Circle Shape (  )  ;  circle Shape . m_radius = radius ;  add Item ( x, y, circle Shape, bounce, gumball, density, friction, body Type )  ; }"
8443,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
8444,public static  String get Root Tag Name ( @ Non Null  File xml File ) { try  (  Input Stream stream = new  Buffered Input Stream ( new  File Input Stream ( xml File )  )  )  {     XML Input Factory factory = XML Input Factory . new Factory (  )  ;      XML Stream Reader xml Stream Reader = factory . create XML Stream Reader ( stream )  ;      while  ( xml Stream Reader . has Next (  )  )  {         int event = xml Stream Reader . next (  )  ;          if  ( event == XML Stream Reader . START_ELEMENT )  {             return xml Stream Reader . get Local Name (  )  ;          }     } } catch  ( XML Stream Exception | IO Exception ignored )  { } return null ; }
8445,protected  Completable run Batch (  Write Batch batch ) { return  Completable . create (  emitter -> {     batch . commit (  )  . add On Complete Listener (  task -> {         emitter . on Complete (  )  ;      } )  . add On Failure Listener ( emitter::on Error )  ;  } )  . subscribe On ( RX . io (  )  )  ; }
8446,public  Stack< Vector3> get Points (  ) { return points ; }
8447,public void clear (  ) { adapter = null ;  tag = null ;  position =  Recycler View . NO_POSITION ; }
8448,"public  Vec2 get Screen To World (  Vec2 arg Screen ) {  Vec2 world = new  Vec2 (  )  ;  viewport Transform . get Screen To World ( arg Screen, world )  ;  return world ; }"
8449,"private int reselect Selector ( int degrees, boolean is Inner Circle, boolean force To Visible Value, boolean force Draw Dot ) { if  ( degrees == -1 )  {     return -1 ;  } int current Showing = get Current Item Showing (  )  ;  int step Size ;  boolean allow Fine Grained = !force To Visible Value &&  ( current Showing == MINUTE_INDEX )  ;  if  ( allow Fine Grained )  {     degrees = snap Prefer30s ( degrees )  ;  } else {     degrees = snap Only30s ( degrees, 0 )  ;  }  Radial Selector View radial Selector View ;  if  ( current Showing == HOUR_INDEX )  {     radial Selector View = m Hour Radial Selector View ;      step Size = HOUR_VALUE_TO_DEGREES_STEP_SIZE ;  } else {     radial Selector View = m Minute Radial Selector View ;      step Size = MINUTE_VALUE_TO_DEGREES_STEP_SIZE ;  } radial Selector View . set Selection ( degrees, is Inner Circle, force Draw Dot )  ;  radial Selector View . invalidate (  )  ;  if  ( current Showing == HOUR_INDEX )  {     if  ( m Is24 Hour Mode )  {         if  ( degrees == 0 && is Inner Circle )  {             degrees = 360 ;          } else if  ( degrees == 360 && !is Inner Circle )  {             degrees = 0 ;          }     } else if  ( degrees == 0 )  {         degrees = 360 ;      } } else if  ( degrees == 360 && current Showing == MINUTE_INDEX )  {     degrees = 0 ;  } int value = degrees / step Size ;  if  ( current Showing == HOUR_INDEX && m Is24 Hour Mode && !is Inner Circle && degrees != 0 )  {     value += 12 ;  } return value ; }"
8450,"public com . anychart . core . annotations .  Fibonacci Arc parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
8451,"public com . anychart . charts .  Scatter bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
8452,public static AN Request .  Head Request Builder head (  String url ) { return new AN Request .  Head Request Builder ( url )  ; }
8453,"public com . anychart . core . stock . scrollerseries .  Jump Line stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8454,"public com . anychart . core . stock . indicators .  Price Channels middle Series ( com . anychart . enums .  Stock Series Type type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . middle Series ( %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
8455,"public com . anychart . core . ui .  Callout padding (  String [  ]  padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "", array To String Wrap Quotes ( padding )  )  )  ;  return this ; }"
8456,"public com . anychart . core . stock . indicators . TRIX ma Type ( com . anychart . enums .  Moving Average Type type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . ma Type ( %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
8457,public void set Enter Fade Duration ( int ms ) { m Drawable Container State . m Enter Fade Duration = ms ; }
8458,"public static  Tweak< Float> float Tweak (  String tweak Name, float default Value, float minimum Value, float maximum Value ) { return s Shared Tweaks . float Tweak ( tweak Name, default Value, minimum Value, maximum Value )  ; }"
8459,"public static boolean target Node Arg Matches Platform (  Configuration Rule Registry configuration Rule Registry,  Constructor Arg target Node Arg,  Platform platform,  Dependency Stack dependency Stack,  Buck Config buck Config ) { if  ( ! ( target Node Arg instanceof  Build Rule Arg )  )  {     return true ;  }  Build Rule Arg arg With Target Compatible =  (  Build Rule Arg )  target Node Arg ;  if  ( !arg With Target Compatible . get Compatible With (  )  . is Empty (  )  )  {     return config Targets Match Platform ( configuration Rule Registry, arg With Target Compatible . get Compatible With (  ) , platform, dependency Stack, buck Config )  ;  } return true ; }"
8460,public void set Port ( int port ) { this . port = port ; }
8461,public void set Audio Path (  String path ) { m Audio Util . set Audio Path ( path )  ; }
8462,"public void even Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . even Fill (  )  ; "" )  ; }"
8463,public  Options get Decoding Options (  ) { return decoding Options ; }
8464,"public void read String (  String time Stamp, int offset ) { if  ( time Stamp == null )  {     throw new  Null Pointer Exception ( "" Image is null"" )  ;  } if  (  ( offset < 0 )  ||  ( offset >= time Stamp . length (  )  )  )  {     throw new  Index Out Of Bounds Exception ( "" Offset to time Stamp is out of bounds: offset = "" + offset + "", time Stamp . length (  ) "" + time Stamp . length (  )  )  ;  } time Stamp = time Stamp . substring ( offset )  ;  if  ( time Stamp . length (  )  == 7 )  {     minute =  Integer . parse Int ( time Stamp . substring ( 1, 3 )  )  ;      second =  Integer . parse Int ( time Stamp . substring ( 4, 6 )  )  ;  } else {     minute = 0 ;      second = 0 ;  }}"
8465,public final  Entry<E> poll Last Entry (  ) { throw new  Unsupported Operation Exception (  )  ; }
8466,"protected void get Field Data (  String [  ]  field Names, int start,  Object child, int level, boolean is Foot )  throws  No Such Field Exception,  Illegal Access Exception{ for  ( int i = start ;  i < field Names . length ;  i++ )  {     if  ( child == null )  {         add Data ( null, is Foot )  ;          count Column Value ( null )  ;          structure . put Null ( level, is Foot )  ;          break ;      }      Class child Clazz = child . get Class (  )  ;       Field child Field = child Clazz . get Declared Field ( field Names [ i ]  )  ;      child Field . set Accessible ( true )  ;      child = child Field . get ( child )  ;      if  ( !is List ( child )  )  {         if  ( i == field Names . length - 1 )  {             if  ( child == null )  {                 structure . put Null ( level, is Foot )  ;              }             T t =  ( T )  child ;              add Data ( t, true )  ;              count Column Value ( t )  ;          }     } else {         level++ ;          if  ( child . get Class (  )  . is Array (  )  )  {             T [  ]  data =  ( T [  ]  )  child ;              array Type = ARRAY ;              for  (  Object d : data )  {                 if  ( i == field Names . length - 1 )  {                     add Data (  ( T )  d, true )  ;                  } else {                     get Field Data ( field Names, i + 1, d, level, true )  ;                  }             }             structure . put ( level - 1, data . length, is Foot )  ;          } else {              List data =  (  List )  child ;              array Type = LIST ;              for  (  Object d : data )  {                 if  ( i == field Names . length - 1 )  {                     T t =  ( T )  d ;                      add Data ( t, true )  ;                  } else {                     get Field Data ( field Names, i + 1, d, level, true )  ;                  }             }             structure . put ( level - 1, data . size (  ) , is Foot )  ;          }         break ;      } }}"
8467,public void set Max Zones ( int max Zones ) { this . max Zones = max Zones ; }
8468,"private void create Restore Item Info ( int position, T item ) { //  Collapse  Parent before removal if it is expanded! if  ( is Expanded ( item )  )  {     collapse ( position )  ;  } //  Get the reference of the previous item  ( get Item returns null if out Of Bounds )  //  If null, it will be restored at position = 0 T ref Item = get Item ( position - 1 )  ;  if  ( ref Item != null )  {     //  Check if the ref Item is a child of an  Expanded parent, take the parent!     I Expandable expandable = get Expandable Of ( ref Item )  ;      if  ( expandable != null )  {         ref Item =  ( T )  expandable ;      } } m Restore List . add ( new  Restore Info ( ref Item, item )  )  ;  log . v ( "" Recycled  Item %s on position=%s"", m Restore List . get ( m Restore List . size (  )  - 1 ) , position )  ; }"
8469,"public  Optional< Rev Object> are All Reachable (  Collection< Rev Object> targets,  Stream< Rev Object> starters )  throws IO Exception{ try {      List< Rev Object> remaining Targets = new  Array List<> ( targets )  ;       Bitmap Walker bitmap Walker = new  Bitmap Walker ( walk, walk . get Object Reader (  )  . get Bitmap Index (  ) , null )  ;       Iterator< Rev Object> starter It = starters . iterator (  )  ;       Bitmap Builder seen = null ;      while  ( starter It . has Next (  )  )  {          List< Rev Object> as List =  Arrays . as List ( starter It . next (  )  )  ;           Bitmap Builder visited = bitmap Walker . find Objects ( as List, seen, true )  ;          seen = seen == null ? visited : seen . or ( visited )  ;          remaining Targets . remove If ( seen::contains )  ;          if  ( remaining Targets . is Empty (  )  )  {             return  Optional . empty (  )  ;          }     }     return  Optional . of ( remaining Targets . get ( 0 )  )  ;  } catch  (  Missing Object Exception |  Incorrect Object Type Exception e )  {     throw new  Illegal State Exception ( e )  ;  }}"
8470,"public com . anychart . core . cartesian . series .  Line3d markers (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", settings )  )  ;  return this ; }"
8471,public  List< Token Cache Item> get Tokens For User (  String user Id ) {  Iterator< Token Cache Item> results = this . get All (  )  ;  final  List< Token Cache Item> token Items = new  Array List<> (  )  ;  while  ( results . has Next (  )  )  {     final  Token Cache Item token Cache Item = results . next (  )  ;      if  ( token Cache Item . get User Info (  )  != null && token Cache Item . get User Info (  )  . get User Id (  )  . equals Ignore Case ( user Id )  )  {         token Items . add ( token Cache Item )  ;      } } return token Items ; }
8472,"protected  Preprocessor Delegate build Preprocessor Delegate (  Cxx Platform cxx Platform,  Preprocessor preprocessor,  Cxx Tool Flags preprocessor Flags,  Action Graph Builder graph Builder,  Source Path Resolver Adapter path Resolver ) { return new  Preprocessor Delegate ( cxx Platform . get Header Verification (  ) ,  Path Source Path . of ( get Project Filesystem (  ) ,  Paths . get ( """" )  ) , preprocessor,  Preprocessor Flags . of (  Optional . of ( get Header Source Path (  )  ) , preprocessor Flags, get Includes ( cxx Platform, graph Builder ) ,  Immutable List . copy Of ( get Frameworks ( cxx Platform, graph Builder )  )  ) ,  Cxx Description Enhancer . framework Path To Search Path ( cxx Platform, path Resolver ) , /* leading Include Paths */  Optional . empty (  ) ,  Optional . empty (  ) , cxx Platform . get Conflicting Header Basename Whitelist (  )  )  ; }"
8473,"public  String get Discriminating Value ( I Logging Event event ) { // http://jira . qos . ch/browse/LBCLASSIC-213  Map< String,  String> mdc Map = event . get MDC Property Map (  )  ;  if  ( mdc Map == null )  {     return default Value ;  }  String mdc Value = mdc Map . get ( key )  ;  if  ( mdc Value == null )  {     return default Value ;  } else {     return mdc Value ;  }}"
8474,public boolean has ID3v1 Tag (  ) { return  ( id3v1tag != null )  ; }
8475,public  Complete Builder to Builder (  ) { return new  Complete Builder ( this )  ; }
8476,"public  Path output Dir To Root Relative (  Path path ) {  Path result =  More Paths . normalize (  More Paths . relativize ( output Directory, path )  )  ;  if  ( EMPTY_PATH . equals ( result )  )  {     result = CURRENT_DIRECTORY ;  } return result ; }"
8477,public com . google . protobuf .  Byte String get Data (  ) { return data_ ; }
8478,public  Future<?> did Parse Buck Rules ( int amount ) { number Of Parsed Rules . add And Get ( amount )  ;  number Of Parsed BUCK Files . increment And Get (  )  ;  return run Async (  (  )  -> calculate Parsing Buck Files Estimated Progress (  )  )  ; }
8479,public void set Interfaces (  Class<?> [  ]  ifs ) { interfaces = ifs ;  // force recompute of signature signature = null ; }
8480,public byte get Release (  ) { return RELEASE ; }
8481,"public void take Photo (  ) { try {      Item photo Item = // get an P Stream of image from camera, user will need to take a photo here .      uqi . get Data (  Image . take Photo (  ) , purpose )  . set Field ( ""photo_path"", // create a field ""photo_path"" from ""image_data"" field using `get Filepath` operator .       Image Operators . get Filepath ( ""image_data"" )  )  . get First (  )  ;      // get the value of ""photo_path"" field .       String photo Path = photo Item . get Value By Field ( ""photo_path"" )  ;      //            //  You can also use `get Field` instead of `as Item` .      //             String photo Path = uqi . get Data (  Image . take Photo (  ) , purpose )      //                     . set Field ( ""photo_path"",  Image Operators . get Filepath ( ""image_data"" )  )      //                     . get Field ( ""photo_path"" )  ;  // get the ""photo_path"" field .       System . out . println ( "" The new photo's path is "" + photo Path )  ;  } catch  ( PS Exception e )  {     e . print Stack Trace (  )  ;  }}"
8482,public void reset (  ) { changed Objects . clear (  )  ;  unregister All Objects (  )  ; }
8483,"public void bottom (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . bottom (  )  ; "" )  ; }"
8484,"public static  Type Element public Early Entry Point (  Type Element element,  Elements elements ) { return public Dep ( element, elements,  Class Names . EARLY_ENTRY_POINT )  ; }"
8485,"public  List< Playback> get Resource Playbacks ( int res Id ) {  Immutable List .  Builder< Playback> playbacks =  Immutable List . builder (  )  ;  for  (  Playback playback : played Sounds )  {     if  ( id Is For Resource ( playback . sound Id, res Id )  )  {         playbacks . add ( playback )  ;      } } return playbacks . build (  )  ; }"
8486,"public void max Point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Point Width (  )  ; "" )  ; }"
8487,"public void font Color (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Color (  )  ; "" )  ; }"
8488,"public static  String read Pascal String (  Random Access File raf )  throws IO Exception{ int len = raf . read (  )  ;  byte [  ]  buf = new byte [ len + 1 ]  ;  raf . read ( buf, 1, len )  ;  buf [ 0 ]  =  ( byte )  len ;  return bytes To Pascal String ( buf )  ; }"
8489,public  File Download Queue Set set Wifi Required ( boolean is Wifi Required ) { this . is Wifi Required = is Wifi Required ;  return this ; }
8490,"public com . anychart . core . ui .  Background background (  ) { return new com . anychart . core . ui .  Background ( js Base + "" . background (  ) "" )  ; }"
8491,public void set Recommend Shallow (  String recommend Shallow ) { this . recommend Shallow = recommend Shallow ; }
8492,"public void create Timed Simulated Beacons (  ) { if  ( USE_SIMULATED_BEACONS )  {     beacons = new  Array List< Beacon> (  )  ;       Beacon beacon1 = new  Alt Beacon .  Builder (  )  . set Id1 ( ""DF7 E1 C79-43 E9-44 FF-886 F-1 D1 F7 DA6997 A"" )  . set Id2 ( ""1"" )  . set Id3 ( ""1"" )  . set Rssi ( -55 )  . set Tx Power ( -55 )  . build (  )  ;       Beacon beacon2 = new  Alt Beacon .  Builder (  )  . set Id1 ( ""DF7 E1 C79-43 E9-44 FF-886 F-1 D1 F7 DA6997 A"" )  . set Id2 ( ""1"" )  . set Id3 ( ""2"" )  . set Rssi ( -55 )  . set Tx Power ( -55 )  . build (  )  ;       Beacon beacon3 = new  Alt Beacon .  Builder (  )  . set Id1 ( ""DF7 E1 C79-43 E9-44 FF-886 F-1 D1 F7 DA6997 A"" )  . set Id2 ( ""1"" )  . set Id3 ( ""3"" )  . set Rssi ( -55 )  . set Tx Power ( -55 )  . build (  )  ;       Beacon beacon4 = new  Alt Beacon .  Builder (  )  . set Id1 ( ""DF7 E1 C79-43 E9-44 FF-886 F-1 D1 F7 DA6997 A"" )  . set Id2 ( ""1"" )  . set Id3 ( ""4"" )  . set Rssi ( -55 )  . set Tx Power ( -55 )  . build (  )  ;      beacons . add ( beacon1 )  ;      beacons . add ( beacon2 )  ;      beacons . add ( beacon3 )  ;      beacons . add ( beacon4 )  ;      final  List< Beacon> final Beacons = new  Array List< Beacon> ( beacons )  ;      // Clearing beacons list to prevent all beacons from appearing immediately .      // These will be added back into the beacons list from final Beacons later .      beacons . clear (  )  ;      schedule Task Executor =  Executors . new Scheduled Thread Pool ( 5 )  ;      //  This schedules an beacon to appear every 10 seconds:     schedule Task Executor . schedule At Fixed Rate ( new  Runnable (  )  {         public void run (  )  {             try {                 //putting a single beacon back into the beacons list .                  if  ( final Beacons . size (  )  > beacons . size (  )  )                      beacons . add ( final Beacons . get ( beacons . size (  )  )  )  ;                  else                     schedule Task Executor . shutdown (  )  ;              } catch  (  Exception e )  {                 e . print Stack Trace (  )  ;              }         }     }, 0, 10,  Time Unit . SECONDS )  ;  }}"
8493,private boolean is Hour Inner Circle ( int hour Of Day ) { //  We'll have the 00 hours on the outside circle .  return m Is24 Hour Mode &&  ( hour Of Day <= 12 && hour Of Day != 0 )  ; }
8494,public static  Issue get Issue (  Git Hub Event event ) { if  ( event == null || event . payload (  )  == null )  {     return null ;  } switch ( event . type (  )  )  {     case  Issues Event:         return  (  (  Issues Payload )  event . payload (  )  )  . issue (  )  ;      case  Issue Comment Event:         return  (  (  Issue Comment Payload )  event . payload (  )  )  . issue (  )  ;      case  Pull Request Event:         return to Issue (  (  (  Pull Request Payload )  event . payload (  )  )  . pull Request (  )  )  ;      default:         return null ;  }}
8495,public boolean is Invocation (  ) { return is Invocation ( type )  ; }
8496,"public  Ss Media Source create Media Source (  Uri manifest Uri ) { is Create Called = true ;  if  ( manifest Parser == null )  {     manifest Parser = new  Ss Manifest Parser (  )  ;  } if  ( stream Keys != null )  {     manifest Parser = new  Filtering Manifest Parser<> ( manifest Parser, stream Keys )  ;  } return new  Ss Media Source ( /* manifest= */ null,  Assertions . check Not Null ( manifest Uri ) , manifest Data Source Factory, manifest Parser, chunk Source Factory, composite Sequenceable Loader Factory, load Error Handling Policy, live Presentation Delay Ms, tag )  ; }"
8497,"public com . anychart . core . ui .  Labels Factory max Labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . max Labels (  ) "" )  ; }"
8498,public  Type get Type (  ) { return  Type . intern ( descriptor . get String (  )  )  ; }
8499,"public void offset (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . offset (  )  ; "" )  ; }"
8500,"public  Vector2 get World Center (  ) { jni Get World Center ( addr, tmp )  ;  world Center . x = tmp [ 0 ]  ;  world Center . y = tmp [ 1 ]  ;  return world Center ; }"
8501,"public static void sort Descending ( long [  ]  array ) { check Not Null ( array )  ;  sort Descending ( array, 0, array . length )  ; }"
8502,public  Apply Default Flavors Mode get Apply Default Flavors Mode (  ) { return  Apply Default Flavors Mode . DISABLED ; }
8503,"public  Identify set (  String property, boolean [  ]  values ) { add To User Properties (  Constants . AMP_OP_SET, property, boolean Array To JSON Array ( values )  )  ;  return this ; }"
8504,protected static  Type get Type From Version Output (  Iterable< String> lines ) { for  (  String line : lines )  {      Matcher matcher = CLANG_VERSION_PATTERN . matcher ( line )  ;      if  ( matcher . matches (  )  )  {         return  Type . CLANG ;      } } return  Type . GCC ; }
8505,public  Commit Command set Amend ( boolean amend ) { check Callable (  )  ;  this . amend = amend ;  return this ; }
8506,"public void unbind ( final  Shader Program shader ) { unbind ( shader, null )  ; }"
8507,"public com . anychart . standalones .  Resource Timeline range Marker (  Number index, com . anychart . enums .  Gantt Date Time Markers value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . range Marker ( %s, %s )  ; "", index,  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
8508,"public com . anychart . standalones .  Labels Factory parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
8509,"public static void union Jar (  File base Jar,  File diff Jar,  File out Jar )  throws IO Exception{  File out Parent Folder = out Jar . get Parent File (  )  ;  if  ( !out Parent Folder . exists (  )  )  {     out Parent Folder . mkdirs (  )  ;  }  List< String> diff Entries = get Zip Entries ( diff Jar )  ;   File Output Stream fos = new  File Output Stream ( out Jar )  ;   Zip Output Stream jos = new  Zip Output Stream ( fos )  ;  final byte [  ]  buffer = new byte [ 8192 ]  ;   File Input Stream fis = new  File Input Stream ( base Jar )  ;   Zip Input Stream zis = new  Zip Input Stream ( fis )  ;  try {     // loop on the entries of the jar file package and put them in the final jar      Zip Entry entry ;      while  (  ( entry = zis . get Next Entry (  )  )  != null )  {         // do not take directories or anything inside a potential META-INF folder .          if  ( entry . is Directory (  )  )  {             continue ;          }          String name = entry . get Name (  )  ;          if  ( diff Entries . contains ( name )  )  {             continue ;          }          Jar Entry new Entry ;          //  Preserve the STORED method of the input entry .          if  ( entry . get Method (  )  ==  Jar Entry . STORED )  {             new Entry = new  Jar Entry ( entry )  ;          } else {             //  Create a new entry so that the compressed len is recomputed .              new Entry = new  Jar Entry ( name )  ;          }         // add the entry to the jar archive         jos . put Next Entry ( new Entry )  ;          // read the content of the entry from the input stream, and write it into the archive .          int count ;          while  (  ( count = zis . read ( buffer )  )  != -1 )  {             jos . write ( buffer, 0, count )  ;          }         // close the entries for this file         jos . close Entry (  )  ;          zis . close Entry (  )  ;      } } finally {     zis . close (  )  ;  } fis . close (  )  ;  jos . close (  )  ; }"
8510,public void set Progress Bar Id ( int progress Bar Id ) { this . progress Bar Id = progress Bar Id ; }
8511,public static  Gson Converter Factory create (  ) { return create ( new  Gson (  )  )  ; }
8512,"public boolean mouse Moved ( int screen X, int screen Y ) { mouse Screen X = screen X ;  mouse Screen Y = screen Y ;  if  ( !is Inside Viewport ( screen X, screen Y )  )      return false ;  screen To Stage Coordinates ( temp Coords . set ( screen X, screen Y )  )  ;   Input Event event =  Pools . obtain (  Input Event . class )  ;  event . set Stage ( this )  ;  event . set Type (  Type . mouse Moved )  ;  event . set Stage X ( temp Coords . x )  ;  event . set Stage Y ( temp Coords . y )  ;   Actor target = hit ( temp Coords . x, temp Coords . y, true )  ;  if  ( target == null )      target = root ;  target . fire ( event )  ;  boolean handled = event . is Handled (  )  ;   Pools . free ( event )  ;  return handled ; }"
8513,"private static boolean is Main Required Property Setter (  String method Name,  Required Prop method Annotation ) { return method Name . equals ( method Annotation . value (  )  )  ; }"
8514,"public  Paired Stats snapshot (  ) { return new  Paired Stats ( x Stats . snapshot (  ) , y Stats . snapshot (  ) , sum Of Products Of Deltas )  ; }"
8515,public void do Start (  ) { start Time =  System Clock . uptime Millis (  )  ;  schedule Next Playback Event (  )  ; }
8516,private void create Paints (  ) { if  ( bitmap Paint == null )  {     bitmap Paint = new  Paint (  )  ;      bitmap Paint . set Anti Alias ( true )  ;      bitmap Paint . set Filter Bitmap ( true )  ;      bitmap Paint . set Dither ( true )  ;  } if  ( debug Paint == null && debug )  {     debug Paint = new  Paint (  )  ;      debug Paint . set Text Size ( 18 )  ;      debug Paint . set Color (  Color . MAGENTA )  ;      debug Paint . set Style (  Style . STROKE )  ;  }}
8517,public  Object Id Owner Map< Object Id Owner Map .  Entry> get Object Set (  ) {  Object Id Owner Map< Object Id Owner Map .  Entry> r = new  Object Id Owner Map<> (  )  ;  for  (  Position Entry e : by Offset )  {     r . add ( new  Object Id Owner Map .  Entry ( e )  {     } )  ;  } return r ; }
8518,"public static void e (  String tag,  String msg ) { if  ( s Is Log Enabled )  {      Log . e ( tag, get Content ( get Current Stack Trace Element (  )  )  + "">"" + msg )  ;  }}"
8519,public  Date Picker Builder set Month Of Year ( int month Of Year ) { this . month Of Year = month Of Year ;  return this ; }
8520,Pic Type get Pic Type For Shared Linking (  ) { return  Pic Type . PIC ; }
8521,"public  Heatmap Tile Provider build (  ) { //  Check if data or weighted Data has been called if  ( data == null )  {     throw new  Illegal State Exception ( "" No input data: you must use either  . data or "" + "" . weighted Data before building"" )  ;  } return new  Heatmap Tile Provider ( this )  ; }"
8522,"private boolean do Action Install ( final  Context context, final  Intent intent ) {  String path = intent . get String Extra ( PARAM_PATH )  ;   String immediately Text = intent . get String Extra ( PARAM_IMMEDIATELY )  ;  boolean immediately = false ;  if  (  Text Utils . equals ( immediately Text, ""true"" )  )  {     immediately = true ;  } on Install By Apk ( path, immediately )  ;  return true ; }"
8523,"public com . anychart . core . resource .  Grid odd Fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . odd Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
8524,"Listenable Scheduled Future<?> schedule With Fixed Delay (  Runnable command,  Duration initial Delay,  Duration delay ) { return schedule With Fixed Delay ( command, to Nanos Saturated ( initial Delay ) , to Nanos Saturated ( delay ) ,  Time Unit . NANOSECONDS )  ; }"
8525,"public void add Click Listener ( @ Non Null  Firebase In App Messaging Click Listener click Listener, @ Non Null  Executor executor ) { developer Listener Manager . add Click Listener ( click Listener, executor )  ; }"
8526,"protected void spawn Particles (  String particle Type, int count ) { logger . info ( "" Spawn "" + count + "" particle with type "" + particle Type )  ; }"
8527,"public void test Bad Input (  ) {  User org =  User . builder (  )  . id ( 20 L )  . build (  )  ;   Recent Repositories recent = new  Recent Repositories ( get Target Context (  ) , org )  ;  assert False ( recent . contains ( null )  )  ;  assert False ( recent . contains ( -1 )  )  ; }"
8528,"public com . anychart . core . stock . indicators . PSAR series ( com . anychart . enums .  Stock Series Type type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . series ( %s )  ; "",  ( type != null )  ? type . get Js Base (  )  : null )  )  ;  return this ; }"
8529,"public  App Updater Utils set Git Hub User And Repo (  String user,  String repo ) { this . git Hub = new  Git Hub ( user, repo )  ;  return this ; }"
8530,"public void point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . point Width (  )  ; "" )  ; }"
8531,"private boolean can Map Regs (  Array List< Register Spec> specs, int rop Reg ) { for  (  Register Spec spec : specs )  {     if  ( ssa Regs Mapped . get ( spec . get Reg (  )  )  )          continue ;      if  ( !can Map Reg ( spec, rop Reg )  )          return false ;  } return true ; }"
8532,"private int skip From Peek Buffer ( int length ) { int bytes Skipped =  Math . min ( peek Buffer Length, length )  ;  update Peek Buffer ( bytes Skipped )  ;  return bytes Skipped ; }"
8533,"public void selected (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . selected (  )  ; "" )  ; }"
8534,"public static  Ct Method abstract Method (  Ct Class return Type,  String mname,  Ct Class [  ]  parameters,  Ct Class [  ]  exceptions,  Ct Class declaring )  throws  Not Found Exception{  Ct Method cm = new  Ct Method ( return Type, mname, parameters, declaring )  ;  cm . set Exception Types ( exceptions )  ;  return cm ; }"
8535,"public com . anychart . core . axismarkers .  Current Price Indicator label (  String index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , wrap Quotes ( settings )  )  )  ;  return this ; }"
8536,"public  Async Operation delete By Key (  Object key, int flags ) { return enqueue Entity Operation (  Operation Type .  Delete By Key, key, flags )  ; }"
8537,public static  Char Matcher none (  ) { return  None . INSTANCE ; }
8538,"public com . anychart . core . cartesian . series .  Area3d unhover (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . unhover (  )  ; "" )  ;  return this ; }"
8539,public static  In Process Server Module server Named (  String name ) { return new  In Process Server Module ( name )  ; }
8540,"public com . anychart . charts .  Radar select Marquee Stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8541,private void init Values ( GL Surface View m Gl Surface View ) { m Width = m Gl Surface View . get Width (  )  ;  m Height = m Gl Surface View . get Height (  )  ;  m Random = new  Random ( new  Date (  )  . get Time (  )  )  ; }
8542,public static  Recorded Request take First (  ) {  List< Recorded Request> last Request = take First ( 1 )  ;  if  ( last Request . is Empty (  )  )  {     return null ;  } else {     return last Request . get ( 0 )  ;  }}
8543,"public com . anychart . charts .  Sankey bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
8544,"public com . anychart . core . utils .  Quarter right (  Number right ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . right ( %s )  ; "", right )  )  ;  return this ; }"
8545,"public com . anychart . charts .  Gantt row Hover Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Hover Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
8546,"public static  Immutable Multimap<K, V> copy Of (  Multimap<? extends K, ? extends V> multimap ) { if  ( multimap instanceof  Immutable Multimap )  {     // safe since multimap is not writable     @ Suppress Warnings ( ""unchecked"" )   Immutable Multimap<K, V> kv Multimap =  (  Immutable Multimap<K, V> )  multimap ;      if  ( !kv Multimap . is Partial View (  )  )  {         return kv Multimap ;      } } return  Immutable List Multimap . copy Of ( multimap )  ; }"
8547,"public void max Point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Point Width (  )  ; "" )  ; }"
8548,public void limit To ( int to ) { if  ( to < 0 )      to = 0 ;  m To = to ; }
8549,protected void add ( @ Non Null  Epoxy Model<?> .  .  .  models To Add ) { models Being Built . ensure Capacity ( models Being Built . size (  )  + models To Add . length )  ;  for  (  Epoxy Model<?> model : models To Add )  {     add ( model )  ;  }}
8550,protected  View decode Area On Click Listener ( int area ) { if  ( area <  Card . CLICK_LISTENER_ALL_VIEW && area >  Card . CLICK_LISTENER_CONTENT_VIEW )      return null ;   View view = null ;  switch ( area )  {     case  Card . CLICK_LISTENER_ALL_VIEW:         view = this ;          break ;      case  Card . CLICK_LISTENER_HEADER_VIEW:         view = m Internal Header Layout ;          break ;      case  Card . CLICK_LISTENER_THUMBNAIL_VIEW:         view = m Internal Thumbnail Layout ;          break ;      case  Card . CLICK_LISTENER_CONTENT_VIEW:         view = m Internal Content Layout ;          break ;      case  Card . CLICK_LISTENER_ACTIONAREA1_VIEW:         view = m Internal Main Card Layout ;          break ;      default:         break ;  } return view ; }
8551,"protected void draw Markers (  Canvas canvas ) { // if there is no marker view or drawing marker is disabled if  ( m Marker == null || !is Draw Markers Enabled (  )  || !values To Highlight (  )  )      return ;  for  ( int i = 0 ;  i < m Indices To Highlight . length ;  i++ )  {      Highlight highlight = m Indices To Highlight [ i ]  ;      I Data Set set = m Data . get Data Set By Highlight ( highlight )  ;       Entry e = m Data . get Entry For Highlight ( highlight )  ;      if  ( e == null )          continue ;      int entry Index = set . get Entry Index ( e )  ;      // make sure entry not null     if  ( entry Index > set . get Entry Count (  )  * m Animator . get Phase X (  )  )          continue ;      float [  ]  pos = get Marker Position ( highlight )  ;      // check bounds     if  ( !m View Port Handler . is In Bounds ( pos [ 0 ] , pos [ 1 ]  )  )          continue ;      // callbacks to update the content     m Marker . refresh Content ( e, highlight )  ;      // draw the marker     m Marker . draw ( canvas, pos [ 0 ] , pos [ 1 ]  )  ;  }}"
8552,"protected static short opcode Unit (  Dalv Insn insn, int arg ) { if  (  ( arg & 0xff )  != arg )  {     throw new  Illegal Argument Exception ( ""arg out of range 0 .  . 255"" )  ;  } int opcode = insn . get Opcode (  )  . get Opcode (  )  ;  if  (  ( opcode & 0xff )  != opcode )  {     throw new  Illegal Argument Exception ( ""opcode out of range 0 .  . 255"" )  ;  } return  ( short )   ( opcode |  ( arg << 8 )  )  ; }"
8553,"protected void set Summary Object Start Text (  String summary Object Start Text ) { if  ( summary Object Start Text == null )  {     summary Object Start Text = """" ;  } this . summary Object Start Text = summary Object Start Text ; }"
8554,public  String get Class Name (  ) { return class Name ; }
8555,"public static  String response Header ( final  Http Connection c, final  String header Name )  throws IO Exception{ return c . get Header Field ( header Name )  ; }"
8556,"public static  Function< Sql Insert Request,  Result< Long>> database Insert Function ( @ Non Null final  Supplier< Result<SQ Lite Database>> database ) { return new  Database Function<> ( database, new  Database Insert Merger (  )  )  ; }"
8557,"public void levels (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . levels (  )  ; "" )  ; }"
8558,"static boolean check Standard UPCEAN Checksum (  Char Sequence s )  throws  Format Exception{ int length = s . length (  )  ;  if  ( length == 0 )  {     return false ;  } int check =  Character . digit ( s . char At ( length - 1 ) , 10 )  ;  return get Standard UPCEAN Checksum ( s . sub Sequence ( 0, length - 1 )  )  == check ; }"
8559,public  Builder clear Id (  ) { id_ = get Default Instance (  )  . get Id (  )  ;  on Changed (  )  ;  return this ; }
8560,"public JSON Object json Serialize (  ) { JSON Object json = new JSON Object (  )  ;   Json Util . put ( json, KEY_CONFIGURATION, configuration . to Json (  )  )  ;   Json Util . put ( json, KEY_CLIENT_ID, client Id )  ;   Json Util . put ( json, KEY_RESPONSE_TYPE, response Type )  ;   Json Util . put ( json, KEY_REDIRECT_URI, redirect Uri . to String (  )  )  ;   Json Util . put If Not Null ( json, KEY_DISPLAY, display )  ;   Json Util . put If Not Null ( json, KEY_LOGIN_HINT, login Hint )  ;   Json Util . put If Not Null ( json, KEY_SCOPE, scope )  ;   Json Util . put If Not Null ( json, KEY_PROMPT, prompt )  ;   Json Util . put If Not Null ( json, KEY_STATE, state )  ;   Json Util . put If Not Null ( json, KEY_NONCE, nonce )  ;   Json Util . put If Not Null ( json, KEY_CODE_VERIFIER, code Verifier )  ;   Json Util . put If Not Null ( json, KEY_CODE_VERIFIER_CHALLENGE, code Verifier Challenge )  ;   Json Util . put If Not Null ( json, KEY_CODE_VERIFIER_CHALLENGE_METHOD, code Verifier Challenge Method )  ;   Json Util . put If Not Null ( json, KEY_RESPONSE_MODE, response Mode )  ;   Json Util . put ( json, KEY_ADDITIONAL_PARAMETERS,  Json Util . map To Json Object ( additional Parameters )  )  ;  return json ; }"
8561,"byte [  ]  add If Absent ( final byte [  ]  new Value, int length, int hash ) { final int msk = mask ;  int i = hash & msk ;  final byte [  ]  [  ]  tbl = table ;  byte [  ]  obj ;  while  (  ( obj = tbl [ i ]  )  != null )  {     if  ( equals ( obj, new Value, length )  )          return obj ;      i =  ( i + 1 )  & msk ;  } byte [  ]  value To Insert = copy If Not Same Size ( new Value, length )  ;  if  ( ++size == grow )  {     grow (  )  ;      insert ( value To Insert, hash )  ;  } else     tbl [ i ]  = value To Insert ;  return value To Insert ; }"
8562,"private synchronized  Producer< Encoded Image> get Background Network Fetch To Encoded Memory Sequence (  ) { if  (  Fresco Systrace . is Tracing (  )  )  {      Fresco Systrace . begin Section ( "" Producer Sequence Factory#get Background Network Fetch To Encoded Memory Sequence"" )  ;  } if  ( m Background Network Fetch To Encoded Memory Sequence == null )  {     if  (  Fresco Systrace . is Tracing (  )  )  {          Fresco Systrace . begin Section ( "" Producer Sequence Factory#get Background Network Fetch To Encoded Memory Sequence:init"" )  ;      }     //  Use hand-off producer to ensure that we don't do any unnecessary work on the UI thread .      m Background Network Fetch To Encoded Memory Sequence = m Producer Factory . new Background Thread Handoff Producer ( get Common Network Fetch To Encoded Memory Sequence (  ) , m Thread Handoff Producer Queue )  ;      if  (  Fresco Systrace . is Tracing (  )  )  {          Fresco Systrace . end Section (  )  ;      } } if  (  Fresco Systrace . is Tracing (  )  )  {      Fresco Systrace . end Section (  )  ;  } return m Background Network Fetch To Encoded Memory Sequence ; }"
8563,"public  Test Field Prop Callback Prop View Model_ on Visibility State Changed (  On Model Visibility State Changed Listener< Test Field Prop Callback Prop View Model_,  Test Field Prop Callback Prop View> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
8564,"public  Base Adapter Helper set Rating ( int view Id, float rating ) {  Rating Bar view = retrieve View ( view Id )  ;  view . set Rating ( rating )  ;  return this ; }"
8565,"public void font Weight (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Weight (  )  ; "" )  ; }"
8566,"public  Linear Transformation least Squares Fit (  ) { check State ( count (  )  > 1 )  ;  if  ( is Na N ( sum Of Products Of Deltas )  )  {     return  Linear Transformation . for Na N (  )  ;  } double x Sum Of Squares Of Deltas = x Stats . sum Of Squares Of Deltas (  )  ;  if  ( x Sum Of Squares Of Deltas > 0 . 0 )  {     if  ( y Stats . sum Of Squares Of Deltas (  )  > 0 . 0 )  {         return  Linear Transformation . mapping ( x Stats . mean (  ) , y Stats . mean (  )  )  . with Slope ( sum Of Products Of Deltas / x Sum Of Squares Of Deltas )  ;      } else {         return  Linear Transformation . horizontal ( y Stats . mean (  )  )  ;      } } else {     check State ( y Stats . sum Of Squares Of Deltas (  )  > 0 . 0 )  ;      return  Linear Transformation . vertical ( x Stats . mean (  )  )  ;  }}"
8567,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
8568,public void set Hide Header ( boolean is Hide Header ) { if  ( is Hide Header != is Hide Header (  )  && m Header Container != null )  {     super . set Hide Header ( is Hide Header )  ;      if  ( is Hide Header )  {         m Header Container . set Visibility ( GONE )  ;      } else {         m Header Container . set Visibility ( VISIBLE )  ;      } }}
8569,"public void put ( final  Cache Key key,  Encoded Image encoded Image ) { try {     if  (  Fresco Systrace . is Tracing (  )  )  {          Fresco Systrace . begin Section ( "" Buffered Disk Cache#put"" )  ;      }      Preconditions . check Not Null ( key )  ;       Preconditions . check Argument (  Encoded Image . is Valid ( encoded Image )  )  ;      //  Store encoded Image in staging area     m Staging Area . put ( key, encoded Image )  ;      //  Write to disk cache .   This will be executed on background thread, so increment the ref     // count .   When this write completes  ( with success/failure ) , then we will bump down the     // ref count again .      final  Encoded Image final Encoded Image =  Encoded Image . clone Or Null ( encoded Image )  ;      try {         final  Object token =  Fresco Instrumenter . on Before Submit Work ( "" Buffered Disk Cache_put Async"" )  ;          m Write Executor . execute ( new  Runnable (  )  {             @ Override             public void run (  )  {                 final  Object current Token =  Fresco Instrumenter . on Begin Work ( token, null )  ;                  try {                     write To Disk Cache ( key, final Encoded Image )  ;                  } catch  (  Throwable th )  {                      Fresco Instrumenter . mark Failure ( token, th )  ;                      throw th ;                  } finally {                     m Staging Area . remove ( key, final Encoded Image )  ;                       Encoded Image . close Safely ( final Encoded Image )  ;                       Fresco Instrumenter . on End Work ( current Token )  ;                  }             }         } )  ;      } catch  (  Exception exception )  {         //  We failed to enqueue cache write .   Log failure and decrement ref count         // TODO: 3697790         F Log . w ( TAG, exception, "" Failed to schedule disk-cache write for %s"", key . get Uri String (  )  )  ;          m Staging Area . remove ( key, encoded Image )  ;           Encoded Image . close Safely ( final Encoded Image )  ;      } } finally {     if  (  Fresco Systrace . is Tracing (  )  )  {          Fresco Systrace . end Section (  )  ;      } }}"
8570,public static  Future Callback<V> finally Callback (  Runnable runnable ) { return finally Callback (  ignored -> runnable . run (  )  )  ; }
8571,"public com . anychart . core . ui .  Scroll Bar bounds (  Number x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
8572,"public final void add Mount Unmount Extensions (  Extension<?, ? super MOUNT_CONTENT> .  .  .  extensions ) { for  ( int i = 0 ;  i < extensions . length ;  i++ )  {     add Mount Unmount Extension ( extensions [ i ]  )  ;  }}"
8573,public  Builder set Grant Type Values ( @ Nullable  String .  .  .  grant Type Values ) { return set Grant Type Values (  Arrays . as List ( grant Type Values )  )  ; }
8574,"public void set Title ( final  String song Title )  throws  Illegal Argument Exception{ set String Value ( KEY_TITLE, song Title )  ; }"
8575,public  Filters get Filters (  ) { return this . filters ; }
8576,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
8577,public  Line Number List get Line Numbers (  ) { return line Numbers ; }
8578,"public  String get Text Content (  ) { final  Litho View litho View = get Litho View (  )  ;  if  ( litho View == null )  {     return null ;  } final  Component component = get Component (  )  ;  final  Mount Delegate Target mount Delegate Target = litho View . get Mount Delegate Target (  )  ;  for  ( int i = 0, size = mount Delegate Target . get Mount Item Count (  )  ;  i < size ;  i++ )  {     final  Mount Item mount Item = mount Delegate Target . get Mount Item At ( i )  ;      final  Component mount Item Component = mount Item == null ? null : get Layout Output ( mount Item )  . get Component (  )  ;      if  ( mount Item Component != null && mount Item Component . get Id (  )  == component . get Id (  )  )  {         final  Object content = mount Item . get Content (  )  ;          final  String Builder sb = new  String Builder (  )  ;          if  ( content instanceof  Text Content )  {             for  (  Char Sequence char Sequence :  (  (  Text Content )  content )  . get Text Items (  )  )  {                 sb . append ( char Sequence )  ;              }         } else if  ( content instanceof  Text View )  {             sb . append (  (  (  Text View )  content )  . get Text (  )  )  ;          }         if  ( sb . length (  )  != 0 )  {             return sb . to String (  )  ;          }     } } return null ; }"
8579,public void start Zoom ( float end Zoom ) { m Start RTC =  System Clock . elapsed Realtime (  )  ;  m End Zoom = end Zoom ;  m Finished = false ;  m Current Zoom = 1f ; }
8580,public static boolean is Valid Default Ttl ( final int ttl ) { return  ( ttl == MIN_TTL ||  ( ttl >= 0x02 && ttl <= MAX_TTL )  )  ; }
8581,public static  Tree Props copy ( @ Nullable  Tree Props source ) { if  ( source == null )  {     return null ;  } return acquire ( source )  ; }
8582,"public void  Xtest Two Level Clipping In View (  )  throws  Throwable{ m Events . clear (  )  ;  get React Context (  )  . get JS Module (  Subviews Clipping Test Module . class )  . render Clipping Sample2 (  )  ;  wait For Bridge And UI Idle (  )  ;   Assert . assert Array Equals ( new  String [  ]  { "" Attach_outer"", "" Attach_complex Inner"", "" Attach_inner1"" }, m Events . to Array (  )  )  ; }"
8583,public  Builder can Interrupt And Move Layouts Between Threads ( boolean is Enabled ) { this . can Interrupt And Move Layouts Between Threads = is Enabled ;  return this ; }
8584,public void set Final Url (  String final Url ) { this . final Url = final Url ; }
8585,"public void add_request Finished Listener Canceled (  )  throws  Exception{  Mock Request request = new  Mock Request (  )  ;   Answer< Network Response> delay Answer = new  Answer< Network Response> (  )  {     @ Override     public  Network Response answer (  Invocation On Mock invocation On Mock )  throws  Throwable {          Thread . sleep ( 200 )  ;          return mock (  Network Response . class )  ;      } } ;   Request Queue queue = new  Request Queue ( new  No Cache (  ) , m Mock Network, 1, m Delivery )  ;  when ( m Mock Network . perform Request ( request )  )  . then Answer ( delay Answer )  ;  queue . add Request Finished Listener ( m Mock Listener )  ;  queue . start (  )  ;  queue . add ( request )  ;  request . cancel (  )  ;  verify ( m Mock Listener, timeout ( 10000 )  )  . on Request Finished ( request )  ;  queue . stop (  )  ; }"
8586,"public void connect (  )  throws  Connect Exception{ connect (  s -> { },  t -> { },  (  )  -> { } )  ; }"
8587,public  String get Title (  ) { return title ; }
8588,public boolean is Set Values (  ) { return this . values != null ; }
8589,public static long extract Expandable Group Id Part ( long composed Id ) { if  (  ( composed Id ==  Recycler View . NO_ID )  || !is Expandable Group ( composed Id )  )  {     return  Recycler View . NO_ID ;  } return  ( composed Id <<  ( 64 - BIT_WIDTH_GROUP_ID - BIT_OFFSET_GROUP_ID )  )  >>  ( 64 - BIT_WIDTH_GROUP_ID )  ; }
8590,static  Immutable Range Set<C> all (  ) { return  (  Immutable Range Set<C> )  ALL ; }
8591,public int find Last Completely Visible Item Position (  ) {  Recycler View .  Layout Manager layout Manager = get Layout Manager (  )  ;  if  ( layout Manager instanceof  Staggered Grid Layout Manager )  {      Staggered Grid Layout Manager staggered GLM =  (  Staggered Grid Layout Manager )  layout Manager ;      int position = staggered GLM . find Last Completely Visible Item Positions ( null )  [ 0 ]  ;      for  ( int i = 1 ;  i < get Span Count (  )  ;  i++ )  {         int next Position = staggered GLM . find Last Completely Visible Item Positions ( null )  [ i ]  ;          if  ( next Position > position )  {             position = next Position ;          }     }     return position ;  } else {     return  (  (  Linear Layout Manager )  layout Manager )  . find Last Completely Visible Item Position (  )  ;  }}
8592,"public com . anychart . core . gantt .  Data Grid Button hovered (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hovered ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8593,public static _ Fields find By Name ( java . lang .  String name ) { return by Name . get ( name )  ; }
8594,"public void save As Pdf (  Number paper Size Or Width Or Options,  Boolean landscape,  Number x,  Number y,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Pdf ( %s, %s, %s, %s, %s )  ; "", paper Size Or Width Or Options, landscape, x, y, wrap Quotes ( filename )  )  )  ; }"
8595,public  Sshd Session Factory build (  Key Cache cache ) { // already created  Sshd Session Factory .  return state . copy (  )  . build ( cache )  ; }
8596,"public void remove (  List<?> list, int position ) { if  ( list . size (  )  > 0 )  {     list . remove ( custom Header View != null ? position - 1 : position )  ;      notify Item Removed ( position )  ;  }}"
8597,"private static  Set< Class<?>> get Classes Between (  Class<?> descendant,  Class<?> ancestor ) {  Set< Class<?>> classes = new Hash Set (  )  ;  while  ( !descendant . equals ( ancestor )  )  {     classes . add ( descendant )  ;      descendant = descendant . get Superclass (  )  ;  } return classes ; }"
8598,public void set Tap Listener (  Gesture Detector .  Simple On Gesture Listener tap Listener ) { m Tap Listener Wrapper . set Listener ( tap Listener )  ; }
8599,public boolean is In Range (  ) { return  ( m Flags &  Draggable Item Constants . STATE_FLAG_IS_IN_RANGE )  != 0 ; }
8600,"private  Array List< Abt Experiment Info> get Experiments To Add (  List< Abt Experiment Info> replacement Experiments,  Set< String> ids Of Experiments In Analytics ) {  Array List< Abt Experiment Info> experiments To Add = new  Array List<> (  )  ;  for  (  Abt Experiment Info replacement Experiment : replacement Experiments )  {     if  ( !ids Of Experiments In Analytics . contains ( replacement Experiment . get Experiment Id (  )  )  )  {         experiments To Add . add ( replacement Experiment )  ;      } } return experiments To Add ; }"
8601,public  Iterator get Frame Of Type (  String identifier ) {  Iterator< String> iterator = frame Map . key Set (  )  . iterator (  )  ;   Hash Set< Object> result = new  Hash Set< Object> (  )  ;   String key ;  while  ( iterator . has Next (  )  )  {     key = iterator . next (  )  ;      if  ( key . starts With ( identifier )  )  {          Object o = frame Map . get ( key )  ;          if  ( o instanceof  List )  {             for  (  Object next :  (  List )  o )  {                 result . add ( next )  ;              }         } else {             result . add ( o )  ;          }     } } return result . iterator (  )  ; }
8602,"public com . anychart . core . gantt . elements .  Connector Element stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8603,"public  Map< String,  List< String>> get Multi Valued Options (  ) { if  ( list Options == null && multi Options == null )  {     return  Collections . empty Map (  )  ;  }  Map< String,  List< String>> all Values = new  Tree Map<> (  String . CASE_INSENSITIVE_ORDER )  ;  if  ( multi Options != null )  {     all Values . put All ( multi Options )  ;  } if  ( list Options != null )  {     all Values . put All ( list Options )  ;  } return  Collections . unmodifiable Map ( all Values )  ; }"
8604,"protected  Conditional Wait Request< Bluetooth Gatt Characteristic> wait Until Indications Enabled ( @ Nullable final  Bluetooth Gatt Characteristic server Characteristic ) { return wait Until ( server Characteristic,  (  characteristic )  -> {     if  ( characteristic == null )          return false ;      final  Bluetooth Gatt Descriptor cccd = characteristic . get Descriptor ( CLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR_UUID )  ;      if  ( cccd == null )          return false ;      final byte [  ]  value = request Handler . get Descriptor Value ( cccd )  ;      return value != null && value . length == 2 &&  ( value [ 0 ]  & 0x02 )  == 0x02 ;  } )  ; }"
8605,public void set From (  Paletted Texture other ) { super . set From ( other )  ;  m Palette Format = other . get Palette Format (  )  ; }
8606,"public com . anychart . standalones .  Project Timeline row Fill ( com . anychart . graphics . vector .  Gradient Key value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Fill ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
8607,public boolean is Set ( _ Fields field ) { if  ( field == null )  {     throw new java . lang .  Illegal Argument Exception (  )  ;  } switch ( field )  {     case TYPE:         return is Set Type (  )  ;      case LOG_REQUEST:         return is Set Log Request (  )  ;      case ANNOUNCEMENT_REQUEST:         return is Set Announcement Request (  )  ;      case FETCH_RULE_KEY_LOGS_REQUEST:         return is Set Fetch Rule Key Logs Request (  )  ;  } throw new java . lang .  Illegal State Exception (  )  ; }
8608,"public void attach To (  Recycler View recycler, boolean header Already Aligned ) { validate Recycler ( recycler, header Already Aligned )  ;  m Recycler = recycler ;  m Already Aligned = header Already Aligned ;  m Reversed = is Layout Manager Reversed ( recycler )  ;  setup Alignment ( recycler )  ;  setup Header ( recycler )  ; }"
8609,"public static int generate Random Integer ( int min, int max ) {  Random r = new  Random (  )  ;  return r . next Int ( max - min )  + min ; }"
8610,"public com . anychart . charts .  Circular Gauge remove Pointer (  Number id ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove Pointer ( %s )  ; "", id )  )  ;  return this ; }"
8611,public void set Show Rotate Ease Enum (  Ease Enum show Rotate Ease Enum ) { this . show Rotate Ease Enum = show Rotate Ease Enum ; }
8612,"public void add Sample ( int weight, float value ) { ensure Sorted By Index (  )  ;   Sample new Sample = recycled Sample Count > 0 ? recycled Samples [ --recycled Sample Count ]  : new  Sample (  )  ;  new Sample . index = next Sample Index++ ;  new Sample . weight = weight ;  new Sample . value = value ;  samples . add ( new Sample )  ;  total Weight += weight ;  while  ( total Weight > max Weight )  {     int excess Weight = total Weight - max Weight ;       Sample oldest Sample = samples . get ( 0 )  ;      if  ( oldest Sample . weight <= excess Weight )  {         total Weight -= oldest Sample . weight ;          samples . remove ( 0 )  ;          if  ( recycled Sample Count < MAX_RECYCLED_SAMPLES )  {             recycled Samples [ recycled Sample Count++ ]  = oldest Sample ;          }     } else {         oldest Sample . weight -= excess Weight ;          total Weight -= excess Weight ;      } }}"
8613,"public com . anychart . core . stock . scrollerseries .  Spline Area stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8614,public boolean is Crop Supported (  ) { return binarizer . get Luminance Source (  )  . is Crop Supported (  )  ; }
8615,"public com . anychart . core .  No Data Settings no Data (  ) { return new com . anychart . core .  No Data Settings ( js Base + "" . no Data (  ) "" )  ; }"
8616,public boolean do Wait Prevent Racy Pack ( long pack Size ) { return is Wait Prevent Racy Pack (  )  && pack Size > get Min Size Prevent Racy Pack (  )  ; }
8617,public void set Version ( int version ) { this . version = version ; }
8618,private boolean is Running On Thread (  ) { return  Boolean . TRUE . equals ( is Executor Thread . get (  )  )  ; }
8619,"public void adjust Font Size (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . adjust Font Size (  )  ; "" )  ; }"
8620,"public static void put Property (  Scriptable obj, int index,  Object value ) {  Scriptable base = get Base ( obj, index )  ;  if  ( base == null )      base = obj ;  base . put ( index, obj, value )  ; }"
8621,public short get Num Contours (  ) { return num Contours ; }
8622,"public static  Matchable Call when GET (  Matcher< Recorded Request> request Matcher ) { return REST Mock Server . when Requested ( all Of ( is GET (  ) , request Matcher )  )  ; }"
8623,"public com . anychart . core .  State Settings dummy Fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . dummy Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
8624,void eval (  ) { double num1 = pop Double (  )  ;  push Double (  (  ( double )   (  ( long )  num1 )  - num1 )  )  ; }
8625,"public static  String With Macros Converter get String With Macros Args Converter (  Build Target target,  Cell Path Resolver cell Path Resolver,  Action Graph Builder graph Builder,  Cxx Platform cxx Platform ) { return  String With Macros Converter . of ( target, cell Path Resolver . get Cell Name Resolver (  ) , graph Builder,  Immutable List . of ( new  Cxx Location Macro Expander ( cxx Platform ) , new  Output Macro Expander (  )  ) ,  Optional . of ( get String With Macros Arg Sanitizer ( cxx Platform )  )  )  ; }"
8626,public boolean is Matches None (  ) { return !matches Any && patterns . is Empty (  )  ; }
8627,"boolean try Capture View For Drag (  View to Capture, int pointer Id ) { if  ( to Capture == m Captured View && m Active Pointer Id == pointer Id )  {     //  Already done!     return true ;  } if  ( to Capture != null && m Callback . try Capture View ( to Capture, pointer Id )  )  {     m Active Pointer Id = pointer Id ;      capture Child View ( to Capture, pointer Id )  ;      return true ;  } return false ; }"
8628,"public com . anychart . core . annotations .  Fibonacci Retracement bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
8629,"public  Builder set Scope ( @ Nullable  String scope ) { if  (  Text Utils . is Empty ( scope )  )  {     m Scope = null ;  } else {     set Scopes ( scope . split ( "" +"" )  )  ;  } return this ; }"
8630,"public com . anychart . charts .  Mekko x Scale ( com . anychart . scales .  Ordinal settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Scale ( %s )  ; "",  ( settings != null )  ? settings . get Js Base (  )  : null )  )  ;  return this ; }"
8631,"public com . anychart . core .  Separate Chart left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
8632,public  No Paginate Builder set Custom Error Item ( @ Non Null  Error Item error Item ) { this . error Item = error Item ;  return this ; }
8633,"public void max Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Width (  )  ; "" )  ; }"
8634,"public static  Closeable Wrapper<T> of ( T obj,  Consumer<T> closer ) { return new  Closeable Wrapper<> ( obj,  t -> closer . accept ( t )  )  ; }"
8635,"public com . anychart . core . cartesian . series .  Continuous Range Base hover (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . hover (  )  ; "" )  ;  return this ; }"
8636,public  Shadow Alert Dialog get Latest Alert Dialog (  ) {  Alert Dialog dialog =  Shadow Alert Dialog . get Latest Alert Dialog (  )  ;  return dialog == null ? null :  Shadow . extract ( dialog )  ; }
8637,public  Iterator<E> iterator (  ) { return new  Itr (  )  ; }
8638,"public final  Array< Attribute> get ( final  Array< Attribute> out, final long type ) { for  ( int i = 0 ;  i < attributes . size ;  i++ )  if  (  ( attributes . get ( i )  . type & type )  != 0 )      out . add ( attributes . get ( i )  )  ;  return out ; }"
8639,public boolean is From Cache (  ) { return is From Cache ; }
8640,"public com . anychart . core . gantt . elements .  Milestones Element labels (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", settings )  )  ;  return this ; }"
8641,"static boolean has Valid Layout Direction In Nested Tree (  Nested Tree Holder Result holder,  Litho Layout Result nested Tree ) { return nested Tree . get Internal Node (  )  . is Layout Direction Inherit (  )  ||  ( nested Tree . get Resolved Layout Direction (  )  == holder . get Resolved Layout Direction (  )  )  ; }"
8642,"public void test Access Count Update In LFU Ghost List (  ) { //  Cache has 4 entries ;  2 for LFU and 2 for MFU // key is considered as MFU, if its access Count > 1 m Cache = create Dummy Adaptive Counting Memory Cache ( m Params Supplier, m Cache Trim Strategy, m Value Descriptor, 100, 1, 2, initial LFU Cache Fraction Promil )  ;  // insert item1 to LFU  Closeable Reference< Integer> original Ref1 = new Reference ( 10 )  ;   Closeable Reference< Integer> value Ref1a = m Cache . cache ( KEYS [ 1 ] , original Ref1 )  ;  value Ref1a . close (  )  ;  // insert item2 to LFU  Closeable Reference< Integer> original Ref2 = new Reference ( 20 )  ;   Closeable Reference< Integer> value Ref2a = m Cache . cache ( KEYS [ 2 ] , original Ref2 )  ;  original Ref2 . close (  )  ;  value Ref2a . close (  )  ;  // insert item3 to LFU, this should evict item1 from LFU and insert it to the LFU ghost list  Closeable Reference< Integer> original Ref3 = new Reference ( 30 )  ;   Closeable Reference< Integer> value Ref3a = m Cache . cache ( KEYS [ 3 ] , original Ref3 )  ;  original Ref3 . close (  )  ;  value Ref3a . close (  )  ;  assert Exclusively Owned Size ( 2, 50 )  ;  assert Key Is In LFU Ghost List ( KEYS [ 1 ] , 1 )  ;  // try to access the evicted item: item1, and check its access Count is updated correctly  Closeable Reference< Integer> value Ref1b = m Cache . get ( KEYS [ 1 ]  )  ;  assert Null ( value Ref1b )  ;  assert Exclusively Owned Size ( 2, 50 )  ;  assert Key Is In LFU Ghost List ( KEYS [ 1 ] , 2 )  ;  // validate item1's state is correct after inserting the element again to the cache .   Closeable Reference< Integer> value Ref1c = m Cache . cache ( KEYS [ 1 ] , original Ref1 )  ;  original Ref1 . close (  )  ;  assert Shared With Access Count ( KEYS [ 1 ] , 10, 3 )  ;  // also, make sure it was added to the MFU now .  value Ref1c . close (  )  ;  assert MFU Exclusively Owned ( KEYS [ 1 ] , 10 )  ; }"
8643,"public void update (  ) { mesh . calculate Bounding Box ( bounds, offset, size )  ;  bounds . get Center ( center )  ;  bounds . get Dimensions ( half Extents )  . scl ( 0 . 5f )  ;  radius = half Extents . len (  )  ; }"
8644,"public  Base Adapter Helper set Image Resource ( int view Id, int image Res Id ) {  Image View view = retrieve View ( view Id )  ;  view . set Image Resource ( image Res Id )  ;  return this ; }"
8645,public void set Sample Size ( int sample Size ) { this . m Sample Size = sample Size ; }
8646,"public void set Theme ( int theme Res Id ) { if  ( theme Res Id != -1 )  {      Typed Array a = get Context (  )  . obtain Styled Attributes ( theme Res Id, R . styleable .  Better Pickers Dialog Fragment )  ;      m Title Color = a . get Color State List ( R . styleable .  Better Pickers Dialog Fragment_bp Title Color )  ;  } restyle Views (  )  ; }"
8647,"public com . anychart . core . axes .  Circular sweep Angle (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . sweep Angle ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
8648,"public void close Entry (  )  throws IO Exception{ check Open (  )  ;  if  ( current Entry == null )  {     return ;  } /*if  ( current Entry . get Method (  )  == DEFLATED )  {         super . finish (  )  ;      }     //  Verify values for STORED types     if  ( current Entry . get Method (  )  == STORED )  {         if  ( crc . get Value (  )  != current Entry . crc )  {             throw new  Zip Exception ( ""CRC mismatch"" )  ;          }         if  ( current Entry . size != crc . tbytes )  {             throw new  Zip Exception ( "" Size mismatch"" )  ;          }     }*/ long cur Offset = LOCHDR ;  //  Write the  Data Descriptor if  ( current Entry . get Method (  )  != STORED )  {     cur Offset += EXTHDR ;      //  Data descriptor signature and CRC are 4 bytes each for both zip and zip64 .      write Long As Uint32 ( out, EXTSIG )  ;      /*write Long As Uint32 ( out, current Entry . crc = crc . get Value (  )  )  ;          current Entry . compressed Size = def . get Bytes Written (  )  ;          current Entry . size = def . get Bytes Read (  )  ; */     write Long As Uint32 ( out, current Entry . crc )  ;      /*if  ( current Entry Needs Zip64 )  {             //  We need an additional 8 bytes to store 8 byte compressed / uncompressed             // sizes .              cur Offset += 8 ;              write Long As Uint64 ( out, current Entry . compressed Size )  ;              write Long As Uint64 ( out, current Entry . size )  ;          } else {             write Long As Uint32 ( out, current Entry . compressed Size )  ;              write Long As Uint32 ( out, current Entry . size )  ;          }*/     write Long As Uint32 ( out, current Entry . compressed Size )  ;      write Long As Uint32 ( out, current Entry . size )  ;  } //  Update the  Central Directory // http://www . pkware . com/documents/casestudies/APPNOTE . TXT int flags = current Entry . get Method (  )  == STORED ? 0 :  Tinker Zip File . GPBF_DATA_DESCRIPTOR_FLAG ;  //  Since gingerbread, we always set the UTF-8 flag on individual files if appropriate .  //  Some tools insist that the central directory have the UTF-8 flag .  // http://code . google . com/p/android/issues/detail?id=20214 flags |=  Tinker Zip File . GPBF_UTF8_FLAG ;  write Long As Uint32 ( c Dir, CENSIG )  ;  //  Version this file was made by .  write Int As Uint16 ( c Dir, ZIP_VERSION_2_0 )  ;  //  Minimum version needed to extract .  write Int As Uint16 ( c Dir, ZIP_VERSION_2_0 )  ;  write Int As Uint16 ( c Dir, flags )  ;  write Int As Uint16 ( c Dir, current Entry . get Method (  )  )  ;  write Int As Uint16 ( c Dir, current Entry . time )  ;  write Int As Uint16 ( c Dir, current Entry . mod Date )  ;  // write Long As Uint32 ( c Dir, crc . get Value (  )  )  ;  write Long As Uint32 ( c Dir, current Entry . crc )  ;  if  ( current Entry . get Method (  )  == DEFLATED )  {     /*current Entry . set Compressed Size ( def . get Bytes Written (  )  )  ;          current Entry . set Size ( def . get Bytes Read (  )  )  ; */     cur Offset += current Entry . get Compressed Size (  )  ;  } else {     /*current Entry . set Compressed Size ( crc . tbytes )  ;          current Entry . set Size ( crc . tbytes )  ; */     cur Offset += current Entry . get Size (  )  ;  } /*if  ( current Entry Needs Zip64 )  {         //  Refresh the extended info with the compressed size / size before         // writing it to the central directory .           Zip64 . refresh Zip64 Extended Info ( current Entry )  ;          // NOTE:  We would've written out the zip64 extended info locator to the entry         // extras while constructing the local file header .   There's no need to do it again         // here .   If we do, there will be a size mismatch since we're calculating offsets         // based on the *current* size of the extra data and not based on the size         // at the point of writing the LFH .          write Long As Uint32 ( c Dir,  Zip64 . MAX_ZIP_ENTRY_AND_ARCHIVE_SIZE )  ;          write Long As Uint32 ( c Dir,  Zip64 . MAX_ZIP_ENTRY_AND_ARCHIVE_SIZE )  ;      } else {         write Long As Uint32 ( c Dir, current Entry . get Compressed Size (  )  )  ;          write Long As Uint32 ( c Dir, current Entry . get Size (  )  )  ;      }*/ write Long As Uint32 ( c Dir, current Entry . get Compressed Size (  )  )  ;  write Long As Uint32 ( c Dir, current Entry . get Size (  )  )  ;  cur Offset += write Int As Uint16 ( c Dir, name Bytes . length )  ;  if  ( current Entry . extra != null )  {     cur Offset += write Int As Uint16 ( c Dir, current Entry . extra . length )  ;  } else {     write Int As Uint16 ( c Dir, 0 )  ;  } //  Comment length .  write Int As Uint16 ( c Dir, entry Comment Bytes . length )  ;  //  Disk  Start write Int As Uint16 ( c Dir, 0 )  ;  //  Internal  File  Attributes write Int As Uint16 ( c Dir, 0 )  ;  //  External  File  Attributes write Long As Uint32 ( c Dir, 0 )  ;  /*if  ( current Entry Needs Zip64 )  {         write Long As Uint32 ( c Dir,  Zip64 . MAX_ZIP_ENTRY_AND_ARCHIVE_SIZE )  ;      } else {         write Long As Uint32 ( c Dir, current Entry . local Header Rel Offset )  ;      }*/ write Long As Uint32 ( c Dir, current Entry . local Header Rel Offset )  ;  c Dir . write ( name Bytes )  ;  name Bytes = null ;  if  ( current Entry . extra != null )  {     c Dir . write ( current Entry . extra )  ;  } offset += cur Offset ;  if  ( entry Comment Bytes . length > 0 )  {     c Dir . write ( entry Comment Bytes )  ;      entry Comment Bytes = BYTE ;  } current Entry = null ; /*crc . reset (  )  ;      def . reset (  )  ;      done = false ; */}"
8649,public static boolean is Git Client (  Http Servlet Request req ) { return is Info Refs ( req )  || is Upload Pack ( req )  || is Receive Pack ( req )  ; }
8650,"private boolean is Granted Read Logs Permission (  ) { int permission State = get Package Manager (  )  . check Permission ( android .  Manifest . permission . READ_LOGS, get Package Name (  )  )  ;  return permission State ==  Package Manager . PERMISSION_GRANTED ; }"
8651,public boolean contains All (  Flavor Set flavors ) { return this . flavors . contains All ( flavors . get Set (  )  )  ; }
8652,"public void add Pair (  Object proxy User Data A,  Object proxy User Data B ) {  Fixture Proxy proxy A =  (  Fixture Proxy )  proxy User Data A ;   Fixture Proxy proxy B =  (  Fixture Proxy )  proxy User Data B ;   Fixture fixture A = proxy A . fixture ;   Fixture fixture B = proxy B . fixture ;  int index A = proxy A . child Index ;  int index B = proxy B . child Index ;   Body body A = fixture A . get Body (  )  ;   Body body B = fixture B . get Body (  )  ;  //  Are the fixtures on the same body? if  ( body A == body B )  {     return ;  } // TODO_ERIN use a hash table to remove a potential bottleneck when both // bodies have a lot of contacts .  //  Does a contact already exist?  Contact Edge edge = body B . get Contact List (  )  ;  while  ( edge != null )  {     if  ( edge . other == body A )  {          Fixture f A = edge . contact . get Fixture A (  )  ;           Fixture f B = edge . contact . get Fixture B (  )  ;          int i A = edge . contact . get Child Index A (  )  ;          int i B = edge . contact . get Child Index B (  )  ;          if  ( f A == fixture A && i A == index A && f B == fixture B && i B == index B )  {             // A contact already exists .              return ;          }         if  ( f A == fixture B && i A == index B && f B == fixture A && i B == index A )  {             // A contact already exists .              return ;          }     }     edge = edge . next ;  } //  Does a joint override collision? is at least one body dynamic? if  ( body B . should Collide ( body A )  == false )  {     return ;  } //  Check user filtering .  if  ( m_contact Filter != null && m_contact Filter . should Collide ( fixture A, fixture B )  == false )  {     return ;  } //  Call the factory .   Contact c = pool . pop Contact ( fixture A, index A, fixture B, index B )  ;  if  ( c == null )  {     return ;  } //  Contact creation may swap fixtures .  fixture A = c . get Fixture A (  )  ;  fixture B = c . get Fixture B (  )  ;  index A = c . get Child Index A (  )  ;  index B = c . get Child Index B (  )  ;  body A = fixture A . get Body (  )  ;  body B = fixture B . get Body (  )  ;  //  Insert into the world .  c . m_prev = null ;  c . m_next = m_contact List ;  if  ( m_contact List != null )  {     m_contact List . m_prev = c ;  } m_contact List = c ;  //  Connect to island graph .  //  Connect to body A c . m_node A . contact = c ;  c . m_node A . other = body B ;  c . m_node A . prev = null ;  c . m_node A . next = body A . m_contact List ;  if  ( body A . m_contact List != null )  {     body A . m_contact List . prev = c . m_node A ;  } body A . m_contact List = c . m_node A ;  //  Connect to body B c . m_node B . contact = c ;  c . m_node B . other = body A ;  c . m_node B . prev = null ;  c . m_node B . next = body B . m_contact List ;  if  ( body B . m_contact List != null )  {     body B . m_contact List . prev = c . m_node B ;  } body B . m_contact List = c . m_node B ;  // wake up the bodies if  ( !fixture A . is Sensor (  )  && !fixture B . is Sensor (  )  )  {     body A . set Awake ( true )  ;      body B . set Awake ( true )  ;  } ++m_contact Count ; }"
8653,"public com . anychart . core . stock . scrollerseries .  Range Area fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
8654,"protected void update (  Byte Buffer b ) { if  ( b . has Array (  )  )  {     update ( b . array (  ) , b . array Offset (  )  + b . position (  ) , b . remaining (  )  )  ;       Java8 Compatibility . position ( b, b . limit (  )  )  ;  } else {     for  ( int remaining = b . remaining (  )  ;  remaining > 0 ;  remaining-- )  {         update ( b . get (  )  )  ;      } }}"
8655,public int get Joint Count (  ) { return jni Get Jointcount ( addr )  ; }
8656,"public com . anychart . core . gantt . timelineheader .  Level Wrapper text Overflow ( com . anychart . graphics . vector . text .  Text Overflow value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Overflow ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
8657,"public  List< String> read Lines (  Path path ) {  Optional< String> contents = read File If It Exists ( path )  ;  if  ( !contents . is Present (  )  || contents . get (  )  . is Empty (  )  )  {     return  Immutable List . of (  )  ;  }  String content = contents . get (  )  ;  content = content . ends With (  System . line Separator (  )  )  ? without Suffix ( content,  System . line Separator (  )  )  : content ;  return  Splitter . on (  System . line Separator (  )  )  . split To List ( content )  ; }"
8658,public  Options Picker Builder set Divider Color ( @ Color Int int divider Color ) { m Picker Options . divider Color = divider Color ;  return this ; }
8659,"private static boolean is Hex Of Length (  Char Sequence value, int .  .  .  allowed Lengths ) { if  ( value == null || !HEX_DIGITS . matcher ( value )  . matches (  )  )  {     return false ;  } if  ( allowed Lengths . length == 0 )  {     return true ;  } for  ( int length : allowed Lengths )  {     if  ( value . length (  )  == length )  {         return true ;      } } return false ; }"
8660,"public void replace (  String param,  String value ) { int [  ]  range ;  while  (  ( range = find Template ( param )  )  != null )  buff . replace ( range [ 0 ] , range [ 1 ] , value )  ; }"
8661,"public  Immutable Map< Component Requirement,  Variable Element> factory Parameters (  ) { return flatten ( unvalidated Factory Parameters (  )  )  ; }"
8662,"public com . anychart . core .  State Settings fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
8663,"protected final  String from Key (  String cache Key ) { if  ( is Using Key Sanitizer (  )  )  {     try {         return  (  String )  key Sanitizer . desanitize Key ( cache Key )  ;      } catch  (  Key Sanitation Excepion e )  {          Ln . e ( e, "" Key could not be desanitized, falling back on original key . "" )  ;          return cache Key ;      } } else {     return cache Key ;  }}"
8664,public void set Refreshing ( boolean refreshing ) { if  ( m Swipe Refresh Layout != null )      m Swipe Refresh Layout . set Refreshing ( refreshing )  ; }
8665,"private  Method Spec provide Service Definition Factory (  ) { return method Builder ( ""service Definition Factory"" )  . add Annotation (  Dagger . provides (  )  )  . add Annotation ( grpc Service Model . for Grpc Service (  )  )  . add Modifiers ( STATIC )  . returns (  Dagger .  Grpc Server . SERVICE_DEFINITION_FACTORY )  . add Parameter ( grpc Service Model . service Definition Type Factory Name, ""factory"", FINAL )  . add Statement ( ""return $L"", anonymous Service Definition Factory (  )  )  . build (  )  ; }"
8666,"private ST Group File create And Maybe Cache Templates (  ) { // new versions of the templates without restarting buckd .  if  ( DEBUG )  {     return create ST Group File (  )  ;  } //  In production, cache the  Group File object for efficiency .  if  ( group File != null )  {     return group File ;  } synchronized  ( this )  {     if  ( group File == null )  {         group File = create ST Group File (  )  ;      } } return group File ; }"
8667,"public void put ( @ Non Null final  String key, final JSON Array value ) { put ( key, value, -1 )  ; }"
8668,"public void notify Package Added (  String package Name ) { for  (  Pair< Launcher Apps .  Callback,  Handler> callback Pair : callbacks )  {     callback Pair . second . post (  (  )  -> callback Pair . first . on Package Added ( package Name,  Process . my User Handle (  )  )  )  ;  }}"
8669,public  Bytes Range get Bytes Range (  ) { return bytes Range ; }
8670,"public com . anychart . core . axismarkers .  Circular Range to (  Number to Value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to ( %s )  ; "", to Value )  )  ;  return this ; }"
8671,"public final short get A Unit (  ) { int a = get A (  )  ;  if  (  ( a & ~0xffff )  != 0 )  {     throw new  Dex Exception ( "" Register A out of range: "" +  Hex . u8 ( a )  )  ;  } return  ( short )  a ; }"
8672,public void set Vertex Colors ( final int vertex Color Buffer Handle ) { m Vertex Shader . set Vertex Colors ( vertex Color Buffer Handle )  ; }
8673,"public com . anychart . standalones .  Color Range orientation ( com . anychart . enums .  Orientation orientation ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . orientation ( %s )  ; "",  ( orientation != null )  ? orientation . get Js Base (  )  : null )  )  ;  return this ; }"
8674,"public com . anychart . core . polar . series .  Continuous Base max Labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8675,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
8676,public int get Address (  ) { return address ; }
8677,"public com . anychart . charts .  Polar bounds (  String x,  Number y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
8678,"public com . anychart . core . axes .  Circular Ticks stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8679,public static  Frontend Request Type find By Value ( int value ) { switch ( value )  {     case 0:         return UNKNOWN ;      case 5:         return LOG ;      case 13:         return ANNOUNCEMENT ;      case 22:         return FETCH_RULE_KEY_LOGS ;      default:         return null ;  }}
8680,"public void add Line (  String line ) { int index = line . index Of ( "":"" )  ;  if  ( index == -1 )  {     add ( """", line )  ;  } else {     add ( line . substring ( 0, index ) , line . substring ( index + 1 )  )  ;  }}"
8681,"public void save As Jpg (  String width,  Number height,  Number quality,  Boolean force Transparent White,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Jpg ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( width ) , height, quality, force Transparent White, wrap Quotes ( filename )  )  )  ; }"
8682,"public  Ios Parameters .  Builder set Ipad Bundle Id ( @ Non Null  String bundle Id ) { parameters . put String ( KEY_IPAD_BUNDLE_ID, bundle Id )  ;  return this ; }"
8683,public void close Test Realms (  ) {  List< Realm> realms = new  Array List<> (  )  ;  synchronized  ( lock )  {      List< Realm> tmp = test Realms ;      test Realms = realms ;      realms = tmp ;  } for  (  Realm test Realm : realms )  {     test Realm . close (  )  ;  }}
8684,public int get Sign Count ( int index ) { QMUI Tab tab = m Tab Adapter . get Item ( index )  ;  return tab . get Sign Count (  )  ; }
8685,"public com . anychart . core . utils .  Quarter bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
8686,"public com . anychart . graphics . vector .  Pattern Fill set Rotation (  Number degrees,  Number cx,  Number cy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set Rotation ( %s, %s, %s )  ; "", degrees, cx, cy )  )  ;  return this ; }"
8687,"public static void show Dialog For Loading (  Activity context,  String msg, boolean cancelable ) {  View view =  Layout Inflater . from ( context )  . inflate ( R . layout . layout_loading_dialog, null )  ;   Text View loading Text =  (  Text View )  view . find View By Id ( R . id . id_tv_loading_dialog_text )  ;  loading Text . set Text ( msg )  ;  m Loading Dialog = new  Dialog ( context, R . style . loading_dialog_style )  ;  m Loading Dialog . set Cancelable ( cancelable )  ;  m Loading Dialog . set Content View ( view, new  Linear Layout .  Layout Params (  Linear Layout .  Layout Params . MATCH_PARENT,  Linear Layout .  Layout Params . MATCH_PARENT )  )  ;  m Loading Dialog . show (  )  ; }"
8688,"public static void set Type (  String type ) {  Reflection Helpers . set Static Field (  Build . class, ""TYPE"", type )  ; }"
8689,public static boolean is Concern Looper (  ) {  Config config =  Block Canary Ex . get Config (  )  ;  return config != null &&  Looper . my Looper (  )  == config . provide Watch Looper (  )  ; }
8690,public  Bson get Sort (  ) { return sort ; }
8691,"public com . anychart . core . ui .  Chart Scroller fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
8692,"public void share With Linked In (  String caption Or Options,  String description ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . share With Linked In ( %s, %s )  ; "", wrap Quotes ( caption Or Options ) , wrap Quotes ( description )  )  )  ; }"
8693,public  Mp4 Field Type get Field Type (  ) { return image Type ; }
8694,"public com . anychart . core . utils .  Margin margin (  ) { return new com . anychart . core . utils .  Margin ( js Base + "" . margin (  ) "" )  ; }"
8695,public static long get Cache Disk Size (  ) { return get Cache Disk Size ( get Default Cache Double Utils (  )  )  ; }
8696,"public static  Fire Stream Module builder (  Firebase Service Type service Type,  Configure< Config> configure )  throws  Exception{ instance . config . service Type = service Type ;  configure . with ( instance . config )  ;  return instance ; }"
8697,"public com . anychart . charts .  Stock max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
8698,"public static  Immutable List<? extends  Native Linkable> get Topo Sorted Native Linkables (  Iterable<? extends  Native Linkable> roots,  Topological Sort .  Traversable< Native Linkable> deps Fn ) { //  Topologically sort the rules .  return  Topological Sort . snowflake Sort ( roots, deps Fn,  Comparator . comparing (  Native Linkable::get Build Target )  )  . reverse (  )  ; }"
8699,"public static void add Contents (  Dex File file,  Constant cst ) { if  ( cst instanceof  Cst Annotation )  {     add Contents ( file,  (  (  Cst Annotation )  cst )  . get Annotation (  )  )  ;  } else if  ( cst instanceof  Cst Array )  {      Cst Array .  List list =  (  (  Cst Array )  cst )  . get List (  )  ;      int size = list . size (  )  ;      for  ( int i = 0 ;  i < size ;  i++ )  {         add Contents ( file, list . get ( i )  )  ;      } } else {     file . intern If Appropriate ( cst )  ;  }}"
8700,private void notify Close To Left Listener (  ) { if  ( listener != null )  {     listener . on Closed To Left (  )  ;  }}
8701,"public void test Lifecycle_I1_C_S1 (  ) {  Data Source< Object> data Source = get And Subscribe (  )  ;   Data Subscriber< Object> subscriber1 = verify Get And Subscribe ( m Data Source Supplier1, m Src1 )  ;   Object val1 = mock (  Object . class )  ;  set State ( m Src1, NOT_CLOSED, NOT_FINISHED, WITH_RESULT, val1, NOT_FAILED, null )  ;  subscriber1 . on New Result ( m Src1 )  ;  verify Subscriber ( data Source, m Src1, ON_NEW_RESULT )  ;  verify State ( data Source, m Src1, NOT_CLOSED, NOT_FINISHED, WITH_RESULT, val1, NOT_FAILED, null )  ;  test Close ( data Source, m Src1 )  ;  verify Subscriber ( data Source, null, ON_CANCELLATION )  ;  verify State ( data Source, null, CLOSED, NOT_FINISHED, WITHOUT_RESULT, null, NOT_FAILED, null )  ;   Object val = mock (  Object . class )  ;  set State ( m Src1, NOT_CLOSED, FINISHED, WITH_RESULT, val, NOT_FAILED, null )  ;  subscriber1 . on New Result ( m Src1 )  ;  verify Subscriber ( data Source, m Src1, NO_INTERACTIONS )  ;  verify State ( data Source, null, CLOSED, NOT_FINISHED, WITHOUT_RESULT, null, NOT_FAILED, null )  ; }"
8702,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
8703,public  Paged List<T> get Paged List (  ) { return this . paged List ; }
8704,Set< Library Version> get Registered Versions (  ) { synchronized  ( infos )  {     return  Collections . unmodifiable Set ( infos )  ;  }}
8705,"public com . anychart . core . stock . scrollerseries .  Range Step Area bounds (  String x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
8706,"public static void add ( @ Non Null final  Fragment Manager fm, @ Non Null final  Fragment [  ]  adds, @ Id Res final int container Id, final int show Index ) { add ( fm, adds, container Id, null, show Index )  ; }"
8707,"public  Builder add Header ( @ Non Null  String key, @ Non Null  String value ) { return add Header ( key, new  String Header Factory ( value )  )  ; }"
8708,"public static int w (  String tag,  String msg,  Throwable tr ) { if  (  Re Plugin Internal . FOR_DEV )  {     return  Log . w ( TAG_PREFIX + tag, msg, tr )  ;  } return -1 ; }"
8709,public static  Char Buffer new Char Buffer ( int capacity ) { return new  Read Write Char Array Buffer ( capacity )  ; }
8710,"public static boolean in (  Object a,  Object b,  Context cx ) { if  ( ! ( b instanceof  Scriptable )  )  {     throw type Error0 ( ""msg . instanceof . not . object"" )  ;  } return has Object Elem (  (  Scriptable )  b, a, cx )  ; }"
8711,"public void dom Element (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . dom Element (  )  ; "" )  ; }"
8712,"public synchronized boolean get Did JS Hit Frame And Cleanup ( long frame Start Time Nanos, long frame End Time Nanos ) { //  Case 1:  We dispatched a UI update boolean finished Ui Update = has Event Between Timestamps ( m View Hierarchy Update Finished Events, frame Start Time Nanos, frame End Time Nanos )  ;  boolean did End Frame Idle = did End Frame Idle ( frame Start Time Nanos, frame End Time Nanos )  ;  boolean hit Frame ;  if  ( finished Ui Update )  {     hit Frame = true ;  } else {     //  Case 2:  Ended idle but no UI was enqueued during that frame     hit Frame = did End Frame Idle && !has Event Between Timestamps ( m View Hierarchy Update Enqueued Events, frame Start Time Nanos, frame End Time Nanos )  ;  } clean Up ( m Transition To Idle Events, frame End Time Nanos )  ;  clean Up ( m Transition To Busy Events, frame End Time Nanos )  ;  clean Up ( m View Hierarchy Update Enqueued Events, frame End Time Nanos )  ;  clean Up ( m View Hierarchy Update Finished Events, frame End Time Nanos )  ;  m Was Idle At End Of Last Frame = did End Frame Idle ;  return hit Frame ; }"
8713,public int find Last Visible Item Position (  ) { if  ( get Child Count (  )  == 0 )      return  Recycler View . NO_POSITION ;  return canvas . get Max Position On Screen (  )  ; }
8714,"public void selected (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . selected (  )  ; "" )  ; }"
8715,public static  Producer<T> immediate Producer ( T value ) { return dagger . producers .  Producers . immediate Producer ( value )  ; }
8716,public boolean get Detail Orientation Rotate Auto (  ) { return true ; }
8717,public long get Time Compressing (  ) { return statistics . time Compressing ; }
8718,"public  String to String (  ) { return get Output Label (  )  . is Default (  )  ? get Build Target (  )  . get Fully Qualified Name (  )  :  String . format ( ""%s [ %s ] "", get Build Target (  ) , get Output Label (  )  )  ; }"
8719,public void set Load Events Handler (  Load Events Handler delegate ) { m Delegate = delegate ; }
8720,"public static  Path get Gen Dir (  Project Filesystem filesystem,  Build Target target ) { return  Build Target Paths . get Gen Path ( filesystem, target, get Format ( target )  )  ; }"
8721,public  View Position get From Pos (  ) { return from Pos ; }
8722,public boolean is Has More (  ) { return has More ; }
8723,"public  String to String (  ) {  String Builder sb = new  String Builder (  )  ;  sb . append ( get Class (  )  . get Name (  )  )  ;  //$NON-NLS-1$ sb . append ( "", status: capacity="" )  ;  sb . append ( capacity (  )  )  ;  //$NON-NLS-1$ sb . append ( "" position="" )  ;  sb . append ( position (  )  )  ;  //$NON-NLS-1$ sb . append ( "" limit="" )  ;  sb . append ( limit (  )  )  ;  return sb . to String (  )  ; }"
8724,public void print String ( final  String value ) { this . output . println ( value )  ; }
8725,public static  Linked Blocking Deque<E> new Linked Blocking Deque (  ) { return new  Linked Blocking Deque<E> (  )  ; }
8726,public boolean get Detail Orientation Rotate Auto (  ) { return true ; }
8727,public  Complete Builder where ( @ Nullable  String where ) { this . where = where ;  return this ; }
8728,"public com . anychart . core . gauge .  Cap container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
8729,"Node create Object Literal (  Obj Array elems ) { int size = elems . size (  )  / 2 ;   Node object = new  Node (  Token . OBJECTLIT )  ;   Object [  ]  properties ;  if  ( size == 0 )  {     properties =  Script Runtime . empty Args ;  } else {     properties = new  Object [ size ]  ;      for  ( int i = 0 ;  i != size ;  ++i )  {         properties [ i ]  = elems . get ( 2 * i )  ;           Node value =  (  Node )  elems . get ( 2 * i + 1 )  ;          object . add Child To Back ( value )  ;      } } object . put Prop (  Node . OBJECT_IDS_PROP, properties )  ;  return object ; }"
8730,"public void remove Event At Offset ( int offset,  Media Event event ) {  Run List run List = events . get ( offset )  ;  if  ( run List != null )  {     run List . remove ( event )  ;      if  ( run List . is Empty (  )  )  {         events . remove ( offset )  ;      } }}"
8731,"public com . anychart . core .  State Settings stem Stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stem Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8732,"public static boolean clean Internal Dbs (  ) { return  Utils Bridge . delete All In Dir ( new  File (  Utils . get App (  )  . get Files Dir (  )  . get Parent (  ) , ""databases"" )  )  ; }"
8733,"public com . anychart . charts .  Stock start Select Marquee (  Boolean repeat ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . start Select Marquee ( %s )  ; "", repeat )  )  ;  return this ; }"
8734,public void add Memory Pressure Listener (  Memory Pressure Listener listener ) { m Listeners . add ( listener )  ; }
8735,"public  Rect F get Zoomed Rect (  ) { if  ( m Scale Type ==  Scale Type . FIT_XY )  {     throw new  Unsupported Operation Exception ( ""get Zoomed Rect (  )  not supported with FIT_XY"" )  ;  }  Point F top Left = transform Coord Touch To Bitmap ( 0, 0, true )  ;   Point F bottom Right = transform Coord Touch To Bitmap ( view Width, view Height, true )  ;  float w = get Drawable (  )  . get Intrinsic Width (  )  ;  float h = get Drawable (  )  . get Intrinsic Height (  )  ;  return new  Rect F ( top Left . x / w, top Left . y / h, bottom Right . x / w, bottom Right . y / h )  ; }"
8736,public boolean is Set Buck Build Id (  ) { return this . buck Build Id != null ; }
8737,public boolean has Ret (  ) { return return Address != null ; }
8738,"public void value Anchor (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . value Anchor (  )  ; "" )  ; }"
8739,"public com . anychart . core . axismarkers .  Gantt Text font Size (  Number size ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Size ( %s )  ; "", size )  )  ;  return this ; }"
8740,public static char [  ]  to Array (  Collection< Character> collection ) { if  ( collection instanceof  Char Array As List )  {     return  (  (  Char Array As List )  collection )  . to Char Array (  )  ;  }  Object [  ]  boxed Array = collection . to Array (  )  ;  int len = boxed Array . length ;  char [  ]  array = new char [ len ]  ;  for  ( int i = 0 ;  i < len ;  i++ )  {     // check Not Null for GWT  ( do not optimize )      array [ i ]  =  (  Character )  check Not Null ( boxed Array [ i ]  )  ;  } return array ; }
8741,public  Sshd Session Factory Builder set Ssh Directory (  File ssh Directory ) { this . state . ssh Directory = ssh Directory ;  return this ; }
8742,"public void save As Png (  String width,  Number height,  Number quality,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Png ( %s, %s, %s, %s )  ; "", wrap Quotes ( width ) , height, quality, wrap Quotes ( filename )  )  )  ; }"
8743,"public void write Line Echoer (  String [  ]  lines, int return Code )  throws IO Exception{ try  (  File Writer output = new  File Writer ( bin Path . to Absolute Path (  )  . to String (  )  )  )  {     output . write ( ""#!/usr/bin/env python"" )  ;      output . write (  System . line Separator (  )  )  ;      output . write ( ""from __future__ import print_function"" )  ;      output . write (  System . line Separator (  )  )  ;      output . write ( ""import sys"" )  ;      output . write (  System . line Separator (  )  )  ;      output . write ( ""print ( '''"" )  ;      output . write (  Arrays . stream ( lines )  . map (  line -> line . replace ( ""'''"", ""\\'\\'\\'"" )  )  . collect (  Collectors . joining (  System . line Separator (  )  )  )  )  ;      output . write ( ""''' ) "" )  ;      output . write (  System . line Separator (  )  )  ;      output . write ( ""sys . exit ( "" +  Integer . to String ( return Code )  + "" ) "" )  ;  } set Permissions (  )  ; }"
8744,"public com . anychart . standalones .  Labels Factory connector Stroke (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . connector Stroke ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8745,"private void display Crouton (  ) { if  ( crouton Queue . is Empty (  )  )  {     return ;  } //  First peek whether the  Crouton has an activity .  final  Crouton current Crouton = crouton Queue . peek (  )  ;  //  If the activity is null we poll the  Crouton off the queue .  if  ( null == current Crouton . get Activity (  )  )  {     crouton Queue . poll (  )  ;  } if  ( !current Crouton . is Showing (  )  )  {     //  Display the  Crouton     send Message ( current Crouton,  Messages . ADD_CROUTON_TO_VIEW )  ;      if  ( null != current Crouton . get Lifecycle Callback (  )  )  {         current Crouton . get Lifecycle Callback (  )  . on Displayed (  )  ;      } } else {     send Message Delayed ( current Crouton,  Messages . DISPLAY_CROUTON, calculate Crouton Duration ( current Crouton )  )  ;  }}"
8746,"public com . anychart . core . resource .  Grid even Holiday Fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . even Holiday Fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
8747,"public float get Scale (  ) { if  ( m Detector . get Pointer Count (  )  < 2 )  {     return 1 ;  } else {     float start Delta X = m Detector . get Start X (  )  [ 1 ]  - m Detector . get Start X (  )  [ 0 ]  ;      float start Delta Y = m Detector . get Start Y (  )  [ 1 ]  - m Detector . get Start Y (  )  [ 0 ]  ;      float current Delta X = m Detector . get Current X (  )  [ 1 ]  - m Detector . get Current X (  )  [ 0 ]  ;      float current Delta Y = m Detector . get Current Y (  )  [ 1 ]  - m Detector . get Current Y (  )  [ 0 ]  ;      float start Dist =  ( float )   Math . hypot ( start Delta X, start Delta Y )  ;      float current Dist =  ( float )   Math . hypot ( current Delta X, current Delta Y )  ;      return current Dist / start Dist ;  }}"
8748,public final byte [  ]  get Bytes (  )  throws  Large Object Exception{ return clone Array ( get Cached Bytes (  )  )  ; }
8749,public void assert Timelines Equal (  Timeline .  .  .  timelines ) { assert That ( this . timelines )  . contains Exactly Elements In (  Arrays . as List ( timelines )  )  . in Order (  )  ; }
8750,public void stop Tracking Orientation (  ) { sensor Manager . unregister Listener ( phone Orientation Listener )  ; }
8751,static  Timed Put Queue create With Delay ( long countdown In Millis ) { return new  Timed Put Queue ( countdown In Millis )  ; }
8752,protected void add Output (  Dalv Insn insn ) { output . add ( insn )  ; }
8753,"public void test Single Thread Deserialization (  ) { for  ( int i = 0 ;  i < 10 ;  i++ )  {     gson . from Json ( ""{'a':'hello','b':'world','i':1}"",  My Object . class )  ;  }}"
8754,"public R Layout In View Model Annotation Works View Model_ on Visibility State Changed (  On Model Visibility State Changed Listener<R Layout In View Model Annotation Works View Model_, R Layout In View Model Annotation Works View> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
8755,public void set Text (  String text ) { search Edit . set Text ( text )  ; }
8756,public  Fill get Gradient ( int index ) { return get Fill ( index )  ; }
8757,"private static void set Style Id (  String id,  Kml Style style Properties ) { if  ( id != null )  {     //  Append # to a local style Url      String style Id = ""#"" + id ;      style Properties . set Style Id ( style Id )  ;  }}"
8758,"public com . anychart . charts .  Radar container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
8759,public boolean create New File (  File path )  throws IO Exception{ return path . create New File (  )  ; }
8760,"public void add Glyphs ( int start Code Point, int end Code Point ) { for  ( int code Point = start Code Point ;  code Point <= end Code Point ;  code Point++ )  add Glyphs ( new  String (  Character . to Chars ( code Point )  )  )  ; }"
8761,final boolean is Visible (  Member member ) { return is Visible ( member . get Modifiers (  )  )  ; }
8762,"public  Swipe Builder2 with Directions ( int direction Flags ) { return new  Swipe Builder2 ( recycler View, make Movement Flags ( 0, direction Flags )  )  ; }"
8763,"public  Immutable Set< Output Path> get Outputs (  Output Label output Label ) { return output Paths . map (  paths -> {      Immutable Set< Output Path> paths For Label = paths . get ( output Label )  ;      if  ( paths For Label == null )  {         throw new  Human Readable Exception ( "" Cannot find output label  [ %s ]  for target %s"", output Label, build Target . get Fully Qualified Name (  )  )  ;      }     return paths For Label ;  } )  . or Else Get (  (  )  -> {      Preconditions . check Argument ( output Label . is Default (  ) , "" Unexpected output label  [ %s ]  for target %s .   Use 'outs' instead of 'out' to use output labels"", output Label, build Target . get Fully Qualified Name (  )  )  ;      return  Immutable Set . of ( output Path . get (  )  )  ;  } )  ; }"
8764,"public com . anychart . core . resource .  Grid bounds (  Number x,  Number y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, wrap Quotes ( width ) , height )  )  ;  return this ; }"
8765,"public com . anychart . charts .  Polar margin (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
8766,"void cleanup (  ) { synchronized  ( context )  {     native Clean Up ( native Finalizer Ptr, native Ptr )  ;  } //  Remove the  Phantom Reference from the pool to free it .  reference Pool . remove ( this )  ; }"
8767,"public  Map< String,  String> get Attributes (  ) { return new  Hash Map<> ( custom Attributes Map )  ; }"
8768,"public void fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . fill (  )  ; "" )  ; }"
8769,"private X Path Repository< Field> get Field X Paths (  Class< Return Type> target Class ) { X Path Repository< Field> field X Paths = new X Path Repository< Field> (  )  ;   Class<?> current Class = target Class ;  while  ( !current Class . equals (  Object . class )  )  {     add X Path Fields To Repo ( current Class, field X Paths )  ;      current Class = current Class . get Superclass (  )  ;  } return field X Paths ; }"
8770,"public void font Style (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Style (  )  ; "" )  ; }"
8771,"public  Response<?> create Error Response (  ) {  Response<?> call ;  try {     call = error Factory . call (  )  ;  } catch  (  Exception e )  {     throw new  Illegal State Exception ( "" Error factory threw an exception . "", e )  ;  } if  ( call == null )  {     throw new  Illegal State Exception ( "" Error factory returned null . "" )  ;  } if  ( call . is Successful (  )  )  {     throw new  Illegal State Exception ( "" Error factory returned successful response . "" )  ;  } return call ; }"
8772,public void set Torch ( boolean on ) { torch On = on ;  if  ( camera Instance != null )  {     camera Instance . set Torch ( on )  ;  }}
8773,"public static  Padding dp ( @ Dimension ( unit =  Dimension . DP )  int left Dp, @ Dimension ( unit =  Dimension . DP )  int top Dp, @ Dimension ( unit =  Dimension . DP )  int right Dp, @ Dimension ( unit =  Dimension . DP )  int bottom Dp, @ Dimension ( unit =  Dimension . DP )  int item Spacing Dp ) { return new  Padding ( left Dp, top Dp, right Dp, bottom Dp, item Spacing Dp,  Padding Type . DP )  ; }"
8774,public static  Display Image Options create Simple (  ) { return new  Builder (  )  . build (  )  ; }
8775,"public  Ordered contains At Least ( long first, long second, long .  .  .  rest ) { return check (  )  . that ( actual List )  . contains At Least ( first, second, box ( rest )  )  ; }"
8776,"public void set Pin Length ( int pin Length ) {  Layout Inflater inflater =  (  Layout Inflater )  m Context . get System Service (  Context . LAYOUT_INFLATER_SERVICE )  ;  m Round Container . remove All Views (  )  ;   List< Image View> temp = new  Array List<> ( pin Length )  ;  for  ( int i = 0 ;  i < pin Length ;  i++ )  {      Image View round View ;      if  ( i < m Round Views . size (  )  )  {         round View = m Round Views . get ( i )  ;      } else {         round View =  (  Image View )  inflater . inflate ( R . layout . view_round, m Round Container, false )  ;      }     m Round Container . add View ( round View )  ;      temp . add ( round View )  ;  } m Round Views . clear (  )  ;  m Round Views . add All ( temp )  ;  refresh ( 0 )  ; }"
8777,"public com . anychart . core . cartesian . series .  Bar3d parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
8778,public final boolean is Lenient (  ) { return lenient ; }
8779,"public com . anychart . core .  State Settings grid ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . grid ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8780,"private static boolean load Module (  String apk,  Class Loader top Class Loader, boolean call Init Zygote ) {  Log . i ( TAG, "" Loading modules from "" + apk )  ;  if  ( !new  File ( apk )  . exists (  )  )  {      Log . e ( TAG, ""   File does not exist"" )  ;      return false ;  }  Class Loader mcl = new  Path Class Loader ( apk, top Class Loader )  ;  try {     if  ( mcl . load Class ( INSTANT_RUN_CLASS )  != null )  {          Log . e ( TAG, ""   Cannot load module, please disable \"" Instant  Run\"" in  Android  Studio . "" )  ;          return false ;      } } catch  (  Class Not Found Exception ignored )  { } try {     if  ( mcl . load Class (  Xposed Bridge . class . get Name (  )  )  != null )  {          Log . e ( TAG, ""   Cannot load module:"" )  ;           Log . e ( TAG, ""   The  Xposed API classes are compiled into the module's APK . "" )  ;           Log . e ( TAG, ""   This may cause strange issues and must be fixed by the module developer . "" )  ;           Log . e ( TAG, ""   For details, see: http://api . xposed . info/using . html"" )  ;          return false ;      } } catch  (  Class Not Found Exception ignored )  { } try {      Field parent Field =  Class Loader . class . get Declared Field ( ""parent"" )  ;      parent Field . set Accessible ( true )  ;      parent Field . set ( mcl,  Xposed Init . class . get Class Loader (  )  )  ;  } catch  (  No Such Field Exception |  Illegal Access Exception e )  {      Log . e ( TAG, ""   Cannot load module:"" )  ;       Log . e ( TAG, ""   Classloader cannot change parent . "" )  ;      return false ;  }  Zip File zip File = null ;   Input Stream is ;  try {     zip File = new  Zip File ( apk )  ;       Zip Entry zip Entry = zip File . get Entry ( ""assets/xposed_init"" )  ;      if  ( zip Entry == null )  {          Log . e ( TAG, ""  assets/xposed_init not found in the APK"" )  ;          close Silently ( zip File )  ;          return false ;      }     is = zip File . get Input Stream ( zip Entry )  ;  } catch  ( IO Exception e )  {      Log . e ( TAG, ""   Cannot read assets/xposed_init in the APK"", e )  ;      close Silently ( zip File )  ;      return false ;  }  Buffered Reader module Classes Reader = new  Buffered Reader ( new  Input Stream Reader ( is )  )  ;  try {      String module Class Name ;      while  (  ( module Class Name = module Classes Reader . read Line (  )  )  != null )  {         module Class Name = module Class Name . trim (  )  ;          if  ( module Class Name . is Empty (  )  || module Class Name . starts With ( ""#"" )  )              continue ;          try {              Log . i ( TAG, ""   Loading class "" + module Class Name )  ;               Class<?> module Class = mcl . load Class ( module Class Name )  ;              if  ( !I Xposed Mod . class . is Assignable From ( module Class )  )  {                  Log . e ( TAG, ""     This class doesn't implement any sub-interface of I Xposed Mod, skipping it"" )  ;                  continue ;              } else if  ( disable Resources && I Xposed Hook Init Package Resources . class . is Assignable From ( module Class )  )  {                  Log . e ( TAG, ""     This class requires resource-related hooks  ( which are disabled ) , skipping it . "" )  ;                  continue ;              }             final  Object module Instance = module Class . new Instance (  )  ;              if  (  Xposed Bridge . is Zygote )  {                 if  ( module Instance instanceof I Xposed Hook Zygote Init )  {                     I Xposed Hook Zygote Init .  Startup Param param = new I Xposed Hook Zygote Init .  Startup Param (  )  ;                      param . module Path = apk ;                      param . starts System Server = starts System Server ;                       Xposed Bridge . hook Init Zygote ( new I Xposed Hook Zygote Init .  Wrapper (  ( I Xposed Hook Zygote Init )  module Instance, param )  )  ;                      if  ( call Init Zygote )  {                          (  ( I Xposed Hook Zygote Init )  module Instance )  . init Zygote ( param )  ;                      }                 }                 if  ( module Instance instanceof I Xposed Hook Load Package )                       Xposed Bridge . hook Load Package ( new I Xposed Hook Load Package .  Wrapper (  ( I Xposed Hook Load Package )  module Instance, apk )  )  ;                  if  ( module Instance instanceof I Xposed Hook Init Package Resources )                       Xposed Bridge . hook Init Package Resources ( new I Xposed Hook Init Package Resources .  Wrapper (  ( I Xposed Hook Init Package Resources )  module Instance, apk )  )  ;              } else {                 if  ( module Instance instanceof I Xposed Hook Cmd Init )  {                     I Xposed Hook Cmd Init .  Startup Param param = new I Xposed Hook Cmd Init .  Startup Param (  )  ;                      param . module Path = apk ;                      param . start Class Name = start Class Name ;                       (  ( I Xposed Hook Cmd Init )  module Instance )  . init Cmd App ( param )  ;                  }             }         } catch  (  Throwable t )  {              Log . e ( TAG, ""     Failed to load class "" + module Class Name, t )  ;              return false ;          }     }     return true ;  } catch  ( IO Exception e )  {      Log . e ( TAG, ""   Failed to load module from "" + apk, e )  ;      return false ;  } finally {     close Silently ( is )  ;      close Silently ( zip File )  ;  }}"
8781,public void set Scrollbars Visible ( boolean visible ) { if  ( visible )  {     fade Alpha = fade Alpha Seconds ;      fade Delay = fade Delay Seconds ;  } else {     fade Alpha = 0 ;      fade Delay = 0 ;  }}
8782,public com . google . protobuf .  Byte String get Re Session Label Bytes (  ) { java . lang .  Object ref = re Session Label_ ;  if  ( ref instanceof java . lang .  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      re Session Label_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
8783,"public void handle Update Layout (  React Shadow Node node ) { if  ( !ENABLED )  {     assert Node Supported Without Optimizer ( node )  ;      m UI View Operation Queue . enqueue Update Layout (  Assertions . assert Not Null ( node . get Layout Parent (  )  )  . get React Tag (  ) , node . get React Tag (  ) , node . get Screen X (  ) , node . get Screen Y (  ) , node . get Screen Width (  ) , node . get Screen Height (  )  )  ;      return ;  } apply Layout Base ( node )  ; }"
8784,public byte get Major Version (  ) { return MAJOR_VERSION ; }
8785,"public void t1same Depth T2 (  )  throws  Exception{  Object Id c1 = modify ( ""aaa"" )  ;  modify ( ""bbb"" )  ;  tag ( ""t1"" )  ;   Object Id c2 = modify ( ""ccc"" )  ;  branch ( ""b"", c1 )  ;  modify ( ""ddd"" )  ;  tag ( ""t2"" )  ;  modify ( ""eee"" )  ;   Object Id c4 = merge ( c2 )  ;  assert Name Starts With ( c4, ""bb389a4"" )  ;  if  ( use Annotated Tags || describe Use All Tags )  {     assert Equals ( ""t2-4-gbb389a4"", describe ( c4 )  )  ;  } else {     assert Equals ( null, describe ( c4 )  )  ;      assert Equals ( ""bb389a4"", describe ( c4, false, true )  )  ;  }}"
8786,public  Animated Image Result Builder set Decoded Frames ( @ Nullable  List< Closeable Reference< Bitmap>> decoded Frames ) { m Decoded Frames =  Closeable Reference . clone Or Null ( decoded Frames )  ;  return this ; }
8787,public int get Available (  ) { return m Layout State . m Available ; }
8788,"public void set Bounds ( float x, float y, float width, float height ) { this . x = x ;  this . y = y ;  this . width = width ;  this . height = height ;  dirty = true ; }"
8789,public boolean is Capturing Gesture (  ) { return m Is Capturing Gesture ; }
8790,public  Vector3 add ( @ Non Null  Vector3 v ) { x += v . x ;  y += v . y ;  z += v . z ;  return this ; }
8791,private boolean does Writer Own This Lock (  ) { return global Mutex . contains ( writer Lock )  ; }
8792,public synchronized void reset All Counters (  ) {  Litho Stats . reset All Counters (  )  ; }
8793,public boolean query News Id ( int id ) {  Realm Results< Read State Bean> results = m Realm . where (  Read State Bean . class )  . find All (  )  ;  for  (  Read State Bean item : results )  {     if  ( item . get Id (  )  == id )  {         return true ;      } } return false ; }
8794,"public static I Matcher create Path Matcher ( @ Non Null  String pattern, boolean dir Only )  throws  Invalid Pattern Exception{ return  Path Matcher . create Path Matcher ( pattern,  Character . value Of (  Fast Ignore Rule . PATH_SEPARATOR ) , dir Only )  ; }"
8795,"public void test One Splash Activity (  ) { final  String splash Activities = ""com . tencent . matrix .  Splash Activity1"" ;   Trace Config config = new  Trace Config .  Builder (  )  . build (  )  ;  // 设置 splash Activities config . splash Activities = splash Activities ;   Set< String> activities = config . get Splash Activities (  )  ;  assert Not Null ( activities )  ;  assert Equals ( 1, activities . size (  )  )  ;  assert True ( activities . contains ( ""com . tencent . matrix .  Splash Activity1"" )  )  ;  assert False ( activities . contains ( ""com . tencent . matrix .  Splash Activity2"" )  )  ; }"
8796,"public com . anychart . core . ui .  Circular Labels Factory padding (  String value1,  Number value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
8797,public static boolean has Init Freeline ( @ Not Null  Project project ) { return get Freeline Status ( project )  . has Init Freeline (  )  ; }
8798,"public void font Style (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Style (  )  ; "" )  ; }"
8799,"public void to Json (  Boolean stringify ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to Json ( %s )  ; "", stringify )  )  ; }"
8800,"public com . anychart . standalones .  Title margin (  Number value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
8801,public void set Minimum Horizontal Angle ( float angle In Degrees ) { m Minimum Horizontal Angle = angle In Degrees ;  m Minimum Horizontal Tangent = to Tangent ( angle In Degrees )  ; }
8802,"public com . anychart . core . stock . scrollerseries .  Jump Line container (  String element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "", wrap Quotes ( element )  )  )  ;  return this ; }"
8803,"private boolean is Off Screen (  View descendant ) { return !is Within Delta Of Screen X ( descendant, 0 )  && !is Within Delta Of Screen Y ( descendant, 0 )  ; }"
8804,"public com . anychart . core . pert .  Milestones labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8805,"public void reconnect Session If Possible ( final  Context context, final boolean show Dialog ) { reconnect Session If Possible ( context, show Dialog, SESSION_RECOVERY_TIMEOUT )  ; }"
8806,"private  Byte Buffer allocate From Pool ( int length, boolean is Fragmented ) { return  ( is Fragmented ? this . fragmented Buffer Pool : this . unfragmented Buffer Pool )  . get ( length )  ; }"
8807,"public com . anychart . charts .  Stock tooltip (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . tooltip ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8808,"public  Model With Super_ on Visibility Changed (  On Model Visibility Changed Listener< Model With Super_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
8809,"public  Builder set Buffer Durations Ms ( int min Buffer Ms, int max Buffer Ms, int buffer For Playback Ms, int buffer For Playback After Rebuffer Ms ) {  Assertions . check State ( !create Default Load Control Called )  ;  assert Greater Or Equal ( buffer For Playback Ms, 0, ""buffer For Playback Ms"", ""0"" )  ;  assert Greater Or Equal ( buffer For Playback After Rebuffer Ms, 0, ""buffer For Playback After Rebuffer Ms"", ""0"" )  ;  assert Greater Or Equal ( min Buffer Ms, buffer For Playback Ms, ""min Buffer Ms"", ""buffer For Playback Ms"" )  ;  assert Greater Or Equal ( min Buffer Ms, buffer For Playback After Rebuffer Ms, ""min Buffer Ms"", ""buffer For Playback After Rebuffer Ms"" )  ;  assert Greater Or Equal ( max Buffer Ms, min Buffer Ms, ""max Buffer Ms"", ""min Buffer Ms"" )  ;  this . min Buffer Audio Ms = min Buffer Ms ;  this . min Buffer Video Ms = min Buffer Ms ;  this . max Buffer Ms = max Buffer Ms ;  this . buffer For Playback Ms = buffer For Playback Ms ;  this . buffer For Playback After Rebuffer Ms = buffer For Playback After Rebuffer Ms ;  return this ; }"
8810,"public static  Config create Default Config (  Path root )  throws IO Exception{ return create Default Config ( root,  Raw Config . of (  Immutable Map . of (  )  )  )  ; }"
8811,"public void annotation (  String annotation )  throws IO Exception{ indent (  )  ;  out . write ( ""@"" )  ;  type ( annotation )  ;  out . write ( ""\n"" )  ; }"
8812,"private static int compare Ints ( int first, int second ) { return first > second ? 1 :  ( second > first ? -1 : 0 )  ; }"
8813,"public static void show Loading ( @ Non Null  View loading View, @ Non Null  View content View, @ Non Null  View error View ) { content View . set Visibility (  View . GONE )  ;  error View . set Visibility (  View . GONE )  ;  loading View . set Visibility (  View . VISIBLE )  ; }"
8814,"public com . anychart . core . stock . scrollerseries .  Range Area point Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . point Width ( %s )  ; "", width )  )  ;  return this ; }"
8815,"public  Identify set Once (  String property, int value ) { add To User Properties (  Constants . AMP_OP_SET_ONCE, property, value )  ;  return this ; }"
8816,"private PDF Color Space parse Color Space ( PDF Object csobj )  throws IO Exception{ if  ( csobj == null )  {     return state . fill CS ;  } return PDF Color Space . get Color Space ( csobj, resources )  ; }"
8817,"public static  String url Form Encode ( final  String string To Encode )  throws  Unsupported Encoding Exception{ if  ( is Empty ( string To Encode )  )  {     return """" ;  } return URL Encoder . encode ( string To Encode, ENCODING_UTF8 )  ; }"
8818,"private static boolean replace (  Map<K, V> map, K key, V old Value, V new Value ) { if  ( //  Nothing to do .  old Value == null && new Value == null )      return true ;  if  ( old Value == null )      return map . put If Absent ( key, new Value )  == null ;  else if  ( new Value == null )      return map . remove ( key, old Value )  ;  else     return map . replace ( key, old Value, new Value )  ; }"
8819,public  Git git (  ) { return git ; }
8820,"protected void set Usage ( int value ) { if  ( is Bound )      throw new  Gdx Runtime Exception ( "" Cannot change usage while VBO is bound"" )  ;  usage = value ; }"
8821,"public static final  Graphical View get Bar Chart View (  Context context, XY Multiple Series Dataset dataset, XY Multiple Series Renderer renderer,  Type type ) { check Parameters ( dataset, renderer )  ;  XY Chart chart = new  Bar Chart ( dataset, renderer, type )  ;  return new  Graphical View ( context, chart )  ; }"
8822,public  Orientation Option get Orientation Option (  ) { return null ; }
8823,"public static  Consumer< Build Target> filter Consumer (  Build Rule Resolver resolver,  Consumer<? super  Native Linkable Group> consumer ) { return  target -> {      Build Rule rule = resolver . get Rule ( target )  ;      if  ( rule instanceof  Native Linkable Group )  {         consumer . accept (  (  Native Linkable Group )  rule )  ;      } } ; }"
8824,"protected boolean on Request Focus In Descendants ( int direction,  Rect previously Focused Rect ) { //  ( ugh )  .  if  ( direction ==  View . FOCUS_FORWARD )  {     direction =  View . FOCUS_DOWN ;  } else if  ( direction ==  View . FOCUS_BACKWARD )  {     direction =  View . FOCUS_UP ;  } final  View next Focus = previously Focused Rect == null ?  Focus Finder . get Instance (  )  . find Next Focus ( this, null, direction )  :  Focus Finder . get Instance (  )  . find Next Focus From Rect ( this, previously Focused Rect, direction )  ;  if  ( next Focus == null )  {     return false ;  } if  ( is Off Screen ( next Focus )  )  {     return false ;  } return next Focus . request Focus ( direction, previously Focused Rect )  ; }"
8825,"public boolean verify Broker Permissions API22 And Less (  )  throws  Usage Authentication Exception{ final  String Builder permission Missing = new  String Builder (  )  ;  if  (  Build . VERSION . SDK_INT <  Build . VERSION_CODES . M )  {     permission Missing . append ( check Permission ( ""android . permission . GET_ACCOUNTS"" )  )  ;      permission Missing . append ( check Permission ( ""android . permission . MANAGE_ACCOUNTS"" )  )  ;      permission Missing . append ( check Permission ( ""android . permission . USE_CREDENTIALS"" )  )  ;      if  ( permission Missing . length (  )  == 0 )  {         return true ;      }     throw new  Usage Authentication Exception ( ADAL Error . DEVELOPER_BROKER_PERMISSIONS_MISSING, "" Broker related permissions are missing for "" + permission Missing . to String (  )  )  ;  }  Logger . v ( TAG, "" Device runs on 23 and above, skip the check for 22 and below . "" )  ;  return true ; }"
8826,"private  Mutation Batch add Mutation Batch (  ) { return add Mutation Batch ( ""foo/bar"" )  ; }"
8827,"public com . anychart . core . stock .  Plot price Indicator (  Number index,  Boolean value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . price Indicator ( %s, %s )  ; "", index, value )  )  ;  return this ; }"
8828,public void on Restore Instance State (  Parcelable state ) { if  ( is In Edit Mode )      return ;  if  ( ! ( state instanceof  Mosby View State Saved State )  )  {     delegate Callback . super On Restore Instance State ( state )  ;      return ;  }  Mosby View State Saved State saved State =  (  Mosby View State Saved State )  state ;  mosby View Id = saved State . get Mosby View Id (  )  ;  restoreable Parcelable View State =  ( VS )  saved State . get Restoreable View State (  )  ;  delegate Callback . super On Restore Instance State ( saved State . get Super State (  )  )  ; }
8829,"public  Local Write Result write Locally (  List< Mutation> mutations ) {  Timestamp local Write Time =  Timestamp . now (  )  ;  // TODO:  Call query Engine . handle Document Change (  )  appropriately .   Set< Document Key> keys = new  Hash Set<> (  )  ;  for  (  Mutation mutation : mutations )  {     keys . add ( mutation . get Key (  )  )  ;  } return persistence . run Transaction ( "" Locally write mutations"",  (  )  -> {     //  Load and apply all existing mutations .   This lets us compute the current base state for     // all non-idempotent transforms before applying any additional user-provided writes .       Immutable Sorted Map< Document Key,  Document> documents = local Documents . get Documents ( keys )  ;      //  For non-idempotent mutations  ( such as ` Field Value . increment (  ) ` ) , we record the base     // state in a separate patch mutation .   This is later used to guarantee consistent values     // and prevents flicker even if the backend sends us an update that already includes our     // transform .       List< Mutation> base Mutations = new  Array List<> (  )  ;      for  (  Mutation mutation : mutations )  {          Object Value base Value = mutation . extract Transform Base Value ( documents . get ( mutation . get Key (  )  )  )  ;          if  ( base Value != null )  {             // NOTE:  The base state should only be applied if there's some existing             // document to override, so use a  Precondition of exists=true             base Mutations . add ( new  Patch Mutation ( mutation . get Key (  ) , base Value, base Value . get Field Mask (  ) ,  Precondition . exists ( true )  )  )  ;          }     }      Mutation Batch batch = mutation Queue . add Mutation Batch ( local Write Time, base Mutations, mutations )  ;      batch . apply To Local Document Set ( documents )  ;      return new  Local Write Result ( batch . get Batch Id (  ) , documents )  ;  } )  ; }"
8830,"public com . anychart . core . annotations .  Fibonacci Timezones bottom (  Number bottom ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bottom ( %s )  ; "", bottom )  )  ;  return this ; }"
8831,"public void remove Region (  Region region ) { if  ( regions . contains ( region )  )  {     if  ( service Connected )  {         try {             beacon Manager . stop Monitoring Beacons In Region ( region )  ;          } catch  (  Remote Exception e )  {              Log Manager . e ( e, TAG, "" Can't stop bootstrap region"" )  ;          }     } else {          Log Manager . w ( TAG, "" Removing a region: service not yet  Connected"" )  ;      }     regions . remove ( region )  ;  }}"
8832,"public void color (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . color (  )  ; "" )  ; }"
8833,"public com . anychart . core . polar . series .  Range Column fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
8834,"public  Metadata Editor Compat edit Metadata ( boolean start Empty ) {  Object metadata Editor ;  if  ( s Has Remote Control AP Is )  {     try {         metadata Editor = s RCC Edit Metadata Method . invoke ( m Actual Remote Control Client, start Empty )  ;      } catch  (  Exception e )  {         throw new  Runtime Exception ( e )  ;      } } else {     metadata Editor = null ;  } return new  Metadata Editor Compat ( metadata Editor )  ; }"
8835,public void upload (  File zipped File ) { throw new  Unsupported Operation Exception (  )  ; }
8836,"public com . anychart . charts .  Circular Gauge start Select Marquee (  Boolean repeat ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . start Select Marquee ( %s )  ; "", repeat )  )  ;  return this ; }"
8837,"public T put Instance (  Class<T> type, T value ) { throw new  Unsupported Operation Exception (  )  ; }"
8838,public void cancel Request (  ) {  Threads . throw If Not On Main Thread (  )  ;  if  ( m Listener == null )  {     return ;  }  Batched Image Request request = m In Flight Requests . get ( m Cache Key )  ;  if  ( request != null )  {     boolean canceled = request . remove Container And Cancel If Necessary ( this )  ;      if  ( canceled )  {         m In Flight Requests . remove ( m Cache Key )  ;      } } else {     // check to see if it is already batched for delivery .      request = m Batched Responses . get ( m Cache Key )  ;      if  ( request != null )  {         request . remove Container And Cancel If Necessary ( this )  ;          if  ( request . m Containers . size (  )  == 0 )  {             m Batched Responses . remove ( m Cache Key )  ;          }     } }}
8839,public boolean is View At Bottom (  ) { return get View (  )  . get Bottom (  )  + get Margin Bottom (  )  == get Parent View (  )  . get Height (  )  ; }
8840,"public com . anychart . core . stock . series .  Base max Labels (  Boolean settings ) { return new com . anychart . core . stock . series .  Base (  String . format (  Locale . US, js Base + "" . max Labels ( %s ) "", settings )  )  ; }"
8841,public  Re Plugin Config set Callbacks (  Re Plugin Callbacks callbacks ) { if  ( !check Allow Modify (  )  )  {     return this ;  } this . callbacks = callbacks ;  return this ; }
8842,private void clean Up (  ) { for  ( int i = pointers . size (  )  - 1 ;  i >= 0 ;  --i )  {      Pointer pointer = pointers . get ( i )  ;      if  ( pointer . is Up (  )  )  {         pointers . remove ( i )  ;      } }}
8843,"public void save Min (  String key, int value ) {  User Data . modify Custom Data ( key, value, ""$min"" )  ; }"
8844,"public com . anychart . charts .  Radar select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
8845,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
8846,public void set Button Expand Visible ( boolean button Expand Visible ) { m Is Button Expand Visible = button Expand Visible ; }
8847,"public com . anychart . standalones .  Project Timeline baseline Bar Anchor ( com . anychart . enums .  Anchor value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . baseline Bar Anchor ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
8848,"public  Filter get Filter (  ) { return new  Filter (  )  {     @ Override     protected  Filter Results perform Filtering (  Char Sequence constraint )  {          Filter Results results = new  Filter Results (  )  ;           String term = constraint . to String (  )  ;          if  ( term . is Empty (  )  )              suggestions = suggestions_clone ;          else {             suggestions = new  Array List<> (  )  ;              for  (  Product item : suggestions_clone )  if  ( item . get Title (  )  . to Lower Case (  )  . contains ( term . to Lower Case (  )  )  )                  suggestions . add ( item )  ;          }         results . values = suggestions ;          return results ;      }     @ Override     protected void publish Results (  Char Sequence constraint,  Filter Results results )  {         suggestions =  (  Array List< Product> )  results . values ;          notify Data Set Changed (  )  ;      } } ; }"
8849,"private void add Stub Methods (  Type Spec .  Builder class Builder,  Element member, int method Index,  Method Spec .  Builder method Builder ) {  Executable Element executable Element =  (  Executable Element )  member ;   String method Name = executable Element . get Simple Name (  )  . to String (  )  ;  boolean is One Way = executable Element . get Return Type (  )  . get Kind (  )  ==  Type Kind . VOID && member . get Annotation (  Oneway . class )  != null ;  method Builder . begin Control Flow ( ""case TRANSACTION_"" + method Name + ""_"" + method Index + "":"" )  ;  method Builder . add Statement ( ""data . enforce Interface ( DESCRIPTOR ) "" )  ;  method Builder . add Statement ( ""on Dispatch Transaction ( code ) "" )  ;   List< String> param Names = new  Array List<> (  )  ;  int param Index = 0 ;   List< Variable Element> out Params = new  Array List<> (  )  ;   List< String> out Params Names = new  Array List<> (  )  ;  //pass parameters for  (  Variable Element param : executable Element . get Parameters (  )  )  {      Param Builder .  Param Type param Type = param . get Annotation (  Param In . class )  != null ?  Param Builder .  Param Type . IN : param . get Annotation (  Param Out . class )  != null ?  Param Builder .  Param Type . OUT :  Param Builder .  Param Type . IN_OUT ;       Param Builder param Builder = get Binding Manager (  )  . get Builder For Param ( param . as Type (  )  )  ;      if  ( param Builder != null )  {          String param Name = ""arg_stb_"" + param Index ;          param Names . add ( param Name )  ;          param Builder . write Params To Stub ( param, param Type, param Name, method Builder )  ;          if  ( param Type !=  Param Builder .  Param Type . IN )  {             out Params . add ( param )  ;              out Params Names . add ( param Name )  ;          }     } else {         log Error ( "" Parameter cannot be marshalled "" + param . get Simple Name (  )  )  ;      }     param Index++ ;  }  String method Call = ""service Impl . "" + method Name + "" ( "" ;  int param Size = param Names . size (  )  ;  for  ( int param Count = 0 ;  param Count < param Size ;  param Count++ )  {     method Call += param Names . get ( param Count )  ;      if  ( param Count < param Size - 1 )  {         method Call += "", "" ;      } } method Call += "" ) "" ;  method Builder . add Statement ( ""$T . set ( data . read Hash Map ( get Class (  )  . get Class Loader (  )  )  ) "",  Remoter Global Properties . class )  ;  if  ( executable Element . get Return Type (  )  . get Kind (  )  !=  Type Kind . VOID )  {     method Builder . add Statement ( ""$T result = "" + method Call, executable Element . get Return Type (  )  )  ;  } else {     method Builder . add Statement ( method Call )  ;  } method Builder . add Statement ( "" Remoter Global Properties . reset (  ) "" )  ;  if  ( !is One Way )  {     method Builder . add Statement ( ""reply . write No Exception (  ) "" )  ;      if  ( executable Element . get Return Type (  )  . get Kind (  )  !=  Type Kind . VOID )  {          Param Builder param Builder = get Binding Manager (  )  . get Builder For Param ( executable Element . get Return Type (  )  )  ;          if  ( param Builder != null )  {             param Builder . read Results From Stub ( executable Element . get Return Type (  ) , method Builder )  ;          } else {             log Error ( "" Unmarshallable return type "" + executable Element . get Return Type (  )  )  ;          }     }     int p Index = 0 ;      for  (  Variable Element param : out Params )  {          Param Builder .  Param Type param Type = param . get Annotation (  Param In . class )  != null ?  Param Builder .  Param Type . IN : param . get Annotation (  Param Out . class )  != null ?  Param Builder .  Param Type . OUT :  Param Builder .  Param Type . IN_OUT ;           Param Builder param Builder = get Binding Manager (  )  . get Builder For Param ( param . as Type (  )  )  ;          if  ( param Builder != null )  {             param Builder . read Out Results From Stub ( param, param Type, out Params Names . get ( p Index ) , method Builder )  ;          }         p Index++ ;      } } method Builder . add Statement ( ""return true"" )  ;  method Builder . end Control Flow (  )  ; }"
8850,"public com . anychart . core . stock . scrollerseries .  Step Area hatch Fill ( com . anychart . graphics . vector .  Pattern Fill pattern Fill ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "",  ( pattern Fill != null )  ? pattern Fill . get Js Base (  )  : null )  )  ;  return this ; }"
8851,public synchronized void close (  ) {  Closeable Reference . close Safely ( m Buf Ref )  ;  m Buf Ref = null ; }
8852,"public void add Native Libraries (  File native Folder )  throws  Apk Creation Exception,  Sealed Apk Exception,  Duplicate File Exception{ if  ( m Is Sealed )  {     throw new  Sealed Apk Exception ( ""APK is already sealed"" )  ;  } if  ( !native Folder . is Directory (  )  )  {     // not a directory? check if it's a file or doesn't exist     if  ( native Folder . exists (  )  )  {         throw new  Apk Creation Exception ( ""%s is not a folder"", native Folder )  ;      } else {         throw new  Apk Creation Exception ( ""%s does not exist"", native Folder )  ;      } }  File [  ]  abi List = native Folder . list Files (  )  ;  verbose Println ( "" Native folder: %s"", native Folder )  ;  if  ( abi List != null )  {     for  (  File abi : abi List )  {         if  ( abi . is Directory (  )  )  {             // ignore files              File [  ]  libs = abi . list Files (  )  ;              if  ( libs != null )  {                 for  (  File lib : libs )  {                     // are gdbserver executables                     if  ( lib . is File (  )  &&  ( PATTERN_NATIVELIB_EXT . matcher ( lib . get Name (  )  )  . matches (  )  || PATTERN_BITCODELIB_EXT . matcher ( lib . get Name (  )  )  . matches (  )  ||  ( m Debug Mode &&  Sdk Constants . FN_GDBSERVER . equals ( lib . get Name (  )  )  )  )  )  {                          String path =  Sdk Constants . FD_APK_NATIVE_LIBS + ""/"" + abi . get Name (  )  + ""/"" + lib . get Name (  )  ;                          try {                             do Add File ( lib, path )  ;                          } catch  ( IO Exception e )  {                             m Builder . clean Up (  )  ;                              throw new  Apk Creation Exception ( e, "" Failed to add %s"", lib )  ;                          }                     }                 }             }         }     } }}"
8853,public void set Expand Activity Overflow Button Content Description ( int resource Id ) {  Char Sequence content Description = get Context (  )  . get String ( resource Id )  ;  m Expand Activity Overflow Button Image . set Content Description ( content Description )  ; }
8854,public  Two Level Header finish Two Level (  ) { final  Refresh Kernel refresh Kernel = m Refresh Kernel ;  if  ( refresh Kernel != null )  {     refresh Kernel . finish Two Level (  )  ;  } return this ; }
8855,"public  Scale And Index index ( int index ) { return new  Scale And Index ( scale, index )  ; }"
8856,"public static  Function< Item,  Double> round Down ( final  String num Field, final  Number value ) { return new  Round Down Operator ( num Field, value )  ; }"
8857,"synchronized boolean maybe Add To Waiting Requests (  Request<?> request ) {  String cache Key = request . get Cache Key (  )  ;  // in flight .  if  ( m Waiting Requests . contains Key ( cache Key )  )  {     //  There is already a request in flight .   Queue up .       List< Request<?>> staged Requests = m Waiting Requests . get ( cache Key )  ;      if  ( staged Requests == null )  {         staged Requests = new  Array List<> (  )  ;      }     request . add Marker ( ""waiting-for-response"" )  ;      staged Requests . add ( request )  ;      m Waiting Requests . put ( cache Key, staged Requests )  ;      if  (  Volley Log . DEBUG )  {          Volley Log . d ( "" Request for cache Key=%s is in flight, putting on hold . "", cache Key )  ;      }     return true ;  } else {     //  Insert 'null' queue for this cache Key, indicating there is now a request in     // flight .      m Waiting Requests . put ( cache Key, null )  ;      request . set Network Request Complete Listener ( this )  ;      if  (  Volley Log . DEBUG )  {          Volley Log . d ( ""new request, sending to network %s"", cache Key )  ;      }     return false ;  }}"
8858,"public com . anychart . math .  Rect parent Bounds (  ) { return new com . anychart . math .  Rect ( js Base + "" . parent Bounds (  ) "" )  ; }"
8859,"public com . anychart . core . utils .  Chart A11y a11y (  ) { return new com . anychart . core . utils .  Chart A11y ( js Base + "" . a11y (  ) "" )  ; }"
8860,public static _ Fields find By Thrift Id ( int field Id ) { switch ( field Id )  {     case // ERROR_MESSAGE     1:         return ERROR_MESSAGE ;      case // SOLUTION_MESSAGE     2:         return SOLUTION_MESSAGE ;      default:         return null ;  }}
8861,"public  Base Model View Model_ on Unbind (  On Model Unbound Listener< Base Model View Model_,  Base Model View> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
8862,public boolean get Credential Flag (  ) { return credential Flag ; }
8863,"public void write Header Part (  Annotated Output out ) { throw If Not Prepared (  )  ;  int sz = type Ids . size (  )  ;  int offset =  ( sz == 0 )  ? 0 : get File Offset (  )  ;  if  ( sz >  Dex Format . MAX_TYPE_IDX + 1 )  {     throw new  Dex Index Overflow Exception ( "" Too many type references: "" + sz + "" ;  max is "" +  (  Dex Format . MAX_TYPE_IDX + 1 )  + "" . \n"" +  Main . get Too Many Ids Error Message (  )  )  ;  } if  ( out . annotates (  )  )  {     out . annotate ( 4, ""type_ids_size:   "" +  Hex . u4 ( sz )  )  ;      out . annotate ( 4, ""type_ids_off:    "" +  Hex . u4 ( offset )  )  ;  } out . write Int ( sz )  ;  out . write Int ( offset )  ; }"
8864,"private long read Uint (  Extractor Input input )  throws IO Exception,  Interrupted Exception{ input . peek Fully ( scratch . data, 0, 1 )  ;  int value = scratch . data [ 0 ]  & 0x FF ;  if  ( value == 0 )  {     return  Long . MIN_VALUE ;  } int mask = 0x80 ;  int length = 0 ;  while  (  ( value & mask )  == 0 )  {     mask >>= 1 ;      length++ ;  } value &= ~mask ;  input . peek Fully ( scratch . data, 1, length )  ;  for  ( int i = 0 ;  i < length ;  i++ )  {     value <<= 8 ;      value += scratch . data [ i + 1 ]  & 0x FF ;  } peek Length += length + 1 ;  return value ; }"
8865,"public com . anychart . core .  State Settings hovered (  ) { return new com . anychart . core .  State Settings ( js Base + "" . hovered (  ) "" )  ; }"
8866,"public com . anychart . core . stock . scrollerseries .  Range Area bounds (  Number x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
8867,public static  Locale get Context Language (  Context context ) { return get Local ( context . get Resources (  )  . get Configuration (  )  )  ; }
8868,"public com . anychart . core . cartesian . series .  Stick stick ( com . anychart . data .  Set data, com . anychart . enums .  Text Parsing Mode csv Settings ) { return new com . anychart . core . cartesian . series .  Stick (  String . format (  Locale . US, js Base + "" . stick ( %s, %s ) "",  ( data != null )  ? data . get Js Base (  )  : null,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
8869,"protected void cleanup Old Lib Files ( final  Context context, final  String library, final  String current Version ) { final  File workaround Dir = get Workaround Lib Dir ( context )  ;  final  File workaround File = get Workaround Lib File ( context, library, current Version )  ;  final  String mapped Library Name = library Loader . map Library Name ( library )  ;  final  File [  ]  existing Files = workaround Dir . list Files ( new  Filename Filter (  )  {     @ Override     public boolean accept (  File dir,  String filename )  {         return filename . starts With ( mapped Library Name )  ;      } } )  ;  if  ( existing Files == null )      return ;  for  ( final  File file : existing Files )  {     if  ( force || !file . get Absolute Path (  )  . equals ( workaround File . get Absolute Path (  )  )  )  {         file . delete (  )  ;      } }}"
8870,"public  Task< Void> set Value ( @ Nullable  Object value ) { return set Value Internal ( value,  Priority Utilities . parse Priority ( this . path, null ) , null )  ; }"
8871,"public void global To Local (  Number x Coord,  Number y Coord ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . global To Local ( %s, %s )  ; "", x Coord, y Coord )  )  ; }"
8872,public long get Object Count (  ) { return object Count ; }
8873,public boolean is Allow Writes On Ui Thread (  ) { return allow Writes On Ui Thread ; }
8874,"protected void init Attrs (  Attribute Set attrs, int def Style ) { list_card_layout_resource ID = R . layout . list_card_layout ;   Typed Array a = get Context (  )  . get Theme (  )  . obtain Styled Attributes ( attrs, R . styleable . card_options, def Style, def Style )  ;  try {     list_card_layout_resource ID = a . get Resource Id ( R . styleable . card_options_list_card_layout_resource ID, this . list_card_layout_resource ID )  ;  } finally {     a . recycle (  )  ;  }}"
8875,"public com . anychart . core . ui .  Title title (  ) { return new com . anychart . core . ui .  Title ( js Base + "" . title (  ) "" )  ; }"
8876,"static int get Reconciliation Mode ( final  Component Context c, final  Internal Node current, final  Set< String> keys ) { final  List< Component> components = current . get Components (  )  ;  final  List< String> component Keys = current . get Component Keys (  )  ;  final  Component root = current . get Head Component (  )  ;  // 1 . 0 check early exit conditions if  ( c == null || root == null || current instanceof  Nested Tree Holder )  {     return  Reconciliation Mode . RECREATE ;  } // 1 . 1  Check if any component has mutations for  ( int i = 0, size = components . size (  )  ;  i < size ;  i++ )  {     final  Component component = components . get ( i )  ;      final  String key =  Component Utils . get Global Key ( component, component Keys == null ? null : component Keys . get ( i )  )  ;      if  ( keys . contains ( key )  )  {         return  Reconciliation Mode . RECREATE ;      } } // 2 . 0  Check if any descendants have mutations final  String root Key =  Component Utils . get Global Key ( root, current . get Head Component Key (  )  )  ;  for  (  String key : keys )  {     if  ( key . starts With ( root Key )  )  {         return  Reconciliation Mode . RECONCILE ;      } } return  Reconciliation Mode . COPY ; }"
8877,"public com . anychart . core . resource .  Grid draw Left Line (  Boolean enabled ) { return new com . anychart . core . resource .  Grid (  String . format (  Locale . US, js Base + "" . draw Left Line ( %s ) "", enabled )  )  ; }"
8878,public boolean can Merge (  ) { // Determine recursive member count int count = m Members . size (  )  ;  if  ( m Split )  {     for  ( int i = 0 ;  i < CHILD_COUNT ;  ++i )  {         count += m Children [ i ]  . m Members . size (  )  ;      } } return  ( count <= m Merge Threshold )  ; }
8879,public void set Tag Encoder (  Pattern Layout Encoder encoder ) { this . tag Encoder = encoder ; }
8880,public  Calendar [  ]  get Selectable Days (  ) { return selectable Days . is Empty (  )  ? null : selectable Days . to Array ( new  Calendar [ 0 ]  )  ; }
8881,"public  Equals Builder append ( long [  ]  lhs, long [  ]  rhs ) { if  ( is Equals == false )  {     return this ;  } if  ( lhs == rhs )  {     return this ;  } if  ( lhs == null || rhs == null )  {     this . set Equals ( false )  ;      return this ;  } if  ( lhs . length != rhs . length )  {     this . set Equals ( false )  ;      return this ;  } for  ( int i = 0 ;  i < lhs . length && is Equals ;  ++i )  {     append ( lhs [ i ] , rhs [ i ]  )  ;  } return this ; }"
8882,"public void test Power Set Hash Code_input Hash Code Times Too Far Value Is Zero (  ) {  Set< Object> sum To Eighth Max Int Elements = new Hash Set ( object With Hash Code ( 1 << 29 ) , object With Hash Code ( 0 )  )  ;  assert Power Set Hash Code ( 1 << 30, sum To Eighth Max Int Elements )  ;   Set< Object> sum To Quarter Max Int Elements = new Hash Set ( object With Hash Code ( 1 << 30 ) , object With Hash Code ( 0 )  )  ;  assert Power Set Hash Code ( 1 << 31, sum To Quarter Max Int Elements )  ; }"
8883,"private static  Edit List normalize (  Sequence Comparator<? super S> cmp,  Edit List e, S a, S b ) {  Edit prev = null ;  for  ( int i = e . size (  )  - 1 ;  i >= 0 ;  i-- )  {      Edit cur = e . get ( i )  ;       Edit .  Type cur Type = cur . get Type (  )  ;      int max A =  ( prev == null )  ? a . size (  )  : prev . begin A ;      int max B =  ( prev == null )  ? b . size (  )  : prev . begin B ;      if  ( cur Type ==  Edit .  Type . INSERT )  {         while  ( cur . end A < max A && cur . end B < max B && cmp . equals ( b, cur . begin B, b, cur . end B )  )  {             cur . shift ( 1 )  ;          }     } else if  ( cur Type ==  Edit .  Type . DELETE )  {         while  ( cur . end A < max A && cur . end B < max B && cmp . equals ( a, cur . begin A, a, cur . end A )  )  {             cur . shift ( 1 )  ;          }     }     prev = cur ;  } return e ; }"
8884,"public com . anychart . core . ui . scroller .  Thumbs fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
8885,"public void read Out Params From Proxy (  Variable Element param,  Param Type param Type,  Method Spec .  Builder method Builder ) {}"
8886,public  Vertex Attributes get Vertex Attributes (  ) { return vertices . get Attributes (  )  ; }
8887,public  String get First (  Asf Field Key asf Key )  throws  Key Not Found Exception{ if  ( asf Key == null )  {     throw new  Key Not Found Exception (  )  ;  } return super . get First ( asf Key . get Field Name (  )  )  ; }
8888,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
8889,"public com . anychart . core . resource .  Grid top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
8890,public  String get Content (  ) { return content ; }
8891,"public com . anychart . core . ui .  Labels Factory labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . labels (  ) "" )  ; }"
8892,"public static  Method find Method Exact (  Class<?> clazz,  String method Name,  Object .  .  .  parameter Types ) {  Class<?> [  ]  parameter Classes = null ;  for  ( int i = parameter Types . length - 1 ;  i >= 0 ;  i-- )  {      Object type = parameter Types [ i ]  ;      if  ( type == null )          throw new  Class Not Found Error ( ""parameter type must not be null"", null )  ;      // ignore trailing callback     if  ( type instanceof XC_ Method Hook )          continue ;      if  ( parameter Classes == null )          parameter Classes = new  Class<?> [ i + 1 ]  ;      if  ( type instanceof  Class )          parameter Classes [ i ]  =  (  Class<?> )  type ;      else if  ( type instanceof  String )          parameter Classes [ i ]  = find Class (  (  String )  type, clazz . get Class Loader (  )  )  ;      else         throw new  Class Not Found Error ( ""parameter type must either be specified as  Class or  String"", null )  ;  } // if there are no arguments for the method if  ( parameter Classes == null )      parameter Classes = new  Class<?> [ 0 ]  ;  return find Method Exact ( clazz, method Name, parameter Classes )  ; }"
8893,public  String get (  Object jvm Class Name ) {  String found = super . get ( jvm Class Name )  ;  if  ( found == null && parent != null )      return parent . get ( jvm Class Name )  ;  return found ; }
8894,public BUILDER set Data Source Supplier ( @ Nullable  Supplier< Data Source<IMAGE>> data Source Supplier ) { m Data Source Supplier = data Source Supplier ;  return get This (  )  ; }
8895,"public static  Activity Manager .  Running App Process Info get App Process Info (  String package Name,  Context context ) { final  Activity Manager actman =  (  Activity Manager )  context . get System Service (  Context . ACTIVITY_SERVICE )  ;  final  List< Activity Manager .  Running App Process Info> processes = actman . get Running App Processes (  )  ;   Activity Manager .  Running App Process Info proc Info = null ;  //  Yay .  if  ( processes != null )  {     for  (  Activity Manager .  Running App Process Info info : processes )  {         if  ( info . process Name . equals ( package Name )  )  {             proc Info = info ;              break ;          }     } } return proc Info ; }"
8896,"public static  Plugin Application Client get Or Create (  String pn,  Class Loader plg CL,  Component List cl,  Plugin Info pi ) { if  ( pi . get Framework Version (  )  <= 1 )  {     // 仅框架版本为2及以上的，才支持 Application的加载     if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, ""PAC . create (  ) :  Framework Ver less than 1 .  cl="" + plg CL )  ;      }     return null ;  }  Plugin Application Client pac = get Running ( pn )  ;  if  ( pac != null )  {     // 已经初始化过 Application？直接返回     if  ( LOG )  {          Log Debug . d ( PLUGIN_TAG, ""PAC . create (  ) :  Already  Loaded . "" + plg CL )  ;      }     return pac ;  } if  ( LOG )  {      Log Debug . d ( PLUGIN_TAG, ""PAC . create (  ) :  Create and load  Application .  cl="" + plg CL )  ;  } // 初始化所有需要反射的方法 try {     init Methods (  )  ;  } catch  (  Throwable e )  {     if  (  Build Config . DEBUG )  {         e . print Stack Trace (  )  ;      }     return null ;  } final  Plugin Application Client pac New = new  Plugin Application Client ( plg CL, cl, pi )  ;  if  ( pac New . is Valid (  )  )  {     s Running Clients . put ( pn, new  Weak Reference<> ( pac New )  )  ;      if  (  Build . VERSION . SDK_INT >= 14 )  {          Re Plugin Internal . get App Context (  )  . register Component Callbacks ( new  Component Callbacks2 (  )  {             @ Override             public void on Trim Memory ( int level )  {                 pac New . call On Trim Memory ( level )  ;              }             @ Override             public void on Configuration Changed (  Configuration new Config )  {                 pac New . call On Configuration Changed ( new Config )  ;              }             @ Override             public void on Low Memory (  )  {                 pac New . call On Low Memory (  )  ;              }         } )  ;      }     return pac New ;  } else {     //  Application对象没有初始化出来，则直接按失败处理     return null ;  }}"
8897,public void set Increasing Color ( int color ) { m Increasing Color = color ; }
8898,"public void test Reverse Swipe First View Callback (  )  throws  Interrupted Exception{  Motion Event Utils . dispatch Reverse Swipe Motion Events And Wait ( get Instrumentation (  ) , m Abs List View, 0 )  ;  assert That ( m Swipe Touch Listener . after View Fling Called, is ( true )  )  ;  assert That ( m Swipe Touch Listener . position, is ( 0 )  )  ; }"
8899,public boolean add ( E e ) { // check before removing check Not Null ( e )  ;  if  ( max Size == 0 )  {     return true ;  } if  ( size (  )  == max Size )  {     delegate . remove (  )  ;  } delegate . add ( e )  ;  return true ; }
8900,public  Runtime Exception get Unexpected Exception (  ) {  Assertions . check State ( type == TYPE_UNEXPECTED )  ;  return  (  Runtime Exception )   Assertions . check Not Null ( cause )  ; }
8901,"private boolean delete ( int i ) { check Invariants (  )  ;  final  Object [  ]  elements = this . elements ;  final int mask = elements . length - 1 ;  final int h = head ;  final int t = tail ;  final int front =  ( i - h )  & mask ;  final int back =  ( t - i )  & mask ;  //  Invariant: head <= i < tail mod circularity if  ( front >=  (  ( t - h )  & mask )  )      throw new  Concurrent Modification Exception (  )  ;  //  Optimize for least element motion if  ( front < back )  {     if  ( h <= i )  {          System . arraycopy ( elements, h, elements, h + 1, front )  ;      } else {         //  Wrap around          System . arraycopy ( elements, 0, elements, 1, i )  ;          elements [ 0 ]  = elements [ mask ]  ;           System . arraycopy ( elements, h, elements, h + 1, mask - h )  ;      }     elements [ h ]  = null ;      head =  ( h + 1 )  & mask ;      return false ;  } else {     if  ( i < t )  {         //  Copy the null tail as well          System . arraycopy ( elements, i + 1, elements, i, back )  ;          tail = t - 1 ;      } else {         //  Wrap around          System . arraycopy ( elements, i + 1, elements, i, mask - i )  ;          elements [ mask ]  = elements [ 0 ]  ;           System . arraycopy ( elements, 1, elements, 0, t )  ;          tail =  ( t - 1 )  & mask ;      }     return true ;  }}"
8902,public float get Width (  ) { return m Polyline Options . get Width (  )  ; }
8903,"public com . anychart . core . pert .  Milestones stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8904,"public com . anychart . core . axismarkers .  Gantt Line stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8905,"protected static int get Format Language Score (  Format format, @ Nullable  String language ) { if  ( format . language == null || language == null )  {     return 0 ;  } if  (  Text Utils . equals ( format . language, language )  )  {     return 3 ;  } //  Partial match where one language is a subset of the other  ( e . g .  ""zho-hans"" and ""zho-hans-hk"" )  if  ( format . language . starts With ( language )  || language . starts With ( format . language )  )  {     return 2 ;  } //  Partial match where only the main language tag is the same  ( e . g .  ""fra-fr"" and ""fra-ca"" )  if  ( format . language . length (  )  >= 3 && language . length (  )  >= 3 && format . language . substring ( 0, 3 )  . equals ( language . substring ( 0, 3 )  )  )  {     return 1 ;  } return 0 ; }"
8906,"public void offset Original Indices Between ( int start, int end, int offset ) { for  ( int i = start ;  i < end && i < m Items . size (  )  ;  i++ )  {     m Items . get ( i )  . m Adapter Index += offset ;  }}"
8907,public int exits (  ) { return exit == null ? 0 : exit . length ; }
8908,public static  Type get First Non Optional Type (  Field field ) { try {     return FIRST_NON_OPTIONAL_TYPE_CACHE . get ( field )  ;  } catch  (  Execution Exception e )  {     throw new  Runtime Exception ( e )  ;  }}
8909,public  Animator Builder delay ( final int delay ) { this . delay = delay ;  return this ; }
8910,public long get Serial Number For User ( V User Handle user ) { return get User Serial Number ( user . get Identifier (  )  )  ; }
8911,"public  Map< String,  Object> get Exported Custom Direct Event Type Constants (  ) { return null ; }"
8912,public int get Access Flags (  ) { return access Flags ; }
8913,public void placeholder Id Flag_after Applying Id Via Other Request Options_is Set (  ) { assert That ( options . placeholder ( new  Color Drawable (  Color . RED )  )  . apply ( new  Request Options (  )  . apply ( new  Request Options (  )  . placeholder ( android . R . drawable . star_on )  )  )  . get Placeholder Drawable (  )  )  . is Null (  )  ; }
8914,"public static void load Exopackage Jars (  Context context, boolean exopackage Enabled For Modules ) { if  ( exopackage Enabled For Modules )  {     //  Modular exopackage jars go to the delegating classloader so they can be swapped later     final  File module Directory = new  File ( ""/data/local/tmp/exopackage/"" + context . get Package Name (  )  + ""/modular-dex"" )  ;      final  List< File> dex Jars = get Jar Files From Containing Directory ( module Directory )  ;      final  File dex Opt Dir = context . get Dir ( ""exopackage_modular_dex_opt"",  Context . MODE_PRIVATE )  ;       Delegating Class Loader . get Instance (  )  . set Dex Opt Dir ( dex Opt Dir )  . reset Delegate ( dex Jars )  ;      clean Up Old Odex Files ( dex Opt Dir, dex Jars )  ;  } //  Normal exopackage jars go to system CL  File secondary Directory = new  File ( ""/data/local/tmp/exopackage/"" + context . get Package Name (  )  + ""/secondary-dex"" )  ;  final  List< File> dex Jars = get Jar Files From Containing Directory ( secondary Directory )  ;   File dex Opt Dir = context . get Dir ( ""exopackage_dex_opt"",  Context . MODE_PRIVATE )  ;   System Class Loader Adder . install Dex Jars ( context . get Class Loader (  ) , dex Opt Dir, dex Jars )  ;  clean Up Old Odex Files ( dex Opt Dir, dex Jars )  ; }"
8915,"public void print ( com . anychart . graphics . vector .  Paper Size paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "",  ( paper Size Or Options != null )  ? paper Size Or Options . get Js Base (  )  : null, landscape )  )  ; }"
8916,"public void on Cordova Init (  Plugin Manager plugin Manager ) { this . plugin Manager = plugin Manager ;  if  ( saved Result != null )  {     on Activity Result ( saved Result . request Code, saved Result . result Code, saved Result . intent )  ;  } else if  ( activity Was Destroyed )  {     //  If there was no  Activity result, we still need to send out the resume event if the     //  Activity was destroyed by the OS     activity Was Destroyed = false ;      if  ( plugin Manager != null )  {          Core Android app Plugin =  (  Core Android )  plugin Manager . get Plugin (  Core Android . PLUGIN_NAME )  ;          if  ( app Plugin != null )  {             JSON Object obj = new JSON Object (  )  ;              try {                 obj . put ( ""action"", ""resume"" )  ;              } catch  ( JSON Exception e )  {                 LOG . e ( TAG, "" Failed to create event message"", e )  ;              }             app Plugin . send Resume Event ( new  Plugin Result (  Plugin Result .  Status . OK, obj )  )  ;          }     } }}"
8917,protected final  Renderer Configuration get Configuration (  ) { return configuration ; }
8918,public  Iterable Of Protos Fluent Assertion<M> ignoring Field Absence Of Fields (  Iterable< Integer> field Numbers ) { return using Config ( config . ignoring Field Absence Of Fields ( field Numbers )  )  ; }
8919,protected void add Processed File (  Entry entry ) { output Files . add ( entry )  ; }
8920,"public static void install (  Config config ) { if  ( config == null )  {     throw new  Illegal Argument Exception ( "" Config must not be null!"" )  ;  } if  ( is Installed (  )  )  {     throw new  Illegal State Exception ( "" Block Canary Ex installed"" )  ;  } s Config = config ;   Log Writer . init If Not Inited ( config . get Context (  ) , config . provide Log Path (  ) , config . enable Save Log (  )  )  ;   Log Writer . clean Obsolete (  )  ;   Block Monitor . install ( config )  ;   Block Monitor . register Block Observer ( s Config )  ;   Block Monitor . register Block Observer ( DISPLAY_SERVICE )  ;  set Enabled ( s Config . get Context (  ) ,  Display Activity . class, s Config . display Notification (  )  )  ; }"
8921,public void make Initialized (  Type type ) { locals . make Initialized ( type )  ;  stack . make Initialized ( type )  ; }
8922,"public com . anychart . core . axismarkers .  Current Price Indicator stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8923,"private void init Views (  ) { send Attachment =  (  Button )  find View By Id ( R . id . mobicom_attachment_send_btn )  ;  cancel Attachment =  (  Button )  find View By Id ( R . id . mobicom_attachment_cancel_btn )  ;  gallery Images Grid View =  (  Grid View )  find View By Id ( R . id . mobicom_attachment_grid_ View )  ;  message Edit Text =  (  Edit Text )  find View By Id ( R . id . mobicom_attachment_edit_text )  ;  cancel Attachment . set On Click Listener ( new  View .  On Click Listener (  )  {     @ Override     public void on Click (  View v )  {          Intent intent = new  Intent (  )  ;          set Result ( RESULT_CANCELED, intent )  ;          finish (  )  ;      } } )  ;  send Attachment . set On Click Listener ( new  View .  On Click Listener (  )  {     @ Override     public void on Click (  View v )  {         if  ( attachment File List . is Empty (  )  )  {              Toast . make Text ( get Application Context (  ) , R . string . mobicom_select_attachment_text,  Toast . LENGTH_SHORT )  . show (  )  ;              return ;          }         if  ( !validate Caption Text And Show Dialog (  )  )  {              Utils . print Log (  Mobi Com Attachment Selector Activity . this, TAG, "" Caption  Text is not valid"" )  ;              return ;          }         if  ( image Uri != null )  {             for  (  Uri uri : attachment File List )  {                 try {                      String file Path = uri . get Path (  )  ;                      if  (  Text Utils . is Empty ( file Path )  )  {                          Toast . make Text (  Mobi Com Attachment Selector Activity . this, R . string . info_file_attachment_error,  Toast . LENGTH_LONG )  . show (  )  ;                          return ;                      }                      Message message To Send = new  Message (  )  ;                      if  ( group ID != 0 )  {                         message To Send . set Group Id ( group ID )  ;                      } else {                         message To Send . set To ( user ID )  ;                          message To Send . set Contact Ids ( user ID )  ;                      }                     message To Send . set Content Type (  Message .  Content Type . ATTACHMENT . get Value (  )  )  ;                      message To Send . set Read (  Boolean . TRUE )  ;                      message To Send . set Store On Device (  Boolean . TRUE )  ;                      if  ( message To Send . get Created At Time (  )  == null )  {                         message To Send . set Created At Time (  System . current Time Millis (  )  + user Preferences . get Device Time Offset (  )  )  ;                      }                     message To Send . set Send To Device (  Boolean . FALSE )  ;                      message To Send . set Type (  Message .  Message Type . MT_OUTBOX . get Value (  )  )  ;                      message To Send . set Message ( message Edit Text . get Text (  )  . to String (  )  )  ;                      message To Send . set Device Key String ( user Preferences . get Device Key String (  )  )  ;                      message To Send . set Source (  Message .  Source . MT_MOBILE_APP . get Value (  )  )  ;                      if  ( ! Text Utils . is Empty ( file Path )  )  {                          List< String> file Paths = new  Array List< String> (  )  ;                          file Paths . add ( file Path )  ;                          message To Send . set File Paths ( file Paths )  ;                      }                      Intent start Conversation Activity = new  Intent (  Mobi Com Attachment Selector Activity . this,  Conversation Activity . class )  ;                      if  ( group ID != 0 )  {                         start Conversation Activity . put Extra (  Conversation UI Service . GROUP_ID, group ID )  ;                          start Conversation Activity . put Extra (  Conversation UI Service . GROUP_NAME, group Name )  ;                          start Conversation Activity . put Extra (  Conversation UI Service . FORWARD_MESSAGE,  Gson Utils . get Json From Object ( message To Send, message To Send . get Class (  )  )  )  ;                      } else {                         start Conversation Activity . put Extra (  Conversation UI Service . USER_ID, user ID )  ;                          start Conversation Activity . put Extra (  Conversation UI Service . DISPLAY_NAME, display Name )  ;                          start Conversation Activity . put Extra (  Conversation UI Service . FORWARD_MESSAGE,  Gson Utils . get Json From Object ( message To Send, message To Send . get Class (  )  )  )  ;                      }                     start Activity ( start Conversation Activity )  ;                      finish (  )  ;                  } catch  (  Exception e )  {                     e . print Stack Trace (  )  ;                  }             }         } else {              Intent intent = new  Intent (  )  ;              intent . put Parcelable Array List Extra ( MULTISELECT_SELECTED_FILES, attachment File List )  ;              intent . put Extra ( MULTISELECT_MESSAGE, message Edit Text . get Text (  )  . to String (  )  )  ;              set Result ( RESULT_OK, intent )  ;              finish (  )  ;          }     } } )  ; }"
8924,"public  Gson Builder set Exclusion Strategies (  Exclusion Strategy .  .  .  strategies ) { for  (  Exclusion Strategy strategy : strategies )  {     excluder = excluder . with Exclusion Strategy ( strategy, true, true )  ;  } return this ; }"
8925,"public static byte [  ]  to Byte Array ( char value ) { return new byte [  ]  {  ( byte )   ( value >> 8 ) ,  ( byte )  value } ; }"
8926,"private void compile Shaders (  String vertex Shader,  String fragment Shader ) { vertex Shader Handle = load Shader ( GL20 . GL_VERTEX_SHADER, vertex Shader )  ;  fragment Shader Handle = load Shader ( GL20 . GL_FRAGMENT_SHADER, fragment Shader )  ;  if  ( vertex Shader Handle == -1 || fragment Shader Handle == -1 )  {     is Compiled = false ;      return ;  } program = link Program ( create Program (  )  )  ;  if  ( program == -1 )  {     is Compiled = false ;      return ;  } is Compiled = true ; }"
8927,"public static  String to String (  Object val ) { for  (  ;   ;   )  {     if  ( val == null )  {         return ""null"" ;      }     if  ( val ==  Undefined . instance )  {         return ""undefined"" ;      }     if  ( val instanceof  String )  {         return  (  String )  val ;      }     if  ( val instanceof  Number )  {         // about  Numbers?         return number To String (  (  (  Number )  val )  . double Value (  ) , 10 )  ;      }     if  ( val instanceof  Scriptable )  {         val =  (  (  Scriptable )  val )  . get Default Value (  String Class )  ;          if  ( val instanceof  Scriptable )  {             throw error With Class Name ( ""msg . primitive . expected"", val )  ;          }         continue ;      }     return val . to String (  )  ;  }}"
8928,public boolean is Equal Node (  Node arg ) { if  ( arg . get Node Type (  )  == this . get Node Type (  )  )  {      Namespace Node other =  (  Namespace Node )  arg ;      if  ( other . name == null && this . name != null )          return false ;      else if  ( other . name != null && this . name == null )          return false ;      else if  ( other . value == null && this . value != null )          return false ;      else if  ( other . value != null && this . value == null )          return false ;      else if  ( other . name == null && this . name == null )  {         return other . value . equals ( this . value )  ;      }     return other . name . equals ( this . name )  && other . value . equals ( this . value )  ;  } return false ; }
8929,public void set Scroll Position ( int position ) { this . m Scroll Position = position ; }
8930,"void write Non Fatal Exception ( @ Non Null final  Thread thread, @ Non Null final  Throwable ex ) { //  Capture and close over the current time, so that we get the exact call time, // rather than the time at which the task executes .  final  Date time = new  Date (  )  ;  background Worker . submit ( new  Runnable (  )  {     @ Override     public void run (  )  {         if  ( !is Handling Exception (  )  )  {             long timestamp Seconds = get Timestamp Seconds ( time )  ;              final  String current Session Id = get Current Session Id (  )  ;              if  ( current Session Id == null )  {                  Logger . get Logger (  )  . w ( "" Tried to write a non-fatal exception while no session was open . "" )  ;                  return ;              }             reporting Coordinator . persist Non Fatal Event ( ex, thread, current Session Id, timestamp Seconds )  ;          }     } } )  ; }"
8931,"void add Bar ( boolean black, int width ) { for  ( int ii = 0 ;  ii < width ;  ii++ )  {     set ( current Location++, black )  ;  }}"
8932,public  On Item Drag Event Listener get On Item Drag Event Listener (  ) { return m Item Drag Event Listener ; }
8933,"public com . anychart . core . axes .  Circular Ticks stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
8934,public boolean contains ( long target ) { return index Of ( target )  >= 0 ; }
8935,"public  Realm Query<E> greater Than Or Equal To (  String field Name,  Decimal128 value ) { realm . check If Valid (  )  ;   Field Descriptor fd = schema . get Field Descriptors ( field Name,  Realm Field Type . DECIMAL128 )  ;  this . query . greater Than Or Equal ( fd . get Column Keys (  ) , fd . get Native Table Pointers (  ) , value )  ;  return this ; }"
8936,public void set Back Ground Color ( int color ) { rl Common Title . set Background Color ( color )  ; }
8937,"public  Generate Default Layout Method_ on Visibility Changed (  On Model Visibility Changed Listener< Generate Default Layout Method_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
8938,public static  String fetch Plugin Name By Class Loader (  Class Loader cl ) { return  Factory . fetch Plugin Name ( cl )  ; }
8939,"Immutable Set< Path> add Proguard Commands (  Set< Path> classpath Entries To Dex,  Set< Path> deps Proguard Configs, boolean skip Proguard,  Immutable List .  Builder< Step> steps,  Buildable Context buildable Context,  Build Context build Context ) { //  Create list of proguard  Configs for the app project and its dependencies  Immutable Set .  Builder< Path> proguard Configs Builder =  Immutable Set . builder (  )  ;  proguard Configs Builder . add All ( deps Proguard Configs )  ;  if  ( proguard Config . is Present (  )  )  {     proguard Configs Builder . add ( build Context . get Source Path Resolver (  )  . get Absolute Path ( proguard Config . get (  )  )  )  ;  } for  (  Source Path aapt Generated Proguard Config File : proguard Configs )  {     proguard Configs Builder . add ( build Context . get Source Path Resolver (  )  . get Absolute Path ( aapt Generated Proguard Config File )  )  ;  } //  Transform our input classpath to a set of output locations for each input classpath .  // TODO ( devjasta ) : the output path we choose is the result of a slicing function against // input classpath .   This is fragile and should be replaced with knowledge of the  Build Target .   Immutable Map< Path,  Path> input Output Entries = classpath Entries To Dex . stream (  )  . collect (  Immutable Map . to Immutable Map ( java . util . function .  Function . identity (  ) ,  (  path )  ->  Android Binary Buildable . get Proguard Output From Input Classpath ( get Proguard Inputs Dir (  ) , path )  )  )  ;  //  Run  Pro Guard on the classpath entries .   Pro Guard Obfuscate Step . create ( android Platform Target, java Runtime Launcher . get Command Prefix ( build Context . get Source Path Resolver (  )  ) , get Project Filesystem (  ) , proguard Jar Override . is Present (  )  ?  Optional . of ( build Context . get Source Path Resolver (  )  . get Absolute Path ( proguard Jar Override . get (  )  )  )  :  Optional . empty (  ) , proguard Max Heap Size, proguard Agent Path, proguard Configs Builder . build (  ) , sdk Proguard Config, optimization Passes, proguard Jvm Args, input Output Entries, build Context . get Source Path Resolver (  )  . get All Absolute Paths ( additional Jars For Proguard And Desugar ) , get Proguard Config Dir (  ) , buildable Context, build Context, skip Proguard, steps )  ;  //  Pro Guard then return the input classes to dex .  if  ( skip Proguard )  {     return  Immutable Set . copy Of ( input Output Entries . key Set (  )  )  ;  } else {     return  Immutable Set . copy Of ( input Output Entries . values (  )  )  ;  }}"
8940,"public final void add Scrollable Footer With Delay ( @ Non Null final T footer Item, @ Int Range ( from = 0 )  long delay, final boolean scroll To Position ) { log . d ( "" Enqueued adding scrollable footer  ( %sms )  %s"", delay, get Class Name ( footer Item )  )  ;  m Handler . post Delayed ( new  Runnable (  )  {     @ Override     public void run (  )  {         if  ( add Scrollable Footer ( footer Item )  && scroll To Position )  {             smooth Scroll To Position ( get Global Position Of ( footer Item )  )  ;          }     } }, delay )  ; }"
8941,public void reset (  ) { samples . clear (  )  ;  current Sort Order = SORT_ORDER_NONE ;  next Sample Index = 0 ;  total Weight = 0 ; }
8942,"public final void set Image ( @ Non Null  Image Source image Source,  Image View State state ) { set Image ( image Source, null, state )  ; }"
8943,"public com . anychart . standalones .  Resource Timeline labels (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
8944,"Mutation Batch decode Mutation Batch ( com . google . firebase . firestore . proto .  Write Batch batch ) { int batch Id = batch . get Batch Id (  )  ;   Timestamp local Write Time = rpc Serializer . decode Timestamp ( batch . get Local Write Time (  )  )  ;  int base Mutations Count = batch . get Base Writes Count (  )  ;   List< Mutation> base Mutations = new  Array List<> ( base Mutations Count )  ;  for  ( int i = 0 ;  i < base Mutations Count ;  i++ )  {     base Mutations . add ( rpc Serializer . decode Mutation ( batch . get Base Writes ( i )  )  )  ;  }  List< Mutation> mutations = new  Array List<> ( batch . get Writes Count (  )  )  ;  // TODO ( b/174608374 ) :  Remove this code once we perform a schema migration .  for  ( int i = 0 ;  i < batch . get Writes Count (  )  ;  ++i )  {      Write current Mutation = batch . get Writes ( i )  ;      boolean has Transform = i + 1 < batch . get Writes Count (  )  && batch . get Writes ( i + 1 )  . has Transform (  )  ;      if  ( has Transform )  {         hard Assert ( batch . get Writes ( i )  . has Update (  ) , "" Transform Mutation should be preceded by a patch or set mutation"" )  ;           Builder new Mutation Builder =  Write . new Builder ( current Mutation )  ;           Write transform Mutation = batch . get Writes ( i + 1 )  ;          for  (  Field Transform field Transform : transform Mutation . get Transform (  )  . get Field Transforms List (  )  )  {             new Mutation Builder . add Update Transforms ( field Transform )  ;          }         mutations . add ( rpc Serializer . decode Mutation ( new Mutation Builder . build (  )  )  )  ;          ++i ;      } else {         mutations . add ( rpc Serializer . decode Mutation ( current Mutation )  )  ;      } } return new  Mutation Batch ( batch Id, local Write Time, base Mutations, mutations )  ; }"
8945,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
8946,"public com . anychart . core . ui .  Labels Factory labels (  ) { return new com . anychart . core . ui .  Labels Factory ( js Base + "" . labels (  ) "" )  ; }"
8947,public void set Drag Start Item Rotation Animation Interpolator (  Interpolator interpolator ) { m Dragging Item Effects Info . rotation Interpolator = interpolator ; }
8948,"public com . anychart . charts .  Venn fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
8949,"public void action Performed (  Action Event e ) { int pos = view To Model ( new  Point ( popup . x, popup . y )  )  ;  popup . set Visible ( false )  ;   String cmd = e . get Action Command (  )  ;  int line = -1 ;  try {     line = get Line Of Offset ( pos )  ;  } catch  (  Exception exc )  { } if  ( cmd . equals ( "" Set  Breakpoint"" )  )  {     w . set Break Point ( line + 1 )  ;  } else if  ( cmd . equals ( "" Clear  Breakpoint"" )  )  {     w . clear Break Point ( line + 1 )  ;  } else if  ( cmd . equals ( "" Run"" )  )  {     w . load (  )  ;  }}"
8950,"public com . anychart . core . ui .  Chart Scroller min Height (  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", wrap Quotes ( height )  )  )  ;  return this ; }"
8951,"public  Custom Variables put (  String index, JSON Array values ) { if  ( values . length (  )  == 2 && index != null )  {     m Vars . put ( index, values )  ;  } else      Timber . tag ( TAG )  . w ( ""values . length (  )  should be equal 2"" )  ;  return this ; }"
8952,"public static  Lifecycle Transformer<T> bind Fragment ( @ Non Null final  Observable< Fragment Event> lifecycle ) { return bind ( lifecycle, FRAGMENT_LIFECYCLE )  ; }"
8953,"private  Activity Leak Result check For Leak (  Heap Snapshot heap Snapshot,  String ref Key ) { long analysis Start Nano Time =  System . nano Time (  )  ;  try {     final  Snapshot snapshot = heap Snapshot . get Snapshot (  )  ;      final  Instance leaking Ref = find Leaking Reference ( ref Key, snapshot )  ;      //  False alarm, weak reference was cleared in between key check and heap dump .      if  ( leaking Ref == null )  {         return  Activity Leak Result . no Leak (  Analyze Util . since ( analysis Start Nano Time )  )  ;      }     return find Leak Trace ( analysis Start Nano Time, snapshot, leaking Ref )  ;  } catch  (  Throwable e )  {     e . print Stack Trace (  )  ;      return  Activity Leak Result . failure ( e,  Analyze Util . since ( analysis Start Nano Time )  )  ;  }}"
8954,"public int get View X (  Transition Values values ) { return get View Coordinate ( values, 0 )  ; }"
8955,"protected void on Pause (  ) { super . on Pause (  )  ;  LOG . d ( TAG, "" Paused the activity . "" )  ;  if  ( this . app View != null )  {     // CB-9382  If there is an activity that started for result and main activity is waiting for callback     // result, we shoudn't stop  Web View  Javascript timers, as activity for result might be using them     boolean keep Running = this . keep Running || this . cordova Interface . activity Result Callback != null ;      this . app View . handle Pause ( keep Running )  ;  }}"
8956,"public final  Immutable Map<K, E> unique Index (  Function<? super E, K> key Function ) { return  Maps . unique Index ( get Delegate (  ) , key Function )  ; }"
8957,"public void orientation (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . orientation (  )  ; "" )  ; }"
8958,public void set Text Field Filter ( @ Null  Text Field Filter filter ) { this . filter = filter ; }
8959,"public static synchronized  Firebase Database get Instance ( @ Non Null  Firebase App app, @ Non Null  String url ) { if  (  Text Utils . is Empty ( url )  )  {     throw new  Database Exception ( "" Failed to get  Firebase Database instance:  Specify  Database URL within "" + "" Firebase App or from your get Instance (  )  call . "" )  ;  } check Not Null ( app, "" Provided  Firebase App must not be null . "" )  ;   Firebase Database Component component = app . get (  Firebase Database Component . class )  ;  check Not Null ( component, "" Firebase  Database component is not present . "" )  ;   Parsed Url parsed Url =  Utilities . parse Url ( url )  ;  if  ( !parsed Url . path . is Empty (  )  )  {     throw new  Database Exception ( "" Specified  Database URL '"" + url + ""' is invalid .   It should point to the root of a "" + "" Firebase  Database but it includes a path: "" + parsed Url . path . to String (  )  )  ;  } return component . get ( parsed Url . repo Info )  ; }"
8960,"public com . anychart . charts .  Tree Map select Marquee Fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
8961,"static int less Than Branch Free ( int x, int y ) { // to make sure bit twiddling works as expected .  return ~~ ( x - y )  >>>  (  Integer . SIZE - 1 )  ; }"
8962,"private static  String day2 String ( int day ) { switch ( day )  {     case SU:         return ""SU"" ;      case MO:         return ""MO"" ;      case TU:         return ""TU"" ;      case WE:         return ""WE"" ;      case TH:         return ""TH"" ;      case FR:         return ""FR"" ;      case SA:         return ""SA"" ;      default:         throw new  Illegal Argument Exception ( ""bad day argument: "" + day )  ;  }}"
8963,"private static int get Digest Algorithm ( X509 Certificate cert ) {  String sig Alg = cert . get Sig Alg Name (  )  . to Upper Case (  Locale . US )  ;  if  ( ""SHA1 WITHRSA"" . equals ( sig Alg )  || ""MD5 WITHRSA"" . equals ( sig Alg )  )  {     return USE_SHA1 ;  } else if  ( sig Alg . starts With ( ""SHA256 WITH"" )  )  {     return USE_SHA256 ;  } else {     throw new  Illegal Argument Exception ( ""unsupported signature algorithm \"""" + sig Alg + ""\"" in cert  [ "" + cert . get Subject DN (  )  )  ;  }}"
8964,"public com . anychart . charts .  Waterfall container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
8965,"public  Recycler View .  Adapter create Wrapped Adapter ( @ Non Null  Recycler View .  Adapter adapter ) { if  ( !adapter . has Stable Ids (  )  )  {     throw new  Illegal Argument Exception ( "" The passed adapter does not support stable I Ds"" )  ;  } if  ( m Wrapper Adapter != null )  {     throw new  Illegal State Exception ( ""already have a wrapped adapter"" )  ;  } m Wrapper Adapter = new  Draggable Item Wrapper Adapter ( this, adapter )  ;  return m Wrapper Adapter ; }"
8966,public void end (  ) { renderer . end (  )  ;  shape Type = null ; }
8967,"public  Model With Annotated Class And Super Attributes$ Sub Model With Annotated Class And Super Attributes_ on Visibility Changed (  On Model Visibility Changed Listener< Model With Annotated Class And Super Attributes$ Sub Model With Annotated Class And Super Attributes_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
8968,public void set List View Wrapper ( @ Non Null final  List View Wrapper list View Wrapper ) { m List View Wrapper = list View Wrapper ;  if  ( m Decorated Base Adapter instanceof  List View Wrapper Setter )  {      (  (  List View Wrapper Setter )  m Decorated Base Adapter )  . set List View Wrapper ( list View Wrapper )  ;  }}
8969,"public void update Item ( @ Non Null T item, @ Nullable  Object payload ) { update Item ( get Global Position Of ( item ) , item, payload )  ; }"
8970,"protected  Entry<K, V> [  ]  create Array With Null Value (  ) {  Entry<K, V> [  ]  array = create Samples Array (  )  ;  final int null Value Location = get Null Location (  )  ;  final  Entry<K, V> old Entry = array [ null Value Location ]  ;  array [ null Value Location ]  =  Helpers . map Entry ( old Entry . get Key (  ) , null )  ;  return array ; }"
8971,"File file For (  String name ) { if  ( name . starts With ( R_REFS )  )  {     name = name . substring ( R_REFS . length (  )  )  ;      return new  File ( refs Dir, name )  ;  } return new  File ( git Dir, name )  ; }"
8972,"public void inherit All Constructors (  )  throws  Cannot Compile Exception,  Not Found Exception{  Ct Class superclazz ;   Ct Constructor [  ]  cs ;  superclazz = get Superclass (  )  ;  cs = superclazz . get Declared Constructors (  )  ;  int n = 0 ;  for  ( int i = 0 ;  i < cs . length ;  ++i )  {      Ct Constructor c = cs [ i ]  ;      int mod = c . get Modifiers (  )  ;      if  ( is Inheritable ( mod, superclazz )  )  {          Ct Constructor cons =  Ct New Constructor . make ( c . get Parameter Types (  ) , c . get Exception Types (  ) , this )  ;          cons . set Modifiers ( mod &  (  Modifier . PUBLIC |  Modifier . PROTECTED |  Modifier . PRIVATE )  )  ;          add Constructor ( cons )  ;          ++n ;      } } if  ( n < 1 )      throw new  Cannot Compile Exception ( ""no inheritable constructor in "" + superclazz . get Name (  )  )  ; }"
8973,protected  Progress Estimation get Estimated Progress Of Creating Action Graph (  ) { if  ( progress Estimator . is Present (  )  )  {     return progress Estimator . get (  )  . get Estimated Progress Of Creating Action Graph (  )  ;  } else {     return  Progress Estimation . UNKNOWN ;  }}
8974,"public final  Ordered contains At Least ( @ Nullable E first, @ Nullable E second, @ Nullable E .  .  .  rest ) { return contains At Least Elements In ( accumulate ( first, second, rest )  )  ; }"
8975,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
8976,"private void remove Old Pack (  Pack File pack File, int delete Options )  throws IO Exception{ if  ( pconfig . is Preserve Old Packs (  )  )  {      File old Pack Dir = repo . get Object Database (  )  . get Preserved Directory (  )  ;       File Utils . mkdir ( old Pack Dir, true )  ;       Pack File old Pack File = pack File . create Preserved For Directory ( old Pack Dir )  ;       File Utils . rename ( pack File, old Pack File )  ;  } else {      File Utils . delete ( pack File, delete Options )  ;  }}"
8977,"public void set Result (  Ref Update .  Result r ) { switch ( r )  {     case NOT_ATTEMPTED:         set Result (  Result . NOT_ATTEMPTED )  ;          break ;      case LOCK_FAILURE:     case IO_FAILURE:         set Result (  Result . LOCK_FAILURE )  ;          break ;      case NO_CHANGE:     case NEW:     case FORCED:     case FAST_FORWARD:         set Result (  Result . OK )  ;          break ;      case REJECTED:         set Result (  Result . REJECTED_NONFASTFORWARD )  ;          break ;      case REJECTED_CURRENT_BRANCH:         set Result (  Result . REJECTED_CURRENT_BRANCH )  ;          break ;      case REJECTED_MISSING_OBJECT:         set Result (  Result . REJECTED_MISSING_OBJECT )  ;          break ;      case REJECTED_OTHER_REASON:         set Result (  Result . REJECTED_OTHER_REASON )  ;          break ;      default:         set Result (  Result . REJECTED_OTHER_REASON, r . name (  )  )  ;          break ;  }}"
8978,"private void read Frame Remainder (  Parsable Byte Array source ) { int bytes To Read =  Math . min ( source . bytes Left (  ) , frame Size - frame Bytes Read )  ;  output . sample Data ( source, bytes To Read )  ;  frame Bytes Read += bytes To Read ;  if  ( frame Bytes Read < frame Size )  {     //  We haven't read the whole of the frame yet .      return ;  } output . sample Metadata ( time Us, C . BUFFER_FLAG_KEY_FRAME, frame Size, 0, null )  ;  time Us += frame Duration Us ;  frame Bytes Read = 0 ;  state = STATE_FINDING_HEADER ; }"
8979,public B suppressing (  Method .  .  .  methods ) { return suppressing (  Arrays . as List ( methods )  )  ; }
8980,public int get Mnc (  ) { return mnc_ ; }
8981,public E poll First (  ) { return poll (  )  ; }
8982,"public static int get Res Id (  String variable Name,  Class<?> c ) { try {      Field id Field = c . get Declared Field ( variable Name )  ;      return id Field . get Int ( id Field )  ;  } catch  (  Exception e )  {     e . print Stack Trace (  )  ;      return -1 ;  }}"
8983,"public void set Spring Frequency Hz ( float hz ) { jni Set Spring Frequency Hz ( addr, hz )  ; }"
8984,"public com . anychart . scales .  Ordinal ticks (  String ticks ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . ticks ( %s )  ; "", wrap Quotes ( ticks )  )  )  ;  return this ; }"
8985,public void set From (  String from ) { this . from = from ; }
8986,"public com . anychart . charts .  Cartesian3d select Marquee Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
8987,"public static int get Force Rotated Inverted Exif Orientation (  Rotation Options rotation Options,  Encoded Image encoded Image ) { int exif Orientation = encoded Image . get Exif Orientation (  )  ;  int index = INVERTED_EXIF_ORIENTATIONS . index Of ( exif Orientation )  ;  if  ( index < 0 )  {     throw new  Illegal Argument Exception ( "" Only accepts inverted exif orientations"" )  ;  } int forced Angle =  Rotation Options . NO_ROTATION ;  if  ( !rotation Options . use Image Metadata (  )  )  {     forced Angle = rotation Options . get Forced Angle (  )  ;  } int times To Rotate = forced Angle / 90 ;  return INVERTED_EXIF_ORIENTATIONS . get (  ( index + times To Rotate )  % INVERTED_EXIF_ORIENTATIONS . size (  )  )  ; }"
8988,public static  Set< String> non Null Set ( @ Nullable  String [  ]  items ) { return items == null || items . length == 0 ?  Collections . < String>empty Set (  )  : new  Hash Set< String> ( as List ( items )  )  ; }
8989,protected void on Hover Menu Exiting By User Request (  ) {//  Hook for subclasses . }
8990,"public com . anychart . core . ui .  Callout padding (  String value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
8991,public void on Detach (  ) { super . on Detach (  )  ;  _master Frag = null ; }
8992,public  Storage Metadata get Metadata (  ) { return m Metadata ; }
8993,"public com . anychart . charts .  Mekko y Axis (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . y Axis ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
8994,public static  Observable per Loop Observable ( @ Non Null final  Observable .  .  .  observables ) { return composite Observable ( observables )  ; }
8995,public  Ordered contains At Least Elements In (  Iterable<?> expected ) { return check (  )  . that ( actual List )  . contains At Least Elements In ( expected )  ; }
8996,"public static  String  Path To URI (  String path ) { if  ( path == null )  {     throw new  Null Pointer Exception ( "" Cannot convert null path!"" )  ;  } return  Lib VLC . native To URI ( path )  ; }"
8997,"private static void internal Copy Bitmap (  Bitmap dest Bitmap,  Bitmap source Bitmap ) { if  (  Native Code Setup . get Use Native Code (  )  && dest Bitmap . get Config (  )  == source Bitmap . get Config (  )  )  {     try {         if  ( s Copy Bitmap == null )  {              Class<?> clazz =  Class . for Name ( ""com . facebook . imagepipeline . nativecode .  Bitmaps"" )  ;              s Copy Bitmap = clazz . get Declared Method ( ""copy Bitmap"",  Bitmap . class,  Bitmap . class )  ;          }         s Copy Bitmap . invoke ( null, dest Bitmap, source Bitmap )  ;          return ;      } catch  (  Class Not Found Exception e )  {         throw new  Runtime Exception ( "" Wrong  Native code setup, reflection failed . "", e )  ;      } catch  (  Illegal Access Exception e )  {         throw new  Runtime Exception ( "" Wrong  Native code setup, reflection failed . "", e )  ;      } catch  (  No Such Method Exception e )  {         throw new  Runtime Exception ( "" Wrong  Native code setup, reflection failed . "", e )  ;      } catch  (  Invocation Target Exception e )  {         throw new  Runtime Exception ( "" Wrong  Native code setup, reflection failed . "", e )  ;      } } //  This code will be run only if we fail to use native version with any reason  ( configuration or // reflection fail )  .  //  The bitmap configurations might be different when the source bitmap's configuration is // null, because it uses an internal configuration and the destination bitmap's configuration // is the FALLBACK_BITMAP_CONFIGURATION .   This is the case for static images for animated GI Fs .   Canvas canvas = new  Canvas ( dest Bitmap )  ;  canvas . draw Bitmap ( source Bitmap, 0, 0, null )  ; }"
8998,"private void handle Client Core Message_ Service Unavailable (  Message msg ) { if  ( was Load Url Invoked . compare And Set ( false, true )  )  {     if  (  Sonic Utils . should Log (  Log . INFO )  )  {          Sonic Utils . log ( TAG,  Log . INFO, ""handle Client Core Message_ Service Unavailable:load src url . "" )  ;      }     session Client . load Url ( src Url, null )  ;  }}"
8999,"public static  Bloom Filter<T> create (  Funnel<? super T> funnel, long expected Insertions, double fpp ) { return create ( funnel, expected Insertions, fpp,  Bloom Filter Strategies . MURMUR128_MITZ_64 )  ; }"
9000,"public int nearest ( final T in ) { return nearest ( in, 0, span Count )  ; }"
9001,"public  List<E> copy To Realm (  Iterable<E> objects,  Import Flag .  .  .  flags ) { //noinspection  Constant Conditions if  ( objects == null )  {     return new  Array List<> (  )  ;  }  Array List realm Objects ;  if  ( objects instanceof  Collection )  {     realm Objects = new  Array List<> (  (  (  Collection )  objects )  . size (  )  )  ;  } else {     realm Objects = new  Array List<> (  )  ;  }  Map< Realm Model,  Realm Object Proxy> cache = new  Hash Map<> (  )  ;  for  ( E object : objects )  {     check Not Null Object ( object )  ;      realm Objects . add ( copy Or Update ( object, false, cache,  Util . to Set ( flags )  )  )  ;  } return realm Objects ; }"
9002,"Diff Result diff Messages (  Message actual,  Message expected ) { check Not Null ( actual )  ;  check Not Null ( expected )  ;  check Argument ( actual . get Descriptor For Type (  )  == expected . get Descriptor For Type (  ) , "" The actual  [ %s ]  and expected  [ %s ]  message descriptors do not match . "", actual . get Descriptor For Type (  ) , expected . get Descriptor For Type (  )  )  ;  return diff Messages ( actual, expected, root Config )  ; }"
9003,public static  Char Matcher whitespace (  ) { return  Whitespace . INSTANCE ; }
9004,"public com . anychart . charts .  Mekko min Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
9005,public static  Qiscus Data Store get Data Store (  ) { return data Store ; }
9006,"public  Task<T Continuation Result> continue With ( @ Non Null  Continuation< Load Bundle Task Progress, T Continuation Result> continuation ) { return delegate . continue With ( continuation )  ; }"
9007,"public com . anychart . core . cartesian . series .  Continuous Range Base left (  Number left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", left )  )  ;  return this ; }"
9008,"public void domain Matches No Domain (  )  throws  Exception{  Cookie cookie =  Cookie . parse ( url, ""a=b"" )  ;  assert That ( cookie . matches (  Http Url . get ( ""http://example . com"" )  )  )  . is True (  )  ;  assert That ( cookie . matches (  Http Url . get ( ""http://www . example . com"" )  )  )  . is False (  )  ;  assert That ( cookie . matches (  Http Url . get ( ""http://square . com"" )  )  )  . is False (  )  ; }"
9009,public static void set Range Y ( int range Y ) {  Wave View . range Y = range Y ; }
9010,"public  String get Image Url (  ) { if  ( is Image Url (  )  )  {     return  Utils . get String (  (  ( byte [  ]  )  get Object Value (  Data Types . OBJ_PICTURE_DATA )  ) , 0,  (  ( byte [  ]  )  get Object Value (  Data Types . OBJ_PICTURE_DATA )  )  . length,  Text Encoding . CHARSET_ISO_8859_1 )  ;  } else {     return """" ;  }}"
9011,"public void set Left Action Icon Color ( int color ) { m Left Action Icon Color = color ;  m Menu Btn Drawable . set Color ( color )  ;   Drawable Compat . set Tint ( m Icon Back Arrow, color )  ;   Drawable Compat . set Tint ( m Icon Search, color )  ; }"
9012,"final  Validation Report< Type Element> validate (  ) { if  ( !is Annotation Present ( component, annotation . component Annotation (  )  )  )  {     report . add Error ( messages . must Be In Component (  )  )  ;  } // messages will be bogus .  if  ( !validate Is Class Or Interface (  )  )  {     return report . build (  )  ;  } validate Type Requirements (  )  ;  switch ( annotation . creator Kind (  )  )  {     case FACTORY:         validate Factory (  )  ;          break ;      case BUILDER:         validate Builder (  )  ;  } return report . build (  )  ; }"
9013,public final  Object get Value (  String name ) { return get Backing Value ( name )  ; }
9014,"public void set Atlas Tile (  String tile Name,  Texture Atlas atlas ) {  Tile tile = atlas . get Tile Named ( tile Name )  ;  if  ( m Original Texture Coords == null )  {     m Original Texture Coords = this . get Geometry (  )  . get Texture Coords (  )  . duplicate (  )  ;  }  Float Buffer fb =  Float Buffer . allocate ( m Original Texture Coords . capacity (  )  )  ;  for  ( int i = 0 ;  i < fb . capacity (  )  ;  i++ )  {     double uv In = m Original Texture Coords . get ( i )  ;      double uv Out ;      if  ( i % 2 == 0 )  {         uv Out =  ( uv In *  ( tile . width / atlas . get Width (  )  )  )  + tile . x / atlas . get Width (  )  ;      } else {         uv Out =  ( uv In *  ( tile . height / atlas . get Height (  )  )  )  + tile . y / atlas . get Height (  )  ;      }     fb . put ( i,  ( float )  uv Out )  ;  } m Geometry . change Buffer Data ( m Geometry . get Tex Coord Buffer Info (  ) , fb, 0 )  ; }"
9015,"public void get Cropped Image Async (  ) { get Cropped Image Async ( 0, 0,  Request Size Options . NONE )  ; }"
9016,"public com . anychart . core . stock . indicators .  Stochastic stochastic ( com . anychart . data .  Table Mapping mapping,  Number k Period,  Number k MA Period,  Number d Period, com . anychart . enums .  Moving Average Type k MA Type, com . anychart . enums .  Moving Average Type d MA Type,  String k Series Type,  String d Series Type ) { return new com . anychart . core . stock . indicators .  Stochastic (  String . format (  Locale . US, js Base + "" . stochastic ( %s, %s, %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, k Period, k MA Period, d Period,  ( k MA Type != null )  ? k MA Type . get Js Base (  )  : null,  ( d MA Type != null )  ? d MA Type . get Js Base (  )  : null, wrap Quotes ( k Series Type ) , wrap Quotes ( d Series Type )  )  )  ; }"
9017,"public void test Add Null Equal Object (  ) { try {     equals Tester . add Equality Group ( reference,  (  Object [  ]  )  null )  ;      fail ( "" Should fail on null equal object"" )  ;  } catch  (  Null Pointer Exception e )  { }}"
9018,"public static int create Program (  String vertex Source,  String fragment Source ) { int vertex Shader = load Shader ( GLES20 . GL_VERTEX_SHADER, vertex Source )  ;  if  ( vertex Shader == 0 )  {     return 0 ;  } int pixel Shader = load Shader ( GLES20 . GL_FRAGMENT_SHADER, fragment Source )  ;  if  ( pixel Shader == 0 )  {     return 0 ;  } int program = GLES20 . gl Create Program (  )  ;  if  ( program != 0 )  {     GLES20 . gl Attach Shader ( program, vertex Shader )  ;      GL Util . check Gl Error ( TAG, ""gl Attach Shader"" )  ;      GLES20 . gl Attach Shader ( program, pixel Shader )  ;      GL Util . check Gl Error ( TAG, ""gl Attach Shader"" )  ;      GLES20 . gl Link Program ( program )  ;      int [  ]  link Status = new int [ 1 ]  ;      GLES20 . gl Get Programiv ( program, GLES20 . GL_LINK_STATUS, link Status, 0 )  ;      if  ( link Status [ 0 ]  != GLES20 . GL_TRUE )  {          Log . e ( TAG, "" Could not link program: "" )  ;           Log . e ( TAG, GLES20 . gl Get Program Info Log ( program )  )  ;          GLES20 . gl Delete Program ( program )  ;          program = 0 ;      } } return program ; }"
9019,public T9 get Value9 (  ) { return value9 ; }
9020,"protected final  String hex Dump ( int offset, int len ) { return  Hex . dump ( bytes, offset, len, offset, hex Cols, 4 )  ; }"
9021,"public static  List< String> read File2 List ( final  File file, final int st, final int end ) { return read File2 List ( file, st, end, null )  ; }"
9022,public  Surface Texture .  On Frame Available Listener get Frame Listener (  ) { return ui Updater ; }
9023,"public long get Total Storage Space (  Storage Type storage Type ) { ensure Initialized (  )  ;  maybe Update Stats (  )  ;   Stat Fs stat FS = storage Type ==  Storage Type . INTERNAL ? m Internal Stat Fs : m External Stat Fs ;  if  ( stat FS != null )  {     long block Size, total Blocks ;      if  (  Build . VERSION . SDK_INT >=  Build . VERSION_CODES . JELLY_BEAN_MR2 )  {         block Size = stat FS . get Block Size Long (  )  ;          total Blocks = stat FS . get Block Count Long (  )  ;      } else {         block Size = stat FS . get Block Size (  )  ;          total Blocks = stat FS . get Block Count (  )  ;      }     return block Size * total Blocks ;  } return -1 ; }"
9024,public static  String nullable String ( @ Nullable  String str ) { return str == null || str . is Empty (  )  ? null : str ; }
9025,"protected final void validate Endpoints (  Endpoint Pair<?> endpoints ) { check Not Null ( endpoints )  ;  check Argument ( is Ordering Compatible ( endpoints ) , ENDPOINTS_MISMATCH )  ; }"
9026,"public void max Ticks Count (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Ticks Count (  )  ; "" )  ; }"
9027,public final void close (  )  throws IO Exception{ dis . close (  )  ; }
9028,"public void align (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . align (  )  ; "" )  ; }"
9029,"public void add Element (  Object .  .  .  values ) { /* FIXME make it grow .  .  .  */ if  ( size == capacity )      throw new  Gdx Runtime Exception ( "" Capacity reached, cannot add other elements"" )  ;  int k = 0 ;  for  (  Channel stride Array : arrays )  {     stride Array . add ( k, values )  ;      k += stride Array . stride Size ;  } ++size ; }"
9030,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
9031,"public com . anychart . core . resource .  Logo width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
9032,"public static  Unsigned Integer value Of (  String string, int radix ) { return from Int Bits (  Unsigned Ints . parse Unsigned Int ( string, radix )  )  ; }"
9033,"public void get Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . get Index (  )  ; "" )  ; }"
9034,"public com . anychart . charts .  Pareto select Marquee Stroke ( com . anychart . graphics . vector .  Colored Fill color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
9035,"public com . anychart . core . stock . scrollerseries .  Discrete Base bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
9036,public void add ( Q new Value ) { if  ( ++size == grow )      grow (  )  ;  int h = new Value . w1 ;  V [  ]  table = directory [ h & mask ]  ;  h >>>= SEGMENT_SHIFT ;  new Value . next = table [ h ]  ;  table [ h ]  = new Value ; }
9037,public int get Byte Count (  ) { return m Value . length ; }
9038,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_URL_COMMERCIAL ; }
9039,"private int [  ]  get Entered Time ( boolean [  ]  entered Zeros ) { int am Or Pm = -1 ;  int start Index = 1 ;  if  ( !m Is24 Hour View && is Typed Time Fully Legal (  )  )  {     int key Code = m Typed Times . get ( m Typed Times . size (  )  - 1 )  ;      if  ( key Code == get Am Or Pm Key Code ( AM )  )  {         am Or Pm = AM ;      } else if  ( key Code == get Am Or Pm Key Code ( PM )  )  {         am Or Pm = PM ;      }     start Index = 2 ;  } int minute = -1 ;  int hour = -1 ;  for  ( int i = start Index ;  i <= m Typed Times . size (  )  ;  i++ )  {     int val = get Val From Key Code ( m Typed Times . get ( m Typed Times . size (  )  - i )  )  ;      if  ( i == start Index )  {         minute = val ;      } else if  ( i == start Index + 1 )  {         minute += 10 * val ;          if  ( entered Zeros != null && val == 0 )  {             entered Zeros [ 1 ]  = true ;          }     } else if  ( i == start Index + 2 )  {         hour = val ;      } else if  ( i == start Index + 3 )  {         hour += 10 * val ;          if  ( entered Zeros != null && val == 0 )  {             entered Zeros [ 0 ]  = true ;          }     } } return new int [  ]  { hour, minute, am Or Pm } ; }"
9040,"void test Smoke Every Thing (  )  throws  Exception{  List< Tobacco> tobaccos =  List . of ( new  Old Toby Tobacco (  ) , new  Rivendell Tobacco (  ) , new  Second Breakfast Tobacco (  )  )  ;  //  Verify if the sorceress is smoking the correct tobacco  .  .  .  tobaccos . for Each (  tobacco -> {     final var advanced Sorceress = new  Advanced Sorceress (  )  ;      advanced Sorceress . set Tobacco ( tobacco )  ;      advanced Sorceress . smoke (  )  ;       String last Message = appender . get Last Message (  )  ;      assert Equals ( "" Advanced Sorceress smoking "" + tobacco . get Class (  )  . get Simple Name (  ) , last Message )  ;  } )  ;  //  .  .  .  and nothing else is happening .  assert Equals ( tobaccos . size (  ) , appender . get Log Size (  )  )  ; }"
9041,"public void offset X (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . offset X (  )  ; "" )  ; }"
9042,public void set User Switchability ( int switchability ) { this . user Switchability = switchability ; }
9043,public void set Color ( @ Color Res final int color Res Id ) { m Dot Paint . set Color ( get Resources (  )  . get Color ( color Res Id )  )  ; }
9044,public  Group Chat Builder with Options ( JSON Object options ) { this . options = options ;  return this ; }
9045,public boolean is Set Result Type (  ) { return this . result Type != null ; }
9046,"public boolean replace Scene ( final  Scene old Scene, final  Scene new Scene ) { final A Frame Task task = new A Frame Task (  )  {     @ Override     protected void do Task (  )  {         m Scenes . set ( m Scenes . index Of ( old Scene ) , new Scene )  ;      } } ;  return internal Offer Task ( task )  ; }"
9047,public  Long get Size (  ) { return size ; }
9048,"public void import From (  File file ) { try  (  File Input Stream stream = new  File Input Stream ( file )  )  {     import From ( stream )  ;  } catch  ( IO Exception ioe )  {     throw new  Nitrite IO Exception ( error Message ( ""I/O error while reading content from file "" + file, NIOE_IMPORT_ERROR ) , ioe )  ;  }}"
9049,protected void on Finish Inflate (  ) { super . on Finish Inflate (  )  ;  if  ( m Drag View Res Id != -1 )  {     set Drag View ( find View By Id ( m Drag View Res Id )  )  ;  }}
9050,"public void set Scale ( float scale X, float scale Y ) { if  ( scale X == 0 )      throw new  Illegal Argument Exception ( ""scale X cannot be 0 . "" )  ;  if  ( scale Y == 0 )      throw new  Illegal Argument Exception ( ""scale Y cannot be 0 . "" )  ;  float x = scale X / this . scale X ;  float y = scale Y / this . scale Y ;  line Height *= y ;  space Xadvance *= x ;  x Height *= y ;  cap Height *= y ;  ascent *= y ;  descent *= y ;  down *= y ;  pad Left *= x ;  pad Right *= x ;  pad Top *= y ;  pad Bottom *= y ;  this . scale X = scale X ;  this . scale Y = scale Y ; }"
9051,public boolean is Auto Center In Slice (  ) { return m Auto Center In Slice ; }
9052,Immutable Sorted Set< Path> get Classpath Entries (  ) { return combined Class Path Entries ; }
9053,public  Http Log Obfuscator get Http Log Obfuscator (  ) { return http Log Obfuscator ; }
9054,"private void send Device Info (  ) { if  ( m Editor Connection == null || !m Editor Connection . is Valid (  )  || !m Editor Connection . is Connected (  )  )  {     return ;  } final  Output Stream out = m Editor Connection . get Buffered Output Stream (  )  ;  final  Json Writer j = new  Json Writer ( new  Output Stream Writer ( out )  )  ;  try {     j . begin Object (  )  ;      j . name ( ""type"" )  . value ( ""device_info_response"" )  ;      j . name ( ""payload"" )  . begin Object (  )  ;      j . name ( ""device_type"" )  . value ( "" Android"" )  ;      j . name ( ""device_name"" )  . value (  Build . BRAND + ""/"" +  Build . MODEL )  ;      j . name ( ""scaled_density"" )  . value ( m Scaled Density )  ;      for  ( final  Map .  Entry< String,  String> entry : m Device Info . entry Set (  )  )  {         j . name ( entry . get Key (  )  )  . value ( entry . get Value (  )  )  ;      }     final  Map< String,  Tweaks .  Tweak Value> tweak Descs = m Tweaks . get All Values (  )  ;      j . name ( ""tweaks"" )  . begin Array (  )  ;      for  (  Map .  Entry< String,  Tweaks .  Tweak Value> tweak : tweak Descs . entry Set (  )  )  {         final  Tweaks .  Tweak Value desc = tweak . get Value (  )  ;          final  String tweak Name = tweak . get Key (  )  ;          j . begin Object (  )  ;          j . name ( ""name"" )  . value ( tweak Name )  ;          j . name ( ""minimum"" )  . value ( desc . get Minimum (  )  )  ;          j . name ( ""maximum"" )  . value ( desc . get Maximum (  )  )  ;          switch ( desc . type )  {             case  Tweaks . BOOLEAN_TYPE:                 j . name ( ""type"" )  . value ( ""boolean"" )  ;                  j . name ( ""value"" )  . value ( desc . get Boolean Value (  )  )  ;                  j . name ( ""default"" )  . value (  (  Boolean )  desc . get Default Value (  )  )  ;                  break ;              case  Tweaks . DOUBLE_TYPE:                 j . name ( ""type"" )  . value ( ""number"" )  ;                  j . name ( ""encoding"" )  . value ( ""d"" )  ;                  j . name ( ""value"" )  . value ( desc . get Number Value (  )  . double Value (  )  )  ;                  j . name ( ""default"" )  . value (  (  (  Number )  desc . get Default Value (  )  )  . double Value (  )  )  ;                  break ;              case  Tweaks . LONG_TYPE:                 j . name ( ""type"" )  . value ( ""number"" )  ;                  j . name ( ""encoding"" )  . value ( ""l"" )  ;                  j . name ( ""value"" )  . value ( desc . get Number Value (  )  . long Value (  )  )  ;                  j . name ( ""default"" )  . value (  (  (  Number )  desc . get Default Value (  )  )  . long Value (  )  )  ;                  break ;              case  Tweaks . STRING_TYPE:                 j . name ( ""type"" )  . value ( ""string"" )  ;                  j . name ( ""value"" )  . value ( desc . get String Value (  )  )  ;                  j . name ( ""default"" )  . value (  (  String )  desc . get Default Value (  )  )  ;                  break ;              default:                 MP Log . wtf ( LOGTAG, "" Unrecognized  Tweak  Type "" + desc . type + "" encountered . "" )  ;          }         j . end Object (  )  ;      }     j . end Array (  )  ;      // payload     j . end Object (  )  ;      j . end Object (  )  ;  } catch  ( final IO Exception e )  {     MP Log . e ( LOGTAG, "" Can't write device_info to server"", e )  ;  } finally {     try {         j . close (  )  ;      } catch  ( final IO Exception e )  {         MP Log . e ( LOGTAG, "" Can't close websocket writer"", e )  ;      } }}"
9055,public int get Behind Offset (  ) { return  (  (  Relative Layout .  Layout Params )  m View Behind . get Layout Params (  )  )  . right Margin ; }
9056,static long to Nanos Saturated (  Duration duration ) { // durations longer than approximately +/- 292 years )  .  try {     return duration . to Nanos (  )  ;  } catch  (  Arithmetic Exception too Big )  {     return duration . is Negative (  )  ?  Long . MIN_VALUE :  Long . MAX_VALUE ;  }}
9057,"public void add Left View (  View view, int view Id ) {  View Group .  Layout Params view Layout Params = view . get Layout Params (  )  ;   Layout Params layout Params ;  if  ( view Layout Params != null && view Layout Params instanceof  Layout Params )  {     layout Params =  (  Layout Params )  view Layout Params ;  } else {     layout Params = new  Layout Params (  Layout Params . WRAP_CONTENT,  Layout Params . WRAP_CONTENT )  ;  } this . add Left View ( view, view Id, layout Params )  ; }"
9058,"public  Builder schema Version ( long schema Version ) { if  ( schema Version < 0 )  {     throw new  Illegal Argument Exception ( "" Realm schema version numbers must be 0  ( zero )  or higher .   Yours was: "" + schema Version )  ;  } this . schema Version = schema Version ;  return this ; }"
9059,"public void assign Multiply (  String value ) { m Shader SB . append ( m Name )  . append ( "" *= "" )  . append ( value )  . append ( "" ; \n"" )  ; }"
9060,public  String get String Info ( int index ) {  String Info si =  (  String Info )  get Item ( index )  ;  return get Utf8 Info ( si . string )  ; }
9061,"public  Resource create Relative (  String relative Path )  throws IO Exception{ throw new  File Not Found Exception ( "" Cannot create a relative resource for "" + get Description (  )  )  ; }"
9062,"public com . anychart . charts .  Sparkline margin (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
9063,"public void height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . height (  )  ; "" )  ; }"
9064,"public void save As Xlsx (  String chart Data Export Mode,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Xlsx ( %s, %s )  ; "", wrap Quotes ( chart Data Export Mode ) , wrap Quotes ( filename )  )  )  ; }"
9065,"public com . anychart . standalones .  Data Grid max Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
9066,public void assert Position Discontinuity Reasons Equal (  Integer .  .  .  discontinuity Reasons ) { assert That ( this . discontinuity Reasons )  . contains Exactly Elements In (  Arrays . as List ( discontinuity Reasons )  )  . in Order (  )  ; }
9067,public final  Cst Nat get Nat (  ) { return nat ; }
9068,static boolean is View Focusable ( int flags ) { return  ( flags & FLAG_VIEW_FOCUSABLE )  == FLAG_VIEW_FOCUSABLE ; }
9069,public void write ( byte [  ]  out ) { //  Create temporary object  Connected Thread r ;  //  Synchronize a copy of the  Connected Thread synchronized  ( this )  {     if  ( m State != STATE_CONNECTED )          return ;      r = m Connected Thread ;  } //  Perform the write unsynchronized r . write ( out )  ; }
9070,"public  Closeable Image decode Animated Webp ( final  Encoded Image encoded Image, final int length, final  Quality Info quality Info, final  Image Decode Options options ) { if  ( m Animated Web P Decoder != null )  {     return m Animated Web P Decoder . decode ( encoded Image, length, quality Info, options )  ;  } throw new  Decode Exception ( "" Animated  Web P support not set up!"", encoded Image )  ; }"
9071,"public void no Recovery From Two Refused Streams (  Protocol protocol,  Mock Web Server mock Web Server )  throws  Exception{ set Up ( protocol, mock Web Server )  ;  server . enqueue ( new  Mock Response (  )  . set Socket Policy (  Socket Policy . RESET_STREAM_AT_START )  . set Http2 Error Code (  Error Code . REFUSED_STREAM . get Http Code (  )  )  )  ;  server . enqueue ( new  Mock Response (  )  . set Socket Policy (  Socket Policy . RESET_STREAM_AT_START )  . set Http2 Error Code (  Error Code . REFUSED_STREAM . get Http Code (  )  )  )  ;  server . enqueue ( new  Mock Response (  )  . set Body ( ""abc"" )  )  ;   Call call = client . new Call ( new  Request .  Builder (  )  . url ( server . url ( ""/"" )  )  . build (  )  )  ;  try {     call . execute (  )  ;      fail (  )  ;  } catch  (  Stream Reset Exception expected )  {     assert That ( expected . error Code )  . is Equal To (  Error Code . REFUSED_STREAM )  ;  }}"
9072,"public synchronized void add Download Progress Listener (  Progress Mode mode,  Progress Listener listener ) { add Progress Listener ( mode, DIRECTION_DOWNLOAD, listener )  ; }"
9073,"private void create Identifier (  Dependency Node node ) { if  ( null == node . parent )  {     node . identifier = ""1"" ;  }  List< Dependency Node> children = node . children ;  for  ( int i = 1 ;  i <= children . size (  )  ;  i++ )  {      Dependency Node child = children . get ( i - 1 )  ;      if  ( i >= 10 )  {         // if adding divider between each num, consider 1-1-10 and 1-1-1, which will         // be treated as circle-dependency mistakenly .          child . identifier =  String . format ( ""%s ( %s ) "", node . identifier, i )  ;      } else {         child . identifier = node . identifier + i ;      }     create Identifier ( child )  ;  }}"
9074,public boolean within Last Refresh Window (  ) { if  ( last Poll == 0 )  {     return false ;  } long diff = new  Date (  )  . get Time (  )  - last Poll - interval * 1000 L ;  return diff < 0 ; }
9075,"public  Immutable List< Attribute Record> get Attribute Records (  Xml Node .  Node Key element Key,  Xml Node .  Node Name attribute Name ) {  Decision Tree Record decision Tree Record = m Records . get ( element Key )  ;  if  ( decision Tree Record == null )  {     return  Immutable List . of (  )  ;  } return decision Tree Record . get Attribute Records ( attribute Name )  ; }"
9076,"public  Iterable Of Protos Fluent Assertion<M> ignoring Field Absence Of Field Descriptors (  Field Descriptor first Field Descriptor,  Field Descriptor .  .  .  rest ) { return using Config ( config . ignoring Field Absence Of Field Descriptors ( as List ( first Field Descriptor, rest )  )  )  ; }"
9077,"public com . anychart . core . gantt .  Time Line Header letter Spacing (  Number spacing ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . letter Spacing ( %s )  ; "", spacing )  )  ;  return this ; }"
9078,protected void overwrite Subscription Address ( @ Non Null final  Integer subscription Address ) { subscription Addresses . clear (  )  ;  add Subscription Address ( subscription Address )  ; }
9079,"public void target Bounds Changed (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . target Bounds Changed (  )  ; "" )  ; }"
9080,"public synchronized  Rectangle pack (  Pixmap image ) { return pack ( null, image )  ; }"
9081,"public static  Class Name prepend (  Class Name name,  String prefix ) { return name . peer Class ( prefix + name . simple Name (  )  )  ; }"
9082,"public void rebuild Stack Map If6 (  Class Pool pool,  Class File cf )  throws  Bad Bytecode{ if  ( cf . get Major Version (  )  >=  Class File . JAVA_6 )      rebuild Stack Map ( pool )  ;  if  ( do Preverify )      rebuild Stack Map For ME ( pool )  ; }"
9083,"public com . anychart . core .  Visual Base With Bounds bounds ( com . anychart . utils .  Rect Obj bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
9084,public  Builder set Navigation ( com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration .  Navigation value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } navigation_ = value . get Number (  )  ;  on Changed (  )  ;  return this ; }
9085,"public static void main (  String [  ]  args ) { final  Settings texture Packer Settings = new  Settings (  )  ;  texture Packer Settings . padding X = 2 ;  texture Packer Settings . padding Y = 2 ;  texture Packer Settings . edge Padding = true ;  texture Packer Settings . duplicate Padding = true ;  texture Packer Settings . bleed = true ;  texture Packer Settings . alias = true ;  texture Packer Settings . use Indexes = true ;  final  Tiled Map Packer Settings packer Settings = new  Tiled Map Packer Settings (  )  ;  if  ( args . length == 0 )  {     print Usage (  )  ;       System . exit ( 0 )  ;  } else if  ( args . length == 1 )  {     input Dir = new  File ( args [ 0 ]  )  ;      output Dir = new  File ( input Dir, "" .  . /output/"" )  ;  } else if  ( args . length == 2 )  {     input Dir = new  File ( args [ 0 ]  )  ;      output Dir = new  File ( args [ 1 ]  )  ;  } else {     input Dir = new  File ( args [ 0 ]  )  ;      output Dir = new  File ( args [ 1 ]  )  ;      process Extra Args ( args, packer Settings )  ;  }  Tiled Map Packer packer = new  Tiled Map Packer ( packer Settings )  ;   Lwjgl Application Configuration config = new  Lwjgl Application Configuration (  )  ;  config . force Exit = false ;  config . width = 100 ;  config . height = 50 ;  config . title = "" Tiled Map Packer"" ;  new  Lwjgl Application ( new  Application Listener (  )  {     @ Override     public void resume (  )  {     }     @ Override     public void resize ( int width, int height )  {     }     @ Override     public void render (  )  {     }     @ Override     public void pause (  )  {     }     @ Override     public void dispose (  )  {     }     @ Override     public void create (  )  {          Tiled Map Packer packer = new  Tiled Map Packer ( packer Settings )  ;          if  ( !input Dir . exists (  )  )  {              System . out . println ( input Dir . get Absolute Path (  )  )  ;              throw new  Runtime Exception ( "" Input directory does not exist: "" + input Dir )  ;          }         try {             packer . process Input Dir ( texture Packer Settings )  ;          } catch  ( IO Exception e )  {             throw new  Runtime Exception ( "" Error processing map: "" + e . get Message (  )  )  ;          }          System . out . println ( "" Finished processing . "" )  ;           Gdx . app . exit (  )  ;      } }, config )  ; }"
9086,public  String get Auth Type (  ) { return this . auth Type ; }
9087,public int get Priority (  ) { return priority ; }
9088,"public void point Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . point Width (  )  ; "" )  ; }"
9089,public void set Renderer Left Y Axis ( Y Axis Renderer renderer Left Y Axis ) { m Axis Renderer Left = renderer Left Y Axis ; }
9090,"public com . anychart . charts .  Cartesian3d x Grid (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . x Grid ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
9091,"public  Map< Integer,  Double> compute In Place ( double .  .  .  dataset ) { check Argument ( dataset . length > 0, "" Cannot calculate quantiles of an empty dataset"" )  ;  if  ( contains Na N ( dataset )  )  {      Map< Integer,  Double> nan Map = new  Linked Hash Map<> (  )  ;      for  ( int index : indexes )  {         nan Map . put ( index,  Na N )  ;      }     return unmodifiable Map ( nan Map )  ;  } //  Calculate the quotients and remainders in the integer division x = k *  ( N - 1 )  / q, i . e .  // index *  ( dataset . length - 1 )  / scale for each index in indexes .   For each, if there is no // remainder, we can just select the value whose index in the sorted dataset equals the // quotient ;  if there is a remainder, we interpolate between that and the next value .  int [  ]  quotients = new int [ indexes . length ]  ;  int [  ]  remainders = new int [ indexes . length ]  ;  //  The indexes to select .   In the worst case, we'll need one each side of each quantile .  int [  ]  required Selections = new int [ indexes . length * 2 ]  ;  int required Selections Count = 0 ;  for  ( int i = 0 ;  i < indexes . length ;  i++ )  {     //  Since index and  ( dataset . length - 1 )  are non-negative ints, their product can be     // expressed as a long, without risk of overflow:     long numerator =  ( long )  indexes [ i ]  *  ( dataset . length - 1 )  ;      //  Since scale is a positive int, index is in  [ 0, scale ] , and  ( dataset . length - 1 )  is a     // non-negative int, we can do long-arithmetic on index *  ( dataset . length - 1 )  / scale to     // get a rounded ratio and a remainder which can be expressed as ints, without risk of     // overflow:     int quotient =  ( int )   Long Math . divide ( numerator, scale,  Rounding Mode . DOWN )  ;      int remainder =  ( int )   ( numerator -  ( long )  quotient * scale )  ;      quotients [ i ]  = quotient ;      remainders [ i ]  = remainder ;      required Selections [ required Selections Count ]  = quotient ;      required Selections Count++ ;      if  ( remainder != 0 )  {         required Selections [ required Selections Count ]  = quotient + 1 ;          required Selections Count++ ;      } } sort ( required Selections, 0, required Selections Count )  ;  select All In Place ( required Selections, 0, required Selections Count - 1, dataset, 0, dataset . length - 1 )  ;   Map< Integer,  Double> ret = new  Linked Hash Map<> (  )  ;  for  ( int i = 0 ;  i < indexes . length ;  i++ )  {     int quotient = quotients [ i ]  ;      int remainder = remainders [ i ]  ;      if  ( remainder == 0 )  {         ret . put ( indexes [ i ] , dataset [ quotient ]  )  ;      } else {         ret . put ( indexes [ i ] , interpolate ( dataset [ quotient ] , dataset [ quotient + 1 ] , remainder, scale )  )  ;      } } return unmodifiable Map ( ret )  ; }"
9092,"public com . anychart . core . gantt . edit .  Thumb connector Thumbs (  ) { return new com . anychart . core . gantt . edit .  Thumb ( js Base + "" . connector Thumbs (  ) "" )  ; }"
9093,public long get Count (  ) { return count ; }
9094,"public com . anychart . core . stock . scrollerseries .  Jump Line stroke (  String color,  Number thickness,  String dashpattern,  String line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) ,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
9095,"private void setup Action Bar (  ) { set Title ( ""返回包注入"" )  ;   Action Bar action Bar = get Support Action Bar (  )  ;  if  ( action Bar != null )  {     //  Show the  Up button in the action bar .      action Bar . set Display Home As Up Enabled ( true )  ;  }}"
9096,"public static  Writable Map from Bundle (  Bundle bundle ) {  Writable Map map = create Map (  )  ;  for  (  String key : bundle . key Set (  )  )  {      Object value = bundle . get ( key )  ;      if  ( value == null )  {         map . put Null ( key )  ;      } else if  ( value . get Class (  )  . is Array (  )  )  {         map . put Array ( key, from Array ( value )  )  ;      } else if  ( value instanceof  String )  {         map . put String ( key,  (  String )  value )  ;      } else if  ( value instanceof  Number )  {         if  ( value instanceof  Integer )  {             map . put Int ( key,  (  Integer )  value )  ;          } else {             map . put Double ( key,  (  (  Number )  value )  . double Value (  )  )  ;          }     } else if  ( value instanceof  Boolean )  {         map . put Boolean ( key,  (  Boolean )  value )  ;      } else if  ( value instanceof  Bundle )  {         map . put Map ( key, from Bundle (  (  Bundle )  value )  )  ;      } else if  ( value instanceof  List )  {         map . put Array ( key, from List (  (  List )  value )  )  ;      } else {         throw new  Illegal Argument Exception ( "" Could not convert "" + value . get Class (  )  )  ;      } } return map ; }"
9097,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
9098,"public  Unsigned Integer divided By (  Unsigned Integer val ) { return from Int Bits (  Unsigned Ints . divide ( value, check Not Null ( val )  . value )  )  ; }"
9099,"public void add Proxy Methods (  Type Spec .  Builder class Builder ) { process Remoter Elements ( class Builder, new  Element Visitor (  )  {     @ Override     public void visit Element (  Type Spec .  Builder class Builder,  Element member, int method Index,  Method Spec .  Builder method Builder )  {         add Proxy Methods ( class Builder, member, method Index )  ;      } }, null )  ;  add Proxy Extras ( class Builder )  ;  add Common Extras ( class Builder )  ; }"
9100,private void assign Click Listener Recursively (  View parent ) { if  ( parent == null )  {     return ;  } if  ( parent instanceof  View Group )  {      View Group view Group =  (  View Group )  parent ;      int child Count = view Group . get Child Count (  )  ;      for  ( int i = child Count - 1 ;  i >= 0 ;  i-- )  {          View child = view Group . get Child At ( i )  ;          assign Click Listener Recursively ( child )  ;      } } set Click Listener ( parent )  ; }
9101,"public void check Path Segment ( byte [  ]  raw, int ptr, int end )  throws  Corrupt Object Exception{ int e = scan Path Segment ( raw, ptr, end, null )  ;  if  ( e < end && raw [ e ]  == 0 )      throw new  Corrupt Object Exception ( J Git Text . get (  )  . corrupt Object Name Contains Null Byte )  ;  check Path Segment2 ( raw, ptr, end, null )  ; }"
9102,"public com . anychart . core .  State Settings normal (  ) { return new com . anychart . core .  State Settings ( js Base + "" . normal (  ) "" )  ; }"
9103,"public  Std Type List with First (  Type type ) { int sz = size (  )  ;   Std Type List result = new  Std Type List ( sz + 1 )  ;  result . set0 ( 0, type )  ;  for  ( int i = 0 ;  i < sz ;  i++ )  {     result . set0 ( i + 1, get Or Null0 ( i )  )  ;  } return result ; }"
9104,public  Document get Owner Document (  ) { if  ( parent == null )      return null ;  return parent . get Owner Document (  )  ; }
9105,protected  Media Format get Output Format (  ) { if  ( output Format == null )  {     return new  Media Format (  )  ;  } return output Format ; }
9106,"public static byte [  ]  read File2 Bytes By Stream ( final  File file ) { return read File2 Bytes By Stream ( file, null )  ; }"
9107,public  Secure Random Factory Bean get Secure Random (  ) { if  ( secure Random == null )  {     return new  Secure Random Factory Bean (  )  ;  } return secure Random ; }
9108,"public void on Configuration Changed (  Configuration new Config ) { super . on Configuration Changed ( new Config )  ;  //如果旋转了就全屏 if  ( is Play && !is Pause )  {     detail Player . on Configuration Changed ( this, new Config, orientation Utils, true, true )  ;  }}"
9109,public com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration Or Builder get Config Or Builder (  ) { if  ( config Builder_ != null )  {     return config Builder_ . get Message Or Builder (  )  ;  } else {     return config_ == null ? com . didiglobal . booster . aapt2 .  Configuration Outer Class .  Configuration . get Default Instance (  )  : config_ ;  }}
9110,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
9111,public  Garbage Collect Command set Prune Preserved ( boolean prune Preserved ) { if  ( pconfig == null )      pconfig = new  Pack Config ( repo )  ;  pconfig . set Prune Preserved ( prune Preserved )  ;  return this ; }
9112,"public static void find View (  View root,  On View Found Listener on View Found Listener ) {  View view = find View ( root, on View Found Listener . get Native Id (  )  )  ;  if  ( view != null )  {     on View Found Listener . on View Found ( view )  ;  } add View Listener ( on View Found Listener )  ; }"
9113,public  Spring create Spring (  ) {  Spring spring = new  Spring ( this )  ;  register Spring ( spring )  ;  return spring ; }
9114,"public static void open Soft Keyboard (  Edit Text et ) { if  ( et != null )  {     et . set Focusable ( true )  ;      et . set Focusable In Touch Mode ( true )  ;      et . request Focus (  )  ;       Input Method Manager input Manager =  (  Input Method Manager )  et . get Context (  )  . get System Service (  Context . INPUT_METHOD_SERVICE )  ;      input Manager . show Soft Input ( et, 0 )  ;  }}"
9115,public int get Max Size (  ) { return specs . length ; }
9116,public double get Extension Z (  ) { return m Divisions * m Z Scale ; }
9117,public void set Ellipsis ( @ Null  String ellipsis ) { this . ellipsis = ellipsis ; }
9118,protected final void release Child Source ( T id ) {  Media Source And Listener removed Child =  Assertions . check Not Null ( child Sources . remove ( id )  )  ;  removed Child . media Source . release Source ( removed Child . listener )  ;  removed Child . media Source . remove Event Listener ( removed Child . event Listener )  ; }
9119,public static  Path root Relative Path (  String location ) {  File [  ]  roots =  File . list Roots (  )  ;   Preconditions . check State ( roots . length > 0 )  ;  return roots [ 0 ]  . to Path (  )  . resolve ( location )  ; }
9120,public  Ordered contains At Least Elements In (  Iterable<?> expected ) { return check (  )  . that ( actual List )  . contains At Least Elements In ( expected )  ; }
9121,"public com . anychart . core . annotations .  Fibonacci Fan stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
9122,public void on Batch Complete (  ) { m Tags With Layout Visited . clear (  )  ; }
9123,public  Source Info source Info (  ) { return source Info ; }
9124,"public com . anychart . core . cartesian . series .  Range Spline Area range Spline Area (  String [  ]  data, com . anychart . enums .  Text Parsing Mode csv Settings ) { return new com . anychart . core . cartesian . series .  Range Spline Area (  String . format (  Locale . US, js Base + "" . range Spline Area ( %s, %s ) "", array To String Wrap Quotes ( data ) ,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
9125,"public  Single< Rx Inserter< Category>> prepare Insert Into Category As Single (  ) { return prepare Insert Into Category As Single (  On Conflict . NONE, true )  ; }"
9126,public  Observable< Throwable> get Errors (  ) { return errors . hide (  )  ; }
9127,"void file Confirmation When File Does Not Exist (  ) { stub . set File Name ( "" Random Name . txt"" )  ;  presenter . start (  )  ;  presenter . file Name Changed (  )  ;  presenter . confirmed (  )  ;  assert False ( loader . is Loaded (  )  )  ;  assert Equals ( 1, stub . get Messages Sent (  )  )  ; }"
9128,"public  String get Host And Port (  Http Request modified Request ) { //   get Https Request Host And Port (  )  helper method, we can retrieve the host and port for HTTPS requests .  if  ( is Https (  )  )  {     return get Https Request Host And Port (  )  ;  } else {     return  Http Util . get Host And Port From Request ( modified Request )  ;  }}"
9129,"public com . anychart . core . cartesian . series .  Bar3d rendering (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rendering ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9130,"public void process Work Set ( int [  ]  work Set,  Visitor visitor ) { if  ( visitor == null )  {     throw new  Null Pointer Exception ( ""visitor == null"" )  ;  } for  (  ;   ;   )  {     int offset =  Bits . find First ( work Set, 0 )  ;      if  ( offset < 0 )  {         break ;      }      Bits . clear ( work Set, offset )  ;      parse Instruction ( offset, visitor )  ;      visitor . set Previous Offset ( offset )  ;  }}"
9131,public  Object Checker set Ignore ( @ Nullable  Set< Error Type> ids ) { errors =  Enum Set . all Of (  Error Type . class )  ;  if  ( ids != null )  {     errors . remove All ( ids )  ;  } return this ; }
9132,"private void set Parameters ( int width, int height, int bit Rate ) { if  (  ( width % 16 )  != 0 ||  ( height % 16 )  != 0 )  {      Log . w ( TAG, ""WARNING: width or height not multiple of 16"" )  ;  } m Width = width ;  m Height = height ;  m Bit Rate = bit Rate ; }"
9133,"public com . anychart . core . stock . scrollerseries .  Spline Area hatch Fill ( com . anychart . graphics . vector .  Pattern Fill pattern Fill ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "",  ( pattern Fill != null )  ? pattern Fill . get Js Base (  )  : null )  )  ;  return this ; }"
9134,void clear Started Services (  ) { started Services . clear (  )  ; }
9135,public static int i Log ( int x ) { int val = 0 ;  while  ( x > 0 )  {     val++ ;      x >>>= 1 ;  } return val ; }
9136,"public void dispatch Create (  Bundle state ) { if  ( state != null )  {     for  (  String id : state . key Set (  )  )  {         try {             final  Bundle astate = state . get Bundle ( id )  ;               Local Activity Record r = m Activities . get ( id )  ;              if  ( r != null )  {                 r . instance State = astate ;              } else {                 r = new  Local Activity Record ( id, null )  ;                  r . instance State = astate ;                  m Activities . put ( id, r )  ;                  m Activity Array . add ( r )  ;              }         } catch  (  Exception e )  {             //  Recover from -all- app errors .               Log . e ( TAG, "" Exception thrown when restoring  Local Activity Manager state"", e )  ;          }     } } m Cur State = CREATED ; }"
9137,"public static T convert To Custom Class (  Object object,  Generic Type Indicator<T> type Indicator ) {  Class<?> clazz = type Indicator . get Class (  )  ;   Type generic Type Indicator Type = clazz . get Generic Superclass (  )  ;  if  ( generic Type Indicator Type instanceof  Parameterized Type )  {      Parameterized Type parameterized Type =  (  Parameterized Type )  generic Type Indicator Type ;      if  ( !parameterized Type . get Raw Type (  )  . equals (  Generic Type Indicator . class )  )  {         throw new  Database Exception ( "" Not a direct subclass of  Generic Type Indicator: "" + generic Type Indicator Type )  ;      }     //  We are guaranteed to have exactly one type parameter      Type type = parameterized Type . get Actual Type Arguments (  )  [ 0 ]  ;      return deserialize To Type ( object, type )  ;  } else {     throw new  Database Exception ( "" Not a direct subclass of  Generic Type Indicator: "" + generic Type Indicator Type )  ;  }}"
9138,"public com . anychart . core . gantt .  Time Line Header Level Holidays Settings bounds (  Number x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
9139,public void on Cell Items Changed ( @ Non Null  List< List<C>> cell Items ) {}
9140,public float get Restitution (  ) { return jni Get Restitution ( addr )  ; }
9141,"public com . anychart . core . stock . scrollerseries .  Range Step Area fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
9142,"public static void encode To File ( byte [  ]  data To Encode,  String filename )  throws java . io . IO Exception{ if  ( data To Encode == null )  {     throw new  Null Pointer Exception ( "" Data to encode was null . "" )  ;  } // end iff  Base64 .  Output Stream bos = null ;  try {     bos = new  Base64 .  Output Stream ( new java . io .  File Output Stream ( filename ) ,  Base64 . ENCODE )  ;      bos . write ( data To Encode )  ;  }// end try  catch  ( java . io . IO Exception e )  {     //  Catch and throw to execute finally{} block     throw e ;  } finally // end catch: java . io . IO Exception {     try {         bos . close (  )  ;      } catch  (  Exception e )  {     } }// end finally}"
9143,"public void set ( int n, int value ) { throw If Immutable (  )  ;  if  ( n >= size )  {     throw new  Index Out Of Bounds Exception ( ""n >= size (  ) "" )  ;  } try {     values [ n ]  = value ;      sorted = false ;  } catch  (  Array Index Out Of Bounds Exception ex )  {     //  Translate the exception .      if  ( n < 0 )  {         throw new  Illegal Argument Exception ( ""n < 0"" )  ;      } }}"
9144,"protected static  Die die ( boolean aborted,  Throwable cause ) { return new  Die ( aborted, cause )  ; }"
9145,public  Pack File get Pack File (  ) { return pack File ; }
9146,"protected void on Unhandled Exception (  Exception e ) { F Log . wtf ( this . get Class (  ) , ""unhandled exception"", e )  ; }"
9147,int serialize Publication Resolution (  ) { switch ( publication Resolution )  {     default:     case RESOLUTION_100_MS:         return 100 ;      case RESOLUTION_1_S:         return 1000 ;      case RESOLUTION_10_S:         return 10 * 1000 ;      case RESOLUTION_10_M:         return 10 * 1000 * 60 ;  }}
9148,"private  String get Raw Min Sdk Version (  String default Min Sdk Version ) {  Optional< Xml Element> uses Sdk = get By Type And Key (  Manifest Model .  Node Types . USES_SDK, null )  ;  if  ( uses Sdk . is Present (  )  )  {      Optional< Xml Attribute> min Sdk Version = uses Sdk . get (  )  . get Attribute (  Xml Node . from Xml Name ( ""android:min Sdk Version"" )  )  ;      if  ( min Sdk Version . is Present (  )  )  {         return min Sdk Version . get (  )  . get Value (  )  ;      } } return default Min Sdk Version ; }"
9149,"public boolean contains ( T node, boolean identity ) { if  ( node == null )      throw new  Illegal Argument Exception ( ""node cannot be null . "" )  ;  if  ( identity )  {     for  (  Node n : nodes )  if  ( n == node )          return true ;  } else {     for  (  Node other : nodes )  if  ( other . equals ( node )  )          return true ;  } return false ; }"
9150,"public  Rect F fill ( final PDF Renderer state, final  Canvas g, final  Path s ) { g . draw Path ( s, main Paint )  ;  final  Rect F bounds = new  Rect F (  )  ;  final  Rect F result = new  Rect F (  )  ;  s . compute Bounds ( bounds, false )  ;  g . get Matrix (  )  . map Rect ( result, bounds )  ;  return bounds ; }"
9151,"public com . anychart . core . axes .  Circular fill ( com . anychart . graphics . vector .  Gradient Key color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
9152,public void set Non Blocking Scheduled Executor (  Scheduled Executor Service executor ) { m Non Blocking Scheduled Executor = executor ; }
9153,"public void test Acquire Token Negative Arguments (  )  throws  No Such Algorithm Exception,  No Such Padding Exception{  File Mock Context mock Context = new  File Mock Context ( get Instrumentation (  )  . get Context (  )  )  ;  final  Authentication Context context = new  Authentication Context ( mock Context, VALID_AUTHORITY, false )  ;  final  Mock Activity test Activity = new  Mock Activity (  )  ;  final  Mock Authentication Callback test Empty Callback = new  Mock Authentication Callback (  )  ;   Assert Utils . assert Throws Exception (  Illegal Argument Exception . class, ""callback"", new  Runnable (  )  {     @ Override     public void run (  )  {         context . acquire Token ( test Activity . get Test Activity (  ) , ""resource"", ""client Id"", ""redirect Uri"", ""userid"", null )  ;      } } )  ;   Assert Utils . assert Throws Exception (  Illegal Argument Exception . class, ""resource"", new  Runnable (  )  {     @ Override     public void run (  )  {         context . acquire Token ( test Activity . get Test Activity (  ) , null, ""client Id"", ""redirect Uri"", ""userid"", test Empty Callback )  ;      } } )  ;   Assert Utils . assert Throws Exception (  Illegal Argument Exception . class, ""resource"", new  Runnable (  )  {     @ Override     public void run (  )  {         context . acquire Token ( test Activity . get Test Activity (  ) , """", ""client Id"", ""redirect Uri"", ""userid"", test Empty Callback )  ;      } } )  ;   Assert Utils . assert Throws Exception (  Illegal Argument Exception . class, ""clientid"", new  Runnable (  )  {     @ Override     public void run (  )  {         context . acquire Token ( test Activity . get Test Activity (  ) , ""resource"", null, ""redirect Uri"", ""userid"", test Empty Callback )  ;      } } )  ; }"
9154,"public final  Request get Request (  ) {  Object tag = get Tag (  )  ;  if  ( tag != null )  {     if  ( tag instanceof  Request )  {         return  (  Request )  tag ;      } else {         throw new  Illegal Argument Exception ( "" You must not pass non-R . id ids to set Tag ( id ) "" )  ;      } } return null ; }"
9155,public static int get Input OOB Action Value ( final  Input OOB Action type ) { switch ( type )  {     case PUSH:         return 0 ;      case TWIST:         return 1 ;      case INPUT_NUMERIC:         return 2 ;      case INPUT_ALPHA_NUMERIC:         return 3 ;      case NO_INPUT:     default:         return -1 ;  }}
9156,public  Cookie Middleware get Cookie Middleware (  ) { return cookie Middleware ; }
9157,public void execute On Progress ( float progress ) { if  ( is Bugreport In Progress (  )  )  {      Bugreport Callback callback = this . callback ;      executor . execute (  (  )  -> callback . on Progress ( progress )  )  ;  }}
9158,"private boolean delete File (  String path ) { if  ( ! String Utils . is Empty ( path )  )  {     if  ( ! File Utils . delete File ( path )  )  {          Log . e ( TAG, new  String Builder (  )  . append ( ""delete file fail, path is "" )  . append ( path )  . to String (  )  )  ;          return false ;      } } return true ; }"
9159,public boolean should Log ( int level ) { return true ; }
9160,"public void set Owner (  String owner ) { set Object Value (  Data Types . OBJ_OWNER, owner )  ; }"
9161,"private  Object [  ]  ensure Capacity ( int min Capacity ) { tmp Count =  Math . max ( tmp Count, min Capacity )  ;  if  ( tmp . length < min Capacity )  {     //  Compute smallest power of 2 > min Capacity     int new Size = min Capacity ;      new Size |= new Size >> 1 ;      new Size |= new Size >> 2 ;      new Size |= new Size >> 4 ;      new Size |= new Size >> 8 ;      new Size |= new Size >> 16 ;      new Size++ ;      if  ( //  Not bloody likely!     new Size < 0 )          new Size = min Capacity ;      else         new Size =  Math . min ( new Size, a . length >>> 1 )  ;       Object [  ]  new Array = new  Object [ new Size ]  ;      tmp = new Array ;  } return tmp ; }"
9162,"public  Model With Varargs Constructors_ on Unbind (  On Model Unbound Listener< Model With Varargs Constructors_,  Object> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
9163,public int length (  ) { return end - start ; }
9164,"public com . anychart . charts .  Sankey enabled (  Boolean enabled ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . enabled ( %s )  ; "", enabled )  )  ;  return this ; }"
9165,"public  Adapter Holder set Image Bitmap ( int view Id,  Bitmap bm ) {  Image View view = get View ( view Id )  ;  view . set Image Bitmap ( bm )  ;  return this ; }"
9166,"public void test Parameterized Constructor (  )  throws  Remote Service Exception{ var obj = new  Delayed Remote Service (  System . nano Time (  )  - 2000 * 1000 * 1000, 1 )  ;  assert Equals ( "" Delayed service is working"", obj . call (  )  )  ; }"
9167,"public com . anychart . charts .  Tag Cloud animation (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . animation ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9168,public com . didiglobal . booster . aapt2 .  Resources Internal .  Compiled File .  Symbol .  Builder get Exported Symbol Builder ( int index ) { return get Exported Symbol Field Builder (  )  . get Builder ( index )  ; }
9169,"public static  Listenable Future<O> transform Async (  Listenable Future<I> input,  Async Function<? super I, ? extends O> function,  Executor executor ) { return  Abstract Transform Future . create ( input, function, executor )  ; }"
9170,"protected final  Optional< Annotation Spec> generated Annotation (  ) { return generated Annotation Spec ( elements, source Version,  Grpc Service . class,  String . format ( ""@%s annotation on %s"",  Grpc Service . class . get Canonical Name (  ) , service Implementation Class Name )  )  ; }"
9171,"public static  Stack Frame [  ]  convert Js Stack Trace (  String stack ) {  String [  ]  stack Trace = stack . split ( ""\n"" )  ;   Stack Frame [  ]  result = new  Stack Frame [ stack Trace . length ]  ;  for  ( int i = 0 ;  i < stack Trace . length ;  ++i )  {      Matcher matcher1 = STACK_FRAME_PATTERN1 . matcher ( stack Trace [ i ]  )  ;       Matcher matcher2 = STACK_FRAME_PATTERN2 . matcher ( stack Trace [ i ]  )  ;       Matcher matcher ;      if  ( matcher2 . find (  )  )  {         matcher = matcher2 ;      } else if  ( matcher1 . find (  )  )  {         matcher = matcher1 ;      } else {         result [ i ]  = new  Stack Frame Impl ( null, stack Trace [ i ] , -1, -1 )  ;          continue ;      }     result [ i ]  = new  Stack Frame Impl ( matcher . group ( 2 ) , matcher . group ( 1 )  == null ? "" ( unknown ) "" : matcher . group ( 1 ) ,  Integer . parse Int ( matcher . group ( 3 )  ) ,  Integer . parse Int ( matcher . group ( 4 )  )  )  ;  } return result ; }"
9172,public static  Image Source for Uri ( @ Nullable  Uri uri ) { if  ( uri == null )  {     return empty Source (  )  ;  } return get (  )  . single Uri ( uri )  ; }
9173,public  Min Max Priority Queue<T> create (  ) { return create (  Collections . <T>empty Set (  )  )  ; }
9174,private  File get Subdirectory (  String resource Id ) { return new  File ( get Subdirectory Path ( resource Id )  )  ; }
9175,"public  Affine2 set To Trn Scl (  Vector2 trn,  Vector2 scale ) { return set To Trn Scl ( trn . x, trn . y, scale . x, scale . y )  ; }"
9176,"public com . anychart . charts .  Linear Gauge margin (  String value1,  String value2,  String value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , wrap Quotes ( value4 )  )  )  ;  return this ; }"
9177,"Ct Field get Field2 (  String name,  String desc ) { return null ; }"
9178,"public  Model Do Not Hash_ on Unbind (  On Model Unbound Listener< Model Do Not Hash_,  Object> listener ) { on Mutation (  )  ;  this . on Model Unbound Listener_epoxy Generated Model = listener ;  return this ; }"
9179,"public static  String get String ( @ Non Null final  String key, final  String default Value ) { return get String ( key, default Value, get Default Cache Double Utils (  )  )  ; }"
9180,public  Push Command set Output Stream (  Output Stream out ) { this . out = out ;  return this ; }
9181,"public static void add Swift Stdlib Step If Needed (  Source Path Resolver Adapter resolver,  Path destination Path,  Path bundle Root,  Optional< Supplier< Code Sign Identity>> code Sign Identity Supplier,  Immutable List .  Builder< Step> steps Builder, boolean is For Packaging,  String bundle Extension, boolean copy Swift Stdlib To Frameworks, boolean use Lipo Thin,  Optional< Tool> swift Stdlib Tool,  Project Filesystem project Filesystem,  Build Target build Target,  Path sdk Path,  Tool lipo,  Path bundle Binary Path,  Apple Bundle Destinations destinations, boolean is App Clip ) { //  It's apparently safe to run this even on a non-swift bundle  ( in that case, no libs // are copied over )  .  boolean should Copy Swift Stdlib = !bundle Extension . equals (  Apple Bundle Extension . APPEX . to File Extension (  )  )  &&  ( !bundle Extension . equals (  Apple Bundle Extension . FRAMEWORK . to File Extension (  )  )  && !is App Clip || copy Swift Stdlib To Frameworks )  ;  if  ( swift Stdlib Tool . is Present (  )  && should Copy Swift Stdlib )  {      String temp Dir Pattern = is For Packaging ? ""__swift_packaging_temp__%s"" : ""__swift_temp__%s"" ;      steps Builder . add ( new  Swift Stdlib Step ( project Filesystem . get Root Path (  ) ,  Build Target Paths . get Scratch Path ( project Filesystem, build Target, temp Dir Pattern ) , sdk Path, destination Path, swift Stdlib Tool . get (  )  . get Command Prefix ( resolver ) , lipo . get Command Prefix ( resolver ) , use Lipo Thin, bundle Binary Path,  Immutable Set . of ( bundle Root . resolve ( destinations . get Frameworks Path (  )  ) , bundle Root . resolve ( destinations . get Plug Ins Path (  )  )  ) , code Sign Identity Supplier )  )  ;  }}"
9182,"public com . anychart . core . gantt .  Time Line Header font Color (  String color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Color ( %s )  ; "", wrap Quotes ( color )  )  )  ;  return this ; }"
9183,"public com . anychart . data .  Table Selectable select (  String start Date,  String end Date, com . anychart . enums .  Interval interval Unit,  Number interval Count ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select ( %s, %s, %s, %s )  ; "", wrap Quotes ( start Date ) , wrap Quotes ( end Date ) ,  ( interval Unit != null )  ? interval Unit . get Js Base (  )  : null, interval Count )  )  ;  return this ; }"
9184,"public static  String pretty Print ( @ Non Null  Node node, boolean end With Newline ) { return pretty Print ( node,  Xml Format Preferences . defaults (  ) ,  Xml Format Style . get ( node ) ,  Sdk Utils . get Line Separator (  ) , end With Newline )  ; }"
9185,"public void test Add Annotation Processor With Options (  )  throws  Exception{  Test Java Plugin Scenario scenario = new  Test Java Plugin Scenario (  )  ;  scenario . add Annotation Processor Target ( valid Java Binary, "" My Processor"" )  ;  scenario . get Annotation Processing Params Builder (  )  . add Parameters ( "" My Parameter"" )  ;  scenario . get Annotation Processing Params Builder (  )  . add Parameters ( "" My Key= My Value"" )  ;  scenario . get Annotation Processing Params Builder (  )  . set Process Only ( true )  ;   Immutable List< String> parameters = scenario . build And Get Compile Parameters (  )  ;   More Asserts . assert Contains One ( parameters, ""-processorpath"" )  ;   More Asserts . assert Contains One ( parameters, ""-processor"" )  ;  assert Has Processor ( parameters, "" My Processor"" )  ;   More Asserts . assert Contains One ( parameters, ""-s"" )  ;   More Asserts . assert Contains One ( parameters, annotation Scenario Gen Path )  ;   More Asserts . assert Contains One ( parameters, ""-proc:only"" )  ;  assert Equals ( "" Expected '-processor  My Processor' parameters"", parameters . index Of ( ""-processor"" )  + 1, parameters . index Of ( "" My Processor"" )  )  ;  assert Equals ( "" Expected '-s "" + annotation Scenario Gen Path + ""' parameters"", parameters . index Of ( ""-s"" )  + 1, parameters . index Of ( annotation Scenario Gen Path )  )  ;   More Asserts . assert Contains One ( parameters, ""-A My Parameter"" )  ;   More Asserts . assert Contains One ( parameters, ""-A My Key= My Value"" )  ; }"
9186,"public void rotate (  Vector3 axis, float angle ) { this . transform . rotate ( axis, angle )  ; }"
9187,"public void print (  String paper Size Or Options,  Boolean landscape ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . print ( %s, %s )  ; "", wrap Quotes ( paper Size Or Options ) , landscape )  )  ; }"
9188,"public  String read Line (  ) { if  ( bytes Left (  )  == 0 )  {     return null ;  } int line Limit = position ;  while  ( line Limit < limit && ! Util . is Linebreak ( data [ line Limit ]  )  )  {     line Limit++ ;  } if  ( line Limit - position >= 3 && data [ position ]  ==  ( byte )  0x EF && data [ position + 1 ]  ==  ( byte )  0x BB && data [ position + 2 ]  ==  ( byte )  0x BF )  {     //  There's a UTF-8 byte order mark at the start of the line .   Discard it .      position += 3 ;  }  String line =  Util . from Utf8 Bytes ( data, position, line Limit - position )  ;  position = line Limit ;  if  ( position == limit )  {     return line ;  } if  ( data [ position ]  == '\r' )  {     position++ ;      if  ( position == limit )  {         return line ;      } } if  ( data [ position ]  == '\n' )  {     position++ ;  } return line ; }"
9189,"protected void create Shaders (  ) { if  ( !m Is Dirty )      return ;  m Vertex Shader = m Custom Vertex Shader ;  m Fragment Shader = m Custom Fragment Shader ;  // // --  Check textures //  List<A Texture> diffuse Textures = null ;   List<A Texture> light Map Textures = null ;   List<A Texture> normal Map Textures = null ;   List<A Texture> env Map Textures = null ;   List<A Texture> sky Textures = null ;   List<A Texture> spec Map Textures = null ;   List<A Texture> alpha Map Textures = null ;  boolean has Cube Maps = false ;  boolean has Video Texture = false ;  for  ( int i = 0 ;  i < m Texture List . size (  )  ;  i++ )  {     A Texture texture = m Texture List . get ( i )  ;      switch ( texture . get Texture Type (  )  )  {         case VIDEO_TEXTURE:             has Video Texture = true ;          // no break statement, add the video texture to the diffuse textures         case DIFFUSE:         case RENDER_TARGET:             if  ( diffuse Textures == null )                  diffuse Textures = new  Array List<> (  )  ;              diffuse Textures . add ( texture )  ;              break ;          case LIGHT:             if  ( light Map Textures == null )                  light Map Textures = new  Array List<> (  )  ;              light Map Textures . add ( texture )  ;              break ;          case NORMAL:             if  ( normal Map Textures == null )                  normal Map Textures = new  Array List<> (  )  ;              normal Map Textures . add ( texture )  ;              break ;          case CUBE_MAP:             has Cube Maps = true ;          case SPHERE_MAP:             boolean is Sky Texture = false ;              boolean is Environment Texture = false ;              if  ( texture . get Class (  )  ==  Sphere Map Texture . class )  {                 is Sky Texture =  (  (  Sphere Map Texture )  texture )  . is Sky Texture (  )  ;                  is Environment Texture =  (  (  Sphere Map Texture )  texture )  . is Environment Texture (  )  ;              } else if  ( texture . get Class (  )  ==  Cube Map Texture . class )  {                 is Sky Texture =  (  (  Cube Map Texture )  texture )  . is Sky Texture (  )  ;                  is Environment Texture =  (  (  Cube Map Texture )  texture )  . is Environment Texture (  )  ;              }             if  ( is Sky Texture )  {                 if  ( sky Textures == null )                      sky Textures = new  Array List<> (  )  ;                  sky Textures . add ( texture )  ;              } else if  ( is Environment Texture )  {                 if  ( env Map Textures == null )                      env Map Textures = new  Array List<> (  )  ;                  env Map Textures . add ( texture )  ;              } else if  ( has Cube Maps )  {                 if  ( diffuse Textures == null )                      diffuse Textures = new  Array List<> (  )  ;                  diffuse Textures . add ( texture )  ;              }             break ;          case SPECULAR:             if  ( spec Map Textures == null )                  spec Map Textures = new  Array List<> (  )  ;              spec Map Textures . add ( texture )  ;              break ;          case ALPHA:             if  ( alpha Map Textures == null )                  alpha Map Textures = new  Array List<> (  )  ;              alpha Map Textures . add ( texture )  ;              break ;          default:             break ;      } } if  ( m Vertex Shader == null && m Fragment Shader == null )  {     m Vertex Shader = new  Vertex Shader (  )  ;      m Vertex Shader . enable Time ( m Time Enabled )  ;      m Vertex Shader . has Cube Maps ( has Cube Maps )  ;      m Vertex Shader . has Sky Texture ( sky Textures != null && sky Textures . size (  )  > 0 )  ;      m Vertex Shader . use Vertex Colors ( m Use Vertex Colors )  ;      on Pre Vertex Shader Initialize ( m Vertex Shader )  ;      m Vertex Shader . initialize (  )  ;      m Fragment Shader = new  Fragment Shader (  )  ;      m Fragment Shader . enable Time ( m Time Enabled )  ;      m Fragment Shader . has Cube Maps ( has Cube Maps )  ;      on Pre Fragment Shader Initialize ( m Fragment Shader )  ;      m Fragment Shader . initialize (  )  ;  } else {     if  ( m Vertex Shader . needs Build (  )  )          m Vertex Shader . initialize (  )  ;      if  ( m Fragment Shader . needs Build (  )  )          m Fragment Shader . initialize (  )  ;  } if  ( diffuse Textures != null && diffuse Textures . size (  )  > 0 )  {      Diffuse Texture Fragment Shader Fragment fragment = new  Diffuse Texture Fragment Shader Fragment ( diffuse Textures )  ;      m Fragment Shader . add Shader Fragment ( fragment )  ;  } if  ( normal Map Textures != null && normal Map Textures . size (  )  > 0 )  {      Normal Map Fragment Shader Fragment fragment = new  Normal Map Fragment Shader Fragment ( normal Map Textures )  ;      m Fragment Shader . add Shader Fragment ( fragment )  ;  } if  ( env Map Textures != null && env Map Textures . size (  )  > 0 )  {      Environment Map Fragment Shader Fragment fragment = new  Environment Map Fragment Shader Fragment ( env Map Textures )  ;      m Fragment Shader . add Shader Fragment ( fragment )  ;  } if  ( sky Textures != null && sky Textures . size (  )  > 0 )  {      Sky Texture Fragment Shader Fragment fragment = new  Sky Texture Fragment Shader Fragment ( sky Textures )  ;      m Fragment Shader . add Shader Fragment ( fragment )  ;  } if  ( has Video Texture )      m Fragment Shader . add Preprocessor Directive ( ""#extension GL_OES_EGL_image_external : require"" )  ;  check For Plugins (  Plugin Insert Location . PRE_LIGHTING )  ;  if  ( m Lighting Enabled && m Lights != null && m Lights . size (  )  > 0 )  {     m Vertex Shader . set Lights ( m Lights )  ;      m Fragment Shader . set Lights ( m Lights )  ;      m Lights Vertex Shader Fragment = new  Lights Vertex Shader Fragment ( m Lights )  ;      m Lights Vertex Shader Fragment . set Ambient Color ( m Ambient Color )  ;      m Lights Vertex Shader Fragment . set Ambient Intensity ( m Ambient Intensity )  ;      m Vertex Shader . add Shader Fragment ( m Lights Vertex Shader Fragment )  ;      m Fragment Shader . add Shader Fragment ( new  Lights Fragment Shader Fragment ( m Lights )  )  ;      check For Plugins (  Plugin Insert Location . PRE_DIFFUSE )  ;      if  ( m Diffuse Method != null )  {         m Diffuse Method . set Lights ( m Lights )  ;          I Shader Fragment fragment = m Diffuse Method . get Vertex Shader Fragment (  )  ;          if  ( fragment != null )              m Vertex Shader . add Shader Fragment ( fragment )  ;          fragment = m Diffuse Method . get Fragment Shader Fragment (  )  ;          m Fragment Shader . add Shader Fragment ( fragment )  ;      }     check For Plugins (  Plugin Insert Location . PRE_SPECULAR )  ;      if  ( m Specular Method != null )  {         m Specular Method . set Lights ( m Lights )  ;          m Specular Method . set Textures ( spec Map Textures )  ;          I Shader Fragment fragment = m Specular Method . get Vertex Shader Fragment (  )  ;          if  ( fragment != null )              m Vertex Shader . add Shader Fragment ( fragment )  ;          fragment = m Specular Method . get Fragment Shader Fragment (  )  ;          if  ( fragment != null )              m Fragment Shader . add Shader Fragment ( fragment )  ;      } } check For Plugins (  Plugin Insert Location . PRE_ALPHA )  ;  if  ( alpha Map Textures != null && alpha Map Textures . size (  )  > 0 )  {      Alpha Map Fragment Shader Fragment fragment = new  Alpha Map Fragment Shader Fragment ( alpha Map Textures )  ;      m Fragment Shader . add Shader Fragment ( fragment )  ;  } if  ( light Map Textures != null && light Map Textures . size (  )  > 0 )  {      Light Map Fragment Shader Fragment fragment = new  Light Map Fragment Shader Fragment ( light Map Textures )  ;      m Fragment Shader . add Shader Fragment ( fragment )  ;  } check For Plugins (  Plugin Insert Location . PRE_TRANSFORM )  ;  check For Plugins (  Plugin Insert Location . POST_TRANSFORM )  ;  if  ( m Vertex Shader . needs Build (  )  )      m Vertex Shader . build Shader (  )  ;  if  ( m Fragment Shader . needs Build (  )  )      m Fragment Shader . build Shader (  )  ;  if  (  Raj Log . is Debug Enabled (  )  )  {      Raj Log . d ( ""-=-=-=- VERTEX SHADER -=-=-=-"" )  ;       Raj Log . d ( m Vertex Shader . get Shader String (  )  )  ;       Raj Log . d ( ""-=-=-=- FRAGMENT SHADER -=-=-=-"" )  ;       Raj Log . d ( m Fragment Shader . get Shader String (  )  )  ;  } m Program Handle = create Program ( m Vertex Shader . get Shader String (  ) , m Fragment Shader . get Shader String (  )  )  ;  if  ( m Program Handle == 0 )  {     m Is Dirty = false ;      return ;  } m Vertex Shader . set Locations ( m Program Handle )  ;  m Fragment Shader . set Locations ( m Program Handle )  ;  for  (  String name : m Texture Handles . key Set (  )  )  {     set Texture Handle For Name ( name )  ;  } for  ( int i = 0 ;  i < m Texture List . size (  )  ;  i++ )  {     set Texture Parameters ( m Texture List . get ( i )  )  ;  } m Is Dirty = false ; }"
9190,"private void write Palette (  )  throws IO Exception{ out . write ( color Tab, 0, color Tab . length )  ;  int n =  ( 3 * 256 )  - color Tab . length ;  for  ( int i = 0 ;  i < n ;  i++ )  {     out . write ( 0 )  ;  }}"
9191,"private void init (  ) { //  Pre-loading bitmaps m Background Bitmap = load Bitmaps ( R . array . elf Background Ids )  ;  m Figure Bitmap = load Bitmaps ( R . array . elf Figure Ids )  ;  m Face Bitmap = load Bitmaps ( R . array . elf Face Ids )  ;  m Hour Hand Bitmap = load Bitmaps ( R . array . elf Hour Hand Ids )  ;  m Minute Hand Bitmap = load Bitmaps ( R . array . elf Minute Hand Ids )  ;  //  Initialising paint object for  Bitmap draws m Filter Paint = new  Paint (  )  ;  m Filter Paint . set Filter Bitmap ( true )  ;  //  Initialising background paint m Ambient Background Paint = new  Paint (  )  ;  m Ambient Background Paint . set ARGB ( 255, 0, 0, 0 )  ;  m Ambient Peek Card Border Paint = new  Paint (  )  ;  m Ambient Peek Card Border Paint . set Color (  Color . WHITE )  ;  m Ambient Peek Card Border Paint . set Stroke Width ( BORDER_WIDTH_PX )  ;  //  Load UFO and pre-scale  Bitmap full Size Ufo =  Bitmap Factory . decode Resource ( get Resources (  ) , R . drawable . ufo )  ;  m Ufo Bitmap =  Bitmap . create Scaled Bitmap ( full Size Ufo, full Size Ufo . get Width (  )  / UFO_DISTANCE, full Size Ufo . get Height (  )  / UFO_DISTANCE, true )  ;  //  Initialising time m Calendar =  Gregorian Calendar . get Instance (  )  ; }"
9192,"public int update With On Conflict (  String table,  Content Values values,  String where Clause,  String [  ]  where Args, int conflict Algorithm,  String tag ) { if  ( tag == null )      throw new  Illegal Argument Exception ( "" The tag must not be null . "" )  ;  generate Restoring Update ( table, where Clause, where Args, tag )  ;  return m SQ Lite Database . update With On Conflict ( table, values, where Clause, where Args, conflict Algorithm )  ; }"
9193,"public boolean has Object (  Dfs Reader ctx,  Any Object Id id )  throws IO Exception{ final long offset = idx ( ctx )  . find Offset ( id )  ;  return 0 < offset && !is Corrupt ( offset )  ; }"
9194,"public com . anychart . core . cartesian . series .  Continuous Range Base high Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . high Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
9195,"protected void write Array Out Params To Proxy (  Variable Element param,  Method Spec .  Builder method Builder ) { method Builder . begin Control Flow ( ""if  ( "" + param . get Simple Name (  )  + "" == null ) "" )  ;  method Builder . add Statement ( ""data . write Int ( -1 ) "" )  ;  method Builder . end Control Flow (  )  ;  method Builder . begin Control Flow ( ""else"" )  ;  method Builder . add Statement ( ""data . write Int ( "" + param . get Simple Name (  )  + "" . length ) "" )  ;  method Builder . end Control Flow (  )  ; }"
9196,void open Session (  ) { background Worker . submit ( new  Callable< Void> (  )  {     @ Override     public  Void call (  )  throws  Exception {         do Open Session (  )  ;          return null ;      } } )  ; }
9197,"private void batch Response (  String cache Key,  Batched Image Request request ) { m Batched Responses . put ( cache Key, request )  ;  //  Note that this will be used to deliver responses to all callers in m Batched Responses .  if  ( m Runnable == null )  {     m Runnable = new  Runnable (  )  {         @ Override         public void run (  )  {             for  (  Batched Image Request bir : m Batched Responses . values (  )  )  {                 for  (  Image Container container : bir . m Containers )  {                     // skip them .                      if  ( container . m Listener == null )  {                         continue ;                      }                     if  ( bir . get Error (  )  == null )  {                         container . m Bitmap = bir . m Response Bitmap ;                          container . m Listener . on Response ( container, false )  ;                      } else {                         container . m Listener . on Error Response ( bir . get Error (  )  )  ;                      }                 }             }             m Batched Responses . clear (  )  ;              m Runnable = null ;          }     } ;      //  Post the runnable .      m Handler . post Delayed ( m Runnable, m Batch Response Delay Ms )  ;  }}"
9198,public double length2 (  ) { return  ( x * x + y * y + z * z )  ; }
9199,public boolean get Skip Issuer Https Check (  ) { return m Skip Issuer Https Check ; }
9200,"public com . anychart . core . gantt . elements .  Grouping Tasks Element selected (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9201,"public com . anychart . core . ui .  Background background (  ) { return new com . anychart . core . ui .  Background ( js Base + "" . background (  ) "" )  ; }"
9202,"public static void set Translucent For Coordinator Layout (  Activity activity, @ Int Range ( from = 0, to = 255 )  int status Bar Alpha ) { if  (  Build . VERSION . SDK_INT <  Build . VERSION_CODES . KITKAT )  {     return ;  } transparent Status Bar ( activity )  ;  add Translucent View ( activity, status Bar Alpha )  ; }"
9203,"public  Immutable Sorted Map< Document Key,  Document> reject Batch ( int batch Id ) { return persistence . run Transaction ( "" Reject batch"",  (  )  -> {      Mutation Batch to Reject = mutation Queue . lookup Mutation Batch ( batch Id )  ;      hard Assert ( to Reject != null, "" Attempt to reject nonexistent batch!"" )  ;      mutation Queue . remove Mutation Batch ( to Reject )  ;      mutation Queue . perform Consistency Check (  )  ;      return local Documents . get Documents ( to Reject . get Keys (  )  )  ;  } )  ; }"
9204,public double get Tokens Per Seconds (  ) { switch ( time Unit )  {     case NANOSECONDS:         return  (  ( double )  num Tokens Per Total Time Unit / num Time Units )  * SECONDS . to Nanos ( 1 )  ;      case MICROSECONDS:         return  (  ( double )  num Tokens Per Total Time Unit / num Time Units )  * SECONDS . to Micros ( 1 )  ;      case MILLISECONDS:         return  (  ( double )  num Tokens Per Total Time Unit / num Time Units )  * SECONDS . to Millis ( 1 )  ;      default:         return  ( double )  num Tokens Per Total Time Unit / time Unit . to Seconds ( num Time Units )  ;  }}
9205,public void set X Path Factory ( X Path Factory xpath Factory ) { this . xpath Factory = xpath Factory ; }
9206,public final int limit (  ) { return limit ; }
9207,public  Factory set Manifest Parser (  Parsing Loadable .  Parser<? extends  Dash Manifest> manifest Parser ) {  Assertions . check State ( !is Create Called )  ;  this . manifest Parser =  Assertions . check Not Null ( manifest Parser )  ;  return this ; }
9208,protected  String service Name (  ) { return get Class (  )  . get Simple Name (  )  ; }
9209,protected void set File Size ( long file Size ) { this . file Size = file Size ; }
9210,"private static  String get Version Name ( final  Context app Context ) { try {      Package Info pi = app Context . get Package Manager (  )  . get Package Info ( app Context . get Package Name (  ) , 0 )  ;      return pi . version Name == null ? """" : pi . version Name ;  } catch  (  Name Not Found Exception e )  {     return """" ;  }}"
9211,"private void read Sample (  Parsable Byte Array data ) { int bytes To Read =  Math . min ( data . bytes Left (  ) , sample Size - bytes Read )  ;  current Output . sample Data ( data, bytes To Read )  ;  bytes Read += bytes To Read ;  if  ( bytes Read == sample Size )  {     current Output . sample Metadata ( time Us, C . BUFFER_FLAG_KEY_FRAME, sample Size, 0, null )  ;      time Us += current Sample Duration ;      set Finding Sample State (  )  ;  }}"
9212,public void set Stroke Paint ( PDF Paint paint ) { state . stroke Paint = paint ; }
9213,"public static  Firebase Storage get Instance (  ) {  Firebase App app =  Firebase App . get Instance (  )  ;   Preconditions . check Argument ( app != null, "" You must call  Firebase App . initialize (  )  first . "" )  ;  assert app != null ;  return get Instance ( app )  ; }"
9214,public  Immutable Range Set<C> sub Range Set (  Range<C> range ) { if  ( !is Empty (  )  )  {      Range<C> span = span (  )  ;      if  ( range . encloses ( span )  )  {         return this ;      } else if  ( range . is Connected ( span )  )  {         return new  Immutable Range Set<C> ( intersect Ranges ( range )  )  ;      } } return of (  )  ; }
9215,public  List< Dfs Reftable> files (  ) { return  Collections . unmodifiable List ( files )  ; }
9216,"public  Single< Object> as Rx Single (  ) { return  Rx Java Utils . create Single ( stor IOSQ Lite, this )  ; }"
9217,"public com . anychart . standalones .  Project Timeline row Hover Fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Hover Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
9218,public final  Register Spec List get Sources (  ) { return sources ; }
9219,public void set Content (  String content ) {}
9220,"private static  Optional< Path> get Main Cell Buck Out (  Path root,  Optional< Embedded Cell Buck Out Info> embedded Cell Buck Out Info Optional ) { if  ( !embedded Cell Buck Out Info Optional . is Present (  )  )  {     return  Optional . empty (  )  ;  }  Embedded Cell Buck Out Info embedded Cell Buck Out Info = embedded Cell Buck Out Info Optional . get (  )  ;   Path main Cell Buck Out = embedded Cell Buck Out Info . get Main Cell Root (  )  . resolve ( embedded Cell Buck Out Info . get Main Cell Buck Paths (  )  . get Buck Out (  )  )  ;  return  Optional . of ( root . relativize ( main Cell Buck Out )  )  ; }"
9221,public boolean is Optimize Art Load Dex (  ) { return optimize Art Load Dex ; }
9222,"protected boolean can Select Format (  Format format, int track Bitrate, float playback Speed, long effective Bitrate ) { return  Math . round ( track Bitrate * playback Speed )  <= effective Bitrate ; }"
9223,"private void open Animate (  View view, int position ) { if  ( !opened . get ( position )  )  {     generate Reveal Animate ( view, true, false, position )  ;  }}"
9224,public  Builder set Worker Info ( com . facebook . buck . remoteexecution . proto .  Worker Info value ) { if  ( worker Info Builder_ == null )  {     if  ( value == null )  {         throw new  Null Pointer Exception (  )  ;      }     worker Info_ = value ;      on Changed (  )  ;  } else {     worker Info Builder_ . set Message ( value )  ;  } return this ; }
9225,public  Char Sequence get Sub Title (  ) { return m Sub Title ; }
9226,public static  Builder builder (  ) { return new  Builder (  )  ; }
9227,public void set Divider Drawable (  Drawable divider ) { if  ( divider == m Divider )  {     return ;  } m Divider = divider ;  if  ( divider != null )  {     m Divider Width = divider . get Intrinsic Width (  )  ;      m Divider Height = divider . get Intrinsic Height (  )  ;  } else {     m Divider Width = 0 ;      m Divider Height = 0 ;  } set Will Not Draw ( divider == null )  ;  request Layout (  )  ; }
9228,"private void test Streamed Loading ( int [  ]  outcomes, int [  ]  dh Interaction ) { for  ( int num Immediate = 0 ;  num Immediate <= 1 ;  num Immediate++ )  {     reset ( m Data Source Supplier, m Drawee Hierarchy )  ;       System . out . println ( ""num Immediate: "" + num Immediate )  ;      test Streamed Loading ( num Immediate, outcomes, dh Interaction )  ;  }}"
9229,"public com . anychart . core . stock . indicators .  Volume MA volume Ma ( com . anychart . data .  Table Mapping mapping,  Number ma Period, com . anychart . enums .  Moving Average Type ma Type, com . anychart . enums .  Stock Series Type volume Series Type,  String ma Series Type ) { return new com . anychart . core . stock . indicators .  Volume MA (  String . format (  Locale . US, js Base + "" . volume Ma ( %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, ma Period,  ( ma Type != null )  ? ma Type . get Js Base (  )  : null,  ( volume Series Type != null )  ? volume Series Type . get Js Base (  )  : null, wrap Quotes ( ma Series Type )  )  )  ; }"
9230,public void set Hide Underline ( boolean hide Underline ) { this . hide Underline = hide Underline ;  init Padding (  )  ;  post Invalidate (  )  ; }
9231,"public com . anychart . charts .  Polar margin (  Number [  ]  margin ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s )  ; "",  Arrays . to String ( margin )  )  )  ;  return this ; }"
9232,"public static byte [  ]  encrypt Hmac SHA256 ( final byte [  ]  data, final byte [  ]  key ) { return hmac Template ( data, key, "" Hmac SHA256"" )  ; }"
9233,public void remove Excluded Name (  String name ) { table . remove ( name )  ; }
9234,"public com . anychart . core . axes .  Circular Ticks minor Ticks (  ) { return new com . anychart . core . axes .  Circular Ticks ( js Base + "" . minor Ticks (  ) "" )  ; }"
9235,"private  Desc Info parse Method Desc (  String desc, boolean is Raw To Obfuscated ) {  Desc Info desc Info = new  Desc Info (  )  ;   Type [  ]  args Obj =  Type . get Argument Types ( desc )  ;   String Buffer arguments Buffer = new  String Buffer (  )  ;   String Buffer desc Buffer = new  String Buffer (  )  ;  desc Buffer . append ( ' ( ' )  ;  for  (  Type type : args Obj )  {      String key = type . get Class Name (  )  . replace ( "" [ "", """" )  . replace ( "" ] "", """" )  ;      if  ( is Raw To Obfuscated )  {         if  ( m Raw Obfuscated Class Map . contains Key ( key )  )  {             arguments Buffer . append ( type . get Class Name (  )  . replace ( key, m Raw Obfuscated Class Map . get ( key )  )  )  ;              desc Buffer . append ( type . to String (  )  . replace ( key, m Raw Obfuscated Class Map . get ( key )  )  )  ;          } else {             arguments Buffer . append ( type . get Class Name (  )  )  ;              desc Buffer . append ( type . to String (  )  )  ;          }     } else {         if  ( m Obfuscated Raw Class Map . contains Key ( key )  )  {             arguments Buffer . append ( type . get Class Name (  )  . replace ( key, m Obfuscated Raw Class Map . get ( key )  )  )  ;              desc Buffer . append ( type . to String (  )  . replace ( key, m Obfuscated Raw Class Map . get ( key )  )  )  ;          } else {             arguments Buffer . append ( type . get Class Name (  )  )  ;              desc Buffer . append ( type . to String (  )  )  ;          }     }     arguments Buffer . append ( ',' )  ;  } desc Buffer . append ( ' ) ' )  ;   Type return Obj ;  try {     return Obj =  Type . get Return Type ( desc )  ;  } catch  (  Array Index Out Of Bounds Exception e )  {     return Obj =  Type . get Return Type ( desc + "" ; "" )  ;  } if  ( is Raw To Obfuscated )  {      String key = return Obj . get Class Name (  )  . replace ( "" [ "", """" )  . replace ( "" ] "", """" )  ;      if  ( m Raw Obfuscated Class Map . contains Key ( key )  )  {         desc Info . set Return Type ( return Obj . get Class Name (  )  . replace ( key, m Raw Obfuscated Class Map . get ( key )  )  )  ;          desc Buffer . append ( return Obj . to String (  )  . replace ( key, m Raw Obfuscated Class Map . get ( key )  )  )  ;      } else {         desc Info . set Return Type ( return Obj . get Class Name (  )  )  ;          desc Buffer . append ( return Obj . to String (  )  )  ;      } } else {      String key = return Obj . get Class Name (  )  . replace ( "" [ "", """" )  . replace ( "" ] "", """" )  ;      if  ( m Obfuscated Raw Class Map . contains Key ( key )  )  {         desc Info . set Return Type ( return Obj . get Class Name (  )  . replace ( key, m Obfuscated Raw Class Map . get ( key )  )  )  ;          desc Buffer . append ( return Obj . to String (  )  . replace ( key, m Obfuscated Raw Class Map . get ( key )  )  )  ;      } else {         desc Info . set Return Type ( return Obj . get Class Name (  )  )  ;          desc Buffer . append ( return Obj . to String (  )  )  ;      } } // delete last , if  ( arguments Buffer . length (  )  > 0 )  {     arguments Buffer . delete Char At ( arguments Buffer . length (  )  - 1 )  ;  } desc Info . set Arguments ( arguments Buffer . to String (  )  )  ;  desc Info . set Desc ( desc Buffer . to String (  )  )  ;  return desc Info ; }"
9236,"public com . anychart . standalones .  Color Range padding (  String padding ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s )  ; "", wrap Quotes ( padding )  )  )  ;  return this ; }"
9237,"public  File get File (  )  throws IO Exception{ URL url = get URL (  )  ;  return  Resource Utils . get File ( url, get Description (  )  )  ; }"
9238,"public void close Menu ( boolean with Anim ) { m Menu Open = false ;  close Menu Drawable ( m Menu Btn Drawable, with Anim )  ;  if  ( m On Menu Click Listener != null )  {     m On Menu Click Listener . on Menu Closed (  )  ;  }}"
9239,"public synchronized void set Input Source ( @ Nullable  Input Source input Source ) { set Input Source ( input Source, null )  ; }"
9240,"public  String trim Trailing From (  Char Sequence sequence ) { int len = sequence . length (  )  ;  for  ( int last = len - 1 ;  last >= 0 ;  last-- )  {     if  ( !matches ( sequence . char At ( last )  )  )  {         return sequence . sub Sequence ( 0, last + 1 )  . to String (  )  ;      } } return """" ; }"
9241,"public  String get Cpu Name (  ) { try {      Random Access File cpu Stat = new  Random Access File ( CPU_INFO_PATH, ""r"" )  ;      // check cpu type      String line ;      while  ( null !=  ( line = cpu Stat . read Line (  )  )  )  {          String [  ]  values = line . split ( "":"" )  ;          if  ( values [ 0 ]  . contains ( INTEL_CPU_NAME )  || values [ 0 ]  . contains ( "" Processor"" )  )  {             cpu Stat . close (  )  ;               Log . d ( LOG_TAG, ""CPU name="" + values [ 1 ]  )  ;              return values [ 1 ]  ;          }     } } catch  ( IO Exception e )  {      Log . e ( LOG_TAG, ""IO Exception: "" + e . get Message (  )  )  ;  } return """" ; }"
9242,private  Bitmap get Bitmap (  Bitmap [  ]  bitmaps ) { if  ( !m Ambient )  {     //  Active mode     return bitmaps [ 0 ]  ;  } else if  ( !m Low Bit Ambient && !m Burn In Protection )  {     //  Ambient mode     return bitmaps [ 1 ]  ;  } else if  ( m Burn In Protection )  {     //  Burn in protection mode     return bitmaps [ 3 ]  ;  } else {     //  Low bit ambient mode     return bitmaps [ 2 ]  ;  }}
9243,"Push Result execute (  Progress Monitor monitor )  throws  Not Supported Exception,  Transport Exception{ try {     monitor . begin Task ( PROGRESS_OPENING_CONNECTION,  Progress Monitor . UNKNOWN )  ;      final  Push Result res = new  Push Result (  )  ;      connection = transport . open Push (  )  ;      try {         res . set Advertised Refs ( transport . get URI (  ) , connection . get Refs Map (  )  )  ;          res . peer User Agent = connection . get Peer User Agent (  )  ;          res . set Remote Updates ( to Push )  ;          monitor . end Task (  )  ;          final  Map< String,  Remote Ref Update> preprocessed = prepare Remote Updates (  )  ;          if  ( transport . is Dry Run (  )  )              modify Updates For Dry Run (  )  ;          else if  ( !preprocessed . is Empty (  )  )              connection . push ( monitor, preprocessed, out )  ;      } finally {         connection . close (  )  ;          res . add Messages ( connection . get Messages (  )  )  ;      }     if  ( !transport . is Dry Run (  )  )          update Tracking Refs (  )  ;      for  (  Remote Ref Update rru : to Push . values (  )  )  {         final  Tracking Ref Update tru = rru . get Tracking Ref Update (  )  ;          if  ( tru != null )              res . add ( tru )  ;      }     return res ;  } finally {     walker . close (  )  ;  }}"
9244,public boolean is Word Wrap Enabled (  ) { return m Word Wrap Enabled ; }
9245,"public com . anychart . charts .  Pie connector Stroke ( com . anychart . graphics . vector .  Stroke value,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . connector Stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
9246,"public com . anychart . core . cartesian . series .  Bar3d left (  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", wrap Quotes ( left )  )  )  ;  return this ; }"
9247,public  Cst Method Ref get Method (  ) { return method ; }
9248,"public void add Mount Unmount Extension (  Extension<?, ? super MOUNT_CONTENT> extension ) { if  ( m Mount Unmount Extensions == null )  {     m Mount Unmount Extensions = new  Array List<> (  )  ;      if  ( m Mount Unmount Binder Type To Extension Map != null )  {         throw new  Illegal State Exception ( "" Extension  Map and  Extension  List out of sync!"" )  ;      }     m Mount Unmount Binder Type To Extension Map = new  Hash Map<> (  )  ;  } add Extension ( m Mount Unmount Binder Type To Extension Map, m Mount Unmount Extensions, extension )  ; }"
9249,"public void test All Properties (  ) { final  Spruce Dynamics .  View Property [  ]  properties = {  Spruce Dynamics . ALPHA,  Spruce Dynamics . TRANSLATION_X,  Spruce Dynamics . TRANSLATION_Y,  Spruce Dynamics . TRANSLATION_Z,  Spruce Dynamics . SCALE_X,  Spruce Dynamics . SCALE_Y,  Spruce Dynamics . ROTATION,  Spruce Dynamics . ROTATION_X,  Spruce Dynamics . ROTATION_Y,  Spruce Dynamics . X,  Spruce Dynamics . Y,  Spruce Dynamics . Z,  Spruce Dynamics . SCROLL_X,  Spruce Dynamics . SCROLL_Y } ;   Instrumentation Registry . get Instrumentation (  )  . run On Main Sync (  (  )  -> {     m View1 . set Alpha ( 0f )  ;      m View1 . set Translation X ( 0f )  ;      m View1 . set Translation Y ( 0f )  ;       View Compat . set Translation Z ( m View1, 0f )  ;      m View1 . set Scale X ( 0f )  ;      m View1 . set Scale Y ( 0f )  ;      m View1 . set Rotation ( 0f )  ;      m View1 . set Rotation X ( 0f )  ;      m View1 . set Rotation Y ( 0f )  ;      m View1 . set X ( 0f )  ;      m View1 . set Y ( 0f )  ;       View Compat . set Z ( m View1, 0f )  ;      m View1 . set Scroll X ( 0 )  ;      m View1 . set Scroll Y ( 0 )  ;  } )  ;  final  Spruce Spring Animation [  ]  anims = new  Spruce Spring Animation [ properties . length ]  ;  final  Spruce Dynamics .  On Animation Update Listener [  ]  mock Listeners = new  Spruce Dynamics .  On Animation Update Listener [ properties . length ]  ;  for  ( int i = 0 ;  i < properties . length ;  i++ )  {     anims [ i ]  = new  Spruce Spring Animation ( m View1, properties [ i ] , 1 )  ;      anims [ i ]  . add Update Listener ( new  Spruce Dynamics .  On Animation Update Listener (  )  {         boolean m Is First Frame = true ;          @ Override         public void on Animation Update (  Spruce Dynamics animation, float value, float velocity )  {             if  ( m Is First Frame )  {                 assert Equals ( value, 0f, 0f )  ;              }             m Is First Frame = false ;          }     } )  ;      mock Listeners [ i ]  =  (  animation,  value,  velocity )  -> assert True ( true )  ;      anims [ i ]  . add Update Listener ( mock Listeners [ i ]  )  ;  }  Instrumentation Registry . get Instrumentation (  )  . run On Main Sync (  (  )  -> {     for  ( int i = properties . length - 1 ;  i >= 0 ;  i-- )  {         anims [ i ]  . start (  )  ;      } } )  ;  for  ( int i = 0 ;  i < properties . length ;  i++ )  {     int timeout = i == 0 ? 100 : 0 ;      try {          Thread . sleep ( timeout )  ;      } catch  (  Interrupted Exception e )  {         e . print Stack Trace (  )  ;      } }  Instrumentation Registry . get Instrumentation (  )  . run On Main Sync (  (  )  -> {     for  ( int i = 0 ;  i < properties . length ;  i++ )  {         anims [ i ]  . cancel (  )  ;      } } )  ; }"
9250,"public com . anychart . core . axes .  Stock Date Time parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
9251,"Task< App Check Token Result> fetch Token From Provider (  ) { return app Check Provider . get Token (  )  . continue With Task ( new  Continuation< App Check Token,  Task< App Check Token Result>> (  )  {     @ Override     public  Task< App Check Token Result> then ( @ Non Null  Task< App Check Token> task )  {         if  ( task . is Successful (  )  )  {              App Check Token token = task . get Result (  )  ;              update Stored Token ( token )  ;               App Check Token Result token Result =  Default App Check Token Result . construct From App Check Token ( token )  ;              for  (  App Check Token Listener listener : app Check Token Listener List )  {                 listener . on App Check Token Changed ( token Result )  ;              }             return  Tasks . for Result ( token Result )  ;          }         // their headers .          return  Tasks . for Result (  Default App Check Token Result . construct From Error ( new  Firebase Exception ( task . get Exception (  )  . get Message (  ) , task . get Exception (  )  )  )  )  ;      } } )  ; }"
9252,"public static  Load Bundle Task Progress for Initial ( @ Non Null  Bundle Metadata bundle Metadata ) { return new  Load Bundle Task Progress ( 0, bundle Metadata . get Total Documents (  ) , 0, bundle Metadata . get Total Bytes (  ) , /* exception= */ null,  Task State . RUNNING )  ; }"
9253,"public com . anychart . charts .  Venn credits (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . credits ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
9254,"public void set Vertex Attribute (  String name, int size, int type, boolean normalize, int stride, int offset ) { GL20 gl =  Gdx . gl20 ;  check Managed (  )  ;  int location = fetch Attribute Location ( name )  ;  if  ( location == -1 )      return ;  gl . gl Vertex Attrib Pointer ( location, size, type, normalize, stride, offset )  ; }"
9255,"private  String get Asset Path (  Uri uri ) {  List< String> segments = new  Array List< String> ( uri . get Path Segments (  )  )  ;  if  ( path == null )  {     segments . remove ( 0 )  ;  } else {     segments . set ( 0, path )  ;  } return  (  Text Utils . join ( ""/"", segments )  )  ; }"
9256,public  Result force Update (  )  throws IO Exception{ force = true ;  return update (  )  ; }
9257,"public void post Events (  Buck Event Bus buck Event Bus,  Fresh Instance Action fresh Instance Action )  throws IO Exception,  Interrupted Exception{ //  Speculatively set to false  Atomic Boolean files Have Changed = new  Atomic Boolean ( false )  ;   Executor Service executor Service =  Most Executors . new Multi Thread Executor ( get Class (  )  . get Name (  ) , num Threads )  ;  buck Event Bus . post (  Watchman Status Event . started (  )  )  ;  try {      List< Callable< Unit>> watchman Queries = new  Array List<> (  )  ;      for  (  Abs Path cell Path : queries . key Set (  )  )  {         watchman Queries . add (  (  )  -> {              Watchman Query query = queries . get ( cell Path )  ;               Watchman Cursor cursor = cursors . get ( cell Path )  ;              if  ( query != null && cursor != null )  {                 try  (  Simple Perf Event .  Scope perf Event =  Simple Perf Event . scope ( buck Event Bus,  Simple Perf Event .  Perf Event Id . of ( ""check_watchman"" ) , ""cell"", cell Path )  ;                       Watchman Client client = watchman Client Factory . new Instance (  )  )  {                     //  Include the cell Path in the finished event so it can be matched with the begin                     // event .                      perf Event . append Finished Info ( ""cell"", cell Path )  ;                      post Events ( buck Event Bus, fresh Instance Action, cell Path, client, query, cursor, files Have Changed, perf Event )  ;                  }             }             return  Unit . UNIT ;          } )  ;      }     //  Run all of the  Watchman queries in parallel .   This can be significant if you have a lot of     // cells .       List< Future< Unit>> futures = executor Service . invoke All ( watchman Queries )  ;      for  (  Future< Unit> future : futures )  {         try {             future . get (  )  ;          } catch  (  Execution Exception e )  {              Throwable cause = e . get Cause (  )  ;              if  ( cause != null )  {                  Throwables . throw If Unchecked ( cause )  ;                   Throwables . propagate If Possible ( cause, IO Exception . class )  ;                   Throwables . propagate If Possible ( cause,  Interrupted Exception . class )  ;              }             throw new  Runtime Exception ( e )  ;          }     }     if  ( !files Have Changed . get (  )  )  {         buck Event Bus . post (  Watchman Status Event . zero File Changes (  )  )  ;      } } finally {     buck Event Bus . post (  Watchman Status Event . finished (  )  )  ;      executor Service . shutdown (  )  ;  }}"
9258,public void set Controller Hide During Ads ( boolean controller Hide During Ads ) { this . controller Hide During Ads = controller Hide During Ads ; }
9259,public int get Bitmap Contiguous Commit Count (  ) { return bitmap Contiguous Commit Count ; }
9260,"public void font Family (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Family (  )  ; "" )  ; }"
9261,public void forget (  Open AL Sound sound ) { for  ( int i = 0 ;  i < recent Sounds . length ;  i++ )  {     if  ( recent Sounds [ i ]  == sound )          recent Sounds [ i ]  = null ;  }}
9262,public void set Time ( long value ) {  Gregorian Calendar cal = new  Gregorian Calendar (  )  ;  cal . set Time ( new  Date ( value )  )  ;  int year = cal . get (  Calendar . YEAR )  ;  if  ( year < 1980 )  {     mod Date = 0x21 ;      time = 0 ;  } else {     mod Date = cal . get (  Calendar . DATE )  ;      mod Date =  ( cal . get (  Calendar . MONTH )  + 1 << 5 )  | mod Date ;      mod Date =  (  ( cal . get (  Calendar . YEAR )  - 1980 )  << 9 )  | mod Date ;      time = cal . get (  Calendar . SECOND )  >> 1 ;      time =  ( cal . get (  Calendar . MINUTE )  << 5 )  | time ;      time =  ( cal . get (  Calendar . HOUR_OF_DAY )  << 11 )  | time ;  }}
9263,"private  Path get Kotlin Home (  ) { if  ( kotlin Home != null )  {     return kotlin Home ;  } try {     //  Check the buck configuration for a specified kotlin home      Optional< String> value = delegate . get Value ( SECTION, ""kotlin_home"" )  ;      if  ( value . is Present (  )  )  {         boolean is Absolute =  Paths . get ( value . get (  )  )  . is Absolute (  )  ;           Optional< Path> home Path = delegate . get Path ( SECTION, ""kotlin_home"", !is Absolute )  ;          if  ( home Path . is Present (  )  &&  Files . is Directory ( home Path . get (  )  )  )  {             return home Path . get (  )  . to Real Path (  )  . normalize (  )  ;          } else {             throw new  Human Readable Exception ( "" Kotlin home directory  ( "" + home Path + "" )  specified in  . buckconfig was not found . "" )  ;          }     } else {         //  If the KOTLIN_HOME environment variable is specified we trust it          String home = delegate . get Environment (  )  . get ( ""KOTLIN_HOME"" )  ;          if  ( home != null )  {             return  Paths . get ( home )  . normalize (  )  ;          } else {             //  Lastly, we try to resolve from the system PATH              Optional< Path> compiler = new  Executable Finder (  )  . get Optional Executable ( DEFAULT_KOTLIN_COMPILER, delegate . get Environment (  )  )  ;              if  ( compiler . is Present (  )  )  {                 kotlin Home = compiler . get (  )  . to Real Path (  )  . get Parent (  )  . normalize (  )  ;                  if  ( kotlin Home != null && kotlin Home . ends With (  Paths . get ( ""bin"" )  )  )  {                     kotlin Home = kotlin Home . get Parent (  )  . normalize (  )  ;                  }                 return kotlin Home ;              } else {                 throw new  Human Readable Exception ( "" Could not resolve kotlin home directory,  Consider setting KOTLIN_HOME . "" )  ;              }         }     } } catch  ( IO Exception io )  {     throw new  Human Readable Exception ( "" Could not resolve kotlin home directory,  Consider setting KOTLIN_HOME . "", io )  ;  }}"
9264,"public  Encryption Chunk get Encryption Chunk (  ) { return  (  Encryption Chunk )  get First ( GUID . GUID_CONTENT_ENCRYPTION,  Encryption Chunk . class )  ; }"
9265,"public static  List< Object [  ] > data Provider (  ) { return  List . of ( new  Object [  ]  { new  Item (  Item Type . POTION, "" Potion of courage"" )  }, new  Object [  ]  { new  Item (  Item Type . RING, "" Ring of shadows"" )  }, new  Object [  ]  { new  Item (  Item Type . POTION, "" Potion of wisdom"" )  }, new  Object [  ]  { new  Item (  Item Type . POTION, "" Potion of blood"" )  }, new  Object [  ]  { new  Item (  Item Type . WEAPON, "" Sword of silver +1"" )  }, new  Object [  ]  { new  Item (  Item Type . POTION, "" Potion of rust"" )  }, new  Object [  ]  { new  Item (  Item Type . POTION, "" Potion of healing"" )  }, new  Object [  ]  { new  Item (  Item Type . RING, "" Ring of armor"" )  }, new  Object [  ]  { new  Item (  Item Type . WEAPON, "" Steel halberd"" )  }, new  Object [  ]  { new  Item (  Item Type . WEAPON, "" Dagger of poison"" )  } )  ; }"
9266,"public  Form Element Controller add Element (  Form Element Controller element ) { return add Element ( element, ordered Elements . size (  )  )  ; }"
9267,"public com . anychart . core . map . series .  Choropleth bounds (  String x,  String y,  String width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , height )  )  ;  return this ; }"
9268,public boolean is Rotation Enabled (  ) { return m Rotate Enabled ; }
9269,public void set In Memory Size ( int in Memory Size ) { this . in Memory Size = in Memory Size ; }
9270,"public void low Fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . low Fill (  )  ; "" )  ; }"
9271,public void set Is Hardware Detected ( boolean is Hardware Detected ) { this . is Hardware Detected = is Hardware Detected ; }
9272,public void set Network Name ( final  String name ) { mesh Network . set Mesh Name ( name )  ;  post Value ( this )  ; }
9273,"public void draw Bottom Line (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . draw Bottom Line (  )  ; "" )  ; }"
9274,public int get Font Weight (  ) { return this . font Weight ; }
9275,public boolean is Title Optional (  ) { return false ; }
9276,"public com . anychart . core .  State Settings low Stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
9277,"public  Path xcode Proj Path (  ) { return this . source Root (  )  . resolve ( this . project (  )  . get Name (  )  + "" . xcodeproj"" )  ; }"
9278,"public static long saturated Pow ( long b, int k ) { check Non Negative ( ""exponent"", k )  ;  if  ( b >= -2 & b <= 2 )  {     switch (  ( int )  b )  {         case 0:             return  ( k == 0 )  ? 1 : 0 ;          case 1:             return 1 ;          case  ( -1 ) :             return  (  ( k & 1 )  == 0 )  ? 1 : -1 ;          case 2:             if  ( k >=  Long . SIZE - 1 )  {                 return  Long . MAX_VALUE ;              }             return 1 L << k ;          case  ( -2 ) :             if  ( k >=  Long . SIZE )  {                 return  Long . MAX_VALUE +  ( k & 1 )  ;              }             return  (  ( k & 1 )  == 0 )  ?  ( 1 L << k )  :  ( -1 L << k )  ;          default:             throw new  Assertion Error (  )  ;      } } long accum = 1 ;  // if b is negative and k is odd then the limit is MIN otherwise the limit is MAX long limit =  Long . MAX_VALUE +  (  ( b >>>  Long . SIZE - 1 )  &  ( k & 1 )  )  ;  while  ( true )  {     switch ( k )  {         case 0:             return accum ;          case 1:             return saturated Multiply ( accum, b )  ;          default:             if  (  ( k & 1 )  != 0 )  {                 accum = saturated Multiply ( accum, b )  ;              }             k >>= 1 ;              if  ( k > 0 )  {                 if  ( -FLOOR_SQRT_MAX_LONG > b | b > FLOOR_SQRT_MAX_LONG )  {                     return limit ;                  }                 b *= b ;              }     } }}"
9279,public  Line Chart Data set Base Value ( float base Value ) { this . base Value = base Value ;  return this ; }
9280,public void set Initial Attribute Values (  Crop Image Options options ) { m Min Crop Window Width = options . min Crop Window Width ;  m Min Crop Window Height = options . min Crop Window Height ;  m Min Crop Result Width = options . min Crop Result Width ;  m Min Crop Result Height = options . min Crop Result Height ;  m Max Crop Result Width = options . max Crop Result Width ;  m Max Crop Result Height = options . max Crop Result Height ; }
9281,"public static  Hash Multiset<E> create (  Iterable<? extends E> elements ) {  Hash Multiset<E> multiset = create (  Multisets . infer Distinct Elements ( elements )  )  ;   Iterables . add All ( multiset, elements )  ;  return multiset ; }"
9282,"public void set Connect Timeout ( int connect Timeout ) { this . client . set Connect Timeout ( connect Timeout,  Time Unit . MILLISECONDS )  ; }"
9283,public  String get Path (  ) { return path . get Path (  )  ; }
9284,"public void verify No Changes (  Path first Output File,  List< Path> output Files )  throws  Parse Exception,  Rule Key Stress Run Exception,  Max Differences Exception,  Graph Traversal Exception{  Rule Key File Parser parser = new  Rule Key File Parser ( new  Rule Key Log File Reader (  )  )  ;   Immutable Set< String> immutable Targets =  Immutable Set . copy Of ( targets )  ;   Parsed Rule Key File original File = parser . parse File ( first Output File . to Absolute Path (  ) , immutable Targets )  ;  for  (  Path file : output Files )  {      Parsed Rule Key File new Rule Key File = parser . parse File ( file, immutable Targets )  ;       Rule Key Differ rule Key Differ = null ;      try {         rule Key Differ = differ Factory . call (  )  ;      } catch  (  Exception e )  {         throw new  Rule Key Stress Run Exception (  String . format ( "" Error creating differ: %s"", e . get Message (  )  ) , e )  ;      }     if  ( rule Key Differ . print Diff ( original File, new Rule Key File )  ==  Diff Result . CHANGES_FOUND )  {         throw new  Rule Key Stress Run Exception (  String . format ( "" Found differences between %s and %s"", original File . filename, new Rule Key File . filename )  )  ;      } }}"
9285,"public static  Closeable Reference<T> of ( @ Propagates Nullable T t ) { return of ( t,  (  Resource Releaser<T> )  DEFAULT_CLOSEABLE_RELEASER )  ; }"
9286,public short get Count (  ) { return  ( short )  records . size (  )  ; }
9287,public void set Next Database Id For Inserts ( int next Id ) { next Database Id For Inserts = next Id ; }
9288,public void add Name Source Listener (  Name Source .  Listener listener ) { if  ( name Source Listeners == null )      name Source Listeners = new  Vector (  )  ;  name Source Listeners . add Element ( listener )  ; }
9289,"public static  Context Imprint  Context Imprint With Key (  Symmetric Key key ) { if  ( key == null )  {     throw new  Null Argument Exception ( ""key cannot be null"" )  ;  } return new  Secure Cell Context Imprint ( key )  ; }"
9290,"private static void add All Includes (  Immutable Set .  Builder< Abs Path> dependents,  Immutable Sorted Set< String> manifest Includes,  Cell cell ) { manifest Includes . for Each (  included Path -> dependents . add (  Abs Path . of ( cell . get Filesystem (  )  . resolve ( included Path )  )  )  )  ;  //  We also know that the all manifests depend on the default includes for the cell .  //  Note:  This is a bad assumption .   While both the project build file and package parsers set // the default includes of the  Parser Config, it is not required and this assumption may not // always hold .   Buck Config buck Config = cell . get Buck Config (  )  ;   Iterable< String> default Includes = buck Config . get View (  Parser Config . class )  . get Default Includes (  )  ;  for  (  String include : default Includes )  {     dependents . add ( resolve Include Path ( cell, include, cell . get Cell Path Resolver (  )  )  )  ;  }}"
9291,"public com . anychart . charts .  Gantt draw (  Boolean async ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . draw ( %s )  ; "", async )  )  ;  return this ; }"
9292,"public com . anychart . standalones .  Markers Factory parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
9293,"public  Immersion Bar title Bar ( @ Id Res int view Id,  View root View, boolean status Bar Color Transform Enable ) { return title Bar ( root View . find View By Id ( view Id ) , status Bar Color Transform Enable )  ; }"
9294,"public void set Annotations (  Annotation [  ]  annotations ) {  Byte Array Output Stream output = new  Byte Array Output Stream (  )  ;   Annotations Writer writer = new  Annotations Writer ( output, const Pool )  ;  try {     int n = annotations . length ;      writer . num Annotations ( n )  ;      for  ( int i = 0 ;  i < n ;  ++i )  annotations [ i ]  . write ( writer )  ;      writer . close (  )  ;  } catch  ( IO Exception e )  {     // should never reach here .      throw new  Runtime Exception ( e )  ;  } set ( output . to Byte Array (  )  )  ; }"
9295,"public com . anychart . core . annotations .  Fibonacci Fan max Width (  String width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", wrap Quotes ( width )  )  )  ;  return this ; }"
9296,public E peek (  ) { return peek First (  )  ; }
9297,public  String get Id For Value (  String value ) { return value To Id . get ( value )  ; }
9298,"public T get View At Path (  View Group root View, int .  .  .  path ) { return  React Test Helper . get View At Path ( root View, path )  ; }"
9299,"public  Base Model View Model_ on Visibility Changed (  On Model Visibility Changed Listener< Base Model View Model_,  Base Model View> listener ) { on Mutation (  )  ;  this . on Model Visibility Changed Listener_epoxy Generated Model = listener ;  return this ; }"
9300,"public void is Equal To Within Tolerance (  Motion Event other, float tolerance ) { check ( ""get Down Time (  ) "" )  . that ( actual . get Down Time (  )  )  . is Equal To ( other . get Down Time (  )  )  ;  check ( ""get Event Time (  ) "" )  . that ( actual . get Event Time (  )  )  . is Equal To ( other . get Event Time (  )  )  ;  check ( ""action (  ) "" )  . that ( actual . get Action (  )  )  . is Equal To ( other . get Action (  )  )  ;  check ( ""button State (  ) "" )  . that ( actual . get Button State (  )  )  . is Equal To ( other . get Button State (  )  )  ;  check ( ""device Id (  ) "" )  . that ( actual . get Device Id (  )  )  . is Equal To ( other . get Device Id (  )  )  ;  check ( ""get Flags (  ) "" )  . that ( actual . get Flags (  )  )  . is Equal To ( other . get Flags (  )  )  ;  check ( ""get Edge Flags (  ) "" )  . that ( actual . get Edge Flags (  )  )  . is Equal To ( other . get Edge Flags (  )  )  ;  check ( ""get X Precision (  ) "" )  . that ( actual . get X Precision (  )  )  . is Equal To ( other . get X Precision (  )  )  ;  check ( ""get Y Precision (  ) "" )  . that ( actual . get Y Precision (  )  )  . is Equal To ( other . get Y Precision (  )  )  ;  check ( ""get X (  ) "" )  . that ( actual . get X (  )  )  . is Within ( tolerance )  . of ( other . get X (  )  )  ;  check ( ""get Y (  ) "" )  . that ( actual . get Y (  )  )  . is Within ( tolerance )  . of ( other . get Y (  )  )  ;  check ( ""get Pressure (  ) "" )  . that ( actual . get Pressure (  )  )  . is Within ( tolerance )  . of ( other . get Pressure (  )  )  ;  check ( ""get Size (  ) "" )  . that ( actual . get Size (  )  )  . is Within ( tolerance )  . of ( other . get Size (  )  )  ;  check ( ""get Touch Major (  ) "" )  . that ( actual . get Touch Major (  )  )  . is Within ( tolerance )  . of ( other . get Touch Major (  )  )  ;  check ( ""get Touch Minor (  ) "" )  . that ( actual . get Touch Minor (  )  )  . is Within ( tolerance )  . of ( other . get Touch Minor (  )  )  ;  check ( ""get Tool Major (  ) "" )  . that ( actual . get Tool Major (  )  )  . is Within ( tolerance )  . of ( other . get Tool Major (  )  )  ;  check ( ""get Tool Minor (  ) "" )  . that ( actual . get Tool Minor (  )  )  . is Within ( tolerance )  . of ( other . get Tool Minor (  )  )  ;  check ( ""get Orientation (  ) "" )  . that ( actual . get Orientation (  )  )  . is Within ( tolerance )  . of ( other . get Orientation (  )  )  ;  check ( ""get Pointer Count (  ) "" )  . that ( actual . get Pointer Count (  )  )  . is Equal To ( other . get Pointer Count (  )  )  ;  for  ( int i = 1 ;  i < actual . get Pointer Count (  )  ;  i++ )  {     check ( ""get X ( %s ) "", i )  . that ( actual . get X ( i )  )  . is Within ( tolerance )  . of ( other . get X ( i )  )  ;      check ( ""get Y ( %s ) "", i )  . that ( actual . get Y ( i )  )  . is Within ( tolerance )  . of ( other . get Y ( i )  )  ;      check ( ""get Pressure ( %s ) "", i )  . that ( actual . get Pressure ( i )  )  . is Within ( tolerance )  . of ( other . get Pressure ( i )  )  ;      check ( ""get Size ( %s ) "", i )  . that ( actual . get Size ( i )  )  . is Within ( tolerance )  . of ( other . get Size ( i )  )  ;      check ( ""get Touch Major ( %s ) "", i )  . that ( actual . get Touch Major ( i )  )  . is Within ( tolerance )  . of ( other . get Touch Major ( i )  )  ;      check ( ""get Touch Minor ( %s ) "", i )  . that ( actual . get Touch Minor ( i )  )  . is Within ( tolerance )  . of ( other . get Touch Minor ( i )  )  ;      check ( ""get Tool Major ( %s ) "", i )  . that ( actual . get Tool Major ( i )  )  . is Within ( tolerance )  . of ( other . get Tool Major ( i )  )  ;      check ( ""get Tool Minor ( %s ) "", i )  . that ( actual . get Tool Minor ( i )  )  . is Within ( tolerance )  . of ( other . get Tool Minor ( i )  )  ;      check ( ""get Orientation ( %s ) "", i )  . that ( actual . get Orientation ( i )  )  . is Within ( tolerance )  . of ( other . get Orientation ( i )  )  ;  } check ( ""get History Size (  ) "" )  . that ( actual . get History Size (  )  )  . is Equal To ( other . get History Size (  )  )  ;  for  ( int i = 0 ;  i < actual . get History Size (  )  ;  i++ )  {     check ( ""get Historical X ( %s ) "", i )  . that ( actual . get X ( i )  )  . is Within ( tolerance )  . of ( other . get X ( i )  )  ;      check ( ""get Historical Y ( %s ) "", i )  . that ( actual . get Historical Y ( i )  )  . is Within ( tolerance )  . of ( other . get Historical Y ( i )  )  ;      check ( ""get Historical Pressure ( %s ) "", i )  . that ( actual . get Historical Pressure ( i )  )  . is Within ( tolerance )  . of ( other . get Historical Pressure ( i )  )  ;      check ( ""get Historical Size ( %s ) "", i )  . that ( actual . get Historical Size ( i )  )  . is Within ( tolerance )  . of ( other . get Historical Size ( i )  )  ;      check ( ""get Historical Touch Major ( %s ) "", i )  . that ( actual . get Historical Touch Major ( i )  )  . is Within ( tolerance )  . of ( other . get Historical Touch Major ( i )  )  ;      check ( ""get Historical Touch Minor ( %s ) "", i )  . that ( actual . get Historical Touch Minor ( i )  )  . is Within ( tolerance )  . of ( other . get Historical Touch Minor ( i )  )  ;      check ( ""get Historical Tool Major ( %s ) "", i )  . that ( actual . get Historical Tool Major ( i )  )  . is Within ( tolerance )  . of ( other . get Historical Tool Major ( i )  )  ;      check ( ""get Historical Tool Minor ( %s ) "", i )  . that ( actual . get Historical Tool Minor ( i )  )  . is Within ( tolerance )  . of ( other . get Historical Tool Minor ( i )  )  ;      check ( ""get Historical Orientation ( %s ) "", i )  . that ( actual . get Historical Orientation ( i )  )  . is Within ( tolerance )  . of ( other . get Historical Orientation ( i )  )  ;  }}"
9301,"List< Allocated Group Range> minus ( final  Allocated Group Range other ) { final  List< Allocated Group Range> results = new  Array List<> (  )  ;  //  Result: |---|                             |-----------|                 |--| if  ( other . low Address > low Address )  {     final  Allocated Group Range left Slice = new  Allocated Group Range ( low Address,  (  Math . min ( high Address, other . low Address - 1 )  )  )  ;      results . add ( left Slice )  ;  } //  Result:                      |--|                      |--|                     |--------| if  ( other . high Address < high Address )  {     final  Allocated Group Range right Slice = new  Allocated Group Range (  Math . max ( other . high Address + 1, low Address ) , high Address )  ;      results . add ( right Slice )  ;  } return results ; }"
9302,"public void min Width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Width (  )  ; "" )  ; }"
9303,public void set Y ( float y ) { translate Y ( y - this . y )  ; }
9304,public final void remove All Internal (  List<T> list ) { clear Internal ( list )  ; }
9305,"public com . anychart . core . stock . scrollerseries .  Hilo left (  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", wrap Quotes ( left )  )  )  ;  return this ; }"
9306,public com . google . protobuf .  Byte String get Client Type Bytes (  ) { java . lang .  Object ref = client Type_ ;  if  ( ref instanceof  String )  {     com . google . protobuf .  Byte String b = com . google . protobuf .  Byte String . copy From Utf8 (  ( java . lang .  String )  ref )  ;      client Type_ = b ;      return b ;  } else {     return  ( com . google . protobuf .  Byte String )  ref ;  }}
9307,"public void set Adapter ( final QMUI Sticky Section Adapter<H, T, VH> adapter, boolean sticky ) { if  ( sticky )  {     QMUI Sticky Section Item Decoration .  Callback<VH> callback = new QMUI Sticky Section Item Decoration .  Callback<VH> (  )  {         @ Override         public int get Relative Sticky Item Position ( int pos )  {             return adapter . get Relative Sticky Position ( pos )  ;          }         @ Override         public boolean is Header Item ( int pos )  {             return adapter . get Item View Type ( pos )  == QMUI Sticky Section Adapter . ITEM_TYPE_SECTION_HEADER ;          }         @ Override         public VH create View Holder (  View Group parent, int view Type )  {             return adapter . create View Holder ( parent, view Type )  ;          }         @ Override         public void bind View Holder ( VH holder, int position )  {             adapter . bind View Holder ( holder, position )  ;          }         @ Override         public int get Item View Type ( int position )  {             return adapter . get Item View Type ( position )  ;          }         @ Override         public void register Adapter Data Observer (  Recycler View .  Adapter Data Observer observer )  {             adapter . register Adapter Data Observer ( observer )  ;          }         @ Override         public void on Header Visibility Changed ( boolean visible )  {         }         @ Override         public void invalidate (  )  {             m Recycler View . invalidate (  )  ;          }     } ;      m Sticky Section Item Decoration = new QMUI Sticky Section Item Decoration<> ( m Sticky Section Wrap View, callback )  ;      m Recycler View . add Item Decoration ( m Sticky Section Item Decoration )  ;  } adapter . set View Callback ( this )  ;  m Recycler View . set Adapter ( adapter )  ; }"
9308,public static  Rectangle peek Scissors (  ) { if  ( scissors . size == 0 )      return null ;  return scissors . peek (  )  ; }
9309,"public void remove All Listeners (  String type ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . remove All Listeners ( %s )  ; "", wrap Quotes ( type )  )  )  ; }"
9310,"public com . anychart . core . ui . labelsfactory .  Label first Labels (  ) { return new com . anychart . core . ui . labelsfactory .  Label ( js Base + "" . first Labels (  ) "" )  ; }"
9311,"public void font Style (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Style (  )  ; "" )  ; }"
9312,"private  String find Best Aggregation Tag (  Aggregation Tree Node node ) {  Map< String,  Integer> type Count = new  Hash Map<> (  )  ;  node . get Children (  )  . for Each (  n -> {      Aggregation Module module = n . get Module (  )  ;      if  ( module == null )  {         return ;      }     if  (  Ij Module Type . UNKNOWN_MODULE . equals ( module . get Module Type (  )  )  || !module . get Module Type (  )  . can Be Aggregated ( project Config )  )  {         return ;      }      String aggregation Tag = module . get Aggregation Tag (  )  ;       Integer count = type Count . get ( aggregation Tag )  ;      type Count . put ( aggregation Tag, count == null ? 1 : count + 1 )  ;  } )  ;  if  ( type Count . is Empty (  )  )  {     return null ;  } return  Collections . max ( type Count . entry Set (  ) ,  Comparator . comparing Int (  Map .  Entry::get Value )  )  . get Key (  )  ; }"
9313,"public void set Rating Type ( int rating Type ) { if  ( rating Type >= 0 && rating Type <=  Rating . RATING_PERCENTAGE )  {     this . rating Type = rating Type ;  } else {     throw new  Illegal Argument Exception ( "" Invalid  Rating Type value "" + rating Type + "" .   The valid range is from 0 to "" +  Rating . RATING_PERCENTAGE )  ;  }}"
9314,"public com . anychart . core . stock . indicators . MMA period (  Number period ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . period ( %s )  ; "", period )  )  ;  return this ; }"
9315,"public static  Query Builder<T2> internal Create (  Abstract Dao<T2, ?> dao ) { return new  Query Builder<T2> ( dao )  ; }"
9316,public static  String get Name ( final  String name ) { if  (  Text Utils . is Empty ( name )  )  {     return name ;  } if  ( name . starts With ( PREFIX_HEADS )  )  {     return name . substring ( PREFIX_HEADS . length (  )  )  ;  } else if  ( name . starts With ( PREFIX_TAG )  )  {     return name . substring ( PREFIX_TAG . length (  )  )  ;  } else if  ( name . starts With ( PREFIX_REFS )  )  {     return name . substring ( PREFIX_REFS . length (  )  )  ;  } else {     return name ;  }}
9317,"public void test Select Tracks Exceeding Capabilities Select Lower Bitrate (  )  throws  Exception{  Format lower Bitrate Format =  Format . create Audio Sample Format ( ""audio Format"",  Mime Types . AUDIO_AAC, null, 15000,  Format . NO_VALUE, 2, 44100, null, null, 0, null )  ;   Format higher Bitrate Format =  Format . create Audio Sample Format ( ""audio Format"",  Mime Types . AUDIO_AAC, null, 30000,  Format . NO_VALUE, 2, 44100, null, null, 0, null )  ;   Track Group Array track Groups = wrap Formats ( lower Bitrate Format, higher Bitrate Format )  ;   Track Selector Result result = track Selector . select Tracks ( new  Renderer Capabilities [  ]  { ALL_AUDIO_FORMAT_EXCEEDED_RENDERER_CAPABILITIES }, track Groups, period Id, TIMELINE )  ;  assert Fixed Selection ( result . selections . get ( 0 ) , track Groups, lower Bitrate Format )  ; }"
9318,"public void timezone Offset (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . timezone Offset (  )  ; "" )  ; }"
9319,public void set Notifications ( boolean value ) { notifications = value ; }
9320,"public com . anychart . charts .  Heat Map hatch Fill (  String hatch Fill Function ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill ( %s )  ; "", wrap Quotes ( hatch Fill Function )  )  )  ;  return this ; }"
9321,"protected  Bluetooth Socket accept ( int timeout )  throws IO Exception{ if  ( closed )  {     throw new IO Exception ( "" Socket closed"" )  ;  }  Bluetooth Socket socket ;  try {     socket = timeout == -1 ? sockets . take (  )  : sockets . poll ( timeout,  Time Unit . MILLISECONDS )  ;  } catch  (  Interrupted Exception e )  {     throw new IO Exception ( e )  ;  } if  ( socket == null )  {     throw new IO Exception ( "" Timeout occurred"" )  ;  } socket . connect (  )  ;  return socket ; }"
9322,public com . facebook . buck . remoteexecution . proto .  Trace Info .  Builder get Trace Info Builder (  ) { on Changed (  )  ;  return get Trace Info Field Builder (  )  . get Builder (  )  ; }
9323,"public static  String typeof Name (  Scriptable scope,  String id ) {  Context cx =  Context . get Context (  )  ;   Scriptable val = bind ( cx, scope, id )  ;  if  ( val == null )      return ""undefined"" ;  return typeof ( get Object Prop ( val, id, cx )  )  ; }"
9324,"public void prepare Pack (  Progress Monitor counting Monitor, @ Non Null  Object Walk walk, @ Non Null  Set<? extends  Object Id> interesting Objects, @ Non Null  Set<? extends  Object Id> uninteresting Objects, @ Non Null  Set<? extends  Object Id> no Bitmaps )  throws IO Exception{ if  ( counting Monitor == null )      counting Monitor =  Null Progress Monitor . INSTANCE ;  if  ( shallow Pack && ! ( walk instanceof  Depth Walk .  Object Walk )  )      throw new  Illegal Argument Exception ( J Git Text . get (  )  . shallow Packs Require Depth Walk )  ;  if  ( filter Spec . get Tree Depth Limit (  )  >= 0 )  {     walk . set Visitation Policy ( new  Depth Aware Visitation Policy ( walk )  )  ;  } find Objects To Pack ( counting Monitor, walk, interesting Objects, uninteresting Objects, no Bitmaps )  ; }"
9325,public static  Controller Listener Wrapper create ( @ Nullable  Controller Listener< Image Info> controller Listener ) { return controller Listener == null ? null : new  Controller Listener Wrapper ( controller Listener )  ; }
9326,"public  Scriptable create Object (  Context cx,  Scriptable scope ) { if  ( member . is Ctor (  )  || parms Length == VARARGS_CTOR )  {     return null ;  }  Scriptable result ;  try {     result =  (  Scriptable )  member . get Declaring Class (  )  . new Instance (  )  ;  } catch  (  Exception ex )  {     throw  Context . throw As Script Runtime Ex ( ex )  ;  } result . set Prototype ( get Class Prototype (  )  )  ;  result . set Parent Scope ( get Parent Scope (  )  )  ;  return result ; }"
9327,"public void notify Observers Of Request Aggregated (  Cached Spice Request<?> request,  Set< Request Listener<?>> request Listeners ) {  Request Processing Context request Processing Context = new  Request Processing Context (  )  ;  request Processing Context . set Execution Thread (  Thread . current Thread (  )  )  ;  request Processing Context . set Request Listeners ( request Listeners )  ;  post ( new  Request Aggregated Notifier ( request, spice Service Listener List, request Processing Context )  )  ; }"
9328,"public com . anychart . core . ui .  Markers Factory markers (  ) { return new com . anychart . core . ui .  Markers Factory ( js Base + "" . markers (  ) "" )  ; }"
9329,protected int get Card Offset By Position Diff ( final float item Position Diff ) { final double smooth Position = convert Item Position Diff To Smooth Position Diff ( item Position Diff )  ;  final int dimen Diff ;  if  ( VERTICAL == m Orientation )  {     dimen Diff =  ( get Height No Padding (  )  - m Decorated Child Height )  / 2 ;  } else {     dimen Diff =  ( get Width No Padding (  )  - m Decorated Child Width )  / 2 ;  } //noinspection  Numeric Cast That Loses Precision return  ( int )   Math . round (  Math . signum ( item Position Diff )  * dimen Diff * smooth Position )  ; }
9330,public void close (  ) {//  Do nothing by default . }
9331,"public double get Double (  String key ) {  Double activated Double = get Double From Cache ( activated Configs Cache, key )  ;  if  ( activated Double != null )  {     call Listeners ( key, get Configs From Cache ( activated Configs Cache )  )  ;      return activated Double ;  }  Double defaults Double = get Double From Cache ( default Configs Cache, key )  ;  if  ( defaults Double != null )  {     return defaults Double ;  } log Parameter Value Does Not Exist ( key, "" Double"" )  ;  return DEFAULT_VALUE_FOR_DOUBLE ; }"
9332,"private static void verify Codeword Count ( int [  ]  codewords, int num EC Codewords )  throws  Format Exception{ if  ( codewords . length < 4 )  {     //  Count CW,  At least one  Data CW,  Error  Correction CW,  Error  Correction CW     throw  Format Exception . get Format Instance (  )  ;  } //  The first codeword, the  Symbol  Length  Descriptor, shall always encode the total number of data // codewords in the symbol, including the  Symbol  Length  Descriptor itself, data codewords and pad // codewords, but excluding the number of error correction codewords .  int number Of Codewords = codewords [ 0 ]  ;  if  ( number Of Codewords > codewords . length )  {     throw  Format Exception . get Format Instance (  )  ;  } if  ( number Of Codewords == 0 )  {     //  Reset to the length of the array - 8  (  Allow for at least level 3  Error  Correction  ( 8  Error  Codewords )      if  ( num EC Codewords < codewords . length )  {         codewords [ 0 ]  = codewords . length - num EC Codewords ;      } else {         throw  Format Exception . get Format Instance (  )  ;      } }}"
9333,"public boolean next (  )  throws  Missing Object Exception,  Incorrect Object Type Exception,  Corrupt Object Exception, IO Exception{ try {     if  ( advance )  {         advance = false ;          post Children = false ;          pop Entries Equal (  )  ;      }     for  (  ;   ;   )  {         attrs = null ;          final  Abstract Tree Iterator t = min (  )  ;          if  ( t . eof (  )  )  {             if  ( depth > 0 )  {                 exit Subtree (  )  ;                  if  ( post Order Traversal )  {                     advance = true ;                      post Children = true ;                      return true ;                  }                 pop Entries Equal (  )  ;                  continue ;              }             return false ;          }         current Head = t ;          if  ( filter . match Filter ( this )  == 1 )  {             skip Entries Equal (  )  ;              continue ;          }         if  ( recursive &&  File Mode . TREE . equals ( t . mode )  )  {             enter Subtree (  )  ;              continue ;          }         advance = true ;          return true ;      } } catch  (  Stop Walk Exception stop )  {     stop Walk (  )  ;      return false ;  }}"
9334,public void set Session Id (  String session Id ) { this . session Id = session Id ; }
9335,"public com . anychart . core . resource .  Grid even Holiday Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . even Holiday Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
9336,"private  Motion Event clone Motion Event With Action (  Motion Event event, int action ) { return  Motion Event . obtain ( event . get Down Time (  ) , event . get Event Time (  ) , action, event . get X (  ) , event . get Y (  ) , event . get Meta State (  )  )  ; }"
9337,"public com . anychart . core . gantt . elements .  Periods Element fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
9338,"public com . anychart . core . ui .  Timeline row Selected Fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
9339,"public com . anychart . core . stock . scrollerseries .  Candlestick falling Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
9340,"public void scale (  Vector3 scale ) { scale ( scale . x, scale . y, scale . z )  ; }"
9341,public void set View Rotation ( int degrees ) { m Rotation =  (  ( degrees + 360 )  % 360 )  / 90 ; }
9342,public  String get Identifier (  ) { return ID3v24 Frames . FRAME_ID_TAGGING_TIME ; }
9343,public  Media Period Holder get Front Period (  ) { return has Playing Period (  )  ? playing : loading ; }
9344,int get Navigation Bar Width (  ) { return m Navigation Bar Width ; }
9345,"public void pre Allocate Particles (  ) { if  ( sprites . is Empty (  )  )      throw new  Illegal State Exception ( "" Particle Emitter . set Sprites (  )  must have been called before pre Allocate Particles (  ) "" )  ;  for  ( int index = 0 ;  index < particles . length ;  index++ )  {      Particle particle = particles [ index ]  ;      if  ( particle == null )  {         particles [ index ]  = particle = new Particle ( sprites . first (  )  )  ;          particle . flip ( flip X, flip Y )  ;      } }}"
9346,"public void text Overflow (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . text Overflow (  )  ; "" )  ; }"
9347,"public  Base Adapter Helper set Background Res ( int view Id, int background Res ) {  View view = retrieve View ( view Id )  ;  view . set Background Resource ( background Res )  ;  return this ; }"
9348,"public com . anychart . charts .  Circular Gauge bounds (  String x,  String y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, wrap Quotes ( height )  )  )  ;  return this ; }"
9349,"public static UR Iish to URI (  String user Name,  Inet Socket Address remote ) {  String host = remote . get Host String (  )  ;  int port = remote . get Port (  )  ;  return // new UR Iish (  )  . set Scheme ( //  Ssh Constants . SSH_SCHEME )  . set Host ( // host )  . set Port ( // port )  . set User ( user Name )  ; }"
9350,public static  Metadata Container Factory get Instance (  ) { return INSTANCE ; }
9351,"public  Object assign (  Object val, boolean strict Java )  throws  Util Eval Error{ if  ( type == VARIABLE )  {     //  Set the variable in namespace according to local Var flag     if  ( local Var )          name Space . set Local Variable Or Property ( var Name, val, strict Java )  ;      else         name Space . set Variable Or Property ( var Name, val, strict Java )  ;  } else if  ( type == FIELD )  {     try {         //  This should probably be in  Reflect . java          Reflect Manager . RM Set Accessible ( field )  ;          field . set ( object,  Primitive . unwrap ( val )  )  ;          return val ;      } catch  (  Null Pointer Exception e )  {         throw new  Util Eval Error ( ""LHS  ( "" + field . get Name (  )  + "" )  not a static field . "" )  ;      } catch  (  Illegal Access Exception e2 )  {         throw new  Util Eval Error ( ""LHS  ( "" + field . get Name (  )  + "" )  can't access field: "" + e2 )  ;      } catch  (  Illegal Argument Exception e3 )  {          String type = val instanceof  Primitive ?  (  (  Primitive )  val )  . get Type (  )  . get Name (  )  : val . get Class (  )  . get Name (  )  ;          throw new  Util Eval Error ( "" Argument type mismatch .  "" +  ( val == null ? ""null"" : type )  + "" not assignable to field "" + field . get Name (  )  )  ;      } } else if  ( type == PROPERTY )  {      Collection Manager cm =  Collection Manager . get Collection Manager (  )  ;      if  ( cm . is Map ( object )  )          cm . put In Map ( object, /*map*/         prop Name,  Primitive . unwrap ( val )  )  ;      else         try {              Reflect . set Object Property ( object, prop Name, val )  ;          } catch  (  Reflect Error e )  {              Interpreter . debug ( "" Assignment: "" + e . get Message (  )  )  ;              throw new  Util Eval Error ( "" No such property: "" + prop Name )  ;          } } else if  ( type == INDEX )      try {          Reflect . set Index ( object, index, val )  ;      } catch  (  Util Target Error e1 )  {         // pass along target error         throw e1 ;      } catch  (  Exception e )  {         throw new  Util Eval Error ( "" Assignment: "" + e . get Message (  )  )  ;      } else     throw new  Interpreter Error ( ""unknown lhs"" )  ;  return val ; }"
9352,public  View .  On Click Listener get On Click Listener Icon Btn3 (  ) { return m On Click Listener Icon Btn3 ; }
9353,"public com . anychart . core . stock . scrollerseries .  Hilo parent Bounds (  Number bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", bounds )  )  ;  return this ; }"
9354,"public com . anychart . charts .  Gantt select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
9355,"public boolean min Value (  Number value,  Number min ) { if  ( is Allow Fractions (  )  )  {     return  ( value . double Value (  )  >= min . double Value (  )  )  ;  } return  ( value . long Value (  )  >= min . long Value (  )  )  ; }"
9356,"private void copy Block ( int orig Label, int new Label ) {  Basic Block orig Block = label To Block ( orig Label )  ;  final  Int List orig Successors = orig Block . get Successors (  )  ;   Int List successors ;  int primary Successor = -1 ;   Subroutine subroutine ;  if  ( is Subroutine Caller ( orig Block )  )  {     /*              * A subroutine call inside a subroutine call .               *  Set up so we can recurse .   The caller block should have              * it's first successor be a copied block that will be              * the subroutine's return point .   It's second successor will              * be copied when we recurse, and remains as the original              * label of the start of the inner subroutine .               */     successors =  Int List . make Immutable ( map Or Allocate Label ( orig Successors . get ( 0 )  ) , orig Successors . get ( 1 )  )  ;  // primary successor will be set when this block is replaced } else if  ( null !=  ( subroutine = subroutine From Ret Block ( orig Label )  )  )  {     //  Sanity check     if  ( subroutine . start Block != subroutine Start )  {         throw new  Runtime Exception ( ""ret instruction returns to label "" +  Hex . u2 ( subroutine . start Block )  + "" expected: "" +  Hex . u2 ( subroutine Start )  )  ;      }     successors =  Int List . make Immutable ( subroutine Successor )  ;      primary Successor = subroutine Successor ;  } else {     //  Map all the successor labels     int orig Primary = orig Block . get Primary Successor (  )  ;      int sz = orig Successors . size (  )  ;      successors = new  Int List ( sz )  ;      for  ( int i = 0 ;  i < sz ;  i++ )  {         int orig Succ Label = orig Successors . get ( i )  ;          int new Succ Label = map Or Allocate Label ( orig Succ Label )  ;          successors . add ( new Succ Label )  ;          if  ( orig Primary == orig Succ Label )  {             primary Successor = new Succ Label ;          }     }     successors . set Immutable (  )  ;  } add Block ( new  Basic Block ( new Label, filter Move Return Address Insns ( orig Block . get Insns (  )  ) , successors, primary Successor ) , label To Subroutines . get ( new Label )  )  ; }"
9357,"public com . anychart . core . axismarkers .  Gantt Text padding (  Number value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
9358,"private void hilight Focused Ver Slider (  Canvas canvas ) { m Pos Marker . set Color (  Color . WHITE )  ;  canvas . draw Rect ( new  Rect ( 0, 0, SLIDER_THICKNESS, PALETTE_DIM ) , m Pos Marker )  ;  m Pos Marker . set Color (  Color . BLACK )  ;  canvas . draw Rect ( new  Rect ( 2, 2, SLIDER_THICKNESS - 2, PALETTE_DIM - 2 ) , m Pos Marker )  ; }"
9359,public  Set< String> get Prompt Values (  ) { return  Ascii String List Util . string To Set ( prompt )  ; }
9360,"public void add Series (  String [  ]  var_args ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . add Series ( %s )  ; "", array To String Wrap Quotes ( var_args )  )  )  ; }"
9361,private void hook Listeners (  ) { draggable View . set Draggable Listener ( new  Draggable Listener (  )  {     @ Override     public void on Maximized (  )  {         update Action Bar Title (  )  ;      }     @ Override     public void on Minimized (  )  {         update Action Bar Title (  )  ;      }     @ Override     public void on Closed To Left (  )  {         reset Action Bar Title (  )  ;      }     @ Override     public void on Closed To Right (  )  {         reset Action Bar Title (  )  ;      } } )  ; }
9362,"public com . anychart . core . utils .  Quarter left Stroke (  String value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( value ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null, wrap Quotes ( line Cap )  )  )  ;  return this ; }"
9363,"public void draw Pixmap (  Pixmap pixmap, int srcx, int srcy, int src Width, int src Height, int dstx, int dsty, int dst Width, int dst Height ) { this . pixmap . draw Pixmap ( pixmap . pixmap, srcx, srcy, src Width, src Height, dstx, dsty, dst Width, dst Height )  ; }"
9364,public void clear (  ) { native Clear (  )  ; }
9365,public  Activity get Current Activity (  ) { return m Resumed != null ? m Resumed . activity : null ; }
9366,"public  Fake Data append Read Data ( int length ) {  Assertions . check State ( length > 0 )  ;  segments . add ( new  Segment ( length, get Last Segment (  )  )  )  ;  return this ; }"
9367,"public  Hls Media Playlist copy With End Tag (  ) { if  ( this . has End Tag )  {     return this ;  } return new  Hls Media Playlist ( playlist Type, base Uri, tags, start Offset Us, start Time Us, has Discontinuity Sequence, discontinuity Sequence, media Sequence, version, target Duration Us, has Independent Segments, /* has End Tag= */ true, has Program Date Time, protection Schemes, segments )  ; }"
9368,"public static  Scheduler from (  Looper looper ) { if  ( looper == null )      throw new  Null Pointer Exception ( ""looper == null"" )  ;  return new  Handler Scheduler ( new  Handler ( looper )  )  ; }"
9369,"private  Byte Buffer start Create Basic Second Page (  Ogg Vorbis Tag Reader .  Ogg Vorbis Header Sizes vorbis Header Sizes, int new Comment Length, int new Second Page Length,  Ogg Page Header second Page Header,  Byte Buffer new Comment )  throws IO Exception{ logger . fine ( "" Write Ogg  Type 1"" )  ;  byte [  ]  segment Table = create Segment Table ( new Comment Length, vorbis Header Sizes . get Setup Header Size (  ) , vorbis Header Sizes . get Extra Packet List (  )  )  ;  int new Second Page Header Length =  Ogg Page Header . OGG_PAGE_HEADER_FIXED_LENGTH + segment Table . length ;  logger . fine ( "" New second page header length:"" + new Second Page Header Length )  ;  logger . fine ( "" No of segments:"" + segment Table . length )  ;   Byte Buffer second Page Buffer =  Byte Buffer . allocate ( new Second Page Length + new Second Page Header Length )  ;  second Page Buffer . order (  Byte Order . LITTLE_ENDIAN )  ;  // Build the new 2nd page header, can mostly be taken from the original upto the segment length  Ogg S capture second Page Buffer . put ( second Page Header . get Raw Header Data (  ) , 0,  Ogg Page Header . OGG_PAGE_HEADER_FIXED_LENGTH - 1 )  ;  // Number of  Page  Segments second Page Buffer . put (  ( byte )  segment Table . length )  ;  // Page segment table for  ( byte a Segment Table : segment Table )  {     second Page Buffer . put ( a Segment Table )  ;  } // Add  New  Vorbis Comment second Page Buffer . put ( new Comment )  ;  return second Page Buffer ; }"
9370,"public final void contains ( @ Nullable  Object element ) { if  ( ! Iterables . contains ( actual, element )  )  {      List< Object> element List = new Array List ( element )  ;      if  ( has Matching To String Pair ( actual, element List )  )  {         fail Without Actual ( fact ( ""expected to contain"", element ) , fact ( ""an instance of"", object To Type Name ( element )  ) , simple Fact ( ""but did not"" ) , fact ( ""though it did contain"", count Duplicates And Add Type Info ( retain Matching To String ( actual, element List )  )  ) , full Contents (  )  )  ;      } else {         fail With Actual ( ""expected to contain"", element )  ;      } }}"
9371,public  Uri Components Builder host (  String host ) { this . host = host ;  reset Scheme Specific Part (  )  ;  return this ; }
9372,"public static T gen Proxy (  Class<T> interface Class, final  Object base ) { //noinspection  Constant Conditions if  ( true )  {     return  ( T )  base ;  } //noinspection unchecked return  ( T )   Proxy . new Proxy Instance ( interface Class . get Class Loader (  ) , new  Class [  ]  { interface Class }, new  Invocation Handler (  )  {     @ Override     public  Object invoke (  Object proxy,  Method method,  Object [  ]  args )  throws  Throwable {         try {             return method . invoke ( base, args )  ;          } catch  (  Throwable e )  {             throw e . get Cause (  )  == null ? e : e . get Cause (  )  ;          }     } } )  ; }"
9373,"public static void write File (  Class File cf,  String directory Name )  throws  Cannot Compile Exception{ try {     write File0 ( cf, directory Name )  ;  } catch  ( IO Exception e )  {     throw new  Cannot Compile Exception ( e )  ;  }}"
9374,"public com . anychart . charts .  Waterfall hatch Fill Palette ( com . anychart . graphics . vector . hatchfill .  Hatch Fill Type [  ]  settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . hatch Fill Palette ( %s )  ; "", array To String ( settings )  )  )  ;  return this ; }"
9375,public T9 get Value9 (  ) { return value9 ; }
9376,"public static  Intent intent For Class Name (  Context context,  String class Name ) { final  Intent intent = new  Intent (  )  ;  intent . set Component ( new  Component Name ( context, class Name )  )  ;  return intent ; }"
9377,private void perform Next Task (  ) { if  ( !m On Screen Remove Marker Tasks . is Empty (  )  )  {     remove Marker ( m On Screen Remove Marker Tasks . poll (  )  )  ;  } else if  ( !m Animation Tasks . is Empty (  )  )  {     m Animation Tasks . poll (  )  . perform (  )  ;  } else if  ( !m On Screen Create Marker Tasks . is Empty (  )  )  {     m On Screen Create Marker Tasks . poll (  )  . perform ( this )  ;  } else if  ( !m Create Marker Tasks . is Empty (  )  )  {     m Create Marker Tasks . poll (  )  . perform ( this )  ;  } else if  ( !m Remove Marker Tasks . is Empty (  )  )  {     remove Marker ( m Remove Marker Tasks . poll (  )  )  ;  }}
9378,"protected void finish Op (  String op, int uid,  String package Name,  String attribution Tag ) { long Running Op . remove (  Key . create ( uid, package Name,  App Ops Manager . str Op To Op ( op )  )  )  ; }"
9379,"public com . anychart . charts .  Pareto context Menu (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . context Menu ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9380,"public com . anychart . core . axismarkers .  Gantt Range fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
9381,"public void upload (  File file, long restart At )  throws  Illegal State Exception,  File Not Found Exception, IO Exception, FTP Illegal Reply Exception, FTP Exception, FTP Data Transfer Exception, FTP Aborted Exception{ upload ( file, restart At, null )  ; }"
9382,"public com . anychart . core . resource .  Logo stroke (  String color,  Number thickness,  String dashpattern,  String line Join,  String line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) , wrap Quotes ( line Join ) , wrap Quotes ( line Cap )  )  )  ;  return this ; }"
9383,public int get Scrolling Offset (  ) { return m Layout State . m Scrolling Offset ; }
9384,"public static int get Major Version (  ) { if  ( major Version == 0 )  {     major Version = get Major Version From String (  Objects . require Non Null (  System . get Property ( ""java . version"" )  )  )  ;  } return major Version ; }"
9385,public static  Pipeline Drawee Controller Builder new Drawee Controller Builder (  ) { return s Drawee Controller Builder Supplier . get (  )  ; }
9386,"private com . google . protobuf .  Single Field Builder V3<com . didiglobal . booster . aapt2 . legacy .  Resources Internal Legacy .  Config Description, com . didiglobal . booster . aapt2 . legacy .  Resources Internal Legacy .  Config Description .  Builder, com . didiglobal . booster . aapt2 . legacy .  Resources Internal Legacy .  Config Description Or Builder> get Config Field Builder (  ) { if  ( config Builder_ == null )  {     config Builder_ = new com . google . protobuf .  Single Field Builder V3<com . didiglobal . booster . aapt2 . legacy .  Resources Internal Legacy .  Config Description, com . didiglobal . booster . aapt2 . legacy .  Resources Internal Legacy .  Config Description .  Builder, com . didiglobal . booster . aapt2 . legacy .  Resources Internal Legacy .  Config Description Or Builder> ( get Config (  ) , get Parent For Children (  ) , is Clean (  )  )  ;      config_ = null ;  } return config Builder_ ; }"
9387,"public void height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . height (  )  ; "" )  ; }"
9388,"public  Alert Dialog get Picker Dialog (  String message, final  On Item Click Listener listener ) { final  Device Picker List View view = new  Device Picker List View ( activity )  ;   Text View title =  (  Text View )  activity . get Layout Inflater (  )  . inflate ( android . R . layout . simple_list_item_1, null )  ;  title . set Text ( message )  ;  final  Alert Dialog picker Dialog = new  Alert Dialog .  Builder ( activity )  . set Custom Title ( title )  . set Cancelable ( true )  . set View ( view )  . create (  )  ;  view . set On Item Click Listener ( new  On Item Click Listener (  )  {     @ Override     public void on Item Click (  Adapter View<?> arg0,  View arg1, int arg2, long arg3 )  {         listener . on Item Click ( arg0, arg1, arg2, arg3 )  ;          picker Dialog . dismiss (  )  ;      } } )  ;  return picker Dialog ; }"
9389,"public static  String get Local Host Name ( boolean include Domain ) { try {      String hostname =  Inet Address . get Local Host (  )  . get Host Name (  )  ;      return include Domain ? hostname : hostname . index Of ( "" . "" )  != -1 ? hostname . substring ( 0, hostname . index Of ( "" . "" )  )  : hostname ;  } catch  (  Exception ex )  {     //  Return a dummy  String     return ""UNKNOWN HOST"" ;  }}"
9390,"public com . anychart . core . axismarkers .  Gantt Text text Indent (  Number indent ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . text Indent ( %s )  ; "", indent )  )  ;  return this ; }"
9391,"private void ring Read ( int position, byte [  ]  buffer, int offset, int count )  throws IO Exception{ position = wrap Position ( position )  ;  if  ( position + count <= file Length )  {     raf . seek ( position )  ;      raf . read Fully ( buffer, offset, count )  ;  } else {     //  The read overlaps the EOF .      // # of bytes to read before the EOF .      int before Eof = file Length - position ;      raf . seek ( position )  ;      raf . read Fully ( buffer, offset, before Eof )  ;      raf . seek ( HEADER_LENGTH )  ;      raf . read Fully ( buffer, offset + before Eof, count - before Eof )  ;  }}"
9392,"public void left (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . left (  )  ; "" )  ; }"
9393,public int get Api Level (  ) { return m Api Level ; }
9394,"public com . anychart . core .  Separate Chart no Data (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . no Data ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9395,public  String get Geometry Type (  ) { return get Type (  )  ; }
9396,"private void apply And Animate Moved Items (  List<T> from,  List<T> new Items ) { int move = 0 ;  for  ( int to Position = new Items . size (  )  - 1 ;  to Position >= 0 ;  to Position-- )  {     if  ( m Filter Async Task != null && m Filter Async Task . is Cancelled (  )  )  {         return ;      }     final T item = new Items . get ( to Position )  ;      final int from Position = from . index Of ( item )  ;      if  ( from Position >= 0 && from Position != to Position )  {         log . v ( ""calculate Moved Items from Position=%s to Position=%s"", from Position, to Position )  ;          T moved Item = from . remove ( from Position )  ;          if  ( to Position < from . size (  )  )  {             from . add ( to Position, moved Item )  ;          } else {             from . add ( moved Item )  ;          }         m Notifications . add ( new  Notification ( from Position, to Position,  Notification . MOVE )  )  ;          move++ ;      } } log . d ( ""calculate Moved Items total move=%s"", move )  ; }"
9397,public static  Data start Sensor Calibration (  ) { return new  Mutable Data ( new byte [  ]  { SC_OP_CODE_START_SENSOR_CALIBRATION } )  ; }
9398,"public void test Toggle Removed (  ) {  String html = ""before <span class=\""email-hidden-toggle\""><a href=\""#\"">…</a></span>after"" ;  assert Equals ( ""before after"", format ( html )  )  ; }"
9399,"private void check Qualifiers (  ) { if  ( qualifiers . size (  )  > 1 )  {     for  (  Annotation Mirror qualifier : qualifiers )  {         report . add Error ( binding Elements ( ""may not use more than one @ Qualifier"" ) , element, qualifier )  ;      } }}"
9400,"public void fill (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . fill (  )  ; "" )  ; }"
9401,public  Date Picker Builder set Year Optional ( boolean year Optional ) { this . year Optional = year Optional ;  return this ; }
9402,"public  Asset Loader get Loader ( final  Class<T> type, final  String file Name ) {  Object Map< String,  Asset Loader> loaders = this . loaders . get ( type )  ;  if  ( loaders == null || loaders . size < 1 )      return null ;  if  ( file Name == null )      return loaders . get ( """" )  ;   Asset Loader result = null ;  int length = -1 ;  for  (  Entry< String,  Asset Loader> entry : loaders . entries (  )  )  {     if  ( entry . key . length (  )  > length && file Name . ends With ( entry . key )  )  {         result = entry . value ;          length = entry . key . length (  )  ;      } } return result ; }"
9403,"public void test Lifecycle_C (  ) {  Data Source< Object> data Source = get And Subscribe (  )  ;   Data Subscriber< Object> subscriber1 = verify Get And Subscribe ( m Data Source Supplier1, m Src1 )  ;  test Close ( data Source, m Src1 )  ;  verify Subscriber ( data Source, null, ON_CANCELLATION )  ;  verify State ( data Source, null, CLOSED, NOT_FINISHED, WITHOUT_RESULT, null, NOT_FAILED, null )  ; }"
9404,"public static  Future Combiner<V> when All Succeed (  Iterable<? extends  Listenable Future<? extends V>> futures ) { return new  Future Combiner<V> ( true,  Immutable List . copy Of ( futures )  )  ; }"
9405,"public static  Object copy Object (  Object copy Object ) {  Constructor<?> constructor ;   Class<?> [  ]  constructor Parameter Array ;   Object [  ]  parameter Array ;  if  ( copy Object == null )  {     return null ;  } try {     constructor Parameter Array = new  Class [ 1 ]  ;      constructor Parameter Array [ 0 ]  = copy Object . get Class (  )  ;      constructor = copy Object . get Class (  )  . get Constructor ( constructor Parameter Array )  ;      parameter Array = new  Object [ 1 ]  ;      parameter Array [ 0 ]  = copy Object ;      return constructor . new Instance ( parameter Array )  ;  } catch  (  No Such Method Exception ex )  {     throw new  Illegal Argument Exception ( "" No Such Method Exception:  Error finding constructor to create copy:"" + copy Object . get Class (  )  . get Name (  )  )  ;  } catch  (  Illegal Access Exception ex )  {     throw new  Illegal Argument Exception ( "" Illegal Access Exception:  No access to run constructor to create copy"" + copy Object . get Class (  )  . get Name (  )  )  ;  } catch  (  Instantiation Exception ex )  {     throw new  Illegal Argument Exception ( "" Instantiation Exception:  Unable to instantiate constructor to copy"" + copy Object . get Class (  )  . get Name (  )  )  ;  } catch  ( java . lang . reflect .  Invocation Target Exception ex )  {     if  ( ex . get Cause (  )  instanceof  Error )  {         throw  (  Error )  ex . get Cause (  )  ;      } else if  ( ex . get Cause (  )  instanceof  Runtime Exception )  {         throw  (  Runtime Exception )  ex . get Cause (  )  ;      } else {         throw new  Illegal Argument Exception ( "" Invocation Target Exception:  Unable to invoke constructor to create copy"" )  ;      } }}"
9406,"public T get ( @ Non Null  String field, @ Non Null  Class<T> value Type, @ Non Null  Server Timestamp Behavior server Timestamp Behavior ) { return get (  Field Path . from Dot Separated Path ( field ) , value Type, server Timestamp Behavior )  ; }"
9407,"protected  Asset File Descriptor open Raw Resource Fd ( int id )  throws  Resources .  Not Found Exception{ if  ( is Legacy Asset Manager (  )  )  {      Input Stream input Stream = open Raw Resource ( id )  ;      if  ( ! ( input Stream instanceof  File Input Stream )  )  {         // todo fixme         return null ;      }      File Input Stream fis =  (  File Input Stream )  input Stream ;      try {         return new  Asset File Descriptor (  Parcel File Descriptor . dup ( fis . get FD (  )  ) , 0, fis . get Channel (  )  . size (  )  )  ;      } catch  ( IO Exception e )  {         throw new Not Found Exception ( id )  ;      } } else {     return directly On ( real Resources,  Resources . class )  . open Raw Resource Fd ( id )  ;  }}"
9408,"public void slow Period (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . slow Period (  )  ; "" )  ; }"
9409,public void reset Trace (  ) { if  ( m Tracing Throwable != null )  {     m Tracing Throwable . fill In Stack Trace (  )  ;  }}
9410,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
9411,"public  Builder set Exported Symbol ( int index, com . didiglobal . booster . aapt2 .  Resources Internal .  Compiled File .  Symbol .  Builder builder For Value ) { if  ( exported Symbol Builder_ == null )  {     ensure Exported Symbol Is Mutable (  )  ;      exported Symbol_ . set ( index, builder For Value . build (  )  )  ;      on Changed (  )  ;  } else {     exported Symbol Builder_ . set Message ( index, builder For Value . build (  )  )  ;  } return this ; }"
9412,"public com . anychart . standalones . axes .  Radial minor Ticks (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . minor Ticks ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9413,public  Prototype get Prototype (  ) { return prototype ; }
9414,"private float [  ]  normalize ( byte [  ]  pixels, float [  ]  norm Components, int norm Offset ) { if  ( norm Components == null )  {     norm Components = new float [ norm Offset + pixels . length ]  ;  } float [  ]  decode Array = get Decode (  )  ;  for  ( int i = 0 ;  i < pixels . length ;  i++ )  {     int val = pixels [ i ]  & 0xff ;      int pow =  (  ( int )   Math . pow ( 2, get Bits Per Component (  )  )  )  - 1 ;      float ymin = decode Array [ i * 2 ]  ;      float ymax = decode Array [  ( i * 2 )  + 1 ]  ;      norm Components [ norm Offset + i ]  =  Function Type0 . interpolate ( val, 0, pow, ymin, ymax )  ;  } return norm Components ; }"
9415,"static  Type get Supertype (  Type context,  Class<?> context Raw Type,  Class<?> supertype ) { if  ( context instanceof  Wildcard Type )  {     // wildcards are useless for resolving supertypes .   As the upper bound has the same raw type, use it instead     context =  (  (  Wildcard Type )  context )  . get Upper Bounds (  )  [ 0 ]  ;  } check Argument ( supertype . is Assignable From ( context Raw Type )  )  ;  return resolve ( context, context Raw Type, $ Gson$ Types . get Generic Supertype ( context, context Raw Type, supertype )  )  ; }"
9416,"public  Supplier< Data Source< Closeable Reference< Closeable Image>>> get Data Source Supplier ( final  Image Request image Request, final  Object caller Context, final  Image Request .  Request Level request Level, @ Nullable final  Request Listener request Listener ) { return new  Supplier< Data Source< Closeable Reference< Closeable Image>>> (  )  {     @ Override     public  Data Source< Closeable Reference< Closeable Image>> get (  )  {         return fetch Decoded Image ( image Request, caller Context, request Level, request Listener )  ;      }     @ Override     public  String to String (  )  {         return  Objects . to String Helper ( this )  . add ( ""uri"", image Request . get Source Uri (  )  )  . to String (  )  ;      } } ; }"
9417,protected boolean is Ble Scan Always Available (  ) { return is Ble Scan Always Available ; }
9418,"public void show (  ) { if  ( manager == null || style Res Id == null )  {      Log . e ( "" Date Picker Builder"", ""set Fragment Manager (  )  and set Style Res Id (  )  must be called . "" )  ;      return ;  }  Fragment Transaction ft = manager . begin Transaction (  )  ;  final  Fragment prev = manager . find Fragment By Tag ( ""date_dialog"" )  ;  if  ( prev != null )  {     ft . remove ( prev )  . commit (  )  ;      ft = manager . begin Transaction (  )  ;  } ft . add To Back Stack ( null )  ;  final  Date Picker Dialog Fragment fragment =  Date Picker Dialog Fragment . new Instance ( m Reference, style Res Id, month Of Year, day Of Month, year, year Optional )  ;  if  ( target Fragment != null )  {     fragment . set Target Fragment ( target Fragment, 0 )  ;  } fragment . set Date Picker Dialog Handlers ( m Date Picker Dialog Handlers )  ;  fragment . set On Dismiss Listener ( m On Dismiss Listener )  ;  fragment . show ( ft, ""date_dialog"" )  ; }"
9419,"private static void test Concurrent Loading Unchecked Exception (  Cache Builder< Object,  Object> builder )  throws  Interrupted Exception{ int count = 10 ;  final  Atomic Integer call Count = new  Atomic Integer (  )  ;  final  Count Down Latch start Signal = new  Count Down Latch ( count + 1 )  ;  final  Runtime Exception e = new  Runtime Exception (  )  ;   Loading Cache< String,  String> cache = builder . build ( new  Cache Loader< String,  String> (  )  {     @ Override     public  String load (  String key )  throws  Interrupted Exception {         call Count . increment And Get (  )  ;          start Signal . await (  )  ;          throw e ;      } } )  ;   List< Object> result = do Concurrent Get ( cache, ""bar"", count, start Signal )  ;  assert Equals ( 1, call Count . get (  )  )  ;  for  ( int i = 0 ;  i < count ;  i++ )  {     // do Concurrent Get alternates between calling get Unchecked and calling get, but an unchecked     // exception thrown by the loader is always wrapped as an  Unchecked Execution Exception .      assert That ( result . get ( i )  )  . is Instance Of (  Unchecked Execution Exception . class )  ;      assert That (  (  (  Unchecked Execution Exception )  result . get ( i )  )  )  . has Cause That (  )  . is Same Instance As ( e )  ;  } // subsequent calls should call the loader again, not get the old exception try {     cache . get Unchecked ( ""bar"" )  ;      fail (  )  ;  } catch  (  Unchecked Execution Exception expected )  { } assert Equals ( 2, call Count . get (  )  )  ; }"
9420,"protected static  String reg Range String (  Register Spec List list ) { int size = list . size (  )  ;   String Builder sb = new  String Builder ( 30 )  ;  sb . append ( ""{"" )  ;  switch ( size )  {     case 0:         {             //  Nothing to do .              break ;          }     case 1:         {             sb . append ( list . get ( 0 )  . reg String (  )  )  ;              break ;          }     default:         {              Register Spec last Reg = list . get ( size - 1 )  ;              if  ( last Reg . get Category (  )  == 2 )  {                 /*                  *  Add one to properly represent a list-final                  * category-2 register .                   */                 last Reg = last Reg . with Offset ( 1 )  ;              }             sb . append ( list . get ( 0 )  . reg String (  )  )  ;              sb . append ( "" .  . "" )  ;              sb . append ( last Reg . reg String (  )  )  ;          } } sb . append ( ""}"" )  ;  return sb . to String (  )  ; }"
9421,public  Builder set Hostname Bytes ( com . google . protobuf .  Byte String value ) { if  ( value == null )  {     throw new  Null Pointer Exception (  )  ;  } check Byte String Is Utf8 ( value )  ;  hostname_ = value ;  on Changed (  )  ;  return this ; }
9422,"public com . anychart . core . resource .  Conflicts parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
9423,"public static  File Reftable Database convert From (  File Repository repo, boolean write Logs )  throws IO Exception{  File Reftable Database new Db = null ;   File reftable List = null ;  try {      File reftable Dir = new  File ( repo . get Directory (  ) ,  Constants . REFTABLE )  ;      reftable List = new  File ( reftable Dir,  Constants . TABLES_LIST )  ;      if  ( !reftable Dir . is Directory (  )  )  {         reftable Dir . mkdir (  )  ;      }     try  (  File Reftable Stack stack = new  File Reftable Stack ( reftable List, reftable Dir, null,  (  )  -> repo . get Config (  )  )  )  {         stack . add Reftable (  rw -> write Convert Table ( repo, rw, write Logs )  )  ;      }     reftable List = null ;  } finally {     if  ( reftable List != null )  {         reftable List . delete (  )  ;      } } return new Db ; }"
9424,"public static  Put Result new Insert Result ( long inserted Id, @ Non Null  String affected Table, @ Nullable  String .  .  .  affected Tags ) { check Not Null ( affected Table, "" Please specify affected table"" )  ;  return new Insert Result ( inserted Id, singleton ( affected Table ) , non Null Set ( affected Tags )  )  ; }"
9425,"public void right (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . right (  )  ; "" )  ; }"
9426,void eval (  ) { double num2 = pop Double (  )  ;  double num1 = pop Double (  )  ;  push Boolean ( num1 > num2 )  ; }
9427,"public com . anychart . core .  State Settings hovered (  ) { return new com . anychart . core .  State Settings ( js Base + "" . hovered (  ) "" )  ; }"
9428,"public com . anychart . charts .  Polar select Marquee Fill (  String [  ]  keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
9429,private void set Year Min Key Range ( int min Key ) { for  ( int i = 0 ;  i < m Year Numbers . length ;  i++ )  {     if  ( m Year Numbers [ i ]  != null )  {         m Year Numbers [ i ]  . set Enabled ( i >= min Key )  ;      } }}
9430,"public  Attribute Info copy (  Const Pool new Cp,  Map< String,  String> classnames ) {  Copier copier = new  Copier ( info, const Pool, new Cp, classnames )  ;  try {     copier . parameters (  )  ;      return new  Parameter Annotations Attribute ( new Cp, get Name (  ) , copier . close (  )  )  ;  } catch  (  Exception e )  {     throw new  Runtime Exception ( e . to String (  )  )  ;  }}"
9431,"public void append (  String inner,  String outer,  String name, int flags ) { int i = const Pool . add Class Info ( inner )  ;  int o = const Pool . add Class Info ( outer )  ;  int n = const Pool . add Utf8 Info ( name )  ;  append ( i, o, n, flags )  ; }"
9432,"protected  Object process Parsed Value (  Object value,  Format formatter ) { long long Value =  (  (  Number )  value )  . long Value (  )  ;  if  ( long Value <  Integer . MIN_VALUE || long Value >  Integer . MAX_VALUE )  {     return null ;  } return new  Integer (  ( int )  long Value )  ; }"
9433,"public void add File (  File file,  String archive Path )  throws  Apk Creation Exception,  Sealed Apk Exception,  Duplicate File Exception{ if  ( m Is Sealed )  {     throw new  Sealed Apk Exception ( ""APK is already sealed"" )  ;  } try {     do Add File ( file, archive Path )  ;  } catch  (  Duplicate File Exception e )  {     m Builder . clean Up (  )  ;      throw e ;  } catch  (  Exception e )  {     m Builder . clean Up (  )  ;      throw new  Apk Creation Exception ( e, "" Failed to add %s"", file )  ;  }}"
9434,protected void tear Down (  ) {}
9435,"private void show Chart Dialog (  String table Name,  List< String> chart Y Data List,  List< Integer> list ) {  View chart View =  View . inflate ( this, R . layout . dialog_chart, null )  ;   Line Chart line Chart =  (  Line Chart )  chart View . find View By Id ( R . id . line Chart )  ;  line Chart . set Line Model (  Line Chart . CURVE_MODEL )  ;   Resources res = get Resources (  )  ;  com . daivd . chart . data . style .  Font Style . set Default Text Sp Size ( this, 12 )  ;   List< Line Data>  Column Datas = new  Array List<> (  )  ;   Array List< Double> temp List1 = new  Array List<> (  )  ;   Array List< String> ydata List = new  Array List<> (  )  ;  for  ( int i = 0 ;  i < 30 ;  i++ )  {      String value = chart Y Data List . get ( i )  ;      ydata List . add ( value )  ;  } for  ( int i = 0 ;  i < 30 ;  i++ )  {     int value = list . get ( i )  ;      temp List1 . add (  Double . value Of ( value )  )  ;  }  Line Data column Data1 = new  Line Data ( table Name, """", I Axis .  Axis Direction . LEFT, get Resources (  )  . get Color ( R . color . arc1 ) , temp List1 )  ;   Column Datas . add ( column Data1 )  ;   Chart Data< Line Data> chart Data2 = new  Chart Data<> ( "" Area  Chart"", ydata List,  Column Datas )  ;  line Chart . get Chart Title (  )  . set Direction ( I Component . TOP )  ;  line Chart . get Legend (  )  . set Direction ( I Component . BOTTOM )  ;  line Chart . set Line Model (  Line Chart . CURVE_MODEL )  ;   Base Axis vertical Axis = line Chart . get Left Vertical Axis (  )  ;   Base Axis horizontal Axis = line Chart . get Horizontal Axis (  )  ;  //设置竖轴方向 vertical Axis . set Axis Direction ( I Axis .  Axis Direction . LEFT )  ;  //设置网格 vertical Axis . set Draw Grid ( true )  ;  //设置横轴方向 horizontal Axis . set Axis Direction ( I Axis .  Axis Direction . BOTTOM )  ;  horizontal Axis . set Draw Grid ( true )  ;  //设置线条样式 vertical Axis . get Axis Style (  )  . set Width ( this, 1 )  ;   Dash Path Effect effects = new  Dash Path Effect ( new float [  ]  { 1, 2, 4, 8 }, 1 )  ;  vertical Axis . get Grid Style (  )  . set Width ( this, 1 )  . set Color ( res . get Color ( R . color . arc_text )  )  . set Effect ( effects )  ;  horizontal Axis . get Grid Style (  )  . set Width ( this, 1 )  . set Color ( res . get Color ( R . color . arc_text )  )  . set Effect ( effects )  ;  line Chart . set Zoom ( true )  ;  //开启十字架 line Chart . get Provider (  )  . set Open Cross ( true )  ;  line Chart . get Provider (  )  . set Cross ( new  Vertical Cross (  )  )  ;  line Chart . get Provider (  )  . set Show Text ( true )  ;  //开启 Mark View line Chart . get Provider (  )  . set Open Mark ( true )  ;  //设置 Mark View line Chart . get Provider (  )  . set Mark View ( new  Bubble Mark View ( this )  )  ;  //设置显示标题 line Chart . set Show Chart Name ( true )  ;  //设置标题样式 com . daivd . chart . data . style .  Font Style font Style = line Chart . get Chart Title (  )  . get Font Style (  )  ;  font Style . set Text Color ( res . get Color ( R . color . arc_temp )  )  ;  font Style . set Text Sp Size ( this, 15 )  ;   Level Line level Line = new  Level Line ( 30 )  ;   Dash Path Effect effects2 = new  Dash Path Effect ( new float [  ]  { 1, 2, 2, 4 }, 1 )  ;  level Line . get Line Style (  )  . set Width ( this, 1 )  . set Color ( res . get Color ( R . color . arc23 )  )  . set Effect ( effects )  ;  level Line . get Line Style (  )  . set Effect ( effects2 )  ;  line Chart . get Provider (  )  . add Level Line ( level Line )  ;   Point legend Point =  (  Point )  line Chart . get Legend (  )  . get Point (  )  ;   Point Style style = legend Point . get Point Style (  )  ;  style . set Shape (  Point Style . SQUARE )  ;  line Chart . get Provider (  )  . set Area ( true )  ;  line Chart . get Horizontal Axis (  )  . set Rotate Angle ( 90 )  ;  line Chart . set Chart Data ( chart Data2 )  ;  line Chart . start Chart Anim ( 400 )  ;   Base Dialog dialog = new  Base Dialog .  Builder ( this )  . set Fill Width ( true )  . set Content View ( chart View )  . create (  )  ;  dialog . show (  )  ; }"
9436,"public com . anychart . charts .  Scatter min Labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9437,"public com . anychart . core . cartesian . series .  Area3d bounds (  String x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
9438,"public com . anychart . core . stock . scrollerseries .  Discrete Base normal (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . normal ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9439,public int get Result End (  ) {  Region r = out Region ;  return r . result Start + r . length ; }
9440,public U Crop Fragment get Fragment (  ) { return U Crop Fragment . new Instance ( m Crop Options Bundle )  ; }
9441,"public static  String word Wrap (  String str ) { return word Wrap ( str, 80, ""\n"", ""-"", true )  ; }"
9442,public void add (  Diff Entry entry ) { add All (  Collections . singleton List ( entry )  )  ; }
9443,"public com . anychart . charts .  Pie connector Length (  Number length ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . connector Length ( %s )  ; "", length )  )  ;  return this ; }"
9444,"public long remove Index ( int index ) { if  ( index >= size )      throw new  Index Out Of Bounds Exception ( ""index can't be >= size: "" + index + "" >= "" + size )  ;  long [  ]  items = this . items ;  long value = items [ index ]  ;  size-- ;  if  ( ordered )       System . arraycopy ( items, index + 1, items, index, size - index )  ;  else     items [ index ]  = items [ size ]  ;  return value ; }"
9445,"public com . anychart . charts .  Venn markers (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . markers ( %s )  ; "", settings )  )  ;  return this ; }"
9446,public void set Max Zoom ( float max Zoom ) { if  ( max Zoom < 1 )  {     max Zoom = 1 ;  } this . max Zoom = max Zoom ;  compute Minimum Width And Height (  )  ;  set Current Viewport ( current Viewport )  ; }
9447,"public static org . w3c . dom .  Node to Dom Node (  Object xml Object ) { //     Probably a single node for XML List with one element if  ( xml Object instanceof XML )  {     return  (  ( XML )  xml Object )  . to Dom Node (  )  ;  } else {     throw new  Illegal Argument Exception ( ""xml Object is not an XML object in  Java Script . "" )  ;  }}"
9448,public  Apply Command set Patch (  Input Stream in ) { check Callable (  )  ;  this . in = in ;  return this ; }
9449,"public com . anychart . core . stock . scrollerseries .  Range Spline Area low Stroke (  String color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . low Stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( color ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
9450,public  Cst String get Inner Name (  ) { return inner Name ; }
9451,public boolean is Extra Beacon Data (  ) { return m Identifiers . size (  )  == 0 && m Data Fields . size (  )  != 0 ; }
9452,public  Collection<V> values (  ) {  Collection<V> vs = values ;  return  ( vs != null ? vs :  ( values = new  Values (  )  )  )  ; }
9453,public byte [  ]  get Buffer (  ) { return buf ; }
9454,"private boolean equals (  Object a,  Object b ) { return  (  ( a == null && b == null )  ||  ( a != null && a . equals ( b )  )  )  ; }"
9455,boolean should Force Load Link Whole Libraries (  ) { return false ; }
9456,"private void collect Removals (  Update Op Helper helper ) { for  (  Model State state : old State List )  {     //  Update the position of the item to take into account previous removals,     // so that future operations will reference the correct position     state . position -= helper . get Num Removals (  )  ;      //  This is our first time going through the list, so we     // look up the item with the matching id in the new     // list and hold a reference to it so that we can access it quickly in the future     state . pair = current State Map . get ( state . id )  ;      if  ( state . pair != null )  {         state . pair . pair = state ;          continue ;      }     helper . remove ( state . position )  ;  }}"
9457,public final short get Opcode Unit (  ) { return  ( short )  opcode ; }
9458,"private  Target Data new Target Data (  Query query, int target Id, long version ) { long sequence Number = ++previous Sequence Number ;  return new  Target Data ( query . to Target (  ) , target Id, sequence Number,  Query Purpose . LISTEN, version ( version ) , version ( version ) , resume Token ( version )  )  ; }"
9459,"public  List< Entry<K, V>> entries (  ) { return  (  List< Entry<K, V>> )  super . entries (  )  ; }"
9460,"public com . anychart . core . ui .  Separator container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
9461,public void set Duration ( int duration ) { this . duration = duration ; }
9462,public boolean is External Skin (  ) { return !is Default Skin && m Resources != null ; }
9463,public  Immutable List<C> column Key List (  ) { return column List ; }
9464,"public void horizontal Offset (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . horizontal Offset (  )  ; "" )  ; }"
9465,"public com . anychart . core . gantt .  Time Line Header padding (  Number value1,  String value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, value4 )  )  ;  return this ; }"
9466,"protected  Runnable wrap Task (  Runnable command ) { final  Callable< Object> wrapped = wrap Task (  Executors . callable ( command, null )  )  ;  return new  Runnable (  )  {     @ Override     public void run (  )  {         try {             wrapped . call (  )  ;          } catch  (  Exception e )  {             throw If Unchecked ( e )  ;              throw new  Runtime Exception ( e )  ;          }     } } ; }"
9467,"public int get Code Background Color ( @ Non Null  Paint paint ) { final int color ;  if  ( code Background Color != 0 )  {     color = code Background Color ;  } else {     color =  Color Utils . apply Alpha ( paint . get Color (  ) , CODE_DEF_BACKGROUND_COLOR_ALPHA )  ;  } return color ; }"
9468,"public void add Group ( final  String group Key, final  Object group ID ) { if  ( has Opted Out Tracking (  )  )      return ;  update Super Properties ( new  Super Property Update (  )  {     public JSON Object update ( JSON Object in )  {         try {             in . accumulate ( group Key, group ID )  ;          } catch  ( JSON Exception e )  {             MP Log . e ( LOGTAG, "" Failed to add groups super Property"", e )  ;          }         return in ;      } } )  ;  //  This is a best effort--if the people property is not already a list, this call does nothing .  m People . union ( group Key,  ( new JSON Array (  )  )  . put ( group ID )  )  ; }"
9469,"public static  Crouton make (  Activity activity,  View custom View, int view Group Res Id, final  Configuration configuration ) { return new  Crouton ( activity, custom View,  (  View Group )  activity . find View By Id ( view Group Res Id ) , configuration )  ; }"
9470,public  File Processor set Comparator (  Comparator< File> comparator ) { this . comparator = comparator ;  return this ; }
9471,"private  String export (  )  throws  Illegal Argument Exception{ if  ( export Everything )  {     return m Nrf Mesh Repository . get Mesh Manager Api (  )  . export Mesh Network (  )  ;  } else {     final  Application Keys Config application Keys Config = new  Application Keys Config .  Export All (  )  . build (  )  ;      final  Nodes Config nodes Config = export Device Keys ? new  Nodes Config .  Export With Device Key (  )  . build (  )  : new  Nodes Config .  Export Without Device Key (  )  . build (  )  ;      final  Network Keys Config network Keys Config = m Nrf Mesh Repository . get Mesh Network Live Data (  )  . get Mesh Network (  )  . get Net Keys (  )  . size (  )  == network Keys . size (  )  ? new  Network Keys Config .  Export All (  )  . build (  )  : new  Network Keys Config .  Export Some ( network Keys )  . build (  )  ;      final  Provisioners Config provisioners Config = m Nrf Mesh Repository . get Mesh Network Live Data (  )  . get Mesh Network (  )  . get Provisioners (  )  . size (  )  == provisioners . size (  )  ? new  Provisioners Config .  Export All (  )  . build (  )  : new  Provisioners Config .  Export Some ( provisioners )  . build (  )  ;      return m Nrf Mesh Repository . get Mesh Manager Api (  )  . export Mesh Network ( network Keys Config, application Keys Config, nodes Config, provisioners Config, new  Groups Config .  Export All (  )  . build (  ) , new  Scenes Config .  Export All (  )  . build (  )  )  ;  }}"
9472,"public com . anychart . charts .  Mekko margin (  String value1,  String value2,  String value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , wrap Quotes ( value3 ) , value4 )  )  ;  return this ; }"
9473,"public void alt (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . alt (  )  ; "" )  ; }"
9474,"public void save Image ( final  Context cxt,  String url, final  String path, final boolean is Refresh,  Http Call Back cb ) { if  ( cb == null )  {     cb = new  Http Call Back (  )  {         @ Override         public void on Success ( byte [  ]  t )  {             super . on Success ( t )  ;              if  ( is Refresh )  {                 refresh ( cxt, path )  ;              }         }     } ;  } byte [  ]  data = get Cache ( url )  ;  if  ( data . length == 0 )  {     new KJ Http (  )  . download ( path, url, cb )  ;  } else {      File file = new  File ( path )  ;      cb . on Pre Start (  )  ;       File folder = file . get Parent File (  )  ;      if  ( folder != null )  {         folder . mkdirs (  )  ;      }     if  ( !file . exists (  )  )  {         try {             file . create New File (  )  ;          } catch  ( IO Exception e1 )  {             cb . on Failure ( -1, e1 . get Message (  )  )  ;              return ;          }     }      Output Stream os = null ;      try {         os = new  File Output Stream ( file )  ;          os . write ( data )  ;          cb . on Success ( data )  ;          if  ( is Refresh )  {             refresh ( cxt, path )  ;          }     } catch  ( IO Exception e )  {         cb . on Failure ( -1, e . get Message (  )  )  ;      } finally {          File Utils . close IO ( os )  ;          cb . on Finish (  )  ;      } }}"
9475,public int attributes Hash (  ) { sort (  )  ;  final int n = attributes . size ;  long result = 71 + mask ;  int m = 1 ;  for  ( int i = 0 ;  i < n ;  i++ )  result += mask * attributes . get ( i )  . hash Code (  )  *  ( m =  ( m * 7 )  & 0x FFFF )  ;  return  ( int )   ( result ^  ( result >> 32 )  )  ; }
9476,public void set Simple Integer (  Integer simple Integer ) { this . simple Integer = simple Integer ; }
9477,"public com . anychart . core . ui .  Timeline row Odd Fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Odd Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
9478,"public synchronized void add ( long timestamp, V value ) { clear Buffer On Time Discontinuity ( timestamp )  ;  double Capacity If Full (  )  ;  add Unchecked ( timestamp, value )  ; }"
9479,"public com . anychart . core . gauge . pointers .  Knob top Radius (  Number radius ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top Radius ( %s )  ; "", radius )  )  ;  return this ; }"
9480,public void set Char Spacing ( float spc ) { this . tc = spc ; }
9481,"public void add Change Listener (  Realm Change Listener< Realm Results<E>> listener ) { check For Add Listener ( listener )  ;  os Results . add Listener ( this, listener )  ; }"
9482,public  Credit Card set Auto Animation ( boolean auto Animation ) { this . auto Animation = auto Animation ;  return this ; }
9483,"private static  Optional< Pair< String,  String>> get Lib Ref (  Immutable Set< String> macros,  String arg ) {  Optional< Macro Match Result> result ;  try {     result =  Macro Finder . match ( macros, arg )  ;  } catch  (  Macro Exception e )  {     throw new  Human Readable Exception ( e, e . get Message (  )  )  ;  } if  ( !result . is Present (  )  )  {     return  Optional . empty (  )  ;  } if  ( result . get (  )  . get Macro Type (  )  . equals ( """" )  )  {     throw new  Human Readable Exception ( ""expected library reference"" )  ;  } if  ( result . get (  )  . get Macro Input (  )  . size (  )  != 1 )  {     throw new  Human Readable Exception ( ""expected a single library reference argument"" )  ;  } return  Optional . of ( new  Pair<> ( result . get (  )  . get Macro Type (  ) , result . get (  )  . get Macro Input (  )  . get ( 0 )  )  )  ; }"
9484,"public com . anychart . core . ui .  Center fill (  String [  ]  keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
9485,"public void set Touch Mode Behind ( int i ) { if  ( i != TOUCHMODE_FULLSCREEN && i != TOUCHMODE_MARGIN && i != TOUCHMODE_NONE )  {     throw new  Illegal State Exception ( "" Touch Mode must be set to either"" + ""TOUCHMODE_FULLSCREEN or TOUCHMODE_MARGIN or TOUCHMODE_NONE . "" )  ;  } m View Behind . set Touch Mode ( i )  ; }"
9486,public void repaint (  ) { m Handler . post ( new  Runnable (  )  {     public void run (  )  {         invalidate (  )  ;      } } )  ; }
9487,public void remove All Change Listeners (  ) { remove All Listeners (  )  ; }
9488,"public static  Writable Native Map make Native Map (  Bundle bundle ) {  Writable Native Map native Map = new  Writable Native Map (  )  ;  if  ( bundle == null )  {     return native Map ;  } for  (  String key : bundle . key Set (  )  )  {     add Entry ( native Map, key, bundle . get ( key )  )  ;  } return native Map ; }"
9489,"public synchronized void initialize (  ) {  File root Directory = m Root Directory Supplier . get (  )  ;  if  ( !root Directory . exists (  )  )  {     if  ( !root Directory . mkdirs (  )  )  {          Volley Log . e ( "" Unable to create cache dir %s"", root Directory . get Absolute Path (  )  )  ;      }     return ;  }  File [  ]  files = root Directory . list Files (  )  ;  if  ( files == null )  {     return ;  } for  (  File file : files )  {     try {         long entry Size = file . length (  )  ;           Counting Input Stream cis = new  Counting Input Stream ( new  Buffered Input Stream ( create Input Stream ( file )  ) , entry Size )  ;          try {              Cache Header entry =  Cache Header . read Header ( cis )  ;              entry . size = entry Size ;              put Entry ( entry . key, entry )  ;          } finally {             //  Any IO Exception thrown here is handled by the below catch block by design .              //noinspection  Throw From Finally Block             cis . close (  )  ;          }     } catch  ( IO Exception e )  {         //noinspection  Result Of Method Call Ignored         file . delete (  )  ;      } }}"
9490,"public void disable Pointer Events (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . disable Pointer Events (  )  ; "" )  ; }"
9491,public  Refresh Layout set Fixed Footer View Id ( int id ) { this . m Fixed Footer View Id = id ;  return this ; }
9492,"private void translate Image To Center Touch Position ( float t ) { float target X = start Touch . x + t *  ( end Touch . x - start Touch . x )  ;  float target Y = start Touch . y + t *  ( end Touch . y - start Touch . y )  ;   Point F curr = transform Coord Bitmap To Touch ( bitmap X, bitmap Y )  ;  matrix . post Translate ( target X - curr . x, target Y - curr . y )  ; }"
9493,"public com . anychart . core . gantt .  Time Line Header container ( com . anychart . graphics . vector .  Layer element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
9494,public boolean is Over (  ) { return over || pressed ; }
9495,public  Rev Tree lookup Tree (  Any Object Id id ) {  Rev Tree c =  (  Rev Tree )  objects . get ( id )  ;  if  ( c == null )  {     c = new  Rev Tree ( id )  ;      objects . add ( c )  ;  } return c ; }
9496,"public com . anychart . core . utils .  Padding padding (  ) { return new com . anychart . core . utils .  Padding ( js Base + "" . padding (  ) "" )  ; }"
9497,"private void tinker Pre Verified Crash Handler (  Throwable ex ) {  Throwable throwable = ex ;  boolean is Xposed = false ;  while  ( throwable != null )  {     if  ( !is Xposed )  {         is Xposed =  Utils . is Xposed Exists ( throwable )  ;      }     if  ( is Xposed )  {         //method 1          Application Like application Like =  Tinker Manager . get Tinker Application Like (  )  ;          if  ( application Like == null || application Like . get Application (  )  == null )  {             return ;          }         if  ( ! Tinker Application Helper . is Tinker Load Success ( application Like )  )  {             return ;          }         boolean is Caused By Xposed = false ;          //just ignore art         if  ( throwable instanceof  Illegal Access Error && throwable . get Message (  )  . contains ( DALVIK_XPOSED_CRASH )  )  {             //for dalvik, we know the actual crash type             is Caused By Xposed = true ;          }         if  ( is Caused By Xposed )  {              Sample Tinker Report . on Xposed Crash (  )  ;               Tinker Log . e ( TAG, ""have xposed: just clean tinker"" )  ;              //kill all other process to ensure that all process's code is the same .               Share Tinker Internals . kill All Other Process ( application Like . get Application (  )  )  ;               Tinker Application Helper . clean Patch ( application Like )  ;               Share Tinker Internals . set Tinker Disable With Shared Preferences ( application Like . get Application (  )  )  ;              return ;          }     }     throwable = throwable . get Cause (  )  ;  }}"
9498,"protected final void update Added Net Key ( final int index ) { final  Node Key node Key =  Mesh Parser Utils . get Node Key ( m Added Net Keys, index )  ;  if  ( node Key != null )  {     node Key . set Updated ( true )  ;  }}"
9499,"public void check Permission ( final  String permission, final  Promise promise ) {  Context context = get React Application Context (  )  . get Base Context (  )  ;  if  (  Build . VERSION . SDK_INT <  Build . VERSION_CODES . M )  {     promise . resolve ( context . check Permission ( permission,  Process . my Pid (  ) ,  Process . my Uid (  )  )  ==  Package Manager . PERMISSION_GRANTED )  ;      return ;  } promise . resolve ( context . check Self Permission ( permission )  ==  Package Manager . PERMISSION_GRANTED )  ; }"
9500,"private void update Empty Status ( boolean empty ) { if  ( is Use Empty View (  )  )  {     if  ( empty )  {         if  ( m Empty View != null )  {             m Empty View . set Visibility (  View . VISIBLE )  ;              m List View . set Visibility (  View . GONE )  ;          } else {             //  If the caller just removed our empty view, make sure the list             // view is visible             m List View . set Visibility (  View . VISIBLE )  ;          }     } else {         if  ( m Empty View != null )              m Empty View . set Visibility (  View . GONE )  ;          m List View . set Visibility (  View . VISIBLE )  ;      } }}"
9501,"Validation Report< Executable Element> validate (  Executable Element method ) { return reentrant Compute If Absent ( reports, method, this::validate Uncached )  ; }"
9502,"File get Dir Impl ( @ Non Null  String model Name )  throws  Firebase Ml Exception{  File model Dir = get Model Dir Unsafe ( model Name )  ;  if  ( !model Dir . exists (  )  )  {     if  ( !model Dir . mkdirs (  )  )  {         throw new  Firebase Ml Exception ( "" Failed to create model folder: "" + model Dir,  Firebase Ml Exception . INTERNAL )  ;      } } else if  ( !model Dir . is Directory (  )  )  {     throw new  Firebase Ml Exception ( "" Can not create model folder, since an existing file has the same name: "" + model Dir,  Firebase Ml Exception . ALREADY_EXISTS )  ;  } return model Dir ; }"
9503,"public com . anychart . core . cartesian . series .  Spline spline ( com . anychart . data .  Set data, com . anychart . enums .  Text Parsing Mode csv Settings ) { return new com . anychart . core . cartesian . series .  Spline (  String . format (  Locale . US, js Base + "" . spline ( %s, %s ) "",  ( data != null )  ? data . get Js Base (  )  : null,  ( csv Settings != null )  ? csv Settings . get Js Base (  )  : null )  )  ; }"
9504,"private static  Immutable List< Binary Predicate Code> make Binary Predicates (  Class Tree class Tree,  Method Tree compare Method,  Visitor State state ) {  Tree comparison = maybe Make Lambda Body ( compare Method, state )  ;  if  ( comparison == null )  {      Class Tree enclosing = find Strictly Enclosing ( state,  Class Tree . class )  ;       Char Sequence new Compare Method Owner ;       String new Compare Method Name ;      if  ( enclosing == null )  {         new Compare Method Name = ""compare"" ;          new Compare Method Owner = class Tree . get Simple Name (  )  ;      } else {         new Compare Method Name = ""compare"" + class Tree . get Simple Name (  )  . to String (  )  . replace First ( "" Correspondence$"", """" )  ;          new Compare Method Owner = enclosing . get Simple Name (  )  ;      }     // TODO ( cpovirk ) :  We're unlikely to get away with declaring everything `static` .       String supporting Method Definition = format ( ""private static boolean %s ( %s, %s )  %s"", new Compare Method Name, state . get Source For Node ( compare Method . get Parameters (  )  . get ( 0 )  ) , state . get Source For Node ( compare Method . get Parameters (  )  . get ( 1 )  ) , state . get Source For Node ( compare Method . get Body (  )  )  )  ;      return  Immutable List . of (  Binary Predicate Code . create ( new Compare Method Owner + ""::"" + new Compare Method Name, supporting Method Definition )  )  ;  } //  First try without types, then try with .  return  Immutable List . of (  Binary Predicate Code . from Params And Expression ( compare Method . get Parameters (  )  . get ( 0 )  . get Name (  ) , compare Method . get Parameters (  )  . get ( 1 )  . get Name (  ) , state . get Source For Node ( comparison )  ) ,  Binary Predicate Code . from Params And Expression ( state . get Source For Node ( compare Method . get Parameters (  )  . get ( 0 )  ) , state . get Source For Node ( compare Method . get Parameters (  )  . get ( 1 )  ) , state . get Source For Node ( comparison )  )  )  ; }"
9505,"private void verify Timestamps Are Resolved (  Document Snapshot snapshot ) { assert True ( snapshot . exists (  )  )  ;   Timestamp when = snapshot . get Timestamp ( ""when"" )  ;  assert Not Null ( when )  ;  //  Tolerate up to 48*60*60 seconds of clock skew between client and server .   This should be more // than enough to compensate for timezone issues  ( even after taking daylight saving into // account )  and should allow local clocks to deviate from true time slightly and still pass the // test .  int delta Sec = 48 * 60 * 60 ;   Timestamp now =  Timestamp . now (  )  ;  assert True ( ""resolved timestamp  ( "" + when + "" )  should be within "" + delta Sec + ""s of now  ( "" + now + "" ) "",  Math . abs ( when . get Seconds (  )  - now . get Seconds (  )  )  < delta Sec )  ;  //  Validate the rest of the document .  assert Equals ( expected Data With Timestamp ( when ) , snapshot . get Data (  )  )  ; }"
9506,"public  Trust Manager Factory create Trust Manager Factory (  )  throws  No Such Provider Exception,  No Such Algorithm Exception{ return get Provider (  )  != null ?  Trust Manager Factory . get Instance ( get Algorithm (  ) , get Provider (  )  )  :  Trust Manager Factory . get Instance ( get Algorithm (  )  )  ; }"
9507,public  Player Message set Payload ( @ Nullable  Object payload ) {  Assertions . check State ( !is Sent )  ;  this . payload = payload ;  return this ; }
9508,public void delete Recursively If Exists (  String path )  throws IO Exception{  Most Files . delete Recursively If Exists ( get Path ( path )  )  ; }
9509,"public void rect ( float x, float y, float width, float height ) { check (  Shape Type .  Line,  Shape Type .  Filled, 8 )  ;  float color Bits = color . to Float Bits (  )  ;  if  ( shape Type ==  Shape Type .  Line )  {     renderer . color ( color Bits )  ;      renderer . vertex ( x, y, 0 )  ;      renderer . color ( color Bits )  ;      renderer . vertex ( x + width, y, 0 )  ;      renderer . color ( color Bits )  ;      renderer . vertex ( x + width, y, 0 )  ;      renderer . color ( color Bits )  ;      renderer . vertex ( x + width, y + height, 0 )  ;      renderer . color ( color Bits )  ;      renderer . vertex ( x + width, y + height, 0 )  ;      renderer . color ( color Bits )  ;      renderer . vertex ( x, y + height, 0 )  ;      renderer . color ( color Bits )  ;      renderer . vertex ( x, y + height, 0 )  ;      renderer . color ( color Bits )  ;      renderer . vertex ( x, y, 0 )  ;  } else {     renderer . color ( color Bits )  ;      renderer . vertex ( x, y, 0 )  ;      renderer . color ( color Bits )  ;      renderer . vertex ( x + width, y, 0 )  ;      renderer . color ( color Bits )  ;      renderer . vertex ( x + width, y + height, 0 )  ;      renderer . color ( color Bits )  ;      renderer . vertex ( x + width, y + height, 0 )  ;      renderer . color ( color Bits )  ;      renderer . vertex ( x, y + height, 0 )  ;      renderer . color ( color Bits )  ;      renderer . vertex ( x, y, 0 )  ;  }}"
9510,"public static  Immutable List< Arg> get Platform Preprocess Flags (  Cxx Platform cxx Platform,  Cxx Source .  Type type ) {  Immutable List .  Builder< Arg> flags =  Immutable List . builder (  )  ;  switch ( type )  {     case ASSEMBLER_WITH_CPP:         flags . add All ( cxx Platform . get Asppflags (  )  )  ;          break ;      case C:         flags . add All ( cxx Platform . get Cppflags (  )  )  ;          break ;      case CXX:     case PCM:         flags . add All ( cxx Platform . get Cxxppflags (  )  )  ;          break ;      case OBJC:         flags . add All ( cxx Platform . get Cppflags (  )  )  ;          break ;      case OBJCXX:         flags . add All ( cxx Platform . get Cxxppflags (  )  )  ;          break ;      case CUDA:         flags . add All ( cxx Platform . get Cudappflags (  )  )  ;          break ;      case HIP:         flags . add All ( cxx Platform . get Hipppflags (  )  )  ;          break ;      case ASM_WITH_CPP:         flags . add All ( cxx Platform . get Asmppflags (  )  )  ;          break ;      // $CASES-OMITTED$     default:         throw new  Illegal State Exception (  String . format ( ""unexpected type: %s"", type )  )  ;  } return flags . build (  )  ; }"
9511,"public void save As Svg (  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Svg ( %s, %s )  ; "", width, height )  )  ; }"
9512,"public void get Stat ( com . anychart . enums .  Statistics key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . get Stat ( %s )  ; "",  ( key != null )  ? key . get Js Base (  )  : null )  )  ; }"
9513,"public static JS Bundle Loader create Remote Debugger Bundle Loader ( final  String proxy Source URL, final  String real Source URL ) { return new JS Bundle Loader (  )  {     @ Override     public  String load Script ( JS Bundle Loader Delegate delegate )  {         delegate . set Source UR Ls ( real Source URL, proxy Source URL )  ;          return real Source URL ;      } } ; }"
9514,"public void test Two Non Conflicting Modifications (  )  throws IO Exception{ assert Equals ( t ( "" Yb Zdefghij"" ) , merge ( ""abcdefghij"", ""ab Zdefghij"", "" Ybcdefghij"" )  )  ; }"
9515,"public void test Broker Proxy Switch Broker Permission Not Granted (  )  throws  Package Manager .  Name Not Found Exception,  No Such Algorithm Exception{ final  Context context = get Mock Context (  )  ;  final  Package Manager mocked Package Manager = context . get Package Manager (  )  ;  final  Signature Data signature Data = get Signature ( androidx . test . platform . app .  Instrumentation Registry . get Instrumentation (  )  . get Context (  ) , androidx . test . platform . app .  Instrumentation Registry . get Instrumentation (  )  . get Context (  )  . get Package Name (  )  )  ;  mock Package Manager Broker Signature And Permission ( mocked Package Manager, signature Data . get Signature (  )  )  ;   Authentication Settings . INSTANCE . set Broker Signature ( signature Data . get Signature Hash (  )  )  ;   Authentication Settings . INSTANCE . set Use Broker ( true )  ;  final  Broker Proxy broker Proxy = new  Broker Proxy ( context )  ;   Assert . assert True ( broker Proxy . can Switch To Broker (  Broker Proxy Tests . TEST_AUTHORITY )  . equals (  Broker Proxy .  Switch To Broker . CAN_SWITCH_TO_BROKER )  )  ; }"
9516,public  Settings get Settings (  ) { return settings . get (  )  ; }
9517,public int get Color (  ) { return color ; }
9518,"public static  Immutable List< Working Range Method Model> get Ranges Methods (  Elements elements,  Type Element type Element,  List< Class<? extends  Annotation>> permitted Inter Stage Input Annotations,  Messager messager ) { final  List< Working Range Method Model> working Range Methods = new  Array List<> (  )  ;  for  (  Element enclosed Element : type Element . get Enclosed Elements (  )  )  {     if  ( enclosed Element . get Kind (  )  !=  Element Kind . METHOD )  {         continue ;      }     final  Executable Element executable Element =  (  Executable Element )  enclosed Element ;      final  On Entered Range entered Range Annotation = enclosed Element . get Annotation (  On Entered Range . class )  ;      final  On Exited Range exited Range Annotation = enclosed Element . get Annotation (  On Exited Range . class )  ;      if  ( entered Range Annotation != null )  {          Spec Method Model< Event Method,  Working Range Declaration Model> entered Range Method = generate Working Range Method ( elements, executable Element, permitted Inter Stage Input Annotations, messager,  On Entered Range . class )  ;          final  String name = entered Range Annotation . name (  )  ;          final  Working Range Method Model working Range Model = working Range Methods . stream (  )  . filter (  it -> it . name . equals ( name )  && it . entered Range Model == null )  . find First (  )  . or Else Get (  (  )  -> {              Working Range Method Model model = new  Working Range Method Model ( name )  ;              working Range Methods . add ( model )  ;              return model ;          } )  ;          working Range Model . entered Range Model = entered Range Method ;      }     if  ( exited Range Annotation != null )  {          Spec Method Model< Event Method,  Working Range Declaration Model> exited Range Method = generate Working Range Method ( elements, executable Element, permitted Inter Stage Input Annotations, messager,  On Exited Range . class )  ;          final  String name = exited Range Annotation . name (  )  ;          final  Working Range Method Model working Range Model = working Range Methods . stream (  )  . filter (  it -> it . name . equals ( name )  && it . exited Range Model == null )  . find First (  )  . or Else Get (  (  )  -> {              Working Range Method Model model = new  Working Range Method Model ( name )  ;              working Range Methods . add ( model )  ;              return model ;          } )  ;          working Range Model . exited Range Model = exited Range Method ;      } } return  Immutable List . copy Of ( working Range Methods )  ; }"
9519,"public com . anychart . core . stock . scrollerseries .  Jump Line labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9520,"public com . anychart . charts .  Pie label (  String index,  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . label ( %s, %s )  ; "", wrap Quotes ( index ) , wrap Quotes ( settings )  )  )  ;  return this ; }"
9521,public  Vertical Group expand ( boolean expand ) { this . expand = expand ;  return this ; }
9522,"public  Track Me inject Visit Variables ( @ Non Null  Track Me track Me ) { //noinspection deprecation track Me . set (  Query Params . VISIT_SCOPE_CUSTOM_VARIABLES, this . to String (  )  )  ;  return track Me ; }"
9523,"public void remove Touch Focus (  Event Listener listener,  Actor listener Actor,  Actor target, int pointer, int button ) {  Snapshot Array< Touch Focus> touch Focuses = this . touch Focuses ;  for  ( int i = touch Focuses . size - 1 ;  i >= 0 ;  i-- )  {      Touch Focus focus = touch Focuses . get ( i )  ;      if  ( focus . listener == listener && focus . listener Actor == listener Actor && focus . target == target && focus . pointer == pointer && focus . button == button )  {         touch Focuses . remove Index ( i )  ;           Pools . free ( focus )  ;      } }}"
9524,"public void set Vendor (  String vendor ) { if  ( vendor == null )  {     vendor = DEFAULT_VENDOR ;  } super . set Field ( new  Vorbis Comment Tag Field ( VENDOR . get Field Name (  ) , vendor )  )  ; }"
9525,public  Reftable Compactor set Config (  Reftable Config cfg ) { writer . set Config ( cfg )  ;  return this ; }
9526,"public int add ( E element, int occurrences ) { if  ( occurrences == 0 )  {     return count ( element )  ;  } check Argument ( occurrences > 0, "" Invalid occurrences: %s"", occurrences )  ;  while  ( true )  {     int current = count ( element )  ;      if  ( current == 0 )  {         if  ( count Map . put If Absent ( element, occurrences )  == null )  {             return 0 ;          }     } else {         check Argument ( occurrences <=  Integer . MAX_VALUE - current, "" Overflow adding %s occurrences to a count of %s"", occurrences, current )  ;          int next = current + occurrences ;          if  ( count Map . replace ( element, current, next )  )  {             return current ;          }     } //  If we're still here, there was a race, so just try again .  }}"
9527,protected boolean is Rebooting Userspace Supported (  ) { return is Rebooting Userspace Supported ; }
9528,public  Firebase Config<T> set Network Adapter (  Class<? extends  Base Network Adapter> network Adapter ) { this . network Adapter = network Adapter ;  return this ; }
9529,"private void update Environment Mapping (  Tree tree,  Visitor State state ) {  Access Path Nullness Analysis analysis = get Nullness Analysis ( state )  ;  // two notes: // 1 .  we are free to take local variable information from the program point before // the lambda / class declaration as only effectively final variables can be accessed // from the nested scope, so the program point doesn't matter // 2 .  we keep info on all locals rather than just effectively final ones for simplicity  Enclosing Environment Nullness . instance ( state . context )  . add Environment Mapping ( tree, analysis . get Nullness Info Before New Context ( state . get Path (  ) , state, handler )  )  ; }"
9530,public static boolean load ( E object ) { if  (  Realm Object . is Loaded ( object )  )  {     return true ;  } else if  ( object instanceof  Realm Object Proxy )  {      (  (  Realm Object Proxy )  object )  . realm Get$proxy State (  )  . load (  )  ;      return true ;  } return false ; }
9531,"public void do Reply (  Input Stream in,  Output Stream out,  String cmd )  throws IO Exception,  Bad Http Request{ int len ;  int file Type ;   String filename, url Name ;  if  ( cmd . starts With ( ""GET /"" )  )      filename = url Name = cmd . substring ( 5, cmd . index Of ( ' ', 5 )  )  ;  else     throw new  Bad Http Request (  )  ;  if  ( filename . ends With ( "" . class"" )  )      file Type = type Class ;  else if  ( filename . ends With ( "" . html"" )  || filename . ends With ( "" . htm"" )  )      file Type = type Html ;  else if  ( filename . ends With ( "" . gif"" )  )      file Type = type Gif ;  else if  ( filename . ends With ( "" . jpg"" )  )      file Type = type Jpeg ;  else     // or text Unknown     file Type = type Text ;  len = filename . length (  )  ;  if  ( file Type == type Class && let Users Send Classfile ( out, filename, len )  )      return ;  check Filename ( filename, len )  ;  if  ( htmlfile Base != null )      filename = htmlfile Base + filename ;  if  (  File . separator Char != '/' )      filename = filename . replace ( '/',  File . separator Char )  ;   File file = new  File ( filename )  ;  if  ( file . can Read (  )  )  {     send Header ( out, file . length (  ) , file Type )  ;       File Input Stream fin = new  File Input Stream ( file )  ;      byte [  ]  filebuffer = new byte [ 4096 ]  ;      for  (  ;   ;   )  {         len = fin . read ( filebuffer )  ;          if  ( len <= 0 )              break ;          out . write ( filebuffer, 0, len )  ;      }     fin . close (  )  ;      return ;  } if  ( file Type == type Class )  {      Input Stream fin = get Class (  )  . get Resource As Stream ( ""/"" + url Name )  ;      if  ( fin != null )  {          Byte Array Output Stream barray = new  Byte Array Output Stream (  )  ;          byte [  ]  filebuffer = new byte [ 4096 ]  ;          for  (  ;   ;   )  {             len = fin . read ( filebuffer )  ;              if  ( len <= 0 )                  break ;              barray . write ( filebuffer, 0, len )  ;          }         byte [  ]  classfile = barray . to Byte Array (  )  ;          send Header ( out, classfile . length, type Class )  ;          out . write ( classfile )  ;          fin . close (  )  ;          return ;      } } throw new  Bad Http Request (  )  ; }"
9532,public  Object Value get Value (  ) { return value ; }
9533,"public static  Object remove ( @ Non Null final  String key, @ Non Null final  Cache Memory Utils cache Memory Utils ) { return cache Memory Utils . remove ( key )  ; }"
9534,"public static void create Table (  Database db, boolean if Not Exists ) {  String constraint = if Not Exists ? ""IF NOT EXISTS "" : """" ;  db . exec SQL ( // ""CREATE TABLE "" + constraint + ""\""JOIN_MANY_TO_DATE_ENTITY\""  ( "" + // 0: id ""\""_id\"" INTEGER PRIMARY KEY ,"" + // 1: id To Many ""\""ID_TO_MANY\"" INTEGER,"" + // 2: id Date ""\""ID_DATE\"" INTEGER )  ; "" )  ; }"
9535,"public boolean raw Pixels To Data Point ( float x, float y,  Point F dest ) { if  ( !content Rect Minus All Margins . contains (  ( int )  x,  ( int )  y )  )  {     return false ;  } dest . set ( current Viewport . left +  ( x - content Rect Minus All Margins . left )  * current Viewport . width (  )  / content Rect Minus All Margins . width (  ) , current Viewport . bottom +  ( y - content Rect Minus All Margins . bottom )  * current Viewport . height (  )  / -content Rect Minus All Margins . height (  )  )  ;  return true ; }"
9536,"private static void update Network (  Wifi Manager wifi Manager,  Wifi Configuration config ) {  Integer found Network ID = find Network In Existing Config ( wifi Manager, config . SSID )  ;  if  ( found Network ID != null )  {      Log . i ( TAG, "" Removing old configuration for network "" + config . SSID )  ;      wifi Manager . remove Network ( found Network ID )  ;      wifi Manager . save Configuration (  )  ;  } int network Id = wifi Manager . add Network ( config )  ;  if  ( network Id >= 0 )  {     //  Try to disable the current network and start a new one .      if  ( wifi Manager . enable Network ( network Id, true )  )  {          Log . i ( TAG, "" Associating to network "" + config . SSID )  ;          wifi Manager . save Configuration (  )  ;      } else {          Log . w ( TAG, "" Failed to enable network "" + config . SSID )  ;      } } else {      Log . w ( TAG, "" Unable to add network "" + config . SSID )  ;  }}"
9537,public PDF Font get Font (  ) { return font ; }
9538,"private void perform Normalization If Needed (  ) { if  ( cache Normalization Position != null && get Child Count (  )  > 0 )  {     final  View first View = get Child At ( 0 )  ;      int first View Position = get Position ( first View )  ;      if  ( first View Position < cache Normalization Position ||  ( cache Normalization Position == 0 && cache Normalization Position == first View Position )  )  {         //perform normalization when we have reached previous position then normalization position          Log . d ( ""normalization"", ""position = "" + cache Normalization Position + "" top view position = "" + first View Position )  ;           Log . d ( TAG, ""cache purged from position "" + first View Position )  ;          view Positions Storage . purge Cache From Position ( first View Position )  ;          //reset normalization position         cache Normalization Position = null ;          request Layout With Animations (  )  ;      } }}"
9539,public void unbind (  ) { if  ( m Use Extensions )  {     m Mount Delegate Target . detach (  )  ;      if  ( m Litho Host Listener Coordinator != null )  {         m Litho Host Listener Coordinator . on Unbind (  )  ;      } } else {     m Mount State . unbind (  )  ;  }}
9540,protected void reset (  ) { super . reset (  )  ;  map Classes To Named Scoped Providers . clear (  )  ;  map Classes To Un Named Scoped Providers . clear (  )  ;  has Test Modules = false ;  install Binding For Scope Class (  )  ; }
9541,"public void deny Outgoing Call (  Outgoing Call Record call ) { if  ( call . is Handled )  {     throw new  Illegal State Exception ( "" Call has already been allowed or denied . "" )  ;  } call . is Handled = true ;   Phone Account Handle phone Account = verify Not Null ( call . phone Account )  ;   Connection Request request = build Connection Request For Outgoing Call ( call )  ;   Connection Service service = setup Connection Service ( phone Account )  ;  service . on Create Outgoing Connection Failed ( phone Account, request )  ; }"
9542,"public com . anychart . standalones .  Resource List even Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . even Fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
9543,public void set Visual Types (  Type [  ]  types ) { m Visual Types . clear (  )  ;  m Visual Types . add All (  Arrays . as List ( types )  )  ; }
9544,"public com . anychart . core . cartesian . series .  Continuous Range Base rendering (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . rendering ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9545,public  String get Language (  ) { return language Code ; }
9546,public  Document get Last Document (  ) { return sorted Set . get Max Entry (  )  ; }
9547,public  Cherry Pick Command set Mainline Parent Number ( int mainline Parent Number ) { this . mainline Parent Number =  Integer . value Of ( mainline Parent Number )  ;  return this ; }
9548,"public void set Stack From End ( boolean stack From End ) { if  ( stack From End )  {     throw new  Unsupported Operation Exception ( "" Virtual Layout Manager does not support stack from end . "" )  ;  } super . set Stack From End ( false )  ; }"
9549,"private static  String day To String ( int day, int day Of Week Length ) { return  Date Utils . get Day Of Week String ( day To Util Day ( day ) , day Of Week Length )  ; }"
9550,public boolean is Idle (  ) { return m Work Queue . is Empty (  )  &&  ( m Pending Workers . get (  )  == 0 )  ; }
9551,"public static void init ( @ Non Null final  File crash Dir, final  On Crash Listener on Crash Listener ) { init ( crash Dir . get Absolute Path (  ) , on Crash Listener )  ; }"
9552,"private static  String  Object2 String (  Object object ) {  Byte Array Output Stream byte Array Output Stream = new  Byte Array Output Stream (  )  ;   Object Output Stream object Output Stream = null ;  try {     object Output Stream = new  Object Output Stream ( byte Array Output Stream )  ;      object Output Stream . write Object ( object )  ;       String string = new  String (  Base64 . encode ( byte Array Output Stream . to Byte Array (  ) ,  Base64 . DEFAULT )  )  ;      object Output Stream . close (  )  ;      return string ;  } catch  ( IO Exception e )  {     e . print Stack Trace (  )  ;      return null ;  }}"
9553,"public static void unregister Listener (  Object Context for Context,  Object Context Listener listener ) {  Set< Object Context Listener> listeners = get Listeners For Context ( for Context )  ;  listeners . remove ( listener )  ;  if  ( listeners . is Empty (  )  )  {     // remove context from collection to prevent memory leaks     context Listeners . remove ( for Context )  ;  }}"
9554,public  Locale effective Locale (  ) { return effective Locale ; }
9555,public  Color cpy (  ) { return new  Color ( this )  ; }
9556,"public com . anychart . core . cartesian . series .  Range Bar fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number cx,  Number cy, com . anychart . graphics . math .  Rect mode,  Number opacity,  Number fx,  Number fy ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s, %s, %s, %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, cx, cy,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity, fx, fy )  )  ;  return this ; }"
9557,"public  Sha1 Hash Code compute Sha1 (  Path path Relative To Project Root Or Just Absolute )  throws IO Exception{ if  ( !exists ( path Relative To Project Root Or Just Absolute )  )  {     throw new  No Such File Exception ( path Relative To Project Root Or Just Absolute . to String (  )  )  ;  } //  Because this class is a fake, the file contents may not be available as a stream, so we load // all of the contents into memory as a byte [  ]  and then hash them .  byte [  ]  file Contents = get File Bytes ( path Relative To Project Root Or Just Absolute )  ;   Hash Code hash Code =  Hashing . sha1 (  )  . new Hasher (  )  . put Bytes ( file Contents )  . hash (  )  ;  return  Sha1 Hash Code . from Hash Code ( hash Code )  ; }"
9558,public boolean contains ( @ Nullable  Object object ) { if  ( is Loaded (  )  )  {     //  Deleted objects can never be part of a  Realm Results     if  ( object instanceof  Realm Object Proxy )  {          Realm Object Proxy proxy =  (  Realm Object Proxy )  object ;          if  ( proxy . realm Get$proxy State (  )  . get Row$realm (  )  ==  Invalid Row . INSTANCE )  {             return false ;          }     }     for  ( E e : this )  {         if  ( e . equals ( object )  )  {             return true ;          }     } } return false ; }
9559,"public com . anychart . core . cartesian . series .  Continuous Range Base max Labels (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Labels ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9560,"public  Object Id insert To (  Object Inserter ins )  throws IO Exception{ if  ( buf != null )      return ins . insert ( OBJ_TREE, buf, 0, ptr )  ;  final long len = overflow Buffer . length (  )  ;  return ins . insert ( OBJ_TREE, len, overflow Buffer . open Input Stream (  )  )  ; }"
9561,public T from (  File Descriptor file Descriptor ) { m Input Source = new  Input Source .  File Descriptor Source ( file Descriptor )  ;  return self (  )  ; }
9562,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
9563,"public void z Index (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . z Index (  )  ; "" )  ; }"
9564,public void set In Is Opaque ( boolean in Is Opaque ) { this . in Is Opaque = in Is Opaque ; }
9565,public  String to String (  ) { return to String ( 10 )  ; }
9566,"public com . anychart . core . resource . resourcelist .  Text Settings font Weight (  Number weight ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . font Weight ( %s )  ; "", weight )  )  ;  return this ; }"
9567,"public  Object recording Method (  ) { if  ( method Called )  {     throw new  Illegal State Exception ( "" Method called more than once . "" )  ;  } method Called = true ;  return method Return Value ; }"
9568,public void set Link Owner User (  User link Owner User ) { synchronized  ( this )  {     this . link Owner User = link Owner User ;      link Owner User Dao Id = link Owner User == null ? null : link Owner User . get Id (  )  ;      link Owner User__resolved Key = link Owner User Dao Id ;  }}
9569,public  Object get Value (  ) { return this . value ; }
9570,"protected boolean draw Child (  Canvas canvas,  View child, long drawing Time ) { final  View this View = this ;  final  View content View = m Refresh Content != null ? m Refresh Content . get View (  )  : null ;  if  ( m Refresh Header != null && m Refresh Header . get View (  )  == child )  {     if  ( !is Enable Refresh Or Load More ( m Enable Refresh )  ||  ( !m Enable Preview In Edit Mode && this View . is In Edit Mode (  )  )  )  {         return true ;      }     if  ( content View != null )  {         int bottom =  Math . max ( content View . get Top (  )  + content View . get Padding Top (  )  + m Spinner, child . get Top (  )  )  ;          if  ( m Header Background Color != 0 && m Paint != null )  {             m Paint . set Color ( m Header Background Color )  ;              if  ( m Refresh Header . get Spinner Style (  )  . scale )  {                 bottom = child . get Bottom (  )  ;              } else if  ( m Refresh Header . get Spinner Style (  )  ==  Spinner Style .  Translate )  {                 bottom = child . get Bottom (  )  + m Spinner ;              }             canvas . draw Rect ( 0, child . get Top (  ) , this View . get Width (  ) , bottom, m Paint )  ;          }         /*              * 2019-12-24              * 修复 经典头拉伸状态下显示异常的问题              * 导致的原因 1 . 1 . 0 版本之后  Smart 不推荐  Scale 模式，主推  Fixed Behind 模式              * 并且取消了对 child 的绘制裁剪，所以经典组件需要重写 dispatch Draw 自行裁剪              */         if  (  ( m Enable Clip Header When Fixed Behind && m Refresh Header . get Spinner Style (  )  ==  Spinner Style .  Fixed Behind )  || m Refresh Header . get Spinner Style (  )  . scale )  {             canvas . save (  )  ;              canvas . clip Rect ( child . get Left (  ) , child . get Top (  ) , child . get Right (  ) , bottom )  ;              boolean ret = super . draw Child ( canvas, child, drawing Time )  ;              canvas . restore (  )  ;              return ret ;          }     } } if  ( m Refresh Footer != null && m Refresh Footer . get View (  )  == child )  {     if  ( !is Enable Refresh Or Load More ( m Enable Load More )  ||  ( !m Enable Preview In Edit Mode && this View . is In Edit Mode (  )  )  )  {         return true ;      }     if  ( content View != null )  {         int top =  Math . min ( content View . get Bottom (  )  - content View . get Padding Bottom (  )  + m Spinner, child . get Bottom (  )  )  ;          if  ( m Footer Background Color != 0 && m Paint != null )  {             m Paint . set Color ( m Footer Background Color )  ;              if  ( m Refresh Footer . get Spinner Style (  )  . scale )  {                 top = child . get Top (  )  ;              } else if  ( m Refresh Footer . get Spinner Style (  )  ==  Spinner Style .  Translate )  {                 top = child . get Top (  )  + m Spinner ;              }             canvas . draw Rect ( 0, top, this View . get Width (  ) , child . get Bottom (  ) , m Paint )  ;          }         /*              * 2019-12-24              * 修复 经典头拉伸状态下显示异常的问题              * 导致的原因 1 . 1 . 0 版本之后  Smart 不推荐  Scale 模式，主推  Fixed Behind 模式              * 并且取消了对 child 的绘制裁剪，所以经典组件需要重写 dispatch Draw 自行裁剪              */         if  (  ( m Enable Clip Footer When Fixed Behind && m Refresh Footer . get Spinner Style (  )  ==  Spinner Style .  Fixed Behind )  || m Refresh Footer . get Spinner Style (  )  . scale )  {             canvas . save (  )  ;              canvas . clip Rect ( child . get Left (  ) , top, child . get Right (  ) , child . get Bottom (  )  )  ;              boolean ret = super . draw Child ( canvas, child, drawing Time )  ;              canvas . restore (  )  ;              return ret ;          }     } } return super . draw Child ( canvas, child, drawing Time )  ; }"
9571,public int [  ]  get Color Table (  ) { return table ; }
9572,"public static void write Signed Leb128 (  Byte Output out, int value ) { int remaining = value >> 7 ;  boolean has More = true ;  int end =  (  ( value &  Integer . MIN_VALUE )  == 0 )  ? 0 : -1 ;  while  ( has More )  {     has More =  ( remaining != end )  ||  (  ( remaining & 1 )  !=  (  ( value >> 6 )  & 1 )  )  ;      out . write Byte (  ( byte )   (  ( value & 0x7f )  |  ( has More ? 0x80 : 0 )  )  )  ;      value = remaining ;      remaining >>= 7 ;  }}"
9573,public T10 get Value10 (  ) { return value10 ; }
9574,public boolean is Excluded (  ) { return excluded ; }
9575,public synchronized  List< Producer Context Callbacks> set Is Prefetch No Callbacks ( boolean is Prefetch ) { if  ( is Prefetch == m Is Prefetch )  {     return null ;  } m Is Prefetch = is Prefetch ;  return new  Array List<> ( m Callbacks )  ; }
9576,"public com . anychart . core . ui .  Scroll Bar slider Fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . slider Fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
9577,"public  Authentication Result acquire Token Silent Sync (  String resource,  String client Id,  String user Id, @ Nullable  String claims )  throws  Authentication Exception,  Interrupted Exception{ return acquire Token Silent Sync ( resource, client Id, user Id, false, claims,  Event Strings . ACQUIRE_TOKEN_SILENT_SYNC_CLAIMS_CHALLENGE )  ; }"
9578,"public  Realm Async Task call Function Async (  String name,  List<?> args,  Class<T> result Class,  Codec Registry codec Registry,  App .  Callback<T> callback ) {  Util . check Looper Thread ( "" Asynchronous functions is only possible from looper threads . "" )  ;  return new  Request<T> (  App . NETWORK_POOL_EXECUTOR, callback )  {     @ Override     public T run (  )  throws  App Exception {          Decoder<T> decoder =  Jni Bson Protocol . get Codec ( result Class, codec Registry )  ;          return invoke ( name, args, codec Registry, decoder )  ;      } } . start (  )  ; }"
9579,"public static void calculate Scissors (  Camera camera, float viewport X, float viewport Y, float viewport Width, float viewport Height,  Matrix4 batch Transform,  Rectangle area,  Rectangle scissor ) { tmp . set ( area . x, area . y, 0 )  ;  tmp . mul ( batch Transform )  ;  camera . project ( tmp, viewport X, viewport Y, viewport Width, viewport Height )  ;  scissor . x = tmp . x ;  scissor . y = tmp . y ;  tmp . set ( area . x + area . width, area . y + area . height, 0 )  ;  tmp . mul ( batch Transform )  ;  camera . project ( tmp, viewport X, viewport Y, viewport Width, viewport Height )  ;  scissor . width = tmp . x - scissor . x ;  scissor . height = tmp . y - scissor . y ; }"
9580,"public  String get Device Name (  ) { final  Usb Device device = m Weak Device . get (  )  ;  return device != null ? device . get Device Name (  )  : """" ; }"
9581,"public T get Parcelable ( @ Non Null final  String key, @ Non Null final  Parcelable .  Creator<T> creator ) { return get Parcelable ( key, creator, null )  ; }"
9582,"static  Map< Class<?>,  Set< Rx Event Handler>> find All Subscribers (  Object listener ) {  Class<?> listener Class = listener . get Class (  )  ;   Map< Class<?>,  Set< Rx Event Handler>> handlers In Method = new  Hash Map< Class<?>,  Set< Rx Event Handler>> (  )  ;   Map< Class<?>,  Set< Method>> methods = SUBSCRIBERS_CACHE . get ( listener Class )  ;  if  ( null == methods )  {     methods = new  Hash Map< Class<?>,  Set< Method>> (  )  ;      load Annotated Subscriber Methods ( listener Class, methods )  ;  } if  ( !methods . is Empty (  )  )  {     for  (  Map .  Entry< Class<?>,  Set< Method>> e : methods . entry Set (  )  )  {          Set< Rx Event Handler> handlers = new  Hash Set< Rx Event Handler> (  )  ;          for  (  Method m : e . get Value (  )  )  {             handlers . add ( new  Rx Event Handler ( listener, m )  )  ;          }         handlers In Method . put ( e . get Key (  ) , handlers )  ;      } } return handlers In Method ; }"
9583,public void set Name (  String new Name ) { declaring Class . check Modify (  )  ;  field Info . set Name ( new Name )  ; }
9584,"public static  Optional< Component Annotation> root Component Annotation (  Type Element type Element ) { return any Component Annotation ( type Element, ROOT_COMPONENT_ANNOTATIONS )  ; }"
9585,"public com . anychart . core . stock . scrollerseries .  Spline selected (  String settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . selected ( %s )  ; "", wrap Quotes ( settings )  )  )  ;  return this ; }"
9586,"public static  Object call Static Method (  Class<?> clazz,  String method Name,  Class<?> [  ]  parameter Types,  Object .  .  .  args ) { try {     return find Method Best Match ( clazz, method Name, parameter Types, args )  . invoke ( null, args )  ;  } catch  (  Illegal Access Exception e )  {     // should not happen      Dexposed Bridge . log ( e )  ;      throw new  Illegal Access Error ( e . get Message (  )  )  ;  } catch  (  Illegal Argument Exception e )  {     throw e ;  } catch  (  Invocation Target Exception e )  {     throw new  Invocation Target Error ( e . get Cause (  )  )  ;  }}"
9587,protected boolean has Enrolled Fingerprints (  ) { return !fingerprints . is Empty (  )  ; }
9588,"public com . anychart . core . ui .  Markers Factory markers (  ) { return new com . anychart . core . ui .  Markers Factory ( js Base + "" . markers (  ) "" )  ; }"
9589,"public boolean is MANSSDP Discover (  ) { MAN Header header = get Headers (  )  . get First Header (  Upnp Header .  Type . MAN, MAN Header . class )  ;  return header != null && header . get Value (  )  . equals (  Notification Subtype . DISCOVER . get Header String (  )  )  ; }"
9590,"public static  Firebase Firestore new Firebase Firestore (  Context context,  Database Id database Id,  String persistence Key,  Credentials Provider credentials Provider,  Async Queue async Queue,  Firebase App firebase App,  Firebase Firestore .  Instance Registry instance Registry ) { return new  Firebase Firestore ( context, database Id, persistence Key, credentials Provider, async Queue, firebase App, instance Registry, null )  ; }"
9591,"public  Generic Drawee Hierarchy Builder set Failure Image (  Drawable failure Drawable, @ Nullable  Scaling Utils .  Scale Type failure Image Scale Type ) { m Failure Image = failure Drawable ;  m Failure Image Scale Type = failure Image Scale Type ;  return this ; }"
9592,"public com . anychart . scales .  Linear stack Mode ( com . anychart . enums .  Scale Stack Mode value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stack Mode ( %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null )  )  ;  return this ; }"
9593,"protected  Http Post build Post Request (  String url, SOAP Envelope envelope,  String soap Action )  throws  Unsupported Encoding Exception{ //  Create a new  Http Client and  Post  Header  Http Post httppost = new  Http Post ( url )  ;  httppost . set Header ( CONTENT_TYPE_LABEL, get Xml Content Type ( envelope . get Mime Type (  ) , envelope . get Encoding (  )  )  )  ;  httppost . set Header ( HEADER_KEY_SOAP_ACTION, soap Action )  ;   Http Entity entity = new  String Entity ( envelope . to String (  ) , envelope . get Encoding (  )  )  ;  httppost . set Entity ( entity )  ;  return httppost ; }"
9594,"public com . anychart . core . utils .  Padding padding (  ) { return new com . anychart . core . utils .  Padding ( js Base + "" . padding (  ) "" )  ; }"
9595,public static boolean is Power Of Two (  Big Integer x ) { check Not Null ( x )  ;  return x . signum (  )  > 0 && x . get Lowest Set Bit (  )  == x . bit Length (  )  - 1 ; }
9596,"public  Model Returning Class Type With Varargs_ on Visibility State Changed (  On Model Visibility State Changed Listener< Model Returning Class Type With Varargs_,  Object> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
9597,"public com . anychart . core . gantt .  Data Grid Button parent Bounds (  Number left,  Number top,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s, %s, %s, %s )  ; "", left, top, width, height )  )  ;  return this ; }"
9598,"public  Map< Long,  Bson Value> get Inserted Ids (  ) { return inserted Ids ; }"
9599,"public com . anychart . core . stock .  Plot bounds (  Number x,  Number y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, height )  )  ;  return this ; }"
9600,"void test Against Known Size ( int expected Size ) {  Immutable Bi Map< String,  String> actual = maximum Cardinality Bipartite Matching ( edges )  ;  for  (  Map .  Entry< String,  String> entry : actual . entry Set (  )  )  {     assert With Message ( "" The returned bimap <%s> was not a matching of the bipartite graph <%s>"", actual, edges )  . that ( edges )  . contains Entry ( entry . get Key (  ) , entry . get Value (  )  )  ;  } assert With Message ( "" The returned matching for the bipartite graph <%s> had the wrong size"", edges )  . that ( actual )  . has Size ( expected Size )  ; }"
9601,"protected int calculate Target Buffer Size (  Renderer [  ]  renderers,  Track Selection Array track Selection Array ) { int target Buffer Size = 0 ;  for  ( int i = 0 ;  i < renderers . length ;  i++ )  {     if  ( track Selection Array . get ( i )  != null )  {         target Buffer Size +=  Util . get Default Buffer Size ( renderers [ i ]  . get Track Type (  )  )  ;      } } return target Buffer Size ; }"
9602,public int size (  ) { int result = size ;  if  ( result < 0 )  {     int len = specs . length ;      result = 0 ;      for  ( int i = 0 ;  i < len ;  i++ )  {         if  ( specs [ i ]  != null )  {             result++ ;          }     }     size = result ;  } return result ; }
9603,"public void row (  Number row Index,  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row ( %s, %s )  ; "", row Index, wrap Quotes ( value )  )  )  ; }"
9604,"public com . anychart . core . gantt . elements .  Progress Element stroke ( com . anychart . graphics . vector .  Stroke color,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
9605,"public com . anychart . core . lineargauge . pointers .  Thermometer parent Bounds (  String bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "", wrap Quotes ( bounds )  )  )  ;  return this ; }"
9606,"public com . anychart . core . ui .  Label label (  Number index ) { return new com . anychart . core . ui .  Label (  String . format (  Locale . US, js Base + "" . label ( %s ) "", index )  )  ; }"
9607,"protected  Sorted Set<E> standard Tail Set ( E from Element ) { return tail Set ( from Element, true )  ; }"
9608,"public void x Anchor (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . x Anchor (  )  ; "" )  ; }"
9609,protected void set Row Background Provider ( final  Table Data Row Background Provider<? super T> row Background Provider ) { this . row Background Provider = row Background Provider ; }
9610,private static  String read Version (  Path ndk Root ) { return  Android Ndk Resolver . find Ndk Version From Directory ( ndk Root )  . get (  )  ; }
9611,public static  Funnel<byte [  ] > byte Array Funnel (  ) { return  Byte Array Funnel . INSTANCE ; }
9612,"public com . anychart . core . resource .  Conflicts fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
9613,public void add Wake Lock (  Power Manager .  Wake Lock wl ) {  Shadow Power Manager . add Wake Lock ( wl )  ; }
9614,public float get Alpha (  ) { return m Alpha ; }
9615,public  Ref exact Ref (  String ref Name )  throws IO Exception{ try  (  Ref Cursor rc = seek Ref ( ref Name )  )  {     return rc . next (  )  ? rc . get Ref (  )  : null ;  }}
9616,public JSON Object get Configs (  ) { return configs Json ; }
9617,public  String get Raw Path (  ) { return raw Path ; }
9618,public  Object clone (  ) {  Graphics State c State = new  Graphics State (  )  ;  c State . cliprgn = null ;  c State . cap = cap ;  c State . join = join ;  c State . stroke Paint = stroke Paint ;  c State . fill Paint = fill Paint ;  c State . xform = new  Matrix ( xform )  ;  c State . line Width = line Width ;  c State . miter Limit = miter Limit ;  return c State ; }
9619,"public static void replace ( @ Non Null final  Fragment Manager fm, @ Non Null final  Fragment fragment, @ Id Res final int container Id, final  View .  .  .  shared Elements ) { replace ( fm, fragment, container Id, null, false, shared Elements )  ; }"
9620,public long last Racy Threshold (  ) { return racy Threshold ; }
9621,"public static boolean trigger Visibility Event (  Component Tree component Tree,  Class<?> visibility Event Type ) { try {     final  Object layout State = get Get Main Thread Layout State ( component Tree )  ;      for  ( int i = 0, size = get Visibility Output Count ( layout State )  ;  i < size ;  i++ )  {         final  Object visibility Output = get Visibility Output At ( layout State, i )  ;          if  ( visibility Event Type ==  Visible Event . class && get Event Handler ( visibility Output, "" Visible"" )  != null )  {              Visibility Utils . dispatch On Visible ( get Event Handler ( visibility Output, "" Visible"" ) , null )  ;              return true ;          } else if  ( visibility Event Type ==  Invisible Event . class && get Event Handler ( visibility Output, "" Invisible"" )  != null )  {             dispatch ( get Event Handler ( visibility Output, "" Invisible"" ) , "" Invisible"" )  ;              return true ;          } else if  ( visibility Event Type ==  Focused Visible Event . class && get Event Handler ( visibility Output, "" Focused"" )  != null )  {             dispatch ( get Event Handler ( visibility Output, "" Focused"" ) , "" Focused"" )  ;              return true ;          } else if  ( visibility Event Type ==  Unfocused Visible Event . class && get Event Handler ( visibility Output, "" Unfocused"" )  != null )  {             dispatch ( get Event Handler ( visibility Output, "" Unfocused"" ) , "" Unfocused"" )  ;              return true ;          } else if  ( visibility Event Type ==  Full Impression Visible Event . class && get Event Handler ( visibility Output, "" Full Impression"" )  != null )  {             dispatch ( get Event Handler ( visibility Output, "" Full Impression"" ) , "" Full Impression"" )  ;              return true ;          }     }     return false ;  } catch  (  Class Not Found Exception e )  {     throw new  Runtime Exception ( e )  ;  }}"
9622,"private static boolean extract Dex To Jar (  Zip File zip File,  Zip Entry entry File,  File extract To,  String target Md5 )  throws IO Exception{ int num Attempts = 0 ;  boolean is Extraction Successful = false ;  while  ( num Attempts < MAX_EXTRACT_ATTEMPTS && !is Extraction Successful )  {     num Attempts++ ;       Zip Output Stream zos = null ;       Buffered Input Stream bis = null ;       Share Tinker Log . i ( TAG, ""try  Extracting "" + extract To . get Path (  )  )  ;      try {         zos = new  Zip Output Stream ( new  Buffered Output Stream ( new  File Output Stream ( extract To )  )  )  ;          bis = new  Buffered Input Stream ( zip File . get Input Stream ( entry File )  )  ;          byte [  ]  buffer = new byte [  Share Constants . BUFFER_SIZE ]  ;           Zip Entry entry = new  Zip Entry (  Share Constants . DEX_IN_JAR )  ;          zos . put Next Entry ( entry )  ;          int length = bis . read ( buffer )  ;          while  ( length != -1 )  {             zos . write ( buffer, 0, length )  ;              length = bis . read ( buffer )  ;          }         zos . close Entry (  )  ;      } finally {         IO Helper . close Quietly ( bis )  ;          IO Helper . close Quietly ( zos )  ;      }     is Extraction Successful =  Share Patch File Util . verify Dex File Md5 ( extract To, target Md5 )  ;       Share Tinker Log . i ( TAG, ""is Extraction Successful: %b"", is Extraction Successful )  ;      if  ( !is Extraction Successful )  {         final boolean succ = extract To . delete (  )  ;          if  ( !succ || extract To . exists (  )  )  {              Share Tinker Log . e ( TAG, "" Failed to delete corrupted dex "" + extract To . get Path (  )  )  ;          }     } } return is Extraction Successful ; }"
9623,"public  String get String (  String key ) {  String activated String = get String From Cache ( activated Configs Cache, key )  ;  if  ( activated String != null )  {     call Listeners ( key, get Configs From Cache ( activated Configs Cache )  )  ;      return activated String ;  }  String defaults String = get String From Cache ( default Configs Cache, key )  ;  if  ( defaults String != null )  {     return defaults String ;  } log Parameter Value Does Not Exist ( key, "" String"" )  ;  return DEFAULT_VALUE_FOR_STRING ; }"
9624,public B with Features (  Feature<?> .  .  .  features ) { return with Features (  Arrays . as List ( features )  )  ; }
9625,"public static  Subject .  Factory< Re2j String Subject,  String> re2j String (  ) { return  Re2j String Subject . FACTORY ; }"
9626,public int get Height (  ) { parse Metadata If Needed (  )  ;  return m Height ; }
9627,"protected void revalidate Byte Buffer ( @ Nullable  Byte Buffer [  ]  buffers, int index ) {}"
9628,"public  Map< String,  List> parse (  String [  ]  sentences )  throws IO Exception{ return parse ( sentences, null, null )  ; }"
9629,public boolean get Cut Delta Chains (  ) { return cut Delta Chains ; }
9630,"public A Transformable3 D set Rotation ( final  Vector3 axis, double angle ) { m Orientation . from Angle Axis ( axis, angle )  ;  m Look At Valid = false ;  mark Model Matrix Dirty (  )  ;  return this ; }"
9631,"private boolean last Check Expired (  Duration expiry, long last Cleanup Time ) { boolean is Expired = false ;  if  ( expiry != null && expiry . get Milliseconds (  )  > 0 )  {     final long now = this . clock . current Time Millis (  )  ;      final long time Diff = now - last Cleanup Time ;      is Expired =  ( last Cleanup Time <= 0 )  ||  ( time Diff >= expiry . get Milliseconds (  )  )  ;  } return is Expired ; }"
9632,"public static double compute Signed Area (  List< Lat Lng> path ) { return compute Signed Area ( path, EARTH_RADIUS )  ; }"
9633,"public com . anychart . core .  No Data Settings no Data (  ) { return new com . anychart . core .  No Data Settings ( js Base + "" . no Data (  ) "" )  ; }"
9634,public  Request Builder< File> download Only (  ) { return as (  File . class )  . apply ( DOWNLOAD_ONLY_OPTIONS )  ; }
9635,"public  Method Ref [  ]  get Method Refs (  ) {  Method Ref [  ]  method Refs = new  Method Ref [ m Method Ids . length ]  ;  for  ( int i = 0 ;  i < m Method Ids . length ;  i++ )  {      Method Id Item method Id = m Method Ids [ i ]  ;      method Refs [ i ]  = new  Method Ref ( class Name From Type Index ( method Id . class Idx ) , arg Array From Proto Index ( method Id . proto Idx ) , return Type From Proto Index ( method Id . proto Idx ) , m Strings [ method Id . name Idx ]  )  ;  } return method Refs ; }"
9636,"public com . anychart . core . stock . scrollerseries .  Jump Line bounds (  Number x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
9637,public static  Bitmap Transition Options with Cross Fade ( @ Non Null  Drawable Cross Fade Factory .  Builder builder ) { return new  Bitmap Transition Options (  )  . cross Fade ( builder )  ; }
9638,"public static  Builder<K, V> builder ( int size ) { return new  Builder<> ( size )  ; }"
9639,"public com . anychart . core . stock . scrollerseries .  Candlestick falling Stroke ( com . anychart . graphics . vector .  Colored Fill value,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . falling Stroke ( %s, %s, %s, %s, %s )  ; "",  ( value != null )  ? value . get Js Base (  )  : null, thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
9640,"public com . anychart . core . stock . indicators . B Bands bbands ( com . anychart . data .  Table Mapping mapping,  Number period,  Number deviation,  String middle Series Type, com . anychart . enums .  Stock Series Type upper Series Type, com . anychart . enums .  Stock Series Type lower Series Type ) { return new com . anychart . core . stock . indicators . B Bands (  String . format (  Locale . US, js Base + "" . bbands ( %s, %s, %s, %s, %s, %s ) "",  ( mapping != null )  ? mapping . get Js Base (  )  : null, period, deviation, wrap Quotes ( middle Series Type ) ,  ( upper Series Type != null )  ? upper Series Type . get Js Base (  )  : null,  ( lower Series Type != null )  ? lower Series Type . get Js Base (  )  : null )  )  ; }"
9641,"public static void set Inner Text (  Buck String buck String,  String new Value ) { // TODO: sanity check the new Value to see if it needs to be escaped  Psi Element old String Child ;   Psi Element new String Child = null ;  if  (  ( old String Child = buck String . get Apostrophed Raw String (  )  )  != null )  {     set Text ( buck String, ""r'"" + new Value + ""'"" )  ;  } else if  (  ( old String Child = buck String . get Apostrophed String (  )  )  != null )  {     set Text ( buck String, ""'"" + new Value + ""'"" )  ;  } else if  (  ( old String Child = buck String . get Quoted Raw String (  )  )  != null )  {     set Text ( buck String, ""r\"""" + new Value + ""\"""" )  ;  } else if  (  ( old String Child = buck String . get Quoted String (  )  )  != null )  {     set Text ( buck String, ""\"""" + new Value + ""\"""" )  ;  } else if  (  ( old String Child = buck String . get Triple Apostrophed Raw String (  )  )  != null )  {     set Text ( buck String, ""r'''"" + new Value + ""'''"" )  ;  } else if  (  ( old String Child = buck String . get Triple Apostrophed String (  )  )  != null )  {     set Text ( buck String, ""'''"" + new Value + ""'''"" )  ;  } else if  (  ( old String Child = buck String . get Triple Quoted Raw String (  )  )  != null )  {     set Text ( buck String, ""r\""\""\"""" + new Value + ""\""\""\"""" )  ;  } else if  (  ( old String Child = buck String . get Triple Quoted String (  )  )  != null )  {     set Text ( buck String, ""\""\""\"""" + new Value + ""\""\""\"""" )  ;  } if  ( old String Child != null && new String Child != null )  {     buck String . get Node (  )  . replace Child ( old String Child . get Node (  ) , new String Child . get Node (  )  )  ;  }}"
9642,"public com . anychart . charts .  Circular Gauge axis (  Number index,  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . axis ( %s, %s )  ; "", index, settings )  )  ;  return this ; }"
9643,public static void end Section (  ) { s Instance . end Section (  )  ; }
9644,public int get Async Timeout Seconds (  ) { return async Timeout Seconds ; }
9645,"public  Config Set Builder add Shlib Config Set (  ) { ensure Section ( ""cxx"" )  ;  config Set . get ( ""cxx"" )  . put ( ""shlib_interfaces"", ""enabled"" )  ;  config Set . get ( ""cxx"" )  . put ( ""independent_shlib_interfaces"", ""true"" )  ;  platform Utils . get Objcopy (  )  . if Present (  o -> config Set . get ( ""cxx"" )  . put ( ""objcopy"", o )  )  ;  return this ; }"
9646,"public int get Constant Value (  ) { return  Byte Array . read U16bit ( get (  ) , 0 )  ; }"
9647,"public com . anychart . standalones .  Title margin (  Number value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", value1, wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
9648,"public com . anychart . standalones .  Resource List z Index (  Number z Index ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . z Index ( %s )  ; "", z Index )  )  ;  return this ; }"
9649,"public  Optional< String> read File If It Exists (  Path path ) { if  ( !exists ( path )  )  {     return  Optional . empty (  )  ;  } return  Optional . of ( new  String ( get File Bytes ( path ) ,  Charsets . UTF_8 )  )  ; }"
9650,public float get Card Gap Bottom (  ) { return m Card Gap Bottom ; }
9651,"private  Iterable< List< Object>> build Cartesian Product (  Set<?> .  .  .  sets ) {  List< Set< Optional<?>>> optional Sets =  Lists . new Array List With Expected Size ( sets . length )  ;  for  (  Set<?> set : sets )  {      Set< Optional<?>> optional Set =  Sets . new Linked Hash Set (  Iterables . transform ( set, NULLABLE_TO_OPTIONAL )  )  ;      optional Sets . add ( optional Set )  ;  }  Set< List< Optional<?>>> cartesian Product =  Sets . cartesian Product ( optional Sets )  ;  return  Iterables . transform ( cartesian Product, new  Function< List< Optional<?>>,  List< Object>> (  )  {     @ Override     public  List< Object> apply (  List< Optional<?>> objs )  {         return  Lists . transform ( objs, OPTIONAL_TO_NULLABLE )  ;      } } )  ; }"
9652,private void init (  View view ) { text View Restart Conversation = view . find View By Id ( R . id . id Feedback Restart Conversation )  ;  text View Feedback Comment = view . find View By Id ( R . id . id Feedback Comment )  ;  image View Feedback Rating = view . find View By Id ( R . id . id Rating Image )  ;  constraint Layout Feedback Top Layout = view . find View By Id ( R . id . id Feedback Top Layout )  ;  scroll View Feedback Comment Wrap = view . find View By Id ( R . id . id Comment Scroll View )  ;  text View Restart Conversation . set On Click Listener ( new  View .  On Click Listener (  )  {     @ Override     public void on Click (  View view )  {         km Feedback View Callback Listener . on Restart Conversation Pressed (  )  ;      } } )  ;  //to set the max height of the scroll view to 70dp scroll View Feedback Comment Wrap . get View Tree Observer (  )  . add On Global Layout Listener ( new  View Tree Observer .  On Global Layout Listener (  )  {     @ Override     public void on Global Layout (  )  {         int height In Pixels =  Math . round (  Dimensions Utils . convert Dp To Pixel ( 70 )  )  ;          if  ( scroll View Feedback Comment Wrap . get Height (  )  > height In Pixels )  {              Layout Params layout Params =  (  Layout Params )  scroll View Feedback Comment Wrap . get Layout Params (  )  ;              layout Params . height = height In Pixels ;              scroll View Feedback Comment Wrap . set Layout Params ( layout Params )  ;          }     } } )  ; }
9653,protected  List< Access Event> get Requests (  ) { return server . get Requests (  )  ; }
9654,"private void add Document To Target ( int target Id,  Mutable Document document ) { if  ( !is Active Target ( target Id )  )  {     return ;  }  Document View Change .  Type change Type = target Contains Document ( target Id, document . get Key (  )  )  ?  Document View Change .  Type . MODIFIED :  Document View Change .  Type . ADDED ;   Target State target State = ensure Target State ( target Id )  ;  target State . add Document Change ( document . get Key (  ) , change Type )  ;  pending Document Updates . put ( document . get Key (  ) , document )  ;  ensure Document Target Mapping ( document . get Key (  )  )  . add ( target Id )  ; }"
9655,public void destroy (  ) {  View Group parent =  (  View Group )  get Parent (  )  ;  if  ( parent != null )  {     parent . remove View ( this )  ;  } m Revealer Spring . destroy (  )  ; }
9656,"public int start Pc ( int i ) { return  Byte Array . read U16bit ( info, i * 10 + 2 )  ; }"
9657,"public com . anychart . core . utils .  Padding left (  String left ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . left ( %s )  ; "", wrap Quotes ( left )  )  )  ;  return this ; }"
9658,"public static  Target Graph new Instance Exact (  Target Node<?> .  .  .  nodes ) {  Map< Build Target,  Target Node<?>> builder = new  Hash Map<> (  )  ;  for  (  Target Node<?> node : nodes )  {     builder . put ( node . get Build Target (  ) , node )  ;  }  Immutable Map< Build Target,  Target Node<?>> map =  Immutable Map . copy Of ( builder )  ;   Mutable Directed Graph< Target Node<?>> graph = new  Mutable Directed Graph<> (  )  ;  for  (  Target Node<?> node : map . values (  )  )  {     graph . add Node ( node )  ;      for  (  Build Target dep : node . get Build Deps (  )  )  {         graph . add Edge ( node,  Objects . require Non Null ( map . get ( dep ) , dep::to String )  )  ;      } } return new  Target Graph ( graph, map )  ; }"
9659,static boolean is Verbose ( @ Non Null com . google . firebase . perf . v1 .  Perf Session perf Session ) { for  (  Session Verbosity session Verbosity : perf Session . get Session Verbosity List (  )  )  {     if  ( session Verbosity ==  Session Verbosity . GAUGES_AND_SYSTEM_EVENTS )  {         return true ;      } } return false ; }
9660,"public  Iterable< Entry< String,  String>> order (  List< Entry< String,  String>> insertion Order ) { return insertion Order ; }"
9661,"public com . anychart . graphics . vector .  Hatch Fill set Rotation By Anchor (  Number degrees, com . anychart . graphics . vector .  Anchor anchor ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . set Rotation By Anchor ( %s, %s )  ; "", degrees,  ( anchor != null )  ? anchor . get Js Base (  )  : null )  )  ;  return this ; }"
9662,"private void save Actors (  List< Actor> actors,  Output Stream output Stream )  throws JSON Exception, IO Exception{ JSON Object json = new JSON Object (  )  ;  json . put ( ACTORS_KEY, get Actors Json ( actors )  )  ;   Santa Log . d ( TAG, json . to String ( 2 )  )  ;  if  ( storage Permissions . is External Storage Writable (  )  )  {     write Level Json ( json, output Stream )  ;  } else {      Santa Log . w ( TAG, "" External storage is not writable"" )  ;  }}"
9663,"public void enabled (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . enabled (  )  ; "" )  ; }"
9664,"public void test Two Modifications With Shared Delete (  )  throws IO Exception{ assert Equals ( t ( "" Cb}n}"" ) , merge ( ""ab}n}n}"", ""ab}n}"", "" Cb}n}"" )  )  ; }"
9665,Immutable Sorted Set< String> get Include Directories (  ) { return  Immutable Sorted Set . of (  )  ; }
9666,public boolean is Duration Read Finished (  ) { return is Duration Read ; }
9667,public float get X Px (  ) { return m X Px ; }
9668,"public static  Ad Load Exception create For Ad (  Exception error ) { return new  Ad Load Exception ( TYPE_AD, error )  ; }"
9669,"private void finish Kb Mode ( boolean update Displays ) { m In Kb Mode = false ;  if  ( !m Typed Times . is Empty (  )  )  {     int [  ]  values = get Entered Time ( null )  ;      m Time Picker . set Time ( values [ 0 ] , values [ 1 ]  )  ;      if  ( !m Is24 Hour Mode )  {         m Time Picker . set Am Or Pm ( values [ 2 ]  )  ;      }     m Typed Times . clear (  )  ;  } if  ( update Displays )  {     update Display ( false )  ;      m Time Picker . try Setting Input Enabled ( true )  ;  }}"
9670,"private  Pair< Integer,  Additional Items Loadable> find Additional Items (  String category Name,  List< Feed Item> items ) { int size = items . size (  )  ;  for  ( int i = 0 ;  i < size ;  i++ )  {      Feed Item item = items . get ( i )  ;      if  ( item instanceof  Additional Items Loadable &&  (  (  Additional Items Loadable )  item )  . get Category Name (  )  . equals ( category Name )  )  {         return  Pair . create ( i,  (  Additional Items Loadable )  item )  ;      } } throw new  Runtime Exception ( "" No "" +  Additional Items Loadable . class . get Simple Name (  )  + "" has been found for category = "" + category Name )  ; }"
9671,public int get Padding Bottom (  ) { return padding Bottom ; }
9672,"public static void nodes To Path (  Path Data Node [  ]  node,  Path path ) { float [  ]  current = new float [ 6 ]  ;  char previous Command = 'm' ;  for  ( int i = 0 ;  i < node . length ;  i++ )  {     add Command ( path, current, previous Command, node [ i ]  . type, node [ i ]  . params )  ;      previous Command = node [ i ]  . type ;  }}"
9673,public long get Size (  ) { return size ; }
9674,"public com . anychart . core . axes .  Map Ticks parent Bounds ( com . anychart . math .  Rect bounds ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . parent Bounds ( %s )  ; "",  ( bounds != null )  ? bounds . get Js Base (  )  : null )  )  ;  return this ; }"
9675,public int get Avg Width (  ) { return this . avg Width ; }
9676,"public void set Load More View ( @ Layout Res final int layout ) { if  ( layout > 0 )  {     m Load More View =  Layout Inflater . from ( get Context (  )  )  . inflate ( layout, null )  ;  } else {      Log . d ( VIEW_LOG_TAG, "" Layout  Resource  Id is not found for load more view for ulitmaterecyclerview"" )  ;  }}"
9677,"private void sort With Indices ( float [  ]  values, int count, boolean y Down ) { int point Count = count / 2 ;  original Indices . clear (  )  ;  original Indices . ensure Capacity ( point Count )  ;  short [  ]  original Indices Array = original Indices . items ;  for  ( short i = 0 ;  i < point Count ;  i++ )  original Indices Array [ i ]  = i ;  int lower = 0 ;  int upper = count - 1 ;   Int Array stack = quicksort Stack ;  stack . add ( lower )  ;  stack . add ( upper - 1 )  ;  while  ( stack . size > 0 )  {     upper = stack . pop (  )  ;      lower = stack . pop (  )  ;      if  ( upper <= lower )          continue ;      int i = quicksort Partition With Indices ( values, lower, upper, y Down, original Indices Array )  ;      if  ( i - lower > upper - i )  {         stack . add ( lower )  ;          stack . add ( i - 2 )  ;      }     stack . add ( i + 2 )  ;      stack . add ( upper )  ;      if  ( upper - i >= i - lower )  {         stack . add ( lower )  ;          stack . add ( i - 2 )  ;      } }}"
9678,"private  List< Persisted Event> load Events ( SQ Lite Database db,  Transport Context transport Context ) {  List< Persisted Event> events = new  Array List<> (  )  ;   Long context Id = get Transport Context Id ( db, transport Context )  ;  if  ( context Id == null )  {     return events ;  } try With Cursor ( db . query ( ""events"", new  String [  ]  { ""_id"", ""transport_name"", ""timestamp_ms"", ""uptime_ms"", ""payload_encoding"", ""payload"", ""code"", ""inline"" }, ""context_id = ?"", new  String [  ]  { context Id . to String (  )  }, null, null, null,  String . value Of ( config . get Load Batch Size (  )  )  ) ,  cursor -> {     while  ( cursor . move To Next (  )  )  {         long id = cursor . get Long ( 0 )  ;          boolean inline = cursor . get Int ( 7 )  != 0 ;           Event Internal .  Builder event =  Event Internal . builder (  )  . set Transport Name ( cursor . get String ( 1 )  )  . set Event Millis ( cursor . get Long ( 2 )  )  . set Uptime Millis ( cursor . get Long ( 3 )  )  ;          if  ( inline )  {             event . set Encoded Payload ( new  Encoded Payload ( to Encoding ( cursor . get String ( 4 )  ) , cursor . get Blob ( 5 )  )  )  ;          } else {             event . set Encoded Payload ( new  Encoded Payload ( to Encoding ( cursor . get String ( 4 )  ) , read Payload ( id )  )  )  ;          }         if  ( !cursor . is Null ( 6 )  )  {             event . set Code ( cursor . get Int ( 6 )  )  ;          }         events . add (  Persisted Event . create ( id, transport Context, event . build (  )  )  )  ;      }     return null ;  } )  ;  return events ; }"
9679,"private void process Beacon From Scan ( @ Non Null  Beacon beacon ) { if  (  Stats . get Instance (  )  . is Enabled (  )  )  {      Stats . get Instance (  )  . log ( beacon )  ;  } if  (  Log Manager . is Verbose Logging Enabled (  )  )  {      Log Manager . d ( TAG, ""beacon detected : %s"", beacon . to String (  )  )  ;  } beacon = m Extra Data Beacon Tracker . track ( beacon )  ;  // the above if  ( beacon == null )  {     if  (  Log Manager . is Verbose Logging Enabled (  )  )  {          Log Manager . d ( TAG, ""not processing detections for GATT extra data beacon"" )  ;      } } else {     m Monitoring Status . update Newly Inside In Regions Containing ( beacon )  ;       List< Region> matched Regions ;       Iterator< Region> matched Region Iterator ;       Log Manager . d ( TAG, ""looking for ranging region matches for this beacon"" )  ;      synchronized  ( m Ranged Region State )  {         matched Regions = matching Regions ( beacon, m Ranged Region State . key Set (  )  )  ;          matched Region Iterator = matched Regions . iterator (  )  ;          while  ( matched Region Iterator . has Next (  )  )  {              Region region = matched Region Iterator . next (  )  ;               Log Manager . d ( TAG, ""matches ranging region: %s"", region )  ;               Range State range State = m Ranged Region State . get ( region )  ;              if  ( range State != null )  {                 range State . add Beacon ( beacon )  ;              }         }     } }}"
9680,public synchronized void remove Peer (  Json Rpc Peer peer ) { if  ( m Receiving Peers . remove ( peer )  != null )  {     m Receiving Peers Snapshot = null ;      if  ( m Listener != null )  {         m Listener . on Peer Unregistered ( peer )  ;      } }}
9681,public  Object Context get Object Context (  ) { return managed Object Context ; }
9682,"public com . anychart . charts .  Mekko padding (  String value1,  Number value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
9683,public static  String get Current Saved Target (  Project project ) { return  Buck Project Settings Provider . get Instance ( project )  . get Last Alias (  )  . or Else ( null )  ; }
9684,"public com . anychart . core . resource .  Grid even Holiday Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  String mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . even Holiday Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, wrap Quotes ( mode ) , opacity )  )  ;  return this ; }"
9685,"public com . anychart . core . axes .  Map Ticks container ( com . anychart . graphics . vector .  Stage element ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . container ( %s )  ; "",  ( element != null )  ? element . get Js Base (  )  : null )  )  ;  return this ; }"
9686,public  Iterable< Build Rule> get Nodes (  ) { return nodes ; }
9687,"public void font Decoration (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Decoration (  )  ; "" )  ; }"
9688,public  Bitmap Transition Options cross Fade ( int duration ) { return cross Fade ( new  Drawable Cross Fade Factory .  Builder ( duration )  )  ; }
9689,public  String Builder append ( float f ) { append0 (  Float . to String ( f )  )  ;  return this ; }
9690,"public void set JPEG Image ( byte [  ]  jpeg Image, int image Size )  throws  Exception{ if  ( jpeg Image == null || image Size < 1 )      throw new  Exception ( "" Invalid argument in set JPEG Image (  ) "" )  ;  jpeg Buf = jpeg Image ;  jpeg Buf Size = image Size ;  decompress Header ( jpeg Buf, jpeg Buf Size )  ; }"
9691,"public com . anychart . charts .  Heat Map top (  Number top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", top )  )  ;  return this ; }"
9692,private int read Hex Digit (  )  throws IO Exception{ int a ;  while  ( is White Space ( a = buf . get (  )  )  )  { } switch ( a )  {     case '0':     case '1':     case '2':     case '3':     case '4':     case '5':     case '6':     case '7':     case '8':     case '9':         a -= '0' ;          break ;      case 'a':     case 'b':     case 'c':     case 'd':     case 'e':     case 'f':         a -= 'a' - 10 ;          break ;      case 'A':     case 'B':     case 'C':     case 'D':     case 'E':     case 'F':         a -= 'A' - 10 ;          break ;      default:         a = -1 ;          break ;  } return a ; }
9693,"public static void download Dialog (  Context context,  Dialog Interface .  On Click Listener listener ) {  String title = ""剩余容量 ( "" +  String Utils . convert Storage No B ( SD Card Utils . get Free Space Bytes (  )  )  + "" ) "" ;   Alert Dialog .  Builder builder = new  Alert Dialog .  Builder ( context )  ;  builder . set Title ( title )  . set Message ( ""下载需要大量流量，在非wifi下请慎重，是否下载?"" )  . set Negative Button ( ""取消"", null )  . set Positive Button ( ""确定"", listener )  ;  builder . create (  )  . show (  )  ; }"
9694,public  Builder set Show Day (  Boolean is Show Day ) { this . is Show Day = is Show Day ;  return this ; }
9695,public void on Unregister (  Object o ) { BUS . unregister ( o )  ;  UI_BUS . unregister ( o )  ; }
9696,"public void initialize (  Body body1,  Body body2 ) { this . body A = body1 ;  this . body B = body2 ;  this . linear Offset . set ( body A . get Local Point ( body B . get Position (  )  )  )  ;  this . angular Offset = body B . get Angle (  )  - body A . get Angle (  )  ; }"
9697,"public  String get Conversation Feedback (  String conversation Id ) {  String Builder url Builder = new  String Builder ( get Feedback Get Url (  )  )  ;  if  ( ! Text Utils . is Empty ( conversation Id )  )  {     url Builder . append ( ""/"" )  ;      url Builder . append ( conversation Id )  ;  }  String response = http Request Utils . get Response ( url Builder . to String (  ) , ""application/json"", ""application/json"" )  ;   Utils . print Log ( context, TAG, "" Get feedback response: "" + response )  ;  return response ; }"
9698,"public final void set Region Decoder Class ( @ Non Null  Class<? extends  Image Region Decoder> region Decoder Class ) { //noinspection  Constant Conditions if  ( region Decoder Class == null )  {     throw new  Illegal Argument Exception ( "" Decoder class cannot be set to null"" )  ;  } this . region Decoder Factory = new  Compat Decoder Factory<> ( region Decoder Class )  ; }"
9699,"public  Boolean get Boolean (  String key, boolean def )  throws  Illegal Argument Exception{ if  (  System Properties == null || get Boolean == null )      return def ;   Boolean ret = def ;  try {     ret =  (  Boolean )  get Boolean . invoke (  System Properties, new  Object [  ]  { key, def } )  ;  } catch  (  Illegal Argument Exception e )  {     throw e ;  } catch  (  Exception e )  { } return ret ; }"
9700,"private void write First Boundary (  )  throws IO Exception{ m Output Stream . write (  ( ""--"" + m Boundary + ""\r\n"" )  . get Bytes (  )  )  ; }"
9701,private void fits Windows EMUI (  ) {  View navigation Bar View = m Decor View . find View By Id ( IMMERSION_ID_NAVIGATION_BAR_VIEW )  ;  if  ( m Bar Params . navigation Bar Enable && m Bar Params . navigation Bar With Kitkat Enable )  {     if  ( navigation Bar View != null )  {         EMUI3 Navigation Bar Observer . get Instance (  )  . add On Navigation Bar Listener ( this )  ;          EMUI3 Navigation Bar Observer . get Instance (  )  . register ( m Activity . get Application (  )  )  ;      } } else {     EMUI3 Navigation Bar Observer . get Instance (  )  . remove On Navigation Bar Listener ( this )  ;      navigation Bar View . set Visibility (  View . GONE )  ;  }}
9702,public boolean supports Named Access (  Context Support support ) { return  ( support . get Navigator (  )  instanceof  Named Access Navigator )  ; }
9703,public  Builder set Renderers Factory (  Renderers Factory renderers Factory ) { assert That ( renderers )  . is Null (  )  ;  this . renderers Factory = renderers Factory ;  return this ; }
9704,"public static synchronized  List< Media Codec Info> get Decoder Infos (  String mime Type, boolean secure, boolean tunneling )  throws  Decoder Query Exception{  Codec Key key = new  Codec Key ( mime Type, secure, tunneling )  ;   List< Media Codec Info> cached Decoder Infos = decoder Infos Cache . get ( key )  ;  if  ( cached Decoder Infos != null )  {     return cached Decoder Infos ;  }  Media Codec List Compat media Codec List =  Util . SDK_INT >= 21 ? new  Media Codec List Compat V21 ( secure, tunneling )  : new  Media Codec List Compat V16 (  )  ;   Array List< Media Codec Info> decoder Infos = get Decoder Infos Internal ( key, media Codec List, mime Type )  ;  if  ( secure && decoder Infos . is Empty (  )  && 21 <=  Util . SDK_INT &&  Util . SDK_INT <= 23 )  {     //  Some devices don't list secure decoders on API level 21  [  Internal: b/18678462 ]  .   Try the     // legacy path .   We also try this path on API levels 22 and 23 as a defensive measure .      media Codec List = new  Media Codec List Compat V16 (  )  ;      decoder Infos = get Decoder Infos Internal ( key, media Codec List, mime Type )  ;      if  ( !decoder Infos . is Empty (  )  )  {          Log . w ( TAG, "" Media Codec List API didn't list secure decoder for: "" + mime Type + "" .   Assuming: "" + decoder Infos . get ( 0 )  . name )  ;      } } if  (  Mime Types . AUDIO_E_AC3_JOC . equals ( mime Type )  )  {     // E-AC3 decoders can decode JOC streams, but in 2-D rather than 3-D .       Codec Key eac3 Key = new  Codec Key (  Mime Types . AUDIO_E_AC3, key . secure, key . tunneling )  ;       Array List< Media Codec Info> eac3 Decoder Infos = get Decoder Infos Internal ( eac3 Key, media Codec List,  Mime Types . AUDIO_E_AC3 )  ;      decoder Infos . add All ( eac3 Decoder Infos )  ;  } apply Workarounds ( mime Type, decoder Infos )  ;   List< Media Codec Info> unmodifiable Decoder Infos =  Collections . unmodifiable List ( decoder Infos )  ;  decoder Infos Cache . put ( key, unmodifiable Decoder Infos )  ;  return unmodifiable Decoder Infos ; }"
9705,public  String next Token (  String delims ) { this . delimiters = delims ;  return next Token (  )  ; }
9706,private void update All (  ) { if  ( m Step == 0 )  {     m Step Calculated =  ( m Max Value - m Min Value )  /  ( double )  DEFAULT_TOTAL_STEPS ;  } set Max ( get Total Steps (  )  )  ;  update Value (  )  ; }
9707,public void add (  Container Atom atom ) { container Children . add ( atom )  ; }
9708,"public void max Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . max Height (  )  ; "" )  ; }"
9709,public java . lang .  String get Project Prefix (  ) { java . lang .  Object ref = project Prefix_ ;  if  ( ! ( ref instanceof java . lang .  String )  )  {     com . google . protobuf .  Byte String bs =  ( com . google . protobuf .  Byte String )  ref ;      java . lang .  String s = bs . to String Utf8 (  )  ;      project Prefix_ = s ;      return s ;  } else {     return  ( java . lang .  String )  ref ;  }}
9710,"private static boolean codec Needs Mono Channel Count Workaround (  String name,  Format format ) { return  Util . SDK_INT <= 18 && format . channel Count == 1 && ""OMX . MTK . AUDIO . DECODER . MP3"" . equals ( name )  ; }"
9711,private static  Type Name accessible Type (  Type Mirror type ) { return is Raw Type Publicly Accessible ( type )  ?  Type Name . get ( type )  :  Type Name . OBJECT ; }
9712,public void set Default Block Parameter (  Default Block Parameter default Block Parameter ) { this . default Block Parameter = default Block Parameter ; }
9713,"public com . anychart . charts .  Sunburst bounds (  String x,  String y,  Number width,  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , width, height )  )  ;  return this ; }"
9714,"private void deferred Initialization (  ) {  Host Info host Info = new  Host Info ( repo Info . host, repo Info . namespace, repo Info . secure )  ;  connection = ctx . new Persistent Connection ( host Info, this )  ;  this . ctx . get Auth Token Provider (  )  . add Token Change Listener (  (  (  Default Run Loop )  ctx . get Run Loop (  )  )  . get Executor Service (  ) , new  Token Provider .  Token Change Listener (  )  {     @ Override     public void on Token Change (  )  {         operation Logger . debug ( "" Auth token changed, triggering auth token refresh"" )  ;          connection . refresh Auth Token (  )  ;      }     @ Override     public void on Token Change (  String token )  {         operation Logger . debug ( "" Auth token changed, triggering auth token refresh"" )  ;          connection . refresh Auth Token ( token )  ;      } } )  ;  this . ctx . get App Check Token Provider (  )  . add Token Change Listener (  (  (  Default Run Loop )  ctx . get Run Loop (  )  )  . get Executor Service (  ) , new  Token Provider .  Token Change Listener (  )  {     @ Override     public void on Token Change (  )  {         operation Logger . debug ( "" App check token changed, triggering app check token refresh"" )  ;          connection . refresh App Check Token (  )  ;      }     @ Override     public void on Token Change (  String token )  {         operation Logger . debug ( "" App check token changed, triggering app check token refresh"" )  ;          connection . refresh App Check Token ( token )  ;      } } )  ;  //  Open connection now so that by the time we are connected the deferred init has run //  This relies on the fact that all callbacks run on repo's runloop .  connection . initialize (  )  ;   Persistence Manager persistence Manager = ctx . get Persistence Manager ( repo Info . host )  ;  info Data = new  Snapshot Holder (  )  ;  on Disconnect = new  Sparse Snapshot Tree (  )  ;  transaction Queue Tree = new  Tree< List< Transaction Data>> (  )  ;  info Sync Tree = new  Sync Tree ( ctx, new  Noop Persistence Manager (  ) , new  Sync Tree .  Listen Provider (  )  {     @ Override     public void start Listening ( final  Query Spec query,  Tag tag, final  Listen Hash Provider hash, final  Sync Tree .  Completion Listener on Complete )  {         schedule Now ( new  Runnable (  )  {             @ Override             public void run (  )  {                 //  This is possibly a hack, but we have different semantics for  . info                 // endpoints .   We don't raise null events on initial data .  .  .                  final  Node node = info Data . get Node ( query . get Path (  )  )  ;                  if  ( !node . is Empty (  )  )  {                      List<? extends  Event> info Events = info Sync Tree . apply Server Overwrite ( query . get Path (  ) , node )  ;                      post Events ( info Events )  ;                      on Complete . on Listen Complete ( null )  ;                  }             }         } )  ;      }     @ Override     public void stop Listening (  Query Spec query,  Tag tag )  {     } } )  ;  server Sync Tree = new  Sync Tree ( ctx, persistence Manager, new  Sync Tree .  Listen Provider (  )  {     @ Override     public void start Listening (  Query Spec query,  Tag tag,  Listen Hash Provider hash, final  Sync Tree .  Completion Listener on Listen Complete )  {         connection . listen ( query . get Path (  )  . as List (  ) , query . get Params (  )  . get Wire Protocol Params (  ) , hash, tag != null ? tag . get Tag Number (  )  : null, new  Request Result Callback (  )  {             @ Override             public void on Request Result (  String opt Error Code,  String opt Error Message )  {                  Database Error error = from Error Code ( opt Error Code, opt Error Message )  ;                   List<? extends  Event> events = on Listen Complete . on Listen Complete ( error )  ;                  post Events ( events )  ;              }         } )  ;      }     @ Override     public void stop Listening (  Query Spec query,  Tag tag )  {         connection . unlisten ( query . get Path (  )  . as List (  ) , query . get Params (  )  . get Wire Protocol Params (  )  )  ;      } } )  ;  restore Writes ( persistence Manager )  ;  update Info (  Constants . DOT_INFO_AUTHENTICATED, false )  ;  update Info (  Constants . DOT_INFO_CONNECTED, false )  ; }"
9715,public boolean has New Header ( int position ) { if  ( index Out Of Bounds ( position )  )  {     return false ;  } long header Id = m Adapter . get Header Id ( position )  ;  if  ( header Id < 0 )  {     return false ;  } return position == 0 || header Id != m Adapter . get Header Id ( position - 1 )  ; }
9716,"public void render ( final  Renderable Provider renderable Provider ) { final int offset = renderables . size ;  renderable Provider . get Renderables ( renderables, renderables Pool )  ;  for  ( int i = offset ;  i < renderables . size ;  i++ )  {      Renderable renderable = renderables . get ( i )  ;      renderable . shader = shader Provider . get Shader ( renderable )  ;  }}"
9717,public void set Big File Threshold ( int big File Threshold ) { this . big File Threshold = big File Threshold ; }
9718,"public  Ls Refs V2 Request build (  ) { return new  Ls Refs V2 Request (  Collections . unmodifiable List ( ref Prefixes ) , symrefs, peel, agent,  Collections . unmodifiable List ( server Options )  )  ; }"
9719,public void set Force Ref Log ( boolean force ) { force Ref Log =  Boolean . value Of ( force )  ; }
9720,"public void font Decoration (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . font Decoration (  )  ; "" )  ; }"
9721,public void disable Dashed Line (  ) { m Dash Path Effect = null ; }
9722,private boolean is Intercept Touch Event Enabled (  ) { return m Intercept Event Enable ; }
9723,"public com . anychart . charts .  Pert min Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . min Height ( %s )  ; "", height )  )  ;  return this ; }"
9724,"public com . anychart . charts .  Cartesian3d padding (  String value1,  String value2,  Number value3,  String value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . padding ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , wrap Quotes ( value2 ) , value3, wrap Quotes ( value4 )  )  )  ;  return this ; }"
9725,"public void bottom (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . bottom (  )  ; "" )  ; }"
9726,public  List< Receive Command> get Commands (  ) { return commands ; }
9727,"public com . anychart . core . gantt . timelineheader .  Level Wrapper stroke (  String settings,  Number thickness,  String dashpattern, com . anychart . graphics . vector .  Stroke Line Join line Join, com . anychart . graphics . vector .  Stroke Line Cap line Cap ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . stroke ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( settings ) , thickness, wrap Quotes ( dashpattern ) ,  ( line Join != null )  ? line Join . get Js Base (  )  : null,  ( line Cap != null )  ? line Cap . get Js Base (  )  : null )  )  ;  return this ; }"
9728,"public void min Bubble Size (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Bubble Size (  )  ; "" )  ; }"
9729,"public boolean contains Value ( @ Null  Object value, boolean identity ) { V [  ]  value Table = this . value Table ;  if  ( value == null )  {     if  ( has Zero Value && zero Value == null )          return true ;      long [  ]  key Table = this . key Table ;      for  ( int i = value Table . length - 1 ;  i >= 0 ;  i-- )  if  ( key Table [ i ]  != 0 && value Table [ i ]  == null )          return true ;  } else if  ( identity )  {     if  ( value == zero Value )          return true ;      for  ( int i = value Table . length - 1 ;  i >= 0 ;  i-- )  if  ( value Table [ i ]  == value )          return true ;  } else {     if  ( has Zero Value && value . equals ( zero Value )  )          return true ;      for  ( int i = value Table . length - 1 ;  i >= 0 ;  i-- )  if  ( value . equals ( value Table [ i ]  )  )          return true ;  } return false ; }"
9730,public  Builder message Digest (  String message Digest ) { this . message Digest = message Digest ;  return this ; }
9731,public void set Http Client (  Http Client http Client ) { this . http Client = http Client ; }
9732,public double get Min Y (  ) { return m Min Y ; }
9733,"public void set State ( boolean featured, int state ) { super . set State ( true, state )  ;   Santa Log . v ( TAG,  String . format (  Locale . US, ""set featured to  [ %b ]  and set State to  [ %d ] "", true, state )  )  ;  // if the transition was into READY state, execute all pending commands if  ( is Ready (  )  )  {     m Executor . execute All (  )  ;  }}"
9734,public  String get Bucket (  ) { return m Storage Uri . get Authority (  )  ; }
9735,public  Bounding Box calculate Bounding Box ( final  Bounding Box out ) { out . inf (  )  ;  return extend Bounding Box ( out )  ; }
9736,"public void star4 (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . star4 (  )  ; "" )  ; }"
9737,public int [  ]  get Write Indices (  ) { int [  ]  write Indices = new int [ sample Queues . length ]  ;  for  ( int i = 0 ;  i < sample Queues . length ;  i++ )  {     if  ( sample Queues [ i ]  != null )  {         write Indices [ i ]  = sample Queues [ i ]  . get Write Index (  )  ;      } } return write Indices ; }
9738,"public  Generic Drawee Hierarchy Builder set Retry Image (  Drawable retry Drawable, @ Nullable  Scaling Utils .  Scale Type retry Image Scale Type ) { m Retry Image = retry Drawable ;  m Retry Image Scale Type = retry Image Scale Type ;  return this ; }"
9739,public  Builder set Manifold Bucket ( com . facebook . buck . remoteexecution . proto .  Manifold Bucket .  Builder builder For Value ) { if  ( manifold Bucket Builder_ == null )  {     manifold Bucket_ = builder For Value . build (  )  ;      on Changed (  )  ;  } else {     manifold Bucket Builder_ . set Message ( builder For Value . build (  )  )  ;  } return this ; }
9740,"private static  Assertion Error new Assertion Error (  String message,  Throwable cause ) {  Assertion Error e = new  Assertion Error ( message )  ;  e . init Cause ( cause )  ;  return e ; }"
9741,"public com . anychart . core . annotations .  Fibonacci Base bounds (  String x,  String y,  String width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", wrap Quotes ( x ) , wrap Quotes ( y ) , wrap Quotes ( width ) , wrap Quotes ( height )  )  )  ;  return this ; }"
9742,public void set Card (  Card card ) { m Card = card ; }
9743,public BUILDER reset (  ) { init (  )  ;  return get This (  )  ; }
9744,"public ISBN Parsed Result parse (  Result result ) {  Barcode Format format = result . get Barcode Format (  )  ;  if  ( format !=  Barcode Format . EAN_13 )  {     return null ;  }  String raw Text = get Massaged Text ( result )  ;  int length = raw Text . length (  )  ;  if  ( length != 13 )  {     return null ;  } if  ( !raw Text . starts With ( ""978"" )  && !raw Text . starts With ( ""979"" )  )  {     return null ;  } return new ISBN Parsed Result ( raw Text )  ; }"
9745,"public com . anychart . charts .  Stock top (  String top ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . top ( %s )  ; "", wrap Quotes ( top )  )  )  ;  return this ; }"
9746,"public static void build (  Mesh Part Builder builder, float width, float height, int divisions, float center X, float center Y, float center Z, float normal X, float normal Y, float normal Z, float tangent X, float tangent Y, float tangent Z, float binormal X, float binormal Y, float binormal Z, float angle From, float angle To ) { build ( builder, width, height, 0f, 0f, divisions, center X, center Y, center Z, normal X, normal Y, normal Z, tangent X, tangent Y, tangent Z, binormal X, binormal Y, binormal Z, angle From, angle To )  ; }"
9747,"public static void check Database Name Validity ( final  String database Name ) { not Null ( ""database Name"", database Name )  ;  is True Argument ( ""database Name is not empty"", !database Name . is Empty (  )  )  ;  for  ( int i = 0 ;  i < database Name . length (  )  ;  i++ )  {     is True Argument ( ""database Name does not contain '"" + database Name . char At ( i )  + ""'"", !PROHIBITED_CHARACTERS_IN_DATABASE_NAME . contains ( database Name . char At ( i )  )  )  ;  }}"
9748,private  List< Integer> find Election Candidate Instance List ( int current Id ) { return instance Map . key Set (  )  . stream (  )  . filter (  (  i )  -> i < current Id && instance Map . get ( i )  . is Alive (  )  )  . collect (  Collectors . to List (  )  )  ; }
9749,public boolean hide Sub Menus (  ) { if  ( m Action Button Popup != null )  {     m Action Button Popup . dismiss (  )  ;      return true ;  } return false ; }
9750,"public  Affine2 pre Translate (  Vector2 trn ) { return pre Translate ( trn . x, trn . y )  ; }"
9751,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
9752,"public static bt Indexed Mesh obtain ( final  Mesh Part mesh Part ) { if  ( mesh Part == null )      throw new  Gdx Runtime Exception ( ""mesh Part cannot be null"" )  ;  bt Indexed Mesh result = get Instance ( mesh Part )  ;  if  ( result == null )  {     result = new bt Indexed Mesh ( mesh Part )  ;      instances . add ( result )  ;  } result . obtain (  )  ;  return result ; }"
9753,"public void format (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . format (  )  ; "" )  ; }"
9754,"public  Splitter omit Empty Strings (  ) { return new  Splitter ( strategy, true, trimmer, limit )  ; }"
9755,public  List< Module Spec> get View Managers (  React Application Context react Context ) { return  Collections . empty List (  )  ; }
9756,public void set Resize Mode ( @ Resize Mode int resize Mode ) {  Assertions . check State ( content Frame != null )  ;  content Frame . set Resize Mode ( resize Mode )  ; }
9757,public  Object Checker set Allow Invalid Person Ident ( boolean allow ) { allow Invalid Person Ident = allow ;  return this ; }
9758,"public static int log2 ( long x,  Rounding Mode mode ) { check Positive ( ""x"", x )  ;  switch ( mode )  {     case UNNECESSARY:         check Rounding Unnecessary ( is Power Of Two ( x )  )  ;      // fall through     case DOWN:     case FLOOR:         return  (  Long . SIZE - 1 )  -  Long . number Of Leading Zeros ( x )  ;      case UP:     case CEILING:         return  Long . SIZE -  Long . number Of Leading Zeros ( x - 1 )  ;      case HALF_DOWN:     case HALF_UP:     case HALF_EVEN:         //  Since sqrt ( 2 )  is irrational, log2 ( x )  - log Floor cannot be exactly 0 . 5         int leading Zeros =  Long . number Of Leading Zeros ( x )  ;          long cmp = MAX_POWER_OF_SQRT2_UNSIGNED >>> leading Zeros ;          // floor ( 2^ ( log Floor + 0 . 5 )  )          int log Floor =  (  Long . SIZE - 1 )  - leading Zeros ;          return log Floor + less Than Branch Free ( cmp, x )  ;      default:         throw new  Assertion Error ( ""impossible"" )  ;  }}"
9759,"public com . anychart . core . gantt . elements .  Periods Element edit (  Boolean settings ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . edit ( %s )  ; "", settings )  )  ;  return this ; }"
9760,"public byte [  ]  to Byte Array ( int limit )  throws IO Exception{ final long len =  Math . min ( length (  ) , limit )  ;  if  (  Integer . MAX_VALUE < len )      throw new  Out Of Memory Error ( J Git Text . get (  )  . length Exceeds Maximum Array Size )  ;  int length =  ( int )  len ;  final byte [  ]  out = new byte [ length ]  ;  int out Ptr = 0 ;  for  (  Block b : blocks )  {     int to Copy =  Math . min ( length - out Ptr, b . count )  ;       System . arraycopy ( b . buffer, 0, out, out Ptr, to Copy )  ;      out Ptr += to Copy ;      if  ( out Ptr == length )  {         break ;      } } return out ; }"
9761,"public static  Binder<T First, T Second> null Binder (  ) { return NULL_OPERATOR ; }"
9762,"protected final  Media Source Event Listener .  Event Dispatcher create Event Dispatcher (  Media Period Id media Period Id, long media Time Offset Ms ) {  Assertions . check Argument ( media Period Id != null )  ;  return event Dispatcher . with Parameters ( /* window Index= */ 0, media Period Id, media Time Offset Ms )  ; }"
9763,"public static  String get Xml String ( @ Non Null byte [  ]  data ) { return get Xml String ( data, UTF_8 )  ; }"
9764,"public static void set Translucent (  Activity activity ) { set Translucent ( activity, DEFAULT_STATUS_BAR_ALPHA )  ; }"
9765,"public static void go To Video AD Player (  Activity activity ) {  Intent intent = new  Intent ( activity,  Detail AD Player . class )  ;  activity . start Activity ( intent )  ; }"
9766,public void set Cache ( boolean cache ) { is Cache = cache ; }
9767,"public void write32bit ( int value, int index ) {  Byte Array . write32bit ( value, bytecode, index )  ; }"
9768,"public static void put ( @ Non Null final  String key, @ Nullable final  Bitmap value ) { put ( key, value, get Default Cache Disk Utils (  )  )  ; }"
9769,"public  Vector3 rotate Z ( double angle ) { double cos RY =  Math . cos ( angle )  ;  double sin RY =  Math . sin ( angle )  ;  if  ( m Tmp Vector3 == null )  {     m Tmp Vector3 = new  Vector3 ( this )  ;  } else {     m Tmp Vector3 . set All ( x, y, z )  ;  } x = m Tmp Vector3 . x * cos RY - m Tmp Vector3 . y * sin RY ;  y = m Tmp Vector3 . x * sin RY + m Tmp Vector3 . y * cos RY ;  return this ; }"
9770,public static  Class<?> [  ]  get Classes As Array (  Class<?> .  .  .  clazzes ) { return clazzes ; }
9771,"public final void set ( final float angle ) { final float c =  Math Utils . cos ( angle ) , s =  Math Utils . sin ( angle )  ;  ex . x = c ;  ey . x = -s ;  ex . y = s ;  ey . y = c ; }"
9772,"public static void put ( @ Non Null final  String key, final  Object value, @ Non Null final  Cache Memory Utils cache Memory Utils ) { cache Memory Utils . put ( key, value )  ; }"
9773,public  Immutable Set< Maybe Binding> requested Maybe Missing Bindings (  Binding binding ) { return network (  )  . successors ( binding )  . stream (  )  . flat Map ( instances Of (  Maybe Binding . class )  )  . collect ( to Immutable Set (  )  )  ; }
9774,public T9 get Value9 (  ) { return value9 ; }
9775,public  Builder show Image On Loading (  Drawable drawable ) { image On Loading = drawable ;  return this ; }
9776,public boolean has Queued Threads (  ) { return lock . has Queued Threads (  )  ; }
9777,"private  Path get Initial R Dot Java Dir (  ) { return get Gen Dir (  )  . resolve ( ""initial-rdotjava"" )  ; }"
9778,public  Commit Command set Insert Change Id ( boolean insert Change Id ) { check Callable (  )  ;  this . insert Change Id = insert Change Id ;  return this ; }
9779,"public void to A11y Table (  String title,  Boolean as String ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . to A11y Table ( %s, %s )  ; "", wrap Quotes ( title ) , as String )  )  ; }"
9780,"public void draw X Sequence Grid (  Canvas canvas, int col,  Rect rect,  Paint paint ) { draw Grid Path ( canvas, rect, paint, is Show X Sequence Horizontal Line ( col ) , is Show X Sequence Vertical Line ( col )  )  ; }"
9781,"protected boolean can Scroll (  View v, boolean check V, int dx, int x, int y ) { if  ( v instanceof  View Group )  {     final  View Group group =  (  View Group )  v ;      final int scroll X = v . get Scroll X (  )  ;      final int scroll Y = v . get Scroll Y (  )  ;      final int count = group . get Child Count (  )  ;      //  Count backwards - let topmost views consume scroll distance first .      for  ( int i = count - 1 ;  i >= 0 ;  i-- )  {         // TODO:  Add versioned support here for transformed views .          //  This will not work for transformed views in  Honeycomb+         final  View child = group . get Child At ( i )  ;          if  ( x + scroll X >= child . get Left (  )  && x + scroll X < child . get Right (  )  && y + scroll Y >= child . get Top (  )  && y + scroll Y < child . get Bottom (  )  && can Scroll ( child, true, dx, x + scroll X - child . get Left (  ) , y + scroll Y - child . get Top (  )  )  )  {             return true ;          }     } } return check V &&  View Compat . can Scroll Horizontally ( v, -dx )  ; }"
9782,public  Drawable Transition Options cross Fade ( int duration ) { return cross Fade ( new  Drawable Cross Fade Factory .  Builder ( duration )  )  ; }
9783,"private boolean choose Camera Id By Facing (  ) { try {     int internal Facing = INTERNAL_FACINGS . get ( m Facing )  ;      final  String [  ]  ids = m Camera Manager . get Camera Id List (  )  ;      if  ( ids . length == 0 )  {         //  No camera         throw new  Runtime Exception ( "" No camera available . "" )  ;      }     for  (  String id : ids )  {          Camera Characteristics characteristics = m Camera Manager . get Camera Characteristics ( id )  ;           Integer level = characteristics . get (  Camera Characteristics . INFO_SUPPORTED_HARDWARE_LEVEL )  ;          if  ( level == null || level ==  Camera Characteristics . INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY )  {             continue ;          }          Integer internal = characteristics . get (  Camera Characteristics . LENS_FACING )  ;          if  ( internal == null )  {             throw new  Null Pointer Exception ( "" Unexpected state: LENS_FACING null"" )  ;          }         if  ( internal == internal Facing )  {             m Camera Id = id ;              m Camera Characteristics = characteristics ;              return true ;          }     }     //  Not found     m Camera Id = ids [ 0 ]  ;      m Camera Characteristics = m Camera Manager . get Camera Characteristics ( m Camera Id )  ;       Integer level = m Camera Characteristics . get (  Camera Characteristics . INFO_SUPPORTED_HARDWARE_LEVEL )  ;      if  ( level == null || level ==  Camera Characteristics . INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY )  {         return false ;      }      Integer internal = m Camera Characteristics . get (  Camera Characteristics . LENS_FACING )  ;      if  ( internal == null )  {         throw new  Null Pointer Exception ( "" Unexpected state: LENS_FACING null"" )  ;      }     for  ( int i = 0, count = INTERNAL_FACINGS . size (  )  ;  i < count ;  i++ )  {         if  ( INTERNAL_FACINGS . value At ( i )  == internal )  {             m Facing = INTERNAL_FACINGS . key At ( i )  ;              return true ;          }     }     //  The operation can reach here when the only camera device is an external one .      //  We treat it as facing back .      m Facing =  Constants . FACING_BACK ;      return true ;  } catch  (  Camera Access Exception e )  {     throw new  Runtime Exception ( "" Failed to get a list of camera devices"", e )  ;  }}"
9784,"public byte [  ]  decrypt (  Pre Key Signal Message ciphertext,  Decryption Callback callback )  throws  Duplicate Message Exception,  Legacy Message Exception,  Invalid Message Exception,  Invalid Key Id Exception,  Invalid Key Exception,  Untrusted Identity Exception{ synchronized  ( SESSION_LOCK )  {      Session Record session Record = session Store . load Session ( remote Address )  ;       Optional< Integer> unsigned Pre Key Id = session Builder . process ( session Record, ciphertext )  ;      byte [  ]  plaintext = decrypt ( session Record, ciphertext . get Whisper Message (  )  )  ;      callback . handle Plaintext ( plaintext )  ;      session Store . store Session ( remote Address, session Record )  ;      if  ( unsigned Pre Key Id . is Present (  )  )  {         pre Key Store . remove Pre Key ( unsigned Pre Key Id . get (  )  )  ;      }     return plaintext ;  }}"
9785,"public static  Listenable Future<V> non Cancellation Propagating (  Listenable Future<V> future ) { if  ( future . is Done (  )  )  {     return future ;  }  Non Cancellation Propagating Future<V> output = new  Non Cancellation Propagating Future<> ( future )  ;  future . add Listener ( output, direct Executor (  )  )  ;  return output ; }"
9786,void eval (  ) { push Long ( pop Long (  )  ^ pop Long (  )  )  ; }
9787,public  Integer get Important For Accessibility (  ) { final  Debug Layout Node layout = m Component . get Layout Node (  )  ;  return layout == null ? null : layout . get Important For Accessibility (  )  ; }
9788,public void set Type (  Type type ) { m Type = type ;  update Path (  )  ;  invalidate Self (  )  ; }
9789,private static float get X Dist (  Motion Event e ) { float x =  Math . abs ( e . get X ( 0 )  - e . get X ( 1 )  )  ;  return x ; }
9790,"Http URL Connection create Http URL Connection (  )  throws  Firebase Remote Config Exception{ try {     URL url = new URL ( get Fetch Url ( project Number, namespace )  )  ;      return  (  Http URL Connection )  url . open Connection (  )  ;  } catch  ( IO Exception e )  {     throw new  Firebase Remote Config Exception ( e . get Message (  )  )  ;  }}"
9791,"public  Scoped Class Pool create (  Class Loader cl,  Class Pool src,  Scoped Class Pool Repository repository ) { return new  Scoped Class Pool ( cl, src, repository, false )  ; }"
9792,"public static void vali File Is File (  File file )  throws  Illegal Argument Exception{ if  ( !file . is File (  )  )  {     throw new  Illegal Argument Exception ( "" File:'"" + file . get Name (  )  + ""'does not exist or not file!"" )  ;  }}"
9793,"public com . anychart . core . utils .  Unbound Regions Settings fill (  String [  ]  color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . fill ( %s )  ; "", array To String Wrap Quotes ( color )  )  )  ;  return this ; }"
9794,"static void write Multiset (  Multiset<E> multiset,  Object Output Stream stream )  throws IO Exception{ int entry Count = multiset . entry Set (  )  . size (  )  ;  stream . write Int ( entry Count )  ;  for  (  Multiset .  Entry<E> entry : multiset . entry Set (  )  )  {     stream . write Object ( entry . get Element (  )  )  ;      stream . write Int ( entry . get Count (  )  )  ;  }}"
9795,public  Builder clear Navigation (  ) { navigation_ = 0 ;  on Changed (  )  ;  return this ; }
9796,"public void drill To (  String target ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . drill To ( %s )  ; "", wrap Quotes ( target )  )  )  ; }"
9797,public boolean not Empty (  ) { return size > 0 ; }
9798,public void evict From Cache ( final  Uri uri ) { evict From Memory Cache ( uri )  ;  evict From Disk Cache ( uri )  ; }
9799,"static void register (  Object lhs,  Object rhs ) { synchronized  (  Equals Builder . class )  {     if  ( get Registry (  )  == null )  {         REGISTRY . set ( new  Hash Set< Pair<ID Key, ID Key>> (  )  )  ;      } }  Set< Pair<ID Key, ID Key>> registry = get Registry (  )  ;   Pair<ID Key, ID Key> pair = get Register Pair ( lhs, rhs )  ;  registry . add ( pair )  ; }"
9800,"public void save As Jpg (  String width,  Number height,  Number quality,  Boolean force Transparent White,  String filename ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . save As Jpg ( %s, %s, %s, %s, %s )  ; "", wrap Quotes ( width ) , height, quality, force Transparent White, wrap Quotes ( filename )  )  )  ; }"
9801,"public com . anychart . core . resource .  Grid odd Holiday Hatch Fill ( com . anychart . graphics . vector .  Pattern Fill pattern Fill ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . odd Holiday Hatch Fill ( %s )  ; "",  ( pattern Fill != null )  ? pattern Fill . get Js Base (  )  : null )  )  ;  return this ; }"
9802,"public com . anychart . charts .  Tree Map select Marquee Fill (  String [  ]  keys,  Number angle, com . anychart . graphics . vector .  Rect mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "", array To String Wrap Quotes ( keys ) , angle,  ( mode != null )  ? mode . get Js Base (  )  : null, opacity )  )  ;  return this ; }"
9803,public synchronized void clear (  ) { m Series . clear (  )  ; }
9804,"public  Postcard with Int ( @ Nullable  String key, int value ) { m Bundle . put Int ( key, value )  ;  return this ; }"
9805,public  Kind get Kind (  ) { return kind ; }
9806,"public static  String regularize Price ( float price ) { return  String . format (  Locale . CHINESE, ""% . 2f"", price )  ; }"
9807,"public com . anychart . core . stock . scrollerseries .  Discrete Base max Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", width )  )  ;  return this ; }"
9808,"private  Build Patch Infos create Increment Patch Files (  String production Name,  File cur T Patch File,  File target Directory,  File new Apk Unzip Folder,  Patch Info cur Patch Info,  String patch History Url )  throws IO Exception,  Patch Exception{  Build Patch Infos history Build Patch Infos = null ;   String response = null ;  if  ( ! String Utils . is Empty ( patch History Url )  )  {      String patch His Url = patch History Url + ""?base Version="" + input . base Apk Bo . get Version Name (  )  + ""&product Identifier="" + production Name ;      try {         response =  Http Client Utils . get Url ( patch His Url )  ;          history Build Patch Infos = JSON . parse Object ( response,  Build Patch Infos . class )  ;      } catch  (  Throwable e )  {         history Build Patch Infos = null ;      } } else {      File [  ]  files = his Tpatch Folder . list Files ( new  Filename Filter (  )  {         @ Override         public boolean accept (  File dir,  String filename )  {             return filename . starts With ( ""patchs-"" )  && filename . ends With ( "" . json"" )  ;          }     } )  ;      if  ( files != null && files . length > 0 )  {         history Build Patch Infos = merge His Patch Info ( files )  ;      } } if  ( history Build Patch Infos == null )  {     return new  Build Patch Infos (  )  ;  }  Iterator< Patch Info> patch Infos = history Build Patch Infos . get Patches (  )  . iterator (  )  ;  while  ( patch Infos . has Next (  )  )  {      Patch Info patch Info = patch Infos . next (  )  ;      if  ( !patch Info . get Target Version (  )  . equals ( input . base Apk Bo . get Version Name (  )  )  )  {         patch Infos . remove (  )  ;      } }  Map< String,  File> awb Bundle Map = new  Hash Map< String,  File> (  )  ;  for  (  Artifact Bundle Info artifact Bundle Info : input . artifact Bundle Infos )  {      String bundle File So Name = ""lib"" + artifact Bundle Info . get Pkg Name (  )  . replace ( ' . ', '_' )  + "" . so"" ;       File bundle File = new  File ( new Apk Unzip Folder, ""lib"" + ""/"" + ""armeabi"" + ""/"" + bundle File So Name )  ;       File assets Bundle File = new  File ( new Apk Unzip Folder, ""assets"" + ""/"" + bundle File So Name )  ;      if  ( bundle File . exists (  )  )  {         awb Bundle Map . put ( artifact Bundle Info . get Artifact Id (  ) , bundle File )  ;      } else if  ( assets Bundle File . exists (  )  )  {         awb Bundle Map . put ( artifact Bundle Info . get Artifact Id (  ) , assets Bundle File )  ;      } } if  (  (  (  Tpatch Input )  input )  . split Diff Bundle != null )  {     for  (  Pair< Bundle BO,  Bundle BO> bundle :  (  (  Tpatch Input )  input )  . split Diff Bundle )  {         awb Bundle Map . put ( bundle . get Second (  )  . get Bundle Name (  ) , bundle . get Second (  )  . get Bundle File (  )  )  ;      } }  Patch File Builder patch File Builder = new  Patch File Builder ( history Build Patch Infos, cur T Patch File, cur Patch Info, awb Bundle Map, target Directory, input . base Apk Bo . get Version Name (  )  )  ;  patch File Builder . set No Patch Bundles (  (  (  Tpatch Input )  input )  . no Patch Bundles )  ;  patch File Builder . set Histroy Version List (  (  (  Tpatch Input )  input )  . version List )  ;  return patch File Builder . create History T Patches ( input . diff Bundle Dex, logger )  ; }"
9809,"public void stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . stroke (  )  ; "" )  ; }"
9810,public boolean is Same Node (  Debug Component other ) { return this . m Node == other . m Node ; }
9811,"Java File Builder add Lines In (  Compiler Mode mode,  String .  .  .  lines ) { return add Lines If ( mode, lines )  ; }"
9812,"protected final  Bluetooth Gatt Descriptor shared Cccd (  ) { return shared Descriptor ( CLIENT_CHARACTERISTIC_CONFIG_DESCRIPTOR_UUID,  Bluetooth Gatt Descriptor . PERMISSION_READ |  Bluetooth Gatt Descriptor . PERMISSION_WRITE, new byte [  ]  { 0, 0 } )  ; }"
9813,"public static void i ( int method Id ) { if  ( status <= STATUS_STOPPED )  {     return ;  } if  ( method Id >= METHOD_ID_MAX )  {     return ;  } if  ( status == STATUS_DEFAULT )  {     synchronized  ( status Lock )  {         if  ( status == STATUS_DEFAULT )  {             real Execute (  )  ;              status = STATUS_READY ;          }     } } long thread Id =  Thread . current Thread (  )  . get Id (  )  ;  if  ( s Method Enter Listener != null )  {     s Method Enter Listener . enter ( method Id, thread Id )  ;  } if  ( thread Id == s Main Thread Id )  {     if  ( assert In )  {         android . util .  Log . e ( TAG, ""ERROR!!!  App Method Beat . i  Recursive calls!!!"" )  ;          return ;      }     assert In = true ;      if  ( s Index <  Constants . BUFFER_SIZE )  {         merge Data ( method Id, s Index, true )  ;      } else {         s Index = 0 ;          merge Data ( method Id, s Index, true )  ;      }     ++s Index ;      assert In = false ;  }}"
9814,"public void empty Message And No Leading Space (  )  throws IO Exception{ int version = 1 ;  int code = 503 ;   Status Line status Line =  Status Line .  Companion . parse ( ""HTTP/1 . "" + version + "" "" + code )  ;  assert That ( status Line . message )  . is Equal To ( """" )  ;  assert That ( status Line . protocol )  . is Equal To (  Protocol . HTTP_1_1 )  ;  assert That ( status Line . code )  . is Equal To ( code )  ; }"
9815,public  Object get Mode (  ) { return BASE_AUTOMATIC_MODE ; }
9816,"public com . anychart . graphics . vector .  Pattern Fill odd Holiday Hatch Fill (  ) { return new com . anychart . graphics . vector .  Pattern Fill ( js Base + "" . odd Holiday Hatch Fill (  ) "" )  ; }"
9817,"public com . anychart . graphics . vector .  Pattern Fill title (  String value ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . title ( %s )  ; "", wrap Quotes ( value )  )  )  ;  return this ; }"
9818,"public void width (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . width (  )  ; "" )  ; }"
9819,"public com . anychart . core . stock . scrollerseries .  Step Line bounds (  Number x,  Number y,  Number width,  String height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . bounds ( %s, %s, %s, %s )  ; "", x, y, width, wrap Quotes ( height )  )  )  ;  return this ; }"
9820,"protected void expect Null Key Missing When Null Keys Unsupported (  String message ) { try {     assert False ( message, get Map (  )  . contains Key ( null )  )  ;  } catch  (  Null Pointer Exception tolerated )  { //  Tolerated }}"
9821,"public void target Needs Recalculation (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . target Needs Recalculation (  )  ; "" )  ; }"
9822,"public void test Assumption Failure (  Failure failure ) { assumption Failure = failure ;  if  ( result Listener == null )  {     record Unpaired Result ( failure,  Result Type . ASSUMPTION_VIOLATION )  ;  } else {     //  Left in only to help catch future bugs -- right now this does nothing .      result Listener . test Assumption Failure ( failure )  ;  }}"
9823,public void set Collapsed (  Card card ) { if  ( card != null )      set Collapsed ( card . get Id (  )  )  ; }
9824,public final  String get Build Tags (  ) { return  Check Validity Util . check Valid Data (  Build . TAGS )  ; }
9825,public static  Tree Range Set<C> create (  Iterable< Range<C>> ranges ) {  Tree Range Set<C> result = create (  )  ;  result . add All ( ranges )  ;  return result ; }
9826,public boolean add ( E e ) { return super . add ( e )  ; }
9827,"public void zoom Rectangle ( int x1, int y1, int x2, int y2 ) { if  ( x2 > x1 && y2 > y1 )  {     win Size X = get Width (  )  ;      win Size Y = get Height (  )  ;      int width = x2 - x1 ;      int height = y2 - y1 ;      //  Since piccolo doesn't do this well either, pad with a margin     // all the way around .      int wmargin = width / 2 ;      int hmargin = height / 2 ;      double scalefactor =  Math . min ( win Size X /  ( 2 . 0 * wmargin + width ) , win Size Y /  ( 2 . 0 * hmargin + height )  )  ;      P Camera lc = canvas . get Camera (  )  ;      lc . scale View ( scalefactor / lc . get View Scale (  )  )  ;      lc . animate View To Pan To Bounds ( new  Rectangle ( x1 - hmargin, y1 - hmargin, 2 * wmargin + width, 2 * hmargin + height ) , 0 )  ;  }}"
9828,boolean supports Concatenation (  ) { return concat (  Immutable List . of (  )  )  != null ; }
9829,"protected final  String to Key (  String cache Key ) { if  ( is Using Key Sanitizer (  )  )  {     try {         return  (  String )  key Sanitizer . sanitize Key ( cache Key )  ;      } catch  (  Key Sanitation Excepion e )  {          Ln . e ( e, "" Key could not be sanitized, falling back on original key . "" )  ;          return cache Key ;      } } else {     return cache Key ;  }}"
9830,public void set Past Signing Certificates (  Signature [  ]  past Signing Certificates ) { this . past Signing Certificates = past Signing Certificates ; }
9831,public  Component Context get Context (  ) { return m Context ; }
9832,"public void bottom (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . bottom (  )  ; "" )  ; }"
9833,"private static  Ssa Insn get Goto (  Ssa Basic Block block ) { return new  Normal Ssa Insn ( new  Plain Insn (  Rops . GOTO,  Source Position . NO_INFO, null,  Register Spec List . EMPTY ) , block )  ; }"
9834,"public static  String to ISO_8859_1 (  String str )  throws  Unsupported Encoding Exception{ return change Charset ( str, ISO_8859_1 )  ; }"
9835,public  Text Content get Text Content (  ) { ensure Mount Items (  )  ;  return  Component Host Utils . extract Text Content (  Component Host Utils . extract Content ( m Mount Items )  )  ; }
9836,"public com . anychart . charts .  Waterfall margin (  String value1,  Number value2,  Number value3,  Number value4 ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . margin ( %s, %s, %s, %s )  ; "", wrap Quotes ( value1 ) , value2, value3, value4 )  )  ;  return this ; }"
9837,public  String normalize (  String name ) { return name ; }
9838,"public com . anychart . core . ui .  Background background (  ) { return new com . anychart . core . ui .  Background ( js Base + "" . background (  ) "" )  ; }"
9839,"public static void set ( int [  ]  bits, int idx, boolean value ) { int array Idx = idx >> 5 ;  int bit = 1 <<  ( idx & 0x1f )  ;  if  ( value )  {     bits [ array Idx ]  |= bit ;  } else {     bits [ array Idx ]  &= ~bit ;  }}"
9840,"public void initialize (  List< Integer> exclusion List, int mode ) { /*      * making hash-map from the given list .       *  This is to cut down the complexity in the future .       */ this . mode = mode ;  for  (  Integer id : exclusion List )  {     exclusion Map . put ( id, true )  ;  }}"
9841,public void set Interpolator (  Interpolator interpolator ) { this . interpolator = interpolator ; }
9842,"public static void write To Db (  User Account user Account ) { if  ( !use Mongo DB )  {     virtual DB . put ( user Account . get User Id (  ) , user Account )  ;      return ;  } if  ( db == null )  {     try {         connect (  )  ;      } catch  (  Parse Exception e )  {         LOGGER . error ( "" Error connecting to  Mongo DB"", e )  ;      } } db . get Collection (  Caching Constants . USER_ACCOUNT )  . insert One ( new  Document (  Caching Constants . USER_ID, user Account . get User Id (  )  )  . append (  Caching Constants . USER_NAME, user Account . get User Name (  )  )  . append (  Caching Constants . ADD_INFO, user Account . get Additional Info (  )  )  )  ; }"
9843,"public void from (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . from (  )  ; "" )  ; }"
9844,"public void add All ( int location,  List<T> elems ) { if  ( elems == null )      return ;  data . add All ( location, elems )  ;  notify Item Range Changed ( location, elems . size (  )  )  ; }"
9845,"public void set Class Annotations (  Annotations annotations,  Dex File dex File ) { annotations Directory . set Class Annotations ( annotations, dex File )  ; }"
9846,"public void handle Online State Change (  Online State online State ) { assert Callback ( ""handle Online State Change"" )  ;   Array List< View Snapshot> new View Snapshots = new  Array List<> (  )  ;  for  (  Map .  Entry< Query,  Query View> entry : query Views By Query . entry Set (  )  )  {      View view = entry . get Value (  )  . get View (  )  ;       View Change view Change = view . apply Online State Change ( online State )  ;      hard Assert ( view Change . get Limbo Changes (  )  . is Empty (  ) , "" Online State should not affect limbo documents . "" )  ;      if  ( view Change . get Snapshot (  )  != null )  {         new View Snapshots . add ( view Change . get Snapshot (  )  )  ;      } } sync Engine Listener . on View Snapshots ( new View Snapshots )  ;  sync Engine Listener . handle Online State Change ( online State )  ; }"
9847,public final  Ref find Ref (  String name )  throws IO Exception{  String [  ]  names = new  String [ SEARCH_PATH . length ]  ;  for  ( int i = 0 ;  i < SEARCH_PATH . length ;  i++ )  {     names [ i ]  = SEARCH_PATH [ i ]  + name ;  } return first Exact Ref ( names )  ; }
9848,"protected boolean prep Holder For Animate Move ( final H holder, int from X, int from Y, int to X, int to Y ) { final  View view = holder . item View ;  int delta X = to X - from X ;  int delta Y = to Y - from Y ;  if  ( delta X == 0 && delta Y == 0 )  {     dispatch Move Finished ( holder )  ;      return false ;  } if  ( delta X != 0 )  {      View Compat . set Translation X ( view, -delta X )  ;  } if  ( delta Y != 0 )  {      View Compat . set Translation Y ( view, -delta Y )  ;  } return true ; }"
9849,"public final  Ordered contains Exactly ( @ Nullable  Object .  .  .  varargs ) {  List< Object> expected =  ( varargs == null )  ? new Array List (  (  Object )  null )  : as List ( varargs )  ;  return contains Exactly Elements In ( expected, varargs != null && varargs . length == 1 && varargs [ 0 ]  instanceof  Iterable )  ; }"
9850,"public  Equals Builder append ( byte [  ]  lhs, byte [  ]  rhs ) { if  ( is Equals == false )  {     return this ;  } if  ( lhs == rhs )  {     return this ;  } if  ( lhs == null || rhs == null )  {     this . set Equals ( false )  ;      return this ;  } if  ( lhs . length != rhs . length )  {     this . set Equals ( false )  ;      return this ;  } for  ( int i = 0 ;  i < lhs . length && is Equals ;  ++i )  {     append ( lhs [ i ] , rhs [ i ]  )  ;  } return this ; }"
9851,"void remove (  Transition Id id ) { if  ( m Ids . remove ( id )  == null )  {     //  There is no mapping for the id, return early     return ;  } switch ( id . m Type )  {     case  Transition Id .  Type . GLOBAL:         m Global Ids . remove ( id . m Reference )  ;          break ;      case  Transition Id .  Type . SCOPED:         final  String owner = id . m Extra Data ;           Map< String,  Transition Id> siblings Ids = m Scoped Ids By Owner . get ( owner )  ;          siblings Ids . remove ( id . m Reference )  ;          if  ( siblings Ids . is Empty (  )  )  {             m Scoped Ids By Owner . remove ( owner )  ;          }         break ;      case  Transition Id .  Type . AUTOGENERATED:         m Autogenerated Ids . remove ( id . m Reference )  ;          break ;  }}"
9852,"public  String get Modules Update (  )  throws IO Exception,  Config Invalid Exception{ lazy Load Modules Config (  )  ;  return modules Config . get String (  Config Constants . CONFIG_SUBMODULE_SECTION, get Module Name (  ) ,  Config Constants . CONFIG_KEY_UPDATE )  ; }"
9853,"public void rising Stroke (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . rising Stroke (  )  ; "" )  ; }"
9854,"public void add Range With Merge (  )  throws  Exception{  String file A = ""file A"" ;   String file B = ""file B"" ;   Git git =  Git . wrap ( db )  ;  write Trash File ( file A, file A )  ;  git . add (  )  . add Filepattern ( file A )  . call (  )  ;  git . commit (  )  . set Message ( ""commit a"" )  . call (  )  ;  write Trash File ( file A, file A )  ;  git . add (  )  . add Filepattern ( file A )  . call (  )  ;   Rev Commit b = git . commit (  )  . set Message ( ""commit b"" )  . call (  )  ;  write Trash File ( file A, file A )  ;  git . add (  )  . add Filepattern ( file A )  . call (  )  ;   Rev Commit c = git . commit (  )  . set Message ( ""commit c"" )  . call (  )  ;  create Branch ( b, ""refs/heads/side"" )  ;  checkout Branch ( ""refs/heads/side"" )  ;  write Trash File ( file B, file B )  ;  git . add (  )  . add Filepattern ( file B )  . call (  )  ;   Rev Commit d = git . commit (  )  . set Message ( ""commit d"" )  . call (  )  ;  checkout Branch ( ""refs/heads/master"" )  ;   Merge Result m = git . merge (  )  . include ( d . get Id (  )  )  . call (  )  ;  assert Equals (  Merge Result .  Merge Status . MERGED, m . get Merge Status (  )  )  ;   Iterator< Rev Commit> range Log = git . log (  )  . add Range ( b . get Id (  ) , m . get New Head (  )  )  . call (  )  . iterator (  )  ;   Rev Commit commit = range Log . next (  )  ;  assert Equals ( m . get New Head (  ) , commit . get Id (  )  )  ;  commit = range Log . next (  )  ;  assert Equals ( c . get Id (  ) , commit . get Id (  )  )  ;  commit = range Log . next (  )  ;  assert Equals ( d . get Id (  ) , commit . get Id (  )  )  ;  assert False ( range Log . has Next (  )  )  ; }"
9855,public void initialize (  ) { //  Create  Views m Column Header Recycler View = create Column Header Recycler View (  )  ;  m Row Header Recycler View = create Row Header Recycler View (  )  ;  m Cell Recycler View = create Cell Recycler View (  )  ;  //  Set some  Id to help in identification m Column Header Recycler View . set Id ( R . id .  Column Header Recycler View )  ;  m Row Header Recycler View . set Id ( R . id .  Row Header Recycler View )  ;  m Cell Recycler View . set Id ( R . id .  Cell Recycler View )  ;  //  Add  Views add View ( m Column Header Recycler View )  ;  add View ( m Row Header Recycler View )  ;  add View ( m Cell Recycler View )  ;  //  Create  Handlers m Selection Handler = new  Selection Handler ( this )  ;  m Visibility Handler = new  Visibility Handler ( this )  ;  m Scroll Handler = new  Scroll Handler ( this )  ;  m Preferences Handler = new  Preferences Handler ( this )  ;  m Column Width Handler = new  Column Width Handler ( this )  ;  initialize Listeners (  )  ; }
9856,public void set Second Widget ( @ Null  Actor widget ) { if  ( second Widget != null )      super . remove Actor ( second Widget )  ;  second Widget = widget ;  if  ( widget != null )      super . add Actor ( widget )  ;  invalidate (  )  ; }
9857,private void set Year Key Range ( int max Key ) { for  ( int i = 0 ;  i < m Year Numbers . length ;  i++ )  {     if  ( m Year Numbers [ i ]  != null )  {         m Year Numbers [ i ]  . set Enabled ( i <= max Key )  ;      } }}
9858,"public  Variant copy With Format (  Format format ) { return new  Variant ( url, format, video Group Id, audio Group Id, subtitle Group Id, caption Group Id )  ; }"
9859,"public void unlisten By Key (  String key ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . unlisten By Key ( %s )  ; "", wrap Quotes ( key )  )  )  ; }"
9860,"public  List<? extends  Event> apply User Overwrite ( final  Path path, final  Node new Data Unresolved, final  Node new Data, final long write Id, final boolean visible, final boolean persist ) { hard Assert ( visible || !persist, "" We shouldn't be persisting non-visible writes . "" )  ;  return persistence Manager . run In Transaction ( new  Callable< List<? extends  Event>> (  )  {     @ Override     public  List<? extends  Event> call (  )  {         if  ( persist )  {             persistence Manager . save User Overwrite ( path, new Data Unresolved, write Id )  ;          }         pending Write Tree . add Overwrite ( path, new Data, write Id, visible )  ;          if  ( !visible )  {             return  Collections . empty List (  )  ;          } else {             return apply Operation To Sync Points ( new  Overwrite (  Operation Source . USER, path, new Data )  )  ;          }     } } )  ; }"
9861,"public static  List Recycler Configuration create With Recycler Binder Configuration (  Recycler Binder Configuration recycler Binder Configuration ) { return new  List Recycler Configuration (  Linear Layout Manager . VERTICAL, false, SNAP_NONE, recycler Binder Configuration,  Builder . LINEAR_LAYOUT_INFO_FACTORY )  ; }"
9862,"public  List< User Thread Link Meta Value> get Meta Values (  ) { if  ( meta Values == null )  {     final  Dao Session dao Session = this . dao Session ;      if  ( dao Session == null )  {         throw new  Dao Exception ( "" Entity is detached from DAO context"" )  ;      }      User Thread Link Meta Value Dao target Dao = dao Session . get User Thread Link Meta Value Dao (  )  ;       List< User Thread Link Meta Value> meta Values New = target Dao . _query User Thread Link_ Meta Values ( id )  ;      synchronized  ( this )  {         if  ( meta Values == null )  {             meta Values = meta Values New ;          }     } } return meta Values ; }"
9863,"public com . anychart . core . polar . series .  Polyline polyline ( com . anychart . data .  View data,  String csv Settings ) { return new com . anychart . core . polar . series .  Polyline (  String . format (  Locale . US, js Base + "" . polyline ( %s, %s ) "",  ( data != null )  ? data . get Js Base (  )  : null, wrap Quotes ( csv Settings )  )  )  ; }"
9864,public  Abstract ID3v2 Tag get ID3 Tag (  ) { return id3 Tag ; }
9865,"public void test Both Types Of Comments (  ) {  Git Hub File file =  Git Hub File . builder (  )  . filename ( ""a . txt"" )  . build (  )  ;   Git Comment comment1 =  Git Comment . builder (  )  . path ( file . filename (  )  )  . position ( 10 )  . build (  )  ;   Git Comment comment2 =  Git Comment . builder (  )  . build (  )  ;   Commit commit =  Commit . builder (  )  . files (  Collections . singleton List ( file )  )  . build (  )  ;   Full Commit full = new  Full Commit ( commit, new  Array List<> (  Arrays . as List ( comment1, comment2 )  )  )  ;  assert Equals ( 1, full . size (  )  )  ;  assert Equals ( comment2, full . get ( 0 )  )  ;  assert Equals ( 1, full . get Files (  )  . size (  )  )  ;  assert Equals ( comment1, full . get Files (  )  . get ( 0 )  . get ( 10 )  . get ( 0 )  )  ; }"
9866,public  Throwable failure Exception (  ) { return failure Exception ; }
9867,"public com . anychart . standalones .  Data Grid row Selected Fill ( com . anychart . graphics . vector .  Fill color ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . row Selected Fill ( %s )  ; "",  ( color != null )  ? color . get Js Base (  )  : null )  )  ;  return this ; }"
9868,"public com . anychart . core . stock . scrollerseries .  Spline max Width (  Number width ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Width ( %s )  ; "", width )  )  ;  return this ; }"
9869,public void set Stack From End ( boolean stack From End ) { if  ( m Pending Saved State != null && m Pending Saved State . m Stack From End != stack From End )  {     // override pending state     m Pending Saved State . m Stack From End = stack From End ;  } if  ( m Stack From End == stack From End )  {     return ;  } m Stack From End = stack From End ;  request Layout (  )  ; }
9870,"public void test Field Getter (  )  throws  Exception{  Ct Class clazz = pool . make Class ( "" Has Field Getter"" )  ;  clazz . set Superclass ( pool . get ( ""java . lang .  Object"" )  )  ;   Ct Field field = new  Ct Field (  Ct Class . boolean Type, ""broken"", clazz )  ;  clazz . add Field ( field, ""true"" )  ;  clazz . add Method (  Ct New Method . getter ( ""is Broken"", field )  )  ;   Class _class = clazz . to Class ( capability )  ;   Object object = _class . get Constructor (  )  . new Instance (  )  ;  check ( _class, object, true )  ; }"
9871,public int get Block Size (  ) { return block Size ; }
9872,public  Builder clear Layout Direction (  ) { layout Direction_ = 0 ;  on Changed (  )  ;  return this ; }
9873,public  Amplitude Client use Advertising Id For Device Id (  ) { this . use Advertising Id For Device Id = true ;  return this ; }
9874,"public static  Immutable Multiset<E> of ( E e1, E e2, E e3 ) { return copy From Elements ( e1, e2, e3 )  ; }"
9875,"public void x Point Position (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . x Point Position (  )  ; "" )  ; }"
9876,"public int compute Checksum (  )  throws IO Exception{  Adler32 adler32 = new  Adler32 (  )  ;  byte [  ]  buffer = new byte [ 8192 ]  ;  // positioned  Byte Buffers aren't thread safe  Byte Buffer data = this . data . duplicate (  )  ;  data . limit ( data . capacity (  )  )  ;  data . position ( CHECKSUM_OFFSET + CHECKSUM_SIZE )  ;  while  ( data . has Remaining (  )  )  {     int count =  Math . min ( buffer . length, data . remaining (  )  )  ;      data . get ( buffer, 0, count )  ;      adler32 . update ( buffer, 0, count )  ;  } return  ( int )  adler32 . get Value (  )  ; }"
9877,private void init Render Data (  ) { set Vertex Data (  )  ;  clear Renderables Pool (  )  ;  alloc Shader (  )  ;  reset Capacity (  )  ; }
9878,"private void process Use (  Register Spec def,  Ssa Insn use,  Escape Set esc Set,  Array List< Register Spec> reg Worklist ) { int use Opcode = use . get Opcode (  )  . get Opcode (  )  ;  switch ( use Opcode )  {     case  Reg Ops . MOVE:         //  Follow uses of the move by adding it to the worklist         esc Set . reg Set . set ( use . get Result (  )  . get Reg (  )  )  ;          reg Worklist . add ( use . get Result (  )  )  ;          break ;      case  Reg Ops . IF_EQ:     case  Reg Ops . IF_NE:     case  Reg Ops . CHECK_CAST:         //  Compared objects can't be replaced, so promote if necessary         if  ( esc Set . escape . compare To (  Escape State . METHOD )  < 0 )  {             esc Set . escape =  Escape State . METHOD ;          }         break ;      case  Reg Ops . APUT:         //  For array puts, check for a constant array index          Register Spec put Index = use . get Sources (  )  . get ( 2 )  ;          if  ( !put Index . get Type Bearer (  )  . is Constant (  )  )  {             //  If not constant, array can't be replaced             esc Set . replaceable Array = false ;          }     //  Intentional fallthrough     case  Reg Ops . PUT_FIELD:         //  Skip non-object puts          Register Spec put Value = use . get Sources (  )  . get ( 0 )  ;          if  ( put Value . get Type Bearer (  )  . get Basic Type (  )  !=  Type . BT_OBJECT )  {             break ;          }         esc Set . replaceable Array = false ;          //  Raise 1st object's escape state to 2nd if 2nd is higher          Register Spec List sources = use . get Sources (  )  ;          if  ( sources . get ( 0 )  . get Reg (  )  == def . get Reg (  )  )  {             int set Index = find Set Index ( sources . get ( 1 )  )  ;              if  ( set Index != lattice Values . size (  )  )  {                  Escape Set parent Set = lattice Values . get ( set Index )  ;                  add Edge ( parent Set, esc Set )  ;                  if  ( esc Set . escape . compare To ( parent Set . escape )  < 0 )  {                     esc Set . escape = parent Set . escape ;                  }             }         } else {             int set Index = find Set Index ( sources . get ( 0 )  )  ;              if  ( set Index != lattice Values . size (  )  )  {                  Escape Set child Set = lattice Values . get ( set Index )  ;                  add Edge ( esc Set, child Set )  ;                  if  ( child Set . escape . compare To ( esc Set . escape )  < 0 )  {                     child Set . escape = esc Set . escape ;                  }             }         }         break ;      case  Reg Ops . AGET:         //  For array gets, check for a constant array index          Register Spec get Index = use . get Sources (  )  . get ( 1 )  ;          if  ( !get Index . get Type Bearer (  )  . is Constant (  )  )  {             //  If not constant, array can't be replaced             esc Set . replaceable Array = false ;          }         break ;      case  Reg Ops . PUT_STATIC:         //  Static puts cause an object to escape globally         esc Set . escape =  Escape State . GLOBAL ;          break ;      case  Reg Ops . INVOKE_STATIC:     case  Reg Ops . INVOKE_VIRTUAL:     case  Reg Ops . INVOKE_SUPER:     case  Reg Ops . INVOKE_DIRECT:     case  Reg Ops . INVOKE_INTERFACE:     case  Reg Ops . RETURN:     case  Reg Ops . THROW:         //  These operations cause an object to escape interprocedurally         esc Set . escape =  Escape State . INTER ;          break ;      default:         break ;  }}"
9879,"protected void string Element ( int id,  String value )  throws  Parser Exception{ switch ( id )  {     case ID_DOC_TYPE:         //  Validate that  Doc Type is supported .          if  ( !DOC_TYPE_WEBM . equals ( value )  && !DOC_TYPE_MATROSKA . equals ( value )  )  {             throw new  Parser Exception ( "" Doc Type "" + value + "" not supported"" )  ;          }         break ;      case ID_NAME:         current Track . name = value ;          break ;      case ID_CODEC_ID:         current Track . codec Id = value ;          break ;      case ID_LANGUAGE:         current Track . language = value ;          break ;      default:         break ;  }}"
9880,"public static  Path from Url ( URL url ) { try {     switch ( url . get Protocol (  )  )  {         case ""file"":             return  Paths . get ( url . to URI (  )  )  ;          case ""jar"":              String [  ]  parts = url . get Path (  )  . split ( ""!"", 0 )  ;               Path jar File =  Paths . get ( new URI ( parts [ 0 ]  )  . to URL (  )  . get File (  )  )  ;               File System fs = get Jar Fs ( jar File )  ;              return fs . get Path ( parts [ 1 ]  . substring ( 1 )  )  ;          default:             throw new  Illegal Argument Exception ( ""unsupported fs type for '"" + url + ""'"" )  ;      } } catch  (  Exception e )  {     throw new  Runtime Exception ( "" Failed to resolve path from "" + url, e )  ;  }}"
9881,"protected static void validate (  Class<? extends  Annotation> annotation,  Annotation ignored, int value ) { if  (  ( ""android . annotation"" . equals ( annotation . get Package (  )  . get Name (  )  )  && annotation . get Simple Name (  )  . ends With ( "" Res"" )  )  ||  Color Int . class . equals ( annotation )  )  {     if  ( value < 0 )  {         reflector (  Reflector Annotation Validations . class )  . invalid ( annotation, value )  ;      } }}"
9882,"public int get Color (  ) { return  Color . HSV To Color ( m Alpha, new float [  ]  { m Hue, m Sat, m Val } )  ; }"
9883,public void unbind (  ) {}
9884,private static void ensure Strict Mode (  ) { if  ( strict Mode Enabled )  {     return ;  } strict Mode Enabled = true ;   Strict Mode . set Vm Policy ( new  Strict Mode .  Vm Policy .  Builder (  )  . detect Leaked Sql Lite Objects (  )  . detect Leaked Closable Objects (  )  . penalty Log (  )  . penalty Death (  )  . build (  )  )  ; }
9885,"void add To Selected (  ) {  Preconditions . check State ( valid (  )  )  ;   Preconditions . check State ( !selected Edges . contains Key ( lhs Vertex (  )  )  )  ;   Preconditions . check State ( !selected Edges . contains Value ( rhs Vertex (  )  )  )  ;  selected Edges . put ( lhs Vertex (  ) , rhs Vertex (  )  )  ; }"
9886,public boolean is Valid (  ) { if  ( realm == null || realm . is Closed (  )  )  /* this includes thread checking */ {     return false ;  } if  ( os List != null )  {     return os List . is Valid (  )  ;  } return table != null && table . is Valid (  )  ; }
9887,"public com . anychart . core . ui .  Callout items (  String [  ]  items List ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . items ( %s )  ; "", array To String Wrap Quotes ( items List )  )  )  ;  return this ; }"
9888,public void set Listener (  Connectable Device Listener listener ) { listeners = new  Copy On Write Array List< Connectable Device Listener> (  )  ;  if  ( listener != null )      listeners . add ( listener )  ; }
9889,public boolean is Enable For Code (  ) { return enable For Code ; }
9890,"public  Component Assert has No Sub Components (  ) { final  List< Sub Component> sub Components =  Component Test Helper . get Sub Components ( m Component Context, actual )  ;   Java6 Assertions . assert That ( sub Components )  . overriding Error Message ( "" Expected  Component not to have any sub "" + ""components, but found %d . "", sub Components . size (  )  )  . is Empty (  )  ;  return this ; }"
9891,"public void send (  String text )  throws  Websocket Not Connected Exception{ if  ( text == null )      throw new  Illegal Argument Exception ( "" Cannot send 'null' data to a  Web Socket Impl . "" )  ;  send ( draft . create Frames ( text, role ==  Role . CLIENT )  )  ; }"
9892,private boolean is On ( long flag ) { return  ( options & flag )  > 0 ; }
9893,"public static  Class<?> framework Class (  Request Kind request Kind ) {  Class<?> result = FRAMEWORK_CLASSES . get ( request Kind )  ;  check Argument ( result != null, ""no framework class for %s"", request Kind )  ;  return result ; }"
9894,public void set Change Alpha When Disable ( boolean change Alpha When Disable ) { get Alpha View Helper (  )  . set Change Alpha When Disable ( change Alpha When Disable )  ; }
9895,"public com . anychart . graphics . vector .  Layer container (  ) { return new com . anychart . graphics . vector .  Layer ( js Base + "" . container (  ) "" )  ; }"
9896,public void on Animation Start (  Animator animation ) { if  ( m Rule ==  Dependency . WITH )  {     start If Ready ( animation )  ;  }}
9897,private static  String method Identifier ( @ Not Null U Call Expression node ) { U Element element = node . get Uast Parent (  )  ;  while  ( element != null )  {     if  ( element instanceof U Class )  {         break ;      }     element = element . get Uast Parent (  )  ;  } U Class u Class =  ( U Class )  element ;  if  ( u Class == null || node . get Method Name (  )  == null )  {     return null ;  } return u Class . get Name (  )  + COLON + node . get Method Name (  )  ; }
9898,"public  String get Current User Account (  ) { return ""sonic-junit-test"" ; }"
9899,"public void right (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . right (  )  ; "" )  ; }"
9900,public static  Http Request Info get Sent Http Request Info ( int index ) { return  Fake Http . get Fake Http Layer (  )  . get Sent Http Request Info ( index )  ; }
9901,public void reverse Animation Speed (  ) { lottie Drawable . reverse Animation Speed (  )  ; }
9902,public static void wait For All Connected ( long timeout )  throws  Interrupted Exception{ get Instance (  )  . wait For All Service Connected ( timeout )  ; }
9903,"public void set Column Weight ( @ Float Range ( from = 0, to = 1 )  float first Column Weight, @ Float Range ( from = 0, to = 1 )  float second Column Weight ) { this . first Column Weight = first Column Weight ;  this . second Column Weight = second Column Weight ;  this . third Column Weight = 0 ; }"
9904,"public static double round To Double ( long x,  Rounding Mode mode ) { //  Logic adapted from  To Double Rounder .  double round Arbitrarily =  ( double )  x ;  long round Arbitrarily As Long =  ( long )  round Arbitrarily ;  int cmp X To Round Arbitrarily ;  if  ( round Arbitrarily As Long ==  Long . MAX_VALUE )  {     /*    *  For most values, the conversion from round Arbitrarily to round Arbitrarily As Long is    * lossless .   In that case we can compare x to round Arbitrarily using  Longs . compare ( x,    * round Arbitrarily As Long )  .   The exception is for values where the conversion to double rounds    * up to give round Arbitrarily equal to 2^63, so the conversion back to long overflows and    * round Arbitrarily As Long is  Long . MAX_VALUE .   (  This is the only way this condition can occur as    * otherwise the conversion back to long pads with zero bits .  )   In this case we know that    * round Arbitrarily > x .   (  This is important when x ==  Long . MAX_VALUE ==    * round Arbitrarily As Long .  )     */     cmp X To Round Arbitrarily = -1 ;  } else {     cmp X To Round Arbitrarily =  Longs . compare ( x, round Arbitrarily As Long )  ;  } switch ( mode )  {     case UNNECESSARY:         check Rounding Unnecessary ( cmp X To Round Arbitrarily == 0 )  ;          return round Arbitrarily ;      case FLOOR:         return  ( cmp X To Round Arbitrarily >= 0 )  ? round Arbitrarily :  Double Utils . next Down ( round Arbitrarily )  ;      case CEILING:         return  ( cmp X To Round Arbitrarily <= 0 )  ? round Arbitrarily :  Math . next Up ( round Arbitrarily )  ;      case DOWN:         if  ( x >= 0 )  {             return  ( cmp X To Round Arbitrarily >= 0 )  ? round Arbitrarily :  Double Utils . next Down ( round Arbitrarily )  ;          } else {             return  ( cmp X To Round Arbitrarily <= 0 )  ? round Arbitrarily :  Math . next Up ( round Arbitrarily )  ;          }     case UP:         if  ( x >= 0 )  {             return  ( cmp X To Round Arbitrarily <= 0 )  ? round Arbitrarily :  Math . next Up ( round Arbitrarily )  ;          } else {             return  ( cmp X To Round Arbitrarily >= 0 )  ? round Arbitrarily :  Double Utils . next Down ( round Arbitrarily )  ;          }     case HALF_DOWN:     case HALF_UP:     case HALF_EVEN:         {             long round Floor ;              double round Floor As Double ;              long round Ceiling ;              double round Ceiling As Double ;              if  ( cmp X To Round Arbitrarily >= 0 )  {                 round Floor As Double = round Arbitrarily ;                  round Floor = round Arbitrarily As Long ;                  round Ceiling As Double =  Math . next Up ( round Arbitrarily )  ;                  round Ceiling =  ( long )   Math . ceil ( round Ceiling As Double )  ;              } else {                 round Ceiling As Double = round Arbitrarily ;                  round Ceiling = round Arbitrarily As Long ;                  round Floor As Double =  Double Utils . next Down ( round Arbitrarily )  ;                  round Floor =  ( long )   Math . floor ( round Floor As Double )  ;              }             long delta To Floor = x - round Floor ;              long delta To Ceiling = round Ceiling - x ;              if  ( round Ceiling ==  Long . MAX_VALUE )  {                 // correct for  Long . MAX_VALUE as discussed above: round Ceiling As Double must be 2^63, but                 // round Ceiling is 2^63-1 .                  delta To Ceiling++ ;              }             int diff =  Longs . compare ( delta To Floor, delta To Ceiling )  ;              if  ( diff < 0 )  {                 // closer to floor                 return round Floor As Double ;              } else if  ( diff > 0 )  {                 // closer to ceiling                 return round Ceiling As Double ;              }             // halfway between the representable values ;  do the half-whatever logic             switch ( mode )  {                 case HALF_EVEN:                     return  (  (  Double Utils . get Significand ( round Floor As Double )  & 1 L )  == 0 )  ? round Floor As Double : round Ceiling As Double ;                  case HALF_DOWN:                     return  ( x >= 0 )  ? round Floor As Double : round Ceiling As Double ;                  case HALF_UP:                     return  ( x >= 0 )  ? round Ceiling As Double : round Floor As Double ;                  default:                     throw new  Assertion Error ( ""impossible"" )  ;              }         } } throw new  Assertion Error ( ""impossible"" )  ; }"
9905,"protected int get Relative X (  Native Event e,  Canvas Element target ) { //  Correct for canvas CSS scaling float x Scale Ratio = target . get Width (  )  * 1f / target . get Client Width (  )  ;  return  Math . round ( x Scale Ratio *  ( e . get Client X (  )  - target . get Absolute Left (  )  + target . get Scroll Left (  )  + target . get Owner Document (  )  . get Scroll Left (  )  )  )  ; }"
9906,"public  Boolean get Use Detailed Untracked Header Messages (  ) { return delegate . get Boolean Value ( cxx Section, DETAILED_UNTRACKED_HEADER_MESSAGES, false )  ; }"
9907,public static  Rop op Aget (  Type Bearer type ) { switch ( type . get Basic Type (  )  )  {     case  Type . BT_INT:         return AGET_INT ;      case  Type . BT_LONG:         return AGET_LONG ;      case  Type . BT_FLOAT:         return AGET_FLOAT ;      case  Type . BT_DOUBLE:         return AGET_DOUBLE ;      case  Type . BT_OBJECT:         return AGET_OBJECT ;      case  Type . BT_BOOLEAN:         return AGET_BOOLEAN ;      case  Type . BT_BYTE:         return AGET_BYTE ;      case  Type . BT_CHAR:         return AGET_CHAR ;      case  Type . BT_SHORT:         return AGET_SHORT ;  } return throw Bad Type ( type )  ; }
9908,"public static void show Push Notification (  Context context,  Intent message Intent,  Mixpanel Push Notification mixpanel Push Notification ) {  Notification notification = mixpanel Push Notification . create Notification ( message Intent )  ;   Mixpanel Notification Data data = mixpanel Push Notification . get Data (  )  ;   String message = data == null ? ""null"" : data . get Message (  )  ;  MP Log . d ( LOGTAG, ""MP FCM notification received: "" + message )  ;  if  ( notification != null )  {     if  ( !mixpanel Push Notification . is Valid (  )  )  {         MP Log . e ( LOGTAG, ""MP FCM notification has error"" )  ;      }     final  Notification Manager notification Manager =  (  Notification Manager )  context . get System Service (  Context . NOTIFICATION_SERVICE )  ;      if  ( null != data . get Tag (  )  )  {         notification Manager . notify ( data . get Tag (  ) , NOTIFICATION_ID, notification )  ;      } else {         notification Manager . notify ( mixpanel Push Notification . get Notification Id (  ) , notification )  ;      } }}"
9909,"private  Dalv Code translate And Get Result (  ) { pick Order (  )  ;  output Instructions (  )  ;   Std Catch Builder catches = new  Std Catch Builder ( method, order, addresses )  ;  return new  Dalv Code ( position Info, output . get Finisher (  ) , catches )  ; }"
9910,protected boolean is Digit ( int c ) { return c >= '0' && c <= '9' ; }
9911,"public void min Height (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . min Height (  )  ; "" )  ; }"
9912,public T5 get Value5 (  ) { return value5 ; }
9913,public float get Pad X (  ) { return pad Left . get ( this )  + pad Right . get ( this )  ; }
9914,"public void set Initialized ( boolean initialized ) { reflector (  Reflector Audio Effect . class, audio Effect )  . set State ( initialized ? STATE_INITIALIZED : STATE_UNINITIALIZED )  ; }"
9915,"public  Cache Builder<K, V> expire After Access ( long duration,  Time Unit unit ) { check State ( expire After Access Nanos == UNSET_INT, ""expire After Access was already set to %s ns"", expire After Access Nanos )  ;  check Argument ( duration >= 0, ""duration cannot be negative: %s %s"", duration, unit )  ;  this . expire After Access Nanos = unit . to Nanos ( duration )  ;  return this ; }"
9916,public  String get Font Path (  String font Family ) { return null ; }
9917,public boolean is Visibility Internal (  Type Element type ) { return has Metadata ( type )  && metadata Factory . create ( type )  . class Metadata (  )  . flags (  Flag . IS_INTERNAL )  ; }
9918,"void set If Rating Dialog Is Cancellable Internal ( final  Countly Store cs, final boolean is Cancellable ) {  Star Rating Preferences srp = load Star Rating Preferences ( cs )  ;  srp . is Dialog Cancellable = is Cancellable ;  save Star Rating Preferences ( cs, srp )  ; }"
9919,"public static  Attributes get Attributes For Path (  Repository db,  String path )  throws IO Exception{ try  (  Tree Walk walk = new  Tree Walk ( db )  )  {     walk . add Tree ( new  File Tree Iterator ( db )  )  ;       Path Filter f =  Path Filter . create ( path )  ;      walk . set Filter ( f )  ;      walk . set Recursive ( false )  ;       Attributes attr = null ;      while  ( walk . next (  )  )  {         if  ( f . is Done ( walk )  )  {             attr = walk . get Attributes (  )  ;              break ;          } else if  ( walk . is Subtree (  )  )  {             walk . enter Subtree (  )  ;          }     }     if  ( attr == null )  {         throw new IO Exception (  Message Format . format ( J Git Text . get (  )  . no Path Attributes Found, path )  )  ;      }     return attr ;  }}"
9920,"public void log In With Publish Permissions (  Activity activity,  Collection< String> permissions ) { validate Publish Permissions ( permissions )  ;  log In ( activity, permissions )  ; }"
9921,"public void calculation Mode (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . calculation Mode (  )  ; "" )  ; }"
9922,public void set Header Second Text (  Char Sequence second Text ) { if  ( is Drop Down Style )  {     if  ( second Text == null )  {         header Second Text . set Visibility (  View . GONE )  ;      } else {         header Second Text . set Visibility (  View . VISIBLE )  ;          header Second Text . set Text ( second Text )  ;      } }}
9923,"public com . anychart . charts .  Linear Gauge select Marquee Fill ( com . anychart . graphics . vector .  Gradient Key keys,  Number angle,  Boolean mode,  Number opacity ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . select Marquee Fill ( %s, %s, %s, %s )  ; "",  ( keys != null )  ? keys . get Js Base (  )  : null, angle, mode, opacity )  )  ;  return this ; }"
9924,Collection< Exception Handler Setup> get Setups (  ) { return setups . values (  )  ; }
9925,"public  Layout Params generate Top Bar Image Button Layout Params ( int icon Width, int icon Height ) { icon Height = icon Height > 0 ? icon Height : m Top Bar Image Btn Height ;   Layout Params lp = new  Layout Params ( icon Width > 0 ? icon Width : m Top Bar Image Btn Width, icon Height )  ;  lp . top Margin =  Math . max ( 0,  ( get Top Bar Height (  )  - icon Height )  / 2 )  ;  return lp ; }"
9926,public  Rectangle set Height ( float height ) { this . height = height ;  return this ; }
9927,public void add Pan Listener (  Pan Listener listener ) { m Touch Handler . add Pan Listener ( listener )  ; }
9928,"public void is Full Screen Available (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . is Full Screen Available (  )  ; "" )  ; }"
9929,"public void overlap Mode (  ) { AP Ilib . get Instance (  )  . add JS Line ( js Base + "" . overlap Mode (  )  ; "" )  ; }"
9930,"public synchronized long discard To ( long time Us, boolean to Keyframe, boolean stop At Read Position ) { if  ( length == 0 || time Us < times Us [ relative First Index ]  )  {     return C . POSITION_UNSET ;  } int search Length = stop At Read Position && read Position != length ? read Position + 1 : length ;  int discard Count = find Sample Before ( relative First Index, search Length, time Us, to Keyframe )  ;  if  ( discard Count == -1 )  {     return C . POSITION_UNSET ;  } return discard Samples ( discard Count )  ; }"
9931,"int find Min Grand Child ( int index ) { int left Child Index = get Left Child Index ( index )  ;  if  ( left Child Index < 0 )  {     return -1 ;  } return find Min ( get Left Child Index ( left Child Index ) , 4 )  ; }"
9932,"public  Group Prop Multiple Supported Attribute Same Name Model View Model_ on Visibility State Changed (  On Model Visibility State Changed Listener< Group Prop Multiple Supported Attribute Same Name Model View Model_,  Group Prop Multiple Supported Attribute Same Name Model View> listener ) { on Mutation (  )  ;  this . on Model Visibility State Changed Listener_epoxy Generated Model = listener ;  return this ; }"
9933,"public static boolean has Valid Signature (  Process Executor process Executor,  Path path )  throws  Interrupted Exception, IO Exception{  Process Executor Params process Executor Params =  Process Executor Params . builder (  )  . set Command (  Immutable List . of ( ""codesign"", ""--verify"", ""-v"", path . to String (  )  )  )  . build (  )  ;  //  Specify that stdout is expected, or else output may be wrapped in  Ansi escape chars .   Set< Process Executor .  Option> options =  Enum Set . of (  Process Executor .  Option . EXPECTING_STD_OUT,  Process Executor .  Option . IS_SILENT )  ;   Process Executor .  Result result = process Executor . launch And Execute ( process Executor Params, options, /* stdin */  Optional . empty (  ) , /* time Out Ms */  Optional . empty (  ) , /* time Out Handler */  Optional . empty (  )  )  ;  return result . get Exit Code (  )  == 0 && result . get Stderr (  )  . is Present (  )  && result . get Stderr (  )  . get (  )  . contains ( "": satisfies its  Designated  Requirement"" )  ; }"
9934,"public static  Authorization Exception from O Auth Redirect ( @ Non Null  Uri redirect Uri ) {  String error = redirect Uri . get Query Parameter ( PARAM_ERROR )  ;   String error Description = redirect Uri . get Query Parameter ( PARAM_ERROR_DESCRIPTION )  ;   String error Uri = redirect Uri . get Query Parameter ( PARAM_ERROR_URI )  ;   Authorization Exception base =  Authorization Request Errors . by String ( error )  ;  return new  Authorization Exception ( base . type, base . code, error, error Description != null ? error Description : base . error Description, error Uri != null ?  Uri . parse ( error Uri )  : base . error Uri, null )  ; }"
9935,public void apply Params (  ) { m Vertex Shader . set Color ( m Color )  ;  m Vertex Shader . set Time ( m Time )  ;  m Vertex Shader . apply Params (  )  ;  m Fragment Shader . set Color Influence ( m Color Influence )  ;  m Fragment Shader . apply Params (  )  ; }
9936,"public com . anychart . core . stock . scrollerseries .  Spline max Height (  Number height ) { AP Ilib . get Instance (  )  . add JS Line (  String . format (  Locale . US, js Base + "" . max Height ( %s )  ; "", height )  )  ;  return this ; }"
9937,public static void clear Wake Locks (  ) { latest Wake Lock = null ; }
9938,public  Retrofit2 Converter Factory set Serialize Config (  Serialize Config serialize Config ) { fast Json Config . set Serialize Config ( serialize Config )  ;  return this ; }
9939,"static boolean safe Contains (  Collection<?> collection, @ Nullable  Object object ) { check Not Null ( collection )  ;  try {     return collection . contains ( object )  ;  } catch  (  Class Cast Exception |  Null Pointer Exception e )  {     return false ;  }}"
9940,"public static  Scriptable to Object (  Scriptable scope,  Object val,  Class<?> static Class ) { if  ( val instanceof  Scriptable )  {     return  (  Scriptable )  val ;  } return to Object (  Context . get Context (  ) , scope, val )  ; }"
9941,"private  Array List< Position List .  Entry> build Sorted Positions (  ) { int sz =  ( positions == null )  ? 0 : positions . size (  )  ;   Array List< Position List .  Entry> result = new  Array List ( sz )  ;  for  ( int i = 0 ;  i < sz ;  i++ )  {     result . add ( positions . get ( i )  )  ;  } //  Sort ascending by address .   Collections . sort ( result, new  Comparator< Position List .  Entry> (  )  {     public int compare (  Position List .  Entry a,  Position List .  Entry b )  {         return a . get Address (  )  - b . get Address (  )  ;      }     public boolean equals (  Object obj )  {         return obj == this ;      } } )  ;  return result ; }"
9942,public  Repository get Repository (  ) { return repository ; }
9943,"public E copy To Realm ( E object,  Import Flag .  .  .  flags ) { check Not Null Object ( object )  ;  return copy Or Update ( object, false, new  Hash Map<> (  ) ,  Util . to Set ( flags )  )  ; }"
9944,protected boolean is Device Secure ( int user Id ) { return device Secure For Users . contains ( user Id )  ; }
9945,"public  Quaternion slerp ( @ Non Null  Quaternion start, @ Non Null  Quaternion end, @ Float Range ( from = 0, to = 1 )  double t, boolean shortest Path ) { //  Check for equality and skip operation .  if  ( equals ( end )  )  {     return this ;  } double result = start . dot ( end )  ;  if  ( shortest Path && result < 0 . 0f )  {     end . x = -end . x ;      end . y = -end . y ;      end . z = -end . z ;      end . w = -end . w ;      result = -result ;  } double scale0 = 1 - t ;  double scale1 = t ;  if  ( !shortest Path ||  ( 1 - result )  > 0 . 1 )  {     double theta =  Math . acos ( result )  ;      double inv Sin Theta = 1 /  Math . sin ( theta )  ;      scale0 =  Math . sin (  ( 1 - t )  * theta )  * inv Sin Theta ;      scale1 =  Math . sin (  ( t * theta )  )  * inv Sin Theta ;  } x =  ( scale0 * start . x )  +  ( scale1 * end . x )  ;  y =  ( scale0 * start . y )  +  ( scale1 * end . y )  ;  z =  ( scale0 * start . z )  +  ( scale1 * end . z )  ;  w =  ( scale0 * start . w )  +  ( scale1 * end . w )  ;  normalize (  )  ;  return this ; }"
